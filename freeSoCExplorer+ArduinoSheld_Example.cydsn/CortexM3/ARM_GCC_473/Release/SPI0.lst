ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"SPI0.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SPI0_Enable,"ax",%progbits
  19              		.align	1
  20              		.global	SPI0_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	SPI0_Enable, %function
  24              	SPI0_Enable:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\SPI0.c"
   1:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/SPI0.c **** * File Name: SPI0.c
   3:.\Generated_Source\PSoC5/SPI0.c **** * Version 2.40
   4:.\Generated_Source\PSoC5/SPI0.c **** *
   5:.\Generated_Source\PSoC5/SPI0.c **** * Description:
   6:.\Generated_Source\PSoC5/SPI0.c **** *  This file provides all API functionality of the SPI Master component.
   7:.\Generated_Source\PSoC5/SPI0.c **** *
   8:.\Generated_Source\PSoC5/SPI0.c **** * Note:
   9:.\Generated_Source\PSoC5/SPI0.c **** *  None.
  10:.\Generated_Source\PSoC5/SPI0.c **** *
  11:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/SPI0.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/SPI0.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/SPI0.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/SPI0.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/SPI0.c **** 
  18:.\Generated_Source\PSoC5/SPI0.c **** #include "SPI0_PVT.h"
  19:.\Generated_Source\PSoC5/SPI0.c **** 
  20:.\Generated_Source\PSoC5/SPI0.c **** #if(SPI0_TX_SOFTWARE_BUF_ENABLED)
  21:.\Generated_Source\PSoC5/SPI0.c ****     volatile uint8 SPI0_txBuffer[SPI0_TX_BUFFER_SIZE] = {0u};
  22:.\Generated_Source\PSoC5/SPI0.c ****     volatile uint8 SPI0_txBufferFull;
  23:.\Generated_Source\PSoC5/SPI0.c ****     volatile uint8 SPI0_txBufferRead;
  24:.\Generated_Source\PSoC5/SPI0.c ****     volatile uint8 SPI0_txBufferWrite;
  25:.\Generated_Source\PSoC5/SPI0.c **** #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
  26:.\Generated_Source\PSoC5/SPI0.c **** 
  27:.\Generated_Source\PSoC5/SPI0.c **** #if(SPI0_RX_SOFTWARE_BUF_ENABLED)
  28:.\Generated_Source\PSoC5/SPI0.c ****     volatile uint8 SPI0_rxBuffer[SPI0_RX_BUFFER_SIZE] = {0u};
  29:.\Generated_Source\PSoC5/SPI0.c ****     volatile uint8 SPI0_rxBufferFull;
  30:.\Generated_Source\PSoC5/SPI0.c ****     volatile uint8 SPI0_rxBufferRead;
  31:.\Generated_Source\PSoC5/SPI0.c ****     volatile uint8 SPI0_rxBufferWrite;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 2


  32:.\Generated_Source\PSoC5/SPI0.c **** #endif /* (SPI0_RX_SOFTWARE_BUF_ENABLED) */
  33:.\Generated_Source\PSoC5/SPI0.c **** 
  34:.\Generated_Source\PSoC5/SPI0.c **** uint8 SPI0_initVar = 0u;
  35:.\Generated_Source\PSoC5/SPI0.c **** 
  36:.\Generated_Source\PSoC5/SPI0.c **** volatile uint8 SPI0_swStatusTx;
  37:.\Generated_Source\PSoC5/SPI0.c **** volatile uint8 SPI0_swStatusRx;
  38:.\Generated_Source\PSoC5/SPI0.c **** 
  39:.\Generated_Source\PSoC5/SPI0.c **** 
  40:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
  41:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_Init
  42:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
  43:.\Generated_Source\PSoC5/SPI0.c **** *
  44:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
  45:.\Generated_Source\PSoC5/SPI0.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:.\Generated_Source\PSoC5/SPI0.c **** *
  47:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
  48:.\Generated_Source\PSoC5/SPI0.c **** *  None.
  49:.\Generated_Source\PSoC5/SPI0.c **** *
  50:.\Generated_Source\PSoC5/SPI0.c **** * Return:
  51:.\Generated_Source\PSoC5/SPI0.c **** *  None.
  52:.\Generated_Source\PSoC5/SPI0.c **** *
  53:.\Generated_Source\PSoC5/SPI0.c **** * Side Effects:
  54:.\Generated_Source\PSoC5/SPI0.c **** *  When this function is called it initializes all of the necessary parameters
  55:.\Generated_Source\PSoC5/SPI0.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:.\Generated_Source\PSoC5/SPI0.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:.\Generated_Source\PSoC5/SPI0.c **** *  clearing the FIFO and Status Register.
  58:.\Generated_Source\PSoC5/SPI0.c **** *
  59:.\Generated_Source\PSoC5/SPI0.c **** * Reentrant:
  60:.\Generated_Source\PSoC5/SPI0.c **** *  No.
  61:.\Generated_Source\PSoC5/SPI0.c **** *
  62:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_Init(void) 
  64:.\Generated_Source\PSoC5/SPI0.c **** {
  65:.\Generated_Source\PSoC5/SPI0.c ****     /* Initialize the Bit counter */
  66:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_COUNTER_PERIOD_REG = SPI0_BITCTR_INIT;
  67:.\Generated_Source\PSoC5/SPI0.c **** 
  68:.\Generated_Source\PSoC5/SPI0.c ****     /* Init TX ISR  */
  69:.\Generated_Source\PSoC5/SPI0.c ****     #if(0u != SPI0_INTERNAL_TX_INT_ENABLED)
  70:.\Generated_Source\PSoC5/SPI0.c ****         CyIntDisable         (SPI0_TX_ISR_NUMBER);
  71:.\Generated_Source\PSoC5/SPI0.c ****         CyIntSetPriority     (SPI0_TX_ISR_NUMBER,  SPI0_TX_ISR_PRIORITY);
  72:.\Generated_Source\PSoC5/SPI0.c ****         (void) CyIntSetVector(SPI0_TX_ISR_NUMBER, &SPI0_TX_ISR);
  73:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_TX_INT_ENABLED) */
  74:.\Generated_Source\PSoC5/SPI0.c **** 
  75:.\Generated_Source\PSoC5/SPI0.c ****     /* Init RX ISR  */
  76:.\Generated_Source\PSoC5/SPI0.c ****     #if(0u != SPI0_INTERNAL_RX_INT_ENABLED)
  77:.\Generated_Source\PSoC5/SPI0.c ****         CyIntDisable         (SPI0_RX_ISR_NUMBER);
  78:.\Generated_Source\PSoC5/SPI0.c ****         CyIntSetPriority     (SPI0_RX_ISR_NUMBER,  SPI0_RX_ISR_PRIORITY);
  79:.\Generated_Source\PSoC5/SPI0.c ****         (void) CyIntSetVector(SPI0_RX_ISR_NUMBER, &SPI0_RX_ISR);
  80:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_RX_INT_ENABLED) */
  81:.\Generated_Source\PSoC5/SPI0.c **** 
  82:.\Generated_Source\PSoC5/SPI0.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_ClearFIFO();
  84:.\Generated_Source\PSoC5/SPI0.c **** 
  85:.\Generated_Source\PSoC5/SPI0.c ****     #if(SPI0_RX_SOFTWARE_BUF_ENABLED)
  86:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_rxBufferFull  = 0u;
  87:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_rxBufferRead  = 0u;
  88:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_rxBufferWrite = 0u;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 3


  89:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (SPI0_RX_SOFTWARE_BUF_ENABLED) */
  90:.\Generated_Source\PSoC5/SPI0.c **** 
  91:.\Generated_Source\PSoC5/SPI0.c ****     #if(SPI0_TX_SOFTWARE_BUF_ENABLED)
  92:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_txBufferFull  = 0u;
  93:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_txBufferRead  = 0u;
  94:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_txBufferWrite = 0u;
  95:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
  96:.\Generated_Source\PSoC5/SPI0.c **** 
  97:.\Generated_Source\PSoC5/SPI0.c ****     (void) SPI0_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  98:.\Generated_Source\PSoC5/SPI0.c ****     (void) SPI0_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  99:.\Generated_Source\PSoC5/SPI0.c **** 
 100:.\Generated_Source\PSoC5/SPI0.c ****     /* Configure TX and RX interrupt mask */
 101:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_TX_STATUS_MASK_REG = SPI0_TX_INIT_INTERRUPTS_MASK;
 102:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_RX_STATUS_MASK_REG = SPI0_RX_INIT_INTERRUPTS_MASK;
 103:.\Generated_Source\PSoC5/SPI0.c **** }
 104:.\Generated_Source\PSoC5/SPI0.c **** 
 105:.\Generated_Source\PSoC5/SPI0.c **** 
 106:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 107:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_Enable
 108:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 109:.\Generated_Source\PSoC5/SPI0.c **** *
 110:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 111:.\Generated_Source\PSoC5/SPI0.c **** *  Enable SPIM component.
 112:.\Generated_Source\PSoC5/SPI0.c **** *
 113:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 114:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 115:.\Generated_Source\PSoC5/SPI0.c **** *
 116:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 117:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 118:.\Generated_Source\PSoC5/SPI0.c **** *
 119:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 120:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_Enable(void) 
 121:.\Generated_Source\PSoC5/SPI0.c **** {
  27              		.loc 1 121 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 122:.\Generated_Source\PSoC5/SPI0.c ****     uint8 enableInterrupts;
 123:.\Generated_Source\PSoC5/SPI0.c **** 
 124:.\Generated_Source\PSoC5/SPI0.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 124 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
 125:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_COUNTER_CONTROL_REG |= SPI0_CNTR_ENABLE;
  39              		.loc 1 125 0
  40 0006 0B4B     		ldr	r3, .L2
  41 0008 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
  42 000a 42F02001 		orr	r1, r2, #32
  43 000e 1970     		strb	r1, [r3, #0]
 126:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_TX_STATUS_ACTL_REG  |= SPI0_INT_ENABLE;
  44              		.loc 1 126 0
  45 0010 93F8FF20 		ldrb	r2, [r3, #255]	@ zero_extendqisi2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 4


  46 0014 42F01001 		orr	r1, r2, #16
  47 0018 83F8FF10 		strb	r1, [r3, #255]
 127:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_RX_STATUS_ACTL_REG  |= SPI0_INT_ENABLE;
  48              		.loc 1 127 0
  49 001c 93F80021 		ldrb	r2, [r3, #256]	@ zero_extendqisi2
  50 0020 42F01001 		orr	r1, r2, #16
  51 0024 83F80011 		strb	r1, [r3, #256]
 128:.\Generated_Source\PSoC5/SPI0.c ****     CyExitCriticalSection(enableInterrupts);
  52              		.loc 1 128 0
  53 0028 FFF7FEFF 		bl	CyExitCriticalSection
  54              	.LVL1:
 129:.\Generated_Source\PSoC5/SPI0.c **** 
 130:.\Generated_Source\PSoC5/SPI0.c ****     #if(0u != SPI0_INTERNAL_CLOCK)
 131:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_IntClock_Enable();
 132:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_CLOCK) */
 133:.\Generated_Source\PSoC5/SPI0.c **** 
 134:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_EnableTxInt();
 135:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_EnableRxInt();
 136:.\Generated_Source\PSoC5/SPI0.c **** }
  55              		.loc 1 136 0
  56 002c BDE80840 		pop	{r3, lr}
 131:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_IntClock_Enable();
  57              		.loc 1 131 0
  58 0030 FFF7FEBF 		b	SPI0_IntClock_Start
  59              	.LVL2:
  60              	.L3:
  61              		.align	2
  62              	.L2:
  63 0034 96640040 		.word	1073767574
  64              		.cfi_endproc
  65              	.LFE1:
  66              		.size	SPI0_Enable, .-SPI0_Enable
  67              		.section	.text.SPI0_Stop,"ax",%progbits
  68              		.align	1
  69              		.global	SPI0_Stop
  70              		.thumb
  71              		.thumb_func
  72              		.type	SPI0_Stop, %function
  73              	SPI0_Stop:
  74              	.LFB3:
 137:.\Generated_Source\PSoC5/SPI0.c **** 
 138:.\Generated_Source\PSoC5/SPI0.c **** 
 139:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 140:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_Start
 141:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 142:.\Generated_Source\PSoC5/SPI0.c **** *
 143:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 144:.\Generated_Source\PSoC5/SPI0.c **** *  Initialize and Enable the SPI Master component.
 145:.\Generated_Source\PSoC5/SPI0.c **** *
 146:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 147:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 148:.\Generated_Source\PSoC5/SPI0.c **** *
 149:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 150:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 151:.\Generated_Source\PSoC5/SPI0.c **** *
 152:.\Generated_Source\PSoC5/SPI0.c **** * Global variables:
 153:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_initVar - used to check initial configuration, modified on
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 5


 154:.\Generated_Source\PSoC5/SPI0.c **** *  first function call.
 155:.\Generated_Source\PSoC5/SPI0.c **** *
 156:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
 157:.\Generated_Source\PSoC5/SPI0.c **** *  Enable the clock input to enable operation.
 158:.\Generated_Source\PSoC5/SPI0.c **** *
 159:.\Generated_Source\PSoC5/SPI0.c **** * Reentrant:
 160:.\Generated_Source\PSoC5/SPI0.c **** *  No.
 161:.\Generated_Source\PSoC5/SPI0.c **** *
 162:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 163:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_Start(void) 
 164:.\Generated_Source\PSoC5/SPI0.c **** {
 165:.\Generated_Source\PSoC5/SPI0.c ****     if(0u == SPI0_initVar)
 166:.\Generated_Source\PSoC5/SPI0.c ****     {
 167:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_Init();
 168:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_initVar = 1u;
 169:.\Generated_Source\PSoC5/SPI0.c ****     }
 170:.\Generated_Source\PSoC5/SPI0.c **** 
 171:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_Enable();
 172:.\Generated_Source\PSoC5/SPI0.c **** }
 173:.\Generated_Source\PSoC5/SPI0.c **** 
 174:.\Generated_Source\PSoC5/SPI0.c **** 
 175:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 176:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_Stop
 177:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 178:.\Generated_Source\PSoC5/SPI0.c **** *
 179:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 180:.\Generated_Source\PSoC5/SPI0.c **** *  Disable the SPI Master component.
 181:.\Generated_Source\PSoC5/SPI0.c **** *
 182:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 183:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 184:.\Generated_Source\PSoC5/SPI0.c **** *
 185:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 186:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 187:.\Generated_Source\PSoC5/SPI0.c **** *
 188:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
 189:.\Generated_Source\PSoC5/SPI0.c **** *  Disable the clock input to enable operation.
 190:.\Generated_Source\PSoC5/SPI0.c **** *
 191:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 192:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_Stop(void) 
 193:.\Generated_Source\PSoC5/SPI0.c **** {
  75              		.loc 1 193 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 08B5     		push	{r3, lr}
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 3, -8
  83              		.cfi_offset 14, -4
 194:.\Generated_Source\PSoC5/SPI0.c ****     uint8 enableInterrupts;
 195:.\Generated_Source\PSoC5/SPI0.c **** 
 196:.\Generated_Source\PSoC5/SPI0.c ****     enableInterrupts = CyEnterCriticalSection();
  84              		.loc 1 196 0
  85 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  86              	.LVL3:
 197:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_TX_STATUS_ACTL_REG &= ((uint8) ~SPI0_INT_ENABLE);
  87              		.loc 1 197 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 6


  88 0006 074B     		ldr	r3, .L5
  89 0008 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
  90 000a 02F0EF01 		and	r1, r2, #239
  91 000e 1970     		strb	r1, [r3, #0]
 198:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_RX_STATUS_ACTL_REG &= ((uint8) ~SPI0_INT_ENABLE);
  92              		.loc 1 198 0
  93 0010 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
  94 0012 02F0EF01 		and	r1, r2, #239
  95 0016 5970     		strb	r1, [r3, #1]
 199:.\Generated_Source\PSoC5/SPI0.c ****     CyExitCriticalSection(enableInterrupts);
  96              		.loc 1 199 0
  97 0018 FFF7FEFF 		bl	CyExitCriticalSection
  98              	.LVL4:
 200:.\Generated_Source\PSoC5/SPI0.c **** 
 201:.\Generated_Source\PSoC5/SPI0.c ****     #if(0u != SPI0_INTERNAL_CLOCK)
 202:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_IntClock_Disable();
 203:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_CLOCK) */
 204:.\Generated_Source\PSoC5/SPI0.c **** 
 205:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_DisableTxInt();
 206:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_DisableRxInt();
 207:.\Generated_Source\PSoC5/SPI0.c **** }
  99              		.loc 1 207 0
 100 001c BDE80840 		pop	{r3, lr}
 202:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_IntClock_Disable();
 101              		.loc 1 202 0
 102 0020 FFF7FEBF 		b	SPI0_IntClock_Stop
 103              	.LVL5:
 104              	.L6:
 105              		.align	2
 106              	.L5:
 107 0024 95650040 		.word	1073767829
 108              		.cfi_endproc
 109              	.LFE3:
 110              		.size	SPI0_Stop, .-SPI0_Stop
 111              		.section	.text.SPI0_EnableTxInt,"ax",%progbits
 112              		.align	1
 113              		.global	SPI0_EnableTxInt
 114              		.thumb
 115              		.thumb_func
 116              		.type	SPI0_EnableTxInt, %function
 117              	SPI0_EnableTxInt:
 118              	.LFB4:
 208:.\Generated_Source\PSoC5/SPI0.c **** 
 209:.\Generated_Source\PSoC5/SPI0.c **** 
 210:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 211:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_EnableTxInt
 212:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 213:.\Generated_Source\PSoC5/SPI0.c **** *
 214:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 215:.\Generated_Source\PSoC5/SPI0.c **** *  Enable internal Tx interrupt generation.
 216:.\Generated_Source\PSoC5/SPI0.c **** *
 217:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 218:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 219:.\Generated_Source\PSoC5/SPI0.c **** *
 220:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 221:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 222:.\Generated_Source\PSoC5/SPI0.c **** *
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 7


 223:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
 224:.\Generated_Source\PSoC5/SPI0.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:.\Generated_Source\PSoC5/SPI0.c **** *
 226:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_EnableTxInt(void) 
 228:.\Generated_Source\PSoC5/SPI0.c **** {
 119              		.loc 1 228 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124 0000 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE4:
 127              		.size	SPI0_EnableTxInt, .-SPI0_EnableTxInt
 128              		.section	.text.SPI0_EnableRxInt,"ax",%progbits
 129              		.align	1
 130              		.global	SPI0_EnableRxInt
 131              		.thumb
 132              		.thumb_func
 133              		.type	SPI0_EnableRxInt, %function
 134              	SPI0_EnableRxInt:
 135              	.LFB5:
 229:.\Generated_Source\PSoC5/SPI0.c ****     #if(0u != SPI0_INTERNAL_TX_INT_ENABLED)
 230:.\Generated_Source\PSoC5/SPI0.c ****         CyIntEnable(SPI0_TX_ISR_NUMBER);
 231:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_TX_INT_ENABLED) */
 232:.\Generated_Source\PSoC5/SPI0.c **** }
 233:.\Generated_Source\PSoC5/SPI0.c **** 
 234:.\Generated_Source\PSoC5/SPI0.c **** 
 235:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 236:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_EnableRxInt
 237:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 238:.\Generated_Source\PSoC5/SPI0.c **** *
 239:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 240:.\Generated_Source\PSoC5/SPI0.c **** *  Enable internal Rx interrupt generation.
 241:.\Generated_Source\PSoC5/SPI0.c **** *
 242:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 243:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 244:.\Generated_Source\PSoC5/SPI0.c **** *
 245:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 246:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 247:.\Generated_Source\PSoC5/SPI0.c **** *
 248:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
 249:.\Generated_Source\PSoC5/SPI0.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:.\Generated_Source\PSoC5/SPI0.c **** *
 251:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 252:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_EnableRxInt(void) 
 253:.\Generated_Source\PSoC5/SPI0.c **** {
 136              		.loc 1 253 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 141 0000 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE5:
 144              		.size	SPI0_EnableRxInt, .-SPI0_EnableRxInt
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 8


 145              		.section	.text.SPI0_DisableTxInt,"ax",%progbits
 146              		.align	1
 147              		.global	SPI0_DisableTxInt
 148              		.thumb
 149              		.thumb_func
 150              		.type	SPI0_DisableTxInt, %function
 151              	SPI0_DisableTxInt:
 152              	.LFB6:
 254:.\Generated_Source\PSoC5/SPI0.c ****     #if(0u != SPI0_INTERNAL_RX_INT_ENABLED)
 255:.\Generated_Source\PSoC5/SPI0.c ****         CyIntEnable(SPI0_RX_ISR_NUMBER);
 256:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_RX_INT_ENABLED) */
 257:.\Generated_Source\PSoC5/SPI0.c **** }
 258:.\Generated_Source\PSoC5/SPI0.c **** 
 259:.\Generated_Source\PSoC5/SPI0.c **** 
 260:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 261:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_DisableTxInt
 262:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 263:.\Generated_Source\PSoC5/SPI0.c **** *
 264:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 265:.\Generated_Source\PSoC5/SPI0.c **** *  Disable internal Tx interrupt generation.
 266:.\Generated_Source\PSoC5/SPI0.c **** *
 267:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 268:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 269:.\Generated_Source\PSoC5/SPI0.c **** *
 270:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 271:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 272:.\Generated_Source\PSoC5/SPI0.c **** *
 273:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
 274:.\Generated_Source\PSoC5/SPI0.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:.\Generated_Source\PSoC5/SPI0.c **** *
 276:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 277:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_DisableTxInt(void) 
 278:.\Generated_Source\PSoC5/SPI0.c **** {
 153              		.loc 1 278 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE6:
 161              		.size	SPI0_DisableTxInt, .-SPI0_DisableTxInt
 162              		.section	.text.SPI0_DisableRxInt,"ax",%progbits
 163              		.align	1
 164              		.global	SPI0_DisableRxInt
 165              		.thumb
 166              		.thumb_func
 167              		.type	SPI0_DisableRxInt, %function
 168              	SPI0_DisableRxInt:
 169              	.LFB7:
 279:.\Generated_Source\PSoC5/SPI0.c ****     #if(0u != SPI0_INTERNAL_TX_INT_ENABLED)
 280:.\Generated_Source\PSoC5/SPI0.c ****         CyIntDisable(SPI0_TX_ISR_NUMBER);
 281:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_TX_INT_ENABLED) */
 282:.\Generated_Source\PSoC5/SPI0.c **** }
 283:.\Generated_Source\PSoC5/SPI0.c **** 
 284:.\Generated_Source\PSoC5/SPI0.c **** 
 285:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 9


 286:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_DisableRxInt
 287:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/SPI0.c **** *
 289:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 290:.\Generated_Source\PSoC5/SPI0.c **** *  Disable internal Rx interrupt generation.
 291:.\Generated_Source\PSoC5/SPI0.c **** *
 292:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 293:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 294:.\Generated_Source\PSoC5/SPI0.c **** *
 295:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 296:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 297:.\Generated_Source\PSoC5/SPI0.c **** *
 298:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
 299:.\Generated_Source\PSoC5/SPI0.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:.\Generated_Source\PSoC5/SPI0.c **** *
 301:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_DisableRxInt(void) 
 303:.\Generated_Source\PSoC5/SPI0.c **** {
 170              		.loc 1 303 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175 0000 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE7:
 178              		.size	SPI0_DisableRxInt, .-SPI0_DisableRxInt
 179              		.section	.text.SPI0_SetTxInterruptMode,"ax",%progbits
 180              		.align	1
 181              		.global	SPI0_SetTxInterruptMode
 182              		.thumb
 183              		.thumb_func
 184              		.type	SPI0_SetTxInterruptMode, %function
 185              	SPI0_SetTxInterruptMode:
 186              	.LFB8:
 304:.\Generated_Source\PSoC5/SPI0.c ****     #if(0u != SPI0_INTERNAL_RX_INT_ENABLED)
 305:.\Generated_Source\PSoC5/SPI0.c ****         CyIntDisable(SPI0_RX_ISR_NUMBER);
 306:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_RX_INT_ENABLED) */
 307:.\Generated_Source\PSoC5/SPI0.c **** }
 308:.\Generated_Source\PSoC5/SPI0.c **** 
 309:.\Generated_Source\PSoC5/SPI0.c **** 
 310:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 311:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_SetTxInterruptMode
 312:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 313:.\Generated_Source\PSoC5/SPI0.c **** *
 314:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 315:.\Generated_Source\PSoC5/SPI0.c **** *  Configure which status bits trigger an interrupt event.
 316:.\Generated_Source\PSoC5/SPI0.c **** *
 317:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 318:.\Generated_Source\PSoC5/SPI0.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:.\Generated_Source\PSoC5/SPI0.c **** *  header file).
 320:.\Generated_Source\PSoC5/SPI0.c **** *
 321:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 322:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 323:.\Generated_Source\PSoC5/SPI0.c **** *
 324:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
 325:.\Generated_Source\PSoC5/SPI0.c **** *  Enables the output of specific status bits to the interrupt controller.
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 10


 326:.\Generated_Source\PSoC5/SPI0.c **** *
 327:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 328:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_SetTxInterruptMode(uint8 intSrc) 
 329:.\Generated_Source\PSoC5/SPI0.c **** {
 187              		.loc 1 329 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 192              	.LVL6:
 330:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_TX_STATUS_MASK_REG = intSrc;
 193              		.loc 1 330 0
 194 0000 014B     		ldr	r3, .L12
 195 0002 1870     		strb	r0, [r3, #0]
 196 0004 7047     		bx	lr
 197              	.L13:
 198 0006 00BF     		.align	2
 199              	.L12:
 200 0008 85650040 		.word	1073767813
 201              		.cfi_endproc
 202              	.LFE8:
 203              		.size	SPI0_SetTxInterruptMode, .-SPI0_SetTxInterruptMode
 204              		.section	.text.SPI0_SetRxInterruptMode,"ax",%progbits
 205              		.align	1
 206              		.global	SPI0_SetRxInterruptMode
 207              		.thumb
 208              		.thumb_func
 209              		.type	SPI0_SetRxInterruptMode, %function
 210              	SPI0_SetRxInterruptMode:
 211              	.LFB9:
 331:.\Generated_Source\PSoC5/SPI0.c **** }
 332:.\Generated_Source\PSoC5/SPI0.c **** 
 333:.\Generated_Source\PSoC5/SPI0.c **** 
 334:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 335:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_SetRxInterruptMode
 336:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 337:.\Generated_Source\PSoC5/SPI0.c **** *
 338:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 339:.\Generated_Source\PSoC5/SPI0.c **** *  Configure which status bits trigger an interrupt event.
 340:.\Generated_Source\PSoC5/SPI0.c **** *
 341:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 342:.\Generated_Source\PSoC5/SPI0.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:.\Generated_Source\PSoC5/SPI0.c **** *  header file).
 344:.\Generated_Source\PSoC5/SPI0.c **** *
 345:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 346:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 347:.\Generated_Source\PSoC5/SPI0.c **** *
 348:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
 349:.\Generated_Source\PSoC5/SPI0.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:.\Generated_Source\PSoC5/SPI0.c **** *
 351:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 352:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_SetRxInterruptMode(uint8 intSrc) 
 353:.\Generated_Source\PSoC5/SPI0.c **** {
 212              		.loc 1 353 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 11


 216              		@ link register save eliminated.
 217              	.LVL7:
 354:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_RX_STATUS_MASK_REG  = intSrc;
 218              		.loc 1 354 0
 219 0000 014B     		ldr	r3, .L15
 220 0002 1870     		strb	r0, [r3, #0]
 221 0004 7047     		bx	lr
 222              	.L16:
 223 0006 00BF     		.align	2
 224              	.L15:
 225 0008 86650040 		.word	1073767814
 226              		.cfi_endproc
 227              	.LFE9:
 228              		.size	SPI0_SetRxInterruptMode, .-SPI0_SetRxInterruptMode
 229              		.section	.text.SPI0_ReadTxStatus,"ax",%progbits
 230              		.align	1
 231              		.global	SPI0_ReadTxStatus
 232              		.thumb
 233              		.thumb_func
 234              		.type	SPI0_ReadTxStatus, %function
 235              	SPI0_ReadTxStatus:
 236              	.LFB10:
 355:.\Generated_Source\PSoC5/SPI0.c **** }
 356:.\Generated_Source\PSoC5/SPI0.c **** 
 357:.\Generated_Source\PSoC5/SPI0.c **** 
 358:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 359:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_ReadTxStatus
 360:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 361:.\Generated_Source\PSoC5/SPI0.c **** *
 362:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 363:.\Generated_Source\PSoC5/SPI0.c **** *  Read the Tx status register for the component.
 364:.\Generated_Source\PSoC5/SPI0.c **** *
 365:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 366:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 367:.\Generated_Source\PSoC5/SPI0.c **** *
 368:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 369:.\Generated_Source\PSoC5/SPI0.c **** *  Contents of the Tx status register.
 370:.\Generated_Source\PSoC5/SPI0.c **** *
 371:.\Generated_Source\PSoC5/SPI0.c **** * Global variables:
 372:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_swStatusTx - used to store in software status register,
 373:.\Generated_Source\PSoC5/SPI0.c **** *  modified every function call - resets to zero.
 374:.\Generated_Source\PSoC5/SPI0.c **** *
 375:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
 376:.\Generated_Source\PSoC5/SPI0.c **** *  Allows the user and the API to read the Tx status register for error
 377:.\Generated_Source\PSoC5/SPI0.c **** *  detection and flow control.
 378:.\Generated_Source\PSoC5/SPI0.c **** *
 379:.\Generated_Source\PSoC5/SPI0.c **** * Side Effects:
 380:.\Generated_Source\PSoC5/SPI0.c **** *  Clear Tx status register of the component.
 381:.\Generated_Source\PSoC5/SPI0.c **** *
 382:.\Generated_Source\PSoC5/SPI0.c **** * Reentrant:
 383:.\Generated_Source\PSoC5/SPI0.c **** *  No.
 384:.\Generated_Source\PSoC5/SPI0.c **** *
 385:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 386:.\Generated_Source\PSoC5/SPI0.c **** uint8 SPI0_ReadTxStatus(void) 
 387:.\Generated_Source\PSoC5/SPI0.c **** {
 237              		.loc 1 387 0
 238              		.cfi_startproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 12


 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 388:.\Generated_Source\PSoC5/SPI0.c ****     uint8 tmpStatus;
 389:.\Generated_Source\PSoC5/SPI0.c **** 
 390:.\Generated_Source\PSoC5/SPI0.c ****     #if(SPI0_TX_SOFTWARE_BUF_ENABLED)
 391:.\Generated_Source\PSoC5/SPI0.c ****         /* Disable TX interrupt to protect global veriables */
 392:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_DisableTxInt();
 393:.\Generated_Source\PSoC5/SPI0.c **** 
 394:.\Generated_Source\PSoC5/SPI0.c ****         tmpStatus = SPI0_GET_STATUS_TX(SPI0_swStatusTx);
 395:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_swStatusTx = 0u;
 396:.\Generated_Source\PSoC5/SPI0.c **** 
 397:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_EnableTxInt();
 398:.\Generated_Source\PSoC5/SPI0.c **** 
 399:.\Generated_Source\PSoC5/SPI0.c ****     #else
 400:.\Generated_Source\PSoC5/SPI0.c **** 
 401:.\Generated_Source\PSoC5/SPI0.c ****         tmpStatus = SPI0_TX_STATUS_REG;
 242              		.loc 1 401 0
 243 0000 014B     		ldr	r3, .L18
 244 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 245              	.LVL8:
 402:.\Generated_Source\PSoC5/SPI0.c **** 
 403:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
 404:.\Generated_Source\PSoC5/SPI0.c **** 
 405:.\Generated_Source\PSoC5/SPI0.c ****     return(tmpStatus);
 406:.\Generated_Source\PSoC5/SPI0.c **** }
 246              		.loc 1 406 0
 247 0004 7047     		bx	lr
 248              	.L19:
 249 0006 00BF     		.align	2
 250              	.L18:
 251 0008 65650040 		.word	1073767781
 252              		.cfi_endproc
 253              	.LFE10:
 254              		.size	SPI0_ReadTxStatus, .-SPI0_ReadTxStatus
 255              		.section	.text.SPI0_ReadRxStatus,"ax",%progbits
 256              		.align	1
 257              		.global	SPI0_ReadRxStatus
 258              		.thumb
 259              		.thumb_func
 260              		.type	SPI0_ReadRxStatus, %function
 261              	SPI0_ReadRxStatus:
 262              	.LFB11:
 407:.\Generated_Source\PSoC5/SPI0.c **** 
 408:.\Generated_Source\PSoC5/SPI0.c **** 
 409:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_ReadRxStatus
 411:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 412:.\Generated_Source\PSoC5/SPI0.c **** *
 413:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 414:.\Generated_Source\PSoC5/SPI0.c **** *  Read the Rx status register for the component.
 415:.\Generated_Source\PSoC5/SPI0.c **** *
 416:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 417:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 418:.\Generated_Source\PSoC5/SPI0.c **** *
 419:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 420:.\Generated_Source\PSoC5/SPI0.c **** *  Contents of the Rx status register.
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 13


 421:.\Generated_Source\PSoC5/SPI0.c **** *
 422:.\Generated_Source\PSoC5/SPI0.c **** * Global variables:
 423:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_swStatusRx - used to store in software Rx status register,
 424:.\Generated_Source\PSoC5/SPI0.c **** *  modified every function call - resets to zero.
 425:.\Generated_Source\PSoC5/SPI0.c **** *
 426:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
 427:.\Generated_Source\PSoC5/SPI0.c **** *  Allows the user and the API to read the Rx status register for error
 428:.\Generated_Source\PSoC5/SPI0.c **** *  detection and flow control.
 429:.\Generated_Source\PSoC5/SPI0.c **** *
 430:.\Generated_Source\PSoC5/SPI0.c **** * Side Effects:
 431:.\Generated_Source\PSoC5/SPI0.c **** *  Clear Rx status register of the component.
 432:.\Generated_Source\PSoC5/SPI0.c **** *
 433:.\Generated_Source\PSoC5/SPI0.c **** * Reentrant:
 434:.\Generated_Source\PSoC5/SPI0.c **** *  No.
 435:.\Generated_Source\PSoC5/SPI0.c **** *
 436:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 437:.\Generated_Source\PSoC5/SPI0.c **** uint8 SPI0_ReadRxStatus(void) 
 438:.\Generated_Source\PSoC5/SPI0.c **** {
 263              		.loc 1 438 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 439:.\Generated_Source\PSoC5/SPI0.c ****     uint8 tmpStatus;
 440:.\Generated_Source\PSoC5/SPI0.c **** 
 441:.\Generated_Source\PSoC5/SPI0.c ****     #if(SPI0_RX_SOFTWARE_BUF_ENABLED)
 442:.\Generated_Source\PSoC5/SPI0.c ****         /* Disable RX interrupt to protect global veriables */
 443:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_DisableRxInt();
 444:.\Generated_Source\PSoC5/SPI0.c **** 
 445:.\Generated_Source\PSoC5/SPI0.c ****         tmpStatus = SPI0_GET_STATUS_RX(SPI0_swStatusRx);
 446:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_swStatusRx = 0u;
 447:.\Generated_Source\PSoC5/SPI0.c **** 
 448:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_EnableRxInt();
 449:.\Generated_Source\PSoC5/SPI0.c **** 
 450:.\Generated_Source\PSoC5/SPI0.c ****     #else
 451:.\Generated_Source\PSoC5/SPI0.c **** 
 452:.\Generated_Source\PSoC5/SPI0.c ****         tmpStatus = SPI0_RX_STATUS_REG;
 268              		.loc 1 452 0
 269 0000 014B     		ldr	r3, .L21
 270 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 271              	.LVL9:
 453:.\Generated_Source\PSoC5/SPI0.c **** 
 454:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (SPI0_RX_SOFTWARE_BUF_ENABLED) */
 455:.\Generated_Source\PSoC5/SPI0.c **** 
 456:.\Generated_Source\PSoC5/SPI0.c ****     return(tmpStatus);
 457:.\Generated_Source\PSoC5/SPI0.c **** }
 272              		.loc 1 457 0
 273 0004 7047     		bx	lr
 274              	.L22:
 275 0006 00BF     		.align	2
 276              	.L21:
 277 0008 66650040 		.word	1073767782
 278              		.cfi_endproc
 279              	.LFE11:
 280              		.size	SPI0_ReadRxStatus, .-SPI0_ReadRxStatus
 281              		.section	.text.SPI0_WriteTxData,"ax",%progbits
 282              		.align	1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 14


 283              		.global	SPI0_WriteTxData
 284              		.thumb
 285              		.thumb_func
 286              		.type	SPI0_WriteTxData, %function
 287              	SPI0_WriteTxData:
 288              	.LFB12:
 458:.\Generated_Source\PSoC5/SPI0.c **** 
 459:.\Generated_Source\PSoC5/SPI0.c **** 
 460:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 461:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_WriteTxData
 462:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 463:.\Generated_Source\PSoC5/SPI0.c **** *
 464:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 465:.\Generated_Source\PSoC5/SPI0.c **** *  Write a byte of data to be sent across the SPI.
 466:.\Generated_Source\PSoC5/SPI0.c **** *
 467:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 468:.\Generated_Source\PSoC5/SPI0.c **** *  txDataByte: The data value to send across the SPI.
 469:.\Generated_Source\PSoC5/SPI0.c **** *
 470:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 471:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 472:.\Generated_Source\PSoC5/SPI0.c **** *
 473:.\Generated_Source\PSoC5/SPI0.c **** * Global variables:
 474:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_txBufferWrite - used for the account of the bytes which
 475:.\Generated_Source\PSoC5/SPI0.c **** *  have been written down in the TX software buffer, modified every function
 476:.\Generated_Source\PSoC5/SPI0.c **** *  call if TX Software Buffer is used.
 477:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_txBufferRead - used for the account of the bytes which
 478:.\Generated_Source\PSoC5/SPI0.c **** *  have been read from the TX software buffer.
 479:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_txBuffer[SPI0_TX_BUFFER_SIZE] - used to store
 480:.\Generated_Source\PSoC5/SPI0.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:.\Generated_Source\PSoC5/SPI0.c **** *
 482:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
 483:.\Generated_Source\PSoC5/SPI0.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:.\Generated_Source\PSoC5/SPI0.c **** *
 485:.\Generated_Source\PSoC5/SPI0.c **** * Side Effects:
 486:.\Generated_Source\PSoC5/SPI0.c **** *  If this function is called again before the previous byte is finished then
 487:.\Generated_Source\PSoC5/SPI0.c **** *  the next byte will be appended to the transfer with no time between
 488:.\Generated_Source\PSoC5/SPI0.c **** *  the byte transfers. Clear Tx status register of the component.
 489:.\Generated_Source\PSoC5/SPI0.c **** *
 490:.\Generated_Source\PSoC5/SPI0.c **** * Reentrant:
 491:.\Generated_Source\PSoC5/SPI0.c **** *  No.
 492:.\Generated_Source\PSoC5/SPI0.c **** *
 493:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 494:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_WriteTxData(uint8 txData) 
 495:.\Generated_Source\PSoC5/SPI0.c **** {
 289              		.loc 1 495 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
 294              	.LVL10:
 295              	.L24:
 496:.\Generated_Source\PSoC5/SPI0.c ****     #if(SPI0_TX_SOFTWARE_BUF_ENABLED)
 497:.\Generated_Source\PSoC5/SPI0.c **** 
 498:.\Generated_Source\PSoC5/SPI0.c ****         uint8 tempStatus;
 499:.\Generated_Source\PSoC5/SPI0.c ****         uint8 tmpTxBufferRead;
 500:.\Generated_Source\PSoC5/SPI0.c **** 
 501:.\Generated_Source\PSoC5/SPI0.c ****         /* Block if TX buffer is FULL: don't overwrite */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 15


 502:.\Generated_Source\PSoC5/SPI0.c ****         do
 503:.\Generated_Source\PSoC5/SPI0.c ****         {
 504:.\Generated_Source\PSoC5/SPI0.c ****             tmpTxBufferRead = SPI0_txBufferRead;
 505:.\Generated_Source\PSoC5/SPI0.c ****             if(0u == tmpTxBufferRead)
 506:.\Generated_Source\PSoC5/SPI0.c ****             {
 507:.\Generated_Source\PSoC5/SPI0.c ****                 tmpTxBufferRead = (SPI0_TX_BUFFER_SIZE - 1u);
 508:.\Generated_Source\PSoC5/SPI0.c ****             }
 509:.\Generated_Source\PSoC5/SPI0.c ****             else
 510:.\Generated_Source\PSoC5/SPI0.c ****             {
 511:.\Generated_Source\PSoC5/SPI0.c ****                 tmpTxBufferRead--;
 512:.\Generated_Source\PSoC5/SPI0.c ****             }
 513:.\Generated_Source\PSoC5/SPI0.c **** 
 514:.\Generated_Source\PSoC5/SPI0.c ****         }while(tmpTxBufferRead == SPI0_txBufferWrite);
 515:.\Generated_Source\PSoC5/SPI0.c **** 
 516:.\Generated_Source\PSoC5/SPI0.c ****         /* Disable TX interrupt to protect global veriables */
 517:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_DisableTxInt();
 518:.\Generated_Source\PSoC5/SPI0.c **** 
 519:.\Generated_Source\PSoC5/SPI0.c ****         tempStatus = SPI0_GET_STATUS_TX(SPI0_swStatusTx);
 520:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_swStatusTx = tempStatus;
 521:.\Generated_Source\PSoC5/SPI0.c **** 
 522:.\Generated_Source\PSoC5/SPI0.c **** 
 523:.\Generated_Source\PSoC5/SPI0.c ****         if((SPI0_txBufferRead == SPI0_txBufferWrite) &&
 524:.\Generated_Source\PSoC5/SPI0.c ****            (0u != (SPI0_swStatusTx & SPI0_STS_TX_FIFO_NOT_FULL)))
 525:.\Generated_Source\PSoC5/SPI0.c ****         {
 526:.\Generated_Source\PSoC5/SPI0.c ****             /* Add directly to the TX FIFO */
 527:.\Generated_Source\PSoC5/SPI0.c ****             CY_SET_REG8(SPI0_TXDATA_PTR, txData);
 528:.\Generated_Source\PSoC5/SPI0.c ****         }
 529:.\Generated_Source\PSoC5/SPI0.c ****         else
 530:.\Generated_Source\PSoC5/SPI0.c ****         {
 531:.\Generated_Source\PSoC5/SPI0.c ****             /* Add to the TX software buffer */
 532:.\Generated_Source\PSoC5/SPI0.c ****             SPI0_txBufferWrite++;
 533:.\Generated_Source\PSoC5/SPI0.c ****             if(SPI0_txBufferWrite >= SPI0_TX_BUFFER_SIZE)
 534:.\Generated_Source\PSoC5/SPI0.c ****             {
 535:.\Generated_Source\PSoC5/SPI0.c ****                 SPI0_txBufferWrite = 0u;
 536:.\Generated_Source\PSoC5/SPI0.c ****             }
 537:.\Generated_Source\PSoC5/SPI0.c **** 
 538:.\Generated_Source\PSoC5/SPI0.c ****             if(SPI0_txBufferWrite == SPI0_txBufferRead)
 539:.\Generated_Source\PSoC5/SPI0.c ****             {
 540:.\Generated_Source\PSoC5/SPI0.c ****                 SPI0_txBufferRead++;
 541:.\Generated_Source\PSoC5/SPI0.c ****                 if(SPI0_txBufferRead >= SPI0_TX_BUFFER_SIZE)
 542:.\Generated_Source\PSoC5/SPI0.c ****                 {
 543:.\Generated_Source\PSoC5/SPI0.c ****                     SPI0_txBufferRead = 0u;
 544:.\Generated_Source\PSoC5/SPI0.c ****                 }
 545:.\Generated_Source\PSoC5/SPI0.c ****                 SPI0_txBufferFull = 1u;
 546:.\Generated_Source\PSoC5/SPI0.c ****             }
 547:.\Generated_Source\PSoC5/SPI0.c **** 
 548:.\Generated_Source\PSoC5/SPI0.c ****             SPI0_txBuffer[SPI0_txBufferWrite] = txData;
 549:.\Generated_Source\PSoC5/SPI0.c **** 
 550:.\Generated_Source\PSoC5/SPI0.c ****             SPI0_TX_STATUS_MASK_REG |= SPI0_STS_TX_FIFO_NOT_FULL;
 551:.\Generated_Source\PSoC5/SPI0.c ****         }
 552:.\Generated_Source\PSoC5/SPI0.c **** 
 553:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_EnableTxInt();
 554:.\Generated_Source\PSoC5/SPI0.c **** 
 555:.\Generated_Source\PSoC5/SPI0.c ****     #else
 556:.\Generated_Source\PSoC5/SPI0.c **** 
 557:.\Generated_Source\PSoC5/SPI0.c ****         while(0u == (SPI0_TX_STATUS_REG & SPI0_STS_TX_FIFO_NOT_FULL))
 296              		.loc 1 557 0 discriminator 1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 16


 297 0000 044B     		ldr	r3, .L30
 298 0002 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 299 0004 01F00402 		and	r2, r1, #4
 300 0008 D3B2     		uxtb	r3, r2
 301 000a 002B     		cmp	r3, #0
 302 000c F8D0     		beq	.L24
 558:.\Generated_Source\PSoC5/SPI0.c ****         {
 559:.\Generated_Source\PSoC5/SPI0.c ****             ; /* Wait for room in FIFO */
 560:.\Generated_Source\PSoC5/SPI0.c ****         }
 561:.\Generated_Source\PSoC5/SPI0.c **** 
 562:.\Generated_Source\PSoC5/SPI0.c ****         /* Put byte in TX FIFO */
 563:.\Generated_Source\PSoC5/SPI0.c ****         CY_SET_REG8(SPI0_TXDATA_PTR, txData);
 303              		.loc 1 563 0
 304 000e 0249     		ldr	r1, .L30+4
 305 0010 0870     		strb	r0, [r1, #0]
 306 0012 7047     		bx	lr
 307              	.L31:
 308              		.align	2
 309              	.L30:
 310 0014 65650040 		.word	1073767781
 311 0018 46650040 		.word	1073767750
 312              		.cfi_endproc
 313              	.LFE12:
 314              		.size	SPI0_WriteTxData, .-SPI0_WriteTxData
 315              		.section	.text.SPI0_ReadRxData,"ax",%progbits
 316              		.align	1
 317              		.global	SPI0_ReadRxData
 318              		.thumb
 319              		.thumb_func
 320              		.type	SPI0_ReadRxData, %function
 321              	SPI0_ReadRxData:
 322              	.LFB13:
 564:.\Generated_Source\PSoC5/SPI0.c **** 
 565:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
 566:.\Generated_Source\PSoC5/SPI0.c **** }
 567:.\Generated_Source\PSoC5/SPI0.c **** 
 568:.\Generated_Source\PSoC5/SPI0.c **** 
 569:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 570:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_ReadRxData
 571:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 572:.\Generated_Source\PSoC5/SPI0.c **** *
 573:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 574:.\Generated_Source\PSoC5/SPI0.c **** *  Read the next byte of data received across the SPI.
 575:.\Generated_Source\PSoC5/SPI0.c **** *
 576:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 577:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 578:.\Generated_Source\PSoC5/SPI0.c **** *
 579:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 580:.\Generated_Source\PSoC5/SPI0.c **** *  The next byte of data read from the FIFO.
 581:.\Generated_Source\PSoC5/SPI0.c **** *
 582:.\Generated_Source\PSoC5/SPI0.c **** * Global variables:
 583:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_rxBufferWrite - used for the account of the bytes which
 584:.\Generated_Source\PSoC5/SPI0.c **** *  have been written down in the RX software buffer.
 585:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_rxBufferRead - used for the account of the bytes which
 586:.\Generated_Source\PSoC5/SPI0.c **** *  have been read from the RX software buffer, modified every function
 587:.\Generated_Source\PSoC5/SPI0.c **** *  call if RX Software Buffer is used.
 588:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_rxBuffer[SPI0_RX_BUFFER_SIZE] - used to store
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 17


 589:.\Generated_Source\PSoC5/SPI0.c **** *  received data.
 590:.\Generated_Source\PSoC5/SPI0.c **** *
 591:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
 592:.\Generated_Source\PSoC5/SPI0.c **** *  Allows the user to read a byte of data received.
 593:.\Generated_Source\PSoC5/SPI0.c **** *
 594:.\Generated_Source\PSoC5/SPI0.c **** * Side Effects:
 595:.\Generated_Source\PSoC5/SPI0.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 596:.\Generated_Source\PSoC5/SPI0.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 597:.\Generated_Source\PSoC5/SPI0.c **** *  ReadByte() function.
 598:.\Generated_Source\PSoC5/SPI0.c **** *
 599:.\Generated_Source\PSoC5/SPI0.c **** * Reentrant:
 600:.\Generated_Source\PSoC5/SPI0.c **** *  No.
 601:.\Generated_Source\PSoC5/SPI0.c **** *
 602:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 603:.\Generated_Source\PSoC5/SPI0.c **** uint8 SPI0_ReadRxData(void) 
 604:.\Generated_Source\PSoC5/SPI0.c **** {
 323              		.loc 1 604 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 605:.\Generated_Source\PSoC5/SPI0.c ****     uint8 rxData;
 606:.\Generated_Source\PSoC5/SPI0.c **** 
 607:.\Generated_Source\PSoC5/SPI0.c ****     #if(SPI0_RX_SOFTWARE_BUF_ENABLED)
 608:.\Generated_Source\PSoC5/SPI0.c **** 
 609:.\Generated_Source\PSoC5/SPI0.c ****         /* Disable RX interrupt to protect global veriables */
 610:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_DisableRxInt();
 611:.\Generated_Source\PSoC5/SPI0.c **** 
 612:.\Generated_Source\PSoC5/SPI0.c ****         if(SPI0_rxBufferRead != SPI0_rxBufferWrite)
 613:.\Generated_Source\PSoC5/SPI0.c ****         {
 614:.\Generated_Source\PSoC5/SPI0.c ****             if(0u == SPI0_rxBufferFull)
 615:.\Generated_Source\PSoC5/SPI0.c ****             {
 616:.\Generated_Source\PSoC5/SPI0.c ****                 SPI0_rxBufferRead++;
 617:.\Generated_Source\PSoC5/SPI0.c ****                 if(SPI0_rxBufferRead >= SPI0_RX_BUFFER_SIZE)
 618:.\Generated_Source\PSoC5/SPI0.c ****                 {
 619:.\Generated_Source\PSoC5/SPI0.c ****                     SPI0_rxBufferRead = 0u;
 620:.\Generated_Source\PSoC5/SPI0.c ****                 }
 621:.\Generated_Source\PSoC5/SPI0.c ****             }
 622:.\Generated_Source\PSoC5/SPI0.c ****             else
 623:.\Generated_Source\PSoC5/SPI0.c ****             {
 624:.\Generated_Source\PSoC5/SPI0.c ****                 SPI0_rxBufferFull = 0u;
 625:.\Generated_Source\PSoC5/SPI0.c ****             }
 626:.\Generated_Source\PSoC5/SPI0.c ****         }
 627:.\Generated_Source\PSoC5/SPI0.c **** 
 628:.\Generated_Source\PSoC5/SPI0.c ****         rxData = SPI0_rxBuffer[SPI0_rxBufferRead];
 629:.\Generated_Source\PSoC5/SPI0.c **** 
 630:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_EnableRxInt();
 631:.\Generated_Source\PSoC5/SPI0.c **** 
 632:.\Generated_Source\PSoC5/SPI0.c ****     #else
 633:.\Generated_Source\PSoC5/SPI0.c **** 
 634:.\Generated_Source\PSoC5/SPI0.c ****         rxData = CY_GET_REG8(SPI0_RXDATA_PTR);
 328              		.loc 1 634 0
 329 0000 014B     		ldr	r3, .L33
 330 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 331              	.LVL11:
 635:.\Generated_Source\PSoC5/SPI0.c **** 
 636:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (SPI0_RX_SOFTWARE_BUF_ENABLED) */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 18


 637:.\Generated_Source\PSoC5/SPI0.c **** 
 638:.\Generated_Source\PSoC5/SPI0.c ****     return(rxData);
 639:.\Generated_Source\PSoC5/SPI0.c **** }
 332              		.loc 1 639 0
 333 0004 7047     		bx	lr
 334              	.L34:
 335 0006 00BF     		.align	2
 336              	.L33:
 337 0008 56650040 		.word	1073767766
 338              		.cfi_endproc
 339              	.LFE13:
 340              		.size	SPI0_ReadRxData, .-SPI0_ReadRxData
 341              		.section	.text.SPI0_GetRxBufferSize,"ax",%progbits
 342              		.align	1
 343              		.global	SPI0_GetRxBufferSize
 344              		.thumb
 345              		.thumb_func
 346              		.type	SPI0_GetRxBufferSize, %function
 347              	SPI0_GetRxBufferSize:
 348              	.LFB14:
 640:.\Generated_Source\PSoC5/SPI0.c **** 
 641:.\Generated_Source\PSoC5/SPI0.c **** 
 642:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 643:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_GetRxBufferSize
 644:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 645:.\Generated_Source\PSoC5/SPI0.c **** *
 646:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 647:.\Generated_Source\PSoC5/SPI0.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 648:.\Generated_Source\PSoC5/SPI0.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 649:.\Generated_Source\PSoC5/SPI0.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 650:.\Generated_Source\PSoC5/SPI0.c **** *
 651:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 652:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 653:.\Generated_Source\PSoC5/SPI0.c **** *
 654:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 655:.\Generated_Source\PSoC5/SPI0.c **** *  Integer count of the number of bytes/words in the RX buffer.
 656:.\Generated_Source\PSoC5/SPI0.c **** *
 657:.\Generated_Source\PSoC5/SPI0.c **** * Global variables:
 658:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_rxBufferWrite - used for the account of the bytes which
 659:.\Generated_Source\PSoC5/SPI0.c **** *  have been written down in the RX software buffer.
 660:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_rxBufferRead - used for the account of the bytes which
 661:.\Generated_Source\PSoC5/SPI0.c **** *  have been read from the RX software buffer.
 662:.\Generated_Source\PSoC5/SPI0.c **** *
 663:.\Generated_Source\PSoC5/SPI0.c **** * Side Effects:
 664:.\Generated_Source\PSoC5/SPI0.c **** *  Clear status register of the component.
 665:.\Generated_Source\PSoC5/SPI0.c **** *
 666:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 667:.\Generated_Source\PSoC5/SPI0.c **** uint8 SPI0_GetRxBufferSize(void) 
 668:.\Generated_Source\PSoC5/SPI0.c **** {
 349              		.loc 1 668 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 669:.\Generated_Source\PSoC5/SPI0.c ****     uint8 size;
 670:.\Generated_Source\PSoC5/SPI0.c **** 
 671:.\Generated_Source\PSoC5/SPI0.c ****     #if(SPI0_RX_SOFTWARE_BUF_ENABLED)
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 19


 672:.\Generated_Source\PSoC5/SPI0.c **** 
 673:.\Generated_Source\PSoC5/SPI0.c ****         /* Disable RX interrupt to protect global veriables */
 674:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_DisableRxInt();
 675:.\Generated_Source\PSoC5/SPI0.c **** 
 676:.\Generated_Source\PSoC5/SPI0.c ****         if(SPI0_rxBufferRead == SPI0_rxBufferWrite)
 677:.\Generated_Source\PSoC5/SPI0.c ****         {
 678:.\Generated_Source\PSoC5/SPI0.c ****             size = 0u;
 679:.\Generated_Source\PSoC5/SPI0.c ****         }
 680:.\Generated_Source\PSoC5/SPI0.c ****         else if(SPI0_rxBufferRead < SPI0_rxBufferWrite)
 681:.\Generated_Source\PSoC5/SPI0.c ****         {
 682:.\Generated_Source\PSoC5/SPI0.c ****             size = (SPI0_rxBufferWrite - SPI0_rxBufferRead);
 683:.\Generated_Source\PSoC5/SPI0.c ****         }
 684:.\Generated_Source\PSoC5/SPI0.c ****         else
 685:.\Generated_Source\PSoC5/SPI0.c ****         {
 686:.\Generated_Source\PSoC5/SPI0.c ****             size = (SPI0_RX_BUFFER_SIZE - SPI0_rxBufferRead) + SPI0_rxBufferWrite;
 687:.\Generated_Source\PSoC5/SPI0.c ****         }
 688:.\Generated_Source\PSoC5/SPI0.c **** 
 689:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_EnableRxInt();
 690:.\Generated_Source\PSoC5/SPI0.c **** 
 691:.\Generated_Source\PSoC5/SPI0.c ****     #else
 692:.\Generated_Source\PSoC5/SPI0.c **** 
 693:.\Generated_Source\PSoC5/SPI0.c ****         /* We can only know if there is data in the RX FIFO */
 694:.\Generated_Source\PSoC5/SPI0.c ****         size = (0u != (SPI0_RX_STATUS_REG & SPI0_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 354              		.loc 1 694 0
 355 0000 024B     		ldr	r3, .L36
 356 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 357              	.LVL12:
 695:.\Generated_Source\PSoC5/SPI0.c **** 
 696:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
 697:.\Generated_Source\PSoC5/SPI0.c **** 
 698:.\Generated_Source\PSoC5/SPI0.c ****     return(size);
 699:.\Generated_Source\PSoC5/SPI0.c **** }
 358              		.loc 1 699 0
 359 0004 C0F34010 		ubfx	r0, r0, #5, #1
 360              	.LVL13:
 361 0008 7047     		bx	lr
 362              	.L37:
 363 000a 00BF     		.align	2
 364              	.L36:
 365 000c 66650040 		.word	1073767782
 366              		.cfi_endproc
 367              	.LFE14:
 368              		.size	SPI0_GetRxBufferSize, .-SPI0_GetRxBufferSize
 369              		.section	.text.SPI0_GetTxBufferSize,"ax",%progbits
 370              		.align	1
 371              		.global	SPI0_GetTxBufferSize
 372              		.thumb
 373              		.thumb_func
 374              		.type	SPI0_GetTxBufferSize, %function
 375              	SPI0_GetTxBufferSize:
 376              	.LFB15:
 700:.\Generated_Source\PSoC5/SPI0.c **** 
 701:.\Generated_Source\PSoC5/SPI0.c **** 
 702:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 703:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_GetTxBufferSize
 704:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 705:.\Generated_Source\PSoC5/SPI0.c **** *
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 20


 706:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 707:.\Generated_Source\PSoC5/SPI0.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 708:.\Generated_Source\PSoC5/SPI0.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 709:.\Generated_Source\PSoC5/SPI0.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 710:.\Generated_Source\PSoC5/SPI0.c **** *  Software Buffer.
 711:.\Generated_Source\PSoC5/SPI0.c **** *
 712:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 713:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 714:.\Generated_Source\PSoC5/SPI0.c **** *
 715:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 716:.\Generated_Source\PSoC5/SPI0.c **** *  Integer count of the number of bytes/words in the TX buffer.
 717:.\Generated_Source\PSoC5/SPI0.c **** *
 718:.\Generated_Source\PSoC5/SPI0.c **** * Global variables:
 719:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_txBufferWrite - used for the account of the bytes which
 720:.\Generated_Source\PSoC5/SPI0.c **** *  have been written down in the TX software buffer.
 721:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_txBufferRead - used for the account of the bytes which
 722:.\Generated_Source\PSoC5/SPI0.c **** *  have been read from the TX software buffer.
 723:.\Generated_Source\PSoC5/SPI0.c **** *
 724:.\Generated_Source\PSoC5/SPI0.c **** * Side Effects:
 725:.\Generated_Source\PSoC5/SPI0.c **** *  Clear status register of the component.
 726:.\Generated_Source\PSoC5/SPI0.c **** *
 727:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 728:.\Generated_Source\PSoC5/SPI0.c **** uint8  SPI0_GetTxBufferSize(void) 
 729:.\Generated_Source\PSoC5/SPI0.c **** {
 377              		.loc 1 729 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 730:.\Generated_Source\PSoC5/SPI0.c ****     uint8 size;
 731:.\Generated_Source\PSoC5/SPI0.c **** 
 732:.\Generated_Source\PSoC5/SPI0.c ****     #if(SPI0_TX_SOFTWARE_BUF_ENABLED)
 733:.\Generated_Source\PSoC5/SPI0.c ****         /* Disable TX interrupt to protect global veriables */
 734:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_DisableTxInt();
 735:.\Generated_Source\PSoC5/SPI0.c **** 
 736:.\Generated_Source\PSoC5/SPI0.c ****         if(SPI0_txBufferRead == SPI0_txBufferWrite)
 737:.\Generated_Source\PSoC5/SPI0.c ****         {
 738:.\Generated_Source\PSoC5/SPI0.c ****             size = 0u;
 739:.\Generated_Source\PSoC5/SPI0.c ****         }
 740:.\Generated_Source\PSoC5/SPI0.c ****         else if(SPI0_txBufferRead < SPI0_txBufferWrite)
 741:.\Generated_Source\PSoC5/SPI0.c ****         {
 742:.\Generated_Source\PSoC5/SPI0.c ****             size = (SPI0_txBufferWrite - SPI0_txBufferRead);
 743:.\Generated_Source\PSoC5/SPI0.c ****         }
 744:.\Generated_Source\PSoC5/SPI0.c ****         else
 745:.\Generated_Source\PSoC5/SPI0.c ****         {
 746:.\Generated_Source\PSoC5/SPI0.c ****             size = (SPI0_TX_BUFFER_SIZE - SPI0_txBufferRead) + SPI0_txBufferWrite;
 747:.\Generated_Source\PSoC5/SPI0.c ****         }
 748:.\Generated_Source\PSoC5/SPI0.c **** 
 749:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_EnableTxInt();
 750:.\Generated_Source\PSoC5/SPI0.c **** 
 751:.\Generated_Source\PSoC5/SPI0.c ****     #else
 752:.\Generated_Source\PSoC5/SPI0.c **** 
 753:.\Generated_Source\PSoC5/SPI0.c ****         size = SPI0_TX_STATUS_REG;
 382              		.loc 1 753 0
 383 0000 074B     		ldr	r3, .L42
 384 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 385              	.LVL14:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 21


 754:.\Generated_Source\PSoC5/SPI0.c **** 
 755:.\Generated_Source\PSoC5/SPI0.c ****         if(0u != (size & SPI0_STS_TX_FIFO_EMPTY))
 386              		.loc 1 755 0
 387 0004 00F00201 		and	r1, r0, #2
 388 0008 CAB2     		uxtb	r2, r1
 389 000a 3AB9     		cbnz	r2, .L40
 756:.\Generated_Source\PSoC5/SPI0.c ****         {
 757:.\Generated_Source\PSoC5/SPI0.c ****             size = 0u;
 758:.\Generated_Source\PSoC5/SPI0.c ****         }
 759:.\Generated_Source\PSoC5/SPI0.c ****         else if(0u != (size & SPI0_STS_TX_FIFO_NOT_FULL))
 390              		.loc 1 759 0
 391 000c 00F00403 		and	r3, r0, #4
 392 0010 D8B2     		uxtb	r0, r3
 393              	.LVL15:
 760:.\Generated_Source\PSoC5/SPI0.c ****         {
 761:.\Generated_Source\PSoC5/SPI0.c ****             size = 1u;
 394              		.loc 1 761 0
 395 0012 0028     		cmp	r0, #0
 396 0014 0CBF     		ite	eq
 397 0016 0420     		moveq	r0, #4
 398 0018 0120     		movne	r0, #1
 399 001a 7047     		bx	lr
 400              	.LVL16:
 401              	.L40:
 757:.\Generated_Source\PSoC5/SPI0.c ****             size = 0u;
 402              		.loc 1 757 0
 403 001c 0020     		movs	r0, #0
 404              	.LVL17:
 762:.\Generated_Source\PSoC5/SPI0.c ****         }
 763:.\Generated_Source\PSoC5/SPI0.c ****         else
 764:.\Generated_Source\PSoC5/SPI0.c ****         {
 765:.\Generated_Source\PSoC5/SPI0.c ****             size = SPI0_FIFO_SIZE;
 766:.\Generated_Source\PSoC5/SPI0.c ****         }
 767:.\Generated_Source\PSoC5/SPI0.c **** 
 768:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
 769:.\Generated_Source\PSoC5/SPI0.c **** 
 770:.\Generated_Source\PSoC5/SPI0.c ****     return(size);
 771:.\Generated_Source\PSoC5/SPI0.c **** }
 405              		.loc 1 771 0
 406 001e 7047     		bx	lr
 407              	.L43:
 408              		.align	2
 409              	.L42:
 410 0020 65650040 		.word	1073767781
 411              		.cfi_endproc
 412              	.LFE15:
 413              		.size	SPI0_GetTxBufferSize, .-SPI0_GetTxBufferSize
 414              		.section	.text.SPI0_ClearRxBuffer,"ax",%progbits
 415              		.align	1
 416              		.global	SPI0_ClearRxBuffer
 417              		.thumb
 418              		.thumb_func
 419              		.type	SPI0_ClearRxBuffer, %function
 420              	SPI0_ClearRxBuffer:
 421              	.LFB16:
 772:.\Generated_Source\PSoC5/SPI0.c **** 
 773:.\Generated_Source\PSoC5/SPI0.c **** 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 22


 774:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 775:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_ClearRxBuffer
 776:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 777:.\Generated_Source\PSoC5/SPI0.c **** *
 778:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 779:.\Generated_Source\PSoC5/SPI0.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 780:.\Generated_Source\PSoC5/SPI0.c **** *
 781:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 782:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 783:.\Generated_Source\PSoC5/SPI0.c **** *
 784:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 785:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 786:.\Generated_Source\PSoC5/SPI0.c **** *
 787:.\Generated_Source\PSoC5/SPI0.c **** * Global variables:
 788:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_rxBufferWrite - used for the account of the bytes which
 789:.\Generated_Source\PSoC5/SPI0.c **** *  have been written down in the RX software buffer, modified every function
 790:.\Generated_Source\PSoC5/SPI0.c **** *  call - resets to zero.
 791:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_rxBufferRead - used for the account of the bytes which
 792:.\Generated_Source\PSoC5/SPI0.c **** *  have been read from the RX software buffer, modified every function call -
 793:.\Generated_Source\PSoC5/SPI0.c **** *  resets to zero.
 794:.\Generated_Source\PSoC5/SPI0.c **** *
 795:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
 796:.\Generated_Source\PSoC5/SPI0.c **** *  Setting the pointers to zero makes the system believe there is no data to
 797:.\Generated_Source\PSoC5/SPI0.c **** *  read and writing will resume at address 0 overwriting any data that may have
 798:.\Generated_Source\PSoC5/SPI0.c **** *  remained in the RAM.
 799:.\Generated_Source\PSoC5/SPI0.c **** *
 800:.\Generated_Source\PSoC5/SPI0.c **** * Side Effects:
 801:.\Generated_Source\PSoC5/SPI0.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 802:.\Generated_Source\PSoC5/SPI0.c **** *
 803:.\Generated_Source\PSoC5/SPI0.c **** * Reentrant:
 804:.\Generated_Source\PSoC5/SPI0.c **** *  No.
 805:.\Generated_Source\PSoC5/SPI0.c **** *
 806:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 807:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_ClearRxBuffer(void) 
 808:.\Generated_Source\PSoC5/SPI0.c **** {
 422              		.loc 1 808 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427              	.L45:
 809:.\Generated_Source\PSoC5/SPI0.c ****     /* Clear Hardware RX FIFO */
 810:.\Generated_Source\PSoC5/SPI0.c ****     while(0u !=(SPI0_RX_STATUS_REG & SPI0_STS_RX_FIFO_NOT_EMPTY))
 428              		.loc 1 810 0 discriminator 1
 429 0000 044B     		ldr	r3, .L48
 430 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 431 0004 00F02001 		and	r1, r0, #32
 432 0008 CAB2     		uxtb	r2, r1
 433 000a 12B1     		cbz	r2, .L47
 434              	.L46:
 811:.\Generated_Source\PSoC5/SPI0.c ****     {
 812:.\Generated_Source\PSoC5/SPI0.c ****         (void) CY_GET_REG8(SPI0_RXDATA_PTR);
 435              		.loc 1 812 0
 436 000c 024B     		ldr	r3, .L48+4
 437 000e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 438 0010 F6E7     		b	.L45
 439              	.L47:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 23


 813:.\Generated_Source\PSoC5/SPI0.c ****     }
 814:.\Generated_Source\PSoC5/SPI0.c **** 
 815:.\Generated_Source\PSoC5/SPI0.c ****     #if(SPI0_RX_SOFTWARE_BUF_ENABLED)
 816:.\Generated_Source\PSoC5/SPI0.c ****         /* Disable RX interrupt to protect global veriables */
 817:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_DisableRxInt();
 818:.\Generated_Source\PSoC5/SPI0.c **** 
 819:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_rxBufferFull  = 0u;
 820:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_rxBufferRead  = 0u;
 821:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_rxBufferWrite = 0u;
 822:.\Generated_Source\PSoC5/SPI0.c **** 
 823:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_EnableRxInt();
 824:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (SPI0_RX_SOFTWARE_BUF_ENABLED) */
 825:.\Generated_Source\PSoC5/SPI0.c **** }
 440              		.loc 1 825 0
 441 0012 7047     		bx	lr
 442              	.L49:
 443              		.align	2
 444              	.L48:
 445 0014 66650040 		.word	1073767782
 446 0018 56650040 		.word	1073767766
 447              		.cfi_endproc
 448              	.LFE16:
 449              		.size	SPI0_ClearRxBuffer, .-SPI0_ClearRxBuffer
 450              		.section	.text.SPI0_ClearTxBuffer,"ax",%progbits
 451              		.align	1
 452              		.global	SPI0_ClearTxBuffer
 453              		.thumb
 454              		.thumb_func
 455              		.type	SPI0_ClearTxBuffer, %function
 456              	SPI0_ClearTxBuffer:
 457              	.LFB17:
 826:.\Generated_Source\PSoC5/SPI0.c **** 
 827:.\Generated_Source\PSoC5/SPI0.c **** 
 828:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 829:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_ClearTxBuffer
 830:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 831:.\Generated_Source\PSoC5/SPI0.c **** *
 832:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 833:.\Generated_Source\PSoC5/SPI0.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 834:.\Generated_Source\PSoC5/SPI0.c **** *
 835:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 836:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 837:.\Generated_Source\PSoC5/SPI0.c **** *
 838:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 839:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 840:.\Generated_Source\PSoC5/SPI0.c **** *
 841:.\Generated_Source\PSoC5/SPI0.c **** * Global variables:
 842:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_txBufferWrite - used for the account of the bytes which
 843:.\Generated_Source\PSoC5/SPI0.c **** *  have been written down in the TX software buffer, modified every function
 844:.\Generated_Source\PSoC5/SPI0.c **** *  call - resets to zero.
 845:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_txBufferRead - used for the account of the bytes which
 846:.\Generated_Source\PSoC5/SPI0.c **** *  have been read from the TX software buffer, modified every function call -
 847:.\Generated_Source\PSoC5/SPI0.c **** *  resets to zero.
 848:.\Generated_Source\PSoC5/SPI0.c **** *
 849:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
 850:.\Generated_Source\PSoC5/SPI0.c **** *  Setting the pointers to zero makes the system believe there is no data to
 851:.\Generated_Source\PSoC5/SPI0.c **** *  read and writing will resume at address 0 overwriting any data that may have
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 24


 852:.\Generated_Source\PSoC5/SPI0.c **** *  remained in the RAM.
 853:.\Generated_Source\PSoC5/SPI0.c **** *
 854:.\Generated_Source\PSoC5/SPI0.c **** * Side Effects:
 855:.\Generated_Source\PSoC5/SPI0.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 856:.\Generated_Source\PSoC5/SPI0.c **** *  overwritten.
 857:.\Generated_Source\PSoC5/SPI0.c **** *
 858:.\Generated_Source\PSoC5/SPI0.c **** * Reentrant:
 859:.\Generated_Source\PSoC5/SPI0.c **** *  No.
 860:.\Generated_Source\PSoC5/SPI0.c **** *
 861:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 862:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_ClearTxBuffer(void) 
 863:.\Generated_Source\PSoC5/SPI0.c **** {
 458              		.loc 1 863 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462 0000 08B5     		push	{r3, lr}
 463              	.LCFI2:
 464              		.cfi_def_cfa_offset 8
 465              		.cfi_offset 3, -8
 466              		.cfi_offset 14, -4
 864:.\Generated_Source\PSoC5/SPI0.c ****     uint8 enableInterrupts;
 865:.\Generated_Source\PSoC5/SPI0.c **** 
 866:.\Generated_Source\PSoC5/SPI0.c ****     enableInterrupts = CyEnterCriticalSection();
 467              		.loc 1 866 0
 468 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 469              	.LVL18:
 867:.\Generated_Source\PSoC5/SPI0.c ****     /* Clear TX FIFO */
 868:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_AUX_CONTROL_DP0_REG |= ((uint8)  SPI0_TX_FIFO_CLR);
 470              		.loc 1 868 0
 471 0006 064B     		ldr	r3, .L51
 472 0008 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 473 000a 42F00101 		orr	r1, r2, #1
 474 000e 1970     		strb	r1, [r3, #0]
 869:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI0_TX_FIFO_CLR);
 475              		.loc 1 869 0
 476 0010 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 477 0012 02F0FE01 		and	r1, r2, #254
 478 0016 1970     		strb	r1, [r3, #0]
 870:.\Generated_Source\PSoC5/SPI0.c **** 
 871:.\Generated_Source\PSoC5/SPI0.c ****     #if(SPI0_USE_SECOND_DATAPATH)
 872:.\Generated_Source\PSoC5/SPI0.c ****         /* Clear TX FIFO for 2nd Datapath */
 873:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_AUX_CONTROL_DP1_REG |= ((uint8)  SPI0_TX_FIFO_CLR);
 874:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI0_TX_FIFO_CLR);
 875:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (SPI0_USE_SECOND_DATAPATH) */
 876:.\Generated_Source\PSoC5/SPI0.c ****     CyExitCriticalSection(enableInterrupts);
 877:.\Generated_Source\PSoC5/SPI0.c **** 
 878:.\Generated_Source\PSoC5/SPI0.c ****     #if(SPI0_TX_SOFTWARE_BUF_ENABLED)
 879:.\Generated_Source\PSoC5/SPI0.c ****         /* Disable TX interrupt to protect global veriables */
 880:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_DisableTxInt();
 881:.\Generated_Source\PSoC5/SPI0.c **** 
 882:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_txBufferFull  = 0u;
 883:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_txBufferRead  = 0u;
 884:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_txBufferWrite = 0u;
 885:.\Generated_Source\PSoC5/SPI0.c **** 
 886:.\Generated_Source\PSoC5/SPI0.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 887:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_TX_STATUS_MASK_REG &= ((uint8) ~SPI0_STS_TX_FIFO_NOT_FULL);
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 25


 888:.\Generated_Source\PSoC5/SPI0.c **** 
 889:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_EnableTxInt();
 890:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
 891:.\Generated_Source\PSoC5/SPI0.c **** }
 479              		.loc 1 891 0
 480 0018 BDE80840 		pop	{r3, lr}
 876:.\Generated_Source\PSoC5/SPI0.c ****     CyExitCriticalSection(enableInterrupts);
 481              		.loc 1 876 0
 482 001c FFF7FEBF 		b	CyExitCriticalSection
 483              	.LVL19:
 484              	.L52:
 485              		.align	2
 486              	.L51:
 487 0020 96650040 		.word	1073767830
 488              		.cfi_endproc
 489              	.LFE17:
 490              		.size	SPI0_ClearTxBuffer, .-SPI0_ClearTxBuffer
 491              		.section	.text.SPI0_PutArray,"ax",%progbits
 492              		.align	1
 493              		.global	SPI0_PutArray
 494              		.thumb
 495              		.thumb_func
 496              		.type	SPI0_PutArray, %function
 497              	SPI0_PutArray:
 498              	.LFB18:
 892:.\Generated_Source\PSoC5/SPI0.c **** 
 893:.\Generated_Source\PSoC5/SPI0.c **** 
 894:.\Generated_Source\PSoC5/SPI0.c **** #if(0u != SPI0_BIDIRECTIONAL_MODE)
 895:.\Generated_Source\PSoC5/SPI0.c ****     /*******************************************************************************
 896:.\Generated_Source\PSoC5/SPI0.c ****     * Function Name: SPI0_TxEnable
 897:.\Generated_Source\PSoC5/SPI0.c ****     ********************************************************************************
 898:.\Generated_Source\PSoC5/SPI0.c ****     *
 899:.\Generated_Source\PSoC5/SPI0.c ****     * Summary:
 900:.\Generated_Source\PSoC5/SPI0.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 901:.\Generated_Source\PSoC5/SPI0.c ****     *  will set the bi-directional pin to transmit.
 902:.\Generated_Source\PSoC5/SPI0.c ****     *
 903:.\Generated_Source\PSoC5/SPI0.c ****     * Parameters:
 904:.\Generated_Source\PSoC5/SPI0.c ****     *  None.
 905:.\Generated_Source\PSoC5/SPI0.c ****     *
 906:.\Generated_Source\PSoC5/SPI0.c ****     * Return:
 907:.\Generated_Source\PSoC5/SPI0.c ****     *  None.
 908:.\Generated_Source\PSoC5/SPI0.c ****     *
 909:.\Generated_Source\PSoC5/SPI0.c ****     *******************************************************************************/
 910:.\Generated_Source\PSoC5/SPI0.c ****     void SPI0_TxEnable(void) 
 911:.\Generated_Source\PSoC5/SPI0.c ****     {
 912:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_CONTROL_REG |= SPI0_CTRL_TX_SIGNAL_EN;
 913:.\Generated_Source\PSoC5/SPI0.c ****     }
 914:.\Generated_Source\PSoC5/SPI0.c **** 
 915:.\Generated_Source\PSoC5/SPI0.c **** 
 916:.\Generated_Source\PSoC5/SPI0.c ****     /*******************************************************************************
 917:.\Generated_Source\PSoC5/SPI0.c ****     * Function Name: SPI0_TxDisable
 918:.\Generated_Source\PSoC5/SPI0.c ****     ********************************************************************************
 919:.\Generated_Source\PSoC5/SPI0.c ****     *
 920:.\Generated_Source\PSoC5/SPI0.c ****     * Summary:
 921:.\Generated_Source\PSoC5/SPI0.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 922:.\Generated_Source\PSoC5/SPI0.c ****     *  will set the bi-directional pin to receive.
 923:.\Generated_Source\PSoC5/SPI0.c ****     *
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 26


 924:.\Generated_Source\PSoC5/SPI0.c ****     * Parameters:
 925:.\Generated_Source\PSoC5/SPI0.c ****     *  None.
 926:.\Generated_Source\PSoC5/SPI0.c ****     *
 927:.\Generated_Source\PSoC5/SPI0.c ****     * Return:
 928:.\Generated_Source\PSoC5/SPI0.c ****     *  None.
 929:.\Generated_Source\PSoC5/SPI0.c ****     *
 930:.\Generated_Source\PSoC5/SPI0.c ****     *******************************************************************************/
 931:.\Generated_Source\PSoC5/SPI0.c ****     void SPI0_TxDisable(void) 
 932:.\Generated_Source\PSoC5/SPI0.c ****     {
 933:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_CONTROL_REG &= ((uint8) ~SPI0_CTRL_TX_SIGNAL_EN);
 934:.\Generated_Source\PSoC5/SPI0.c ****     }
 935:.\Generated_Source\PSoC5/SPI0.c **** 
 936:.\Generated_Source\PSoC5/SPI0.c **** #endif /* (0u != SPI0_BIDIRECTIONAL_MODE) */
 937:.\Generated_Source\PSoC5/SPI0.c **** 
 938:.\Generated_Source\PSoC5/SPI0.c **** 
 939:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 940:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_PutArray
 941:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 942:.\Generated_Source\PSoC5/SPI0.c **** *
 943:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 944:.\Generated_Source\PSoC5/SPI0.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 945:.\Generated_Source\PSoC5/SPI0.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 946:.\Generated_Source\PSoC5/SPI0.c **** *
 947:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 948:.\Generated_Source\PSoC5/SPI0.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 949:.\Generated_Source\PSoC5/SPI0.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 950:.\Generated_Source\PSoC5/SPI0.c **** *
 951:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 952:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 953:.\Generated_Source\PSoC5/SPI0.c **** *
 954:.\Generated_Source\PSoC5/SPI0.c **** * Side Effects:
 955:.\Generated_Source\PSoC5/SPI0.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 956:.\Generated_Source\PSoC5/SPI0.c **** *  this loop if data is not being initiated by the master if there is not
 957:.\Generated_Source\PSoC5/SPI0.c **** *  enough room in the TX FIFO.
 958:.\Generated_Source\PSoC5/SPI0.c **** *
 959:.\Generated_Source\PSoC5/SPI0.c **** * Reentrant:
 960:.\Generated_Source\PSoC5/SPI0.c **** *  No.
 961:.\Generated_Source\PSoC5/SPI0.c **** *
 962:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 963:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_PutArray(const uint8 buffer[], uint8 byteCount)
 964:.\Generated_Source\PSoC5/SPI0.c ****                                                                           
 965:.\Generated_Source\PSoC5/SPI0.c **** {
 499              		.loc 1 965 0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503              	.LVL20:
 504 0000 70B5     		push	{r4, r5, r6, lr}
 505              	.LCFI3:
 506              		.cfi_def_cfa_offset 16
 507              		.cfi_offset 4, -16
 508              		.cfi_offset 5, -12
 509              		.cfi_offset 6, -8
 510              		.cfi_offset 14, -4
 511              		.loc 1 965 0
 512 0002 0546     		mov	r5, r0
 513 0004 0E46     		mov	r6, r1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 27


 966:.\Generated_Source\PSoC5/SPI0.c ****     uint8 bufIndex;
 967:.\Generated_Source\PSoC5/SPI0.c **** 
 968:.\Generated_Source\PSoC5/SPI0.c ****     bufIndex = 0u;
 969:.\Generated_Source\PSoC5/SPI0.c **** 
 970:.\Generated_Source\PSoC5/SPI0.c ****     while(byteCount > 0u)
 514              		.loc 1 970 0
 515 0006 0024     		movs	r4, #0
 516              	.LVL21:
 517              	.L54:
 518              		.loc 1 970 0 is_stmt 0 discriminator 1
 519 0008 E3B2     		uxtb	r3, r4
 520 000a 9E42     		cmp	r6, r3
 521 000c 04D0     		beq	.L56
 522              	.L55:
 971:.\Generated_Source\PSoC5/SPI0.c ****     {
 972:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_WriteTxData(buffer[bufIndex]);
 523              		.loc 1 972 0 is_stmt 1
 524 000e 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 525 0010 FFF7FEFF 		bl	SPI0_WriteTxData
 526              	.LVL22:
 527 0014 0134     		adds	r4, r4, #1
 528 0016 F7E7     		b	.L54
 529              	.L56:
 973:.\Generated_Source\PSoC5/SPI0.c ****         bufIndex++;
 974:.\Generated_Source\PSoC5/SPI0.c ****         byteCount--;
 975:.\Generated_Source\PSoC5/SPI0.c ****     }
 976:.\Generated_Source\PSoC5/SPI0.c **** }
 530              		.loc 1 976 0
 531 0018 70BD     		pop	{r4, r5, r6, pc}
 532              		.cfi_endproc
 533              	.LFE18:
 534              		.size	SPI0_PutArray, .-SPI0_PutArray
 535              		.section	.text.SPI0_ClearFIFO,"ax",%progbits
 536              		.align	1
 537              		.global	SPI0_ClearFIFO
 538              		.thumb
 539              		.thumb_func
 540              		.type	SPI0_ClearFIFO, %function
 541              	SPI0_ClearFIFO:
 542              	.LFB19:
 977:.\Generated_Source\PSoC5/SPI0.c **** 
 978:.\Generated_Source\PSoC5/SPI0.c **** 
 979:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
 980:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_ClearFIFO
 981:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
 982:.\Generated_Source\PSoC5/SPI0.c **** *
 983:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
 984:.\Generated_Source\PSoC5/SPI0.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 985:.\Generated_Source\PSoC5/SPI0.c **** *
 986:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
 987:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 988:.\Generated_Source\PSoC5/SPI0.c **** *
 989:.\Generated_Source\PSoC5/SPI0.c **** * Return:
 990:.\Generated_Source\PSoC5/SPI0.c **** *  None.
 991:.\Generated_Source\PSoC5/SPI0.c **** *
 992:.\Generated_Source\PSoC5/SPI0.c **** * Side Effects:
 993:.\Generated_Source\PSoC5/SPI0.c **** *  Clear status register of the component.
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 28


 994:.\Generated_Source\PSoC5/SPI0.c **** *
 995:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
 996:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_ClearFIFO(void) 
 997:.\Generated_Source\PSoC5/SPI0.c **** {
 543              		.loc 1 997 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547 0000 08B5     		push	{r3, lr}
 548              	.LCFI4:
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 3, -8
 551              		.cfi_offset 14, -4
 552              	.L58:
 998:.\Generated_Source\PSoC5/SPI0.c ****     uint8 enableInterrupts;
 999:.\Generated_Source\PSoC5/SPI0.c **** 
1000:.\Generated_Source\PSoC5/SPI0.c ****     /* Clear Hardware RX FIFO */
1001:.\Generated_Source\PSoC5/SPI0.c ****     while(0u !=(SPI0_RX_STATUS_REG & SPI0_STS_RX_FIFO_NOT_EMPTY))
 553              		.loc 1 1001 0 discriminator 1
 554 0002 0C4B     		ldr	r3, .L61
 555 0004 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 556 0006 00F02001 		and	r1, r0, #32
 557 000a CAB2     		uxtb	r2, r1
 558 000c 12B1     		cbz	r2, .L60
 559              	.L59:
1002:.\Generated_Source\PSoC5/SPI0.c ****     {
1003:.\Generated_Source\PSoC5/SPI0.c ****         (void) CY_GET_REG8(SPI0_RXDATA_PTR);
 560              		.loc 1 1003 0
 561 000e 0A48     		ldr	r0, .L61+4
 562 0010 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 563 0012 F6E7     		b	.L58
 564              	.L60:
1004:.\Generated_Source\PSoC5/SPI0.c ****     }
1005:.\Generated_Source\PSoC5/SPI0.c **** 
1006:.\Generated_Source\PSoC5/SPI0.c ****     enableInterrupts = CyEnterCriticalSection();
 565              		.loc 1 1006 0
 566 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 567              	.LVL23:
1007:.\Generated_Source\PSoC5/SPI0.c ****     /* Clear TX FIFO */
1008:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_AUX_CONTROL_DP0_REG |= ((uint8)  SPI0_TX_FIFO_CLR);
 568              		.loc 1 1008 0
 569 0018 084B     		ldr	r3, .L61+8
 570 001a 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 571 001c 41F00102 		orr	r2, r1, #1
 572 0020 1A70     		strb	r2, [r3, #0]
1009:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI0_TX_FIFO_CLR);
 573              		.loc 1 1009 0
 574 0022 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 575 0024 01F0FE02 		and	r2, r1, #254
 576 0028 1A70     		strb	r2, [r3, #0]
1010:.\Generated_Source\PSoC5/SPI0.c **** 
1011:.\Generated_Source\PSoC5/SPI0.c ****     #if(SPI0_USE_SECOND_DATAPATH)
1012:.\Generated_Source\PSoC5/SPI0.c ****         /* Clear TX FIFO for 2nd Datapath */
1013:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_AUX_CONTROL_DP1_REG |= ((uint8)  SPI0_TX_FIFO_CLR);
1014:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI0_TX_FIFO_CLR);
1015:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (SPI0_USE_SECOND_DATAPATH) */
1016:.\Generated_Source\PSoC5/SPI0.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 29


1017:.\Generated_Source\PSoC5/SPI0.c **** }
 577              		.loc 1 1017 0
 578 002a BDE80840 		pop	{r3, lr}
1016:.\Generated_Source\PSoC5/SPI0.c ****     CyExitCriticalSection(enableInterrupts);
 579              		.loc 1 1016 0
 580 002e FFF7FEBF 		b	CyExitCriticalSection
 581              	.LVL24:
 582              	.L62:
 583 0032 00BF     		.align	2
 584              	.L61:
 585 0034 66650040 		.word	1073767782
 586 0038 56650040 		.word	1073767766
 587 003c 96650040 		.word	1073767830
 588              		.cfi_endproc
 589              	.LFE19:
 590              		.size	SPI0_ClearFIFO, .-SPI0_ClearFIFO
 591              		.section	.text.SPI0_Init,"ax",%progbits
 592              		.align	1
 593              		.global	SPI0_Init
 594              		.thumb
 595              		.thumb_func
 596              		.type	SPI0_Init, %function
 597              	SPI0_Init:
 598              	.LFB0:
  64:.\Generated_Source\PSoC5/SPI0.c **** {
 599              		.loc 1 64 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603 0000 08B5     		push	{r3, lr}
 604              	.LCFI5:
 605              		.cfi_def_cfa_offset 8
 606              		.cfi_offset 3, -8
 607              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_COUNTER_PERIOD_REG = SPI0_BITCTR_INIT;
 608              		.loc 1 66 0
 609 0002 074B     		ldr	r3, .L64
 610 0004 0F22     		movs	r2, #15
 611 0006 1A70     		strb	r2, [r3, #0]
  83:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_ClearFIFO();
 612              		.loc 1 83 0
 613 0008 FFF7FEFF 		bl	SPI0_ClearFIFO
 614              	.LVL25:
 615              	.LBB22:
 616              	.LBB23:
 401:.\Generated_Source\PSoC5/SPI0.c ****         tmpStatus = SPI0_TX_STATUS_REG;
 617              		.loc 1 401 0
 618 000c 0548     		ldr	r0, .L64+4
 619              	.LBE23:
 620              	.LBE22:
 621              	.LBB25:
 622              	.LBB26:
 452:.\Generated_Source\PSoC5/SPI0.c ****         tmpStatus = SPI0_RX_STATUS_REG;
 623              		.loc 1 452 0
 624 000e 0649     		ldr	r1, .L64+8
 625              	.LBE26:
 626              	.LBE25:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 30


 101:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_TX_STATUS_MASK_REG = SPI0_TX_INIT_INTERRUPTS_MASK;
 627              		.loc 1 101 0
 628 0010 064A     		ldr	r2, .L64+12
 629              	.LBB28:
 630              	.LBB24:
 401:.\Generated_Source\PSoC5/SPI0.c ****         tmpStatus = SPI0_TX_STATUS_REG;
 631              		.loc 1 401 0
 632 0012 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 633              	.LVL26:
 634              	.LBE24:
 635              	.LBE28:
 636              	.LBB29:
 637              	.LBB27:
 452:.\Generated_Source\PSoC5/SPI0.c ****         tmpStatus = SPI0_RX_STATUS_REG;
 638              		.loc 1 452 0
 639 0014 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 640              	.LVL27:
 641              	.LBE27:
 642              	.LBE29:
 101:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_TX_STATUS_MASK_REG = SPI0_TX_INIT_INTERRUPTS_MASK;
 643              		.loc 1 101 0
 644 0016 0023     		movs	r3, #0
 645 0018 1370     		strb	r3, [r2, #0]
 102:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_RX_STATUS_MASK_REG = SPI0_RX_INIT_INTERRUPTS_MASK;
 646              		.loc 1 102 0
 647 001a 5370     		strb	r3, [r2, #1]
 648 001c 08BD     		pop	{r3, pc}
 649              	.L65:
 650 001e 00BF     		.align	2
 651              	.L64:
 652 0020 86640040 		.word	1073767558
 653 0024 65650040 		.word	1073767781
 654 0028 66650040 		.word	1073767782
 655 002c 85650040 		.word	1073767813
 656              		.cfi_endproc
 657              	.LFE0:
 658              		.size	SPI0_Init, .-SPI0_Init
 659              		.section	.text.SPI0_Start,"ax",%progbits
 660              		.align	1
 661              		.global	SPI0_Start
 662              		.thumb
 663              		.thumb_func
 664              		.type	SPI0_Start, %function
 665              	SPI0_Start:
 666              	.LFB2:
 164:.\Generated_Source\PSoC5/SPI0.c **** {
 667              		.loc 1 164 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671 0000 10B5     		push	{r4, lr}
 672              	.LCFI6:
 673              		.cfi_def_cfa_offset 8
 674              		.cfi_offset 4, -8
 675              		.cfi_offset 14, -4
 165:.\Generated_Source\PSoC5/SPI0.c ****     if(0u == SPI0_initVar)
 676              		.loc 1 165 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 31


 677 0002 054C     		ldr	r4, .L68
 678 0004 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 679 0006 1BB9     		cbnz	r3, .L67
 167:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_Init();
 680              		.loc 1 167 0
 681 0008 FFF7FEFF 		bl	SPI0_Init
 682              	.LVL28:
 168:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_initVar = 1u;
 683              		.loc 1 168 0
 684 000c 0120     		movs	r0, #1
 685 000e 2070     		strb	r0, [r4, #0]
 686              	.L67:
 172:.\Generated_Source\PSoC5/SPI0.c **** }
 687              		.loc 1 172 0
 688 0010 BDE81040 		pop	{r4, lr}
 171:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_Enable();
 689              		.loc 1 171 0
 690 0014 FFF7FEBF 		b	SPI0_Enable
 691              	.LVL29:
 692              	.L69:
 693              		.align	2
 694              	.L68:
 695 0018 00000000 		.word	.LANCHOR0
 696              		.cfi_endproc
 697              	.LFE2:
 698              		.size	SPI0_Start, .-SPI0_Start
 699              		.section	.text.SPI0_EnableInt,"ax",%progbits
 700              		.align	1
 701              		.global	SPI0_EnableInt
 702              		.thumb
 703              		.thumb_func
 704              		.type	SPI0_EnableInt, %function
 705              	SPI0_EnableInt:
 706              	.LFB20:
1018:.\Generated_Source\PSoC5/SPI0.c **** 
1019:.\Generated_Source\PSoC5/SPI0.c **** 
1020:.\Generated_Source\PSoC5/SPI0.c **** /* Following functions are for version Compatibility, they are obsolete.
1021:.\Generated_Source\PSoC5/SPI0.c **** *  Please do not use it in new projects.
1022:.\Generated_Source\PSoC5/SPI0.c **** */
1023:.\Generated_Source\PSoC5/SPI0.c **** 
1024:.\Generated_Source\PSoC5/SPI0.c **** 
1025:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
1026:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_EnableInt
1027:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
1028:.\Generated_Source\PSoC5/SPI0.c **** *
1029:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
1030:.\Generated_Source\PSoC5/SPI0.c **** *  Enable internal interrupt generation.
1031:.\Generated_Source\PSoC5/SPI0.c **** *
1032:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
1033:.\Generated_Source\PSoC5/SPI0.c **** *  None.
1034:.\Generated_Source\PSoC5/SPI0.c **** *
1035:.\Generated_Source\PSoC5/SPI0.c **** * Return:
1036:.\Generated_Source\PSoC5/SPI0.c **** *  None.
1037:.\Generated_Source\PSoC5/SPI0.c **** *
1038:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
1039:.\Generated_Source\PSoC5/SPI0.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1040:.\Generated_Source\PSoC5/SPI0.c **** *
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 32


1041:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
1042:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_EnableInt(void) 
1043:.\Generated_Source\PSoC5/SPI0.c **** {
 707              		.loc 1 1043 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 712 0000 7047     		bx	lr
 713              		.cfi_endproc
 714              	.LFE20:
 715              		.size	SPI0_EnableInt, .-SPI0_EnableInt
 716              		.section	.text.SPI0_DisableInt,"ax",%progbits
 717              		.align	1
 718              		.global	SPI0_DisableInt
 719              		.thumb
 720              		.thumb_func
 721              		.type	SPI0_DisableInt, %function
 722              	SPI0_DisableInt:
 723              	.LFB21:
1044:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_EnableRxInt();
1045:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_EnableTxInt();
1046:.\Generated_Source\PSoC5/SPI0.c **** }
1047:.\Generated_Source\PSoC5/SPI0.c **** 
1048:.\Generated_Source\PSoC5/SPI0.c **** 
1049:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
1050:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_DisableInt
1051:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
1052:.\Generated_Source\PSoC5/SPI0.c **** *
1053:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
1054:.\Generated_Source\PSoC5/SPI0.c **** *  Disable internal interrupt generation.
1055:.\Generated_Source\PSoC5/SPI0.c **** *
1056:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
1057:.\Generated_Source\PSoC5/SPI0.c **** *  None.
1058:.\Generated_Source\PSoC5/SPI0.c **** *
1059:.\Generated_Source\PSoC5/SPI0.c **** * Return:
1060:.\Generated_Source\PSoC5/SPI0.c **** *  None.
1061:.\Generated_Source\PSoC5/SPI0.c **** *
1062:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
1063:.\Generated_Source\PSoC5/SPI0.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1064:.\Generated_Source\PSoC5/SPI0.c **** *
1065:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
1066:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_DisableInt(void) 
1067:.\Generated_Source\PSoC5/SPI0.c **** {
 724              		.loc 1 1067 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 729 0000 7047     		bx	lr
 730              		.cfi_endproc
 731              	.LFE21:
 732              		.size	SPI0_DisableInt, .-SPI0_DisableInt
 733              		.section	.text.SPI0_SetInterruptMode,"ax",%progbits
 734              		.align	1
 735              		.global	SPI0_SetInterruptMode
 736              		.thumb
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 33


 737              		.thumb_func
 738              		.type	SPI0_SetInterruptMode, %function
 739              	SPI0_SetInterruptMode:
 740              	.LFB22:
1068:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_DisableTxInt();
1069:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_DisableRxInt();
1070:.\Generated_Source\PSoC5/SPI0.c **** }
1071:.\Generated_Source\PSoC5/SPI0.c **** 
1072:.\Generated_Source\PSoC5/SPI0.c **** 
1073:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
1074:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_SetInterruptMode
1075:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
1076:.\Generated_Source\PSoC5/SPI0.c **** *
1077:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
1078:.\Generated_Source\PSoC5/SPI0.c **** *  Configure which status bits trigger an interrupt event.
1079:.\Generated_Source\PSoC5/SPI0.c **** *
1080:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
1081:.\Generated_Source\PSoC5/SPI0.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1082:.\Generated_Source\PSoC5/SPI0.c **** *  header file).
1083:.\Generated_Source\PSoC5/SPI0.c **** *
1084:.\Generated_Source\PSoC5/SPI0.c **** * Return:
1085:.\Generated_Source\PSoC5/SPI0.c **** *  None.
1086:.\Generated_Source\PSoC5/SPI0.c **** *
1087:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
1088:.\Generated_Source\PSoC5/SPI0.c **** *  Enables the output of specific status bits to the interrupt controller.
1089:.\Generated_Source\PSoC5/SPI0.c **** *
1090:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
1091:.\Generated_Source\PSoC5/SPI0.c **** void SPI0_SetInterruptMode(uint8 intSrc) 
1092:.\Generated_Source\PSoC5/SPI0.c **** {
 741              		.loc 1 1092 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 746              	.LVL30:
1093:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPI0_STS_SPI_IDLE));
 747              		.loc 1 1093 0
 748 0000 024B     		ldr	r3, .L73
 749 0002 00F0EF02 		and	r2, r0, #239
 750 0006 1A70     		strb	r2, [r3, #0]
1094:.\Generated_Source\PSoC5/SPI0.c ****     SPI0_RX_STATUS_MASK_REG  =  intSrc;
 751              		.loc 1 1094 0
 752 0008 5870     		strb	r0, [r3, #1]
 753 000a 7047     		bx	lr
 754              	.L74:
 755              		.align	2
 756              	.L73:
 757 000c 85650040 		.word	1073767813
 758              		.cfi_endproc
 759              	.LFE22:
 760              		.size	SPI0_SetInterruptMode, .-SPI0_SetInterruptMode
 761              		.section	.text.SPI0_ReadStatus,"ax",%progbits
 762              		.align	1
 763              		.global	SPI0_ReadStatus
 764              		.thumb
 765              		.thumb_func
 766              		.type	SPI0_ReadStatus, %function
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 34


 767              	SPI0_ReadStatus:
 768              	.LFB23:
1095:.\Generated_Source\PSoC5/SPI0.c **** }
1096:.\Generated_Source\PSoC5/SPI0.c **** 
1097:.\Generated_Source\PSoC5/SPI0.c **** 
1098:.\Generated_Source\PSoC5/SPI0.c **** /*******************************************************************************
1099:.\Generated_Source\PSoC5/SPI0.c **** * Function Name: SPI0_ReadStatus
1100:.\Generated_Source\PSoC5/SPI0.c **** ********************************************************************************
1101:.\Generated_Source\PSoC5/SPI0.c **** *
1102:.\Generated_Source\PSoC5/SPI0.c **** * Summary:
1103:.\Generated_Source\PSoC5/SPI0.c **** *  Read the status register for the component.
1104:.\Generated_Source\PSoC5/SPI0.c **** *
1105:.\Generated_Source\PSoC5/SPI0.c **** * Parameters:
1106:.\Generated_Source\PSoC5/SPI0.c **** *  None.
1107:.\Generated_Source\PSoC5/SPI0.c **** *
1108:.\Generated_Source\PSoC5/SPI0.c **** * Return:
1109:.\Generated_Source\PSoC5/SPI0.c **** *  Contents of the status register.
1110:.\Generated_Source\PSoC5/SPI0.c **** *
1111:.\Generated_Source\PSoC5/SPI0.c **** * Global variables:
1112:.\Generated_Source\PSoC5/SPI0.c **** *  SPI0_swStatus - used to store in software status register,
1113:.\Generated_Source\PSoC5/SPI0.c **** *  modified every function call - resets to zero.
1114:.\Generated_Source\PSoC5/SPI0.c **** *
1115:.\Generated_Source\PSoC5/SPI0.c **** * Theory:
1116:.\Generated_Source\PSoC5/SPI0.c **** *  Allows the user and the API to read the status register for error detection
1117:.\Generated_Source\PSoC5/SPI0.c **** *  and flow control.
1118:.\Generated_Source\PSoC5/SPI0.c **** *
1119:.\Generated_Source\PSoC5/SPI0.c **** * Side Effects:
1120:.\Generated_Source\PSoC5/SPI0.c **** *  Clear status register of the component.
1121:.\Generated_Source\PSoC5/SPI0.c **** *
1122:.\Generated_Source\PSoC5/SPI0.c **** * Reentrant:
1123:.\Generated_Source\PSoC5/SPI0.c **** *  No.
1124:.\Generated_Source\PSoC5/SPI0.c **** *
1125:.\Generated_Source\PSoC5/SPI0.c **** *******************************************************************************/
1126:.\Generated_Source\PSoC5/SPI0.c **** uint8 SPI0_ReadStatus(void) 
1127:.\Generated_Source\PSoC5/SPI0.c **** {
 769              		.loc 1 1127 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              		@ link register save eliminated.
1128:.\Generated_Source\PSoC5/SPI0.c ****     uint8 tmpStatus;
1129:.\Generated_Source\PSoC5/SPI0.c **** 
1130:.\Generated_Source\PSoC5/SPI0.c ****     #if(SPI0_TX_SOFTWARE_BUF_ENABLED || SPI0_RX_SOFTWARE_BUF_ENABLED)
1131:.\Generated_Source\PSoC5/SPI0.c **** 
1132:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_DisableInt();
1133:.\Generated_Source\PSoC5/SPI0.c **** 
1134:.\Generated_Source\PSoC5/SPI0.c ****         tmpStatus  = SPI0_GET_STATUS_RX(SPI0_swStatusRx);
1135:.\Generated_Source\PSoC5/SPI0.c ****         tmpStatus |= SPI0_GET_STATUS_TX(SPI0_swStatusTx);
1136:.\Generated_Source\PSoC5/SPI0.c ****         tmpStatus &= ((uint8) ~SPI0_STS_SPI_IDLE);
1137:.\Generated_Source\PSoC5/SPI0.c **** 
1138:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_swStatusTx = 0u;
1139:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_swStatusRx = 0u;
1140:.\Generated_Source\PSoC5/SPI0.c **** 
1141:.\Generated_Source\PSoC5/SPI0.c ****         SPI0_EnableInt();
1142:.\Generated_Source\PSoC5/SPI0.c **** 
1143:.\Generated_Source\PSoC5/SPI0.c ****     #else
1144:.\Generated_Source\PSoC5/SPI0.c **** 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 35


1145:.\Generated_Source\PSoC5/SPI0.c ****         tmpStatus  = SPI0_RX_STATUS_REG;
 774              		.loc 1 1145 0
 775 0000 034B     		ldr	r3, .L76
1146:.\Generated_Source\PSoC5/SPI0.c ****         tmpStatus |= SPI0_TX_STATUS_REG;
 776              		.loc 1 1146 0
 777 0002 044A     		ldr	r2, .L76+4
1145:.\Generated_Source\PSoC5/SPI0.c ****         tmpStatus  = SPI0_RX_STATUS_REG;
 778              		.loc 1 1145 0
 779 0004 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 780              	.LVL31:
 781              		.loc 1 1146 0
 782 0006 1078     		ldrb	r0, [r2, #0]	@ zero_extendqisi2
 783 0008 0843     		orrs	r0, r0, r1
 784              	.LVL32:
1147:.\Generated_Source\PSoC5/SPI0.c ****         tmpStatus &= ((uint8) ~SPI0_STS_SPI_IDLE);
1148:.\Generated_Source\PSoC5/SPI0.c **** 
1149:.\Generated_Source\PSoC5/SPI0.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED || SPI0_RX_SOFTWARE_BUF_ENABLED) */
1150:.\Generated_Source\PSoC5/SPI0.c **** 
1151:.\Generated_Source\PSoC5/SPI0.c ****     return(tmpStatus);
1152:.\Generated_Source\PSoC5/SPI0.c **** }
 785              		.loc 1 1152 0
 786 000a 00F0EF00 		and	r0, r0, #239
 787              	.LVL33:
 788 000e 7047     		bx	lr
 789              	.L77:
 790              		.align	2
 791              	.L76:
 792 0010 66650040 		.word	1073767782
 793 0014 65650040 		.word	1073767781
 794              		.cfi_endproc
 795              	.LFE23:
 796              		.size	SPI0_ReadStatus, .-SPI0_ReadStatus
 797              		.comm	SPI0_swStatusRx,1,1
 798              		.comm	SPI0_swStatusTx,1,1
 799              		.global	SPI0_initVar
 800              		.bss
 801              		.set	.LANCHOR0,. + 0
 802              		.type	SPI0_initVar, %object
 803              		.size	SPI0_initVar, 1
 804              	SPI0_initVar:
 805 0000 00       		.space	1
 806              		.text
 807              	.Letext0:
 808              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 809              		.file 3 ".\\Generated_Source\\PSoC5\\SPI0_IntClock.h"
 810              		.file 4 ".\\Generated_Source\\PSoC5\\CyLib.h"
 811              		.section	.debug_info,"",%progbits
 812              	.Ldebug_info0:
 813 0000 91050000 		.4byte	0x591
 814 0004 0200     		.2byte	0x2
 815 0006 00000000 		.4byte	.Ldebug_abbrev0
 816 000a 04       		.byte	0x4
 817 000b 01       		.uleb128 0x1
 818 000c 34030000 		.4byte	.LASF53
 819 0010 01       		.byte	0x1
 820 0011 B0030000 		.4byte	.LASF54
 821 0015 5E000000 		.4byte	.LASF55
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 36


 822 0019 60000000 		.4byte	.Ldebug_ranges0+0x60
 823 001d 00000000 		.4byte	0
 824 0021 00000000 		.4byte	0
 825 0025 00000000 		.4byte	.Ldebug_line0
 826 0029 02       		.uleb128 0x2
 827 002a 01       		.byte	0x1
 828 002b 06       		.byte	0x6
 829 002c 9A030000 		.4byte	.LASF0
 830 0030 02       		.uleb128 0x2
 831 0031 01       		.byte	0x1
 832 0032 08       		.byte	0x8
 833 0033 CE010000 		.4byte	.LASF1
 834 0037 02       		.uleb128 0x2
 835 0038 02       		.byte	0x2
 836 0039 05       		.byte	0x5
 837 003a 07030000 		.4byte	.LASF2
 838 003e 02       		.uleb128 0x2
 839 003f 02       		.byte	0x2
 840 0040 07       		.byte	0x7
 841 0041 4B000000 		.4byte	.LASF3
 842 0045 02       		.uleb128 0x2
 843 0046 04       		.byte	0x4
 844 0047 05       		.byte	0x5
 845 0048 87030000 		.4byte	.LASF4
 846 004c 02       		.uleb128 0x2
 847 004d 04       		.byte	0x4
 848 004e 07       		.byte	0x7
 849 004f 60010000 		.4byte	.LASF5
 850 0053 02       		.uleb128 0x2
 851 0054 08       		.byte	0x8
 852 0055 05       		.byte	0x5
 853 0056 A6020000 		.4byte	.LASF6
 854 005a 02       		.uleb128 0x2
 855 005b 08       		.byte	0x8
 856 005c 07       		.byte	0x7
 857 005d 2A010000 		.4byte	.LASF7
 858 0061 03       		.uleb128 0x3
 859 0062 04       		.byte	0x4
 860 0063 05       		.byte	0x5
 861 0064 696E7400 		.ascii	"int\000"
 862 0068 02       		.uleb128 0x2
 863 0069 04       		.byte	0x4
 864 006a 07       		.byte	0x7
 865 006b 15020000 		.4byte	.LASF8
 866 006f 04       		.uleb128 0x4
 867 0070 82010000 		.4byte	.LASF12
 868 0074 02       		.byte	0x2
 869 0075 5B       		.byte	0x5b
 870 0076 30000000 		.4byte	0x30
 871 007a 02       		.uleb128 0x2
 872 007b 04       		.byte	0x4
 873 007c 04       		.byte	0x4
 874 007d 24010000 		.4byte	.LASF9
 875 0081 02       		.uleb128 0x2
 876 0082 08       		.byte	0x8
 877 0083 04       		.byte	0x4
 878 0084 DC010000 		.4byte	.LASF10
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 37


 879 0088 02       		.uleb128 0x2
 880 0089 01       		.byte	0x1
 881 008a 08       		.byte	0x8
 882 008b DA020000 		.4byte	.LASF11
 883 008f 04       		.uleb128 0x4
 884 0090 5B010000 		.4byte	.LASF13
 885 0094 02       		.byte	0x2
 886 0095 F0       		.byte	0xf0
 887 0096 9A000000 		.4byte	0x9a
 888 009a 05       		.uleb128 0x5
 889 009b 6F000000 		.4byte	0x6f
 890 009f 02       		.uleb128 0x2
 891 00a0 04       		.byte	0x4
 892 00a1 07       		.byte	0x7
 893 00a2 8C020000 		.4byte	.LASF14
 894 00a6 06       		.uleb128 0x6
 895 00a7 01       		.byte	0x1
 896 00a8 23030000 		.4byte	.LASF15
 897 00ac 01       		.byte	0x1
 898 00ad E3       		.byte	0xe3
 899 00ae 01       		.byte	0x1
 900 00af 01       		.byte	0x1
 901 00b0 06       		.uleb128 0x6
 902 00b1 01       		.byte	0x1
 903 00b2 1F000000 		.4byte	.LASF16
 904 00b6 01       		.byte	0x1
 905 00b7 FC       		.byte	0xfc
 906 00b8 01       		.byte	0x1
 907 00b9 01       		.byte	0x1
 908 00ba 07       		.uleb128 0x7
 909 00bb 01       		.byte	0x1
 910 00bc 11030000 		.4byte	.LASF17
 911 00c0 01       		.byte	0x1
 912 00c1 1501     		.2byte	0x115
 913 00c3 01       		.byte	0x1
 914 00c4 01       		.byte	0x1
 915 00c5 07       		.uleb128 0x7
 916 00c6 01       		.byte	0x1
 917 00c7 88010000 		.4byte	.LASF18
 918 00cb 01       		.byte	0x1
 919 00cc 2E01     		.2byte	0x12e
 920 00ce 01       		.byte	0x1
 921 00cf 01       		.byte	0x1
 922 00d0 08       		.uleb128 0x8
 923 00d1 01       		.byte	0x1
 924 00d2 BC010000 		.4byte	.LASF19
 925 00d6 01       		.byte	0x1
 926 00d7 8201     		.2byte	0x182
 927 00d9 01       		.byte	0x1
 928 00da 6F000000 		.4byte	0x6f
 929 00de 01       		.byte	0x1
 930 00df F0000000 		.4byte	0xf0
 931 00e3 09       		.uleb128 0x9
 932 00e4 90030000 		.4byte	.LASF21
 933 00e8 01       		.byte	0x1
 934 00e9 8401     		.2byte	0x184
 935 00eb 6F000000 		.4byte	0x6f
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 38


 936 00ef 00       		.byte	0
 937 00f0 08       		.uleb128 0x8
 938 00f1 01       		.byte	0x1
 939 00f2 DF020000 		.4byte	.LASF20
 940 00f6 01       		.byte	0x1
 941 00f7 B501     		.2byte	0x1b5
 942 00f9 01       		.byte	0x1
 943 00fa 6F000000 		.4byte	0x6f
 944 00fe 01       		.byte	0x1
 945 00ff 10010000 		.4byte	0x110
 946 0103 09       		.uleb128 0x9
 947 0104 90030000 		.4byte	.LASF21
 948 0108 01       		.byte	0x1
 949 0109 B701     		.2byte	0x1b7
 950 010b 6F000000 		.4byte	0x6f
 951 010f 00       		.byte	0
 952 0110 0A       		.uleb128 0xa
 953 0111 01       		.byte	0x1
 954 0112 3F000000 		.4byte	.LASF22
 955 0116 01       		.byte	0x1
 956 0117 78       		.byte	0x78
 957 0118 01       		.byte	0x1
 958 0119 00000000 		.4byte	.LFB1
 959 011d 38000000 		.4byte	.LFE1
 960 0121 00000000 		.4byte	.LLST0
 961 0125 01       		.byte	0x1
 962 0126 56010000 		.4byte	0x156
 963 012a 0B       		.uleb128 0xb
 964 012b 95020000 		.4byte	.LASF24
 965 012f 01       		.byte	0x1
 966 0130 7A       		.byte	0x7a
 967 0131 6F000000 		.4byte	0x6f
 968 0135 20000000 		.4byte	.LLST1
 969 0139 0C       		.uleb128 0xc
 970 013a 06000000 		.4byte	.LVL0
 971 013e 5E050000 		.4byte	0x55e
 972 0142 0C       		.uleb128 0xc
 973 0143 2C000000 		.4byte	.LVL1
 974 0147 6C050000 		.4byte	0x56c
 975 014b 0D       		.uleb128 0xd
 976 014c 34000000 		.4byte	.LVL2
 977 0150 01       		.byte	0x1
 978 0151 80050000 		.4byte	0x580
 979 0155 00       		.byte	0
 980 0156 0A       		.uleb128 0xa
 981 0157 01       		.byte	0x1
 982 0158 A6030000 		.4byte	.LASF23
 983 015c 01       		.byte	0x1
 984 015d C0       		.byte	0xc0
 985 015e 01       		.byte	0x1
 986 015f 00000000 		.4byte	.LFB3
 987 0163 28000000 		.4byte	.LFE3
 988 0167 33000000 		.4byte	.LLST2
 989 016b 01       		.byte	0x1
 990 016c 9C010000 		.4byte	0x19c
 991 0170 0B       		.uleb128 0xb
 992 0171 95020000 		.4byte	.LASF24
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 39


 993 0175 01       		.byte	0x1
 994 0176 C2       		.byte	0xc2
 995 0177 6F000000 		.4byte	0x6f
 996 017b 53000000 		.4byte	.LLST3
 997 017f 0C       		.uleb128 0xc
 998 0180 06000000 		.4byte	.LVL3
 999 0184 5E050000 		.4byte	0x55e
 1000 0188 0C       		.uleb128 0xc
 1001 0189 1C000000 		.4byte	.LVL4
 1002 018d 6C050000 		.4byte	0x56c
 1003 0191 0D       		.uleb128 0xd
 1004 0192 24000000 		.4byte	.LVL5
 1005 0196 01       		.byte	0x1
 1006 0197 8A050000 		.4byte	0x58a
 1007 019b 00       		.byte	0
 1008 019c 0E       		.uleb128 0xe
 1009 019d A6000000 		.4byte	0xa6
 1010 01a1 00000000 		.4byte	.LFB4
 1011 01a5 02000000 		.4byte	.LFE4
 1012 01a9 02       		.byte	0x2
 1013 01aa 7D       		.byte	0x7d
 1014 01ab 00       		.sleb128 0
 1015 01ac 01       		.byte	0x1
 1016 01ad 0E       		.uleb128 0xe
 1017 01ae B0000000 		.4byte	0xb0
 1018 01b2 00000000 		.4byte	.LFB5
 1019 01b6 02000000 		.4byte	.LFE5
 1020 01ba 02       		.byte	0x2
 1021 01bb 7D       		.byte	0x7d
 1022 01bc 00       		.sleb128 0
 1023 01bd 01       		.byte	0x1
 1024 01be 0E       		.uleb128 0xe
 1025 01bf BA000000 		.4byte	0xba
 1026 01c3 00000000 		.4byte	.LFB6
 1027 01c7 02000000 		.4byte	.LFE6
 1028 01cb 02       		.byte	0x2
 1029 01cc 7D       		.byte	0x7d
 1030 01cd 00       		.sleb128 0
 1031 01ce 01       		.byte	0x1
 1032 01cf 0E       		.uleb128 0xe
 1033 01d0 C5000000 		.4byte	0xc5
 1034 01d4 00000000 		.4byte	.LFB7
 1035 01d8 02000000 		.4byte	.LFE7
 1036 01dc 02       		.byte	0x2
 1037 01dd 7D       		.byte	0x7d
 1038 01de 00       		.sleb128 0
 1039 01df 01       		.byte	0x1
 1040 01e0 0F       		.uleb128 0xf
 1041 01e1 01       		.byte	0x1
 1042 01e2 0C010000 		.4byte	.LASF25
 1043 01e6 01       		.byte	0x1
 1044 01e7 4801     		.2byte	0x148
 1045 01e9 01       		.byte	0x1
 1046 01ea 00000000 		.4byte	.LFB8
 1047 01ee 0C000000 		.4byte	.LFE8
 1048 01f2 02       		.byte	0x2
 1049 01f3 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 40


 1050 01f4 00       		.sleb128 0
 1051 01f5 01       		.byte	0x1
 1052 01f6 09020000 		.4byte	0x209
 1053 01fa 10       		.uleb128 0x10
 1054 01fb E3010000 		.4byte	.LASF27
 1055 01ff 01       		.byte	0x1
 1056 0200 4801     		.2byte	0x148
 1057 0202 6F000000 		.4byte	0x6f
 1058 0206 01       		.byte	0x1
 1059 0207 50       		.byte	0x50
 1060 0208 00       		.byte	0
 1061 0209 0F       		.uleb128 0xf
 1062 020a 01       		.byte	0x1
 1063 020b A4010000 		.4byte	.LASF26
 1064 020f 01       		.byte	0x1
 1065 0210 6001     		.2byte	0x160
 1066 0212 01       		.byte	0x1
 1067 0213 00000000 		.4byte	.LFB9
 1068 0217 0C000000 		.4byte	.LFE9
 1069 021b 02       		.byte	0x2
 1070 021c 7D       		.byte	0x7d
 1071 021d 00       		.sleb128 0
 1072 021e 01       		.byte	0x1
 1073 021f 32020000 		.4byte	0x232
 1074 0223 10       		.uleb128 0x10
 1075 0224 E3010000 		.4byte	.LASF27
 1076 0228 01       		.byte	0x1
 1077 0229 6001     		.2byte	0x160
 1078 022b 6F000000 		.4byte	0x6f
 1079 022f 01       		.byte	0x1
 1080 0230 50       		.byte	0x50
 1081 0231 00       		.byte	0
 1082 0232 11       		.uleb128 0x11
 1083 0233 D0000000 		.4byte	0xd0
 1084 0237 00000000 		.4byte	.LFB10
 1085 023b 0C000000 		.4byte	.LFE10
 1086 023f 02       		.byte	0x2
 1087 0240 7D       		.byte	0x7d
 1088 0241 00       		.sleb128 0
 1089 0242 01       		.byte	0x1
 1090 0243 4F020000 		.4byte	0x24f
 1091 0247 12       		.uleb128 0x12
 1092 0248 E3000000 		.4byte	0xe3
 1093 024c 01       		.byte	0x1
 1094 024d 50       		.byte	0x50
 1095 024e 00       		.byte	0
 1096 024f 11       		.uleb128 0x11
 1097 0250 F0000000 		.4byte	0xf0
 1098 0254 00000000 		.4byte	.LFB11
 1099 0258 0C000000 		.4byte	.LFE11
 1100 025c 02       		.byte	0x2
 1101 025d 7D       		.byte	0x7d
 1102 025e 00       		.sleb128 0
 1103 025f 01       		.byte	0x1
 1104 0260 6C020000 		.4byte	0x26c
 1105 0264 12       		.uleb128 0x12
 1106 0265 03010000 		.4byte	0x103
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 41


 1107 0269 01       		.byte	0x1
 1108 026a 50       		.byte	0x50
 1109 026b 00       		.byte	0
 1110 026c 0F       		.uleb128 0xf
 1111 026d 01       		.byte	0x1
 1112 026e E6000000 		.4byte	.LASF28
 1113 0272 01       		.byte	0x1
 1114 0273 EE01     		.2byte	0x1ee
 1115 0275 01       		.byte	0x1
 1116 0276 00000000 		.4byte	.LFB12
 1117 027a 1C000000 		.4byte	.LFE12
 1118 027e 02       		.byte	0x2
 1119 027f 7D       		.byte	0x7d
 1120 0280 00       		.sleb128 0
 1121 0281 01       		.byte	0x1
 1122 0282 95020000 		.4byte	0x295
 1123 0286 10       		.uleb128 0x10
 1124 0287 75020000 		.4byte	.LASF29
 1125 028b 01       		.byte	0x1
 1126 028c EE01     		.2byte	0x1ee
 1127 028e 6F000000 		.4byte	0x6f
 1128 0292 01       		.byte	0x1
 1129 0293 50       		.byte	0x50
 1130 0294 00       		.byte	0
 1131 0295 13       		.uleb128 0x13
 1132 0296 01       		.byte	0x1
 1133 0297 D0030000 		.4byte	.LASF31
 1134 029b 01       		.byte	0x1
 1135 029c 5B02     		.2byte	0x25b
 1136 029e 01       		.byte	0x1
 1137 029f 6F000000 		.4byte	0x6f
 1138 02a3 00000000 		.4byte	.LFB13
 1139 02a7 0C000000 		.4byte	.LFE13
 1140 02ab 02       		.byte	0x2
 1141 02ac 7D       		.byte	0x7d
 1142 02ad 00       		.sleb128 0
 1143 02ae 01       		.byte	0x1
 1144 02af C2020000 		.4byte	0x2c2
 1145 02b3 14       		.uleb128 0x14
 1146 02b4 F7000000 		.4byte	.LASF30
 1147 02b8 01       		.byte	0x1
 1148 02b9 5D02     		.2byte	0x25d
 1149 02bb 6F000000 		.4byte	0x6f
 1150 02bf 01       		.byte	0x1
 1151 02c0 50       		.byte	0x50
 1152 02c1 00       		.byte	0
 1153 02c2 13       		.uleb128 0x13
 1154 02c3 01       		.byte	0x1
 1155 02c4 41010000 		.4byte	.LASF32
 1156 02c8 01       		.byte	0x1
 1157 02c9 9B02     		.2byte	0x29b
 1158 02cb 01       		.byte	0x1
 1159 02cc 6F000000 		.4byte	0x6f
 1160 02d0 00000000 		.4byte	.LFB14
 1161 02d4 10000000 		.4byte	.LFE14
 1162 02d8 02       		.byte	0x2
 1163 02d9 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 42


 1164 02da 00       		.sleb128 0
 1165 02db 01       		.byte	0x1
 1166 02dc F1020000 		.4byte	0x2f1
 1167 02e0 15       		.uleb128 0x15
 1168 02e1 56010000 		.4byte	.LASF33
 1169 02e5 01       		.byte	0x1
 1170 02e6 9D02     		.2byte	0x29d
 1171 02e8 6F000000 		.4byte	0x6f
 1172 02ec 66000000 		.4byte	.LLST4
 1173 02f0 00       		.byte	0
 1174 02f1 13       		.uleb128 0x13
 1175 02f2 01       		.byte	0x1
 1176 02f3 22020000 		.4byte	.LASF34
 1177 02f7 01       		.byte	0x1
 1178 02f8 D802     		.2byte	0x2d8
 1179 02fa 01       		.byte	0x1
 1180 02fb 6F000000 		.4byte	0x6f
 1181 02ff 00000000 		.4byte	.LFB15
 1182 0303 24000000 		.4byte	.LFE15
 1183 0307 02       		.byte	0x2
 1184 0308 7D       		.byte	0x7d
 1185 0309 00       		.sleb128 0
 1186 030a 01       		.byte	0x1
 1187 030b 20030000 		.4byte	0x320
 1188 030f 15       		.uleb128 0x15
 1189 0310 56010000 		.4byte	.LASF33
 1190 0314 01       		.byte	0x1
 1191 0315 DA02     		.2byte	0x2da
 1192 0317 6F000000 		.4byte	0x6f
 1193 031b 82000000 		.4byte	.LLST5
 1194 031f 00       		.byte	0
 1195 0320 16       		.uleb128 0x16
 1196 0321 01       		.byte	0x1
 1197 0322 C3000000 		.4byte	.LASF43
 1198 0326 01       		.byte	0x1
 1199 0327 2703     		.2byte	0x327
 1200 0329 01       		.byte	0x1
 1201 032a 00000000 		.4byte	.LFB16
 1202 032e 1C000000 		.4byte	.LFE16
 1203 0332 02       		.byte	0x2
 1204 0333 7D       		.byte	0x7d
 1205 0334 00       		.sleb128 0
 1206 0335 01       		.byte	0x1
 1207 0336 17       		.uleb128 0x17
 1208 0337 01       		.byte	0x1
 1209 0338 B4020000 		.4byte	.LASF35
 1210 033c 01       		.byte	0x1
 1211 033d 5E03     		.2byte	0x35e
 1212 033f 01       		.byte	0x1
 1213 0340 00000000 		.4byte	.LFB17
 1214 0344 24000000 		.4byte	.LFE17
 1215 0348 A0000000 		.4byte	.LLST6
 1216 034c 01       		.byte	0x1
 1217 034d 75030000 		.4byte	0x375
 1218 0351 15       		.uleb128 0x15
 1219 0352 95020000 		.4byte	.LASF24
 1220 0356 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 43


 1221 0357 6003     		.2byte	0x360
 1222 0359 6F000000 		.4byte	0x6f
 1223 035d C0000000 		.4byte	.LLST7
 1224 0361 0C       		.uleb128 0xc
 1225 0362 06000000 		.4byte	.LVL18
 1226 0366 5E050000 		.4byte	0x55e
 1227 036a 0D       		.uleb128 0xd
 1228 036b 20000000 		.4byte	.LVL19
 1229 036f 01       		.byte	0x1
 1230 0370 6C050000 		.4byte	0x56c
 1231 0374 00       		.byte	0
 1232 0375 17       		.uleb128 0x17
 1233 0376 01       		.byte	0x1
 1234 0377 FE000000 		.4byte	.LASF36
 1235 037b 01       		.byte	0x1
 1236 037c C303     		.2byte	0x3c3
 1237 037e 01       		.byte	0x1
 1238 037f 00000000 		.4byte	.LFB18
 1239 0383 1A000000 		.4byte	.LFE18
 1240 0387 D3000000 		.4byte	.LLST8
 1241 038b 01       		.byte	0x1
 1242 038c CA030000 		.4byte	0x3ca
 1243 0390 18       		.uleb128 0x18
 1244 0391 18000000 		.4byte	.LASF37
 1245 0395 01       		.byte	0x1
 1246 0396 C303     		.2byte	0x3c3
 1247 0398 CA030000 		.4byte	0x3ca
 1248 039c F3000000 		.4byte	.LLST9
 1249 03a0 18       		.uleb128 0x18
 1250 03a1 9A010000 		.4byte	.LASF38
 1251 03a5 01       		.byte	0x1
 1252 03a6 C303     		.2byte	0x3c3
 1253 03a8 6F000000 		.4byte	0x6f
 1254 03ac 11010000 		.4byte	.LLST10
 1255 03b0 15       		.uleb128 0x15
 1256 03b1 6C020000 		.4byte	.LASF39
 1257 03b5 01       		.byte	0x1
 1258 03b6 C603     		.2byte	0x3c6
 1259 03b8 6F000000 		.4byte	0x6f
 1260 03bc 24010000 		.4byte	.LLST11
 1261 03c0 0C       		.uleb128 0xc
 1262 03c1 14000000 		.4byte	.LVL22
 1263 03c5 6C020000 		.4byte	0x26c
 1264 03c9 00       		.byte	0
 1265 03ca 19       		.uleb128 0x19
 1266 03cb 04       		.byte	0x4
 1267 03cc D0030000 		.4byte	0x3d0
 1268 03d0 1A       		.uleb128 0x1a
 1269 03d1 6F000000 		.4byte	0x6f
 1270 03d5 17       		.uleb128 0x17
 1271 03d6 01       		.byte	0x1
 1272 03d7 5D020000 		.4byte	.LASF40
 1273 03db 01       		.byte	0x1
 1274 03dc E403     		.2byte	0x3e4
 1275 03de 01       		.byte	0x1
 1276 03df 00000000 		.4byte	.LFB19
 1277 03e3 40000000 		.4byte	.LFE19
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 44


 1278 03e7 38010000 		.4byte	.LLST12
 1279 03eb 01       		.byte	0x1
 1280 03ec 14040000 		.4byte	0x414
 1281 03f0 15       		.uleb128 0x15
 1282 03f1 95020000 		.4byte	.LASF24
 1283 03f5 01       		.byte	0x1
 1284 03f6 E603     		.2byte	0x3e6
 1285 03f8 6F000000 		.4byte	0x6f
 1286 03fc 58010000 		.4byte	.LLST13
 1287 0400 0C       		.uleb128 0xc
 1288 0401 18000000 		.4byte	.LVL23
 1289 0405 5E050000 		.4byte	0x55e
 1290 0409 0D       		.uleb128 0xd
 1291 040a 32000000 		.4byte	.LVL24
 1292 040e 01       		.byte	0x1
 1293 040f 6C050000 		.4byte	0x56c
 1294 0413 00       		.byte	0
 1295 0414 0A       		.uleb128 0xa
 1296 0415 01       		.byte	0x1
 1297 0416 7D030000 		.4byte	.LASF41
 1298 041a 01       		.byte	0x1
 1299 041b 3F       		.byte	0x3f
 1300 041c 01       		.byte	0x1
 1301 041d 00000000 		.4byte	.LFB0
 1302 0421 30000000 		.4byte	.LFE0
 1303 0425 6B010000 		.4byte	.LLST14
 1304 0429 01       		.byte	0x1
 1305 042a 76040000 		.4byte	0x476
 1306 042e 1B       		.uleb128 0x1b
 1307 042f D0000000 		.4byte	0xd0
 1308 0433 0C000000 		.4byte	.LBB22
 1309 0437 00000000 		.4byte	.Ldebug_ranges0+0
 1310 043b 01       		.byte	0x1
 1311 043c 61       		.byte	0x61
 1312 043d 4D040000 		.4byte	0x44d
 1313 0441 1C       		.uleb128 0x1c
 1314 0442 18000000 		.4byte	.Ldebug_ranges0+0x18
 1315 0446 1D       		.uleb128 0x1d
 1316 0447 E3000000 		.4byte	0xe3
 1317 044b 00       		.byte	0
 1318 044c 00       		.byte	0
 1319 044d 1B       		.uleb128 0x1b
 1320 044e F0000000 		.4byte	0xf0
 1321 0452 0E000000 		.4byte	.LBB25
 1322 0456 30000000 		.4byte	.Ldebug_ranges0+0x30
 1323 045a 01       		.byte	0x1
 1324 045b 62       		.byte	0x62
 1325 045c 6C040000 		.4byte	0x46c
 1326 0460 1C       		.uleb128 0x1c
 1327 0461 48000000 		.4byte	.Ldebug_ranges0+0x48
 1328 0465 1D       		.uleb128 0x1d
 1329 0466 03010000 		.4byte	0x103
 1330 046a 00       		.byte	0
 1331 046b 00       		.byte	0
 1332 046c 0C       		.uleb128 0xc
 1333 046d 0C000000 		.4byte	.LVL25
 1334 0471 D5030000 		.4byte	0x3d5
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 45


 1335 0475 00       		.byte	0
 1336 0476 0A       		.uleb128 0xa
 1337 0477 01       		.byte	0x1
 1338 0478 00000000 		.4byte	.LASF42
 1339 047c 01       		.byte	0x1
 1340 047d A3       		.byte	0xa3
 1341 047e 01       		.byte	0x1
 1342 047f 00000000 		.4byte	.LFB2
 1343 0483 1C000000 		.4byte	.LFE2
 1344 0487 8B010000 		.4byte	.LLST15
 1345 048b 01       		.byte	0x1
 1346 048c A4040000 		.4byte	0x4a4
 1347 0490 0C       		.uleb128 0xc
 1348 0491 0C000000 		.4byte	.LVL28
 1349 0495 14040000 		.4byte	0x414
 1350 0499 0D       		.uleb128 0xd
 1351 049a 18000000 		.4byte	.LVL29
 1352 049e 01       		.byte	0x1
 1353 049f 10010000 		.4byte	0x110
 1354 04a3 00       		.byte	0
 1355 04a4 16       		.uleb128 0x16
 1356 04a5 01       		.byte	0x1
 1357 04a6 30000000 		.4byte	.LASF44
 1358 04aa 01       		.byte	0x1
 1359 04ab 1204     		.2byte	0x412
 1360 04ad 01       		.byte	0x1
 1361 04ae 00000000 		.4byte	.LFB20
 1362 04b2 02000000 		.4byte	.LFE20
 1363 04b6 02       		.byte	0x2
 1364 04b7 7D       		.byte	0x7d
 1365 04b8 00       		.sleb128 0
 1366 04b9 01       		.byte	0x1
 1367 04ba 16       		.uleb128 0x16
 1368 04bb 01       		.byte	0x1
 1369 04bc D6000000 		.4byte	.LASF45
 1370 04c0 01       		.byte	0x1
 1371 04c1 2A04     		.2byte	0x42a
 1372 04c3 01       		.byte	0x1
 1373 04c4 00000000 		.4byte	.LFB21
 1374 04c8 02000000 		.4byte	.LFE21
 1375 04cc 02       		.byte	0x2
 1376 04cd 7D       		.byte	0x7d
 1377 04ce 00       		.sleb128 0
 1378 04cf 01       		.byte	0x1
 1379 04d0 0F       		.uleb128 0xf
 1380 04d1 01       		.byte	0x1
 1381 04d2 F1020000 		.4byte	.LASF46
 1382 04d6 01       		.byte	0x1
 1383 04d7 4304     		.2byte	0x443
 1384 04d9 01       		.byte	0x1
 1385 04da 00000000 		.4byte	.LFB22
 1386 04de 10000000 		.4byte	.LFE22
 1387 04e2 02       		.byte	0x2
 1388 04e3 7D       		.byte	0x7d
 1389 04e4 00       		.sleb128 0
 1390 04e5 01       		.byte	0x1
 1391 04e6 F9040000 		.4byte	0x4f9
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 46


 1392 04ea 10       		.uleb128 0x10
 1393 04eb E3010000 		.4byte	.LASF27
 1394 04ef 01       		.byte	0x1
 1395 04f0 4304     		.2byte	0x443
 1396 04f2 6F000000 		.4byte	0x6f
 1397 04f6 01       		.byte	0x1
 1398 04f7 50       		.byte	0x50
 1399 04f8 00       		.byte	0
 1400 04f9 13       		.uleb128 0x13
 1401 04fa 01       		.byte	0x1
 1402 04fb 72010000 		.4byte	.LASF47
 1403 04ff 01       		.byte	0x1
 1404 0500 6604     		.2byte	0x466
 1405 0502 01       		.byte	0x1
 1406 0503 6F000000 		.4byte	0x6f
 1407 0507 00000000 		.4byte	.LFB23
 1408 050b 18000000 		.4byte	.LFE23
 1409 050f 02       		.byte	0x2
 1410 0510 7D       		.byte	0x7d
 1411 0511 00       		.sleb128 0
 1412 0512 01       		.byte	0x1
 1413 0513 28050000 		.4byte	0x528
 1414 0517 15       		.uleb128 0x15
 1415 0518 90030000 		.4byte	.LASF21
 1416 051c 01       		.byte	0x1
 1417 051d 6804     		.2byte	0x468
 1418 051f 6F000000 		.4byte	0x6f
 1419 0523 AB010000 		.4byte	.LLST16
 1420 0527 00       		.byte	0
 1421 0528 1E       		.uleb128 0x1e
 1422 0529 0B000000 		.4byte	.LASF48
 1423 052d 01       		.byte	0x1
 1424 052e 22       		.byte	0x22
 1425 052f 6F000000 		.4byte	0x6f
 1426 0533 01       		.byte	0x1
 1427 0534 05       		.byte	0x5
 1428 0535 03       		.byte	0x3
 1429 0536 00000000 		.4byte	SPI0_initVar
 1430 053a 1E       		.uleb128 0x1e
 1431 053b 7C020000 		.4byte	.LASF49
 1432 053f 01       		.byte	0x1
 1433 0540 24       		.byte	0x24
 1434 0541 9A000000 		.4byte	0x9a
 1435 0545 01       		.byte	0x1
 1436 0546 05       		.byte	0x5
 1437 0547 03       		.byte	0x3
 1438 0548 00000000 		.4byte	SPI0_swStatusTx
 1439 054c 1E       		.uleb128 0x1e
 1440 054d 4D020000 		.4byte	.LASF50
 1441 0551 01       		.byte	0x1
 1442 0552 25       		.byte	0x25
 1443 0553 9A000000 		.4byte	0x9a
 1444 0557 01       		.byte	0x1
 1445 0558 05       		.byte	0x5
 1446 0559 03       		.byte	0x3
 1447 055a 00000000 		.4byte	SPI0_swStatusRx
 1448 055e 1F       		.uleb128 0x1f
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 47


 1449 055f 01       		.byte	0x1
 1450 0560 FE010000 		.4byte	.LASF56
 1451 0564 04       		.byte	0x4
 1452 0565 7E       		.byte	0x7e
 1453 0566 01       		.byte	0x1
 1454 0567 6F000000 		.4byte	0x6f
 1455 056b 01       		.byte	0x1
 1456 056c 20       		.uleb128 0x20
 1457 056d 01       		.byte	0x1
 1458 056e 37020000 		.4byte	.LASF57
 1459 0572 04       		.byte	0x4
 1460 0573 7F       		.byte	0x7f
 1461 0574 01       		.byte	0x1
 1462 0575 01       		.byte	0x1
 1463 0576 80050000 		.4byte	0x580
 1464 057a 21       		.uleb128 0x21
 1465 057b 6F000000 		.4byte	0x6f
 1466 057f 00       		.byte	0
 1467 0580 22       		.uleb128 0x22
 1468 0581 01       		.byte	0x1
 1469 0582 EA010000 		.4byte	.LASF51
 1470 0586 03       		.byte	0x3
 1471 0587 27       		.byte	0x27
 1472 0588 01       		.byte	0x1
 1473 0589 01       		.byte	0x1
 1474 058a 22       		.uleb128 0x22
 1475 058b 01       		.byte	0x1
 1476 058c C7020000 		.4byte	.LASF52
 1477 0590 03       		.byte	0x3
 1478 0591 28       		.byte	0x28
 1479 0592 01       		.byte	0x1
 1480 0593 01       		.byte	0x1
 1481 0594 00       		.byte	0
 1482              		.section	.debug_abbrev,"",%progbits
 1483              	.Ldebug_abbrev0:
 1484 0000 01       		.uleb128 0x1
 1485 0001 11       		.uleb128 0x11
 1486 0002 01       		.byte	0x1
 1487 0003 25       		.uleb128 0x25
 1488 0004 0E       		.uleb128 0xe
 1489 0005 13       		.uleb128 0x13
 1490 0006 0B       		.uleb128 0xb
 1491 0007 03       		.uleb128 0x3
 1492 0008 0E       		.uleb128 0xe
 1493 0009 1B       		.uleb128 0x1b
 1494 000a 0E       		.uleb128 0xe
 1495 000b 55       		.uleb128 0x55
 1496 000c 06       		.uleb128 0x6
 1497 000d 11       		.uleb128 0x11
 1498 000e 01       		.uleb128 0x1
 1499 000f 52       		.uleb128 0x52
 1500 0010 01       		.uleb128 0x1
 1501 0011 10       		.uleb128 0x10
 1502 0012 06       		.uleb128 0x6
 1503 0013 00       		.byte	0
 1504 0014 00       		.byte	0
 1505 0015 02       		.uleb128 0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 48


 1506 0016 24       		.uleb128 0x24
 1507 0017 00       		.byte	0
 1508 0018 0B       		.uleb128 0xb
 1509 0019 0B       		.uleb128 0xb
 1510 001a 3E       		.uleb128 0x3e
 1511 001b 0B       		.uleb128 0xb
 1512 001c 03       		.uleb128 0x3
 1513 001d 0E       		.uleb128 0xe
 1514 001e 00       		.byte	0
 1515 001f 00       		.byte	0
 1516 0020 03       		.uleb128 0x3
 1517 0021 24       		.uleb128 0x24
 1518 0022 00       		.byte	0
 1519 0023 0B       		.uleb128 0xb
 1520 0024 0B       		.uleb128 0xb
 1521 0025 3E       		.uleb128 0x3e
 1522 0026 0B       		.uleb128 0xb
 1523 0027 03       		.uleb128 0x3
 1524 0028 08       		.uleb128 0x8
 1525 0029 00       		.byte	0
 1526 002a 00       		.byte	0
 1527 002b 04       		.uleb128 0x4
 1528 002c 16       		.uleb128 0x16
 1529 002d 00       		.byte	0
 1530 002e 03       		.uleb128 0x3
 1531 002f 0E       		.uleb128 0xe
 1532 0030 3A       		.uleb128 0x3a
 1533 0031 0B       		.uleb128 0xb
 1534 0032 3B       		.uleb128 0x3b
 1535 0033 0B       		.uleb128 0xb
 1536 0034 49       		.uleb128 0x49
 1537 0035 13       		.uleb128 0x13
 1538 0036 00       		.byte	0
 1539 0037 00       		.byte	0
 1540 0038 05       		.uleb128 0x5
 1541 0039 35       		.uleb128 0x35
 1542 003a 00       		.byte	0
 1543 003b 49       		.uleb128 0x49
 1544 003c 13       		.uleb128 0x13
 1545 003d 00       		.byte	0
 1546 003e 00       		.byte	0
 1547 003f 06       		.uleb128 0x6
 1548 0040 2E       		.uleb128 0x2e
 1549 0041 00       		.byte	0
 1550 0042 3F       		.uleb128 0x3f
 1551 0043 0C       		.uleb128 0xc
 1552 0044 03       		.uleb128 0x3
 1553 0045 0E       		.uleb128 0xe
 1554 0046 3A       		.uleb128 0x3a
 1555 0047 0B       		.uleb128 0xb
 1556 0048 3B       		.uleb128 0x3b
 1557 0049 0B       		.uleb128 0xb
 1558 004a 27       		.uleb128 0x27
 1559 004b 0C       		.uleb128 0xc
 1560 004c 20       		.uleb128 0x20
 1561 004d 0B       		.uleb128 0xb
 1562 004e 00       		.byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 49


 1563 004f 00       		.byte	0
 1564 0050 07       		.uleb128 0x7
 1565 0051 2E       		.uleb128 0x2e
 1566 0052 00       		.byte	0
 1567 0053 3F       		.uleb128 0x3f
 1568 0054 0C       		.uleb128 0xc
 1569 0055 03       		.uleb128 0x3
 1570 0056 0E       		.uleb128 0xe
 1571 0057 3A       		.uleb128 0x3a
 1572 0058 0B       		.uleb128 0xb
 1573 0059 3B       		.uleb128 0x3b
 1574 005a 05       		.uleb128 0x5
 1575 005b 27       		.uleb128 0x27
 1576 005c 0C       		.uleb128 0xc
 1577 005d 20       		.uleb128 0x20
 1578 005e 0B       		.uleb128 0xb
 1579 005f 00       		.byte	0
 1580 0060 00       		.byte	0
 1581 0061 08       		.uleb128 0x8
 1582 0062 2E       		.uleb128 0x2e
 1583 0063 01       		.byte	0x1
 1584 0064 3F       		.uleb128 0x3f
 1585 0065 0C       		.uleb128 0xc
 1586 0066 03       		.uleb128 0x3
 1587 0067 0E       		.uleb128 0xe
 1588 0068 3A       		.uleb128 0x3a
 1589 0069 0B       		.uleb128 0xb
 1590 006a 3B       		.uleb128 0x3b
 1591 006b 05       		.uleb128 0x5
 1592 006c 27       		.uleb128 0x27
 1593 006d 0C       		.uleb128 0xc
 1594 006e 49       		.uleb128 0x49
 1595 006f 13       		.uleb128 0x13
 1596 0070 20       		.uleb128 0x20
 1597 0071 0B       		.uleb128 0xb
 1598 0072 01       		.uleb128 0x1
 1599 0073 13       		.uleb128 0x13
 1600 0074 00       		.byte	0
 1601 0075 00       		.byte	0
 1602 0076 09       		.uleb128 0x9
 1603 0077 34       		.uleb128 0x34
 1604 0078 00       		.byte	0
 1605 0079 03       		.uleb128 0x3
 1606 007a 0E       		.uleb128 0xe
 1607 007b 3A       		.uleb128 0x3a
 1608 007c 0B       		.uleb128 0xb
 1609 007d 3B       		.uleb128 0x3b
 1610 007e 05       		.uleb128 0x5
 1611 007f 49       		.uleb128 0x49
 1612 0080 13       		.uleb128 0x13
 1613 0081 00       		.byte	0
 1614 0082 00       		.byte	0
 1615 0083 0A       		.uleb128 0xa
 1616 0084 2E       		.uleb128 0x2e
 1617 0085 01       		.byte	0x1
 1618 0086 3F       		.uleb128 0x3f
 1619 0087 0C       		.uleb128 0xc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 50


 1620 0088 03       		.uleb128 0x3
 1621 0089 0E       		.uleb128 0xe
 1622 008a 3A       		.uleb128 0x3a
 1623 008b 0B       		.uleb128 0xb
 1624 008c 3B       		.uleb128 0x3b
 1625 008d 0B       		.uleb128 0xb
 1626 008e 27       		.uleb128 0x27
 1627 008f 0C       		.uleb128 0xc
 1628 0090 11       		.uleb128 0x11
 1629 0091 01       		.uleb128 0x1
 1630 0092 12       		.uleb128 0x12
 1631 0093 01       		.uleb128 0x1
 1632 0094 40       		.uleb128 0x40
 1633 0095 06       		.uleb128 0x6
 1634 0096 9742     		.uleb128 0x2117
 1635 0098 0C       		.uleb128 0xc
 1636 0099 01       		.uleb128 0x1
 1637 009a 13       		.uleb128 0x13
 1638 009b 00       		.byte	0
 1639 009c 00       		.byte	0
 1640 009d 0B       		.uleb128 0xb
 1641 009e 34       		.uleb128 0x34
 1642 009f 00       		.byte	0
 1643 00a0 03       		.uleb128 0x3
 1644 00a1 0E       		.uleb128 0xe
 1645 00a2 3A       		.uleb128 0x3a
 1646 00a3 0B       		.uleb128 0xb
 1647 00a4 3B       		.uleb128 0x3b
 1648 00a5 0B       		.uleb128 0xb
 1649 00a6 49       		.uleb128 0x49
 1650 00a7 13       		.uleb128 0x13
 1651 00a8 02       		.uleb128 0x2
 1652 00a9 06       		.uleb128 0x6
 1653 00aa 00       		.byte	0
 1654 00ab 00       		.byte	0
 1655 00ac 0C       		.uleb128 0xc
 1656 00ad 898201   		.uleb128 0x4109
 1657 00b0 00       		.byte	0
 1658 00b1 11       		.uleb128 0x11
 1659 00b2 01       		.uleb128 0x1
 1660 00b3 31       		.uleb128 0x31
 1661 00b4 13       		.uleb128 0x13
 1662 00b5 00       		.byte	0
 1663 00b6 00       		.byte	0
 1664 00b7 0D       		.uleb128 0xd
 1665 00b8 898201   		.uleb128 0x4109
 1666 00bb 00       		.byte	0
 1667 00bc 11       		.uleb128 0x11
 1668 00bd 01       		.uleb128 0x1
 1669 00be 9542     		.uleb128 0x2115
 1670 00c0 0C       		.uleb128 0xc
 1671 00c1 31       		.uleb128 0x31
 1672 00c2 13       		.uleb128 0x13
 1673 00c3 00       		.byte	0
 1674 00c4 00       		.byte	0
 1675 00c5 0E       		.uleb128 0xe
 1676 00c6 2E       		.uleb128 0x2e
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 51


 1677 00c7 00       		.byte	0
 1678 00c8 31       		.uleb128 0x31
 1679 00c9 13       		.uleb128 0x13
 1680 00ca 11       		.uleb128 0x11
 1681 00cb 01       		.uleb128 0x1
 1682 00cc 12       		.uleb128 0x12
 1683 00cd 01       		.uleb128 0x1
 1684 00ce 40       		.uleb128 0x40
 1685 00cf 0A       		.uleb128 0xa
 1686 00d0 9742     		.uleb128 0x2117
 1687 00d2 0C       		.uleb128 0xc
 1688 00d3 00       		.byte	0
 1689 00d4 00       		.byte	0
 1690 00d5 0F       		.uleb128 0xf
 1691 00d6 2E       		.uleb128 0x2e
 1692 00d7 01       		.byte	0x1
 1693 00d8 3F       		.uleb128 0x3f
 1694 00d9 0C       		.uleb128 0xc
 1695 00da 03       		.uleb128 0x3
 1696 00db 0E       		.uleb128 0xe
 1697 00dc 3A       		.uleb128 0x3a
 1698 00dd 0B       		.uleb128 0xb
 1699 00de 3B       		.uleb128 0x3b
 1700 00df 05       		.uleb128 0x5
 1701 00e0 27       		.uleb128 0x27
 1702 00e1 0C       		.uleb128 0xc
 1703 00e2 11       		.uleb128 0x11
 1704 00e3 01       		.uleb128 0x1
 1705 00e4 12       		.uleb128 0x12
 1706 00e5 01       		.uleb128 0x1
 1707 00e6 40       		.uleb128 0x40
 1708 00e7 0A       		.uleb128 0xa
 1709 00e8 9742     		.uleb128 0x2117
 1710 00ea 0C       		.uleb128 0xc
 1711 00eb 01       		.uleb128 0x1
 1712 00ec 13       		.uleb128 0x13
 1713 00ed 00       		.byte	0
 1714 00ee 00       		.byte	0
 1715 00ef 10       		.uleb128 0x10
 1716 00f0 05       		.uleb128 0x5
 1717 00f1 00       		.byte	0
 1718 00f2 03       		.uleb128 0x3
 1719 00f3 0E       		.uleb128 0xe
 1720 00f4 3A       		.uleb128 0x3a
 1721 00f5 0B       		.uleb128 0xb
 1722 00f6 3B       		.uleb128 0x3b
 1723 00f7 05       		.uleb128 0x5
 1724 00f8 49       		.uleb128 0x49
 1725 00f9 13       		.uleb128 0x13
 1726 00fa 02       		.uleb128 0x2
 1727 00fb 0A       		.uleb128 0xa
 1728 00fc 00       		.byte	0
 1729 00fd 00       		.byte	0
 1730 00fe 11       		.uleb128 0x11
 1731 00ff 2E       		.uleb128 0x2e
 1732 0100 01       		.byte	0x1
 1733 0101 31       		.uleb128 0x31
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 52


 1734 0102 13       		.uleb128 0x13
 1735 0103 11       		.uleb128 0x11
 1736 0104 01       		.uleb128 0x1
 1737 0105 12       		.uleb128 0x12
 1738 0106 01       		.uleb128 0x1
 1739 0107 40       		.uleb128 0x40
 1740 0108 0A       		.uleb128 0xa
 1741 0109 9742     		.uleb128 0x2117
 1742 010b 0C       		.uleb128 0xc
 1743 010c 01       		.uleb128 0x1
 1744 010d 13       		.uleb128 0x13
 1745 010e 00       		.byte	0
 1746 010f 00       		.byte	0
 1747 0110 12       		.uleb128 0x12
 1748 0111 34       		.uleb128 0x34
 1749 0112 00       		.byte	0
 1750 0113 31       		.uleb128 0x31
 1751 0114 13       		.uleb128 0x13
 1752 0115 02       		.uleb128 0x2
 1753 0116 0A       		.uleb128 0xa
 1754 0117 00       		.byte	0
 1755 0118 00       		.byte	0
 1756 0119 13       		.uleb128 0x13
 1757 011a 2E       		.uleb128 0x2e
 1758 011b 01       		.byte	0x1
 1759 011c 3F       		.uleb128 0x3f
 1760 011d 0C       		.uleb128 0xc
 1761 011e 03       		.uleb128 0x3
 1762 011f 0E       		.uleb128 0xe
 1763 0120 3A       		.uleb128 0x3a
 1764 0121 0B       		.uleb128 0xb
 1765 0122 3B       		.uleb128 0x3b
 1766 0123 05       		.uleb128 0x5
 1767 0124 27       		.uleb128 0x27
 1768 0125 0C       		.uleb128 0xc
 1769 0126 49       		.uleb128 0x49
 1770 0127 13       		.uleb128 0x13
 1771 0128 11       		.uleb128 0x11
 1772 0129 01       		.uleb128 0x1
 1773 012a 12       		.uleb128 0x12
 1774 012b 01       		.uleb128 0x1
 1775 012c 40       		.uleb128 0x40
 1776 012d 0A       		.uleb128 0xa
 1777 012e 9742     		.uleb128 0x2117
 1778 0130 0C       		.uleb128 0xc
 1779 0131 01       		.uleb128 0x1
 1780 0132 13       		.uleb128 0x13
 1781 0133 00       		.byte	0
 1782 0134 00       		.byte	0
 1783 0135 14       		.uleb128 0x14
 1784 0136 34       		.uleb128 0x34
 1785 0137 00       		.byte	0
 1786 0138 03       		.uleb128 0x3
 1787 0139 0E       		.uleb128 0xe
 1788 013a 3A       		.uleb128 0x3a
 1789 013b 0B       		.uleb128 0xb
 1790 013c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 53


 1791 013d 05       		.uleb128 0x5
 1792 013e 49       		.uleb128 0x49
 1793 013f 13       		.uleb128 0x13
 1794 0140 02       		.uleb128 0x2
 1795 0141 0A       		.uleb128 0xa
 1796 0142 00       		.byte	0
 1797 0143 00       		.byte	0
 1798 0144 15       		.uleb128 0x15
 1799 0145 34       		.uleb128 0x34
 1800 0146 00       		.byte	0
 1801 0147 03       		.uleb128 0x3
 1802 0148 0E       		.uleb128 0xe
 1803 0149 3A       		.uleb128 0x3a
 1804 014a 0B       		.uleb128 0xb
 1805 014b 3B       		.uleb128 0x3b
 1806 014c 05       		.uleb128 0x5
 1807 014d 49       		.uleb128 0x49
 1808 014e 13       		.uleb128 0x13
 1809 014f 02       		.uleb128 0x2
 1810 0150 06       		.uleb128 0x6
 1811 0151 00       		.byte	0
 1812 0152 00       		.byte	0
 1813 0153 16       		.uleb128 0x16
 1814 0154 2E       		.uleb128 0x2e
 1815 0155 00       		.byte	0
 1816 0156 3F       		.uleb128 0x3f
 1817 0157 0C       		.uleb128 0xc
 1818 0158 03       		.uleb128 0x3
 1819 0159 0E       		.uleb128 0xe
 1820 015a 3A       		.uleb128 0x3a
 1821 015b 0B       		.uleb128 0xb
 1822 015c 3B       		.uleb128 0x3b
 1823 015d 05       		.uleb128 0x5
 1824 015e 27       		.uleb128 0x27
 1825 015f 0C       		.uleb128 0xc
 1826 0160 11       		.uleb128 0x11
 1827 0161 01       		.uleb128 0x1
 1828 0162 12       		.uleb128 0x12
 1829 0163 01       		.uleb128 0x1
 1830 0164 40       		.uleb128 0x40
 1831 0165 0A       		.uleb128 0xa
 1832 0166 9742     		.uleb128 0x2117
 1833 0168 0C       		.uleb128 0xc
 1834 0169 00       		.byte	0
 1835 016a 00       		.byte	0
 1836 016b 17       		.uleb128 0x17
 1837 016c 2E       		.uleb128 0x2e
 1838 016d 01       		.byte	0x1
 1839 016e 3F       		.uleb128 0x3f
 1840 016f 0C       		.uleb128 0xc
 1841 0170 03       		.uleb128 0x3
 1842 0171 0E       		.uleb128 0xe
 1843 0172 3A       		.uleb128 0x3a
 1844 0173 0B       		.uleb128 0xb
 1845 0174 3B       		.uleb128 0x3b
 1846 0175 05       		.uleb128 0x5
 1847 0176 27       		.uleb128 0x27
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 54


 1848 0177 0C       		.uleb128 0xc
 1849 0178 11       		.uleb128 0x11
 1850 0179 01       		.uleb128 0x1
 1851 017a 12       		.uleb128 0x12
 1852 017b 01       		.uleb128 0x1
 1853 017c 40       		.uleb128 0x40
 1854 017d 06       		.uleb128 0x6
 1855 017e 9742     		.uleb128 0x2117
 1856 0180 0C       		.uleb128 0xc
 1857 0181 01       		.uleb128 0x1
 1858 0182 13       		.uleb128 0x13
 1859 0183 00       		.byte	0
 1860 0184 00       		.byte	0
 1861 0185 18       		.uleb128 0x18
 1862 0186 05       		.uleb128 0x5
 1863 0187 00       		.byte	0
 1864 0188 03       		.uleb128 0x3
 1865 0189 0E       		.uleb128 0xe
 1866 018a 3A       		.uleb128 0x3a
 1867 018b 0B       		.uleb128 0xb
 1868 018c 3B       		.uleb128 0x3b
 1869 018d 05       		.uleb128 0x5
 1870 018e 49       		.uleb128 0x49
 1871 018f 13       		.uleb128 0x13
 1872 0190 02       		.uleb128 0x2
 1873 0191 06       		.uleb128 0x6
 1874 0192 00       		.byte	0
 1875 0193 00       		.byte	0
 1876 0194 19       		.uleb128 0x19
 1877 0195 0F       		.uleb128 0xf
 1878 0196 00       		.byte	0
 1879 0197 0B       		.uleb128 0xb
 1880 0198 0B       		.uleb128 0xb
 1881 0199 49       		.uleb128 0x49
 1882 019a 13       		.uleb128 0x13
 1883 019b 00       		.byte	0
 1884 019c 00       		.byte	0
 1885 019d 1A       		.uleb128 0x1a
 1886 019e 26       		.uleb128 0x26
 1887 019f 00       		.byte	0
 1888 01a0 49       		.uleb128 0x49
 1889 01a1 13       		.uleb128 0x13
 1890 01a2 00       		.byte	0
 1891 01a3 00       		.byte	0
 1892 01a4 1B       		.uleb128 0x1b
 1893 01a5 1D       		.uleb128 0x1d
 1894 01a6 01       		.byte	0x1
 1895 01a7 31       		.uleb128 0x31
 1896 01a8 13       		.uleb128 0x13
 1897 01a9 52       		.uleb128 0x52
 1898 01aa 01       		.uleb128 0x1
 1899 01ab 55       		.uleb128 0x55
 1900 01ac 06       		.uleb128 0x6
 1901 01ad 58       		.uleb128 0x58
 1902 01ae 0B       		.uleb128 0xb
 1903 01af 59       		.uleb128 0x59
 1904 01b0 0B       		.uleb128 0xb
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 55


 1905 01b1 01       		.uleb128 0x1
 1906 01b2 13       		.uleb128 0x13
 1907 01b3 00       		.byte	0
 1908 01b4 00       		.byte	0
 1909 01b5 1C       		.uleb128 0x1c
 1910 01b6 0B       		.uleb128 0xb
 1911 01b7 01       		.byte	0x1
 1912 01b8 55       		.uleb128 0x55
 1913 01b9 06       		.uleb128 0x6
 1914 01ba 00       		.byte	0
 1915 01bb 00       		.byte	0
 1916 01bc 1D       		.uleb128 0x1d
 1917 01bd 34       		.uleb128 0x34
 1918 01be 00       		.byte	0
 1919 01bf 31       		.uleb128 0x31
 1920 01c0 13       		.uleb128 0x13
 1921 01c1 00       		.byte	0
 1922 01c2 00       		.byte	0
 1923 01c3 1E       		.uleb128 0x1e
 1924 01c4 34       		.uleb128 0x34
 1925 01c5 00       		.byte	0
 1926 01c6 03       		.uleb128 0x3
 1927 01c7 0E       		.uleb128 0xe
 1928 01c8 3A       		.uleb128 0x3a
 1929 01c9 0B       		.uleb128 0xb
 1930 01ca 3B       		.uleb128 0x3b
 1931 01cb 0B       		.uleb128 0xb
 1932 01cc 49       		.uleb128 0x49
 1933 01cd 13       		.uleb128 0x13
 1934 01ce 3F       		.uleb128 0x3f
 1935 01cf 0C       		.uleb128 0xc
 1936 01d0 02       		.uleb128 0x2
 1937 01d1 0A       		.uleb128 0xa
 1938 01d2 00       		.byte	0
 1939 01d3 00       		.byte	0
 1940 01d4 1F       		.uleb128 0x1f
 1941 01d5 2E       		.uleb128 0x2e
 1942 01d6 00       		.byte	0
 1943 01d7 3F       		.uleb128 0x3f
 1944 01d8 0C       		.uleb128 0xc
 1945 01d9 03       		.uleb128 0x3
 1946 01da 0E       		.uleb128 0xe
 1947 01db 3A       		.uleb128 0x3a
 1948 01dc 0B       		.uleb128 0xb
 1949 01dd 3B       		.uleb128 0x3b
 1950 01de 0B       		.uleb128 0xb
 1951 01df 27       		.uleb128 0x27
 1952 01e0 0C       		.uleb128 0xc
 1953 01e1 49       		.uleb128 0x49
 1954 01e2 13       		.uleb128 0x13
 1955 01e3 3C       		.uleb128 0x3c
 1956 01e4 0C       		.uleb128 0xc
 1957 01e5 00       		.byte	0
 1958 01e6 00       		.byte	0
 1959 01e7 20       		.uleb128 0x20
 1960 01e8 2E       		.uleb128 0x2e
 1961 01e9 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 56


 1962 01ea 3F       		.uleb128 0x3f
 1963 01eb 0C       		.uleb128 0xc
 1964 01ec 03       		.uleb128 0x3
 1965 01ed 0E       		.uleb128 0xe
 1966 01ee 3A       		.uleb128 0x3a
 1967 01ef 0B       		.uleb128 0xb
 1968 01f0 3B       		.uleb128 0x3b
 1969 01f1 0B       		.uleb128 0xb
 1970 01f2 27       		.uleb128 0x27
 1971 01f3 0C       		.uleb128 0xc
 1972 01f4 3C       		.uleb128 0x3c
 1973 01f5 0C       		.uleb128 0xc
 1974 01f6 01       		.uleb128 0x1
 1975 01f7 13       		.uleb128 0x13
 1976 01f8 00       		.byte	0
 1977 01f9 00       		.byte	0
 1978 01fa 21       		.uleb128 0x21
 1979 01fb 05       		.uleb128 0x5
 1980 01fc 00       		.byte	0
 1981 01fd 49       		.uleb128 0x49
 1982 01fe 13       		.uleb128 0x13
 1983 01ff 00       		.byte	0
 1984 0200 00       		.byte	0
 1985 0201 22       		.uleb128 0x22
 1986 0202 2E       		.uleb128 0x2e
 1987 0203 00       		.byte	0
 1988 0204 3F       		.uleb128 0x3f
 1989 0205 0C       		.uleb128 0xc
 1990 0206 03       		.uleb128 0x3
 1991 0207 0E       		.uleb128 0xe
 1992 0208 3A       		.uleb128 0x3a
 1993 0209 0B       		.uleb128 0xb
 1994 020a 3B       		.uleb128 0x3b
 1995 020b 0B       		.uleb128 0xb
 1996 020c 27       		.uleb128 0x27
 1997 020d 0C       		.uleb128 0xc
 1998 020e 3C       		.uleb128 0x3c
 1999 020f 0C       		.uleb128 0xc
 2000 0210 00       		.byte	0
 2001 0211 00       		.byte	0
 2002 0212 00       		.byte	0
 2003              		.section	.debug_loc,"",%progbits
 2004              	.Ldebug_loc0:
 2005              	.LLST0:
 2006 0000 00000000 		.4byte	.LFB1
 2007 0004 02000000 		.4byte	.LCFI0
 2008 0008 0200     		.2byte	0x2
 2009 000a 7D       		.byte	0x7d
 2010 000b 00       		.sleb128 0
 2011 000c 02000000 		.4byte	.LCFI0
 2012 0010 38000000 		.4byte	.LFE1
 2013 0014 0200     		.2byte	0x2
 2014 0016 7D       		.byte	0x7d
 2015 0017 08       		.sleb128 8
 2016 0018 00000000 		.4byte	0
 2017 001c 00000000 		.4byte	0
 2018              	.LLST1:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 57


 2019 0020 06000000 		.4byte	.LVL0
 2020 0024 2B000000 		.4byte	.LVL1-1
 2021 0028 0100     		.2byte	0x1
 2022 002a 50       		.byte	0x50
 2023 002b 00000000 		.4byte	0
 2024 002f 00000000 		.4byte	0
 2025              	.LLST2:
 2026 0033 00000000 		.4byte	.LFB3
 2027 0037 02000000 		.4byte	.LCFI1
 2028 003b 0200     		.2byte	0x2
 2029 003d 7D       		.byte	0x7d
 2030 003e 00       		.sleb128 0
 2031 003f 02000000 		.4byte	.LCFI1
 2032 0043 28000000 		.4byte	.LFE3
 2033 0047 0200     		.2byte	0x2
 2034 0049 7D       		.byte	0x7d
 2035 004a 08       		.sleb128 8
 2036 004b 00000000 		.4byte	0
 2037 004f 00000000 		.4byte	0
 2038              	.LLST3:
 2039 0053 06000000 		.4byte	.LVL3
 2040 0057 1B000000 		.4byte	.LVL4-1
 2041 005b 0100     		.2byte	0x1
 2042 005d 50       		.byte	0x50
 2043 005e 00000000 		.4byte	0
 2044 0062 00000000 		.4byte	0
 2045              	.LLST4:
 2046 0066 04000000 		.4byte	.LVL12
 2047 006a 08000000 		.4byte	.LVL13
 2048 006e 0A00     		.2byte	0xa
 2049 0070 70       		.byte	0x70
 2050 0071 00       		.sleb128 0
 2051 0072 08       		.byte	0x8
 2052 0073 20       		.byte	0x20
 2053 0074 1A       		.byte	0x1a
 2054 0075 48       		.byte	0x48
 2055 0076 24       		.byte	0x24
 2056 0077 30       		.byte	0x30
 2057 0078 2E       		.byte	0x2e
 2058 0079 9F       		.byte	0x9f
 2059 007a 00000000 		.4byte	0
 2060 007e 00000000 		.4byte	0
 2061              	.LLST5:
 2062 0082 04000000 		.4byte	.LVL14
 2063 0086 12000000 		.4byte	.LVL15
 2064 008a 0100     		.2byte	0x1
 2065 008c 50       		.byte	0x50
 2066 008d 1C000000 		.4byte	.LVL16
 2067 0091 24000000 		.4byte	.LFE15
 2068 0095 0100     		.2byte	0x1
 2069 0097 50       		.byte	0x50
 2070 0098 00000000 		.4byte	0
 2071 009c 00000000 		.4byte	0
 2072              	.LLST6:
 2073 00a0 00000000 		.4byte	.LFB17
 2074 00a4 02000000 		.4byte	.LCFI2
 2075 00a8 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 58


 2076 00aa 7D       		.byte	0x7d
 2077 00ab 00       		.sleb128 0
 2078 00ac 02000000 		.4byte	.LCFI2
 2079 00b0 24000000 		.4byte	.LFE17
 2080 00b4 0200     		.2byte	0x2
 2081 00b6 7D       		.byte	0x7d
 2082 00b7 08       		.sleb128 8
 2083 00b8 00000000 		.4byte	0
 2084 00bc 00000000 		.4byte	0
 2085              	.LLST7:
 2086 00c0 06000000 		.4byte	.LVL18
 2087 00c4 1F000000 		.4byte	.LVL19-1
 2088 00c8 0100     		.2byte	0x1
 2089 00ca 50       		.byte	0x50
 2090 00cb 00000000 		.4byte	0
 2091 00cf 00000000 		.4byte	0
 2092              	.LLST8:
 2093 00d3 00000000 		.4byte	.LFB18
 2094 00d7 02000000 		.4byte	.LCFI3
 2095 00db 0200     		.2byte	0x2
 2096 00dd 7D       		.byte	0x7d
 2097 00de 00       		.sleb128 0
 2098 00df 02000000 		.4byte	.LCFI3
 2099 00e3 1A000000 		.4byte	.LFE18
 2100 00e7 0200     		.2byte	0x2
 2101 00e9 7D       		.byte	0x7d
 2102 00ea 10       		.sleb128 16
 2103 00eb 00000000 		.4byte	0
 2104 00ef 00000000 		.4byte	0
 2105              	.LLST9:
 2106 00f3 00000000 		.4byte	.LVL20
 2107 00f7 08000000 		.4byte	.LVL21
 2108 00fb 0100     		.2byte	0x1
 2109 00fd 50       		.byte	0x50
 2110 00fe 08000000 		.4byte	.LVL21
 2111 0102 1A000000 		.4byte	.LFE18
 2112 0106 0100     		.2byte	0x1
 2113 0108 55       		.byte	0x55
 2114 0109 00000000 		.4byte	0
 2115 010d 00000000 		.4byte	0
 2116              	.LLST10:
 2117 0111 00000000 		.4byte	.LVL20
 2118 0115 08000000 		.4byte	.LVL21
 2119 0119 0100     		.2byte	0x1
 2120 011b 51       		.byte	0x51
 2121 011c 00000000 		.4byte	0
 2122 0120 00000000 		.4byte	0
 2123              	.LLST11:
 2124 0124 00000000 		.4byte	.LVL20
 2125 0128 08000000 		.4byte	.LVL21
 2126 012c 0200     		.2byte	0x2
 2127 012e 30       		.byte	0x30
 2128 012f 9F       		.byte	0x9f
 2129 0130 00000000 		.4byte	0
 2130 0134 00000000 		.4byte	0
 2131              	.LLST12:
 2132 0138 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 59


 2133 013c 02000000 		.4byte	.LCFI4
 2134 0140 0200     		.2byte	0x2
 2135 0142 7D       		.byte	0x7d
 2136 0143 00       		.sleb128 0
 2137 0144 02000000 		.4byte	.LCFI4
 2138 0148 40000000 		.4byte	.LFE19
 2139 014c 0200     		.2byte	0x2
 2140 014e 7D       		.byte	0x7d
 2141 014f 08       		.sleb128 8
 2142 0150 00000000 		.4byte	0
 2143 0154 00000000 		.4byte	0
 2144              	.LLST13:
 2145 0158 18000000 		.4byte	.LVL23
 2146 015c 31000000 		.4byte	.LVL24-1
 2147 0160 0100     		.2byte	0x1
 2148 0162 50       		.byte	0x50
 2149 0163 00000000 		.4byte	0
 2150 0167 00000000 		.4byte	0
 2151              	.LLST14:
 2152 016b 00000000 		.4byte	.LFB0
 2153 016f 02000000 		.4byte	.LCFI5
 2154 0173 0200     		.2byte	0x2
 2155 0175 7D       		.byte	0x7d
 2156 0176 00       		.sleb128 0
 2157 0177 02000000 		.4byte	.LCFI5
 2158 017b 30000000 		.4byte	.LFE0
 2159 017f 0200     		.2byte	0x2
 2160 0181 7D       		.byte	0x7d
 2161 0182 08       		.sleb128 8
 2162 0183 00000000 		.4byte	0
 2163 0187 00000000 		.4byte	0
 2164              	.LLST15:
 2165 018b 00000000 		.4byte	.LFB2
 2166 018f 02000000 		.4byte	.LCFI6
 2167 0193 0200     		.2byte	0x2
 2168 0195 7D       		.byte	0x7d
 2169 0196 00       		.sleb128 0
 2170 0197 02000000 		.4byte	.LCFI6
 2171 019b 1C000000 		.4byte	.LFE2
 2172 019f 0200     		.2byte	0x2
 2173 01a1 7D       		.byte	0x7d
 2174 01a2 08       		.sleb128 8
 2175 01a3 00000000 		.4byte	0
 2176 01a7 00000000 		.4byte	0
 2177              	.LLST16:
 2178 01ab 06000000 		.4byte	.LVL31
 2179 01af 0A000000 		.4byte	.LVL32
 2180 01b3 0100     		.2byte	0x1
 2181 01b5 51       		.byte	0x51
 2182 01b6 0A000000 		.4byte	.LVL32
 2183 01ba 0E000000 		.4byte	.LVL33
 2184 01be 0600     		.2byte	0x6
 2185 01c0 70       		.byte	0x70
 2186 01c1 00       		.sleb128 0
 2187 01c2 09       		.byte	0x9
 2188 01c3 EF       		.byte	0xef
 2189 01c4 1A       		.byte	0x1a
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 60


 2190 01c5 9F       		.byte	0x9f
 2191 01c6 00000000 		.4byte	0
 2192 01ca 00000000 		.4byte	0
 2193              		.section	.debug_aranges,"",%progbits
 2194 0000 D4000000 		.4byte	0xd4
 2195 0004 0200     		.2byte	0x2
 2196 0006 00000000 		.4byte	.Ldebug_info0
 2197 000a 04       		.byte	0x4
 2198 000b 00       		.byte	0
 2199 000c 0000     		.2byte	0
 2200 000e 0000     		.2byte	0
 2201 0010 00000000 		.4byte	.LFB1
 2202 0014 38000000 		.4byte	.LFE1-.LFB1
 2203 0018 00000000 		.4byte	.LFB3
 2204 001c 28000000 		.4byte	.LFE3-.LFB3
 2205 0020 00000000 		.4byte	.LFB4
 2206 0024 02000000 		.4byte	.LFE4-.LFB4
 2207 0028 00000000 		.4byte	.LFB5
 2208 002c 02000000 		.4byte	.LFE5-.LFB5
 2209 0030 00000000 		.4byte	.LFB6
 2210 0034 02000000 		.4byte	.LFE6-.LFB6
 2211 0038 00000000 		.4byte	.LFB7
 2212 003c 02000000 		.4byte	.LFE7-.LFB7
 2213 0040 00000000 		.4byte	.LFB8
 2214 0044 0C000000 		.4byte	.LFE8-.LFB8
 2215 0048 00000000 		.4byte	.LFB9
 2216 004c 0C000000 		.4byte	.LFE9-.LFB9
 2217 0050 00000000 		.4byte	.LFB10
 2218 0054 0C000000 		.4byte	.LFE10-.LFB10
 2219 0058 00000000 		.4byte	.LFB11
 2220 005c 0C000000 		.4byte	.LFE11-.LFB11
 2221 0060 00000000 		.4byte	.LFB12
 2222 0064 1C000000 		.4byte	.LFE12-.LFB12
 2223 0068 00000000 		.4byte	.LFB13
 2224 006c 0C000000 		.4byte	.LFE13-.LFB13
 2225 0070 00000000 		.4byte	.LFB14
 2226 0074 10000000 		.4byte	.LFE14-.LFB14
 2227 0078 00000000 		.4byte	.LFB15
 2228 007c 24000000 		.4byte	.LFE15-.LFB15
 2229 0080 00000000 		.4byte	.LFB16
 2230 0084 1C000000 		.4byte	.LFE16-.LFB16
 2231 0088 00000000 		.4byte	.LFB17
 2232 008c 24000000 		.4byte	.LFE17-.LFB17
 2233 0090 00000000 		.4byte	.LFB18
 2234 0094 1A000000 		.4byte	.LFE18-.LFB18
 2235 0098 00000000 		.4byte	.LFB19
 2236 009c 40000000 		.4byte	.LFE19-.LFB19
 2237 00a0 00000000 		.4byte	.LFB0
 2238 00a4 30000000 		.4byte	.LFE0-.LFB0
 2239 00a8 00000000 		.4byte	.LFB2
 2240 00ac 1C000000 		.4byte	.LFE2-.LFB2
 2241 00b0 00000000 		.4byte	.LFB20
 2242 00b4 02000000 		.4byte	.LFE20-.LFB20
 2243 00b8 00000000 		.4byte	.LFB21
 2244 00bc 02000000 		.4byte	.LFE21-.LFB21
 2245 00c0 00000000 		.4byte	.LFB22
 2246 00c4 10000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 61


 2247 00c8 00000000 		.4byte	.LFB23
 2248 00cc 18000000 		.4byte	.LFE23-.LFB23
 2249 00d0 00000000 		.4byte	0
 2250 00d4 00000000 		.4byte	0
 2251              		.section	.debug_ranges,"",%progbits
 2252              	.Ldebug_ranges0:
 2253 0000 0C000000 		.4byte	.LBB22
 2254 0004 0E000000 		.4byte	.LBE22
 2255 0008 12000000 		.4byte	.LBB28
 2256 000c 14000000 		.4byte	.LBE28
 2257 0010 00000000 		.4byte	0
 2258 0014 00000000 		.4byte	0
 2259 0018 0C000000 		.4byte	.LBB23
 2260 001c 0E000000 		.4byte	.LBE23
 2261 0020 12000000 		.4byte	.LBB24
 2262 0024 14000000 		.4byte	.LBE24
 2263 0028 00000000 		.4byte	0
 2264 002c 00000000 		.4byte	0
 2265 0030 0E000000 		.4byte	.LBB25
 2266 0034 10000000 		.4byte	.LBE25
 2267 0038 14000000 		.4byte	.LBB29
 2268 003c 16000000 		.4byte	.LBE29
 2269 0040 00000000 		.4byte	0
 2270 0044 00000000 		.4byte	0
 2271 0048 0E000000 		.4byte	.LBB26
 2272 004c 10000000 		.4byte	.LBE26
 2273 0050 14000000 		.4byte	.LBB27
 2274 0054 16000000 		.4byte	.LBE27
 2275 0058 00000000 		.4byte	0
 2276 005c 00000000 		.4byte	0
 2277 0060 00000000 		.4byte	.LFB1
 2278 0064 38000000 		.4byte	.LFE1
 2279 0068 00000000 		.4byte	.LFB3
 2280 006c 28000000 		.4byte	.LFE3
 2281 0070 00000000 		.4byte	.LFB4
 2282 0074 02000000 		.4byte	.LFE4
 2283 0078 00000000 		.4byte	.LFB5
 2284 007c 02000000 		.4byte	.LFE5
 2285 0080 00000000 		.4byte	.LFB6
 2286 0084 02000000 		.4byte	.LFE6
 2287 0088 00000000 		.4byte	.LFB7
 2288 008c 02000000 		.4byte	.LFE7
 2289 0090 00000000 		.4byte	.LFB8
 2290 0094 0C000000 		.4byte	.LFE8
 2291 0098 00000000 		.4byte	.LFB9
 2292 009c 0C000000 		.4byte	.LFE9
 2293 00a0 00000000 		.4byte	.LFB10
 2294 00a4 0C000000 		.4byte	.LFE10
 2295 00a8 00000000 		.4byte	.LFB11
 2296 00ac 0C000000 		.4byte	.LFE11
 2297 00b0 00000000 		.4byte	.LFB12
 2298 00b4 1C000000 		.4byte	.LFE12
 2299 00b8 00000000 		.4byte	.LFB13
 2300 00bc 0C000000 		.4byte	.LFE13
 2301 00c0 00000000 		.4byte	.LFB14
 2302 00c4 10000000 		.4byte	.LFE14
 2303 00c8 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 62


 2304 00cc 24000000 		.4byte	.LFE15
 2305 00d0 00000000 		.4byte	.LFB16
 2306 00d4 1C000000 		.4byte	.LFE16
 2307 00d8 00000000 		.4byte	.LFB17
 2308 00dc 24000000 		.4byte	.LFE17
 2309 00e0 00000000 		.4byte	.LFB18
 2310 00e4 1A000000 		.4byte	.LFE18
 2311 00e8 00000000 		.4byte	.LFB19
 2312 00ec 40000000 		.4byte	.LFE19
 2313 00f0 00000000 		.4byte	.LFB0
 2314 00f4 30000000 		.4byte	.LFE0
 2315 00f8 00000000 		.4byte	.LFB2
 2316 00fc 1C000000 		.4byte	.LFE2
 2317 0100 00000000 		.4byte	.LFB20
 2318 0104 02000000 		.4byte	.LFE20
 2319 0108 00000000 		.4byte	.LFB21
 2320 010c 02000000 		.4byte	.LFE21
 2321 0110 00000000 		.4byte	.LFB22
 2322 0114 10000000 		.4byte	.LFE22
 2323 0118 00000000 		.4byte	.LFB23
 2324 011c 18000000 		.4byte	.LFE23
 2325 0120 00000000 		.4byte	0
 2326 0124 00000000 		.4byte	0
 2327              		.section	.debug_line,"",%progbits
 2328              	.Ldebug_line0:
 2329 0000 68020000 		.section	.debug_str,"MS",%progbits,1
 2329      02006100 
 2329      00000201 
 2329      FB0E0D00 
 2329      01010101 
 2330              	.LASF42:
 2331 0000 53504930 		.ascii	"SPI0_Start\000"
 2331      5F537461 
 2331      727400
 2332              	.LASF48:
 2333 000b 53504930 		.ascii	"SPI0_initVar\000"
 2333      5F696E69 
 2333      74566172 
 2333      00
 2334              	.LASF37:
 2335 0018 62756666 		.ascii	"buffer\000"
 2335      657200
 2336              	.LASF16:
 2337 001f 53504930 		.ascii	"SPI0_EnableRxInt\000"
 2337      5F456E61 
 2337      626C6552 
 2337      78496E74 
 2337      00
 2338              	.LASF44:
 2339 0030 53504930 		.ascii	"SPI0_EnableInt\000"
 2339      5F456E61 
 2339      626C6549 
 2339      6E7400
 2340              	.LASF22:
 2341 003f 53504930 		.ascii	"SPI0_Enable\000"
 2341      5F456E61 
 2341      626C6500 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 63


 2342              	.LASF3:
 2343 004b 73686F72 		.ascii	"short unsigned int\000"
 2343      7420756E 
 2343      7369676E 
 2343      65642069 
 2343      6E7400
 2344              	.LASF55:
 2345 005e 433A5C55 		.ascii	"C:\\Users\\chuck.erhardt\\Documents\\GitHub\\PSoC-W"
 2345      73657273 
 2345      5C636875 
 2345      636B2E65 
 2345      72686172 
 2346 008c 35313030 		.ascii	"5100-Driver\\freeSoCExplorer+ArduinoSheld_Example.c"
 2346      2D447269 
 2346      7665725C 
 2346      66726565 
 2346      536F4345 
 2347 00be 7964736E 		.ascii	"ydsn\000"
 2347      00
 2348              	.LASF43:
 2349 00c3 53504930 		.ascii	"SPI0_ClearRxBuffer\000"
 2349      5F436C65 
 2349      61725278 
 2349      42756666 
 2349      657200
 2350              	.LASF45:
 2351 00d6 53504930 		.ascii	"SPI0_DisableInt\000"
 2351      5F446973 
 2351      61626C65 
 2351      496E7400 
 2352              	.LASF28:
 2353 00e6 53504930 		.ascii	"SPI0_WriteTxData\000"
 2353      5F577269 
 2353      74655478 
 2353      44617461 
 2353      00
 2354              	.LASF30:
 2355 00f7 72784461 		.ascii	"rxData\000"
 2355      746100
 2356              	.LASF36:
 2357 00fe 53504930 		.ascii	"SPI0_PutArray\000"
 2357      5F507574 
 2357      41727261 
 2357      7900
 2358              	.LASF25:
 2359 010c 53504930 		.ascii	"SPI0_SetTxInterruptMode\000"
 2359      5F536574 
 2359      5478496E 
 2359      74657272 
 2359      7570744D 
 2360              	.LASF9:
 2361 0124 666C6F61 		.ascii	"float\000"
 2361      7400
 2362              	.LASF7:
 2363 012a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2363      206C6F6E 
 2363      6720756E 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 64


 2363      7369676E 
 2363      65642069 
 2364              	.LASF32:
 2365 0141 53504930 		.ascii	"SPI0_GetRxBufferSize\000"
 2365      5F476574 
 2365      52784275 
 2365      66666572 
 2365      53697A65 
 2366              	.LASF33:
 2367 0156 73697A65 		.ascii	"size\000"
 2367      00
 2368              	.LASF13:
 2369 015b 72656738 		.ascii	"reg8\000"
 2369      00
 2370              	.LASF5:
 2371 0160 6C6F6E67 		.ascii	"long unsigned int\000"
 2371      20756E73 
 2371      69676E65 
 2371      6420696E 
 2371      7400
 2372              	.LASF47:
 2373 0172 53504930 		.ascii	"SPI0_ReadStatus\000"
 2373      5F526561 
 2373      64537461 
 2373      74757300 
 2374              	.LASF12:
 2375 0182 75696E74 		.ascii	"uint8\000"
 2375      3800
 2376              	.LASF18:
 2377 0188 53504930 		.ascii	"SPI0_DisableRxInt\000"
 2377      5F446973 
 2377      61626C65 
 2377      5278496E 
 2377      7400
 2378              	.LASF38:
 2379 019a 62797465 		.ascii	"byteCount\000"
 2379      436F756E 
 2379      7400
 2380              	.LASF26:
 2381 01a4 53504930 		.ascii	"SPI0_SetRxInterruptMode\000"
 2381      5F536574 
 2381      5278496E 
 2381      74657272 
 2381      7570744D 
 2382              	.LASF19:
 2383 01bc 53504930 		.ascii	"SPI0_ReadTxStatus\000"
 2383      5F526561 
 2383      64547853 
 2383      74617475 
 2383      7300
 2384              	.LASF1:
 2385 01ce 756E7369 		.ascii	"unsigned char\000"
 2385      676E6564 
 2385      20636861 
 2385      7200
 2386              	.LASF10:
 2387 01dc 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 65


 2387      6C6500
 2388              	.LASF27:
 2389 01e3 696E7453 		.ascii	"intSrc\000"
 2389      726300
 2390              	.LASF51:
 2391 01ea 53504930 		.ascii	"SPI0_IntClock_Start\000"
 2391      5F496E74 
 2391      436C6F63 
 2391      6B5F5374 
 2391      61727400 
 2392              	.LASF56:
 2393 01fe 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2393      74657243 
 2393      72697469 
 2393      63616C53 
 2393      65637469 
 2394              	.LASF8:
 2395 0215 756E7369 		.ascii	"unsigned int\000"
 2395      676E6564 
 2395      20696E74 
 2395      00
 2396              	.LASF34:
 2397 0222 53504930 		.ascii	"SPI0_GetTxBufferSize\000"
 2397      5F476574 
 2397      54784275 
 2397      66666572 
 2397      53697A65 
 2398              	.LASF57:
 2399 0237 43794578 		.ascii	"CyExitCriticalSection\000"
 2399      69744372 
 2399      69746963 
 2399      616C5365 
 2399      6374696F 
 2400              	.LASF50:
 2401 024d 53504930 		.ascii	"SPI0_swStatusRx\000"
 2401      5F737753 
 2401      74617475 
 2401      73527800 
 2402              	.LASF40:
 2403 025d 53504930 		.ascii	"SPI0_ClearFIFO\000"
 2403      5F436C65 
 2403      61724649 
 2403      464F00
 2404              	.LASF39:
 2405 026c 62756649 		.ascii	"bufIndex\000"
 2405      6E646578 
 2405      00
 2406              	.LASF29:
 2407 0275 74784461 		.ascii	"txData\000"
 2407      746100
 2408              	.LASF49:
 2409 027c 53504930 		.ascii	"SPI0_swStatusTx\000"
 2409      5F737753 
 2409      74617475 
 2409      73547800 
 2410              	.LASF14:
 2411 028c 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 66


 2411      74797065 
 2411      00
 2412              	.LASF24:
 2413 0295 656E6162 		.ascii	"enableInterrupts\000"
 2413      6C65496E 
 2413      74657272 
 2413      75707473 
 2413      00
 2414              	.LASF6:
 2415 02a6 6C6F6E67 		.ascii	"long long int\000"
 2415      206C6F6E 
 2415      6720696E 
 2415      7400
 2416              	.LASF35:
 2417 02b4 53504930 		.ascii	"SPI0_ClearTxBuffer\000"
 2417      5F436C65 
 2417      61725478 
 2417      42756666 
 2417      657200
 2418              	.LASF52:
 2419 02c7 53504930 		.ascii	"SPI0_IntClock_Stop\000"
 2419      5F496E74 
 2419      436C6F63 
 2419      6B5F5374 
 2419      6F7000
 2420              	.LASF11:
 2421 02da 63686172 		.ascii	"char\000"
 2421      00
 2422              	.LASF20:
 2423 02df 53504930 		.ascii	"SPI0_ReadRxStatus\000"
 2423      5F526561 
 2423      64527853 
 2423      74617475 
 2423      7300
 2424              	.LASF46:
 2425 02f1 53504930 		.ascii	"SPI0_SetInterruptMode\000"
 2425      5F536574 
 2425      496E7465 
 2425      72727570 
 2425      744D6F64 
 2426              	.LASF2:
 2427 0307 73686F72 		.ascii	"short int\000"
 2427      7420696E 
 2427      7400
 2428              	.LASF17:
 2429 0311 53504930 		.ascii	"SPI0_DisableTxInt\000"
 2429      5F446973 
 2429      61626C65 
 2429      5478496E 
 2429      7400
 2430              	.LASF15:
 2431 0323 53504930 		.ascii	"SPI0_EnableTxInt\000"
 2431      5F456E61 
 2431      626C6554 
 2431      78496E74 
 2431      00
 2432              	.LASF53:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccM94OB8.s 			page 67


 2433 0334 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 2433      4320342E 
 2433      372E3320 
 2433      32303133 
 2433      30333132 
 2434 0367 616E6368 		.ascii	"anch revision 196615]\000"
 2434      20726576 
 2434      6973696F 
 2434      6E203139 
 2434      36363135 
 2435              	.LASF41:
 2436 037d 53504930 		.ascii	"SPI0_Init\000"
 2436      5F496E69 
 2436      7400
 2437              	.LASF4:
 2438 0387 6C6F6E67 		.ascii	"long int\000"
 2438      20696E74 
 2438      00
 2439              	.LASF21:
 2440 0390 746D7053 		.ascii	"tmpStatus\000"
 2440      74617475 
 2440      7300
 2441              	.LASF0:
 2442 039a 7369676E 		.ascii	"signed char\000"
 2442      65642063 
 2442      68617200 
 2443              	.LASF23:
 2444 03a6 53504930 		.ascii	"SPI0_Stop\000"
 2444      5F53746F 
 2444      7000
 2445              	.LASF54:
 2446 03b0 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\SPI0.c\000"
 2446      6E657261 
 2446      7465645F 
 2446      536F7572 
 2446      63655C50 
 2447              	.LASF31:
 2448 03d0 53504930 		.ascii	"SPI0_ReadRxData\000"
 2448      5F526561 
 2448      64527844 
 2448      61746100 
 2449              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
