ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccLEAiEG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"SPI0_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SPI0_TX_ISR,"ax",%progbits
  19              		.align	1
  20              		.global	SPI0_TX_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	SPI0_TX_ISR, %function
  24              	SPI0_TX_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\SPI0_INT.c"
   1:.\Generated_Source\PSoC5/SPI0_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/SPI0_INT.c **** * File Name: SPI0_INT.c
   3:.\Generated_Source\PSoC5/SPI0_INT.c **** * Version 2.40
   4:.\Generated_Source\PSoC5/SPI0_INT.c **** *
   5:.\Generated_Source\PSoC5/SPI0_INT.c **** * Description:
   6:.\Generated_Source\PSoC5/SPI0_INT.c **** *  This file provides all Interrupt Service Routine (ISR) for the SPI Master
   7:.\Generated_Source\PSoC5/SPI0_INT.c **** *  component.
   8:.\Generated_Source\PSoC5/SPI0_INT.c **** *
   9:.\Generated_Source\PSoC5/SPI0_INT.c **** * Note:
  10:.\Generated_Source\PSoC5/SPI0_INT.c **** *  None.
  11:.\Generated_Source\PSoC5/SPI0_INT.c **** *
  12:.\Generated_Source\PSoC5/SPI0_INT.c **** ********************************************************************************
  13:.\Generated_Source\PSoC5/SPI0_INT.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC5/SPI0_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC5/SPI0_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC5/SPI0_INT.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC5/SPI0_INT.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC5/SPI0_INT.c **** 
  19:.\Generated_Source\PSoC5/SPI0_INT.c **** #include "SPI0_PVT.h"
  20:.\Generated_Source\PSoC5/SPI0_INT.c **** 
  21:.\Generated_Source\PSoC5/SPI0_INT.c **** /* User code required at start of ISR */
  22:.\Generated_Source\PSoC5/SPI0_INT.c **** /* `#START SPI0_ISR_START_DEF` */
  23:.\Generated_Source\PSoC5/SPI0_INT.c **** 
  24:.\Generated_Source\PSoC5/SPI0_INT.c **** /* `#END` */
  25:.\Generated_Source\PSoC5/SPI0_INT.c **** 
  26:.\Generated_Source\PSoC5/SPI0_INT.c **** 
  27:.\Generated_Source\PSoC5/SPI0_INT.c **** /*******************************************************************************
  28:.\Generated_Source\PSoC5/SPI0_INT.c **** * Function Name: SPI0_TX_ISR
  29:.\Generated_Source\PSoC5/SPI0_INT.c **** ********************************************************************************
  30:.\Generated_Source\PSoC5/SPI0_INT.c **** *
  31:.\Generated_Source\PSoC5/SPI0_INT.c **** * Summary:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccLEAiEG.s 			page 2


  32:.\Generated_Source\PSoC5/SPI0_INT.c **** *  Interrupt Service Routine for TX portion of the SPI Master.
  33:.\Generated_Source\PSoC5/SPI0_INT.c **** *
  34:.\Generated_Source\PSoC5/SPI0_INT.c **** * Parameters:
  35:.\Generated_Source\PSoC5/SPI0_INT.c **** *  None.
  36:.\Generated_Source\PSoC5/SPI0_INT.c **** *
  37:.\Generated_Source\PSoC5/SPI0_INT.c **** * Return:
  38:.\Generated_Source\PSoC5/SPI0_INT.c **** *  None.
  39:.\Generated_Source\PSoC5/SPI0_INT.c **** *
  40:.\Generated_Source\PSoC5/SPI0_INT.c **** * Global variables:
  41:.\Generated_Source\PSoC5/SPI0_INT.c **** *  SPI0_txBufferWrite - used for the account of the bytes which
  42:.\Generated_Source\PSoC5/SPI0_INT.c **** *  have been written down in the TX software buffer.
  43:.\Generated_Source\PSoC5/SPI0_INT.c **** *  SPI0_txBufferRead - used for the account of the bytes which
  44:.\Generated_Source\PSoC5/SPI0_INT.c **** *  have been read from the TX software buffer, modified when exist data to
  45:.\Generated_Source\PSoC5/SPI0_INT.c **** *  sending and FIFO Not Full.
  46:.\Generated_Source\PSoC5/SPI0_INT.c **** *  SPI0_txBuffer[SPI0_TX_BUFFER_SIZE] - used to store
  47:.\Generated_Source\PSoC5/SPI0_INT.c **** *  data to sending.
  48:.\Generated_Source\PSoC5/SPI0_INT.c **** *  All described above Global variables are used when Software Buffer is used.
  49:.\Generated_Source\PSoC5/SPI0_INT.c **** *
  50:.\Generated_Source\PSoC5/SPI0_INT.c **** *******************************************************************************/
  51:.\Generated_Source\PSoC5/SPI0_INT.c **** CY_ISR(SPI0_TX_ISR)
  52:.\Generated_Source\PSoC5/SPI0_INT.c **** {
  27              		.loc 1 52 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE0:
  35              		.size	SPI0_TX_ISR, .-SPI0_TX_ISR
  36              		.section	.text.SPI0_RX_ISR,"ax",%progbits
  37              		.align	1
  38              		.global	SPI0_RX_ISR
  39              		.thumb
  40              		.thumb_func
  41              		.type	SPI0_RX_ISR, %function
  42              	SPI0_RX_ISR:
  43              	.LFB1:
  53:.\Generated_Source\PSoC5/SPI0_INT.c ****     #if(SPI0_TX_SOFTWARE_BUF_ENABLED)
  54:.\Generated_Source\PSoC5/SPI0_INT.c ****         uint8 tmpStatus;
  55:.\Generated_Source\PSoC5/SPI0_INT.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
  56:.\Generated_Source\PSoC5/SPI0_INT.c **** 
  57:.\Generated_Source\PSoC5/SPI0_INT.c ****     /* User code required at start of ISR */
  58:.\Generated_Source\PSoC5/SPI0_INT.c ****     /* `#START SPI0_TX_ISR_START` */
  59:.\Generated_Source\PSoC5/SPI0_INT.c **** 
  60:.\Generated_Source\PSoC5/SPI0_INT.c ****     /* `#END` */
  61:.\Generated_Source\PSoC5/SPI0_INT.c **** 
  62:.\Generated_Source\PSoC5/SPI0_INT.c ****     #if(SPI0_TX_SOFTWARE_BUF_ENABLED)
  63:.\Generated_Source\PSoC5/SPI0_INT.c ****         /* Check if TX data buffer is not empty and there is space in TX FIFO */
  64:.\Generated_Source\PSoC5/SPI0_INT.c ****         while(SPI0_txBufferRead != SPI0_txBufferWrite)
  65:.\Generated_Source\PSoC5/SPI0_INT.c ****         {
  66:.\Generated_Source\PSoC5/SPI0_INT.c ****             tmpStatus = SPI0_GET_STATUS_TX(SPI0_swStatusTx);
  67:.\Generated_Source\PSoC5/SPI0_INT.c ****             SPI0_swStatusTx = tmpStatus;
  68:.\Generated_Source\PSoC5/SPI0_INT.c **** 
  69:.\Generated_Source\PSoC5/SPI0_INT.c ****             if(0u != (SPI0_swStatusTx & SPI0_STS_TX_FIFO_NOT_FULL))
  70:.\Generated_Source\PSoC5/SPI0_INT.c ****             {
  71:.\Generated_Source\PSoC5/SPI0_INT.c ****                 if(0u == SPI0_txBufferFull)
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccLEAiEG.s 			page 3


  72:.\Generated_Source\PSoC5/SPI0_INT.c ****                 {
  73:.\Generated_Source\PSoC5/SPI0_INT.c ****                    SPI0_txBufferRead++;
  74:.\Generated_Source\PSoC5/SPI0_INT.c **** 
  75:.\Generated_Source\PSoC5/SPI0_INT.c ****                     if(SPI0_txBufferRead >= SPI0_TX_BUFFER_SIZE)
  76:.\Generated_Source\PSoC5/SPI0_INT.c ****                     {
  77:.\Generated_Source\PSoC5/SPI0_INT.c ****                         SPI0_txBufferRead = 0u;
  78:.\Generated_Source\PSoC5/SPI0_INT.c ****                     }
  79:.\Generated_Source\PSoC5/SPI0_INT.c ****                 }
  80:.\Generated_Source\PSoC5/SPI0_INT.c ****                 else
  81:.\Generated_Source\PSoC5/SPI0_INT.c ****                 {
  82:.\Generated_Source\PSoC5/SPI0_INT.c ****                     SPI0_txBufferFull = 0u;
  83:.\Generated_Source\PSoC5/SPI0_INT.c ****                 }
  84:.\Generated_Source\PSoC5/SPI0_INT.c **** 
  85:.\Generated_Source\PSoC5/SPI0_INT.c ****                 /* Move data from the Buffer to the FIFO */
  86:.\Generated_Source\PSoC5/SPI0_INT.c ****                 CY_SET_REG8(SPI0_TXDATA_PTR,
  87:.\Generated_Source\PSoC5/SPI0_INT.c ****                     SPI0_txBuffer[SPI0_txBufferRead]);
  88:.\Generated_Source\PSoC5/SPI0_INT.c ****             }
  89:.\Generated_Source\PSoC5/SPI0_INT.c ****             else
  90:.\Generated_Source\PSoC5/SPI0_INT.c ****             {
  91:.\Generated_Source\PSoC5/SPI0_INT.c ****                 break;
  92:.\Generated_Source\PSoC5/SPI0_INT.c ****             }
  93:.\Generated_Source\PSoC5/SPI0_INT.c ****         }
  94:.\Generated_Source\PSoC5/SPI0_INT.c **** 
  95:.\Generated_Source\PSoC5/SPI0_INT.c ****         if(SPI0_txBufferRead == SPI0_txBufferWrite)
  96:.\Generated_Source\PSoC5/SPI0_INT.c ****         {
  97:.\Generated_Source\PSoC5/SPI0_INT.c ****             /* TX Buffer is EMPTY: disable interrupt on TX NOT FULL */
  98:.\Generated_Source\PSoC5/SPI0_INT.c ****             SPI0_TX_STATUS_MASK_REG &= ((uint8) ~SPI0_STS_TX_FIFO_NOT_FULL);
  99:.\Generated_Source\PSoC5/SPI0_INT.c ****         }
 100:.\Generated_Source\PSoC5/SPI0_INT.c **** 
 101:.\Generated_Source\PSoC5/SPI0_INT.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
 102:.\Generated_Source\PSoC5/SPI0_INT.c **** 
 103:.\Generated_Source\PSoC5/SPI0_INT.c ****     /* User code required at end of ISR (Optional) */
 104:.\Generated_Source\PSoC5/SPI0_INT.c ****     /* `#START SPI0_TX_ISR_END` */
 105:.\Generated_Source\PSoC5/SPI0_INT.c **** 
 106:.\Generated_Source\PSoC5/SPI0_INT.c ****     /* `#END` */
 107:.\Generated_Source\PSoC5/SPI0_INT.c **** }
 108:.\Generated_Source\PSoC5/SPI0_INT.c **** 
 109:.\Generated_Source\PSoC5/SPI0_INT.c **** 
 110:.\Generated_Source\PSoC5/SPI0_INT.c **** /*******************************************************************************
 111:.\Generated_Source\PSoC5/SPI0_INT.c **** * Function Name: SPI0_RX_ISR
 112:.\Generated_Source\PSoC5/SPI0_INT.c **** ********************************************************************************
 113:.\Generated_Source\PSoC5/SPI0_INT.c **** *
 114:.\Generated_Source\PSoC5/SPI0_INT.c **** * Summary:
 115:.\Generated_Source\PSoC5/SPI0_INT.c **** *  Interrupt Service Routine for RX portion of the SPI Master.
 116:.\Generated_Source\PSoC5/SPI0_INT.c **** *
 117:.\Generated_Source\PSoC5/SPI0_INT.c **** * Parameters:
 118:.\Generated_Source\PSoC5/SPI0_INT.c **** *  None.
 119:.\Generated_Source\PSoC5/SPI0_INT.c **** *
 120:.\Generated_Source\PSoC5/SPI0_INT.c **** * Return:
 121:.\Generated_Source\PSoC5/SPI0_INT.c **** *  None.
 122:.\Generated_Source\PSoC5/SPI0_INT.c **** *
 123:.\Generated_Source\PSoC5/SPI0_INT.c **** * Global variables:
 124:.\Generated_Source\PSoC5/SPI0_INT.c **** *  SPI0_rxBufferWrite - used for the account of the bytes which
 125:.\Generated_Source\PSoC5/SPI0_INT.c **** *  have been written down in the RX software buffer modified when FIFO contains
 126:.\Generated_Source\PSoC5/SPI0_INT.c **** *  new data.
 127:.\Generated_Source\PSoC5/SPI0_INT.c **** *  SPI0_rxBufferRead - used for the account of the bytes which
 128:.\Generated_Source\PSoC5/SPI0_INT.c **** *  have been read from the RX software buffer, modified when overflow occurred.
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccLEAiEG.s 			page 4


 129:.\Generated_Source\PSoC5/SPI0_INT.c **** *  SPI0_rxBuffer[SPI0_RX_BUFFER_SIZE] - used to store
 130:.\Generated_Source\PSoC5/SPI0_INT.c **** *  received data, modified when FIFO contains new data.
 131:.\Generated_Source\PSoC5/SPI0_INT.c **** *  All described above Global variables are used when Software Buffer is used.
 132:.\Generated_Source\PSoC5/SPI0_INT.c **** *
 133:.\Generated_Source\PSoC5/SPI0_INT.c **** *******************************************************************************/
 134:.\Generated_Source\PSoC5/SPI0_INT.c **** CY_ISR(SPI0_RX_ISR)
 135:.\Generated_Source\PSoC5/SPI0_INT.c **** {
  44              		.loc 1 135 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              		@ link register save eliminated.
  49 0000 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE1:
  52              		.size	SPI0_RX_ISR, .-SPI0_RX_ISR
  53              		.text
  54              	.Letext0:
  55              		.section	.debug_info,"",%progbits
  56              	.Ldebug_info0:
  57 0000 B2000000 		.4byte	0xb2
  58 0004 0200     		.2byte	0x2
  59 0006 00000000 		.4byte	.Ldebug_abbrev0
  60 000a 04       		.byte	0x4
  61 000b 01       		.uleb128 0x1
  62 000c 3F000000 		.4byte	.LASF15
  63 0010 01       		.byte	0x1
  64 0011 1B000000 		.4byte	.LASF16
  65 0015 11010000 		.4byte	.LASF17
  66 0019 00000000 		.4byte	.Ldebug_ranges0+0
  67 001d 00000000 		.4byte	0
  68 0021 00000000 		.4byte	0
  69 0025 00000000 		.4byte	.Ldebug_line0
  70 0029 02       		.uleb128 0x2
  71 002a 01       		.byte	0x1
  72 002b 06       		.byte	0x6
  73 002c FF000000 		.4byte	.LASF0
  74 0030 02       		.uleb128 0x2
  75 0031 01       		.byte	0x1
  76 0032 08       		.byte	0x8
  77 0033 C9000000 		.4byte	.LASF1
  78 0037 02       		.uleb128 0x2
  79 0038 02       		.byte	0x2
  80 0039 05       		.byte	0x5
  81 003a 76010000 		.4byte	.LASF2
  82 003e 02       		.uleb128 0x2
  83 003f 02       		.byte	0x2
  84 0040 07       		.byte	0x7
  85 0041 EC000000 		.4byte	.LASF3
  86 0045 02       		.uleb128 0x2
  87 0046 04       		.byte	0x4
  88 0047 05       		.byte	0x5
  89 0048 DC000000 		.4byte	.LASF4
  90 004c 02       		.uleb128 0x2
  91 004d 04       		.byte	0x4
  92 004e 07       		.byte	0x7
  93 004f 88000000 		.4byte	.LASF5
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccLEAiEG.s 			page 5


  94 0053 02       		.uleb128 0x2
  95 0054 08       		.byte	0x8
  96 0055 05       		.byte	0x5
  97 0056 00000000 		.4byte	.LASF6
  98 005a 02       		.uleb128 0x2
  99 005b 08       		.byte	0x8
 100 005c 07       		.byte	0x7
 101 005d 9A000000 		.4byte	.LASF7
 102 0061 03       		.uleb128 0x3
 103 0062 04       		.byte	0x4
 104 0063 05       		.byte	0x5
 105 0064 696E7400 		.ascii	"int\000"
 106 0068 02       		.uleb128 0x2
 107 0069 04       		.byte	0x4
 108 006a 07       		.byte	0x7
 109 006b 0E000000 		.4byte	.LASF8
 110 006f 02       		.uleb128 0x2
 111 0070 04       		.byte	0x4
 112 0071 04       		.byte	0x4
 113 0072 0B010000 		.4byte	.LASF9
 114 0076 02       		.uleb128 0x2
 115 0077 08       		.byte	0x8
 116 0078 04       		.byte	0x4
 117 0079 E5000000 		.4byte	.LASF10
 118 007d 02       		.uleb128 0x2
 119 007e 01       		.byte	0x1
 120 007f 08       		.byte	0x8
 121 0080 D7000000 		.4byte	.LASF11
 122 0084 02       		.uleb128 0x2
 123 0085 04       		.byte	0x4
 124 0086 07       		.byte	0x7
 125 0087 80010000 		.4byte	.LASF12
 126 008b 04       		.uleb128 0x4
 127 008c 01       		.byte	0x1
 128 008d BD000000 		.4byte	.LASF13
 129 0091 01       		.byte	0x1
 130 0092 33       		.byte	0x33
 131 0093 01       		.byte	0x1
 132 0094 00000000 		.4byte	.LFB0
 133 0098 02000000 		.4byte	.LFE0
 134 009c 02       		.byte	0x2
 135 009d 7D       		.byte	0x7d
 136 009e 00       		.sleb128 0
 137 009f 01       		.byte	0x1
 138 00a0 04       		.uleb128 0x4
 139 00a1 01       		.byte	0x1
 140 00a2 B1000000 		.4byte	.LASF14
 141 00a6 01       		.byte	0x1
 142 00a7 86       		.byte	0x86
 143 00a8 01       		.byte	0x1
 144 00a9 00000000 		.4byte	.LFB1
 145 00ad 02000000 		.4byte	.LFE1
 146 00b1 02       		.byte	0x2
 147 00b2 7D       		.byte	0x7d
 148 00b3 00       		.sleb128 0
 149 00b4 01       		.byte	0x1
 150 00b5 00       		.byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccLEAiEG.s 			page 6


 151              		.section	.debug_abbrev,"",%progbits
 152              	.Ldebug_abbrev0:
 153 0000 01       		.uleb128 0x1
 154 0001 11       		.uleb128 0x11
 155 0002 01       		.byte	0x1
 156 0003 25       		.uleb128 0x25
 157 0004 0E       		.uleb128 0xe
 158 0005 13       		.uleb128 0x13
 159 0006 0B       		.uleb128 0xb
 160 0007 03       		.uleb128 0x3
 161 0008 0E       		.uleb128 0xe
 162 0009 1B       		.uleb128 0x1b
 163 000a 0E       		.uleb128 0xe
 164 000b 55       		.uleb128 0x55
 165 000c 06       		.uleb128 0x6
 166 000d 11       		.uleb128 0x11
 167 000e 01       		.uleb128 0x1
 168 000f 52       		.uleb128 0x52
 169 0010 01       		.uleb128 0x1
 170 0011 10       		.uleb128 0x10
 171 0012 06       		.uleb128 0x6
 172 0013 00       		.byte	0
 173 0014 00       		.byte	0
 174 0015 02       		.uleb128 0x2
 175 0016 24       		.uleb128 0x24
 176 0017 00       		.byte	0
 177 0018 0B       		.uleb128 0xb
 178 0019 0B       		.uleb128 0xb
 179 001a 3E       		.uleb128 0x3e
 180 001b 0B       		.uleb128 0xb
 181 001c 03       		.uleb128 0x3
 182 001d 0E       		.uleb128 0xe
 183 001e 00       		.byte	0
 184 001f 00       		.byte	0
 185 0020 03       		.uleb128 0x3
 186 0021 24       		.uleb128 0x24
 187 0022 00       		.byte	0
 188 0023 0B       		.uleb128 0xb
 189 0024 0B       		.uleb128 0xb
 190 0025 3E       		.uleb128 0x3e
 191 0026 0B       		.uleb128 0xb
 192 0027 03       		.uleb128 0x3
 193 0028 08       		.uleb128 0x8
 194 0029 00       		.byte	0
 195 002a 00       		.byte	0
 196 002b 04       		.uleb128 0x4
 197 002c 2E       		.uleb128 0x2e
 198 002d 00       		.byte	0
 199 002e 3F       		.uleb128 0x3f
 200 002f 0C       		.uleb128 0xc
 201 0030 03       		.uleb128 0x3
 202 0031 0E       		.uleb128 0xe
 203 0032 3A       		.uleb128 0x3a
 204 0033 0B       		.uleb128 0xb
 205 0034 3B       		.uleb128 0x3b
 206 0035 0B       		.uleb128 0xb
 207 0036 27       		.uleb128 0x27
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccLEAiEG.s 			page 7


 208 0037 0C       		.uleb128 0xc
 209 0038 11       		.uleb128 0x11
 210 0039 01       		.uleb128 0x1
 211 003a 12       		.uleb128 0x12
 212 003b 01       		.uleb128 0x1
 213 003c 40       		.uleb128 0x40
 214 003d 0A       		.uleb128 0xa
 215 003e 9742     		.uleb128 0x2117
 216 0040 0C       		.uleb128 0xc
 217 0041 00       		.byte	0
 218 0042 00       		.byte	0
 219 0043 00       		.byte	0
 220              		.section	.debug_aranges,"",%progbits
 221 0000 24000000 		.4byte	0x24
 222 0004 0200     		.2byte	0x2
 223 0006 00000000 		.4byte	.Ldebug_info0
 224 000a 04       		.byte	0x4
 225 000b 00       		.byte	0
 226 000c 0000     		.2byte	0
 227 000e 0000     		.2byte	0
 228 0010 00000000 		.4byte	.LFB0
 229 0014 02000000 		.4byte	.LFE0-.LFB0
 230 0018 00000000 		.4byte	.LFB1
 231 001c 02000000 		.4byte	.LFE1-.LFB1
 232 0020 00000000 		.4byte	0
 233 0024 00000000 		.4byte	0
 234              		.section	.debug_ranges,"",%progbits
 235              	.Ldebug_ranges0:
 236 0000 00000000 		.4byte	.LFB0
 237 0004 02000000 		.4byte	.LFE0
 238 0008 00000000 		.4byte	.LFB1
 239 000c 02000000 		.4byte	.LFE1
 240 0010 00000000 		.4byte	0
 241 0014 00000000 		.4byte	0
 242              		.section	.debug_line,"",%progbits
 243              	.Ldebug_line0:
 244 0000 5F000000 		.section	.debug_str,"MS",%progbits,1
 244      02003A00 
 244      00000201 
 244      FB0E0D00 
 244      01010101 
 245              	.LASF6:
 246 0000 6C6F6E67 		.ascii	"long long int\000"
 246      206C6F6E 
 246      6720696E 
 246      7400
 247              	.LASF8:
 248 000e 756E7369 		.ascii	"unsigned int\000"
 248      676E6564 
 248      20696E74 
 248      00
 249              	.LASF16:
 250 001b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\SPI0_INT.c\000"
 250      6E657261 
 250      7465645F 
 250      536F7572 
 250      63655C50 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccLEAiEG.s 			page 8


 251              	.LASF15:
 252 003f 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 252      4320342E 
 252      372E3320 
 252      32303133 
 252      30333132 
 253 0072 616E6368 		.ascii	"anch revision 196615]\000"
 253      20726576 
 253      6973696F 
 253      6E203139 
 253      36363135 
 254              	.LASF5:
 255 0088 6C6F6E67 		.ascii	"long unsigned int\000"
 255      20756E73 
 255      69676E65 
 255      6420696E 
 255      7400
 256              	.LASF7:
 257 009a 6C6F6E67 		.ascii	"long long unsigned int\000"
 257      206C6F6E 
 257      6720756E 
 257      7369676E 
 257      65642069 
 258              	.LASF14:
 259 00b1 53504930 		.ascii	"SPI0_RX_ISR\000"
 259      5F52585F 
 259      49535200 
 260              	.LASF13:
 261 00bd 53504930 		.ascii	"SPI0_TX_ISR\000"
 261      5F54585F 
 261      49535200 
 262              	.LASF1:
 263 00c9 756E7369 		.ascii	"unsigned char\000"
 263      676E6564 
 263      20636861 
 263      7200
 264              	.LASF11:
 265 00d7 63686172 		.ascii	"char\000"
 265      00
 266              	.LASF4:
 267 00dc 6C6F6E67 		.ascii	"long int\000"
 267      20696E74 
 267      00
 268              	.LASF10:
 269 00e5 646F7562 		.ascii	"double\000"
 269      6C6500
 270              	.LASF3:
 271 00ec 73686F72 		.ascii	"short unsigned int\000"
 271      7420756E 
 271      7369676E 
 271      65642069 
 271      6E7400
 272              	.LASF0:
 273 00ff 7369676E 		.ascii	"signed char\000"
 273      65642063 
 273      68617200 
 274              	.LASF9:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccLEAiEG.s 			page 9


 275 010b 666C6F61 		.ascii	"float\000"
 275      7400
 276              	.LASF17:
 277 0111 433A5C55 		.ascii	"C:\\Users\\chuck.erhardt\\Documents\\GitHub\\PSoC-W"
 277      73657273 
 277      5C636875 
 277      636B2E65 
 277      72686172 
 278 013f 35313030 		.ascii	"5100-Driver\\freeSoCExplorer+ArduinoSheld_Example.c"
 278      2D447269 
 278      7665725C 
 278      66726565 
 278      536F4345 
 279 0171 7964736E 		.ascii	"ydsn\000"
 279      00
 280              	.LASF2:
 281 0176 73686F72 		.ascii	"short int\000"
 281      7420696E 
 281      7400
 282              	.LASF12:
 283 0180 73697A65 		.ascii	"sizetype\000"
 283      74797065 
 283      00
 284              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
