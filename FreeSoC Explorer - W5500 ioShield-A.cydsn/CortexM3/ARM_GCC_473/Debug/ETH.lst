ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ETH.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ETH_SOCKET_TX_BASE
  19              		.section	.rodata
  20              		.align	2
  21              		.type	ETH_SOCKET_TX_BASE, %object
  22              		.size	ETH_SOCKET_TX_BASE, 32
  23              	ETH_SOCKET_TX_BASE:
  24 0000 00000200 		.word	131072
  25 0004 00000600 		.word	393216
  26 0008 00000A00 		.word	655360
  27 000c 00000E00 		.word	917504
  28 0010 00001200 		.word	1179648
  29 0014 00001600 		.word	1441792
  30 0018 00001A00 		.word	1703936
  31 001c 00001E00 		.word	1966080
  32              		.global	ETH_SOCKET_RX_BASE
  33              		.align	2
  34              		.type	ETH_SOCKET_RX_BASE, %object
  35              		.size	ETH_SOCKET_RX_BASE, 32
  36              	ETH_SOCKET_RX_BASE:
  37 0020 00000300 		.word	196608
  38 0024 00000700 		.word	458752
  39 0028 00000B00 		.word	720896
  40 002c 00000F00 		.word	983040
  41 0030 00001300 		.word	1245184
  42 0034 00001700 		.word	1507328
  43 0038 00001B00 		.word	1769472
  44 003c 00001F00 		.word	2031616
  45              		.global	ETH_W5500_BSB
  46              		.align	2
  47              		.type	ETH_W5500_BSB, %object
  48              		.size	ETH_W5500_BSB, 32
  49              	ETH_W5500_BSB:
  50 0040 00000100 		.word	65536
  51 0044 00000500 		.word	327680
  52 0048 00000900 		.word	589824
  53 004c 00000D00 		.word	851968
  54 0050 00001100 		.word	1114112
  55 0054 00001500 		.word	1376256
  56 0058 00001900 		.word	1638400
  57 005c 00001E00 		.word	1966080
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 2


  58              		.comm	ETH_SocketConfig,64,4
  59              		.comm	ETH_SubnetMask,4,4
  60              		.comm	ETH_MAC,6,4
  61              		.section	.text.ETH_ChipSelect,"ax",%progbits
  62              		.align	2
  63              		.global	ETH_ChipSelect
  64              		.thumb
  65              		.thumb_func
  66              		.type	ETH_ChipSelect, %function
  67              	ETH_ChipSelect:
  68              	.LFB0:
  69              		.file 1 ".\\Generated_Source\\PSoC5\\ETH.c"
   1:.\Generated_Source\PSoC5/ETH.c **** /**
   2:.\Generated_Source\PSoC5/ETH.c ****  * \addtogroup w5x00
   3:.\Generated_Source\PSoC5/ETH.c ****  * @{
   4:.\Generated_Source\PSoC5/ETH.c ****  */
   5:.\Generated_Source\PSoC5/ETH.c **** 
   6:.\Generated_Source\PSoC5/ETH.c **** /**
   7:.\Generated_Source\PSoC5/ETH.c ****  * \file Driver implementation for interfacing with the W5x00 device
   8:.\Generated_Source\PSoC5/ETH.c ****  * \author Chuck Erhardt (chuck@e2forlife.com)
   9:.\Generated_Source\PSoC5/ETH.c ****  *
  10:.\Generated_Source\PSoC5/ETH.c ****  * This file contains the main driver implementation for control
  11:.\Generated_Source\PSoC5/ETH.c ****  * of the W5x00 device.
  12:.\Generated_Source\PSoC5/ETH.c **** */
  13:.\Generated_Source\PSoC5/ETH.c **** 
  14:.\Generated_Source\PSoC5/ETH.c **** /*
  15:.\Generated_Source\PSoC5/ETH.c ****  * Change Log:
  16:.\Generated_Source\PSoC5/ETH.c ****  * 
  17:.\Generated_Source\PSoC5/ETH.c ****  * V1.1
  18:.\Generated_Source\PSoC5/ETH.c ****  * - Modified the SPI access function to remove hard wait for READ_WRITE_DELAY  <CE>
  19:.\Generated_Source\PSoC5/ETH.c ****  * - Removed READ_WRITE_DELAY Parameter <CE>
  20:.\Generated_Source\PSoC5/ETH.c ****  * - Added validator to SS_NUM parameter to ensure that the value is the range 0-3 <CE>
  21:.\Generated_Source\PSoC5/ETH.c ****  * - Removed "inline" keywords from interal register access function to promote
  22:.\Generated_Source\PSoC5/ETH.c ****  *   compatibility with Keil PSoC3 compilers that don't support them. <CE>
  23:.\Generated_Source\PSoC5/ETH.c ****  * - Fixed bug in _ProcessRxData() that caused the read pointer not to be updated without
  24:.\Generated_Source\PSoC5/ETH.c ****  *   the lookahead flag being set. <CE>
  25:.\Generated_Source\PSoC5/ETH.c ****  * V1.2
  26:.\Generated_Source\PSoC5/ETH.c ****  * - Added _STS_SPI_IDLE flag to _SpiDone conditions to prevent deadlocking that
  27:.\Generated_Source\PSoC5/ETH.c ****  *   was occuring during the first read or write using the SPI device (SPIM moded) <CE>
  28:.\Generated_Source\PSoC5/ETH.c ****  * - Removed the check for SOCKET_ESTABLISHED at the start of the TcpReceive
  29:.\Generated_Source\PSoC5/ETH.c ****  *   function to allow for reading received socket data after the socket was dropped
  30:.\Generated_Source\PSoC5/ETH.c ****  *   by the remote server.  It was brought to my attention that this occurs when
  31:.\Generated_Source\PSoC5/ETH.c ****  *   operating with client connection to HTTP servers. <CE>
  32:.\Generated_Source\PSoC5/ETH.c ****  * - Added a MAC address parser and MAC to String Converter. <CE>
  33:.\Generated_Source\PSoC5/ETH.c ****  */
  34:.\Generated_Source\PSoC5/ETH.c **** 
  35:.\Generated_Source\PSoC5/ETH.c **** /* Cypress library includes */
  36:.\Generated_Source\PSoC5/ETH.c **** #include <cytypes.h>
  37:.\Generated_Source\PSoC5/ETH.c **** #include <cylib.h>
  38:.\Generated_Source\PSoC5/ETH.c **** 
  39:.\Generated_Source\PSoC5/ETH.c **** /*  include functions and types for the driver */
  40:.\Generated_Source\PSoC5/ETH.c **** #include "ETH.h"
  41:.\Generated_Source\PSoC5/ETH.c **** /* Include register address constants */
  42:.\Generated_Source\PSoC5/ETH.c **** #include "ETH_reg55.h"
  43:.\Generated_Source\PSoC5/ETH.c **** 
  44:.\Generated_Source\PSoC5/ETH.c **** /* include the serial interface functions */
  45:.\Generated_Source\PSoC5/ETH.c **** #include <SPI.h>
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 3


  46:.\Generated_Source\PSoC5/ETH.c **** #include <CSN.h>
  47:.\Generated_Source\PSoC5/ETH.c **** 
  48:.\Generated_Source\PSoC5/ETH.c **** extern uint8 SPI_initVar;
  49:.\Generated_Source\PSoC5/ETH.c **** 
  50:.\Generated_Source\PSoC5/ETH.c **** typedef struct
  51:.\Generated_Source\PSoC5/ETH.c **** {
  52:.\Generated_Source\PSoC5/ETH.c **** 	uint8  Protocol;
  53:.\Generated_Source\PSoC5/ETH.c **** 	uint8  SocketFlags;
  54:.\Generated_Source\PSoC5/ETH.c **** 	uint16 SourcePort;
  55:.\Generated_Source\PSoC5/ETH.c **** 	uint8  ServerFlag;
  56:.\Generated_Source\PSoC5/ETH.c **** 	uint8  TxBufferSize;
  57:.\Generated_Source\PSoC5/ETH.c **** 	uint8  RxBufferSize;
  58:.\Generated_Source\PSoC5/ETH.c **** } ETH_SOCKET;
  59:.\Generated_Source\PSoC5/ETH.c **** 
  60:.\Generated_Source\PSoC5/ETH.c **** #if (5 == 1) // W5100 Specific
  61:.\Generated_Source\PSoC5/ETH.c **** const uint32 ETH_SOCKET_TX_BASE[4] = { 0x4000, 0x4800, 0x5000, 0x5800 };
  62:.\Generated_Source\PSoC5/ETH.c **** const uint32 ETH_SOCKET_RX_BASE[4] = { 0x6000, 0x6800, 0x7000, 0x7800 };
  63:.\Generated_Source\PSoC5/ETH.c **** 
  64:.\Generated_Source\PSoC5/ETH.c **** #define ETH_MAX_SOCKET   ( 4 )
  65:.\Generated_Source\PSoC5/ETH.c **** #define ETH_BURST_MAX    ( 1 )
  66:.\Generated_Source\PSoC5/ETH.c **** 
  67:.\Generated_Source\PSoC5/ETH.c **** /**
  68:.\Generated_Source\PSoC5/ETH.c ****  * \def ETH_SOCKET REG(s,r)
  69:.\Generated_Source\PSoC5/ETH.c ****  * \brief Convert the socket number to a base address within the W5100
  70:.\Generated_Source\PSoC5/ETH.c ****  */
  71:.\Generated_Source\PSoC5/ETH.c **** #define ETH_SOCKET_REG(s,r)           ( (((uint32)s<<8)+0x0400) + r )
  72:.\Generated_Source\PSoC5/ETH.c **** 
  73:.\Generated_Source\PSoC5/ETH.c **** #elif (5 == 2) // W5200 Specific
  74:.\Generated_Source\PSoC5/ETH.c **** 	
  75:.\Generated_Source\PSoC5/ETH.c **** const uint32 ETH_SOCKET_TX_BASE[8] = { 0x8000, 0x8800, 0x9000, 0x9800, 0xA000, 0xA800, 0xB000, 0xB8
  76:.\Generated_Source\PSoC5/ETH.c **** const uint32 ETH_SOCKET_RX_BASE[8] = { 0xC000, 0xC800, 0xD000, 0xD800, 0xE000, 0xE800, 0xF000, 0xF8
  77:.\Generated_Source\PSoC5/ETH.c **** 
  78:.\Generated_Source\PSoC5/ETH.c **** #define ETH_MAX_SOCKET   ( 8 )
  79:.\Generated_Source\PSoC5/ETH.c **** #define ETH_BURST_MAX    ( 0x7FFF )
  80:.\Generated_Source\PSoC5/ETH.c **** 
  81:.\Generated_Source\PSoC5/ETH.c **** /**
  82:.\Generated_Source\PSoC5/ETH.c ****  * \def ETH_SOCKET REG(s,r)
  83:.\Generated_Source\PSoC5/ETH.c ****  * \brief Convert the socket number and register to a base address within the W5200
  84:.\Generated_Source\PSoC5/ETH.c ****  */
  85:.\Generated_Source\PSoC5/ETH.c **** #define ETH_SOCKET_REG(s,r)           ( ((uint32)s<<8) + r )
  86:.\Generated_Source\PSoC5/ETH.c **** #elif (5 == 5) // W5500 Specific
  87:.\Generated_Source\PSoC5/ETH.c **** 
  88:.\Generated_Source\PSoC5/ETH.c **** 	const uint32 ETH_SOCKET_TX_BASE[8] = { 0x00020000, 0x00060000, 0x000A0000, 0x000E0000, 0x00120000,
  89:.\Generated_Source\PSoC5/ETH.c **** 	const uint32 ETH_SOCKET_RX_BASE[8] = { 0x00030000, 0x00070000, 0x000B0000, 0x000F0000, 0x00130000,
  90:.\Generated_Source\PSoC5/ETH.c **** 
  91:.\Generated_Source\PSoC5/ETH.c **** 	#define ETH_MAX_SOCKET   ( 8 )
  92:.\Generated_Source\PSoC5/ETH.c **** 	#define ETH_BURST_MAX    ( 0xFFFF )
  93:.\Generated_Source\PSoC5/ETH.c **** 
  94:.\Generated_Source\PSoC5/ETH.c **** 	const uint32 ETH_W5500_BSB[8] = { 0x00010000, 0x00050000, 0x00090000, 0x000D0000, 0x00110000, 0x00
  95:.\Generated_Source\PSoC5/ETH.c **** 	/**
  96:.\Generated_Source\PSoC5/ETH.c **** 	 * \def ETH_SOCKET REG(s,r)
  97:.\Generated_Source\PSoC5/ETH.c **** 	 * \brief Convert the socket number and register to a base address within the W5500
  98:.\Generated_Source\PSoC5/ETH.c **** 	 */
  99:.\Generated_Source\PSoC5/ETH.c **** 	#define ETH_SOCKET_REG(s,r)           ( ETH_W5500_BSB[s] + r )
 100:.\Generated_Source\PSoC5/ETH.c **** 
 101:.\Generated_Source\PSoC5/ETH.c **** #else
 102:.\Generated_Source\PSoC5/ETH.c **** 	#error "W5x00 components other than W5100, W5200 and W5500 are not currently supported"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 4


 103:.\Generated_Source\PSoC5/ETH.c **** #endif
 104:.\Generated_Source\PSoC5/ETH.c **** 
 105:.\Generated_Source\PSoC5/ETH.c **** ETH_SOCKET ETH_SocketConfig[ETH_MAX_SOCKET];
 106:.\Generated_Source\PSoC5/ETH.c **** uint32 ETH_SubnetMask;
 107:.\Generated_Source\PSoC5/ETH.c **** 
 108:.\Generated_Source\PSoC5/ETH.c **** uint8 ETH_MAC[6]; /* V1.2: removed = {00-de-ad-be-ef-00}; */
 109:.\Generated_Source\PSoC5/ETH.c **** 
 110:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 111:.\Generated_Source\PSoC5/ETH.c **** /* V1.2 HEX digit conversion tools for MAC Address parsing */
 112:.\Generated_Source\PSoC5/ETH.c **** #define ETH_ISXDIGIT(x) \
 113:.\Generated_Source\PSoC5/ETH.c **** ( ((x>='0')&&(x<='9'))||((x>='a')&&(x<='f'))||((x>='A')&&(x<='F')) )
 114:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 115:.\Generated_Source\PSoC5/ETH.c **** #define ETH_HEX2BIN(x) \
 116:.\Generated_Source\PSoC5/ETH.c **** ( ((x>='0')&&(x<='9'))? (x-'0') : \
 117:.\Generated_Source\PSoC5/ETH.c ****   ((x>='a')&&(x<='f'))? ((x-'a')+10) : \
 118:.\Generated_Source\PSoC5/ETH.c ****   ((x>='A')&&(x<='F'))? ((x-'A')+10) : 0 )
 119:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 120:.\Generated_Source\PSoC5/ETH.c **** #define ETH_BIN2HEX(x) \
 121:.\Generated_Source\PSoC5/ETH.c **** ( (x>9)? ((x-10)+'A') : (x + '0'))
 122:.\Generated_Source\PSoC5/ETH.c **** /* END V1.2 defines */
 123:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 124:.\Generated_Source\PSoC5/ETH.c **** #if !defined(CY_SCB_SPI_H)
 125:.\Generated_Source\PSoC5/ETH.c **** 	/* SPIM Code */
 126:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */	
 127:.\Generated_Source\PSoC5/ETH.c **** /* V1.1 : Macro definition for the SpiDone flag. */
 128:.\Generated_Source\PSoC5/ETH.c **** /*  
 129:.\Generated_Source\PSoC5/ETH.c **** 	V1.2 : Added SPI_IDLE flag to the condition for done to eliminate
 130:.\Generated_Source\PSoC5/ETH.c **** 	deadlocking when IDLE but not done.  This seems to occur during the
 131:.\Generated_Source\PSoC5/ETH.c **** 	initial write/read to/from the SPI port.
 132:.\Generated_Source\PSoC5/ETH.c **** */
 133:.\Generated_Source\PSoC5/ETH.c **** /**
 134:.\Generated_Source\PSoC5/ETH.c ****  * \brief Macro to determine the state of the spi done
 135:.\Generated_Source\PSoC5/ETH.c ****  * This macro reads the status register of the transmitter and masks off the doen bit.
 136:.\Generated_Source\PSoC5/ETH.c ****  */
 137:.\Generated_Source\PSoC5/ETH.c **** #define ETH_SpiDone     (SPI_ReadTxStatus() & (SPI_STS_SPI_DONE | SPI_STS_SPI_IDLE))
 138:.\Generated_Source\PSoC5/ETH.c **** #else
 139:.\Generated_Source\PSoC5/ETH.c **** /* include SPI function header for the SCB */
 140:.\Generated_Source\PSoC5/ETH.c **** #include <SPI_SPI_UART.h>
 141:.\Generated_Source\PSoC5/ETH.c **** 
 142:.\Generated_Source\PSoC5/ETH.c **** /* V1.1 : Include the header for the select pin used. */
 143:.\Generated_Source\PSoC5/ETH.c **** #define ETH_SpiDone    ((SPI_SpiUartGetTxBufferSize()==0)?1:0)
 144:.\Generated_Source\PSoC5/ETH.c **** #endif
 145:.\Generated_Source\PSoC5/ETH.c **** 
 146:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 147:.\Generated_Source\PSoC5/ETH.c **** /**
 148:.\Generated_Source\PSoC5/ETH.c ****  * \brief Select the active SCB chip select connected to the W51
 149:.\Generated_Source\PSoC5/ETH.c ****  *
 150:.\Generated_Source\PSoC5/ETH.c ****  * this fucntion will set the active SS line within the SCB to select and
 151:.\Generated_Source\PSoC5/ETH.c ****  * communicate with the W5100 device.
 152:.\Generated_Source\PSoC5/ETH.c ****  * \note this functions requires that the device chip select is originating
 153:.\Generated_Source\PSoC5/ETH.c ****  *  from the SPI device.
 154:.\Generated_Source\PSoC5/ETH.c ****  */
 155:.\Generated_Source\PSoC5/ETH.c **** void
 156:.\Generated_Source\PSoC5/ETH.c **** ETH_ChipSelect( void )
 157:.\Generated_Source\PSoC5/ETH.c **** {
  70              		.loc 1 157 0
  71              		.cfi_startproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 5


  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74 0000 80B5     		push	{r7, lr}
  75              	.LCFI0:
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 00AF     		add	r7, sp, #0
  80              	.LCFI1:
  81              		.cfi_def_cfa_register 7
 158:.\Generated_Source\PSoC5/ETH.c **** 	/*
 159:.\Generated_Source\PSoC5/ETH.c **** 	 * User code for setting the chip select enable.  This is called once
 160:.\Generated_Source\PSoC5/ETH.c **** 	 * at the beginning of each tranfer to/from the W5100, so we recommend
 161:.\Generated_Source\PSoC5/ETH.c **** 	 * either doing nothing (SPIM SS straight out), or to switch the demux
 162:.\Generated_Source\PSoC5/ETH.c **** 	 * component to select the correct output for the SS routing.  This
 163:.\Generated_Source\PSoC5/ETH.c **** 	 * should probably not drive a pin directly since there is no return
 164:.\Generated_Source\PSoC5/ETH.c **** 	 * call from the driver that would allow an enable/disable type of
 165:.\Generated_Source\PSoC5/ETH.c **** 	 * implementation for CSN control.
 166:.\Generated_Source\PSoC5/ETH.c **** 	 */
 167:.\Generated_Source\PSoC5/ETH.c **** 	CSN_Write( ~(1<<0) );
  82              		.loc 1 167 0
  83 0004 4FF0FE00 		mov	r0, #254
  84 0008 FFF7FEFF 		bl	CSN_Write
 168:.\Generated_Source\PSoC5/ETH.c **** 	/* `#START CHIP_SELECT_GENERATION` */
 169:.\Generated_Source\PSoC5/ETH.c **** 
 170:.\Generated_Source\PSoC5/ETH.c **** 	/* `#END` */
 171:.\Generated_Source\PSoC5/ETH.c **** }
  85              		.loc 1 171 0
  86 000c 80BD     		pop	{r7, pc}
  87              		.cfi_endproc
  88              	.LFE0:
  89              		.size	ETH_ChipSelect, .-ETH_ChipSelect
  90 000e 00BF     		.section	.text.ETH_ChipDeSelect,"ax",%progbits
  91              		.align	2
  92              		.global	ETH_ChipDeSelect
  93              		.thumb
  94              		.thumb_func
  95              		.type	ETH_ChipDeSelect, %function
  96              	ETH_ChipDeSelect:
  97              	.LFB1:
 172:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 173:.\Generated_Source\PSoC5/ETH.c **** /**
 174:.\Generated_Source\PSoC5/ETH.c ****  * \brief Called at the end of a transfer to deselect the device
 175:.\Generated_Source\PSoC5/ETH.c ****  *
 176:.\Generated_Source\PSoC5/ETH.c ****  * This function is called by the chip access functions from the core
 177:.\Generated_Source\PSoC5/ETH.c ****  * interface code to de-select the device after the read/write operation
 178:.\Generated_Source\PSoC5/ETH.c ****  * has been completed. This was changed from the "old way" of doing things
 179:.\Generated_Source\PSoC5/ETH.c ****  * using the hardware SS pin because the FIFO will empty too quickly
 180:.\Generated_Source\PSoC5/ETH.c ****  * causing interruptions in the transfer during burst writes at high
 181:.\Generated_Source\PSoC5/ETH.c ****  * speed. This allows bursting without having to have a huge software
 182:.\Generated_Source\PSoC5/ETH.c ****  * FIFO and using DMA to keep the buffer loaded.
 183:.\Generated_Source\PSoC5/ETH.c ****  */
 184:.\Generated_Source\PSoC5/ETH.c **** void
 185:.\Generated_Source\PSoC5/ETH.c **** ETH_ChipDeSelect( void )
 186:.\Generated_Source\PSoC5/ETH.c **** {
  98              		.loc 1 186 0
  99              		.cfi_startproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 6


 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102 0000 80B5     		push	{r7, lr}
 103              	.LCFI2:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 00AF     		add	r7, sp, #0
 108              	.LCFI3:
 109              		.cfi_def_cfa_register 7
 187:.\Generated_Source\PSoC5/ETH.c **** 	/* V1.1: Wait for SPI operation to complete */
 188:.\Generated_Source\PSoC5/ETH.c **** 	while( ETH_SpiDone == 0) {
 110              		.loc 1 188 0
 111 0004 03E0     		b	.L3
 112              	.L4:
 189:.\Generated_Source\PSoC5/ETH.c **** 		CyDelayUs(1);
 113              		.loc 1 189 0
 114 0006 4FF00100 		mov	r0, #1
 115 000a FFF7FEFF 		bl	CyDelayUs
 116              	.L3:
 188:.\Generated_Source\PSoC5/ETH.c **** 	while( ETH_SpiDone == 0) {
 117              		.loc 1 188 0 discriminator 1
 118 000e FFF7FEFF 		bl	SPI_ReadTxStatus
 119 0012 0346     		mov	r3, r0
 120 0014 03F01103 		and	r3, r3, #17
 121 0018 002B     		cmp	r3, #0
 122 001a F4D0     		beq	.L4
 190:.\Generated_Source\PSoC5/ETH.c **** 	}
 191:.\Generated_Source\PSoC5/ETH.c **** 	CSN_Write(0xFF);
 123              		.loc 1 191 0
 124 001c 4FF0FF00 		mov	r0, #255
 125 0020 FFF7FEFF 		bl	CSN_Write
 192:.\Generated_Source\PSoC5/ETH.c **** }
 126              		.loc 1 192 0
 127 0024 80BD     		pop	{r7, pc}
 128              		.cfi_endproc
 129              	.LFE1:
 130              		.size	ETH_ChipDeSelect, .-ETH_ChipDeSelect
 131 0026 00BF     		.section	.text.ETH_ChipWrite,"ax",%progbits
 132              		.align	2
 133              		.global	ETH_ChipWrite
 134              		.thumb
 135              		.thumb_func
 136              		.type	ETH_ChipWrite, %function
 137              	ETH_ChipWrite:
 138              	.LFB2:
 193:.\Generated_Source\PSoC5/ETH.c **** 
 194:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
 195:.\Generated_Source\PSoC5/ETH.c **** /* Generic SPI Functions */
 196:.\Generated_Source\PSoC5/ETH.c **** /*
 197:.\Generated_Source\PSoC5/ETH.c ****  * NOTE: when using the SPIM, there must be a buffer length of at least 4
 198:.\Generated_Source\PSoC5/ETH.c ****  * bytes to allow the transfer/receive cycle for each read/write operation
 199:.\Generated_Source\PSoC5/ETH.c ****  * to be contained within the FIFO buffer.
 200:.\Generated_Source\PSoC5/ETH.c ****  */
 201:.\Generated_Source\PSoC5/ETH.c **** #if !defined(CY_SCB_SPI_H)
 202:.\Generated_Source\PSoC5/ETH.c **** 	/* SPIM Code */
 203:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 7


 204:.\Generated_Source\PSoC5/ETH.c **** /**
 205:.\Generated_Source\PSoC5/ETH.c ****  * \brief write Data to the W5100 at the specified address
 206:.\Generated_Source\PSoC5/ETH.c ****  * \param addr Address of register or memory buffer
 207:.\Generated_Source\PSoC5/ETH.c ****  * \param dat Data to write to the device
 208:.\Generated_Source\PSoC5/ETH.c ****  *
 209:.\Generated_Source\PSoC5/ETH.c ****  * This function will send the WRITE opcode, address and data to the W5100
 210:.\Generated_Source\PSoC5/ETH.c ****  * in order to write the data to the specified register.
 211:.\Generated_Source\PSoC5/ETH.c ****  */
 212:.\Generated_Source\PSoC5/ETH.c **** void 
 213:.\Generated_Source\PSoC5/ETH.c **** ETH_ChipWrite(uint32 addr, uint8 *dat, uint16 length)
 214:.\Generated_Source\PSoC5/ETH.c **** {
 139              		.loc 1 214 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 24
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143 0000 80B5     		push	{r7, lr}
 144              	.LCFI4:
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 7, -8
 147              		.cfi_offset 14, -4
 148 0002 86B0     		sub	sp, sp, #24
 149              	.LCFI5:
 150              		.cfi_def_cfa_offset 32
 151 0004 00AF     		add	r7, sp, #0
 152              	.LCFI6:
 153              		.cfi_def_cfa_register 7
 154 0006 F860     		str	r0, [r7, #12]
 155 0008 B960     		str	r1, [r7, #8]
 156 000a 1346     		mov	r3, r2
 157 000c FB80     		strh	r3, [r7, #6]	@ movhi
 215:.\Generated_Source\PSoC5/ETH.c **** 	uint16 txLen;
 216:.\Generated_Source\PSoC5/ETH.c **** 	uint16 txCount;
 217:.\Generated_Source\PSoC5/ETH.c **** 	uint16 adr;
 218:.\Generated_Source\PSoC5/ETH.c **** 	uint8 crit;
 219:.\Generated_Source\PSoC5/ETH.c **** 	/* V2.0 W5500 block select bits, stripped from the upper 16 bits of the address */
 220:.\Generated_Source\PSoC5/ETH.c **** 	uint8 bsb;
 221:.\Generated_Source\PSoC5/ETH.c **** 	
 222:.\Generated_Source\PSoC5/ETH.c **** 	/* V1.1: Wait for SPI operation to complete */
 223:.\Generated_Source\PSoC5/ETH.c **** 	while( ETH_SpiDone == 0) {
 158              		.loc 1 223 0
 159 000e 03E0     		b	.L6
 160              	.L7:
 224:.\Generated_Source\PSoC5/ETH.c **** 		CyDelayUs(1);
 161              		.loc 1 224 0
 162 0010 4FF00100 		mov	r0, #1
 163 0014 FFF7FEFF 		bl	CyDelayUs
 164              	.L6:
 223:.\Generated_Source\PSoC5/ETH.c **** 	while( ETH_SpiDone == 0) {
 165              		.loc 1 223 0 discriminator 1
 166 0018 FFF7FEFF 		bl	SPI_ReadTxStatus
 167 001c 0346     		mov	r3, r0
 168 001e 03F01103 		and	r3, r3, #17
 169 0022 002B     		cmp	r3, #0
 170 0024 F4D0     		beq	.L7
 225:.\Generated_Source\PSoC5/ETH.c **** 	}
 226:.\Generated_Source\PSoC5/ETH.c **** 	/* V1.1: End change */
 227:.\Generated_Source\PSoC5/ETH.c **** 	
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 8


 228:.\Generated_Source\PSoC5/ETH.c **** 	crit = CyEnterCriticalSection();
 171              		.loc 1 228 0
 172 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 173 002a 0346     		mov	r3, r0
 174 002c 3B74     		strb	r3, [r7, #16]
 229:.\Generated_Source\PSoC5/ETH.c **** 	
 230:.\Generated_Source\PSoC5/ETH.c **** 	adr = (addr&0x0000FFFF);
 175              		.loc 1 230 0
 176 002e FB68     		ldr	r3, [r7, #12]
 177 0030 7B82     		strh	r3, [r7, #18]	@ movhi
 231:.\Generated_Source\PSoC5/ETH.c **** 	bsb = (addr>>16)&0x001F; /* remove the block-select bits from the address */
 178              		.loc 1 231 0
 179 0032 FB68     		ldr	r3, [r7, #12]
 180 0034 4FEA1343 		lsr	r3, r3, #16
 181 0038 DBB2     		uxtb	r3, r3
 182 003a 03F01F03 		and	r3, r3, #31
 183 003e 7B74     		strb	r3, [r7, #17]
 232:.\Generated_Source\PSoC5/ETH.c **** 	
 233:.\Generated_Source\PSoC5/ETH.c **** 	txLen = 0;
 184              		.loc 1 233 0
 185 0040 4FF00003 		mov	r3, #0
 186 0044 FB82     		strh	r3, [r7, #22]	@ movhi
 234:.\Generated_Source\PSoC5/ETH.c **** 	txCount = 0;
 187              		.loc 1 234 0
 188 0046 4FF00003 		mov	r3, #0
 189 004a BB82     		strh	r3, [r7, #20]	@ movhi
 190              	.L12:
 235:.\Generated_Source\PSoC5/ETH.c **** 	do {
 236:.\Generated_Source\PSoC5/ETH.c **** 		/* Using internal device SS generation */
 237:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipSelect();
 191              		.loc 1 237 0
 192 004c FFF7FEFF 		bl	ETH_ChipSelect
 238:.\Generated_Source\PSoC5/ETH.c **** 		/*
 239:.\Generated_Source\PSoC5/ETH.c **** 		 * The first thing to do is to clear the Rx Buffer of any lingering
 240:.\Generated_Source\PSoC5/ETH.c **** 		 * data left from other transfers.  Then send the data per the W5100
 241:.\Generated_Source\PSoC5/ETH.c **** 		 * datasheet p.62
 242:.\Generated_Source\PSoC5/ETH.c **** 		 */
 243:.\Generated_Source\PSoC5/ETH.c **** 		SPI_ClearRxBuffer();
 193              		.loc 1 243 0
 194 0050 FFF7FEFF 		bl	SPI_ClearRxBuffer
 244:.\Generated_Source\PSoC5/ETH.c **** 		/* Begin transfer of data to device */
 245:.\Generated_Source\PSoC5/ETH.c **** #if (5 == 1)
 246:.\Generated_Source\PSoC5/ETH.c **** 		/*
 247:.\Generated_Source\PSoC5/ETH.c **** 	     * The W5100 uses an opcode followed by the register/buffer
 248:.\Generated_Source\PSoC5/ETH.c **** 	     * address for each data element transfered.
 249:.\Generated_Source\PSoC5/ETH.c **** 	     */
 250:.\Generated_Source\PSoC5/ETH.c **** 		txLen = 1;
 251:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData(ETH_WRITE_OP);
 252:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData((adr>>8)&0x00FF);
 253:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData(adr&0x00FF);
 254:.\Generated_Source\PSoC5/ETH.c **** #elif (5 == 2)
 255:.\Generated_Source\PSoC5/ETH.c **** 	    /*
 256:.\Generated_Source\PSoC5/ETH.c **** 	     * The Header block for the W5200 uses the address, plus
 257:.\Generated_Source\PSoC5/ETH.c **** 	     * a length word which contains a read/write bit.  Setting
 258:.\Generated_Source\PSoC5/ETH.c **** 	     * the bit to a 1 (0x80) will enable write mode
 259:.\Generated_Source\PSoC5/ETH.c **** 	     */
 260:.\Generated_Source\PSoC5/ETH.c **** 		txLen = (length > ETH_BURST_MAX)? ETH_BURST_MAX : length;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 9


 261:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( (adr>>8) & 0x00FF);
 262:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( adr & 0x00FF );
 263:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( 0x80 | ((txLen>>8)&0x007F) );
 264:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( txLen & 0x00FF );
 265:.\Generated_Source\PSoC5/ETH.c **** #elif (5 == 5)
 266:.\Generated_Source\PSoC5/ETH.c **** 		/*
 267:.\Generated_Source\PSoC5/ETH.c **** 	 	 * Build the header block for the W5500, using the length to
 268:.\Generated_Source\PSoC5/ETH.c **** 	     * added the command length (1, 2, 4 or n) to the set.
 269:.\Generated_Source\PSoC5/ETH.c **** 		 */
 270:.\Generated_Source\PSoC5/ETH.c **** 		txLen = length; /* default to the length, since there is N-length data */
 195              		.loc 1 270 0
 196 0054 FB88     		ldrh	r3, [r7, #6]	@ movhi
 197 0056 FB82     		strh	r3, [r7, #22]	@ movhi
 271:.\Generated_Source\PSoC5/ETH.c **** 		/* 
 272:.\Generated_Source\PSoC5/ETH.c **** 	     * configure the BSB byte to contain the write bit set.
 273:.\Generated_Source\PSoC5/ETH.c **** 	     * note/todo : enable SPi-less usage and fixed mode transfer data for
 274:.\Generated_Source\PSoC5/ETH.c **** 	     * the use without having SPI.
 275:.\Generated_Source\PSoC5/ETH.c **** 	     */
 276:.\Generated_Source\PSoC5/ETH.c **** 		bsb = (bsb << 3) | 4;
 198              		.loc 1 276 0
 199 0058 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 200 005a 4FEAC303 		lsl	r3, r3, #3
 201 005e DBB2     		uxtb	r3, r3
 202 0060 43F00403 		orr	r3, r3, #4
 203 0064 DBB2     		uxtb	r3, r3
 204 0066 7B74     		strb	r3, [r7, #17]
 277:.\Generated_Source\PSoC5/ETH.c **** 		
 278:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( (adr>>8) & 0x00FF);
 205              		.loc 1 278 0
 206 0068 7B8A     		ldrh	r3, [r7, #18]
 207 006a 4FEA1323 		lsr	r3, r3, #8
 208 006e 9BB2     		uxth	r3, r3
 209 0070 DBB2     		uxtb	r3, r3
 210 0072 1846     		mov	r0, r3
 211 0074 FFF7FEFF 		bl	SPI_WriteTxData
 279:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( adr & 0x00FF );
 212              		.loc 1 279 0
 213 0078 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 214 007a DBB2     		uxtb	r3, r3
 215 007c 1846     		mov	r0, r3
 216 007e FFF7FEFF 		bl	SPI_WriteTxData
 280:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( bsb );
 217              		.loc 1 280 0
 218 0082 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 219 0084 1846     		mov	r0, r3
 220 0086 FFF7FEFF 		bl	SPI_WriteTxData
 221              	.L13:
 281:.\Generated_Source\PSoC5/ETH.c **** 		
 282:.\Generated_Source\PSoC5/ETH.c **** #endif
 283:.\Generated_Source\PSoC5/ETH.c **** 		/*
 284:.\Generated_Source\PSoC5/ETH.c ****          * send the sequence of bytes to the device following the 
 285:.\Generated_Source\PSoC5/ETH.c ****          * header data transfer.  This will wait for the FIFO to  have
 286:.\Generated_Source\PSoC5/ETH.c ****          * available memory prior to writing the data to the part.
 287:.\Generated_Source\PSoC5/ETH.c ****          * at the end of the block the loop exits and ends the operation
 288:.\Generated_Source\PSoC5/ETH.c ****          * by setting the chip select high.
 289:.\Generated_Source\PSoC5/ETH.c ****          */
 290:.\Generated_Source\PSoC5/ETH.c **** 		// Transmit data block
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 10


 291:.\Generated_Source\PSoC5/ETH.c **** 		do {
 292:.\Generated_Source\PSoC5/ETH.c **** 			while ( (SPI_ReadTxStatus() & SPI_STS_TX_FIFO_NOT_FULL) == 0);
 222              		.loc 1 292 0
 223 008a 00BF     		nop
 224              	.L8:
 225              		.loc 1 292 0 is_stmt 0 discriminator 1
 226 008c FFF7FEFF 		bl	SPI_ReadTxStatus
 227 0090 0346     		mov	r3, r0
 228 0092 03F00403 		and	r3, r3, #4
 229 0096 002B     		cmp	r3, #0
 230 0098 F8D0     		beq	.L8
 293:.\Generated_Source\PSoC5/ETH.c **** 			SPI_WriteTxData(dat[txCount++]);
 231              		.loc 1 293 0 is_stmt 1
 232 009a BB8A     		ldrh	r3, [r7, #20]
 233 009c BA68     		ldr	r2, [r7, #8]
 234 009e D318     		adds	r3, r2, r3
 235 00a0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 236 00a2 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 237 00a4 02F10102 		add	r2, r2, #1
 238 00a8 BA82     		strh	r2, [r7, #20]	@ movhi
 239 00aa 1846     		mov	r0, r3
 240 00ac FFF7FEFF 		bl	SPI_WriteTxData
 294:.\Generated_Source\PSoC5/ETH.c **** 			--length;
 241              		.loc 1 294 0
 242 00b0 FB88     		ldrh	r3, [r7, #6]	@ movhi
 243 00b2 03F1FF33 		add	r3, r3, #-1
 244 00b6 FB80     		strh	r3, [r7, #6]	@ movhi
 295:.\Generated_Source\PSoC5/ETH.c **** 			--txLen;
 245              		.loc 1 295 0
 246 00b8 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 247 00ba 03F1FF33 		add	r3, r3, #-1
 248 00be FB82     		strh	r3, [r7, #22]	@ movhi
 296:.\Generated_Source\PSoC5/ETH.c **** 			++adr;
 249              		.loc 1 296 0
 250 00c0 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 251 00c2 03F10103 		add	r3, r3, #1
 252 00c6 7B82     		strh	r3, [r7, #18]	@ movhi
 297:.\Generated_Source\PSoC5/ETH.c **** 		} while ( txLen > 0 );
 253              		.loc 1 297 0
 254 00c8 FB8A     		ldrh	r3, [r7, #22]
 255 00ca 002B     		cmp	r3, #0
 256 00cc DDD1     		bne	.L13
 298:.\Generated_Source\PSoC5/ETH.c **** 
 299:.\Generated_Source\PSoC5/ETH.c **** 		while( ETH_SpiDone == 0) {
 257              		.loc 1 299 0
 258 00ce 03E0     		b	.L10
 259              	.L11:
 300:.\Generated_Source\PSoC5/ETH.c **** 			CyDelayUs(1);
 260              		.loc 1 300 0
 261 00d0 4FF00100 		mov	r0, #1
 262 00d4 FFF7FEFF 		bl	CyDelayUs
 263              	.L10:
 299:.\Generated_Source\PSoC5/ETH.c **** 		while( ETH_SpiDone == 0) {
 264              		.loc 1 299 0 discriminator 1
 265 00d8 FFF7FEFF 		bl	SPI_ReadTxStatus
 266 00dc 0346     		mov	r3, r0
 267 00de 03F01103 		and	r3, r3, #17
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 11


 268 00e2 002B     		cmp	r3, #0
 269 00e4 F4D0     		beq	.L11
 301:.\Generated_Source\PSoC5/ETH.c **** 		}
 302:.\Generated_Source\PSoC5/ETH.c **** 		// End operation
 303:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipDeSelect();
 270              		.loc 1 303 0
 271 00e6 FFF7FEFF 		bl	ETH_ChipDeSelect
 304:.\Generated_Source\PSoC5/ETH.c **** 	} while (length > 0);
 272              		.loc 1 304 0
 273 00ea FB88     		ldrh	r3, [r7, #6]
 274 00ec 002B     		cmp	r3, #0
 275 00ee ADD1     		bne	.L12
 305:.\Generated_Source\PSoC5/ETH.c **** 	
 306:.\Generated_Source\PSoC5/ETH.c **** 	CyExitCriticalSection( crit );
 276              		.loc 1 306 0
 277 00f0 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 278 00f2 1846     		mov	r0, r3
 279 00f4 FFF7FEFF 		bl	CyExitCriticalSection
 307:.\Generated_Source\PSoC5/ETH.c **** }
 280              		.loc 1 307 0
 281 00f8 07F11807 		add	r7, r7, #24
 282 00fc BD46     		mov	sp, r7
 283 00fe 80BD     		pop	{r7, pc}
 284              		.cfi_endproc
 285              	.LFE2:
 286              		.size	ETH_ChipWrite, .-ETH_ChipWrite
 287              		.section	.text.ETH_ChipRead,"ax",%progbits
 288              		.align	2
 289              		.global	ETH_ChipRead
 290              		.thumb
 291              		.thumb_func
 292              		.type	ETH_ChipRead, %function
 293              	ETH_ChipRead:
 294              	.LFB3:
 308:.\Generated_Source\PSoC5/ETH.c **** 
 309:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 310:.\Generated_Source\PSoC5/ETH.c **** /**
 311:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read data from the W5100 at the spsecified address
 312:.\Generated_Source\PSoC5/ETH.c ****  * \param addr Address from which to read
 313:.\Generated_Source\PSoC5/ETH.c ****  * \returns the data read from the address
 314:.\Generated_Source\PSoC5/ETH.c ****  *
 315:.\Generated_Source\PSoC5/ETH.c ****  * this fucntion will access a W5100 memory location and read the contents
 316:.\Generated_Source\PSoC5/ETH.c ****  * using the serial protocol specified on P.61 of the datasheet.
 317:.\Generated_Source\PSoC5/ETH.c ****  */
 318:.\Generated_Source\PSoC5/ETH.c **** void
 319:.\Generated_Source\PSoC5/ETH.c **** ETH_ChipRead(uint32 addr, uint8 *dat, uint16 length)
 320:.\Generated_Source\PSoC5/ETH.c **** {
 295              		.loc 1 320 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 32
 298              		@ frame_needed = 1, uses_anonymous_args = 0
 299 0000 80B5     		push	{r7, lr}
 300              	.LCFI7:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 7, -8
 303              		.cfi_offset 14, -4
 304 0002 88B0     		sub	sp, sp, #32
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 12


 305              	.LCFI8:
 306              		.cfi_def_cfa_offset 40
 307 0004 00AF     		add	r7, sp, #0
 308              	.LCFI9:
 309              		.cfi_def_cfa_register 7
 310 0006 F860     		str	r0, [r7, #12]
 311 0008 B960     		str	r1, [r7, #8]
 312 000a 1346     		mov	r3, r2
 313 000c FB80     		strh	r3, [r7, #6]	@ movhi
 321:.\Generated_Source\PSoC5/ETH.c **** 	uint16 rxIndex; /* the data index in to the receive buffer */
 322:.\Generated_Source\PSoC5/ETH.c **** 	uint16 address; /* the current chip address */
 323:.\Generated_Source\PSoC5/ETH.c **** 	uint16 rxLen;   /* the number of bytes to read durning the burst */
 324:.\Generated_Source\PSoC5/ETH.c **** 	uint16 txBytes; /* the number of dummy bytes send during th read */
 325:.\Generated_Source\PSoC5/ETH.c **** 	uint8 dump;     /* the number of bytes to ignore from the data stream readback */
 326:.\Generated_Source\PSoC5/ETH.c **** 	uint16 rxCount; /* the number of bytes read from the chip */
 327:.\Generated_Source\PSoC5/ETH.c **** 	uint8 rxb;      /* the byte within the SPI buffer read from the chip */
 328:.\Generated_Source\PSoC5/ETH.c **** 	/* V2.0 W5500 block select bits, stripped from the upper 16 bits of the address */
 329:.\Generated_Source\PSoC5/ETH.c **** 	uint8 bsb;
 330:.\Generated_Source\PSoC5/ETH.c **** 	
 331:.\Generated_Source\PSoC5/ETH.c **** 	/* V1.1: Wait for SPI operation to complete */
 332:.\Generated_Source\PSoC5/ETH.c **** 	while( ETH_SpiDone == 0) {
 314              		.loc 1 332 0
 315 000e 03E0     		b	.L15
 316              	.L16:
 333:.\Generated_Source\PSoC5/ETH.c **** 		CyDelayUs(1);
 317              		.loc 1 333 0
 318 0010 4FF00100 		mov	r0, #1
 319 0014 FFF7FEFF 		bl	CyDelayUs
 320              	.L15:
 332:.\Generated_Source\PSoC5/ETH.c **** 	while( ETH_SpiDone == 0) {
 321              		.loc 1 332 0 discriminator 1
 322 0018 FFF7FEFF 		bl	SPI_ReadTxStatus
 323 001c 0346     		mov	r3, r0
 324 001e 03F01103 		and	r3, r3, #17
 325 0022 002B     		cmp	r3, #0
 326 0024 F4D0     		beq	.L16
 334:.\Generated_Source\PSoC5/ETH.c **** 	}
 335:.\Generated_Source\PSoC5/ETH.c **** 	/* V1.1: End change */
 336:.\Generated_Source\PSoC5/ETH.c **** 
 337:.\Generated_Source\PSoC5/ETH.c **** 	address = (addr & 0x0000FFFF); // assign base pointer address
 327              		.loc 1 337 0
 328 0026 FB68     		ldr	r3, [r7, #12]
 329 0028 BB83     		strh	r3, [r7, #28]	@ movhi
 338:.\Generated_Source\PSoC5/ETH.c **** 	bsb = (addr>>16)&0x001F; /* remove the block-select bits from the address */
 330              		.loc 1 338 0
 331 002a FB68     		ldr	r3, [r7, #12]
 332 002c 4FEA1343 		lsr	r3, r3, #16
 333 0030 DBB2     		uxtb	r3, r3
 334 0032 03F01F03 		and	r3, r3, #31
 335 0036 7B75     		strb	r3, [r7, #21]
 339:.\Generated_Source\PSoC5/ETH.c **** 	rxIndex = 0;    // default the starting index for the receive to zero
 336              		.loc 1 339 0
 337 0038 4FF00003 		mov	r3, #0
 338 003c FB83     		strh	r3, [r7, #30]	@ movhi
 339              	.L22:
 340:.\Generated_Source\PSoC5/ETH.c **** 	
 341:.\Generated_Source\PSoC5/ETH.c **** 	do {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 13


 342:.\Generated_Source\PSoC5/ETH.c **** 		/* Write the chip select instance to select the device */
 343:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipSelect();
 340              		.loc 1 343 0
 341 003e FFF7FEFF 		bl	ETH_ChipSelect
 344:.\Generated_Source\PSoC5/ETH.c **** 		/*
 345:.\Generated_Source\PSoC5/ETH.c **** 		 * First, clear the Rx Buffer of any waiting data.  Then begin the
 346:.\Generated_Source\PSoC5/ETH.c **** 		 * read operation by sending the op code, followed byte the address
 347:.\Generated_Source\PSoC5/ETH.c **** 		 * from which the read will be executed, then send a dummy byte
 348:.\Generated_Source\PSoC5/ETH.c **** 		 * of zeros to read the data from the device.
 349:.\Generated_Source\PSoC5/ETH.c **** 		 */
 350:.\Generated_Source\PSoC5/ETH.c **** 		SPI_ClearRxBuffer();
 342              		.loc 1 350 0
 343 0042 FFF7FEFF 		bl	SPI_ClearRxBuffer
 351:.\Generated_Source\PSoC5/ETH.c **** 		/* Send the device header */
 352:.\Generated_Source\PSoC5/ETH.c **** 		rxCount = 0; // initialize the bytes received to none
 344              		.loc 1 352 0
 345 0046 4FF00003 		mov	r3, #0
 346 004a FB82     		strh	r3, [r7, #22]	@ movhi
 353:.\Generated_Source\PSoC5/ETH.c **** #if (5 == 1 )
 354:.\Generated_Source\PSoC5/ETH.c **** 		/*
 355:.\Generated_Source\PSoC5/ETH.c **** 		 * W1100 interface code
 356:.\Generated_Source\PSoC5/ETH.c **** 		 * --------------------
 357:.\Generated_Source\PSoC5/ETH.c **** 		 * The W5100 only supports 1 byte transfers (no burst mode), so
 358:.\Generated_Source\PSoC5/ETH.c **** 		 * peg the receive length as 1 byte, and issue a number of commands
 359:.\Generated_Source\PSoC5/ETH.c **** 		 * in sequence to simulate a burst read.
 360:.\Generated_Source\PSoC5/ETH.c **** 		 */
 361:.\Generated_Source\PSoC5/ETH.c **** 		rxLen = 1;  // The W5100 is limited to 1 byte of data transmitted
 362:.\Generated_Source\PSoC5/ETH.c **** 		dump = 3;   // The W5100 has a 3-byte packet header
 363:.\Generated_Source\PSoC5/ETH.c **** 		txBytes = 0; // Send only one byte afte rthe header then end the transfer
 364:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData(ETH_READ_OP);
 365:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData(address>>8);
 366:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData(address&0x00FF);
 367:.\Generated_Source\PSoC5/ETH.c **** 		
 368:.\Generated_Source\PSoC5/ETH.c **** #elif (5 == 2)
 369:.\Generated_Source\PSoC5/ETH.c **** 		/*
 370:.\Generated_Source\PSoC5/ETH.c **** 		 * W5200 Interface Header
 371:.\Generated_Source\PSoC5/ETH.c **** 		 * ----------------------
 372:.\Generated_Source\PSoC5/ETH.c **** 		 * The W5200 protocol expects an address followed by a read
 373:.\Generated_Source\PSoC5/ETH.c **** 		 * byte count for the header of the protocol, so, this will
 374:.\Generated_Source\PSoC5/ETH.c **** 		 * issue reads up to the max burst length
 375:.\Generated_Source\PSoC5/ETH.c **** 		 */
 376:.\Generated_Source\PSoC5/ETH.c **** 		dump = 4; /*  The W5200 has a definded data length and a header of 4 bytes */
 377:.\Generated_Source\PSoC5/ETH.c **** 		rxLen = (length < ETH_BURST_MAX) ? length : ETH_BURST_MAX;
 378:.\Generated_Source\PSoC5/ETH.c **** 		/* 
 379:.\Generated_Source\PSoC5/ETH.c **** 		 * Set the number of bytes to transmit before
 380:.\Generated_Source\PSoC5/ETH.c **** 		 * ending the packet to the calculated value
 381:.\Generated_Source\PSoC5/ETH.c **** 		 */
 382:.\Generated_Source\PSoC5/ETH.c **** 		txBytes = 0; 
 383:.\Generated_Source\PSoC5/ETH.c **** 		/* Send the packet header */
 384:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( address>>8);
 385:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( address & 0x00FF );
 386:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( 0x7F & (rxLen>>8) );
 387:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( rxLen&0x00FF );
 388:.\Generated_Source\PSoC5/ETH.c **** #elif (5 == 5)
 389:.\Generated_Source\PSoC5/ETH.c **** 		/*
 390:.\Generated_Source\PSoC5/ETH.c **** 	     * W5500 Interface Header
 391:.\Generated_Source\PSoC5/ETH.c **** 	     * -----------------------
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 14


 392:.\Generated_Source\PSoC5/ETH.c **** 	     * the W5500 header uses an address, fllowed by a command byte
 393:.\Generated_Source\PSoC5/ETH.c **** 		 * that included a block select (bank) for selecting the registers
 394:.\Generated_Source\PSoC5/ETH.c **** 	     * using the address as an offset.  following the BSB byte is
 395:.\Generated_Source\PSoC5/ETH.c **** 	     * the data read/write phase.  This section generates the custom
 396:.\Generated_Source\PSoC5/ETH.c **** 	     * W5500 header for reading data from the device.
 397:.\Generated_Source\PSoC5/ETH.c **** 	     */
 398:.\Generated_Source\PSoC5/ETH.c **** 		dump = 3; /*  The W5500 has a definded data length and a header of 3 bytes */
 347              		.loc 1 398 0
 348 004c 4FF00303 		mov	r3, #3
 349 0050 7B76     		strb	r3, [r7, #25]
 399:.\Generated_Source\PSoC5/ETH.c **** 		rxLen = length;
 350              		.loc 1 399 0
 351 0052 FB88     		ldrh	r3, [r7, #6]	@ movhi
 352 0054 7B82     		strh	r3, [r7, #18]	@ movhi
 400:.\Generated_Source\PSoC5/ETH.c **** 		/* 
 401:.\Generated_Source\PSoC5/ETH.c **** 		 * Set the number of bytes to transmit before
 402:.\Generated_Source\PSoC5/ETH.c **** 		 * ending the packet to the calculated value
 403:.\Generated_Source\PSoC5/ETH.c **** 		 */
 404:.\Generated_Source\PSoC5/ETH.c **** 		txBytes = 0; 
 353              		.loc 1 404 0
 354 0056 4FF00003 		mov	r3, #0
 355 005a 7B83     		strh	r3, [r7, #26]	@ movhi
 405:.\Generated_Source\PSoC5/ETH.c **** 		/* Send the packet header */
 406:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( address>>8);
 356              		.loc 1 406 0
 357 005c BB8B     		ldrh	r3, [r7, #28]
 358 005e 4FEA1323 		lsr	r3, r3, #8
 359 0062 9BB2     		uxth	r3, r3
 360 0064 DBB2     		uxtb	r3, r3
 361 0066 1846     		mov	r0, r3
 362 0068 FFF7FEFF 		bl	SPI_WriteTxData
 407:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( address & 0x00FF );
 363              		.loc 1 407 0
 364 006c BB8B     		ldrh	r3, [r7, #28]	@ movhi
 365 006e DBB2     		uxtb	r3, r3
 366 0070 1846     		mov	r0, r3
 367 0072 FFF7FEFF 		bl	SPI_WriteTxData
 408:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( bsb << 3);
 368              		.loc 1 408 0
 369 0076 7B7D     		ldrb	r3, [r7, #21]
 370 0078 4FEAC303 		lsl	r3, r3, #3
 371 007c DBB2     		uxtb	r3, r3
 372 007e 1846     		mov	r0, r3
 373 0080 FFF7FEFF 		bl	SPI_WriteTxData
 409:.\Generated_Source\PSoC5/ETH.c **** #endif
 410:.\Generated_Source\PSoC5/ETH.c **** 
 411:.\Generated_Source\PSoC5/ETH.c **** 		while (rxCount < rxLen) {
 374              		.loc 1 411 0
 375 0084 34E0     		b	.L17
 376              	.L21:
 412:.\Generated_Source\PSoC5/ETH.c **** 			/*
 413:.\Generated_Source\PSoC5/ETH.c **** 			 * Since the header is clogging the buffer (and it is inefficient
 414:.\Generated_Source\PSoC5/ETH.c **** 			 * to just clear the header before executing the reads), this loop
 415:.\Generated_Source\PSoC5/ETH.c **** 			 * will transmit the data completely the header size before
 416:.\Generated_Source\PSoC5/ETH.c **** 			 * the data has been read, so, send the data when the rxLength
 417:.\Generated_Source\PSoC5/ETH.c **** 			 * is not zero.
 418:.\Generated_Source\PSoC5/ETH.c **** 			 */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 15


 419:.\Generated_Source\PSoC5/ETH.c **** 			if (txBytes < rxLen ) {
 377              		.loc 1 419 0
 378 0086 7A8B     		ldrh	r2, [r7, #26]
 379 0088 7B8A     		ldrh	r3, [r7, #18]
 380 008a 9A42     		cmp	r2, r3
 381 008c 0FD2     		bcs	.L23
 420:.\Generated_Source\PSoC5/ETH.c **** 				SPI_WriteTxData( 0 );
 382              		.loc 1 420 0
 383 008e 4FF00000 		mov	r0, #0
 384 0092 FFF7FEFF 		bl	SPI_WriteTxData
 421:.\Generated_Source\PSoC5/ETH.c **** 				address ++;
 385              		.loc 1 421 0
 386 0096 BB8B     		ldrh	r3, [r7, #28]	@ movhi
 387 0098 03F10103 		add	r3, r3, #1
 388 009c BB83     		strh	r3, [r7, #28]	@ movhi
 422:.\Generated_Source\PSoC5/ETH.c **** 				length --;
 389              		.loc 1 422 0
 390 009e FB88     		ldrh	r3, [r7, #6]	@ movhi
 391 00a0 03F1FF33 		add	r3, r3, #-1
 392 00a4 FB80     		strh	r3, [r7, #6]	@ movhi
 423:.\Generated_Source\PSoC5/ETH.c **** 				txBytes ++;
 393              		.loc 1 423 0
 394 00a6 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 395 00a8 03F10103 		add	r3, r3, #1
 396 00ac 7B83     		strh	r3, [r7, #26]	@ movhi
 397              	.L23:
 424:.\Generated_Source\PSoC5/ETH.c **** 			}
 425:.\Generated_Source\PSoC5/ETH.c **** 			/*
 426:.\Generated_Source\PSoC5/ETH.c **** 			 * Read the data from the buffer.  The header data responses
 427:.\Generated_Source\PSoC5/ETH.c **** 			 * are going to be sitting in the buffer, so dump them
 428:.\Generated_Source\PSoC5/ETH.c **** 			 * and just receive the data bock
 429:.\Generated_Source\PSoC5/ETH.c **** 			 */
 430:.\Generated_Source\PSoC5/ETH.c **** 			while ( ( SPI_ReadRxStatus()&SPI_STS_RX_FIFO_NOT_EMPTY) == 0);
 398              		.loc 1 430 0
 399 00ae 00BF     		nop
 400              	.L19:
 401              		.loc 1 430 0 is_stmt 0 discriminator 1
 402 00b0 FFF7FEFF 		bl	SPI_ReadRxStatus
 403 00b4 0346     		mov	r3, r0
 404 00b6 03F02003 		and	r3, r3, #32
 405 00ba 002B     		cmp	r3, #0
 406 00bc F8D0     		beq	.L19
 431:.\Generated_Source\PSoC5/ETH.c **** 			rxb = SPI_ReadRxData();
 407              		.loc 1 431 0 is_stmt 1
 408 00be FFF7FEFF 		bl	SPI_ReadRxData
 409 00c2 0346     		mov	r3, r0
 410 00c4 7B74     		strb	r3, [r7, #17]
 432:.\Generated_Source\PSoC5/ETH.c **** 			dat[rxIndex] = rxb;
 411              		.loc 1 432 0
 412 00c6 FB8B     		ldrh	r3, [r7, #30]
 413 00c8 BA68     		ldr	r2, [r7, #8]
 414 00ca D318     		adds	r3, r2, r3
 415 00cc 7A7C     		ldrb	r2, [r7, #17]
 416 00ce 1A70     		strb	r2, [r3, #0]
 433:.\Generated_Source\PSoC5/ETH.c **** 			if (dump > 0) {
 417              		.loc 1 433 0
 418 00d0 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 16


 419 00d2 002B     		cmp	r3, #0
 420 00d4 04D0     		beq	.L20
 434:.\Generated_Source\PSoC5/ETH.c **** 				--dump;
 421              		.loc 1 434 0
 422 00d6 7B7E     		ldrb	r3, [r7, #25]
 423 00d8 03F1FF33 		add	r3, r3, #-1
 424 00dc 7B76     		strb	r3, [r7, #25]
 425 00de 07E0     		b	.L17
 426              	.L20:
 435:.\Generated_Source\PSoC5/ETH.c **** 			}
 436:.\Generated_Source\PSoC5/ETH.c **** 			else {
 437:.\Generated_Source\PSoC5/ETH.c **** 				rxCount++;
 427              		.loc 1 437 0
 428 00e0 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 429 00e2 03F10103 		add	r3, r3, #1
 430 00e6 FB82     		strh	r3, [r7, #22]	@ movhi
 438:.\Generated_Source\PSoC5/ETH.c **** 				rxIndex++;
 431              		.loc 1 438 0
 432 00e8 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 433 00ea 03F10103 		add	r3, r3, #1
 434 00ee FB83     		strh	r3, [r7, #30]	@ movhi
 435              	.L17:
 411:.\Generated_Source\PSoC5/ETH.c **** 		while (rxCount < rxLen) {
 436              		.loc 1 411 0 discriminator 1
 437 00f0 FA8A     		ldrh	r2, [r7, #22]
 438 00f2 7B8A     		ldrh	r3, [r7, #18]
 439 00f4 9A42     		cmp	r2, r3
 440 00f6 C6D3     		bcc	.L21
 439:.\Generated_Source\PSoC5/ETH.c **** 			}
 440:.\Generated_Source\PSoC5/ETH.c **** 		}
 441:.\Generated_Source\PSoC5/ETH.c **** 		/* Turn off chip select, and set the buffer */
 442:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipDeSelect();
 441              		.loc 1 442 0
 442 00f8 FFF7FEFF 		bl	ETH_ChipDeSelect
 443:.\Generated_Source\PSoC5/ETH.c **** 	}
 444:.\Generated_Source\PSoC5/ETH.c **** 	while ( length > 0);
 443              		.loc 1 444 0
 444 00fc FB88     		ldrh	r3, [r7, #6]
 445 00fe 002B     		cmp	r3, #0
 446 0100 9DD1     		bne	.L22
 445:.\Generated_Source\PSoC5/ETH.c **** }
 447              		.loc 1 445 0
 448 0102 07F12007 		add	r7, r7, #32
 449 0106 BD46     		mov	sp, r7
 450 0108 80BD     		pop	{r7, pc}
 451              		.cfi_endproc
 452              	.LFE3:
 453              		.size	ETH_ChipRead, .-ETH_ChipRead
 454 010a 00BF     		.section	.text.ETH_ChipWrite16,"ax",%progbits
 455              		.align	2
 456              		.global	ETH_ChipWrite16
 457              		.thumb
 458              		.thumb_func
 459              		.type	ETH_ChipWrite16, %function
 460              	ETH_ChipWrite16:
 461              	.LFB4:
 446:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 17


 447:.\Generated_Source\PSoC5/ETH.c **** /* SCB Specific Functions */
 448:.\Generated_Source\PSoC5/ETH.c **** #else
 449:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 450:.\Generated_Source\PSoC5/ETH.c **** /**
 451:.\Generated_Source\PSoC5/ETH.c ****  * \brief write Data to the W5100 at the specified address
 452:.\Generated_Source\PSoC5/ETH.c ****  * \param addr Address of register or memory buffer
 453:.\Generated_Source\PSoC5/ETH.c ****  * \param dat Data to write to the device
 454:.\Generated_Source\PSoC5/ETH.c ****  *
 455:.\Generated_Source\PSoC5/ETH.c ****  * This function will send the WRITE opcode, address and data to the W5100
 456:.\Generated_Source\PSoC5/ETH.c ****  * in order to write the data to the specified register.
 457:.\Generated_Source\PSoC5/ETH.c ****  */
 458:.\Generated_Source\PSoC5/ETH.c **** void
 459:.\Generated_Source\PSoC5/ETH.c **** ETH_ChipWrite(uint32 addr, uint8 *dat, uint16 length)
 460:.\Generated_Source\PSoC5/ETH.c **** {
 461:.\Generated_Source\PSoC5/ETH.c **** 	/* TBD */
 462:.\Generated_Source\PSoC5/ETH.c **** }
 463:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 464:.\Generated_Source\PSoC5/ETH.c **** /**
 465:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read data from the W5100 at the spsecified address
 466:.\Generated_Source\PSoC5/ETH.c ****  * \param addr Address from which to read
 467:.\Generated_Source\PSoC5/ETH.c ****  * \returns the data read from the address
 468:.\Generated_Source\PSoC5/ETH.c ****  *
 469:.\Generated_Source\PSoC5/ETH.c ****  * this fucntion will access a W5100 memory location and read the contents
 470:.\Generated_Source\PSoC5/ETH.c ****  * using the serial protocol specified on P.61 of the datasheet.
 471:.\Generated_Source\PSoC5/ETH.c ****  */
 472:.\Generated_Source\PSoC5/ETH.c **** void
 473:.\Generated_Source\PSoC5/ETH.c **** ETH_ChipRead(uint32 addr, uint8 *dat, uint16 length)
 474:.\Generated_Source\PSoC5/ETH.c **** {
 475:.\Generated_Source\PSoC5/ETH.c **** 	/* TBD */
 476:.\Generated_Source\PSoC5/ETH.c **** }
 477:.\Generated_Source\PSoC5/ETH.c **** 
 478:.\Generated_Source\PSoC5/ETH.c **** #endif
 479:.\Generated_Source\PSoC5/ETH.c **** 
 480:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
 481:.\Generated_Source\PSoC5/ETH.c **** /* W5x00 Access Primitaves */
 482:.\Generated_Source\PSoC5/ETH.c **** #if (1)
 483:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 484:.\Generated_Source\PSoC5/ETH.c **** /**
 485:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a 16-bit word to the device
 486:.\Generated_Source\PSoC5/ETH.c ****  * \param addr the starting address to which the data will be written
 487:.\Generated_Source\PSoC5/ETH.c ****  * \param val the 16-bit value to write
 488:.\Generated_Source\PSoC5/ETH.c ****  */
 489:.\Generated_Source\PSoC5/ETH.c **** void ETH_ChipWrite16( uint32 addr, uint16 val )
 490:.\Generated_Source\PSoC5/ETH.c **** {
 462              		.loc 1 490 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 16
 465              		@ frame_needed = 1, uses_anonymous_args = 0
 466 0000 80B5     		push	{r7, lr}
 467              	.LCFI10:
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 7, -8
 470              		.cfi_offset 14, -4
 471 0002 84B0     		sub	sp, sp, #16
 472              	.LCFI11:
 473              		.cfi_def_cfa_offset 24
 474 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 18


 475              	.LCFI12:
 476              		.cfi_def_cfa_register 7
 477 0006 7860     		str	r0, [r7, #4]
 478 0008 0B46     		mov	r3, r1
 479 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 491:.\Generated_Source\PSoC5/ETH.c **** 	uint16 bigVal;
 492:.\Generated_Source\PSoC5/ETH.c **** 	
 493:.\Generated_Source\PSoC5/ETH.c **** #if !( CY_PSOC3 ) 
 494:.\Generated_Source\PSoC5/ETH.c **** 	bigVal = CYSWAP_ENDIAN16( val );
 480              		.loc 1 494 0
 481 000c 7B88     		ldrh	r3, [r7, #2]
 482 000e 4FEA0323 		lsl	r3, r3, #8
 483 0012 9AB2     		uxth	r2, r3
 484 0014 7B88     		ldrh	r3, [r7, #2]
 485 0016 4FEA1323 		lsr	r3, r3, #8
 486 001a 9BB2     		uxth	r3, r3
 487 001c 9BB2     		uxth	r3, r3
 488 001e 1343     		orrs	r3, r3, r2
 489 0020 9BB2     		uxth	r3, r3
 490 0022 9BB2     		uxth	r3, r3
 491 0024 FB81     		strh	r3, [r7, #14]	@ movhi
 495:.\Generated_Source\PSoC5/ETH.c **** #else
 496:.\Generated_Source\PSoC5/ETH.c **** 	bigValu = val;
 497:.\Generated_Source\PSoC5/ETH.c **** #endif
 498:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite( addr, (uint8*)&bigVal, 2 );
 492              		.loc 1 498 0
 493 0026 07F10E03 		add	r3, r7, #14
 494 002a 7868     		ldr	r0, [r7, #4]
 495 002c 1946     		mov	r1, r3
 496 002e 4FF00202 		mov	r2, #2
 497 0032 FFF7FEFF 		bl	ETH_ChipWrite
 499:.\Generated_Source\PSoC5/ETH.c **** }
 498              		.loc 1 499 0
 499 0036 07F11007 		add	r7, r7, #16
 500 003a BD46     		mov	sp, r7
 501 003c 80BD     		pop	{r7, pc}
 502              		.cfi_endproc
 503              	.LFE4:
 504              		.size	ETH_ChipWrite16, .-ETH_ChipWrite16
 505 003e 00BF     		.section	.text.ETH_ChipRead16,"ax",%progbits
 506              		.align	2
 507              		.global	ETH_ChipRead16
 508              		.thumb
 509              		.thumb_func
 510              		.type	ETH_ChipRead16, %function
 511              	ETH_ChipRead16:
 512              	.LFB5:
 500:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 501:.\Generated_Source\PSoC5/ETH.c **** /**
 502:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a 16-bit value from the device
 503:.\Generated_Source\PSoC5/ETH.c ****  * \param addr The starting address from which data will be read
 504:.\Generated_Source\PSoC5/ETH.c ****  * \returns the 16-bit value read from the memory.
 505:.\Generated_Source\PSoC5/ETH.c ****  */
 506:.\Generated_Source\PSoC5/ETH.c **** uint16 ETH_ChipRead16( uint32 addr )
 507:.\Generated_Source\PSoC5/ETH.c **** {
 513              		.loc 1 507 0
 514              		.cfi_startproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 19


 515              		@ args = 0, pretend = 0, frame = 16
 516              		@ frame_needed = 1, uses_anonymous_args = 0
 517 0000 80B5     		push	{r7, lr}
 518              	.LCFI13:
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 84B0     		sub	sp, sp, #16
 523              	.LCFI14:
 524              		.cfi_def_cfa_offset 24
 525 0004 00AF     		add	r7, sp, #0
 526              	.LCFI15:
 527              		.cfi_def_cfa_register 7
 528 0006 7860     		str	r0, [r7, #4]
 508:.\Generated_Source\PSoC5/ETH.c **** 	uint16 val;
 509:.\Generated_Source\PSoC5/ETH.c **** 	
 510:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead(addr, (uint8*)&val, 2);
 529              		.loc 1 510 0
 530 0008 07F10E03 		add	r3, r7, #14
 531 000c 7868     		ldr	r0, [r7, #4]
 532 000e 1946     		mov	r1, r3
 533 0010 4FF00202 		mov	r2, #2
 534 0014 FFF7FEFF 		bl	ETH_ChipRead
 511:.\Generated_Source\PSoC5/ETH.c **** #if !( CY_PSOC3 )
 512:.\Generated_Source\PSoC5/ETH.c **** 	val = CYSWAP_ENDIAN16( val );
 535              		.loc 1 512 0
 536 0018 FB89     		ldrh	r3, [r7, #14]
 537 001a 4FEA0323 		lsl	r3, r3, #8
 538 001e 9AB2     		uxth	r2, r3
 539 0020 FB89     		ldrh	r3, [r7, #14]
 540 0022 4FEA1323 		lsr	r3, r3, #8
 541 0026 9BB2     		uxth	r3, r3
 542 0028 9BB2     		uxth	r3, r3
 543 002a 1343     		orrs	r3, r3, r2
 544 002c 9BB2     		uxth	r3, r3
 545 002e 9BB2     		uxth	r3, r3
 546 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 513:.\Generated_Source\PSoC5/ETH.c **** #endif
 514:.\Generated_Source\PSoC5/ETH.c **** 	
 515:.\Generated_Source\PSoC5/ETH.c **** 	return( val );
 547              		.loc 1 515 0
 548 0032 FB89     		ldrh	r3, [r7, #14]
 516:.\Generated_Source\PSoC5/ETH.c **** }
 549              		.loc 1 516 0
 550 0034 1846     		mov	r0, r3
 551 0036 07F11007 		add	r7, r7, #16
 552 003a BD46     		mov	sp, r7
 553 003c 80BD     		pop	{r7, pc}
 554              		.cfi_endproc
 555              	.LFE5:
 556              		.size	ETH_ChipRead16, .-ETH_ChipRead16
 557 003e 00BF     		.section	.text.ETH_SetSourceMAC,"ax",%progbits
 558              		.align	2
 559              		.global	ETH_SetSourceMAC
 560              		.thumb
 561              		.thumb_func
 562              		.type	ETH_SetSourceMAC, %function
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 20


 563              	ETH_SetSourceMAC:
 564              	.LFB6:
 517:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
 518:.\Generated_Source\PSoC5/ETH.c **** /* END SECTION */
 519:.\Generated_Source\PSoC5/ETH.c **** #endif
 520:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
 521:.\Generated_Source\PSoC5/ETH.c **** /* Chip Register access */
 522:.\Generated_Source\PSoC5/ETH.c **** #if (1)
 523:.\Generated_Source\PSoC5/ETH.c **** // Common Registers
 524:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 525:.\Generated_Source\PSoC5/ETH.c **** /**
 526:.\Generated_Source\PSoC5/ETH.c ****  * \brief Set teh chip mac address to teh specified address
 527:.\Generated_Source\PSoC5/ETH.c ****  * \param *mac pointer to the array holding the MAC address
 528:.\Generated_Source\PSoC5/ETH.c ****  */
 529:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSourceMAC( uint8 *mac )
 530:.\Generated_Source\PSoC5/ETH.c **** {
 565              		.loc 1 530 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 8
 568              		@ frame_needed = 1, uses_anonymous_args = 0
 569 0000 80B5     		push	{r7, lr}
 570              	.LCFI16:
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 7, -8
 573              		.cfi_offset 14, -4
 574 0002 82B0     		sub	sp, sp, #8
 575              	.LCFI17:
 576              		.cfi_def_cfa_offset 16
 577 0004 00AF     		add	r7, sp, #0
 578              	.LCFI18:
 579              		.cfi_def_cfa_register 7
 580 0006 7860     		str	r0, [r7, #4]
 531:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite(ETH_REG_SHAR, mac,6 );
 581              		.loc 1 531 0
 582 0008 4FF00900 		mov	r0, #9
 583 000c 7968     		ldr	r1, [r7, #4]
 584 000e 4FF00602 		mov	r2, #6
 585 0012 FFF7FEFF 		bl	ETH_ChipWrite
 532:.\Generated_Source\PSoC5/ETH.c **** }
 586              		.loc 1 532 0
 587 0016 07F10807 		add	r7, r7, #8
 588 001a BD46     		mov	sp, r7
 589 001c 80BD     		pop	{r7, pc}
 590              		.cfi_endproc
 591              	.LFE6:
 592              		.size	ETH_SetSourceMAC, .-ETH_SetSourceMAC
 593 001e 00BF     		.section	.text.ETH_GetSourceMAC,"ax",%progbits
 594              		.align	2
 595              		.global	ETH_GetSourceMAC
 596              		.thumb
 597              		.thumb_func
 598              		.type	ETH_GetSourceMAC, %function
 599              	ETH_GetSourceMAC:
 600              	.LFB7:
 533:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 534:.\Generated_Source\PSoC5/ETH.c **** /**
 535:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read the chip source MAC address from the MAC registers
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 21


 536:.\Generated_Source\PSoC5/ETH.c ****  * \param *mac pointer to the address of the buffer to hold the read MAC address
 537:.\Generated_Source\PSoC5/ETH.c ****  */
 538:.\Generated_Source\PSoC5/ETH.c **** void ETH_GetSourceMAC( uint8 *mac )
 539:.\Generated_Source\PSoC5/ETH.c **** {
 601              		.loc 1 539 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 8
 604              		@ frame_needed = 1, uses_anonymous_args = 0
 605 0000 80B5     		push	{r7, lr}
 606              	.LCFI19:
 607              		.cfi_def_cfa_offset 8
 608              		.cfi_offset 7, -8
 609              		.cfi_offset 14, -4
 610 0002 82B0     		sub	sp, sp, #8
 611              	.LCFI20:
 612              		.cfi_def_cfa_offset 16
 613 0004 00AF     		add	r7, sp, #0
 614              	.LCFI21:
 615              		.cfi_def_cfa_register 7
 616 0006 7860     		str	r0, [r7, #4]
 540:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead(ETH_REG_SHAR,mac,6);
 617              		.loc 1 540 0
 618 0008 4FF00900 		mov	r0, #9
 619 000c 7968     		ldr	r1, [r7, #4]
 620 000e 4FF00602 		mov	r2, #6
 621 0012 FFF7FEFF 		bl	ETH_ChipRead
 541:.\Generated_Source\PSoC5/ETH.c **** }
 622              		.loc 1 541 0
 623 0016 07F10807 		add	r7, r7, #8
 624 001a BD46     		mov	sp, r7
 625 001c 80BD     		pop	{r7, pc}
 626              		.cfi_endproc
 627              	.LFE7:
 628              		.size	ETH_GetSourceMAC, .-ETH_GetSourceMAC
 629 001e 00BF     		.section	.text.ETH_SetGatewayAddress,"ax",%progbits
 630              		.align	2
 631              		.global	ETH_SetGatewayAddress
 632              		.thumb
 633              		.thumb_func
 634              		.type	ETH_SetGatewayAddress, %function
 635              	ETH_SetGatewayAddress:
 636              	.LFB8:
 542:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 543:.\Generated_Source\PSoC5/ETH.c **** /**
 544:.\Generated_Source\PSoC5/ETH.c ****  * \brief Set the IPv4 address of the network gateway
 545:.\Generated_Source\PSoC5/ETH.c ****  * \param ip IP address of the gateway
 546:.\Generated_Source\PSoC5/ETH.c ****  */
 547:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetGatewayAddress(uint32 ip)
 548:.\Generated_Source\PSoC5/ETH.c **** {
 637              		.loc 1 548 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 8
 640              		@ frame_needed = 1, uses_anonymous_args = 0
 641 0000 80B5     		push	{r7, lr}
 642              	.LCFI22:
 643              		.cfi_def_cfa_offset 8
 644              		.cfi_offset 7, -8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 22


 645              		.cfi_offset 14, -4
 646 0002 82B0     		sub	sp, sp, #8
 647              	.LCFI23:
 648              		.cfi_def_cfa_offset 16
 649 0004 00AF     		add	r7, sp, #0
 650              	.LCFI24:
 651              		.cfi_def_cfa_register 7
 652 0006 7860     		str	r0, [r7, #4]
 549:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite(ETH_REG_GAR, (uint8*)&(ip),4);
 653              		.loc 1 549 0
 654 0008 07F10403 		add	r3, r7, #4
 655 000c 4FF00100 		mov	r0, #1
 656 0010 1946     		mov	r1, r3
 657 0012 4FF00402 		mov	r2, #4
 658 0016 FFF7FEFF 		bl	ETH_ChipWrite
 550:.\Generated_Source\PSoC5/ETH.c **** }
 659              		.loc 1 550 0
 660 001a 07F10807 		add	r7, r7, #8
 661 001e BD46     		mov	sp, r7
 662 0020 80BD     		pop	{r7, pc}
 663              		.cfi_endproc
 664              	.LFE8:
 665              		.size	ETH_SetGatewayAddress, .-ETH_SetGatewayAddress
 666 0022 00BF     		.section	.text.ETH_GetGatewayAddress,"ax",%progbits
 667              		.align	2
 668              		.global	ETH_GetGatewayAddress
 669              		.thumb
 670              		.thumb_func
 671              		.type	ETH_GetGatewayAddress, %function
 672              	ETH_GetGatewayAddress:
 673              	.LFB9:
 551:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 552:.\Generated_Source\PSoC5/ETH.c **** /**
 553:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read the gateway address from the device
 554:.\Generated_Source\PSoC5/ETH.c ****  * \returns the IP address of the gateway
 555:.\Generated_Source\PSoC5/ETH.c ****  */
 556:.\Generated_Source\PSoC5/ETH.c **** uint32 ETH_GetGatewayAddress( void )
 557:.\Generated_Source\PSoC5/ETH.c **** {
 674              		.loc 1 557 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 8
 677              		@ frame_needed = 1, uses_anonymous_args = 0
 678 0000 80B5     		push	{r7, lr}
 679              	.LCFI25:
 680              		.cfi_def_cfa_offset 8
 681              		.cfi_offset 7, -8
 682              		.cfi_offset 14, -4
 683 0002 82B0     		sub	sp, sp, #8
 684              	.LCFI26:
 685              		.cfi_def_cfa_offset 16
 686 0004 00AF     		add	r7, sp, #0
 687              	.LCFI27:
 688              		.cfi_def_cfa_register 7
 558:.\Generated_Source\PSoC5/ETH.c **** 	uint32 ip = 0xFFFFFFFF;
 689              		.loc 1 558 0
 690 0006 4FF0FF33 		mov	r3, #-1
 691 000a 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 23


 559:.\Generated_Source\PSoC5/ETH.c **** 	
 560:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead( ETH_REG_GAR, (uint8*)(ip), 4);
 692              		.loc 1 560 0
 693 000c 7B68     		ldr	r3, [r7, #4]
 694 000e 4FF00100 		mov	r0, #1
 695 0012 1946     		mov	r1, r3
 696 0014 4FF00402 		mov	r2, #4
 697 0018 FFF7FEFF 		bl	ETH_ChipRead
 561:.\Generated_Source\PSoC5/ETH.c **** 	
 562:.\Generated_Source\PSoC5/ETH.c **** 	return ip;
 698              		.loc 1 562 0
 699 001c 7B68     		ldr	r3, [r7, #4]
 563:.\Generated_Source\PSoC5/ETH.c **** }
 700              		.loc 1 563 0
 701 001e 1846     		mov	r0, r3
 702 0020 07F10807 		add	r7, r7, #8
 703 0024 BD46     		mov	sp, r7
 704 0026 80BD     		pop	{r7, pc}
 705              		.cfi_endproc
 706              	.LFE9:
 707              		.size	ETH_GetGatewayAddress, .-ETH_GetGatewayAddress
 708              		.section	.text.ETH_SetSubnetMask,"ax",%progbits
 709              		.align	2
 710              		.global	ETH_SetSubnetMask
 711              		.thumb
 712              		.thumb_func
 713              		.type	ETH_SetSubnetMask, %function
 714              	ETH_SetSubnetMask:
 715              	.LFB10:
 564:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 565:.\Generated_Source\PSoC5/ETH.c **** /**
 566:.\Generated_Source\PSoC5/ETH.c ****  * \brief set the subnet mask of the ethernet device
 567:.\Generated_Source\PSoC5/ETH.c ****  * \param the subnet mask (IPv4)
 568:.\Generated_Source\PSoC5/ETH.c ****  */
 569:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSubnetMask( uint32 ip )
 570:.\Generated_Source\PSoC5/ETH.c **** {
 716              		.loc 1 570 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 8
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720 0000 80B5     		push	{r7, lr}
 721              	.LCFI28:
 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 7, -8
 724              		.cfi_offset 14, -4
 725 0002 82B0     		sub	sp, sp, #8
 726              	.LCFI29:
 727              		.cfi_def_cfa_offset 16
 728 0004 00AF     		add	r7, sp, #0
 729              	.LCFI30:
 730              		.cfi_def_cfa_register 7
 731 0006 7860     		str	r0, [r7, #4]
 571:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite(ETH_REG_SUBR, (uint8*)&(ip), 4);
 732              		.loc 1 571 0
 733 0008 07F10403 		add	r3, r7, #4
 734 000c 4FF00500 		mov	r0, #5
 735 0010 1946     		mov	r1, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 24


 736 0012 4FF00402 		mov	r2, #4
 737 0016 FFF7FEFF 		bl	ETH_ChipWrite
 572:.\Generated_Source\PSoC5/ETH.c **** }
 738              		.loc 1 572 0
 739 001a 07F10807 		add	r7, r7, #8
 740 001e BD46     		mov	sp, r7
 741 0020 80BD     		pop	{r7, pc}
 742              		.cfi_endproc
 743              	.LFE10:
 744              		.size	ETH_SetSubnetMask, .-ETH_SetSubnetMask
 745 0022 00BF     		.section	.text.ETH_GetSubnetMask,"ax",%progbits
 746              		.align	2
 747              		.global	ETH_GetSubnetMask
 748              		.thumb
 749              		.thumb_func
 750              		.type	ETH_GetSubnetMask, %function
 751              	ETH_GetSubnetMask:
 752              	.LFB11:
 573:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 574:.\Generated_Source\PSoC5/ETH.c **** /**
 575:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read the subnet mask from the device
 576:.\Generated_Source\PSoC5/ETH.c ****  * \returns the subnet mask that was read from the device.
 577:.\Generated_Source\PSoC5/ETH.c ****  */
 578:.\Generated_Source\PSoC5/ETH.c **** uint32 ETH_GetSubnetMask( void )
 579:.\Generated_Source\PSoC5/ETH.c **** {
 753              		.loc 1 579 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 8
 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757 0000 80B5     		push	{r7, lr}
 758              	.LCFI31:
 759              		.cfi_def_cfa_offset 8
 760              		.cfi_offset 7, -8
 761              		.cfi_offset 14, -4
 762 0002 82B0     		sub	sp, sp, #8
 763              	.LCFI32:
 764              		.cfi_def_cfa_offset 16
 765 0004 00AF     		add	r7, sp, #0
 766              	.LCFI33:
 767              		.cfi_def_cfa_register 7
 580:.\Generated_Source\PSoC5/ETH.c **** 	uint32 ip = 0xFFFFFFFF;
 768              		.loc 1 580 0
 769 0006 4FF0FF33 		mov	r3, #-1
 770 000a 7B60     		str	r3, [r7, #4]
 581:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead(ETH_REG_SUBR, (uint8*)(ip), 4);
 771              		.loc 1 581 0
 772 000c 7B68     		ldr	r3, [r7, #4]
 773 000e 4FF00500 		mov	r0, #5
 774 0012 1946     		mov	r1, r3
 775 0014 4FF00402 		mov	r2, #4
 776 0018 FFF7FEFF 		bl	ETH_ChipRead
 582:.\Generated_Source\PSoC5/ETH.c **** 	return ip;
 777              		.loc 1 582 0
 778 001c 7B68     		ldr	r3, [r7, #4]
 583:.\Generated_Source\PSoC5/ETH.c **** }
 779              		.loc 1 583 0
 780 001e 1846     		mov	r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 25


 781 0020 07F10807 		add	r7, r7, #8
 782 0024 BD46     		mov	sp, r7
 783 0026 80BD     		pop	{r7, pc}
 784              		.cfi_endproc
 785              	.LFE11:
 786              		.size	ETH_GetSubnetMask, .-ETH_GetSubnetMask
 787              		.section	.text.ETH_SetSourceIP,"ax",%progbits
 788              		.align	2
 789              		.global	ETH_SetSourceIP
 790              		.thumb
 791              		.thumb_func
 792              		.type	ETH_SetSourceIP, %function
 793              	ETH_SetSourceIP:
 794              	.LFB12:
 584:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 585:.\Generated_Source\PSoC5/ETH.c **** /**
 586:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write the device source IPv4 address
 587:.\Generated_Source\PSoC5/ETH.c ****  * \param ip the ip address to set as the chip IP address
 588:.\Generated_Source\PSoC5/ETH.c ****  */
 589:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSourceIP(uint32 ip )
 590:.\Generated_Source\PSoC5/ETH.c **** {
 795              		.loc 1 590 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 8
 798              		@ frame_needed = 1, uses_anonymous_args = 0
 799 0000 80B5     		push	{r7, lr}
 800              	.LCFI34:
 801              		.cfi_def_cfa_offset 8
 802              		.cfi_offset 7, -8
 803              		.cfi_offset 14, -4
 804 0002 82B0     		sub	sp, sp, #8
 805              	.LCFI35:
 806              		.cfi_def_cfa_offset 16
 807 0004 00AF     		add	r7, sp, #0
 808              	.LCFI36:
 809              		.cfi_def_cfa_register 7
 810 0006 7860     		str	r0, [r7, #4]
 591:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite( ETH_REG_SIPR, (uint8*)&(ip), 4 );
 811              		.loc 1 591 0
 812 0008 07F10403 		add	r3, r7, #4
 813 000c 4FF00F00 		mov	r0, #15
 814 0010 1946     		mov	r1, r3
 815 0012 4FF00402 		mov	r2, #4
 816 0016 FFF7FEFF 		bl	ETH_ChipWrite
 592:.\Generated_Source\PSoC5/ETH.c **** }
 817              		.loc 1 592 0
 818 001a 07F10807 		add	r7, r7, #8
 819 001e BD46     		mov	sp, r7
 820 0020 80BD     		pop	{r7, pc}
 821              		.cfi_endproc
 822              	.LFE12:
 823              		.size	ETH_SetSourceIP, .-ETH_SetSourceIP
 824 0022 00BF     		.section	.text.ETH_GetSourceIP,"ax",%progbits
 825              		.align	2
 826              		.global	ETH_GetSourceIP
 827              		.thumb
 828              		.thumb_func
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 26


 829              		.type	ETH_GetSourceIP, %function
 830              	ETH_GetSourceIP:
 831              	.LFB13:
 593:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 594:.\Generated_Source\PSoC5/ETH.c **** /**
 595:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read the device's programmed IP address
 596:.\Generated_Source\PSoC5/ETH.c ****  * \returns The IPv4 address to which the device is set.
 597:.\Generated_Source\PSoC5/ETH.c ****  */
 598:.\Generated_Source\PSoC5/ETH.c **** uint32 ETH_GetSourceIP( void )
 599:.\Generated_Source\PSoC5/ETH.c **** {
 832              		.loc 1 599 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 8
 835              		@ frame_needed = 1, uses_anonymous_args = 0
 836 0000 80B5     		push	{r7, lr}
 837              	.LCFI37:
 838              		.cfi_def_cfa_offset 8
 839              		.cfi_offset 7, -8
 840              		.cfi_offset 14, -4
 841 0002 82B0     		sub	sp, sp, #8
 842              	.LCFI38:
 843              		.cfi_def_cfa_offset 16
 844 0004 00AF     		add	r7, sp, #0
 845              	.LCFI39:
 846              		.cfi_def_cfa_register 7
 600:.\Generated_Source\PSoC5/ETH.c **** 	uint32 ip = 0xFFFFFFFF;
 847              		.loc 1 600 0
 848 0006 4FF0FF33 		mov	r3, #-1
 849 000a 7B60     		str	r3, [r7, #4]
 601:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead( ETH_REG_SIPR, (uint8*)(ip), 4 );
 850              		.loc 1 601 0
 851 000c 7B68     		ldr	r3, [r7, #4]
 852 000e 4FF00F00 		mov	r0, #15
 853 0012 1946     		mov	r1, r3
 854 0014 4FF00402 		mov	r2, #4
 855 0018 FFF7FEFF 		bl	ETH_ChipRead
 602:.\Generated_Source\PSoC5/ETH.c **** 	return ip;
 856              		.loc 1 602 0
 857 001c 7B68     		ldr	r3, [r7, #4]
 603:.\Generated_Source\PSoC5/ETH.c **** }
 858              		.loc 1 603 0
 859 001e 1846     		mov	r0, r3
 860 0020 07F10807 		add	r7, r7, #8
 861 0024 BD46     		mov	sp, r7
 862 0026 80BD     		pop	{r7, pc}
 863              		.cfi_endproc
 864              	.LFE13:
 865              		.size	ETH_GetSourceIP, .-ETH_GetSourceIP
 866              		.section	.text.ETH_SetMode,"ax",%progbits
 867              		.align	2
 868              		.global	ETH_SetMode
 869              		.thumb
 870              		.thumb_func
 871              		.type	ETH_SetMode, %function
 872              	ETH_SetMode:
 873              	.LFB14:
 604:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 27


 605:.\Generated_Source\PSoC5/ETH.c **** /**
 606:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the device internal MODE register
 607:.\Generated_Source\PSoC5/ETH.c ****  * \param mode the value to be written to the mode register.
 608:.\Generated_Source\PSoC5/ETH.c ****  */
 609:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetMode( uint8 mode )
 610:.\Generated_Source\PSoC5/ETH.c **** {
 874              		.loc 1 610 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 8
 877              		@ frame_needed = 1, uses_anonymous_args = 0
 878 0000 80B5     		push	{r7, lr}
 879              	.LCFI40:
 880              		.cfi_def_cfa_offset 8
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 82B0     		sub	sp, sp, #8
 884              	.LCFI41:
 885              		.cfi_def_cfa_offset 16
 886 0004 00AF     		add	r7, sp, #0
 887              	.LCFI42:
 888              		.cfi_def_cfa_register 7
 889 0006 0346     		mov	r3, r0
 890 0008 FB71     		strb	r3, [r7, #7]
 611:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite(ETH_REG_MODE, (uint8*)&(mode), 1);
 891              		.loc 1 611 0
 892 000a 07F10703 		add	r3, r7, #7
 893 000e 4FF00000 		mov	r0, #0
 894 0012 1946     		mov	r1, r3
 895 0014 4FF00102 		mov	r2, #1
 896 0018 FFF7FEFF 		bl	ETH_ChipWrite
 612:.\Generated_Source\PSoC5/ETH.c **** }
 897              		.loc 1 612 0
 898 001c 07F10807 		add	r7, r7, #8
 899 0020 BD46     		mov	sp, r7
 900 0022 80BD     		pop	{r7, pc}
 901              		.cfi_endproc
 902              	.LFE14:
 903              		.size	ETH_SetMode, .-ETH_SetMode
 904              		.section	.text.ETH_GetMode,"ax",%progbits
 905              		.align	2
 906              		.global	ETH_GetMode
 907              		.thumb
 908              		.thumb_func
 909              		.type	ETH_GetMode, %function
 910              	ETH_GetMode:
 911              	.LFB15:
 613:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 614:.\Generated_Source\PSoC5/ETH.c **** /**
 615:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read the present contents of the device internal mode register
 616:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value of the mode register
 617:.\Generated_Source\PSoC5/ETH.c ****  */
 618:.\Generated_Source\PSoC5/ETH.c **** uint8 ETH_GetMode( void )
 619:.\Generated_Source\PSoC5/ETH.c **** {
 912              		.loc 1 619 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 8
 915              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 28


 916 0000 80B5     		push	{r7, lr}
 917              	.LCFI43:
 918              		.cfi_def_cfa_offset 8
 919              		.cfi_offset 7, -8
 920              		.cfi_offset 14, -4
 921 0002 82B0     		sub	sp, sp, #8
 922              	.LCFI44:
 923              		.cfi_def_cfa_offset 16
 924 0004 00AF     		add	r7, sp, #0
 925              	.LCFI45:
 926              		.cfi_def_cfa_register 7
 620:.\Generated_Source\PSoC5/ETH.c **** 	uint8 mode;
 621:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead(ETH_REG_MODE, (uint8*)&(mode),1);
 927              		.loc 1 621 0
 928 0006 07F10703 		add	r3, r7, #7
 929 000a 4FF00000 		mov	r0, #0
 930 000e 1946     		mov	r1, r3
 931 0010 4FF00102 		mov	r2, #1
 932 0014 FFF7FEFF 		bl	ETH_ChipRead
 622:.\Generated_Source\PSoC5/ETH.c **** 	return mode;
 933              		.loc 1 622 0
 934 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 623:.\Generated_Source\PSoC5/ETH.c **** }
 935              		.loc 1 623 0
 936 001a 1846     		mov	r0, r3
 937 001c 07F10807 		add	r7, r7, #8
 938 0020 BD46     		mov	sp, r7
 939 0022 80BD     		pop	{r7, pc}
 940              		.cfi_endproc
 941              	.LFE15:
 942              		.size	ETH_GetMode, .-ETH_GetMode
 943              		.section	.text.ETH_SetIR,"ax",%progbits
 944              		.align	2
 945              		.global	ETH_SetIR
 946              		.thumb
 947              		.thumb_func
 948              		.type	ETH_SetIR, %function
 949              	ETH_SetIR:
 950              	.LFB16:
 624:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 625:.\Generated_Source\PSoC5/ETH.c **** /**
 626:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write the value of the interrupt register
 627:.\Generated_Source\PSoC5/ETH.c ****  * \param ir the value to be written to the interrupt register
 628:.\Generated_Source\PSoC5/ETH.c ****  */
 629:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetIR(uint8 ir )
 630:.\Generated_Source\PSoC5/ETH.c **** {
 951              		.loc 1 630 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 8
 954              		@ frame_needed = 1, uses_anonymous_args = 0
 955 0000 80B5     		push	{r7, lr}
 956              	.LCFI46:
 957              		.cfi_def_cfa_offset 8
 958              		.cfi_offset 7, -8
 959              		.cfi_offset 14, -4
 960 0002 82B0     		sub	sp, sp, #8
 961              	.LCFI47:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 29


 962              		.cfi_def_cfa_offset 16
 963 0004 00AF     		add	r7, sp, #0
 964              	.LCFI48:
 965              		.cfi_def_cfa_register 7
 966 0006 0346     		mov	r3, r0
 967 0008 FB71     		strb	r3, [r7, #7]
 631:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite(ETH_REG_IR,(uint8*)&(ir), 1);
 968              		.loc 1 631 0
 969 000a 07F10703 		add	r3, r7, #7
 970 000e 4FF01500 		mov	r0, #21
 971 0012 1946     		mov	r1, r3
 972 0014 4FF00102 		mov	r2, #1
 973 0018 FFF7FEFF 		bl	ETH_ChipWrite
 632:.\Generated_Source\PSoC5/ETH.c **** }
 974              		.loc 1 632 0
 975 001c 07F10807 		add	r7, r7, #8
 976 0020 BD46     		mov	sp, r7
 977 0022 80BD     		pop	{r7, pc}
 978              		.cfi_endproc
 979              	.LFE16:
 980              		.size	ETH_SetIR, .-ETH_SetIR
 981              		.section	.text.ETH_SetSocketRxMemSize,"ax",%progbits
 982              		.align	2
 983              		.global	ETH_SetSocketRxMemSize
 984              		.thumb
 985              		.thumb_func
 986              		.type	ETH_SetSocketRxMemSize, %function
 987              	ETH_SetSocketRxMemSize:
 988              	.LFB17:
 633:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 634:.\Generated_Source\PSoC5/ETH.c **** /**
 635:.\Generated_Source\PSoC5/ETH.c ****  * \brief write a value to the Rx mem size register
 636:.\Generated_Source\PSoC5/ETH.c ****  * \param size the value to be written to the register
 637:.\Generated_Source\PSoC5/ETH.c ****  */
 638:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketRxMemSize( uint8 socket, uint8 size ) 
 639:.\Generated_Source\PSoC5/ETH.c **** {
 989              		.loc 1 639 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 8
 992              		@ frame_needed = 1, uses_anonymous_args = 0
 993 0000 80B5     		push	{r7, lr}
 994              	.LCFI49:
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 7, -8
 997              		.cfi_offset 14, -4
 998 0002 82B0     		sub	sp, sp, #8
 999              	.LCFI50:
 1000              		.cfi_def_cfa_offset 16
 1001 0004 00AF     		add	r7, sp, #0
 1002              	.LCFI51:
 1003              		.cfi_def_cfa_register 7
 1004 0006 0246     		mov	r2, r0
 1005 0008 0B46     		mov	r3, r1
 1006 000a FA71     		strb	r2, [r7, #7]
 1007 000c BB71     		strb	r3, [r7, #6]
 640:.\Generated_Source\PSoC5/ETH.c **** 	
 641:.\Generated_Source\PSoC5/ETH.c **** #if (5 == 1)
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 30


 642:.\Generated_Source\PSoC5/ETH.c **** 	uint8 sz;
 643:.\Generated_Source\PSoC5/ETH.c **** 	/*
 644:.\Generated_Source\PSoC5/ETH.c **** 	 * The W5100 uses memory allocations within one register for all sockets.
 645:.\Generated_Source\PSoC5/ETH.c **** 	 * the options are set by a 2 bit code for 1, 2, 4, or 8 K
 646:.\Generated_Source\PSoC5/ETH.c **** 	 */
 647:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipRead( ETH_REG_RMSR, &sz, 1);
 648:.\Generated_Source\PSoC5/ETH.c **** 		sz = sz & (~(3<<(socket<<1)));
 649:.\Generated_Source\PSoC5/ETH.c **** 		sz = sz | (size<<(socket<<1));
 650:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipWrite( ETH_REG_RMSR, &sz, 1);
 651:.\Generated_Source\PSoC5/ETH.c **** #elif ((5 == 2) || (5 == 5))
 652:.\Generated_Source\PSoC5/ETH.c **** 	/*
 653:.\Generated_Source\PSoC5/ETH.c **** 	 * The W5200/W5500 interface uses memory size registers located within the socket
 654:.\Generated_Source\PSoC5/ETH.c **** 	 * register memory maps.
 655:.\Generated_Source\PSoC5/ETH.c **** 	 */
 656:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite( ETH_SOCKET_REG(socket,ETH_SOCK_RXMEM), &size, 1);
 1008              		.loc 1 656 0
 1009 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1010 0010 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1011 0014 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1012 0018 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1013 001c 03F11E02 		add	r2, r3, #30
 1014 0020 07F10603 		add	r3, r7, #6
 1015 0024 1046     		mov	r0, r2
 1016 0026 1946     		mov	r1, r3
 1017 0028 4FF00102 		mov	r2, #1
 1018 002c FFF7FEFF 		bl	ETH_ChipWrite
 657:.\Generated_Source\PSoC5/ETH.c **** #endif
 658:.\Generated_Source\PSoC5/ETH.c **** }
 1019              		.loc 1 658 0
 1020 0030 07F10807 		add	r7, r7, #8
 1021 0034 BD46     		mov	sp, r7
 1022 0036 80BD     		pop	{r7, pc}
 1023              		.cfi_endproc
 1024              	.LFE17:
 1025              		.size	ETH_SetSocketRxMemSize, .-ETH_SetSocketRxMemSize
 1026              		.section	.text.ETH_GetSocketRxMemSize,"ax",%progbits
 1027              		.align	2
 1028              		.global	ETH_GetSocketRxMemSize
 1029              		.thumb
 1030              		.thumb_func
 1031              		.type	ETH_GetSocketRxMemSize, %function
 1032              	ETH_GetSocketRxMemSize:
 1033              	.LFB18:
 659:.\Generated_Source\PSoC5/ETH.c **** 
 660:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 661:.\Generated_Source\PSoC5/ETH.c **** /**
 662:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read the contents of hte rx mem size register
 663:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from teh register
 664:.\Generated_Source\PSoC5/ETH.c ****  */
 665:.\Generated_Source\PSoC5/ETH.c **** uint8 ETH_GetSocketRxMemSize( uint8 socket )
 666:.\Generated_Source\PSoC5/ETH.c **** {
 1034              		.loc 1 666 0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 16
 1037              		@ frame_needed = 1, uses_anonymous_args = 0
 1038 0000 80B5     		push	{r7, lr}
 1039              	.LCFI52:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 31


 1040              		.cfi_def_cfa_offset 8
 1041              		.cfi_offset 7, -8
 1042              		.cfi_offset 14, -4
 1043 0002 84B0     		sub	sp, sp, #16
 1044              	.LCFI53:
 1045              		.cfi_def_cfa_offset 24
 1046 0004 00AF     		add	r7, sp, #0
 1047              	.LCFI54:
 1048              		.cfi_def_cfa_register 7
 1049 0006 0346     		mov	r3, r0
 1050 0008 FB71     		strb	r3, [r7, #7]
 667:.\Generated_Source\PSoC5/ETH.c **** 	uint8 sz;
 668:.\Generated_Source\PSoC5/ETH.c **** 	
 669:.\Generated_Source\PSoC5/ETH.c **** 	sz = 0xFF;
 1051              		.loc 1 669 0
 1052 000a 4FF0FF03 		mov	r3, #255
 1053 000e FB73     		strb	r3, [r7, #15]
 670:.\Generated_Source\PSoC5/ETH.c **** #if (5 == 1)
 671:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead(ETH_REG_RMSR, &sz, 1);
 672:.\Generated_Source\PSoC5/ETH.c **** 	sz = (sz >> (socket<<1)) & 0x03;
 673:.\Generated_Source\PSoC5/ETH.c **** #elif ((5 == 2)||(5 == 5))
 674:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead( ETH_SOCKET_REG(socket,ETH_SOCK_RXMEM), &sz, 1);
 1054              		.loc 1 674 0
 1055 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1056 0012 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1057 0016 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1058 001a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1059 001e 03F11E02 		add	r2, r3, #30
 1060 0022 07F10F03 		add	r3, r7, #15
 1061 0026 1046     		mov	r0, r2
 1062 0028 1946     		mov	r1, r3
 1063 002a 4FF00102 		mov	r2, #1
 1064 002e FFF7FEFF 		bl	ETH_ChipRead
 675:.\Generated_Source\PSoC5/ETH.c **** #endif
 676:.\Generated_Source\PSoC5/ETH.c **** 	return sz;
 1065              		.loc 1 676 0
 1066 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 677:.\Generated_Source\PSoC5/ETH.c **** }
 1067              		.loc 1 677 0
 1068 0034 1846     		mov	r0, r3
 1069 0036 07F11007 		add	r7, r7, #16
 1070 003a BD46     		mov	sp, r7
 1071 003c 80BD     		pop	{r7, pc}
 1072              		.cfi_endproc
 1073              	.LFE18:
 1074              		.size	ETH_GetSocketRxMemSize, .-ETH_GetSocketRxMemSize
 1075              		.section	.text.ETH_SetSocketTxMemSize,"ax",%progbits
 1076              		.align	2
 1077              		.global	ETH_SetSocketTxMemSize
 1078              		.thumb
 1079              		.thumb_func
 1080              		.type	ETH_SetSocketTxMemSize, %function
 1081              	ETH_SetSocketTxMemSize:
 1082              	.LFB19:
 678:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 679:.\Generated_Source\PSoC5/ETH.c **** /**
 680:.\Generated_Source\PSoC5/ETH.c ****  * \brief write a value to the tx mem size register
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 32


 681:.\Generated_Source\PSoC5/ETH.c ****  * \param size The value to be written to the register
 682:.\Generated_Source\PSoC5/ETH.c ****  */
 683:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketTxMemSize( uint8 socket, uint8 size )
 684:.\Generated_Source\PSoC5/ETH.c **** {
 1083              		.loc 1 684 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 8
 1086              		@ frame_needed = 1, uses_anonymous_args = 0
 1087 0000 80B5     		push	{r7, lr}
 1088              	.LCFI55:
 1089              		.cfi_def_cfa_offset 8
 1090              		.cfi_offset 7, -8
 1091              		.cfi_offset 14, -4
 1092 0002 82B0     		sub	sp, sp, #8
 1093              	.LCFI56:
 1094              		.cfi_def_cfa_offset 16
 1095 0004 00AF     		add	r7, sp, #0
 1096              	.LCFI57:
 1097              		.cfi_def_cfa_register 7
 1098 0006 0246     		mov	r2, r0
 1099 0008 0B46     		mov	r3, r1
 1100 000a FA71     		strb	r2, [r7, #7]
 1101 000c BB71     		strb	r3, [r7, #6]
 685:.\Generated_Source\PSoC5/ETH.c **** 	
 686:.\Generated_Source\PSoC5/ETH.c **** #if (5 == 1)
 687:.\Generated_Source\PSoC5/ETH.c **** 	uint8 sz;
 688:.\Generated_Source\PSoC5/ETH.c **** 	/*
 689:.\Generated_Source\PSoC5/ETH.c **** 	 * The W5100 uses memory allocations within one register for all sockets.
 690:.\Generated_Source\PSoC5/ETH.c **** 	 * the options are set by a 2 bit code for 1, 2, 4, or 8 K
 691:.\Generated_Source\PSoC5/ETH.c **** 	 */
 692:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipRead( ETH_REG_TXSR, &sz, 1);
 693:.\Generated_Source\PSoC5/ETH.c **** 		sz = sz & (~(3<<(socket<<1)));
 694:.\Generated_Source\PSoC5/ETH.c **** 		sz = sz | (size<<(socket<<1));
 695:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipWrite( ETH_REG_TXSR, &sz, 1);
 696:.\Generated_Source\PSoC5/ETH.c **** #elif ((5 == 2)||(5 == 5))
 697:.\Generated_Source\PSoC5/ETH.c **** 	/*
 698:.\Generated_Source\PSoC5/ETH.c **** 	 * The W5200/W5500 interface uses memory size registers located within the socket
 699:.\Generated_Source\PSoC5/ETH.c **** 	 * register memory maps.
 700:.\Generated_Source\PSoC5/ETH.c **** 	 */
 701:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite( ETH_SOCKET_REG(socket,ETH_SOCK_TXMEM), &size, 1);
 1102              		.loc 1 701 0
 1103 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1104 0010 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1105 0014 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1106 0018 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1107 001c 03F11F02 		add	r2, r3, #31
 1108 0020 07F10603 		add	r3, r7, #6
 1109 0024 1046     		mov	r0, r2
 1110 0026 1946     		mov	r1, r3
 1111 0028 4FF00102 		mov	r2, #1
 1112 002c FFF7FEFF 		bl	ETH_ChipWrite
 702:.\Generated_Source\PSoC5/ETH.c **** #endif
 703:.\Generated_Source\PSoC5/ETH.c **** }
 1113              		.loc 1 703 0
 1114 0030 07F10807 		add	r7, r7, #8
 1115 0034 BD46     		mov	sp, r7
 1116 0036 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 33


 1117              		.cfi_endproc
 1118              	.LFE19:
 1119              		.size	ETH_SetSocketTxMemSize, .-ETH_SetSocketTxMemSize
 1120              		.section	.text.ETH_GetSocketTxMemSize,"ax",%progbits
 1121              		.align	2
 1122              		.global	ETH_GetSocketTxMemSize
 1123              		.thumb
 1124              		.thumb_func
 1125              		.type	ETH_GetSocketTxMemSize, %function
 1126              	ETH_GetSocketTxMemSize:
 1127              	.LFB20:
 704:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 705:.\Generated_Source\PSoC5/ETH.c **** /**
 706:.\Generated_Source\PSoC5/ETH.c ****  * \brief read the contents of the tx mem size register
 707:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 708:.\Generated_Source\PSoC5/ETH.c ****  */
 709:.\Generated_Source\PSoC5/ETH.c **** uint8 ETH_GetSocketTxMemSize( uint8 socket )
 710:.\Generated_Source\PSoC5/ETH.c **** {
 1128              		.loc 1 710 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 16
 1131              		@ frame_needed = 1, uses_anonymous_args = 0
 1132 0000 80B5     		push	{r7, lr}
 1133              	.LCFI58:
 1134              		.cfi_def_cfa_offset 8
 1135              		.cfi_offset 7, -8
 1136              		.cfi_offset 14, -4
 1137 0002 84B0     		sub	sp, sp, #16
 1138              	.LCFI59:
 1139              		.cfi_def_cfa_offset 24
 1140 0004 00AF     		add	r7, sp, #0
 1141              	.LCFI60:
 1142              		.cfi_def_cfa_register 7
 1143 0006 0346     		mov	r3, r0
 1144 0008 FB71     		strb	r3, [r7, #7]
 711:.\Generated_Source\PSoC5/ETH.c **** 	uint8 sz;
 712:.\Generated_Source\PSoC5/ETH.c **** 	
 713:.\Generated_Source\PSoC5/ETH.c **** 	sz = 0xFF;
 1145              		.loc 1 713 0
 1146 000a 4FF0FF03 		mov	r3, #255
 1147 000e FB73     		strb	r3, [r7, #15]
 714:.\Generated_Source\PSoC5/ETH.c **** #if (5 == 1)
 715:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead(ETH_REG_TXSR, &sz, 1);
 716:.\Generated_Source\PSoC5/ETH.c **** 	sz = (sz >> (socket<<1)) & 0x03;
 717:.\Generated_Source\PSoC5/ETH.c **** #elif ((5 == 2)||(5 == 5))
 718:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead( ETH_SOCKET_REG(socket,ETH_SOCK_TXMEM), &sz, 1);
 1148              		.loc 1 718 0
 1149 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1150 0012 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1151 0016 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1152 001a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1153 001e 03F11F02 		add	r2, r3, #31
 1154 0022 07F10F03 		add	r3, r7, #15
 1155 0026 1046     		mov	r0, r2
 1156 0028 1946     		mov	r1, r3
 1157 002a 4FF00102 		mov	r2, #1
 1158 002e FFF7FEFF 		bl	ETH_ChipRead
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 34


 719:.\Generated_Source\PSoC5/ETH.c **** #endif
 720:.\Generated_Source\PSoC5/ETH.c **** 	return sz;
 1159              		.loc 1 720 0
 1160 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 721:.\Generated_Source\PSoC5/ETH.c **** }
 1161              		.loc 1 721 0
 1162 0034 1846     		mov	r0, r3
 1163 0036 07F11007 		add	r7, r7, #16
 1164 003a BD46     		mov	sp, r7
 1165 003c 80BD     		pop	{r7, pc}
 1166              		.cfi_endproc
 1167              	.LFE20:
 1168              		.size	ETH_GetSocketTxMemSize, .-ETH_GetSocketTxMemSize
 1169              		.section	.text.ETH_SetSocketMode,"ax",%progbits
 1170              		.align	2
 1171              		.global	ETH_SetSocketMode
 1172              		.thumb
 1173              		.thumb_func
 1174              		.type	ETH_SetSocketMode, %function
 1175              	ETH_SetSocketMode:
 1176              	.LFB21:
 722:.\Generated_Source\PSoC5/ETH.c **** 
 723:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
 724:.\Generated_Source\PSoC5/ETH.c **** /* End Section */
 725:.\Generated_Source\PSoC5/ETH.c **** #endif
 726:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
 727:.\Generated_Source\PSoC5/ETH.c **** /* Socket Registers */
 728:.\Generated_Source\PSoC5/ETH.c **** #if (1)
 729:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 730:.\Generated_Source\PSoC5/ETH.c **** /**
 731:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket mode register
 732:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 733:.\Generated_Source\PSoC5/ETH.c ****  * \param mode the value to be written to the register
 734:.\Generated_Source\PSoC5/ETH.c ****  */
 735:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketMode(uint8 socket, uint8 mode)
 736:.\Generated_Source\PSoC5/ETH.c **** {
 1177              		.loc 1 736 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 8
 1180              		@ frame_needed = 1, uses_anonymous_args = 0
 1181 0000 80B5     		push	{r7, lr}
 1182              	.LCFI61:
 1183              		.cfi_def_cfa_offset 8
 1184              		.cfi_offset 7, -8
 1185              		.cfi_offset 14, -4
 1186 0002 82B0     		sub	sp, sp, #8
 1187              	.LCFI62:
 1188              		.cfi_def_cfa_offset 16
 1189 0004 00AF     		add	r7, sp, #0
 1190              	.LCFI63:
 1191              		.cfi_def_cfa_register 7
 1192 0006 0246     		mov	r2, r0
 1193 0008 0B46     		mov	r3, r1
 1194 000a FA71     		strb	r2, [r7, #7]
 1195 000c BB71     		strb	r3, [r7, #6]
 737:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite((ETH_SOCKET_REG(socket, ETH_SOCK_MR)),(uint8*)&(mode), 1);
 1196              		.loc 1 737 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 35


 1197 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1198 0010 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1199 0014 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1200 0018 53F82220 		ldr	r2, [r3, r2, lsl #2]
 1201 001c 07F10603 		add	r3, r7, #6
 1202 0020 1046     		mov	r0, r2
 1203 0022 1946     		mov	r1, r3
 1204 0024 4FF00102 		mov	r2, #1
 1205 0028 FFF7FEFF 		bl	ETH_ChipWrite
 738:.\Generated_Source\PSoC5/ETH.c **** }
 1206              		.loc 1 738 0
 1207 002c 07F10807 		add	r7, r7, #8
 1208 0030 BD46     		mov	sp, r7
 1209 0032 80BD     		pop	{r7, pc}
 1210              		.cfi_endproc
 1211              	.LFE21:
 1212              		.size	ETH_SetSocketMode, .-ETH_SetSocketMode
 1213              		.section	.text.ETH_SetSocketCommand,"ax",%progbits
 1214              		.align	2
 1215              		.global	ETH_SetSocketCommand
 1216              		.thumb
 1217              		.thumb_func
 1218              		.type	ETH_SetSocketCommand, %function
 1219              	ETH_SetSocketCommand:
 1220              	.LFB22:
 739:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 740:.\Generated_Source\PSoC5/ETH.c **** /**
 741:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket command register
 742:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 743:.\Generated_Source\PSoC5/ETH.c ****  * \param cmd the value to be written to the register
 744:.\Generated_Source\PSoC5/ETH.c ****  */
 745:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketCommand(uint8 socket, uint8 cmd)
 746:.\Generated_Source\PSoC5/ETH.c **** {
 1221              		.loc 1 746 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 8
 1224              		@ frame_needed = 1, uses_anonymous_args = 0
 1225 0000 80B5     		push	{r7, lr}
 1226              	.LCFI64:
 1227              		.cfi_def_cfa_offset 8
 1228              		.cfi_offset 7, -8
 1229              		.cfi_offset 14, -4
 1230 0002 82B0     		sub	sp, sp, #8
 1231              	.LCFI65:
 1232              		.cfi_def_cfa_offset 16
 1233 0004 00AF     		add	r7, sp, #0
 1234              	.LCFI66:
 1235              		.cfi_def_cfa_register 7
 1236 0006 0246     		mov	r2, r0
 1237 0008 0B46     		mov	r3, r1
 1238 000a FA71     		strb	r2, [r7, #7]
 1239 000c BB71     		strb	r3, [r7, #6]
 747:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite( (ETH_SOCKET_REG(socket, ETH_SOCK_CR)),(uint8*)&(cmd),1);
 1240              		.loc 1 747 0
 1241 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1242 0010 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1243 0014 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 36


 1244 0018 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1245 001c 03F10102 		add	r2, r3, #1
 1246 0020 07F10603 		add	r3, r7, #6
 1247 0024 1046     		mov	r0, r2
 1248 0026 1946     		mov	r1, r3
 1249 0028 4FF00102 		mov	r2, #1
 1250 002c FFF7FEFF 		bl	ETH_ChipWrite
 748:.\Generated_Source\PSoC5/ETH.c **** }
 1251              		.loc 1 748 0
 1252 0030 07F10807 		add	r7, r7, #8
 1253 0034 BD46     		mov	sp, r7
 1254 0036 80BD     		pop	{r7, pc}
 1255              		.cfi_endproc
 1256              	.LFE22:
 1257              		.size	ETH_SetSocketCommand, .-ETH_SetSocketCommand
 1258              		.section	.text.ETH_GetSocketCommand,"ax",%progbits
 1259              		.align	2
 1260              		.global	ETH_GetSocketCommand
 1261              		.thumb
 1262              		.thumb_func
 1263              		.type	ETH_GetSocketCommand, %function
 1264              	ETH_GetSocketCommand:
 1265              	.LFB23:
 749:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 750:.\Generated_Source\PSoC5/ETH.c **** /**
 751:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a value from the socket command register
 752:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 753:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 754:.\Generated_Source\PSoC5/ETH.c ****  */
 755:.\Generated_Source\PSoC5/ETH.c **** uint8 ETH_GetSocketCommand(uint8 socket )
 756:.\Generated_Source\PSoC5/ETH.c **** {
 1266              		.loc 1 756 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 16
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270 0000 80B5     		push	{r7, lr}
 1271              	.LCFI67:
 1272              		.cfi_def_cfa_offset 8
 1273              		.cfi_offset 7, -8
 1274              		.cfi_offset 14, -4
 1275 0002 84B0     		sub	sp, sp, #16
 1276              	.LCFI68:
 1277              		.cfi_def_cfa_offset 24
 1278 0004 00AF     		add	r7, sp, #0
 1279              	.LCFI69:
 1280              		.cfi_def_cfa_register 7
 1281 0006 0346     		mov	r3, r0
 1282 0008 FB71     		strb	r3, [r7, #7]
 757:.\Generated_Source\PSoC5/ETH.c **** 	uint8 cmd = 0xFF;
 1283              		.loc 1 757 0
 1284 000a 4FF0FF03 		mov	r3, #255
 1285 000e FB73     		strb	r3, [r7, #15]
 758:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead( (ETH_SOCKET_REG(socket, ETH_SOCK_CR)),(uint8*)(&cmd),1);
 1286              		.loc 1 758 0
 1287 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1288 0012 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1289 0016 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 37


 1290 001a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1291 001e 03F10102 		add	r2, r3, #1
 1292 0022 07F10F03 		add	r3, r7, #15
 1293 0026 1046     		mov	r0, r2
 1294 0028 1946     		mov	r1, r3
 1295 002a 4FF00102 		mov	r2, #1
 1296 002e FFF7FEFF 		bl	ETH_ChipRead
 759:.\Generated_Source\PSoC5/ETH.c **** 	return cmd;
 1297              		.loc 1 759 0
 1298 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 760:.\Generated_Source\PSoC5/ETH.c **** }
 1299              		.loc 1 760 0
 1300 0034 1846     		mov	r0, r3
 1301 0036 07F11007 		add	r7, r7, #16
 1302 003a BD46     		mov	sp, r7
 1303 003c 80BD     		pop	{r7, pc}
 1304              		.cfi_endproc
 1305              	.LFE23:
 1306              		.size	ETH_GetSocketCommand, .-ETH_GetSocketCommand
 1307              		.section	.text.ETH_SetSocketIR,"ax",%progbits
 1308              		.align	2
 1309              		.global	ETH_SetSocketIR
 1310              		.thumb
 1311              		.thumb_func
 1312              		.type	ETH_SetSocketIR, %function
 1313              	ETH_SetSocketIR:
 1314              	.LFB24:
 761:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 762:.\Generated_Source\PSoC5/ETH.c **** /**
 763:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket interrupt register
 764:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 765:.\Generated_Source\PSoC5/ETH.c ****  * \param ir the value to be written to the register
 766:.\Generated_Source\PSoC5/ETH.c ****  */
 767:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketIR(uint8 socket, uint8 ir)
 768:.\Generated_Source\PSoC5/ETH.c **** {
 1315              		.loc 1 768 0
 1316              		.cfi_startproc
 1317              		@ args = 0, pretend = 0, frame = 8
 1318              		@ frame_needed = 1, uses_anonymous_args = 0
 1319 0000 80B5     		push	{r7, lr}
 1320              	.LCFI70:
 1321              		.cfi_def_cfa_offset 8
 1322              		.cfi_offset 7, -8
 1323              		.cfi_offset 14, -4
 1324 0002 82B0     		sub	sp, sp, #8
 1325              	.LCFI71:
 1326              		.cfi_def_cfa_offset 16
 1327 0004 00AF     		add	r7, sp, #0
 1328              	.LCFI72:
 1329              		.cfi_def_cfa_register 7
 1330 0006 0246     		mov	r2, r0
 1331 0008 0B46     		mov	r3, r1
 1332 000a FA71     		strb	r2, [r7, #7]
 1333 000c BB71     		strb	r3, [r7, #6]
 769:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite( (ETH_SOCKET_REG(socket, ETH_SOCK_IR)), (uint8*)&(ir), 1);
 1334              		.loc 1 769 0
 1335 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 38


 1336 0010 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1337 0014 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1338 0018 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1339 001c 03F10202 		add	r2, r3, #2
 1340 0020 07F10603 		add	r3, r7, #6
 1341 0024 1046     		mov	r0, r2
 1342 0026 1946     		mov	r1, r3
 1343 0028 4FF00102 		mov	r2, #1
 1344 002c FFF7FEFF 		bl	ETH_ChipWrite
 770:.\Generated_Source\PSoC5/ETH.c **** }
 1345              		.loc 1 770 0
 1346 0030 07F10807 		add	r7, r7, #8
 1347 0034 BD46     		mov	sp, r7
 1348 0036 80BD     		pop	{r7, pc}
 1349              		.cfi_endproc
 1350              	.LFE24:
 1351              		.size	ETH_SetSocketIR, .-ETH_SetSocketIR
 1352              		.section	.text.ETH_GetSocketIR,"ax",%progbits
 1353              		.align	2
 1354              		.global	ETH_GetSocketIR
 1355              		.thumb
 1356              		.thumb_func
 1357              		.type	ETH_GetSocketIR, %function
 1358              	ETH_GetSocketIR:
 1359              	.LFB25:
 771:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 772:.\Generated_Source\PSoC5/ETH.c **** /**
 773:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a value from the socket interrupt register
 774:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 775:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 776:.\Generated_Source\PSoC5/ETH.c ****  */
 777:.\Generated_Source\PSoC5/ETH.c **** uint8 ETH_GetSocketIR(uint8 socket)
 778:.\Generated_Source\PSoC5/ETH.c **** {	
 1360              		.loc 1 778 0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 16
 1363              		@ frame_needed = 1, uses_anonymous_args = 0
 1364 0000 80B5     		push	{r7, lr}
 1365              	.LCFI73:
 1366              		.cfi_def_cfa_offset 8
 1367              		.cfi_offset 7, -8
 1368              		.cfi_offset 14, -4
 1369 0002 84B0     		sub	sp, sp, #16
 1370              	.LCFI74:
 1371              		.cfi_def_cfa_offset 24
 1372 0004 00AF     		add	r7, sp, #0
 1373              	.LCFI75:
 1374              		.cfi_def_cfa_register 7
 1375 0006 0346     		mov	r3, r0
 1376 0008 FB71     		strb	r3, [r7, #7]
 779:.\Generated_Source\PSoC5/ETH.c **** 	uint8 ir = 0xFF;
 1377              		.loc 1 779 0
 1378 000a 4FF0FF03 		mov	r3, #255
 1379 000e FB73     		strb	r3, [r7, #15]
 780:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead((ETH_SOCKET_REG(socket, ETH_SOCK_IR)), (uint8*)&(ir), 1);
 1380              		.loc 1 780 0
 1381 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 39


 1382 0012 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1383 0016 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1384 001a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1385 001e 03F10202 		add	r2, r3, #2
 1386 0022 07F10F03 		add	r3, r7, #15
 1387 0026 1046     		mov	r0, r2
 1388 0028 1946     		mov	r1, r3
 1389 002a 4FF00102 		mov	r2, #1
 1390 002e FFF7FEFF 		bl	ETH_ChipRead
 781:.\Generated_Source\PSoC5/ETH.c **** 	return ir;
 1391              		.loc 1 781 0
 1392 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 782:.\Generated_Source\PSoC5/ETH.c **** }
 1393              		.loc 1 782 0
 1394 0034 1846     		mov	r0, r3
 1395 0036 07F11007 		add	r7, r7, #16
 1396 003a BD46     		mov	sp, r7
 1397 003c 80BD     		pop	{r7, pc}
 1398              		.cfi_endproc
 1399              	.LFE25:
 1400              		.size	ETH_GetSocketIR, .-ETH_GetSocketIR
 1401              		.section	.text.ETH_GetSocketStatus,"ax",%progbits
 1402              		.align	2
 1403              		.global	ETH_GetSocketStatus
 1404              		.thumb
 1405              		.thumb_func
 1406              		.type	ETH_GetSocketStatus, %function
 1407              	ETH_GetSocketStatus:
 1408              	.LFB26:
 783:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 784:.\Generated_Source\PSoC5/ETH.c **** /**
 785:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a value from the socket status register
 786:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 787:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 788:.\Generated_Source\PSoC5/ETH.c ****  */
 789:.\Generated_Source\PSoC5/ETH.c **** uint8 ETH_GetSocketStatus(uint8 socket)
 790:.\Generated_Source\PSoC5/ETH.c **** { 
 1409              		.loc 1 790 0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 16
 1412              		@ frame_needed = 1, uses_anonymous_args = 0
 1413 0000 80B5     		push	{r7, lr}
 1414              	.LCFI76:
 1415              		.cfi_def_cfa_offset 8
 1416              		.cfi_offset 7, -8
 1417              		.cfi_offset 14, -4
 1418 0002 84B0     		sub	sp, sp, #16
 1419              	.LCFI77:
 1420              		.cfi_def_cfa_offset 24
 1421 0004 00AF     		add	r7, sp, #0
 1422              	.LCFI78:
 1423              		.cfi_def_cfa_register 7
 1424 0006 0346     		mov	r3, r0
 1425 0008 FB71     		strb	r3, [r7, #7]
 791:.\Generated_Source\PSoC5/ETH.c **** 	uint8 status = 0xFF;
 1426              		.loc 1 791 0
 1427 000a 4FF0FF03 		mov	r3, #255
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 40


 1428 000e FB73     		strb	r3, [r7, #15]
 792:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead(ETH_SOCKET_REG(socket, ETH_SOCK_SR), &status, 1);
 1429              		.loc 1 792 0
 1430 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1431 0012 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1432 0016 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1433 001a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1434 001e 03F10302 		add	r2, r3, #3
 1435 0022 07F10F03 		add	r3, r7, #15
 1436 0026 1046     		mov	r0, r2
 1437 0028 1946     		mov	r1, r3
 1438 002a 4FF00102 		mov	r2, #1
 1439 002e FFF7FEFF 		bl	ETH_ChipRead
 793:.\Generated_Source\PSoC5/ETH.c **** 	return status;
 1440              		.loc 1 793 0
 1441 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 794:.\Generated_Source\PSoC5/ETH.c **** }
 1442              		.loc 1 794 0
 1443 0034 1846     		mov	r0, r3
 1444 0036 07F11007 		add	r7, r7, #16
 1445 003a BD46     		mov	sp, r7
 1446 003c 80BD     		pop	{r7, pc}
 1447              		.cfi_endproc
 1448              	.LFE26:
 1449              		.size	ETH_GetSocketStatus, .-ETH_GetSocketStatus
 1450              		.section	.text.ETH_SetSocketSourcePort,"ax",%progbits
 1451              		.align	2
 1452              		.global	ETH_SetSocketSourcePort
 1453              		.thumb
 1454              		.thumb_func
 1455              		.type	ETH_SetSocketSourcePort, %function
 1456              	ETH_SetSocketSourcePort:
 1457              	.LFB27:
 795:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 796:.\Generated_Source\PSoC5/ETH.c **** /**
 797:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket source port register
 798:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 799:.\Generated_Source\PSoC5/ETH.c ****  * \param port the value to be written to the register
 800:.\Generated_Source\PSoC5/ETH.c ****  */
 801:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketSourcePort(uint8 socket, uint16 port)
 802:.\Generated_Source\PSoC5/ETH.c **** {
 1458              		.loc 1 802 0
 1459              		.cfi_startproc
 1460              		@ args = 0, pretend = 0, frame = 8
 1461              		@ frame_needed = 1, uses_anonymous_args = 0
 1462 0000 80B5     		push	{r7, lr}
 1463              	.LCFI79:
 1464              		.cfi_def_cfa_offset 8
 1465              		.cfi_offset 7, -8
 1466              		.cfi_offset 14, -4
 1467 0002 82B0     		sub	sp, sp, #8
 1468              	.LCFI80:
 1469              		.cfi_def_cfa_offset 16
 1470 0004 00AF     		add	r7, sp, #0
 1471              	.LCFI81:
 1472              		.cfi_def_cfa_register 7
 1473 0006 0246     		mov	r2, r0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 41


 1474 0008 0B46     		mov	r3, r1
 1475 000a FA71     		strb	r2, [r7, #7]
 1476 000c BB80     		strh	r3, [r7, #4]	@ movhi
 803:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite16(ETH_SOCKET_REG(socket, ETH_SOCK_PORT),port);
 1477              		.loc 1 803 0
 1478 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1479 0010 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1480 0014 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1481 0018 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1482 001c 03F10402 		add	r2, r3, #4
 1483 0020 BB88     		ldrh	r3, [r7, #4]
 1484 0022 1046     		mov	r0, r2
 1485 0024 1946     		mov	r1, r3
 1486 0026 FFF7FEFF 		bl	ETH_ChipWrite16
 804:.\Generated_Source\PSoC5/ETH.c **** }
 1487              		.loc 1 804 0
 1488 002a 07F10807 		add	r7, r7, #8
 1489 002e BD46     		mov	sp, r7
 1490 0030 80BD     		pop	{r7, pc}
 1491              		.cfi_endproc
 1492              	.LFE27:
 1493              		.size	ETH_SetSocketSourcePort, .-ETH_SetSocketSourcePort
 1494 0032 00BF     		.section	.text.ETH_SetSocketDestMAC,"ax",%progbits
 1495              		.align	2
 1496              		.global	ETH_SetSocketDestMAC
 1497              		.thumb
 1498              		.thumb_func
 1499              		.type	ETH_SetSocketDestMAC, %function
 1500              	ETH_SetSocketDestMAC:
 1501              	.LFB28:
 805:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 806:.\Generated_Source\PSoC5/ETH.c **** /**
 807:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket Destination hardware address register
 808:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 809:.\Generated_Source\PSoC5/ETH.c ****  * \param *mac poitner to the array holding the values to be written to the register
 810:.\Generated_Source\PSoC5/ETH.c ****  */
 811:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketDestMAC(uint8 socket, uint8* mac)
 812:.\Generated_Source\PSoC5/ETH.c **** { 
 1502              		.loc 1 812 0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 8
 1505              		@ frame_needed = 1, uses_anonymous_args = 0
 1506 0000 80B5     		push	{r7, lr}
 1507              	.LCFI82:
 1508              		.cfi_def_cfa_offset 8
 1509              		.cfi_offset 7, -8
 1510              		.cfi_offset 14, -4
 1511 0002 82B0     		sub	sp, sp, #8
 1512              	.LCFI83:
 1513              		.cfi_def_cfa_offset 16
 1514 0004 00AF     		add	r7, sp, #0
 1515              	.LCFI84:
 1516              		.cfi_def_cfa_register 7
 1517 0006 0346     		mov	r3, r0
 1518 0008 3960     		str	r1, [r7, #0]
 1519 000a FB71     		strb	r3, [r7, #7]
 813:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite( ETH_SOCKET_REG(socket, ETH_SOCK_DHAR), &mac[0], 6);
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 42


 1520              		.loc 1 813 0
 1521 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1522 000e 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1523 0012 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1524 0016 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1525 001a 03F10603 		add	r3, r3, #6
 1526 001e 1846     		mov	r0, r3
 1527 0020 3968     		ldr	r1, [r7, #0]
 1528 0022 4FF00602 		mov	r2, #6
 1529 0026 FFF7FEFF 		bl	ETH_ChipWrite
 814:.\Generated_Source\PSoC5/ETH.c **** }
 1530              		.loc 1 814 0
 1531 002a 07F10807 		add	r7, r7, #8
 1532 002e BD46     		mov	sp, r7
 1533 0030 80BD     		pop	{r7, pc}
 1534              		.cfi_endproc
 1535              	.LFE28:
 1536              		.size	ETH_SetSocketDestMAC, .-ETH_SetSocketDestMAC
 1537 0032 00BF     		.section	.text.ETH_SetSocketDestIP,"ax",%progbits
 1538              		.align	2
 1539              		.global	ETH_SetSocketDestIP
 1540              		.thumb
 1541              		.thumb_func
 1542              		.type	ETH_SetSocketDestIP, %function
 1543              	ETH_SetSocketDestIP:
 1544              	.LFB29:
 815:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 816:.\Generated_Source\PSoC5/ETH.c **** /**
 817:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket Destination IP address register
 818:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 819:.\Generated_Source\PSoC5/ETH.c ****  * \param ip the value to be written to the register
 820:.\Generated_Source\PSoC5/ETH.c ****  */
 821:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketDestIP(uint8 socket, uint32 ip)
 822:.\Generated_Source\PSoC5/ETH.c **** { 
 1545              		.loc 1 822 0
 1546              		.cfi_startproc
 1547              		@ args = 0, pretend = 0, frame = 8
 1548              		@ frame_needed = 1, uses_anonymous_args = 0
 1549 0000 80B5     		push	{r7, lr}
 1550              	.LCFI85:
 1551              		.cfi_def_cfa_offset 8
 1552              		.cfi_offset 7, -8
 1553              		.cfi_offset 14, -4
 1554 0002 82B0     		sub	sp, sp, #8
 1555              	.LCFI86:
 1556              		.cfi_def_cfa_offset 16
 1557 0004 00AF     		add	r7, sp, #0
 1558              	.LCFI87:
 1559              		.cfi_def_cfa_register 7
 1560 0006 0346     		mov	r3, r0
 1561 0008 3960     		str	r1, [r7, #0]
 1562 000a FB71     		strb	r3, [r7, #7]
 823:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite(ETH_SOCKET_REG(socket, ETH_SOCK_DIPR), (uint8*)&ip, 4);
 1563              		.loc 1 823 0
 1564 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1565 000e 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1566 0012 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 43


 1567 0016 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1568 001a 03F10C02 		add	r2, r3, #12
 1569 001e 3B46     		mov	r3, r7
 1570 0020 1046     		mov	r0, r2
 1571 0022 1946     		mov	r1, r3
 1572 0024 4FF00402 		mov	r2, #4
 1573 0028 FFF7FEFF 		bl	ETH_ChipWrite
 824:.\Generated_Source\PSoC5/ETH.c **** }
 1574              		.loc 1 824 0
 1575 002c 07F10807 		add	r7, r7, #8
 1576 0030 BD46     		mov	sp, r7
 1577 0032 80BD     		pop	{r7, pc}
 1578              		.cfi_endproc
 1579              	.LFE29:
 1580              		.size	ETH_SetSocketDestIP, .-ETH_SetSocketDestIP
 1581              		.section	.text.ETH_SetSocketDestPort,"ax",%progbits
 1582              		.align	2
 1583              		.global	ETH_SetSocketDestPort
 1584              		.thumb
 1585              		.thumb_func
 1586              		.type	ETH_SetSocketDestPort, %function
 1587              	ETH_SetSocketDestPort:
 1588              	.LFB30:
 825:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 826:.\Generated_Source\PSoC5/ETH.c **** /**
 827:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket destination port register
 828:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 829:.\Generated_Source\PSoC5/ETH.c ****  * \param port the value to be written to the register
 830:.\Generated_Source\PSoC5/ETH.c ****  */
 831:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketDestPort(uint8 socket, uint16 port)
 832:.\Generated_Source\PSoC5/ETH.c **** { 
 1589              		.loc 1 832 0
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 8
 1592              		@ frame_needed = 1, uses_anonymous_args = 0
 1593 0000 80B5     		push	{r7, lr}
 1594              	.LCFI88:
 1595              		.cfi_def_cfa_offset 8
 1596              		.cfi_offset 7, -8
 1597              		.cfi_offset 14, -4
 1598 0002 82B0     		sub	sp, sp, #8
 1599              	.LCFI89:
 1600              		.cfi_def_cfa_offset 16
 1601 0004 00AF     		add	r7, sp, #0
 1602              	.LCFI90:
 1603              		.cfi_def_cfa_register 7
 1604 0006 0246     		mov	r2, r0
 1605 0008 0B46     		mov	r3, r1
 1606 000a FA71     		strb	r2, [r7, #7]
 1607 000c BB80     		strh	r3, [r7, #4]	@ movhi
 833:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite16( ETH_SOCKET_REG(socket, ETH_SOCK_DPORT), port);
 1608              		.loc 1 833 0
 1609 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1610 0010 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1611 0014 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1612 0018 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1613 001c 03F11002 		add	r2, r3, #16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 44


 1614 0020 BB88     		ldrh	r3, [r7, #4]
 1615 0022 1046     		mov	r0, r2
 1616 0024 1946     		mov	r1, r3
 1617 0026 FFF7FEFF 		bl	ETH_ChipWrite16
 834:.\Generated_Source\PSoC5/ETH.c **** }
 1618              		.loc 1 834 0
 1619 002a 07F10807 		add	r7, r7, #8
 1620 002e BD46     		mov	sp, r7
 1621 0030 80BD     		pop	{r7, pc}
 1622              		.cfi_endproc
 1623              	.LFE30:
 1624              		.size	ETH_SetSocketDestPort, .-ETH_SetSocketDestPort
 1625 0032 00BF     		.section	.text.ETH_GetSocketTxFree,"ax",%progbits
 1626              		.align	2
 1627              		.global	ETH_GetSocketTxFree
 1628              		.thumb
 1629              		.thumb_func
 1630              		.type	ETH_GetSocketTxFree, %function
 1631              	ETH_GetSocketTxFree:
 1632              	.LFB31:
 835:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 836:.\Generated_Source\PSoC5/ETH.c **** /**
 837:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a value from the socket Tx free size register
 838:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 839:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 840:.\Generated_Source\PSoC5/ETH.c ****  */
 841:.\Generated_Source\PSoC5/ETH.c **** uint16 ETH_GetSocketTxFree(uint8 socket)
 842:.\Generated_Source\PSoC5/ETH.c **** { 
 1633              		.loc 1 842 0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 8
 1636              		@ frame_needed = 1, uses_anonymous_args = 0
 1637 0000 80B5     		push	{r7, lr}
 1638              	.LCFI91:
 1639              		.cfi_def_cfa_offset 8
 1640              		.cfi_offset 7, -8
 1641              		.cfi_offset 14, -4
 1642 0002 82B0     		sub	sp, sp, #8
 1643              	.LCFI92:
 1644              		.cfi_def_cfa_offset 16
 1645 0004 00AF     		add	r7, sp, #0
 1646              	.LCFI93:
 1647              		.cfi_def_cfa_register 7
 1648 0006 0346     		mov	r3, r0
 1649 0008 FB71     		strb	r3, [r7, #7]
 843:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_TXFSR));
 1650              		.loc 1 843 0
 1651 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1652 000c 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1653 0010 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1654 0014 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1655 0018 03F12003 		add	r3, r3, #32
 1656 001c 1846     		mov	r0, r3
 1657 001e FFF7FEFF 		bl	ETH_ChipRead16
 1658 0022 0346     		mov	r3, r0
 844:.\Generated_Source\PSoC5/ETH.c **** }
 1659              		.loc 1 844 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 45


 1660 0024 1846     		mov	r0, r3
 1661 0026 07F10807 		add	r7, r7, #8
 1662 002a BD46     		mov	sp, r7
 1663 002c 80BD     		pop	{r7, pc}
 1664              		.cfi_endproc
 1665              	.LFE31:
 1666              		.size	ETH_GetSocketTxFree, .-ETH_GetSocketTxFree
 1667 002e 00BF     		.section	.text.ETH_SetSocketTxWritePtr,"ax",%progbits
 1668              		.align	2
 1669              		.global	ETH_SetSocketTxWritePtr
 1670              		.thumb
 1671              		.thumb_func
 1672              		.type	ETH_SetSocketTxWritePtr, %function
 1673              	ETH_SetSocketTxWritePtr:
 1674              	.LFB32:
 845:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 846:.\Generated_Source\PSoC5/ETH.c **** /**
 847:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket tx write pointer register
 848:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 849:.\Generated_Source\PSoC5/ETH.c ****  * \param ptr the value to be written to the register
 850:.\Generated_Source\PSoC5/ETH.c ****  */
 851:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketTxWritePtr(uint8 socket, uint16 ptr)
 852:.\Generated_Source\PSoC5/ETH.c **** { 
 1675              		.loc 1 852 0
 1676              		.cfi_startproc
 1677              		@ args = 0, pretend = 0, frame = 8
 1678              		@ frame_needed = 1, uses_anonymous_args = 0
 1679 0000 80B5     		push	{r7, lr}
 1680              	.LCFI94:
 1681              		.cfi_def_cfa_offset 8
 1682              		.cfi_offset 7, -8
 1683              		.cfi_offset 14, -4
 1684 0002 82B0     		sub	sp, sp, #8
 1685              	.LCFI95:
 1686              		.cfi_def_cfa_offset 16
 1687 0004 00AF     		add	r7, sp, #0
 1688              	.LCFI96:
 1689              		.cfi_def_cfa_register 7
 1690 0006 0246     		mov	r2, r0
 1691 0008 0B46     		mov	r3, r1
 1692 000a FA71     		strb	r2, [r7, #7]
 1693 000c BB80     		strh	r3, [r7, #4]	@ movhi
 853:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite16(ETH_SOCKET_REG(socket, ETH_SOCK_TXWR),ptr);
 1694              		.loc 1 853 0
 1695 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1696 0010 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1697 0014 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1698 0018 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1699 001c 03F12402 		add	r2, r3, #36
 1700 0020 BB88     		ldrh	r3, [r7, #4]
 1701 0022 1046     		mov	r0, r2
 1702 0024 1946     		mov	r1, r3
 1703 0026 FFF7FEFF 		bl	ETH_ChipWrite16
 854:.\Generated_Source\PSoC5/ETH.c **** }
 1704              		.loc 1 854 0
 1705 002a 07F10807 		add	r7, r7, #8
 1706 002e BD46     		mov	sp, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 46


 1707 0030 80BD     		pop	{r7, pc}
 1708              		.cfi_endproc
 1709              	.LFE32:
 1710              		.size	ETH_SetSocketTxWritePtr, .-ETH_SetSocketTxWritePtr
 1711 0032 00BF     		.section	.text.ETH_GetSocketTxWritePtr,"ax",%progbits
 1712              		.align	2
 1713              		.global	ETH_GetSocketTxWritePtr
 1714              		.thumb
 1715              		.thumb_func
 1716              		.type	ETH_GetSocketTxWritePtr, %function
 1717              	ETH_GetSocketTxWritePtr:
 1718              	.LFB33:
 855:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 856:.\Generated_Source\PSoC5/ETH.c **** /**
 857:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a value from the socket tx buffer write pointer register
 858:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 859:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 860:.\Generated_Source\PSoC5/ETH.c ****  */
 861:.\Generated_Source\PSoC5/ETH.c **** uint16 ETH_GetSocketTxWritePtr(uint8 socket)
 862:.\Generated_Source\PSoC5/ETH.c **** { 
 1719              		.loc 1 862 0
 1720              		.cfi_startproc
 1721              		@ args = 0, pretend = 0, frame = 8
 1722              		@ frame_needed = 1, uses_anonymous_args = 0
 1723 0000 80B5     		push	{r7, lr}
 1724              	.LCFI97:
 1725              		.cfi_def_cfa_offset 8
 1726              		.cfi_offset 7, -8
 1727              		.cfi_offset 14, -4
 1728 0002 82B0     		sub	sp, sp, #8
 1729              	.LCFI98:
 1730              		.cfi_def_cfa_offset 16
 1731 0004 00AF     		add	r7, sp, #0
 1732              	.LCFI99:
 1733              		.cfi_def_cfa_register 7
 1734 0006 0346     		mov	r3, r0
 1735 0008 FB71     		strb	r3, [r7, #7]
 863:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_TXWR));
 1736              		.loc 1 863 0
 1737 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1738 000c 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1739 0010 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1740 0014 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1741 0018 03F12403 		add	r3, r3, #36
 1742 001c 1846     		mov	r0, r3
 1743 001e FFF7FEFF 		bl	ETH_ChipRead16
 1744 0022 0346     		mov	r3, r0
 864:.\Generated_Source\PSoC5/ETH.c **** }
 1745              		.loc 1 864 0
 1746 0024 1846     		mov	r0, r3
 1747 0026 07F10807 		add	r7, r7, #8
 1748 002a BD46     		mov	sp, r7
 1749 002c 80BD     		pop	{r7, pc}
 1750              		.cfi_endproc
 1751              	.LFE33:
 1752              		.size	ETH_GetSocketTxWritePtr, .-ETH_GetSocketTxWritePtr
 1753 002e 00BF     		.section	.text.ETH_GetSocketRxSize,"ax",%progbits
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 47


 1754              		.align	2
 1755              		.global	ETH_GetSocketRxSize
 1756              		.thumb
 1757              		.thumb_func
 1758              		.type	ETH_GetSocketRxSize, %function
 1759              	ETH_GetSocketRxSize:
 1760              	.LFB34:
 865:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 866:.\Generated_Source\PSoC5/ETH.c **** /**
 867:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a value from the socket rx received data size register
 868:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 869:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 870:.\Generated_Source\PSoC5/ETH.c ****  */
 871:.\Generated_Source\PSoC5/ETH.c **** uint16 ETH_GetSocketRxSize(uint8 socket)
 872:.\Generated_Source\PSoC5/ETH.c **** {
 1761              		.loc 1 872 0
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 8
 1764              		@ frame_needed = 1, uses_anonymous_args = 0
 1765 0000 80B5     		push	{r7, lr}
 1766              	.LCFI100:
 1767              		.cfi_def_cfa_offset 8
 1768              		.cfi_offset 7, -8
 1769              		.cfi_offset 14, -4
 1770 0002 82B0     		sub	sp, sp, #8
 1771              	.LCFI101:
 1772              		.cfi_def_cfa_offset 16
 1773 0004 00AF     		add	r7, sp, #0
 1774              	.LCFI102:
 1775              		.cfi_def_cfa_register 7
 1776 0006 0346     		mov	r3, r0
 1777 0008 FB71     		strb	r3, [r7, #7]
 873:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_RXRSR));
 1778              		.loc 1 873 0
 1779 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1780 000c 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1781 0010 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1782 0014 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1783 0018 03F12603 		add	r3, r3, #38
 1784 001c 1846     		mov	r0, r3
 1785 001e FFF7FEFF 		bl	ETH_ChipRead16
 1786 0022 0346     		mov	r3, r0
 874:.\Generated_Source\PSoC5/ETH.c **** }
 1787              		.loc 1 874 0
 1788 0024 1846     		mov	r0, r3
 1789 0026 07F10807 		add	r7, r7, #8
 1790 002a BD46     		mov	sp, r7
 1791 002c 80BD     		pop	{r7, pc}
 1792              		.cfi_endproc
 1793              	.LFE34:
 1794              		.size	ETH_GetSocketRxSize, .-ETH_GetSocketRxSize
 1795 002e 00BF     		.section	.text.ETH_SetSocketRxReadPtr,"ax",%progbits
 1796              		.align	2
 1797              		.global	ETH_SetSocketRxReadPtr
 1798              		.thumb
 1799              		.thumb_func
 1800              		.type	ETH_SetSocketRxReadPtr, %function
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 48


 1801              	ETH_SetSocketRxReadPtr:
 1802              	.LFB35:
 875:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 876:.\Generated_Source\PSoC5/ETH.c **** /**
 877:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket rx read pointer register
 878:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 879:.\Generated_Source\PSoC5/ETH.c ****  * \param ptr the value to be written to the register
 880:.\Generated_Source\PSoC5/ETH.c ****  */
 881:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketRxReadPtr(uint8 socket, uint16 ptr)
 882:.\Generated_Source\PSoC5/ETH.c **** { 
 1803              		.loc 1 882 0
 1804              		.cfi_startproc
 1805              		@ args = 0, pretend = 0, frame = 8
 1806              		@ frame_needed = 1, uses_anonymous_args = 0
 1807 0000 80B5     		push	{r7, lr}
 1808              	.LCFI103:
 1809              		.cfi_def_cfa_offset 8
 1810              		.cfi_offset 7, -8
 1811              		.cfi_offset 14, -4
 1812 0002 82B0     		sub	sp, sp, #8
 1813              	.LCFI104:
 1814              		.cfi_def_cfa_offset 16
 1815 0004 00AF     		add	r7, sp, #0
 1816              	.LCFI105:
 1817              		.cfi_def_cfa_register 7
 1818 0006 0246     		mov	r2, r0
 1819 0008 0B46     		mov	r3, r1
 1820 000a FA71     		strb	r2, [r7, #7]
 1821 000c BB80     		strh	r3, [r7, #4]	@ movhi
 883:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite16(ETH_SOCKET_REG(socket, ETH_SOCK_RXRD),ptr);
 1822              		.loc 1 883 0
 1823 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1824 0010 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1825 0014 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1826 0018 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1827 001c 03F12802 		add	r2, r3, #40
 1828 0020 BB88     		ldrh	r3, [r7, #4]
 1829 0022 1046     		mov	r0, r2
 1830 0024 1946     		mov	r1, r3
 1831 0026 FFF7FEFF 		bl	ETH_ChipWrite16
 884:.\Generated_Source\PSoC5/ETH.c **** }
 1832              		.loc 1 884 0
 1833 002a 07F10807 		add	r7, r7, #8
 1834 002e BD46     		mov	sp, r7
 1835 0030 80BD     		pop	{r7, pc}
 1836              		.cfi_endproc
 1837              	.LFE35:
 1838              		.size	ETH_SetSocketRxReadPtr, .-ETH_SetSocketRxReadPtr
 1839 0032 00BF     		.section	.text.ETH_GetSocketRxReadPtr,"ax",%progbits
 1840              		.align	2
 1841              		.global	ETH_GetSocketRxReadPtr
 1842              		.thumb
 1843              		.thumb_func
 1844              		.type	ETH_GetSocketRxReadPtr, %function
 1845              	ETH_GetSocketRxReadPtr:
 1846              	.LFB36:
 885:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 49


 886:.\Generated_Source\PSoC5/ETH.c **** /**
 887:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a value from the socket rx buffer read pointer register
 888:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 889:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 890:.\Generated_Source\PSoC5/ETH.c ****  */
 891:.\Generated_Source\PSoC5/ETH.c **** uint16 ETH_GetSocketRxReadPtr(uint8 socket)
 892:.\Generated_Source\PSoC5/ETH.c **** { 
 1847              		.loc 1 892 0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 8
 1850              		@ frame_needed = 1, uses_anonymous_args = 0
 1851 0000 80B5     		push	{r7, lr}
 1852              	.LCFI106:
 1853              		.cfi_def_cfa_offset 8
 1854              		.cfi_offset 7, -8
 1855              		.cfi_offset 14, -4
 1856 0002 82B0     		sub	sp, sp, #8
 1857              	.LCFI107:
 1858              		.cfi_def_cfa_offset 16
 1859 0004 00AF     		add	r7, sp, #0
 1860              	.LCFI108:
 1861              		.cfi_def_cfa_register 7
 1862 0006 0346     		mov	r3, r0
 1863 0008 FB71     		strb	r3, [r7, #7]
 893:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_RXRD));
 1864              		.loc 1 893 0
 1865 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1866 000c 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1867 0010 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1868 0014 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1869 0018 03F12803 		add	r3, r3, #40
 1870 001c 1846     		mov	r0, r3
 1871 001e FFF7FEFF 		bl	ETH_ChipRead16
 1872 0022 0346     		mov	r3, r0
 894:.\Generated_Source\PSoC5/ETH.c **** }
 1873              		.loc 1 894 0
 1874 0024 1846     		mov	r0, r3
 1875 0026 07F10807 		add	r7, r7, #8
 1876 002a BD46     		mov	sp, r7
 1877 002c 80BD     		pop	{r7, pc}
 1878              		.cfi_endproc
 1879              	.LFE36:
 1880              		.size	ETH_GetSocketRxReadPtr, .-ETH_GetSocketRxReadPtr
 1881 002e 00BF     		.section	.text.ETH_SetSocketRxWritePtr,"ax",%progbits
 1882              		.align	2
 1883              		.global	ETH_SetSocketRxWritePtr
 1884              		.thumb
 1885              		.thumb_func
 1886              		.type	ETH_SetSocketRxWritePtr, %function
 1887              	ETH_SetSocketRxWritePtr:
 1888              	.LFB37:
 895:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 896:.\Generated_Source\PSoC5/ETH.c **** /**
 897:.\Generated_Source\PSoC5/ETH.c ****  * \brief Set the write poitner starting address for a socket
 898:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number to modify
 899:.\Generated_Source\PSoC5/ETH.c ****  * \param ptr the address value to write in to the pointer register
 900:.\Generated_Source\PSoC5/ETH.c ****  */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 50


 901:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketRxWritePtr( uint8 socket, uint16 ptr)
 902:.\Generated_Source\PSoC5/ETH.c **** {
 1889              		.loc 1 902 0
 1890              		.cfi_startproc
 1891              		@ args = 0, pretend = 0, frame = 8
 1892              		@ frame_needed = 1, uses_anonymous_args = 0
 1893              		@ link register save eliminated.
 1894 0000 80B4     		push	{r7}
 1895              	.LCFI109:
 1896              		.cfi_def_cfa_offset 4
 1897              		.cfi_offset 7, -4
 1898 0002 83B0     		sub	sp, sp, #12
 1899              	.LCFI110:
 1900              		.cfi_def_cfa_offset 16
 1901 0004 00AF     		add	r7, sp, #0
 1902              	.LCFI111:
 1903              		.cfi_def_cfa_register 7
 1904 0006 0246     		mov	r2, r0
 1905 0008 0B46     		mov	r3, r1
 1906 000a FA71     		strb	r2, [r7, #7]
 1907 000c BB80     		strh	r3, [r7, #4]	@ movhi
 903:.\Generated_Source\PSoC5/ETH.c **** 	/*
 904:.\Generated_Source\PSoC5/ETH.c **** 	 * This function is not used on the W5100, since there is no register
 905:.\Generated_Source\PSoC5/ETH.c **** 	 * defined in the memor map to provide this capability
 906:.\Generated_Source\PSoC5/ETH.c **** 	 */
 907:.\Generated_Source\PSoC5/ETH.c **** #if (5 == 2)
 908:.\Generated_Source\PSoC5/ETH.c **** 	/*
 909:.\Generated_Source\PSoC5/ETH.c **** 	 * for the W5200 device, write the pointer value to the register
 910:.\Generated_Source\PSoC5/ETH.c **** 	 */
 911:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite16( ETH_SOCKET_REG(socket, ETH_SOCK_RXWR), ptr);
 912:.\Generated_Source\PSoC5/ETH.c **** #endif
 913:.\Generated_Source\PSoC5/ETH.c **** }
 1908              		.loc 1 913 0
 1909 000e 07F10C07 		add	r7, r7, #12
 1910 0012 BD46     		mov	sp, r7
 1911 0014 80BC     		pop	{r7}
 1912 0016 7047     		bx	lr
 1913              		.cfi_endproc
 1914              	.LFE37:
 1915              		.size	ETH_SetSocketRxWritePtr, .-ETH_SetSocketRxWritePtr
 1916              		.section	.text.ETH_SetSocketTxReadPtr,"ax",%progbits
 1917              		.align	2
 1918              		.global	ETH_SetSocketTxReadPtr
 1919              		.thumb
 1920              		.thumb_func
 1921              		.type	ETH_SetSocketTxReadPtr, %function
 1922              	ETH_SetSocketTxReadPtr:
 1923              	.LFB38:
 914:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 915:.\Generated_Source\PSoC5/ETH.c **** /**
 916:.\Generated_Source\PSoC5/ETH.c ****  * \brief Initialize the Tx buffer Read pointer register
 917:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the sockt to be modified
 918:.\Generated_Source\PSoC5/ETH.c ****  * \param ptr the address to store in to the pointer register
 919:.\Generated_Source\PSoC5/ETH.c **** */
 920:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketTxReadPtr(uint8 socket, uint16 ptr )
 921:.\Generated_Source\PSoC5/ETH.c **** {
 1924              		.loc 1 921 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 51


 1925              		.cfi_startproc
 1926              		@ args = 0, pretend = 0, frame = 8
 1927              		@ frame_needed = 1, uses_anonymous_args = 0
 1928 0000 80B5     		push	{r7, lr}
 1929              	.LCFI112:
 1930              		.cfi_def_cfa_offset 8
 1931              		.cfi_offset 7, -8
 1932              		.cfi_offset 14, -4
 1933 0002 82B0     		sub	sp, sp, #8
 1934              	.LCFI113:
 1935              		.cfi_def_cfa_offset 16
 1936 0004 00AF     		add	r7, sp, #0
 1937              	.LCFI114:
 1938              		.cfi_def_cfa_register 7
 1939 0006 0246     		mov	r2, r0
 1940 0008 0B46     		mov	r3, r1
 1941 000a FA71     		strb	r2, [r7, #7]
 1942 000c BB80     		strh	r3, [r7, #4]	@ movhi
 922:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite16( ETH_SOCKET_REG(socket, ETH_SOCK_TXRD), ptr);
 1943              		.loc 1 922 0
 1944 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1945 0010 40F20003 		movw	r3, #:lower16:ETH_W5500_BSB
 1946 0014 C0F20003 		movt	r3, #:upper16:ETH_W5500_BSB
 1947 0018 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1948 001c 03F12202 		add	r2, r3, #34
 1949 0020 BB88     		ldrh	r3, [r7, #4]
 1950 0022 1046     		mov	r0, r2
 1951 0024 1946     		mov	r1, r3
 1952 0026 FFF7FEFF 		bl	ETH_ChipWrite16
 923:.\Generated_Source\PSoC5/ETH.c **** }
 1953              		.loc 1 923 0
 1954 002a 07F10807 		add	r7, r7, #8
 1955 002e BD46     		mov	sp, r7
 1956 0030 80BD     		pop	{r7, pc}
 1957              		.cfi_endproc
 1958              	.LFE38:
 1959              		.size	ETH_SetSocketTxReadPtr, .-ETH_SetSocketTxReadPtr
 1960 0032 00BF     		.section	.text.ETH_ExecuteSocketCommand,"ax",%progbits
 1961              		.align	2
 1962              		.global	ETH_ExecuteSocketCommand
 1963              		.thumb
 1964              		.thumb_func
 1965              		.type	ETH_ExecuteSocketCommand, %function
 1966              	ETH_ExecuteSocketCommand:
 1967              	.LFB39:
 924:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 925:.\Generated_Source\PSoC5/ETH.c **** /**
 926:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a command to the socket command register and wait for completion
 927:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the addressed socket for the command
 928:.\Generated_Source\PSoC5/ETH.c ****  * \param cmd the command to execute
 929:.\Generated_Source\PSoC5/ETH.c ****  */
 930:.\Generated_Source\PSoC5/ETH.c **** uint32 ETH_ExecuteSocketCommand( uint8 socket, int cmd)
 931:.\Generated_Source\PSoC5/ETH.c **** {
 1968              		.loc 1 931 0
 1969              		.cfi_startproc
 1970              		@ args = 0, pretend = 0, frame = 16
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 52


 1972 0000 80B5     		push	{r7, lr}
 1973              	.LCFI115:
 1974              		.cfi_def_cfa_offset 8
 1975              		.cfi_offset 7, -8
 1976              		.cfi_offset 14, -4
 1977 0002 84B0     		sub	sp, sp, #16
 1978              	.LCFI116:
 1979              		.cfi_def_cfa_offset 24
 1980 0004 00AF     		add	r7, sp, #0
 1981              	.LCFI117:
 1982              		.cfi_def_cfa_register 7
 1983 0006 0346     		mov	r3, r0
 1984 0008 3960     		str	r1, [r7, #0]
 1985 000a FB71     		strb	r3, [r7, #7]
 932:.\Generated_Source\PSoC5/ETH.c **** 	uint32 timeout;
 933:.\Generated_Source\PSoC5/ETH.c **** 	timeout = 0;
 1986              		.loc 1 933 0
 1987 000c 4FF00003 		mov	r3, #0
 1988 0010 FB60     		str	r3, [r7, #12]
 934:.\Generated_Source\PSoC5/ETH.c **** 	
 935:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSocketCommand(socket,cmd);
 1989              		.loc 1 935 0
 1990 0012 3B68     		ldr	r3, [r7, #0]
 1991 0014 DBB2     		uxtb	r3, r3
 1992 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1993 0018 1046     		mov	r0, r2
 1994 001a 1946     		mov	r1, r3
 1995 001c FFF7FEFF 		bl	ETH_SetSocketCommand
 936:.\Generated_Source\PSoC5/ETH.c **** 	while ( ( ETH_GetSocketCommand(socket) ) && (timeout < 125))
 1996              		.loc 1 936 0
 1997 0020 07E0     		b	.L74
 1998              	.L76:
 937:.\Generated_Source\PSoC5/ETH.c **** 	{
 938:.\Generated_Source\PSoC5/ETH.c **** 		++timeout;
 1999              		.loc 1 938 0
 2000 0022 FB68     		ldr	r3, [r7, #12]
 2001 0024 03F10103 		add	r3, r3, #1
 2002 0028 FB60     		str	r3, [r7, #12]
 939:.\Generated_Source\PSoC5/ETH.c **** 		CyDelay(1);
 2003              		.loc 1 939 0
 2004 002a 4FF00100 		mov	r0, #1
 2005 002e FFF7FEFF 		bl	CyDelay
 2006              	.L74:
 936:.\Generated_Source\PSoC5/ETH.c **** 	while ( ( ETH_GetSocketCommand(socket) ) && (timeout < 125))
 2007              		.loc 1 936 0 discriminator 1
 2008 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2009 0034 1846     		mov	r0, r3
 2010 0036 FFF7FEFF 		bl	ETH_GetSocketCommand
 2011 003a 0346     		mov	r3, r0
 2012 003c 002B     		cmp	r3, #0
 2013 003e 02D0     		beq	.L75
 936:.\Generated_Source\PSoC5/ETH.c **** 	while ( ( ETH_GetSocketCommand(socket) ) && (timeout < 125))
 2014              		.loc 1 936 0 is_stmt 0 discriminator 2
 2015 0040 FB68     		ldr	r3, [r7, #12]
 2016 0042 7C2B     		cmp	r3, #124
 2017 0044 EDD9     		bls	.L76
 2018              	.L75:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 53


 940:.\Generated_Source\PSoC5/ETH.c **** 	}
 941:.\Generated_Source\PSoC5/ETH.c **** 	return( timeout );
 2019              		.loc 1 941 0 is_stmt 1
 2020 0046 FB68     		ldr	r3, [r7, #12]
 942:.\Generated_Source\PSoC5/ETH.c **** }
 2021              		.loc 1 942 0
 2022 0048 1846     		mov	r0, r3
 2023 004a 07F11007 		add	r7, r7, #16
 2024 004e BD46     		mov	sp, r7
 2025 0050 80BD     		pop	{r7, pc}
 2026              		.cfi_endproc
 2027              	.LFE39:
 2028              		.size	ETH_ExecuteSocketCommand, .-ETH_ExecuteSocketCommand
 2029 0052 00BF     		.section	.text.ETH_GetTxFreeSize,"ax",%progbits
 2030              		.align	2
 2031              		.global	ETH_GetTxFreeSize
 2032              		.thumb
 2033              		.thumb_func
 2034              		.type	ETH_GetTxFreeSize, %function
 2035              	ETH_GetTxFreeSize:
 2036              	.LFB40:
 943:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 944:.\Generated_Source\PSoC5/ETH.c **** /**
 945:.\Generated_Source\PSoC5/ETH.c ****  * \brief Execute a safe read fo the Tx buffer free size register
 946:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the addressed socket to read the available tx buffer
 947:.\Generated_Source\PSoC5/ETH.c ****  * \returns the number of bytes available in the transmit buffer for the socket
 948:.\Generated_Source\PSoC5/ETH.c ****  */
 949:.\Generated_Source\PSoC5/ETH.c **** uint16 ETH_GetTxFreeSize( uint8 socket )
 950:.\Generated_Source\PSoC5/ETH.c **** {
 2037              		.loc 1 950 0
 2038              		.cfi_startproc
 2039              		@ args = 0, pretend = 0, frame = 16
 2040              		@ frame_needed = 1, uses_anonymous_args = 0
 2041 0000 80B5     		push	{r7, lr}
 2042              	.LCFI118:
 2043              		.cfi_def_cfa_offset 8
 2044              		.cfi_offset 7, -8
 2045              		.cfi_offset 14, -4
 2046 0002 84B0     		sub	sp, sp, #16
 2047              	.LCFI119:
 2048              		.cfi_def_cfa_offset 24
 2049 0004 00AF     		add	r7, sp, #0
 2050              	.LCFI120:
 2051              		.cfi_def_cfa_register 7
 2052 0006 0346     		mov	r3, r0
 2053 0008 FB71     		strb	r3, [r7, #7]
 951:.\Generated_Source\PSoC5/ETH.c **** 	uint16 first, second;
 952:.\Generated_Source\PSoC5/ETH.c **** 	
 953:.\Generated_Source\PSoC5/ETH.c **** 	first = 0;
 2054              		.loc 1 953 0
 2055 000a 4FF00003 		mov	r3, #0
 2056 000e BB81     		strh	r3, [r7, #12]	@ movhi
 954:.\Generated_Source\PSoC5/ETH.c **** 	second = 0;
 2057              		.loc 1 954 0
 2058 0010 4FF00003 		mov	r3, #0
 2059 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 2060              	.L80:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 54


 955:.\Generated_Source\PSoC5/ETH.c **** 	do {
 956:.\Generated_Source\PSoC5/ETH.c **** 		first = ETH_GetSocketTxFree( socket );
 2061              		.loc 1 956 0
 2062 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2063 0018 1846     		mov	r0, r3
 2064 001a FFF7FEFF 		bl	ETH_GetSocketTxFree
 2065 001e 0346     		mov	r3, r0
 2066 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 957:.\Generated_Source\PSoC5/ETH.c **** 		if (first != 0) {
 2067              		.loc 1 957 0
 2068 0022 BB89     		ldrh	r3, [r7, #12]
 2069 0024 002B     		cmp	r3, #0
 2070 0026 05D0     		beq	.L79
 958:.\Generated_Source\PSoC5/ETH.c **** 			second = ETH_GetSocketTxFree( socket );
 2071              		.loc 1 958 0
 2072 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2073 002a 1846     		mov	r0, r3
 2074 002c FFF7FEFF 		bl	ETH_GetSocketTxFree
 2075 0030 0346     		mov	r3, r0
 2076 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 2077              	.L79:
 959:.\Generated_Source\PSoC5/ETH.c **** 		}
 960:.\Generated_Source\PSoC5/ETH.c **** 	}
 961:.\Generated_Source\PSoC5/ETH.c **** 	while (first != second );
 2078              		.loc 1 961 0
 2079 0034 BA89     		ldrh	r2, [r7, #12]
 2080 0036 FB89     		ldrh	r3, [r7, #14]
 2081 0038 9A42     		cmp	r2, r3
 2082 003a ECD1     		bne	.L80
 962:.\Generated_Source\PSoC5/ETH.c **** 	
 963:.\Generated_Source\PSoC5/ETH.c **** 	return( second );
 2083              		.loc 1 963 0
 2084 003c FB89     		ldrh	r3, [r7, #14]
 964:.\Generated_Source\PSoC5/ETH.c **** }
 2085              		.loc 1 964 0
 2086 003e 1846     		mov	r0, r3
 2087 0040 07F11007 		add	r7, r7, #16
 2088 0044 BD46     		mov	sp, r7
 2089 0046 80BD     		pop	{r7, pc}
 2090              		.cfi_endproc
 2091              	.LFE40:
 2092              		.size	ETH_GetTxFreeSize, .-ETH_GetTxFreeSize
 2093              		.section	.text.ETH_GetRxSize,"ax",%progbits
 2094              		.align	2
 2095              		.global	ETH_GetRxSize
 2096              		.thumb
 2097              		.thumb_func
 2098              		.type	ETH_GetRxSize, %function
 2099              	ETH_GetRxSize:
 2100              	.LFB41:
 965:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 966:.\Generated_Source\PSoC5/ETH.c **** /**
 967:.\Generated_Source\PSoC5/ETH.c ****  * \brief Execute a safe read of the received data size
 968:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the addressed socketfrom which the data will be read
 969:.\Generated_Source\PSoC5/ETH.c ****  * \returns the number of bytes waiting in the recieve buffer of the socket
 970:.\Generated_Source\PSoC5/ETH.c ****  */
 971:.\Generated_Source\PSoC5/ETH.c **** uint16 ETH_GetRxSize( uint8 socket )
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 55


 972:.\Generated_Source\PSoC5/ETH.c **** {
 2101              		.loc 1 972 0
 2102              		.cfi_startproc
 2103              		@ args = 0, pretend = 0, frame = 16
 2104              		@ frame_needed = 1, uses_anonymous_args = 0
 2105 0000 80B5     		push	{r7, lr}
 2106              	.LCFI121:
 2107              		.cfi_def_cfa_offset 8
 2108              		.cfi_offset 7, -8
 2109              		.cfi_offset 14, -4
 2110 0002 84B0     		sub	sp, sp, #16
 2111              	.LCFI122:
 2112              		.cfi_def_cfa_offset 24
 2113 0004 00AF     		add	r7, sp, #0
 2114              	.LCFI123:
 2115              		.cfi_def_cfa_register 7
 2116 0006 0346     		mov	r3, r0
 2117 0008 FB71     		strb	r3, [r7, #7]
 973:.\Generated_Source\PSoC5/ETH.c **** 	uint16 first, second;
 974:.\Generated_Source\PSoC5/ETH.c **** 	
 975:.\Generated_Source\PSoC5/ETH.c **** 	first = 0;
 2118              		.loc 1 975 0
 2119 000a 4FF00003 		mov	r3, #0
 2120 000e BB81     		strh	r3, [r7, #12]	@ movhi
 976:.\Generated_Source\PSoC5/ETH.c **** 	second = 0;
 2121              		.loc 1 976 0
 2122 0010 4FF00003 		mov	r3, #0
 2123 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 2124              	.L84:
 977:.\Generated_Source\PSoC5/ETH.c **** 	do {
 978:.\Generated_Source\PSoC5/ETH.c **** 		first = ETH_GetSocketRxSize( socket );
 2125              		.loc 1 978 0
 2126 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2127 0018 1846     		mov	r0, r3
 2128 001a FFF7FEFF 		bl	ETH_GetSocketRxSize
 2129 001e 0346     		mov	r3, r0
 2130 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 979:.\Generated_Source\PSoC5/ETH.c **** 		if (first != 0) {
 2131              		.loc 1 979 0
 2132 0022 BB89     		ldrh	r3, [r7, #12]
 2133 0024 002B     		cmp	r3, #0
 2134 0026 05D0     		beq	.L83
 980:.\Generated_Source\PSoC5/ETH.c **** 			second = ETH_GetSocketRxSize( socket );
 2135              		.loc 1 980 0
 2136 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2137 002a 1846     		mov	r0, r3
 2138 002c FFF7FEFF 		bl	ETH_GetSocketRxSize
 2139 0030 0346     		mov	r3, r0
 2140 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 2141              	.L83:
 981:.\Generated_Source\PSoC5/ETH.c **** 		}
 982:.\Generated_Source\PSoC5/ETH.c **** 	}
 983:.\Generated_Source\PSoC5/ETH.c **** 	while (first != second );
 2142              		.loc 1 983 0
 2143 0034 BA89     		ldrh	r2, [r7, #12]
 2144 0036 FB89     		ldrh	r3, [r7, #14]
 2145 0038 9A42     		cmp	r2, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 56


 2146 003a ECD1     		bne	.L84
 984:.\Generated_Source\PSoC5/ETH.c **** 	
 985:.\Generated_Source\PSoC5/ETH.c **** 	return second;
 2147              		.loc 1 985 0
 2148 003c FB89     		ldrh	r3, [r7, #14]
 986:.\Generated_Source\PSoC5/ETH.c **** }
 2149              		.loc 1 986 0
 2150 003e 1846     		mov	r0, r3
 2151 0040 07F11007 		add	r7, r7, #16
 2152 0044 BD46     		mov	sp, r7
 2153 0046 80BD     		pop	{r7, pc}
 2154              		.cfi_endproc
 2155              	.LFE41:
 2156              		.size	ETH_GetRxSize, .-ETH_GetRxSize
 2157              		.section	.text.ETH_ProcessTxData,"ax",%progbits
 2158              		.align	2
 2159              		.global	ETH_ProcessTxData
 2160              		.thumb
 2161              		.thumb_func
 2162              		.type	ETH_ProcessTxData, %function
 2163              	ETH_ProcessTxData:
 2164              	.LFB42:
 987:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 988:.\Generated_Source\PSoC5/ETH.c **** 
 989:.\Generated_Source\PSoC5/ETH.c **** // END Socket Register access section
 990:.\Generated_Source\PSoC5/ETH.c **** #endif
 991:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
 992:.\Generated_Source\PSoC5/ETH.c **** /* W5x00 Data Buffer Memory access primitives */
 993:.\Generated_Source\PSoC5/ETH.c **** #if (1)
 994:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 995:.\Generated_Source\PSoC5/ETH.c **** /**
 996:.\Generated_Source\PSoC5/ETH.c ****  * \brief Transfer data from a local data buffer to the chip Tx fifo
 997:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket buffer to which the data will be written
 998:.\Generated_Source\PSoC5/ETH.c ****  * \param offset The offest in to the socket buffer
 999:.\Generated_Source\PSoC5/ETH.c ****  * \param *buffer pointer to the local buffer to copy to the transmit fifo
1000:.\Generated_Source\PSoC5/ETH.c ****  * \param length the number of bytes to be copied to the transmit fifo
1001:.\Generated_Source\PSoC5/ETH.c ****  */
1002:.\Generated_Source\PSoC5/ETH.c **** void ETH_ProcessTxData(uint8 socket, uint16 offset, uint8* buffer, uint16 length)
1003:.\Generated_Source\PSoC5/ETH.c **** {
 2165              		.loc 1 1003 0
 2166              		.cfi_startproc
 2167              		@ args = 0, pretend = 0, frame = 32
 2168              		@ frame_needed = 1, uses_anonymous_args = 0
 2169 0000 80B5     		push	{r7, lr}
 2170              	.LCFI124:
 2171              		.cfi_def_cfa_offset 8
 2172              		.cfi_offset 7, -8
 2173              		.cfi_offset 14, -4
 2174 0002 88B0     		sub	sp, sp, #32
 2175              	.LCFI125:
 2176              		.cfi_def_cfa_offset 40
 2177 0004 00AF     		add	r7, sp, #0
 2178              	.LCFI126:
 2179              		.cfi_def_cfa_register 7
 2180 0006 BA60     		str	r2, [r7, #8]
 2181 0008 0246     		mov	r2, r0
 2182 000a FA73     		strb	r2, [r7, #15]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 57


 2183 000c 0A46     		mov	r2, r1	@ movhi
 2184 000e BA81     		strh	r2, [r7, #12]	@ movhi
 2185 0010 FB80     		strh	r3, [r7, #6]	@ movhi
1004:.\Generated_Source\PSoC5/ETH.c **** 	uint32 addr;
1005:.\Generated_Source\PSoC5/ETH.c **** 	uint32 base;
1006:.\Generated_Source\PSoC5/ETH.c **** 	uint32 PointerOffset;
1007:.\Generated_Source\PSoC5/ETH.c **** 	uint32 size;
1008:.\Generated_Source\PSoC5/ETH.c **** 	
1009:.\Generated_Source\PSoC5/ETH.c **** 	/*
1010:.\Generated_Source\PSoC5/ETH.c **** 	 * Read the offset pointer, and calculate the base address for the start of write
1011:.\Generated_Source\PSoC5/ETH.c **** 	 * in to the chip buffers.  Written data will be offset by the offset byte count
1012:.\Generated_Source\PSoC5/ETH.c **** 	 * specified in the parameters.
1013:.\Generated_Source\PSoC5/ETH.c **** 	 */
1014:.\Generated_Source\PSoC5/ETH.c **** 	base = ETH_GetSocketTxWritePtr(socket) + offset;
 2186              		.loc 1 1014 0
 2187 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2188 0014 1846     		mov	r0, r3
 2189 0016 FFF7FEFF 		bl	ETH_GetSocketTxWritePtr
 2190 001a 0346     		mov	r3, r0
 2191 001c 1A46     		mov	r2, r3
 2192 001e BB89     		ldrh	r3, [r7, #12]
 2193 0020 D318     		adds	r3, r2, r3
 2194 0022 FB61     		str	r3, [r7, #28]
1015:.\Generated_Source\PSoC5/ETH.c **** 	PointerOffset = (base & 0x07FF);
 2195              		.loc 1 1015 0
 2196 0024 FB69     		ldr	r3, [r7, #28]
 2197 0026 4FEA4353 		lsl	r3, r3, #21
 2198 002a 4FEA5353 		lsr	r3, r3, #21
 2199 002e BB61     		str	r3, [r7, #24]
1016:.\Generated_Source\PSoC5/ETH.c **** 	addr = PointerOffset + ETH_SOCKET_TX_BASE[socket];
 2200              		.loc 1 1016 0
 2201 0030 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2202 0032 40F20003 		movw	r3, #:lower16:ETH_SOCKET_TX_BASE
 2203 0036 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_TX_BASE
 2204 003a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 2205 003e BB69     		ldr	r3, [r7, #24]
 2206 0040 D318     		adds	r3, r2, r3
 2207 0042 7B61     		str	r3, [r7, #20]
1017:.\Generated_Source\PSoC5/ETH.c **** 	/* calculate the number of bytes from the pointer to the end of the buffer */
1018:.\Generated_Source\PSoC5/ETH.c **** 	size = 0x0800 - PointerOffset;
 2208              		.loc 1 1018 0
 2209 0044 BB69     		ldr	r3, [r7, #24]
 2210 0046 C3F50063 		rsb	r3, r3, #2048
 2211 004a 3B61     		str	r3, [r7, #16]
1019:.\Generated_Source\PSoC5/ETH.c **** 	
1020:.\Generated_Source\PSoC5/ETH.c **** 	/*
1021:.\Generated_Source\PSoC5/ETH.c **** 	 * is there enough space to write the complete packet
1022:.\Generated_Source\PSoC5/ETH.c **** 	 * or, shoudl the data be split in to two writes.
1023:.\Generated_Source\PSoC5/ETH.c **** 	 */
1024:.\Generated_Source\PSoC5/ETH.c **** 	if ( length > size) {
 2212              		.loc 1 1024 0
 2213 004c FA88     		ldrh	r2, [r7, #6]
 2214 004e 3B69     		ldr	r3, [r7, #16]
 2215 0050 9A42     		cmp	r2, r3
 2216 0052 1BD9     		bls	.L87
1025:.\Generated_Source\PSoC5/ETH.c **** 		/*
1026:.\Generated_Source\PSoC5/ETH.c **** 		 * There is more data to send than will fit from the pointer to the end
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 58


1027:.\Generated_Source\PSoC5/ETH.c **** 		 * of the memory, so we will write the data in two chunks.  First, write the
1028:.\Generated_Source\PSoC5/ETH.c **** 		 * data from the pointer to the end of the buffer, then write the portion
1029:.\Generated_Source\PSoC5/ETH.c **** 		 * remaining to the start (base ptr) of the socket buffer
1030:.\Generated_Source\PSoC5/ETH.c **** 		 */
1031:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipWrite(addr, buffer, size);
 2217              		.loc 1 1031 0
 2218 0054 3B69     		ldr	r3, [r7, #16]
 2219 0056 9BB2     		uxth	r3, r3
 2220 0058 7869     		ldr	r0, [r7, #20]
 2221 005a B968     		ldr	r1, [r7, #8]
 2222 005c 1A46     		mov	r2, r3
 2223 005e FFF7FEFF 		bl	ETH_ChipWrite
1032:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipWrite(ETH_SOCKET_TX_BASE[socket], &buffer[size], length - size);
 2224              		.loc 1 1032 0
 2225 0062 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2226 0064 40F20003 		movw	r3, #:lower16:ETH_SOCKET_TX_BASE
 2227 0068 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_TX_BASE
 2228 006c 53F82210 		ldr	r1, [r3, r2, lsl #2]
 2229 0070 BA68     		ldr	r2, [r7, #8]
 2230 0072 3B69     		ldr	r3, [r7, #16]
 2231 0074 D218     		adds	r2, r2, r3
 2232 0076 3B69     		ldr	r3, [r7, #16]
 2233 0078 9BB2     		uxth	r3, r3
 2234 007a F888     		ldrh	r0, [r7, #6]	@ movhi
 2235 007c C31A     		subs	r3, r0, r3
 2236 007e 9BB2     		uxth	r3, r3
 2237 0080 0846     		mov	r0, r1
 2238 0082 1146     		mov	r1, r2
 2239 0084 1A46     		mov	r2, r3
 2240 0086 FFF7FEFF 		bl	ETH_ChipWrite
 2241 008a 05E0     		b	.L88
 2242              	.L87:
1033:.\Generated_Source\PSoC5/ETH.c **** 	}
1034:.\Generated_Source\PSoC5/ETH.c **** 	else {
1035:.\Generated_Source\PSoC5/ETH.c **** 		/* 
1036:.\Generated_Source\PSoC5/ETH.c **** 		 * there is enough available space from the write point to the end of buffer
1037:.\Generated_Source\PSoC5/ETH.c **** 		 * to hold the whole packe of information, so just write it to the memory
1038:.\Generated_Source\PSoC5/ETH.c **** 		 */
1039:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipWrite(addr,buffer,length);
 2243              		.loc 1 1039 0
 2244 008c FB88     		ldrh	r3, [r7, #6]
 2245 008e 7869     		ldr	r0, [r7, #20]
 2246 0090 B968     		ldr	r1, [r7, #8]
 2247 0092 1A46     		mov	r2, r3
 2248 0094 FFF7FEFF 		bl	ETH_ChipWrite
 2249              	.L88:
1040:.\Generated_Source\PSoC5/ETH.c **** 	}
1041:.\Generated_Source\PSoC5/ETH.c **** 	/* move the write pointer */
1042:.\Generated_Source\PSoC5/ETH.c **** 	base += length;
 2250              		.loc 1 1042 0
 2251 0098 FB88     		ldrh	r3, [r7, #6]
 2252 009a FA69     		ldr	r2, [r7, #28]
 2253 009c D318     		adds	r3, r2, r3
 2254 009e FB61     		str	r3, [r7, #28]
1043:.\Generated_Source\PSoC5/ETH.c **** 	/* 
1044:.\Generated_Source\PSoC5/ETH.c **** 	 * Store the new write pointer so that the device knows that there is data waiting
1045:.\Generated_Source\PSoC5/ETH.c **** 	 * to be transmitted over the link.
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 59


1046:.\Generated_Source\PSoC5/ETH.c **** 	 */
1047:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSocketTxWritePtr(socket, base);
 2255              		.loc 1 1047 0
 2256 00a0 FB69     		ldr	r3, [r7, #28]
 2257 00a2 9BB2     		uxth	r3, r3
 2258 00a4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2259 00a6 1046     		mov	r0, r2
 2260 00a8 1946     		mov	r1, r3
 2261 00aa FFF7FEFF 		bl	ETH_SetSocketTxWritePtr
1048:.\Generated_Source\PSoC5/ETH.c **** }
 2262              		.loc 1 1048 0
 2263 00ae 07F12007 		add	r7, r7, #32
 2264 00b2 BD46     		mov	sp, r7
 2265 00b4 80BD     		pop	{r7, pc}
 2266              		.cfi_endproc
 2267              	.LFE42:
 2268              		.size	ETH_ProcessTxData, .-ETH_ProcessTxData
 2269 00b6 00BF     		.section	.text.ETH_ProcessRxData,"ax",%progbits
 2270              		.align	2
 2271              		.global	ETH_ProcessRxData
 2272              		.thumb
 2273              		.thumb_func
 2274              		.type	ETH_ProcessRxData, %function
 2275              	ETH_ProcessRxData:
 2276              	.LFB43:
1049:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1050:.\Generated_Source\PSoC5/ETH.c **** /**
1051:.\Generated_Source\PSoC5/ETH.c ****  * \brief Transfer data from the chip receive buffer to a local buffer
1052:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket buffer from which the data will be read
1053:.\Generated_Source\PSoC5/ETH.c ****  * \param offset The offest in to the socket buffer
1054:.\Generated_Source\PSoC5/ETH.c ****  * \param *buffer pointer to the local buffer to hold the receive fifo data
1055:.\Generated_Source\PSoC5/ETH.c ****  * \param length the max number of bytes to be copied to the local buffer
1056:.\Generated_Source\PSoC5/ETH.c ****  * \param flags Flag settings to control read fifo options (lookahead)
1057:.\Generated_Source\PSoC5/ETH.c ****  */
1058:.\Generated_Source\PSoC5/ETH.c **** void ETH_ProcessRxData(uint8 socket, uint16 offset, uint8* buffer, uint16 length, uint8 flags)
1059:.\Generated_Source\PSoC5/ETH.c **** {
 2277              		.loc 1 1059 0
 2278              		.cfi_startproc
 2279              		@ args = 4, pretend = 0, frame = 32
 2280              		@ frame_needed = 1, uses_anonymous_args = 0
 2281 0000 80B5     		push	{r7, lr}
 2282              	.LCFI127:
 2283              		.cfi_def_cfa_offset 8
 2284              		.cfi_offset 7, -8
 2285              		.cfi_offset 14, -4
 2286 0002 88B0     		sub	sp, sp, #32
 2287              	.LCFI128:
 2288              		.cfi_def_cfa_offset 40
 2289 0004 00AF     		add	r7, sp, #0
 2290              	.LCFI129:
 2291              		.cfi_def_cfa_register 7
 2292 0006 BA60     		str	r2, [r7, #8]
 2293 0008 0246     		mov	r2, r0
 2294 000a FA73     		strb	r2, [r7, #15]
 2295 000c 0A46     		mov	r2, r1	@ movhi
 2296 000e BA81     		strh	r2, [r7, #12]	@ movhi
 2297 0010 FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 60


1060:.\Generated_Source\PSoC5/ETH.c **** 	uint32 addr;
1061:.\Generated_Source\PSoC5/ETH.c **** 	uint32 base;
1062:.\Generated_Source\PSoC5/ETH.c **** 	uint32 PointerOffset;
1063:.\Generated_Source\PSoC5/ETH.c **** 	uint32 size;
1064:.\Generated_Source\PSoC5/ETH.c **** 	
1065:.\Generated_Source\PSoC5/ETH.c **** 	/*
1066:.\Generated_Source\PSoC5/ETH.c **** 	 * Read the offset pointer, and calculate the base address for the start of read
1067:.\Generated_Source\PSoC5/ETH.c **** 	 * in to the chip buffers.  The data read will be offset by the offset byte count
1068:.\Generated_Source\PSoC5/ETH.c **** 	 * specified in the parameters.
1069:.\Generated_Source\PSoC5/ETH.c **** 	 */
1070:.\Generated_Source\PSoC5/ETH.c **** 	base = ETH_GetSocketRxReadPtr(socket) + offset;
 2298              		.loc 1 1070 0
 2299 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2300 0014 1846     		mov	r0, r3
 2301 0016 FFF7FEFF 		bl	ETH_GetSocketRxReadPtr
 2302 001a 0346     		mov	r3, r0
 2303 001c 1A46     		mov	r2, r3
 2304 001e BB89     		ldrh	r3, [r7, #12]
 2305 0020 D318     		adds	r3, r2, r3
 2306 0022 FB61     		str	r3, [r7, #28]
1071:.\Generated_Source\PSoC5/ETH.c **** 	PointerOffset = (base & 0x07FF);
 2307              		.loc 1 1071 0
 2308 0024 FB69     		ldr	r3, [r7, #28]
 2309 0026 4FEA4353 		lsl	r3, r3, #21
 2310 002a 4FEA5353 		lsr	r3, r3, #21
 2311 002e BB61     		str	r3, [r7, #24]
1072:.\Generated_Source\PSoC5/ETH.c **** 	addr = PointerOffset + ETH_SOCKET_RX_BASE[socket];
 2312              		.loc 1 1072 0
 2313 0030 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2314 0032 40F20003 		movw	r3, #:lower16:ETH_SOCKET_RX_BASE
 2315 0036 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_RX_BASE
 2316 003a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 2317 003e BB69     		ldr	r3, [r7, #24]
 2318 0040 D318     		adds	r3, r2, r3
 2319 0042 7B61     		str	r3, [r7, #20]
1073:.\Generated_Source\PSoC5/ETH.c **** 	/* calculate the number of bytes from the pointer to the end of the buffer */
1074:.\Generated_Source\PSoC5/ETH.c **** 	size = 0x0800 - PointerOffset;
 2320              		.loc 1 1074 0
 2321 0044 BB69     		ldr	r3, [r7, #24]
 2322 0046 C3F50063 		rsb	r3, r3, #2048
 2323 004a 3B61     		str	r3, [r7, #16]
1075:.\Generated_Source\PSoC5/ETH.c **** 	/*
1076:.\Generated_Source\PSoC5/ETH.c **** 	 * is there enough space to read the complete packet
1077:.\Generated_Source\PSoC5/ETH.c **** 	 * or, should the data be split in to two reads.
1078:.\Generated_Source\PSoC5/ETH.c **** 	 */
1079:.\Generated_Source\PSoC5/ETH.c **** 	if ( length > size) {
 2324              		.loc 1 1079 0
 2325 004c FA88     		ldrh	r2, [r7, #6]
 2326 004e 3B69     		ldr	r3, [r7, #16]
 2327 0050 9A42     		cmp	r2, r3
 2328 0052 1BD9     		bls	.L90
1080:.\Generated_Source\PSoC5/ETH.c **** 		/*
1081:.\Generated_Source\PSoC5/ETH.c **** 		 * There is more data to send than will fit from the pointer to the end
1082:.\Generated_Source\PSoC5/ETH.c **** 		 * of the memory, so we will write the data in two chunks.  First, write the
1083:.\Generated_Source\PSoC5/ETH.c **** 		 * data from the pointer to the end of the buffer, then write the portion
1084:.\Generated_Source\PSoC5/ETH.c **** 		 * remaining to the start (base ptr) of the socket buffer
1085:.\Generated_Source\PSoC5/ETH.c **** 		 */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 61


1086:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipRead(addr, buffer, size);
 2329              		.loc 1 1086 0
 2330 0054 3B69     		ldr	r3, [r7, #16]
 2331 0056 9BB2     		uxth	r3, r3
 2332 0058 7869     		ldr	r0, [r7, #20]
 2333 005a B968     		ldr	r1, [r7, #8]
 2334 005c 1A46     		mov	r2, r3
 2335 005e FFF7FEFF 		bl	ETH_ChipRead
1087:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipRead(ETH_SOCKET_RX_BASE[socket], &buffer[size], length - size);
 2336              		.loc 1 1087 0
 2337 0062 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2338 0064 40F20003 		movw	r3, #:lower16:ETH_SOCKET_RX_BASE
 2339 0068 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_RX_BASE
 2340 006c 53F82210 		ldr	r1, [r3, r2, lsl #2]
 2341 0070 BA68     		ldr	r2, [r7, #8]
 2342 0072 3B69     		ldr	r3, [r7, #16]
 2343 0074 D218     		adds	r2, r2, r3
 2344 0076 3B69     		ldr	r3, [r7, #16]
 2345 0078 9BB2     		uxth	r3, r3
 2346 007a F888     		ldrh	r0, [r7, #6]	@ movhi
 2347 007c C31A     		subs	r3, r0, r3
 2348 007e 9BB2     		uxth	r3, r3
 2349 0080 0846     		mov	r0, r1
 2350 0082 1146     		mov	r1, r2
 2351 0084 1A46     		mov	r2, r3
 2352 0086 FFF7FEFF 		bl	ETH_ChipRead
 2353 008a 05E0     		b	.L91
 2354              	.L90:
1088:.\Generated_Source\PSoC5/ETH.c **** 	}
1089:.\Generated_Source\PSoC5/ETH.c **** 	else {
1090:.\Generated_Source\PSoC5/ETH.c **** 		/* 
1091:.\Generated_Source\PSoC5/ETH.c **** 		 * there is enough available space from the write point to the end of buffer
1092:.\Generated_Source\PSoC5/ETH.c **** 		 * to hold the whole packe of information, so just write it to the memory
1093:.\Generated_Source\PSoC5/ETH.c **** 		 */
1094:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipRead(addr,buffer,length);
 2355              		.loc 1 1094 0
 2356 008c FB88     		ldrh	r3, [r7, #6]
 2357 008e 7869     		ldr	r0, [r7, #20]
 2358 0090 B968     		ldr	r1, [r7, #8]
 2359 0092 1A46     		mov	r2, r3
 2360 0094 FFF7FEFF 		bl	ETH_ChipRead
 2361              	.L91:
1095:.\Generated_Source\PSoC5/ETH.c **** 	}
1096:.\Generated_Source\PSoC5/ETH.c **** 	if ( (flags & 0x01) == 0 ) { /* V1.1: Added ==0 condition to lookahead flag check */
 2362              		.loc 1 1096 0
 2363 0098 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2364 009c 03F00103 		and	r3, r3, #1
 2365 00a0 002B     		cmp	r3, #0
 2366 00a2 0AD1     		bne	.L89
1097:.\Generated_Source\PSoC5/ETH.c **** 		/* move the write pointer */
1098:.\Generated_Source\PSoC5/ETH.c **** 		base += length;
 2367              		.loc 1 1098 0
 2368 00a4 FB88     		ldrh	r3, [r7, #6]
 2369 00a6 FA69     		ldr	r2, [r7, #28]
 2370 00a8 D318     		adds	r3, r2, r3
 2371 00aa FB61     		str	r3, [r7, #28]
1099:.\Generated_Source\PSoC5/ETH.c **** 		/* 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 62


1100:.\Generated_Source\PSoC5/ETH.c **** 		 * Store the new write pointer so that the device knows that there is data waiting
1101:.\Generated_Source\PSoC5/ETH.c **** 		 * to be transmitted over the link.
1102:.\Generated_Source\PSoC5/ETH.c **** 		 */
1103:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketRxReadPtr(socket, base);
 2372              		.loc 1 1103 0
 2373 00ac FB69     		ldr	r3, [r7, #28]
 2374 00ae 9BB2     		uxth	r3, r3
 2375 00b0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2376 00b2 1046     		mov	r0, r2
 2377 00b4 1946     		mov	r1, r3
 2378 00b6 FFF7FEFF 		bl	ETH_SetSocketRxReadPtr
 2379              	.L89:
1104:.\Generated_Source\PSoC5/ETH.c **** 	}
1105:.\Generated_Source\PSoC5/ETH.c **** }
 2380              		.loc 1 1105 0
 2381 00ba 07F12007 		add	r7, r7, #32
 2382 00be BD46     		mov	sp, r7
 2383 00c0 80BD     		pop	{r7, pc}
 2384              		.cfi_endproc
 2385              	.LFE43:
 2386              		.size	ETH_ProcessRxData, .-ETH_ProcessRxData
 2387 00c2 00BF     		.section	.text.ETH_Init,"ax",%progbits
 2388              		.align	2
 2389              		.global	ETH_Init
 2390              		.thumb
 2391              		.thumb_func
 2392              		.type	ETH_Init, %function
 2393              	ETH_Init:
 2394              	.LFB44:
1106:.\Generated_Source\PSoC5/ETH.c **** #endif
1107:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
1108:.\Generated_Source\PSoC5/ETH.c **** /* Driver Initialization */
1109:.\Generated_Source\PSoC5/ETH.c **** #if (1)
1110:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1111:.\Generated_Source\PSoC5/ETH.c **** void
1112:.\Generated_Source\PSoC5/ETH.c **** ETH_Init(uint8* mac, uint32 ip, uint32 subnet, uint32 gateway)
1113:.\Generated_Source\PSoC5/ETH.c **** {
 2395              		.loc 1 1113 0
 2396              		.cfi_startproc
 2397              		@ args = 0, pretend = 0, frame = 24
 2398              		@ frame_needed = 1, uses_anonymous_args = 0
 2399 0000 80B5     		push	{r7, lr}
 2400              	.LCFI130:
 2401              		.cfi_def_cfa_offset 8
 2402              		.cfi_offset 7, -8
 2403              		.cfi_offset 14, -4
 2404 0002 86B0     		sub	sp, sp, #24
 2405              	.LCFI131:
 2406              		.cfi_def_cfa_offset 32
 2407 0004 00AF     		add	r7, sp, #0
 2408              	.LCFI132:
 2409              		.cfi_def_cfa_register 7
 2410 0006 F860     		str	r0, [r7, #12]
 2411 0008 B960     		str	r1, [r7, #8]
 2412 000a 7A60     		str	r2, [r7, #4]
 2413 000c 3B60     		str	r3, [r7, #0]
1114:.\Generated_Source\PSoC5/ETH.c **** 	/*
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 63


1115:.\Generated_Source\PSoC5/ETH.c **** 	 * Initialize the device and the address configuration, then
1116:.\Generated_Source\PSoC5/ETH.c **** 	 * execute socket memory initialization for the local allocation
1117:.\Generated_Source\PSoC5/ETH.c **** 	 * table.
1118:.\Generated_Source\PSoC5/ETH.c **** 	 */
1119:.\Generated_Source\PSoC5/ETH.c **** 	int index;
1120:.\Generated_Source\PSoC5/ETH.c **** 	
1121:.\Generated_Source\PSoC5/ETH.c **** 	CyDelay( 250 ); /* Fixed Boot Delay or chip inintialization will fail */
 2414              		.loc 1 1121 0
 2415 000e 4FF0FA00 		mov	r0, #250
 2416 0012 FFF7FEFF 		bl	CyDelay
1122:.\Generated_Source\PSoC5/ETH.c **** 	
1123:.\Generated_Source\PSoC5/ETH.c **** 	/* Reset the device */
1124:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetMode(0x80); /* Send Reset Command */
 2417              		.loc 1 1124 0
 2418 0016 4FF08000 		mov	r0, #128
 2419 001a FFF7FEFF 		bl	ETH_SetMode
1125:.\Generated_Source\PSoC5/ETH.c **** 	/* Wait for the chip initialization delay */
1126:.\Generated_Source\PSoC5/ETH.c **** 	CyDelay( 10 );
 2420              		.loc 1 1126 0
 2421 001e 4FF00A00 		mov	r0, #10
 2422 0022 FFF7FEFF 		bl	CyDelay
1127:.\Generated_Source\PSoC5/ETH.c **** 	
1128:.\Generated_Source\PSoC5/ETH.c **** 	/* Close all of the socket, and clear the memory to make them available. */
1129:.\Generated_Source\PSoC5/ETH.c **** 	for(index=0;index<ETH_MAX_SOCKET;++index) {
 2423              		.loc 1 1129 0
 2424 0026 4FF00003 		mov	r3, #0
 2425 002a 7B61     		str	r3, [r7, #20]
 2426 002c 4EE0     		b	.L94
 2427              	.L95:
1130:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketClose( index );
 2428              		.loc 1 1130 0 discriminator 2
 2429 002e 7B69     		ldr	r3, [r7, #20]
 2430 0030 DBB2     		uxtb	r3, r3
 2431 0032 1846     		mov	r0, r3
 2432 0034 FFF7FEFF 		bl	ETH_SocketClose
1131:.\Generated_Source\PSoC5/ETH.c **** 		/* Set the socket memory size */
1132:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketTxMemSize(index, ETH_MEM_2K); /* 2K each */
 2433              		.loc 1 1132 0 discriminator 2
 2434 0038 7B69     		ldr	r3, [r7, #20]
 2435 003a DBB2     		uxtb	r3, r3
 2436 003c 1846     		mov	r0, r3
 2437 003e 4FF00201 		mov	r1, #2
 2438 0042 FFF7FEFF 		bl	ETH_SetSocketTxMemSize
1133:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketRxMemSize(index, ETH_MEM_2K); /* 2K Each */
 2439              		.loc 1 1133 0 discriminator 2
 2440 0046 7B69     		ldr	r3, [r7, #20]
 2441 0048 DBB2     		uxtb	r3, r3
 2442 004a 1846     		mov	r0, r3
 2443 004c 4FF00201 		mov	r1, #2
 2444 0050 FFF7FEFF 		bl	ETH_SetSocketRxMemSize
1134:.\Generated_Source\PSoC5/ETH.c **** 		// initialize memory buffer pointers
1135:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketRxReadPtr( index, ETH_SOCKET_RX_BASE[index] );
 2445              		.loc 1 1135 0 discriminator 2
 2446 0054 7B69     		ldr	r3, [r7, #20]
 2447 0056 DAB2     		uxtb	r2, r3
 2448 0058 40F20003 		movw	r3, #:lower16:ETH_SOCKET_RX_BASE
 2449 005c C0F20003 		movt	r3, #:upper16:ETH_SOCKET_RX_BASE
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 64


 2450 0060 7969     		ldr	r1, [r7, #20]
 2451 0062 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2452 0066 9BB2     		uxth	r3, r3
 2453 0068 1046     		mov	r0, r2
 2454 006a 1946     		mov	r1, r3
 2455 006c FFF7FEFF 		bl	ETH_SetSocketRxReadPtr
1136:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketRxWritePtr( index, ETH_SOCKET_RX_BASE[index] );
 2456              		.loc 1 1136 0 discriminator 2
 2457 0070 7B69     		ldr	r3, [r7, #20]
 2458 0072 DAB2     		uxtb	r2, r3
 2459 0074 40F20003 		movw	r3, #:lower16:ETH_SOCKET_RX_BASE
 2460 0078 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_RX_BASE
 2461 007c 7969     		ldr	r1, [r7, #20]
 2462 007e 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2463 0082 9BB2     		uxth	r3, r3
 2464 0084 1046     		mov	r0, r2
 2465 0086 1946     		mov	r1, r3
 2466 0088 FFF7FEFF 		bl	ETH_SetSocketRxWritePtr
1137:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketTxReadPtr( index, ETH_SOCKET_TX_BASE[index] );
 2467              		.loc 1 1137 0 discriminator 2
 2468 008c 7B69     		ldr	r3, [r7, #20]
 2469 008e DAB2     		uxtb	r2, r3
 2470 0090 40F20003 		movw	r3, #:lower16:ETH_SOCKET_TX_BASE
 2471 0094 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_TX_BASE
 2472 0098 7969     		ldr	r1, [r7, #20]
 2473 009a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2474 009e 9BB2     		uxth	r3, r3
 2475 00a0 1046     		mov	r0, r2
 2476 00a2 1946     		mov	r1, r3
 2477 00a4 FFF7FEFF 		bl	ETH_SetSocketTxReadPtr
1138:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketTxWritePtr( index, ETH_SOCKET_TX_BASE[index] );
 2478              		.loc 1 1138 0 discriminator 2
 2479 00a8 7B69     		ldr	r3, [r7, #20]
 2480 00aa DAB2     		uxtb	r2, r3
 2481 00ac 40F20003 		movw	r3, #:lower16:ETH_SOCKET_TX_BASE
 2482 00b0 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_TX_BASE
 2483 00b4 7969     		ldr	r1, [r7, #20]
 2484 00b6 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2485 00ba 9BB2     		uxth	r3, r3
 2486 00bc 1046     		mov	r0, r2
 2487 00be 1946     		mov	r1, r3
 2488 00c0 FFF7FEFF 		bl	ETH_SetSocketTxWritePtr
1129:.\Generated_Source\PSoC5/ETH.c **** 	for(index=0;index<ETH_MAX_SOCKET;++index) {
 2489              		.loc 1 1129 0 discriminator 2
 2490 00c4 7B69     		ldr	r3, [r7, #20]
 2491 00c6 03F10103 		add	r3, r3, #1
 2492 00ca 7B61     		str	r3, [r7, #20]
 2493              	.L94:
1129:.\Generated_Source\PSoC5/ETH.c **** 	for(index=0;index<ETH_MAX_SOCKET;++index) {
 2494              		.loc 1 1129 0 is_stmt 0 discriminator 1
 2495 00cc 7B69     		ldr	r3, [r7, #20]
 2496 00ce 072B     		cmp	r3, #7
 2497 00d0 ADDD     		ble	.L95
1139:.\Generated_Source\PSoC5/ETH.c **** 	}
1140:.\Generated_Source\PSoC5/ETH.c **** 	/* Set device gateway address */
1141:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetGatewayAddress(gateway);
 2498              		.loc 1 1141 0 is_stmt 1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 65


 2499 00d2 3868     		ldr	r0, [r7, #0]
 2500 00d4 FFF7FEFF 		bl	ETH_SetGatewayAddress
1142:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSubnetMask( subnet );
 2501              		.loc 1 1142 0
 2502 00d8 7868     		ldr	r0, [r7, #4]
 2503 00da FFF7FEFF 		bl	ETH_SetSubnetMask
1143:.\Generated_Source\PSoC5/ETH.c **** 	/* Store the subnet mask for later use, for ERRATA fix */
1144:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SubnetMask = subnet;
 2504              		.loc 1 1144 0
 2505 00de 40F20003 		movw	r3, #:lower16:ETH_SubnetMask
 2506 00e2 C0F20003 		movt	r3, #:upper16:ETH_SubnetMask
 2507 00e6 7A68     		ldr	r2, [r7, #4]
 2508 00e8 1A60     		str	r2, [r3, #0]
1145:.\Generated_Source\PSoC5/ETH.c **** 	/* store the device mac */
1146:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSourceMAC( mac );
 2509              		.loc 1 1146 0
 2510 00ea F868     		ldr	r0, [r7, #12]
 2511 00ec FFF7FEFF 		bl	ETH_SetSourceMAC
1147:.\Generated_Source\PSoC5/ETH.c **** 	/* store the IP address */
1148:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSourceIP( ip );
 2512              		.loc 1 1148 0
 2513 00f0 B868     		ldr	r0, [r7, #8]
 2514 00f2 FFF7FEFF 		bl	ETH_SetSourceIP
1149:.\Generated_Source\PSoC5/ETH.c **** 	/* clear pending interrupts */
1150:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetIR(0xFF);
 2515              		.loc 1 1150 0
 2516 00f6 4FF0FF00 		mov	r0, #255
 2517 00fa FFF7FEFF 		bl	ETH_SetIR
1151:.\Generated_Source\PSoC5/ETH.c **** 	/* clear the subnet mask register (W5100 Errata Fix) */
1152:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSubnetMask( 0 );
 2518              		.loc 1 1152 0
 2519 00fe 4FF00000 		mov	r0, #0
 2520 0102 FFF7FEFF 		bl	ETH_SetSubnetMask
1153:.\Generated_Source\PSoC5/ETH.c **** }
 2521              		.loc 1 1153 0
 2522 0106 07F11807 		add	r7, r7, #24
 2523 010a BD46     		mov	sp, r7
 2524 010c 80BD     		pop	{r7, pc}
 2525              		.cfi_endproc
 2526              	.LFE44:
 2527              		.size	ETH_Init, .-ETH_Init
 2528 010e 00BF     		.section	.rodata
 2529              		.align	2
 2530              	.LC0:
 2531 0060 30302D64 		.ascii	"00-de-ad-be-ef-00\000"
 2531      652D6164 
 2531      2D62652D 
 2531      65662D30 
 2531      3000
 2532 0072 0000     		.align	2
 2533              	.LC1:
 2534 0074 3139322E 		.ascii	"192.168.0.101\000"
 2534      3136382E 
 2534      302E3130 
 2534      3100
 2535 0082 0000     		.align	2
 2536              	.LC2:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 66


 2537 0084 3235352E 		.ascii	"255.255.255.0\000"
 2537      3235352E 
 2537      3235352E 
 2537      3000
 2538 0092 0000     		.align	2
 2539              	.LC3:
 2540 0094 3139322E 		.ascii	"192.168.0.1\000"
 2540      3136382E 
 2540      302E3100 
 2541              		.section	.text.ETH_Start,"ax",%progbits
 2542              		.align	2
 2543              		.global	ETH_Start
 2544              		.thumb
 2545              		.thumb_func
 2546              		.type	ETH_Start, %function
 2547              	ETH_Start:
 2548              	.LFB45:
1154:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1155:.\Generated_Source\PSoC5/ETH.c **** void
1156:.\Generated_Source\PSoC5/ETH.c **** ETH_Start( void )
1157:.\Generated_Source\PSoC5/ETH.c **** {
 2549              		.loc 1 1157 0
 2550              		.cfi_startproc
 2551              		@ args = 0, pretend = 0, frame = 16
 2552              		@ frame_needed = 1, uses_anonymous_args = 0
 2553 0000 80B5     		push	{r7, lr}
 2554              	.LCFI133:
 2555              		.cfi_def_cfa_offset 8
 2556              		.cfi_offset 7, -8
 2557              		.cfi_offset 14, -4
 2558 0002 84B0     		sub	sp, sp, #16
 2559              	.LCFI134:
 2560              		.cfi_def_cfa_offset 24
 2561 0004 00AF     		add	r7, sp, #0
 2562              	.LCFI135:
 2563              		.cfi_def_cfa_register 7
1158:.\Generated_Source\PSoC5/ETH.c **** 	uint32 ip;
1159:.\Generated_Source\PSoC5/ETH.c **** 	uint32 gateway;
1160:.\Generated_Source\PSoC5/ETH.c **** 	uint32 sub;
1161:.\Generated_Source\PSoC5/ETH.c **** 	
1162:.\Generated_Source\PSoC5/ETH.c **** 	/* Check for SPI initialization */
1163:.\Generated_Source\PSoC5/ETH.c **** 	if (SPI_initVar == 0) {
 2564              		.loc 1 1163 0
 2565 0006 40F20003 		movw	r3, #:lower16:SPI_initVar
 2566 000a C0F20003 		movt	r3, #:upper16:SPI_initVar
 2567 000e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2568 0010 002B     		cmp	r3, #0
 2569 0012 01D1     		bne	.L97
1164:.\Generated_Source\PSoC5/ETH.c **** 		/*
1165:.\Generated_Source\PSoC5/ETH.c **** 		 * the hardware has not yet been initialized.  Before anything can be
1166:.\Generated_Source\PSoC5/ETH.c **** 		 * initialized within the driver, the external hardware must be started
1167:.\Generated_Source\PSoC5/ETH.c **** 		 */
1168:.\Generated_Source\PSoC5/ETH.c **** 		SPI_Start();
 2570              		.loc 1 1168 0
 2571 0014 FFF7FEFF 		bl	SPI_Start
 2572              	.L97:
1169:.\Generated_Source\PSoC5/ETH.c **** 	}
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 67


1170:.\Generated_Source\PSoC5/ETH.c **** 		
1171:.\Generated_Source\PSoC5/ETH.c **** 	/* wait for power on PLL Lock */
1172:.\Generated_Source\PSoC5/ETH.c **** 	CyDelay( 10 );
 2573              		.loc 1 1172 0
 2574 0018 4FF00A00 		mov	r0, #10
 2575 001c FFF7FEFF 		bl	CyDelay
1173:.\Generated_Source\PSoC5/ETH.c **** 	/* V1.2 new -- Parse MAC Address string */
1174:.\Generated_Source\PSoC5/ETH.c **** 	if ( ETH_ParseMAC("00-de-ad-be-ef-00", &ETH_MAC[0]) == CYRET_BAD_DATA) {
 2576              		.loc 1 1174 0
 2577 0020 40F20000 		movw	r0, #:lower16:.LC0
 2578 0024 C0F20000 		movt	r0, #:upper16:.LC0
 2579 0028 40F20001 		movw	r1, #:lower16:ETH_MAC
 2580 002c C0F20001 		movt	r1, #:upper16:ETH_MAC
 2581 0030 FFF7FEFF 		bl	ETH_ParseMAC
 2582 0034 0346     		mov	r3, r0
 2583 0036 062B     		cmp	r3, #6
 2584 0038 29D1     		bne	.L98
1175:.\Generated_Source\PSoC5/ETH.c **** 		ETH_MAC[0] = 0;
 2585              		.loc 1 1175 0
 2586 003a 40F20003 		movw	r3, #:lower16:ETH_MAC
 2587 003e C0F20003 		movt	r3, #:upper16:ETH_MAC
 2588 0042 4FF00002 		mov	r2, #0
 2589 0046 1A70     		strb	r2, [r3, #0]
1176:.\Generated_Source\PSoC5/ETH.c **** 		ETH_MAC[1] = 0xDE;
 2590              		.loc 1 1176 0
 2591 0048 40F20003 		movw	r3, #:lower16:ETH_MAC
 2592 004c C0F20003 		movt	r3, #:upper16:ETH_MAC
 2593 0050 4FF0DE02 		mov	r2, #222
 2594 0054 5A70     		strb	r2, [r3, #1]
1177:.\Generated_Source\PSoC5/ETH.c **** 		ETH_MAC[2] = 0xAD;
 2595              		.loc 1 1177 0
 2596 0056 40F20003 		movw	r3, #:lower16:ETH_MAC
 2597 005a C0F20003 		movt	r3, #:upper16:ETH_MAC
 2598 005e 4FF0AD02 		mov	r2, #173
 2599 0062 9A70     		strb	r2, [r3, #2]
1178:.\Generated_Source\PSoC5/ETH.c **** 		ETH_MAC[3] = 0xC0;
 2600              		.loc 1 1178 0
 2601 0064 40F20003 		movw	r3, #:lower16:ETH_MAC
 2602 0068 C0F20003 		movt	r3, #:upper16:ETH_MAC
 2603 006c 4FF0C002 		mov	r2, #192
 2604 0070 DA70     		strb	r2, [r3, #3]
1179:.\Generated_Source\PSoC5/ETH.c **** 		ETH_MAC[4] = 0xDE;
 2605              		.loc 1 1179 0
 2606 0072 40F20003 		movw	r3, #:lower16:ETH_MAC
 2607 0076 C0F20003 		movt	r3, #:upper16:ETH_MAC
 2608 007a 4FF0DE02 		mov	r2, #222
 2609 007e 1A71     		strb	r2, [r3, #4]
1180:.\Generated_Source\PSoC5/ETH.c **** 		ETH_MAC[5] = 0;
 2610              		.loc 1 1180 0
 2611 0080 40F20003 		movw	r3, #:lower16:ETH_MAC
 2612 0084 C0F20003 		movt	r3, #:upper16:ETH_MAC
 2613 0088 4FF00002 		mov	r2, #0
 2614 008c 5A71     		strb	r2, [r3, #5]
 2615              	.L98:
1181:.\Generated_Source\PSoC5/ETH.c **** 	}
1182:.\Generated_Source\PSoC5/ETH.c **** 	/* END of V1.2 Update ------ */
1183:.\Generated_Source\PSoC5/ETH.c **** 	ip = ETH_ParseIP("192.168.0.101");
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 68


 2616              		.loc 1 1183 0
 2617 008e 40F20000 		movw	r0, #:lower16:.LC1
 2618 0092 C0F20000 		movt	r0, #:upper16:.LC1
 2619 0096 FFF7FEFF 		bl	ETH_ParseIP
 2620 009a F860     		str	r0, [r7, #12]
1184:.\Generated_Source\PSoC5/ETH.c **** 	sub = ETH_ParseIP("255.255.255.0");
 2621              		.loc 1 1184 0
 2622 009c 40F20000 		movw	r0, #:lower16:.LC2
 2623 00a0 C0F20000 		movt	r0, #:upper16:.LC2
 2624 00a4 FFF7FEFF 		bl	ETH_ParseIP
 2625 00a8 B860     		str	r0, [r7, #8]
1185:.\Generated_Source\PSoC5/ETH.c **** 	gateway = ETH_ParseIP("192.168.0.1");
 2626              		.loc 1 1185 0
 2627 00aa 40F20000 		movw	r0, #:lower16:.LC3
 2628 00ae C0F20000 		movt	r0, #:upper16:.LC3
 2629 00b2 FFF7FEFF 		bl	ETH_ParseIP
 2630 00b6 7860     		str	r0, [r7, #4]
1186:.\Generated_Source\PSoC5/ETH.c **** 	/* Initialize the device with the default data */
1187:.\Generated_Source\PSoC5/ETH.c **** 	ETH_Init( &ETH_MAC[0], ip, sub, gateway  );
 2631              		.loc 1 1187 0
 2632 00b8 40F20000 		movw	r0, #:lower16:ETH_MAC
 2633 00bc C0F20000 		movt	r0, #:upper16:ETH_MAC
 2634 00c0 F968     		ldr	r1, [r7, #12]
 2635 00c2 BA68     		ldr	r2, [r7, #8]
 2636 00c4 7B68     		ldr	r3, [r7, #4]
 2637 00c6 FFF7FEFF 		bl	ETH_Init
1188:.\Generated_Source\PSoC5/ETH.c **** }
 2638              		.loc 1 1188 0
 2639 00ca 07F11007 		add	r7, r7, #16
 2640 00ce BD46     		mov	sp, r7
 2641 00d0 80BD     		pop	{r7, pc}
 2642              		.cfi_endproc
 2643              	.LFE45:
 2644              		.size	ETH_Start, .-ETH_Start
 2645 00d2 00BF     		.section	.text.ETH_ParseIP,"ax",%progbits
 2646              		.align	2
 2647              		.global	ETH_ParseIP
 2648              		.thumb
 2649              		.thumb_func
 2650              		.type	ETH_ParseIP, %function
 2651              	ETH_ParseIP:
 2652              	.LFB46:
1189:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1190:.\Generated_Source\PSoC5/ETH.c **** uint32
1191:.\Generated_Source\PSoC5/ETH.c **** ETH_ParseIP( const char* ipString )
1192:.\Generated_Source\PSoC5/ETH.c **** {
 2653              		.loc 1 1192 0
 2654              		.cfi_startproc
 2655              		@ args = 0, pretend = 0, frame = 32
 2656              		@ frame_needed = 1, uses_anonymous_args = 0
 2657 0000 90B5     		push	{r4, r7, lr}
 2658              	.LCFI136:
 2659              		.cfi_def_cfa_offset 12
 2660              		.cfi_offset 4, -12
 2661              		.cfi_offset 7, -8
 2662              		.cfi_offset 14, -4
 2663 0002 89B0     		sub	sp, sp, #36
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 69


 2664              	.LCFI137:
 2665              		.cfi_def_cfa_offset 48
 2666 0004 00AF     		add	r7, sp, #0
 2667              	.LCFI138:
 2668              		.cfi_def_cfa_register 7
 2669 0006 7860     		str	r0, [r7, #4]
1193:.\Generated_Source\PSoC5/ETH.c **** 	/*
1194:.\Generated_Source\PSoC5/ETH.c **** 	 * Parse a human readable string in to a IP address usable by the hardare
1195:.\Generated_Source\PSoC5/ETH.c **** 	 */
1196:.\Generated_Source\PSoC5/ETH.c **** 	int index;
1197:.\Generated_Source\PSoC5/ETH.c **** 	char digit[5];
1198:.\Generated_Source\PSoC5/ETH.c **** 	uint8 ip[4];
1199:.\Generated_Source\PSoC5/ETH.c **** 	int counter;
1200:.\Generated_Source\PSoC5/ETH.c **** 	int dindex;
1201:.\Generated_Source\PSoC5/ETH.c **** 	
1202:.\Generated_Source\PSoC5/ETH.c **** 	index = 0;
 2670              		.loc 1 1202 0
 2671 0008 4FF00003 		mov	r3, #0
 2672 000c FB61     		str	r3, [r7, #28]
1203:.\Generated_Source\PSoC5/ETH.c **** 	dindex = 0;
 2673              		.loc 1 1203 0
 2674 000e 4FF00003 		mov	r3, #0
 2675 0012 7B61     		str	r3, [r7, #20]
1204:.\Generated_Source\PSoC5/ETH.c **** 	counter = 0;
 2676              		.loc 1 1204 0
 2677 0014 4FF00003 		mov	r3, #0
 2678 0018 BB61     		str	r3, [r7, #24]
1205:.\Generated_Source\PSoC5/ETH.c **** 	
1206:.\Generated_Source\PSoC5/ETH.c **** 	while ( (counter < 4) && ((unsigned int)index < strlen(ipString) ) ) {
 2679              		.loc 1 1206 0
 2680 001a 6FE0     		b	.L100
 2681              	.L109:
1207:.\Generated_Source\PSoC5/ETH.c **** 		if ( (ipString[index] >= '0' ) && (ipString[index] <= '9') ) {
 2682              		.loc 1 1207 0
 2683 001c FB69     		ldr	r3, [r7, #28]
 2684 001e 7A68     		ldr	r2, [r7, #4]
 2685 0020 D318     		adds	r3, r2, r3
 2686 0022 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2687 0024 2F2B     		cmp	r3, #47
 2688 0026 18D9     		bls	.L101
 2689              		.loc 1 1207 0 is_stmt 0 discriminator 1
 2690 0028 FB69     		ldr	r3, [r7, #28]
 2691 002a 7A68     		ldr	r2, [r7, #4]
 2692 002c D318     		adds	r3, r2, r3
 2693 002e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2694 0030 392B     		cmp	r3, #57
 2695 0032 12D8     		bhi	.L101
1208:.\Generated_Source\PSoC5/ETH.c **** 			if (dindex > 3) return( 0xFFFFFFFF );
 2696              		.loc 1 1208 0 is_stmt 1
 2697 0034 7B69     		ldr	r3, [r7, #20]
 2698 0036 032B     		cmp	r3, #3
 2699 0038 02DD     		ble	.L102
 2700              		.loc 1 1208 0 is_stmt 0 discriminator 1
 2701 003a 4FF0FF33 		mov	r3, #-1
 2702 003e 81E0     		b	.L111
 2703              	.L102:
1209:.\Generated_Source\PSoC5/ETH.c **** 			digit[dindex++] = ipString[index];
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 70


 2704              		.loc 1 1209 0 is_stmt 1
 2705 0040 FB69     		ldr	r3, [r7, #28]
 2706 0042 7A68     		ldr	r2, [r7, #4]
 2707 0044 D318     		adds	r3, r2, r3
 2708 0046 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2709 0048 07F10C01 		add	r1, r7, #12
 2710 004c 7B69     		ldr	r3, [r7, #20]
 2711 004e CB18     		adds	r3, r1, r3
 2712 0050 1A70     		strb	r2, [r3, #0]
 2713 0052 7B69     		ldr	r3, [r7, #20]
 2714 0054 03F10103 		add	r3, r3, #1
 2715 0058 7B61     		str	r3, [r7, #20]
 2716              	.L101:
1210:.\Generated_Source\PSoC5/ETH.c **** 			
1211:.\Generated_Source\PSoC5/ETH.c **** 		}
1212:.\Generated_Source\PSoC5/ETH.c **** 		
1213:.\Generated_Source\PSoC5/ETH.c **** 		if ( (ipString[index] == '.') || (ipString[index+1] == 0) ) {
 2717              		.loc 1 1213 0
 2718 005a FB69     		ldr	r3, [r7, #28]
 2719 005c 7A68     		ldr	r2, [r7, #4]
 2720 005e D318     		adds	r3, r2, r3
 2721 0060 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2722 0062 2E2B     		cmp	r3, #46
 2723 0064 07D0     		beq	.L104
 2724              		.loc 1 1213 0 is_stmt 0 discriminator 1
 2725 0066 FB69     		ldr	r3, [r7, #28]
 2726 0068 03F10103 		add	r3, r3, #1
 2727 006c 7A68     		ldr	r2, [r7, #4]
 2728 006e D318     		adds	r3, r2, r3
 2729 0070 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2730 0072 002B     		cmp	r3, #0
 2731 0074 3ED1     		bne	.L105
 2732              	.L104:
1214:.\Generated_Source\PSoC5/ETH.c **** 			digit[dindex] = 0;
 2733              		.loc 1 1214 0 is_stmt 1
 2734 0076 07F10C02 		add	r2, r7, #12
 2735 007a 7B69     		ldr	r3, [r7, #20]
 2736 007c D318     		adds	r3, r2, r3
 2737 007e 4FF00002 		mov	r2, #0
 2738 0082 1A70     		strb	r2, [r3, #0]
1215:.\Generated_Source\PSoC5/ETH.c **** 			dindex = 0;
 2739              		.loc 1 1215 0
 2740 0084 4FF00003 		mov	r3, #0
 2741 0088 7B61     		str	r3, [r7, #20]
1216:.\Generated_Source\PSoC5/ETH.c **** 			/* convert the value and store in the buffer */
1217:.\Generated_Source\PSoC5/ETH.c **** 			ip[counter] = 0;
 2742              		.loc 1 1217 0
 2743 008a 07F10802 		add	r2, r7, #8
 2744 008e BB69     		ldr	r3, [r7, #24]
 2745 0090 D318     		adds	r3, r2, r3
 2746 0092 4FF00002 		mov	r2, #0
 2747 0096 1A70     		strb	r2, [r3, #0]
1218:.\Generated_Source\PSoC5/ETH.c **** 			while (digit[dindex] != 0) {
 2748              		.loc 1 1218 0
 2749 0098 1EE0     		b	.L106
 2750              	.L107:
1219:.\Generated_Source\PSoC5/ETH.c **** 				ip[counter] = (ip[counter]*10) + (digit[dindex]-'0');
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 71


 2751              		.loc 1 1219 0
 2752 009a 07F10802 		add	r2, r7, #8
 2753 009e BB69     		ldr	r3, [r7, #24]
 2754 00a0 D318     		adds	r3, r2, r3
 2755 00a2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2756 00a4 1A46     		mov	r2, r3
 2757 00a6 4FEA8202 		lsl	r2, r2, #2
 2758 00aa D318     		adds	r3, r2, r3
 2759 00ac 4FEA4303 		lsl	r3, r3, #1
 2760 00b0 DAB2     		uxtb	r2, r3
 2761 00b2 07F10C01 		add	r1, r7, #12
 2762 00b6 7B69     		ldr	r3, [r7, #20]
 2763 00b8 CB18     		adds	r3, r1, r3
 2764 00ba 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2765 00bc D318     		adds	r3, r2, r3
 2766 00be DBB2     		uxtb	r3, r3
 2767 00c0 A3F13003 		sub	r3, r3, #48
 2768 00c4 DAB2     		uxtb	r2, r3
 2769 00c6 07F10801 		add	r1, r7, #8
 2770 00ca BB69     		ldr	r3, [r7, #24]
 2771 00cc CB18     		adds	r3, r1, r3
 2772 00ce 1A70     		strb	r2, [r3, #0]
1220:.\Generated_Source\PSoC5/ETH.c **** 				++dindex;
 2773              		.loc 1 1220 0
 2774 00d0 7B69     		ldr	r3, [r7, #20]
 2775 00d2 03F10103 		add	r3, r3, #1
 2776 00d6 7B61     		str	r3, [r7, #20]
 2777              	.L106:
1218:.\Generated_Source\PSoC5/ETH.c **** 			while (digit[dindex] != 0) {
 2778              		.loc 1 1218 0 discriminator 1
 2779 00d8 07F10C02 		add	r2, r7, #12
 2780 00dc 7B69     		ldr	r3, [r7, #20]
 2781 00de D318     		adds	r3, r2, r3
 2782 00e0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2783 00e2 002B     		cmp	r3, #0
 2784 00e4 D9D1     		bne	.L107
1221:.\Generated_Source\PSoC5/ETH.c **** 				// ip[counter] = ...
1222:.\Generated_Source\PSoC5/ETH.c **** 			}
1223:.\Generated_Source\PSoC5/ETH.c **** 			/* reset the digit index to start accumulating digits again*/
1224:.\Generated_Source\PSoC5/ETH.c **** 			dindex = 0;
 2785              		.loc 1 1224 0
 2786 00e6 4FF00003 		mov	r3, #0
 2787 00ea 7B61     		str	r3, [r7, #20]
1225:.\Generated_Source\PSoC5/ETH.c **** 			/* move to the next address byte */
1226:.\Generated_Source\PSoC5/ETH.c **** 			++counter;
 2788              		.loc 1 1226 0
 2789 00ec BB69     		ldr	r3, [r7, #24]
 2790 00ee 03F10103 		add	r3, r3, #1
 2791 00f2 BB61     		str	r3, [r7, #24]
 2792              	.L105:
1227:.\Generated_Source\PSoC5/ETH.c **** 		}
1228:.\Generated_Source\PSoC5/ETH.c **** 		++index;
 2793              		.loc 1 1228 0
 2794 00f4 FB69     		ldr	r3, [r7, #28]
 2795 00f6 03F10103 		add	r3, r3, #1
 2796 00fa FB61     		str	r3, [r7, #28]
 2797              	.L100:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 72


1206:.\Generated_Source\PSoC5/ETH.c **** 	while ( (counter < 4) && ((unsigned int)index < strlen(ipString) ) ) {
 2798              		.loc 1 1206 0 discriminator 1
 2799 00fc BB69     		ldr	r3, [r7, #24]
 2800 00fe 032B     		cmp	r3, #3
 2801 0100 06DC     		bgt	.L108
1206:.\Generated_Source\PSoC5/ETH.c **** 	while ( (counter < 4) && ((unsigned int)index < strlen(ipString) ) ) {
 2802              		.loc 1 1206 0 is_stmt 0 discriminator 2
 2803 0102 FC69     		ldr	r4, [r7, #28]
 2804 0104 7868     		ldr	r0, [r7, #4]
 2805 0106 FFF7FEFF 		bl	strlen
 2806 010a 0346     		mov	r3, r0
 2807 010c 9C42     		cmp	r4, r3
 2808 010e 85D3     		bcc	.L109
 2809              	.L108:
1229:.\Generated_Source\PSoC5/ETH.c **** 	}
1230:.\Generated_Source\PSoC5/ETH.c **** 	
1231:.\Generated_Source\PSoC5/ETH.c **** 	if (counter != 4) {
 2810              		.loc 1 1231 0 is_stmt 1
 2811 0110 BB69     		ldr	r3, [r7, #24]
 2812 0112 042B     		cmp	r3, #4
 2813 0114 02D0     		beq	.L110
1232:.\Generated_Source\PSoC5/ETH.c **** 		return( 0xFFFFFFFF );
 2814              		.loc 1 1232 0
 2815 0116 4FF0FF33 		mov	r3, #-1
 2816 011a 13E0     		b	.L111
 2817              	.L110:
1233:.\Generated_Source\PSoC5/ETH.c **** 	}
1234:.\Generated_Source\PSoC5/ETH.c **** 	else {
1235:.\Generated_Source\PSoC5/ETH.c **** 		return( ETH_IPADDRESS(ip[0], ip[1], ip[2], ip[3]) );
 2818              		.loc 1 1235 0
 2819 011c 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 2820 011e 1A46     		mov	r2, r3
 2821 0120 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 2822 0122 4FEA0323 		lsl	r3, r3, #8
 2823 0126 4FEA0343 		lsl	r3, r3, #16
 2824 012a 4FEA1343 		lsr	r3, r3, #16
 2825 012e D218     		adds	r2, r2, r3
 2826 0130 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 2827 0132 4FEA0343 		lsl	r3, r3, #16
 2828 0136 03F47F03 		and	r3, r3, #16711680
 2829 013a D218     		adds	r2, r2, r3
 2830 013c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2831 013e 4FEA0363 		lsl	r3, r3, #24
 2832 0142 D318     		adds	r3, r2, r3
 2833              	.L111:
1236:.\Generated_Source\PSoC5/ETH.c **** 	}
1237:.\Generated_Source\PSoC5/ETH.c **** }
 2834              		.loc 1 1237 0
 2835 0144 1846     		mov	r0, r3
 2836 0146 07F12407 		add	r7, r7, #36
 2837 014a BD46     		mov	sp, r7
 2838 014c 90BD     		pop	{r4, r7, pc}
 2839              		.cfi_endproc
 2840              	.LFE46:
 2841              		.size	ETH_ParseIP, .-ETH_ParseIP
 2842 014e 00BF     		.section	.text.ETH_ParseMAC,"ax",%progbits
 2843              		.align	2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 73


 2844              		.global	ETH_ParseMAC
 2845              		.thumb
 2846              		.thumb_func
 2847              		.type	ETH_ParseMAC, %function
 2848              	ETH_ParseMAC:
 2849              	.LFB47:
1238:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1239:.\Generated_Source\PSoC5/ETH.c **** /**
1240:.\Generated_Source\PSoC5/ETH.c ****  * /brief Parse a MAC Address string in to a 6-byte mac address
1241:.\Generated_Source\PSoC5/ETH.c ****  * /param *macString Pointer to the ASCII-Z String containing the MAC address
1242:.\Generated_Source\PSoC5/ETH.c ****  * /param *mac Pointer to the 6-byte array to hold the output mac addres
1243:.\Generated_Source\PSoC5/ETH.c ****  */
1244:.\Generated_Source\PSoC5/ETH.c **** cystatus ETH_ParseMAC(const char *macString, uint8 *mac)
1245:.\Generated_Source\PSoC5/ETH.c **** {
 2850              		.loc 1 1245 0
 2851              		.cfi_startproc
 2852              		@ args = 0, pretend = 0, frame = 24
 2853              		@ frame_needed = 1, uses_anonymous_args = 0
 2854              		@ link register save eliminated.
 2855 0000 80B4     		push	{r7}
 2856              	.LCFI139:
 2857              		.cfi_def_cfa_offset 4
 2858              		.cfi_offset 7, -4
 2859 0002 87B0     		sub	sp, sp, #28
 2860              	.LCFI140:
 2861              		.cfi_def_cfa_offset 32
 2862 0004 00AF     		add	r7, sp, #0
 2863              	.LCFI141:
 2864              		.cfi_def_cfa_register 7
 2865 0006 7860     		str	r0, [r7, #4]
 2866 0008 3960     		str	r1, [r7, #0]
1246:.\Generated_Source\PSoC5/ETH.c **** 	/* 
1247:.\Generated_Source\PSoC5/ETH.c **** 	 * a mac address is specified as a string of 6 hex bytes with
1248:.\Generated_Source\PSoC5/ETH.c **** 	 * dashes ('-') seperating the bytes.  An invalidly formed
1249:.\Generated_Source\PSoC5/ETH.c **** 	 * address will only process the values up the error and return BAD_DATA
1250:.\Generated_Source\PSoC5/ETH.c **** 	 * otherwise, SUCESS is returned.
1251:.\Generated_Source\PSoC5/ETH.c **** 	 */
1252:.\Generated_Source\PSoC5/ETH.c **** 	int digit;
1253:.\Generated_Source\PSoC5/ETH.c **** 	int index;
1254:.\Generated_Source\PSoC5/ETH.c **** 	cystatus result;
1255:.\Generated_Source\PSoC5/ETH.c **** 	
1256:.\Generated_Source\PSoC5/ETH.c **** 	result = CYRET_SUCCESS;
 2867              		.loc 1 1256 0
 2868 000a 4FF00003 		mov	r3, #0
 2869 000e FB60     		str	r3, [r7, #12]
1257:.\Generated_Source\PSoC5/ETH.c **** 	index = 0;
 2870              		.loc 1 1257 0
 2871 0010 4FF00003 		mov	r3, #0
 2872 0014 3B61     		str	r3, [r7, #16]
1258:.\Generated_Source\PSoC5/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 2873              		.loc 1 1258 0
 2874 0016 4FF00003 		mov	r3, #0
 2875 001a 7B61     		str	r3, [r7, #20]
 2876 001c 09E1     		b	.L113
 2877              	.L139:
1259:.\Generated_Source\PSoC5/ETH.c **** 		// process the first nibble
1260:.\Generated_Source\PSoC5/ETH.c **** 		if (ETH_ISXDIGIT(macString[index]) ) {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 74


 2878              		.loc 1 1260 0
 2879 001e 3B69     		ldr	r3, [r7, #16]
 2880 0020 7A68     		ldr	r2, [r7, #4]
 2881 0022 D318     		adds	r3, r2, r3
 2882 0024 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2883 0026 2F2B     		cmp	r3, #47
 2884 0028 05D9     		bls	.L114
 2885              		.loc 1 1260 0 is_stmt 0 discriminator 1
 2886 002a 3B69     		ldr	r3, [r7, #16]
 2887 002c 7A68     		ldr	r2, [r7, #4]
 2888 002e D318     		adds	r3, r2, r3
 2889 0030 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2890 0032 392B     		cmp	r3, #57
 2891 0034 19D9     		bls	.L115
 2892              	.L114:
 2893              		.loc 1 1260 0 discriminator 2
 2894 0036 3B69     		ldr	r3, [r7, #16]
 2895 0038 7A68     		ldr	r2, [r7, #4]
 2896 003a D318     		adds	r3, r2, r3
 2897 003c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2898 003e 602B     		cmp	r3, #96
 2899 0040 05D9     		bls	.L116
 2900              		.loc 1 1260 0 discriminator 1
 2901 0042 3B69     		ldr	r3, [r7, #16]
 2902 0044 7A68     		ldr	r2, [r7, #4]
 2903 0046 D318     		adds	r3, r2, r3
 2904 0048 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2905 004a 662B     		cmp	r3, #102
 2906 004c 0DD9     		bls	.L115
 2907              	.L116:
 2908              		.loc 1 1260 0 discriminator 2
 2909 004e 3B69     		ldr	r3, [r7, #16]
 2910 0050 7A68     		ldr	r2, [r7, #4]
 2911 0052 D318     		adds	r3, r2, r3
 2912 0054 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2913 0056 402B     		cmp	r3, #64
 2914 0058 40F2E480 		bls	.L117
 2915              		.loc 1 1260 0 discriminator 3
 2916 005c 3B69     		ldr	r3, [r7, #16]
 2917 005e 7A68     		ldr	r2, [r7, #4]
 2918 0060 D318     		adds	r3, r2, r3
 2919 0062 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2920 0064 462B     		cmp	r3, #70
 2921 0066 00F2DD80 		bhi	.L117
 2922              	.L115:
1261:.\Generated_Source\PSoC5/ETH.c **** 			mac[digit] = ETH_HEX2BIN(macString[index]);
 2923              		.loc 1 1261 0 is_stmt 1
 2924 006a 7B69     		ldr	r3, [r7, #20]
 2925 006c 3A68     		ldr	r2, [r7, #0]
 2926 006e D218     		adds	r2, r2, r3
 2927 0070 3B69     		ldr	r3, [r7, #16]
 2928 0072 7968     		ldr	r1, [r7, #4]
 2929 0074 CB18     		adds	r3, r1, r3
 2930 0076 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2931 0078 2F2B     		cmp	r3, #47
 2932 007a 0DD9     		bls	.L118
 2933              		.loc 1 1261 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 75


 2934 007c 3B69     		ldr	r3, [r7, #16]
 2935 007e 7968     		ldr	r1, [r7, #4]
 2936 0080 CB18     		adds	r3, r1, r3
 2937 0082 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2938 0084 392B     		cmp	r3, #57
 2939 0086 07D8     		bhi	.L118
 2940 0088 3B69     		ldr	r3, [r7, #16]
 2941 008a 7968     		ldr	r1, [r7, #4]
 2942 008c CB18     		adds	r3, r1, r3
 2943 008e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2944 0090 A3F13003 		sub	r3, r3, #48
 2945 0094 DBB2     		uxtb	r3, r3
 2946 0096 29E0     		b	.L119
 2947              	.L118:
 2948              		.loc 1 1261 0 discriminator 2
 2949 0098 3B69     		ldr	r3, [r7, #16]
 2950 009a 7968     		ldr	r1, [r7, #4]
 2951 009c CB18     		adds	r3, r1, r3
 2952 009e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2953 00a0 602B     		cmp	r3, #96
 2954 00a2 0DD9     		bls	.L120
 2955              		.loc 1 1261 0 discriminator 4
 2956 00a4 3B69     		ldr	r3, [r7, #16]
 2957 00a6 7968     		ldr	r1, [r7, #4]
 2958 00a8 CB18     		adds	r3, r1, r3
 2959 00aa 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2960 00ac 662B     		cmp	r3, #102
 2961 00ae 07D8     		bhi	.L120
 2962              		.loc 1 1261 0 discriminator 2
 2963 00b0 3B69     		ldr	r3, [r7, #16]
 2964 00b2 7968     		ldr	r1, [r7, #4]
 2965 00b4 CB18     		adds	r3, r1, r3
 2966 00b6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2967 00b8 A3F15703 		sub	r3, r3, #87
 2968 00bc DBB2     		uxtb	r3, r3
 2969 00be 15E0     		b	.L121
 2970              	.L120:
 2971              		.loc 1 1261 0 discriminator 5
 2972 00c0 3B69     		ldr	r3, [r7, #16]
 2973 00c2 7968     		ldr	r1, [r7, #4]
 2974 00c4 CB18     		adds	r3, r1, r3
 2975 00c6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2976 00c8 402B     		cmp	r3, #64
 2977 00ca 0DD9     		bls	.L122
 2978              		.loc 1 1261 0 discriminator 7
 2979 00cc 3B69     		ldr	r3, [r7, #16]
 2980 00ce 7968     		ldr	r1, [r7, #4]
 2981 00d0 CB18     		adds	r3, r1, r3
 2982 00d2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2983 00d4 462B     		cmp	r3, #70
 2984 00d6 07D8     		bhi	.L122
 2985              		.loc 1 1261 0 discriminator 3
 2986 00d8 3B69     		ldr	r3, [r7, #16]
 2987 00da 7968     		ldr	r1, [r7, #4]
 2988 00dc CB18     		adds	r3, r1, r3
 2989 00de 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2990 00e0 A3F13703 		sub	r3, r3, #55
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 76


 2991 00e4 DBB2     		uxtb	r3, r3
 2992 00e6 01E0     		b	.L123
 2993              	.L122:
 2994              		.loc 1 1261 0 discriminator 8
 2995 00e8 4FF00003 		mov	r3, #0
 2996              	.L123:
 2997              	.L121:
 2998              	.L119:
 2999              		.loc 1 1261 0 discriminator 3
 3000 00ec 1370     		strb	r3, [r2, #0]
1262:.\Generated_Source\PSoC5/ETH.c **** 			++index;
 3001              		.loc 1 1262 0 is_stmt 1 discriminator 3
 3002 00ee 3B69     		ldr	r3, [r7, #16]
 3003 00f0 03F10103 		add	r3, r3, #1
 3004 00f4 3B61     		str	r3, [r7, #16]
1263:.\Generated_Source\PSoC5/ETH.c **** 			mac[digit] <<= 4;
 3005              		.loc 1 1263 0 discriminator 3
 3006 00f6 7B69     		ldr	r3, [r7, #20]
 3007 00f8 3A68     		ldr	r2, [r7, #0]
 3008 00fa D318     		adds	r3, r2, r3
 3009 00fc 7A69     		ldr	r2, [r7, #20]
 3010 00fe 3968     		ldr	r1, [r7, #0]
 3011 0100 8A18     		adds	r2, r1, r2
 3012 0102 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 3013 0104 4FEA0212 		lsl	r2, r2, #4
 3014 0108 D2B2     		uxtb	r2, r2
 3015 010a 1A70     		strb	r2, [r3, #0]
1264:.\Generated_Source\PSoC5/ETH.c **** 			if (ETH_ISXDIGIT(macString[index])) {
 3016              		.loc 1 1264 0 discriminator 3
 3017 010c 3B69     		ldr	r3, [r7, #16]
 3018 010e 7A68     		ldr	r2, [r7, #4]
 3019 0110 D318     		adds	r3, r2, r3
 3020 0112 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3021 0114 2F2B     		cmp	r3, #47
 3022 0116 05D9     		bls	.L124
 3023              		.loc 1 1264 0 is_stmt 0 discriminator 1
 3024 0118 3B69     		ldr	r3, [r7, #16]
 3025 011a 7A68     		ldr	r2, [r7, #4]
 3026 011c D318     		adds	r3, r2, r3
 3027 011e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3028 0120 392B     		cmp	r3, #57
 3029 0122 17D9     		bls	.L125
 3030              	.L124:
 3031              		.loc 1 1264 0 discriminator 2
 3032 0124 3B69     		ldr	r3, [r7, #16]
 3033 0126 7A68     		ldr	r2, [r7, #4]
 3034 0128 D318     		adds	r3, r2, r3
 3035 012a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3036 012c 602B     		cmp	r3, #96
 3037 012e 05D9     		bls	.L126
 3038              		.loc 1 1264 0 discriminator 1
 3039 0130 3B69     		ldr	r3, [r7, #16]
 3040 0132 7A68     		ldr	r2, [r7, #4]
 3041 0134 D318     		adds	r3, r2, r3
 3042 0136 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3043 0138 662B     		cmp	r3, #102
 3044 013a 0BD9     		bls	.L125
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 77


 3045              	.L126:
 3046              		.loc 1 1264 0 discriminator 2
 3047 013c 3B69     		ldr	r3, [r7, #16]
 3048 013e 7A68     		ldr	r2, [r7, #4]
 3049 0140 D318     		adds	r3, r2, r3
 3050 0142 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3051 0144 402B     		cmp	r3, #64
 3052 0146 68D9     		bls	.L127
 3053              		.loc 1 1264 0 discriminator 3
 3054 0148 3B69     		ldr	r3, [r7, #16]
 3055 014a 7A68     		ldr	r2, [r7, #4]
 3056 014c D318     		adds	r3, r2, r3
 3057 014e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3058 0150 462B     		cmp	r3, #70
 3059 0152 62D8     		bhi	.L127
 3060              	.L125:
1265:.\Generated_Source\PSoC5/ETH.c **** 				mac[digit] += ETH_HEX2BIN(macString[index]);
 3061              		.loc 1 1265 0 is_stmt 1
 3062 0154 7B69     		ldr	r3, [r7, #20]
 3063 0156 3A68     		ldr	r2, [r7, #0]
 3064 0158 D218     		adds	r2, r2, r3
 3065 015a 7B69     		ldr	r3, [r7, #20]
 3066 015c 3968     		ldr	r1, [r7, #0]
 3067 015e CB18     		adds	r3, r1, r3
 3068 0160 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 3069 0162 3B69     		ldr	r3, [r7, #16]
 3070 0164 7868     		ldr	r0, [r7, #4]
 3071 0166 C318     		adds	r3, r0, r3
 3072 0168 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3073 016a 2F2B     		cmp	r3, #47
 3074 016c 0DD9     		bls	.L128
 3075              		.loc 1 1265 0 is_stmt 0 discriminator 1
 3076 016e 3B69     		ldr	r3, [r7, #16]
 3077 0170 7868     		ldr	r0, [r7, #4]
 3078 0172 C318     		adds	r3, r0, r3
 3079 0174 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3080 0176 392B     		cmp	r3, #57
 3081 0178 07D8     		bhi	.L128
 3082 017a 3B69     		ldr	r3, [r7, #16]
 3083 017c 7868     		ldr	r0, [r7, #4]
 3084 017e C318     		adds	r3, r0, r3
 3085 0180 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3086 0182 A3F13003 		sub	r3, r3, #48
 3087 0186 DBB2     		uxtb	r3, r3
 3088 0188 29E0     		b	.L129
 3089              	.L128:
 3090              		.loc 1 1265 0 discriminator 2
 3091 018a 3B69     		ldr	r3, [r7, #16]
 3092 018c 7868     		ldr	r0, [r7, #4]
 3093 018e C318     		adds	r3, r0, r3
 3094 0190 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3095 0192 602B     		cmp	r3, #96
 3096 0194 0DD9     		bls	.L130
 3097              		.loc 1 1265 0 discriminator 4
 3098 0196 3B69     		ldr	r3, [r7, #16]
 3099 0198 7868     		ldr	r0, [r7, #4]
 3100 019a C318     		adds	r3, r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 78


 3101 019c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3102 019e 662B     		cmp	r3, #102
 3103 01a0 07D8     		bhi	.L130
 3104              		.loc 1 1265 0 discriminator 2
 3105 01a2 3B69     		ldr	r3, [r7, #16]
 3106 01a4 7868     		ldr	r0, [r7, #4]
 3107 01a6 C318     		adds	r3, r0, r3
 3108 01a8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3109 01aa A3F15703 		sub	r3, r3, #87
 3110 01ae DBB2     		uxtb	r3, r3
 3111 01b0 15E0     		b	.L131
 3112              	.L130:
 3113              		.loc 1 1265 0 discriminator 5
 3114 01b2 3B69     		ldr	r3, [r7, #16]
 3115 01b4 7868     		ldr	r0, [r7, #4]
 3116 01b6 C318     		adds	r3, r0, r3
 3117 01b8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3118 01ba 402B     		cmp	r3, #64
 3119 01bc 0DD9     		bls	.L132
 3120              		.loc 1 1265 0 discriminator 7
 3121 01be 3B69     		ldr	r3, [r7, #16]
 3122 01c0 7868     		ldr	r0, [r7, #4]
 3123 01c2 C318     		adds	r3, r0, r3
 3124 01c4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3125 01c6 462B     		cmp	r3, #70
 3126 01c8 07D8     		bhi	.L132
 3127              		.loc 1 1265 0 discriminator 3
 3128 01ca 3B69     		ldr	r3, [r7, #16]
 3129 01cc 7868     		ldr	r0, [r7, #4]
 3130 01ce C318     		adds	r3, r0, r3
 3131 01d0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3132 01d2 A3F13703 		sub	r3, r3, #55
 3133 01d6 DBB2     		uxtb	r3, r3
 3134 01d8 01E0     		b	.L133
 3135              	.L132:
 3136              		.loc 1 1265 0 discriminator 8
 3137 01da 4FF00003 		mov	r3, #0
 3138              	.L133:
 3139              	.L131:
 3140              	.L129:
 3141              		.loc 1 1265 0 discriminator 3
 3142 01de CB18     		adds	r3, r1, r3
 3143 01e0 DBB2     		uxtb	r3, r3
 3144 01e2 1370     		strb	r3, [r2, #0]
1266:.\Generated_Source\PSoC5/ETH.c **** 				++index;
 3145              		.loc 1 1266 0 is_stmt 1 discriminator 3
 3146 01e4 3B69     		ldr	r3, [r7, #16]
 3147 01e6 03F10103 		add	r3, r3, #1
 3148 01ea 3B61     		str	r3, [r7, #16]
1267:.\Generated_Source\PSoC5/ETH.c **** 				/*
1268:.\Generated_Source\PSoC5/ETH.c **** 				 * now for digits other than digit 5 (the last one) look for
1269:.\Generated_Source\PSoC5/ETH.c **** 				 * the dash seperator.  If there is no dash, return bad data
1270:.\Generated_Source\PSoC5/ETH.c **** 				 */
1271:.\Generated_Source\PSoC5/ETH.c **** 				if (digit<5) {
 3149              		.loc 1 1271 0 discriminator 3
 3150 01ec 7B69     		ldr	r3, [r7, #20]
 3151 01ee 042B     		cmp	r3, #4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 79


 3152 01f0 17DC     		bgt	.L136
1272:.\Generated_Source\PSoC5/ETH.c **** 					if( (macString[index]!='-') && (macString[index]!= ':') ){
 3153              		.loc 1 1272 0
 3154 01f2 3B69     		ldr	r3, [r7, #16]
 3155 01f4 7A68     		ldr	r2, [r7, #4]
 3156 01f6 D318     		adds	r3, r2, r3
 3157 01f8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3158 01fa 2D2B     		cmp	r3, #45
 3159 01fc 08D0     		beq	.L135
 3160              		.loc 1 1272 0 is_stmt 0 discriminator 1
 3161 01fe 3B69     		ldr	r3, [r7, #16]
 3162 0200 7A68     		ldr	r2, [r7, #4]
 3163 0202 D318     		adds	r3, r2, r3
 3164 0204 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3165 0206 3A2B     		cmp	r3, #58
 3166 0208 02D0     		beq	.L135
1273:.\Generated_Source\PSoC5/ETH.c **** 						result = CYRET_BAD_DATA;
 3167              		.loc 1 1273 0 is_stmt 1
 3168 020a 4FF00603 		mov	r3, #6
 3169 020e FB60     		str	r3, [r7, #12]
 3170              	.L135:
1274:.\Generated_Source\PSoC5/ETH.c **** 					}
1275:.\Generated_Source\PSoC5/ETH.c **** 					++index; // move conversion pointer to the next value
 3171              		.loc 1 1275 0
 3172 0210 3B69     		ldr	r3, [r7, #16]
 3173 0212 03F10103 		add	r3, r3, #1
 3174 0216 3B61     		str	r3, [r7, #16]
1271:.\Generated_Source\PSoC5/ETH.c **** 				if (digit<5) {
 3175              		.loc 1 1271 0
 3176 0218 03E0     		b	.L136
 3177              	.L127:
1276:.\Generated_Source\PSoC5/ETH.c **** 				}
1277:.\Generated_Source\PSoC5/ETH.c **** 			}
1278:.\Generated_Source\PSoC5/ETH.c **** 			else {
1279:.\Generated_Source\PSoC5/ETH.c **** 				result = CYRET_BAD_DATA;
 3178              		.loc 1 1279 0
 3179 021a 4FF00603 		mov	r3, #6
 3180 021e FB60     		str	r3, [r7, #12]
1264:.\Generated_Source\PSoC5/ETH.c **** 			if (ETH_ISXDIGIT(macString[index])) {
 3181              		.loc 1 1264 0
 3182 0220 03E0     		b	.L137
 3183              	.L136:
 3184 0222 02E0     		b	.L137
 3185              	.L117:
1280:.\Generated_Source\PSoC5/ETH.c **** 			}
1281:.\Generated_Source\PSoC5/ETH.c **** 		}
1282:.\Generated_Source\PSoC5/ETH.c **** 		else {
1283:.\Generated_Source\PSoC5/ETH.c **** 			result = CYRET_BAD_DATA;
 3186              		.loc 1 1283 0
 3187 0224 4FF00603 		mov	r3, #6
 3188 0228 FB60     		str	r3, [r7, #12]
 3189              	.L137:
1258:.\Generated_Source\PSoC5/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3190              		.loc 1 1258 0
 3191 022a 7B69     		ldr	r3, [r7, #20]
 3192 022c 03F10103 		add	r3, r3, #1
 3193 0230 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 80


 3194              	.L113:
1258:.\Generated_Source\PSoC5/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3195              		.loc 1 1258 0 is_stmt 0 discriminator 1
 3196 0232 7B69     		ldr	r3, [r7, #20]
 3197 0234 052B     		cmp	r3, #5
 3198 0236 09DC     		bgt	.L138
1258:.\Generated_Source\PSoC5/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3199              		.loc 1 1258 0 discriminator 2
 3200 0238 FB68     		ldr	r3, [r7, #12]
 3201 023a 002B     		cmp	r3, #0
 3202 023c 06D1     		bne	.L138
1258:.\Generated_Source\PSoC5/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3203              		.loc 1 1258 0 discriminator 1
 3204 023e 3B69     		ldr	r3, [r7, #16]
 3205 0240 7A68     		ldr	r2, [r7, #4]
 3206 0242 D318     		adds	r3, r2, r3
 3207 0244 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3208 0246 002B     		cmp	r3, #0
 3209 0248 7FF4E9AE 		bne	.L139
 3210              	.L138:
1284:.\Generated_Source\PSoC5/ETH.c **** 		}
1285:.\Generated_Source\PSoC5/ETH.c **** 	}
1286:.\Generated_Source\PSoC5/ETH.c **** 	return( result );
 3211              		.loc 1 1286 0 is_stmt 1
 3212 024c FB68     		ldr	r3, [r7, #12]
1287:.\Generated_Source\PSoC5/ETH.c **** }
 3213              		.loc 1 1287 0
 3214 024e 1846     		mov	r0, r3
 3215 0250 07F11C07 		add	r7, r7, #28
 3216 0254 BD46     		mov	sp, r7
 3217 0256 80BC     		pop	{r7}
 3218 0258 7047     		bx	lr
 3219              		.cfi_endproc
 3220              	.LFE47:
 3221              		.size	ETH_ParseMAC, .-ETH_ParseMAC
 3222 025a 00BF     		.section	.text.ETH_StringMAC,"ax",%progbits
 3223              		.align	2
 3224              		.global	ETH_StringMAC
 3225              		.thumb
 3226              		.thumb_func
 3227              		.type	ETH_StringMAC, %function
 3228              	ETH_StringMAC:
 3229              	.LFB48:
1288:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1289:.\Generated_Source\PSoC5/ETH.c **** void ETH_StringMAC(uint8 *mac, char *macString)
1290:.\Generated_Source\PSoC5/ETH.c **** {
 3230              		.loc 1 1290 0
 3231              		.cfi_startproc
 3232              		@ args = 0, pretend = 0, frame = 16
 3233              		@ frame_needed = 1, uses_anonymous_args = 0
 3234              		@ link register save eliminated.
 3235 0000 80B4     		push	{r7}
 3236              	.LCFI142:
 3237              		.cfi_def_cfa_offset 4
 3238              		.cfi_offset 7, -4
 3239 0002 85B0     		sub	sp, sp, #20
 3240              	.LCFI143:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 81


 3241              		.cfi_def_cfa_offset 24
 3242 0004 00AF     		add	r7, sp, #0
 3243              	.LCFI144:
 3244              		.cfi_def_cfa_register 7
 3245 0006 7860     		str	r0, [r7, #4]
 3246 0008 3960     		str	r1, [r7, #0]
1291:.\Generated_Source\PSoC5/ETH.c **** 	int digit;
1292:.\Generated_Source\PSoC5/ETH.c **** 	int index;
1293:.\Generated_Source\PSoC5/ETH.c **** 	
1294:.\Generated_Source\PSoC5/ETH.c **** 	/*
1295:.\Generated_Source\PSoC5/ETH.c **** 	 * Convert the MAC address specified in to a string
1296:.\Generated_Source\PSoC5/ETH.c **** 	 */
1297:.\Generated_Source\PSoC5/ETH.c **** 	index = 0;
 3247              		.loc 1 1297 0
 3248 000a 4FF00003 		mov	r3, #0
 3249 000e BB60     		str	r3, [r7, #8]
1298:.\Generated_Source\PSoC5/ETH.c **** 	for(digit=0;digit<6;++digit) {
 3250              		.loc 1 1298 0
 3251 0010 4FF00003 		mov	r3, #0
 3252 0014 FB60     		str	r3, [r7, #12]
 3253 0016 64E0     		b	.L142
 3254              	.L149:
1299:.\Generated_Source\PSoC5/ETH.c **** 		// convert the first nibble
1300:.\Generated_Source\PSoC5/ETH.c **** 		macString[index++] = ETH_BIN2HEX(((mac[digit]>>4)&0x0F));
 3255              		.loc 1 1300 0
 3256 0018 BB68     		ldr	r3, [r7, #8]
 3257 001a 3A68     		ldr	r2, [r7, #0]
 3258 001c D218     		adds	r2, r2, r3
 3259 001e FB68     		ldr	r3, [r7, #12]
 3260 0020 7968     		ldr	r1, [r7, #4]
 3261 0022 CB18     		adds	r3, r1, r3
 3262 0024 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3263 0026 4FEA1313 		lsr	r3, r3, #4
 3264 002a DBB2     		uxtb	r3, r3
 3265 002c 03F00F03 		and	r3, r3, #15
 3266 0030 092B     		cmp	r3, #9
 3267 0032 0ADD     		ble	.L143
 3268              		.loc 1 1300 0 is_stmt 0 discriminator 1
 3269 0034 FB68     		ldr	r3, [r7, #12]
 3270 0036 7968     		ldr	r1, [r7, #4]
 3271 0038 CB18     		adds	r3, r1, r3
 3272 003a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3273 003c 4FEA1313 		lsr	r3, r3, #4
 3274 0040 DBB2     		uxtb	r3, r3
 3275 0042 03F13703 		add	r3, r3, #55
 3276 0046 DBB2     		uxtb	r3, r3
 3277 0048 09E0     		b	.L144
 3278              	.L143:
 3279              		.loc 1 1300 0 discriminator 2
 3280 004a FB68     		ldr	r3, [r7, #12]
 3281 004c 7968     		ldr	r1, [r7, #4]
 3282 004e CB18     		adds	r3, r1, r3
 3283 0050 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3284 0052 4FEA1313 		lsr	r3, r3, #4
 3285 0056 DBB2     		uxtb	r3, r3
 3286 0058 03F13003 		add	r3, r3, #48
 3287 005c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 82


 3288              	.L144:
 3289              		.loc 1 1300 0 discriminator 3
 3290 005e 1370     		strb	r3, [r2, #0]
 3291 0060 BB68     		ldr	r3, [r7, #8]
 3292 0062 03F10103 		add	r3, r3, #1
 3293 0066 BB60     		str	r3, [r7, #8]
1301:.\Generated_Source\PSoC5/ETH.c **** 		macString[index++] = ETH_BIN2HEX((mac[digit]&0x0F));
 3294              		.loc 1 1301 0 is_stmt 1 discriminator 3
 3295 0068 BB68     		ldr	r3, [r7, #8]
 3296 006a 3A68     		ldr	r2, [r7, #0]
 3297 006c D218     		adds	r2, r2, r3
 3298 006e FB68     		ldr	r3, [r7, #12]
 3299 0070 7968     		ldr	r1, [r7, #4]
 3300 0072 CB18     		adds	r3, r1, r3
 3301 0074 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3302 0076 03F00F03 		and	r3, r3, #15
 3303 007a 092B     		cmp	r3, #9
 3304 007c 0ADD     		ble	.L145
 3305              		.loc 1 1301 0 is_stmt 0 discriminator 1
 3306 007e FB68     		ldr	r3, [r7, #12]
 3307 0080 7968     		ldr	r1, [r7, #4]
 3308 0082 CB18     		adds	r3, r1, r3
 3309 0084 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3310 0086 03F00F03 		and	r3, r3, #15
 3311 008a DBB2     		uxtb	r3, r3
 3312 008c 03F13703 		add	r3, r3, #55
 3313 0090 DBB2     		uxtb	r3, r3
 3314 0092 09E0     		b	.L146
 3315              	.L145:
 3316              		.loc 1 1301 0 discriminator 2
 3317 0094 FB68     		ldr	r3, [r7, #12]
 3318 0096 7968     		ldr	r1, [r7, #4]
 3319 0098 CB18     		adds	r3, r1, r3
 3320 009a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3321 009c 03F00F03 		and	r3, r3, #15
 3322 00a0 DBB2     		uxtb	r3, r3
 3323 00a2 03F13003 		add	r3, r3, #48
 3324 00a6 DBB2     		uxtb	r3, r3
 3325              	.L146:
 3326              		.loc 1 1301 0 discriminator 3
 3327 00a8 1370     		strb	r3, [r2, #0]
 3328 00aa BB68     		ldr	r3, [r7, #8]
 3329 00ac 03F10103 		add	r3, r3, #1
 3330 00b0 BB60     		str	r3, [r7, #8]
1302:.\Generated_Source\PSoC5/ETH.c **** 		if (digit<5) {
 3331              		.loc 1 1302 0 is_stmt 1 discriminator 3
 3332 00b2 FB68     		ldr	r3, [r7, #12]
 3333 00b4 042B     		cmp	r3, #4
 3334 00b6 0ADC     		bgt	.L147
1303:.\Generated_Source\PSoC5/ETH.c **** 			macString[index++] = '-';
 3335              		.loc 1 1303 0
 3336 00b8 BB68     		ldr	r3, [r7, #8]
 3337 00ba 3A68     		ldr	r2, [r7, #0]
 3338 00bc D318     		adds	r3, r2, r3
 3339 00be 4FF02D02 		mov	r2, #45
 3340 00c2 1A70     		strb	r2, [r3, #0]
 3341 00c4 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 83


 3342 00c6 03F10103 		add	r3, r3, #1
 3343 00ca BB60     		str	r3, [r7, #8]
 3344 00cc 05E0     		b	.L148
 3345              	.L147:
1304:.\Generated_Source\PSoC5/ETH.c **** 		}
1305:.\Generated_Source\PSoC5/ETH.c **** 		else {
1306:.\Generated_Source\PSoC5/ETH.c **** 			macString[index] = 0;
 3346              		.loc 1 1306 0
 3347 00ce BB68     		ldr	r3, [r7, #8]
 3348 00d0 3A68     		ldr	r2, [r7, #0]
 3349 00d2 D318     		adds	r3, r2, r3
 3350 00d4 4FF00002 		mov	r2, #0
 3351 00d8 1A70     		strb	r2, [r3, #0]
 3352              	.L148:
1298:.\Generated_Source\PSoC5/ETH.c **** 	for(digit=0;digit<6;++digit) {
 3353              		.loc 1 1298 0
 3354 00da FB68     		ldr	r3, [r7, #12]
 3355 00dc 03F10103 		add	r3, r3, #1
 3356 00e0 FB60     		str	r3, [r7, #12]
 3357              	.L142:
1298:.\Generated_Source\PSoC5/ETH.c **** 	for(digit=0;digit<6;++digit) {
 3358              		.loc 1 1298 0 is_stmt 0 discriminator 1
 3359 00e2 FB68     		ldr	r3, [r7, #12]
 3360 00e4 052B     		cmp	r3, #5
 3361 00e6 97DD     		ble	.L149
1307:.\Generated_Source\PSoC5/ETH.c **** 		}
1308:.\Generated_Source\PSoC5/ETH.c **** 	}
1309:.\Generated_Source\PSoC5/ETH.c **** }
 3362              		.loc 1 1309 0 is_stmt 1
 3363 00e8 07F11407 		add	r7, r7, #20
 3364 00ec BD46     		mov	sp, r7
 3365 00ee 80BC     		pop	{r7}
 3366 00f0 7047     		bx	lr
 3367              		.cfi_endproc
 3368              	.LFE48:
 3369              		.size	ETH_StringMAC, .-ETH_StringMAC
 3370 00f2 00BF     		.section	.text.ETH_StringIP,"ax",%progbits
 3371              		.align	2
 3372              		.global	ETH_StringIP
 3373              		.thumb
 3374              		.thumb_func
 3375              		.type	ETH_StringIP, %function
 3376              	ETH_StringIP:
 3377              	.LFB49:
1310:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1311:.\Generated_Source\PSoC5/ETH.c **** void ETH_StringIP( uint32 ip, char *ipString )
1312:.\Generated_Source\PSoC5/ETH.c **** {
 3378              		.loc 1 1312 0
 3379              		.cfi_startproc
 3380              		@ args = 0, pretend = 0, frame = 32
 3381              		@ frame_needed = 1, uses_anonymous_args = 0
 3382              		@ link register save eliminated.
 3383 0000 80B4     		push	{r7}
 3384              	.LCFI145:
 3385              		.cfi_def_cfa_offset 4
 3386              		.cfi_offset 7, -4
 3387 0002 89B0     		sub	sp, sp, #36
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 84


 3388              	.LCFI146:
 3389              		.cfi_def_cfa_offset 40
 3390 0004 00AF     		add	r7, sp, #0
 3391              	.LCFI147:
 3392              		.cfi_def_cfa_register 7
 3393 0006 7860     		str	r0, [r7, #4]
 3394 0008 3960     		str	r1, [r7, #0]
1313:.\Generated_Source\PSoC5/ETH.c **** 	uint8 *ipBytes;
1314:.\Generated_Source\PSoC5/ETH.c **** 	int index;
1315:.\Generated_Source\PSoC5/ETH.c **** 	int digit;
1316:.\Generated_Source\PSoC5/ETH.c **** 	int work, temp;
1317:.\Generated_Source\PSoC5/ETH.c **** 	
1318:.\Generated_Source\PSoC5/ETH.c **** 	ipBytes = (uint8*)&ip;
 3395              		.loc 1 1318 0
 3396 000a 07F10403 		add	r3, r7, #4
 3397 000e 3B61     		str	r3, [r7, #16]
1319:.\Generated_Source\PSoC5/ETH.c **** 	index = 0;
 3398              		.loc 1 1319 0
 3399 0010 4FF00003 		mov	r3, #0
 3400 0014 FB61     		str	r3, [r7, #28]
1320:.\Generated_Source\PSoC5/ETH.c **** 	for(digit=0;digit<4;++digit) {
 3401              		.loc 1 1320 0
 3402 0016 4FF00003 		mov	r3, #0
 3403 001a BB61     		str	r3, [r7, #24]
 3404 001c 73E0     		b	.L151
 3405              	.L156:
1321:.\Generated_Source\PSoC5/ETH.c **** 		work = ipBytes[digit];
 3406              		.loc 1 1321 0
 3407 001e BB69     		ldr	r3, [r7, #24]
 3408 0020 3A69     		ldr	r2, [r7, #16]
 3409 0022 D318     		adds	r3, r2, r3
 3410 0024 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3411 0026 7B61     		str	r3, [r7, #20]
1322:.\Generated_Source\PSoC5/ETH.c **** 		if (work >= 100) {
 3412              		.loc 1 1322 0
 3413 0028 7B69     		ldr	r3, [r7, #20]
 3414 002a 632B     		cmp	r3, #99
 3415 002c 21DD     		ble	.L152
1323:.\Generated_Source\PSoC5/ETH.c **** 			temp = work/100;
 3416              		.loc 1 1323 0
 3417 002e 7A69     		ldr	r2, [r7, #20]
 3418 0030 48F21F53 		movw	r3, #34079
 3419 0034 C5F2EB13 		movt	r3, 20971
 3420 0038 83FB0213 		smull	r1, r3, r3, r2
 3421 003c 4FEA6311 		asr	r1, r3, #5
 3422 0040 4FEAE273 		asr	r3, r2, #31
 3423 0044 CB1A     		subs	r3, r1, r3
 3424 0046 FB60     		str	r3, [r7, #12]
1324:.\Generated_Source\PSoC5/ETH.c **** 			work -= (temp*100);
 3425              		.loc 1 1324 0
 3426 0048 FB68     		ldr	r3, [r7, #12]
 3427 004a 6FF06302 		mvn	r2, #99
 3428 004e 02FB03F3 		mul	r3, r2, r3
 3429 0052 7A69     		ldr	r2, [r7, #20]
 3430 0054 D318     		adds	r3, r2, r3
 3431 0056 7B61     		str	r3, [r7, #20]
1325:.\Generated_Source\PSoC5/ETH.c **** 			ipString[index++] = '0' + temp;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 85


 3432              		.loc 1 1325 0
 3433 0058 FB69     		ldr	r3, [r7, #28]
 3434 005a 3A68     		ldr	r2, [r7, #0]
 3435 005c D318     		adds	r3, r2, r3
 3436 005e FA68     		ldr	r2, [r7, #12]
 3437 0060 D2B2     		uxtb	r2, r2
 3438 0062 02F13002 		add	r2, r2, #48
 3439 0066 D2B2     		uxtb	r2, r2
 3440 0068 1A70     		strb	r2, [r3, #0]
 3441 006a FB69     		ldr	r3, [r7, #28]
 3442 006c 03F10103 		add	r3, r3, #1
 3443 0070 FB61     		str	r3, [r7, #28]
 3444              	.L152:
1326:.\Generated_Source\PSoC5/ETH.c **** 		}
1327:.\Generated_Source\PSoC5/ETH.c **** 		if (work >= 10) {
 3445              		.loc 1 1327 0
 3446 0072 7B69     		ldr	r3, [r7, #20]
 3447 0074 092B     		cmp	r3, #9
 3448 0076 21DD     		ble	.L153
1328:.\Generated_Source\PSoC5/ETH.c **** 			temp = work /10;
 3449              		.loc 1 1328 0
 3450 0078 7A69     		ldr	r2, [r7, #20]
 3451 007a 46F26763 		movw	r3, #26215
 3452 007e C6F26663 		movt	r3, 26214
 3453 0082 83FB0213 		smull	r1, r3, r3, r2
 3454 0086 4FEAA301 		asr	r1, r3, #2
 3455 008a 4FEAE273 		asr	r3, r2, #31
 3456 008e CB1A     		subs	r3, r1, r3
 3457 0090 FB60     		str	r3, [r7, #12]
1329:.\Generated_Source\PSoC5/ETH.c **** 			work -= (temp*10);
 3458              		.loc 1 1329 0
 3459 0092 FB68     		ldr	r3, [r7, #12]
 3460 0094 6FF00902 		mvn	r2, #9
 3461 0098 02FB03F3 		mul	r3, r2, r3
 3462 009c 7A69     		ldr	r2, [r7, #20]
 3463 009e D318     		adds	r3, r2, r3
 3464 00a0 7B61     		str	r3, [r7, #20]
1330:.\Generated_Source\PSoC5/ETH.c **** 			ipString[index++] = '0'+temp;
 3465              		.loc 1 1330 0
 3466 00a2 FB69     		ldr	r3, [r7, #28]
 3467 00a4 3A68     		ldr	r2, [r7, #0]
 3468 00a6 D318     		adds	r3, r2, r3
 3469 00a8 FA68     		ldr	r2, [r7, #12]
 3470 00aa D2B2     		uxtb	r2, r2
 3471 00ac 02F13002 		add	r2, r2, #48
 3472 00b0 D2B2     		uxtb	r2, r2
 3473 00b2 1A70     		strb	r2, [r3, #0]
 3474 00b4 FB69     		ldr	r3, [r7, #28]
 3475 00b6 03F10103 		add	r3, r3, #1
 3476 00ba FB61     		str	r3, [r7, #28]
 3477              	.L153:
1331:.\Generated_Source\PSoC5/ETH.c **** 		}
1332:.\Generated_Source\PSoC5/ETH.c **** 		ipString[index++] = '0'+work;
 3478              		.loc 1 1332 0
 3479 00bc FB69     		ldr	r3, [r7, #28]
 3480 00be 3A68     		ldr	r2, [r7, #0]
 3481 00c0 D318     		adds	r3, r2, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 86


 3482 00c2 7A69     		ldr	r2, [r7, #20]
 3483 00c4 D2B2     		uxtb	r2, r2
 3484 00c6 02F13002 		add	r2, r2, #48
 3485 00ca D2B2     		uxtb	r2, r2
 3486 00cc 1A70     		strb	r2, [r3, #0]
 3487 00ce FB69     		ldr	r3, [r7, #28]
 3488 00d0 03F10103 		add	r3, r3, #1
 3489 00d4 FB61     		str	r3, [r7, #28]
1333:.\Generated_Source\PSoC5/ETH.c **** 		if (digit <3) {
 3490              		.loc 1 1333 0
 3491 00d6 BB69     		ldr	r3, [r7, #24]
 3492 00d8 022B     		cmp	r3, #2
 3493 00da 0ADC     		bgt	.L154
1334:.\Generated_Source\PSoC5/ETH.c **** 			ipString[index++] = '.';
 3494              		.loc 1 1334 0
 3495 00dc FB69     		ldr	r3, [r7, #28]
 3496 00de 3A68     		ldr	r2, [r7, #0]
 3497 00e0 D318     		adds	r3, r2, r3
 3498 00e2 4FF02E02 		mov	r2, #46
 3499 00e6 1A70     		strb	r2, [r3, #0]
 3500 00e8 FB69     		ldr	r3, [r7, #28]
 3501 00ea 03F10103 		add	r3, r3, #1
 3502 00ee FB61     		str	r3, [r7, #28]
 3503 00f0 05E0     		b	.L155
 3504              	.L154:
1335:.\Generated_Source\PSoC5/ETH.c **** 		}
1336:.\Generated_Source\PSoC5/ETH.c **** 		else {
1337:.\Generated_Source\PSoC5/ETH.c **** 			ipString[index] = 0;
 3505              		.loc 1 1337 0
 3506 00f2 FB69     		ldr	r3, [r7, #28]
 3507 00f4 3A68     		ldr	r2, [r7, #0]
 3508 00f6 D318     		adds	r3, r2, r3
 3509 00f8 4FF00002 		mov	r2, #0
 3510 00fc 1A70     		strb	r2, [r3, #0]
 3511              	.L155:
1320:.\Generated_Source\PSoC5/ETH.c **** 	for(digit=0;digit<4;++digit) {
 3512              		.loc 1 1320 0
 3513 00fe BB69     		ldr	r3, [r7, #24]
 3514 0100 03F10103 		add	r3, r3, #1
 3515 0104 BB61     		str	r3, [r7, #24]
 3516              	.L151:
1320:.\Generated_Source\PSoC5/ETH.c **** 	for(digit=0;digit<4;++digit) {
 3517              		.loc 1 1320 0 is_stmt 0 discriminator 1
 3518 0106 BB69     		ldr	r3, [r7, #24]
 3519 0108 032B     		cmp	r3, #3
 3520 010a 88DD     		ble	.L156
1338:.\Generated_Source\PSoC5/ETH.c **** 		}
1339:.\Generated_Source\PSoC5/ETH.c **** 	}
1340:.\Generated_Source\PSoC5/ETH.c **** }
 3521              		.loc 1 1340 0 is_stmt 1
 3522 010c 07F12407 		add	r7, r7, #36
 3523 0110 BD46     		mov	sp, r7
 3524 0112 80BC     		pop	{r7}
 3525 0114 7047     		bx	lr
 3526              		.cfi_endproc
 3527              	.LFE49:
 3528              		.size	ETH_StringIP, .-ETH_StringIP
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 87


 3529 0116 00BF     		.section	.text.ETH_SetIP,"ax",%progbits
 3530              		.align	2
 3531              		.global	ETH_SetIP
 3532              		.thumb
 3533              		.thumb_func
 3534              		.type	ETH_SetIP, %function
 3535              	ETH_SetIP:
 3536              	.LFB50:
1341:.\Generated_Source\PSoC5/ETH.c **** 
1342:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1343:.\Generated_Source\PSoC5/ETH.c **** uint8
1344:.\Generated_Source\PSoC5/ETH.c **** ETH_SetIP( uint32 ip )
1345:.\Generated_Source\PSoC5/ETH.c **** {
 3537              		.loc 1 1345 0
 3538              		.cfi_startproc
 3539              		@ args = 0, pretend = 0, frame = 16
 3540              		@ frame_needed = 1, uses_anonymous_args = 0
 3541 0000 80B5     		push	{r7, lr}
 3542              	.LCFI148:
 3543              		.cfi_def_cfa_offset 8
 3544              		.cfi_offset 7, -8
 3545              		.cfi_offset 14, -4
 3546 0002 84B0     		sub	sp, sp, #16
 3547              	.LCFI149:
 3548              		.cfi_def_cfa_offset 24
 3549 0004 00AF     		add	r7, sp, #0
 3550              	.LCFI150:
 3551              		.cfi_def_cfa_register 7
 3552 0006 7860     		str	r0, [r7, #4]
1346:.\Generated_Source\PSoC5/ETH.c **** 	uint8 ok = 0;
 3553              		.loc 1 1346 0
 3554 0008 4FF00003 		mov	r3, #0
 3555 000c FB73     		strb	r3, [r7, #15]
1347:.\Generated_Source\PSoC5/ETH.c **** 	
1348:.\Generated_Source\PSoC5/ETH.c **** 	if ( ( ip != 0) && (ip != 0xFFFFFFFF) ) {
 3556              		.loc 1 1348 0
 3557 000e 7B68     		ldr	r3, [r7, #4]
 3558 0010 002B     		cmp	r3, #0
 3559 0012 09D0     		beq	.L158
 3560              		.loc 1 1348 0 is_stmt 0 discriminator 1
 3561 0014 7B68     		ldr	r3, [r7, #4]
 3562 0016 B3F1FF3F 		cmp	r3, #-1
 3563 001a 05D0     		beq	.L158
1349:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSourceIP( ip );
 3564              		.loc 1 1349 0 is_stmt 1
 3565 001c 7868     		ldr	r0, [r7, #4]
 3566 001e FFF7FEFF 		bl	ETH_SetSourceIP
1350:.\Generated_Source\PSoC5/ETH.c **** 		ok = 0xFF;
 3567              		.loc 1 1350 0
 3568 0022 4FF0FF03 		mov	r3, #255
 3569 0026 FB73     		strb	r3, [r7, #15]
 3570              	.L158:
1351:.\Generated_Source\PSoC5/ETH.c **** 	}
1352:.\Generated_Source\PSoC5/ETH.c **** 	
1353:.\Generated_Source\PSoC5/ETH.c **** 	return ok;
 3571              		.loc 1 1353 0
 3572 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 88


1354:.\Generated_Source\PSoC5/ETH.c **** }
 3573              		.loc 1 1354 0
 3574 002a 1846     		mov	r0, r3
 3575 002c 07F11007 		add	r7, r7, #16
 3576 0030 BD46     		mov	sp, r7
 3577 0032 80BD     		pop	{r7, pc}
 3578              		.cfi_endproc
 3579              	.LFE50:
 3580              		.size	ETH_SetIP, .-ETH_SetIP
 3581              		.section	.text.ETH_GetIP,"ax",%progbits
 3582              		.align	2
 3583              		.global	ETH_GetIP
 3584              		.thumb
 3585              		.thumb_func
 3586              		.type	ETH_GetIP, %function
 3587              	ETH_GetIP:
 3588              	.LFB51:
1355:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1356:.\Generated_Source\PSoC5/ETH.c **** uint32
1357:.\Generated_Source\PSoC5/ETH.c **** ETH_GetIP( void )
1358:.\Generated_Source\PSoC5/ETH.c **** {
 3589              		.loc 1 1358 0
 3590              		.cfi_startproc
 3591              		@ args = 0, pretend = 0, frame = 0
 3592              		@ frame_needed = 1, uses_anonymous_args = 0
 3593 0000 80B5     		push	{r7, lr}
 3594              	.LCFI151:
 3595              		.cfi_def_cfa_offset 8
 3596              		.cfi_offset 7, -8
 3597              		.cfi_offset 14, -4
 3598 0002 00AF     		add	r7, sp, #0
 3599              	.LCFI152:
 3600              		.cfi_def_cfa_register 7
1359:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_GetSourceIP();
 3601              		.loc 1 1359 0
 3602 0004 FFF7FEFF 		bl	ETH_GetSourceIP
 3603 0008 0346     		mov	r3, r0
1360:.\Generated_Source\PSoC5/ETH.c **** }
 3604              		.loc 1 1360 0
 3605 000a 1846     		mov	r0, r3
 3606 000c 80BD     		pop	{r7, pc}
 3607              		.cfi_endproc
 3608              	.LFE51:
 3609              		.size	ETH_GetIP, .-ETH_GetIP
 3610 000e 00BF     		.section	.text.ETH_SetMAC,"ax",%progbits
 3611              		.align	2
 3612              		.global	ETH_SetMAC
 3613              		.thumb
 3614              		.thumb_func
 3615              		.type	ETH_SetMAC, %function
 3616              	ETH_SetMAC:
 3617              	.LFB52:
1361:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1362:.\Generated_Source\PSoC5/ETH.c **** void
1363:.\Generated_Source\PSoC5/ETH.c **** ETH_SetMAC( uint8* mac )
1364:.\Generated_Source\PSoC5/ETH.c **** {
 3618              		.loc 1 1364 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 89


 3619              		.cfi_startproc
 3620              		@ args = 0, pretend = 0, frame = 8
 3621              		@ frame_needed = 1, uses_anonymous_args = 0
 3622 0000 80B5     		push	{r7, lr}
 3623              	.LCFI153:
 3624              		.cfi_def_cfa_offset 8
 3625              		.cfi_offset 7, -8
 3626              		.cfi_offset 14, -4
 3627 0002 82B0     		sub	sp, sp, #8
 3628              	.LCFI154:
 3629              		.cfi_def_cfa_offset 16
 3630 0004 00AF     		add	r7, sp, #0
 3631              	.LCFI155:
 3632              		.cfi_def_cfa_register 7
 3633 0006 7860     		str	r0, [r7, #4]
1365:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSourceMAC( mac );
 3634              		.loc 1 1365 0
 3635 0008 7868     		ldr	r0, [r7, #4]
 3636 000a FFF7FEFF 		bl	ETH_SetSourceMAC
1366:.\Generated_Source\PSoC5/ETH.c **** }
 3637              		.loc 1 1366 0
 3638 000e 07F10807 		add	r7, r7, #8
 3639 0012 BD46     		mov	sp, r7
 3640 0014 80BD     		pop	{r7, pc}
 3641              		.cfi_endproc
 3642              	.LFE52:
 3643              		.size	ETH_SetMAC, .-ETH_SetMAC
 3644 0016 00BF     		.section	.text.ETH_GetMAC,"ax",%progbits
 3645              		.align	2
 3646              		.global	ETH_GetMAC
 3647              		.thumb
 3648              		.thumb_func
 3649              		.type	ETH_GetMAC, %function
 3650              	ETH_GetMAC:
 3651              	.LFB53:
1367:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1368:.\Generated_Source\PSoC5/ETH.c **** void
1369:.\Generated_Source\PSoC5/ETH.c **** ETH_GetMAC( uint8* mac )
1370:.\Generated_Source\PSoC5/ETH.c **** {
 3652              		.loc 1 1370 0
 3653              		.cfi_startproc
 3654              		@ args = 0, pretend = 0, frame = 8
 3655              		@ frame_needed = 1, uses_anonymous_args = 0
 3656 0000 80B5     		push	{r7, lr}
 3657              	.LCFI156:
 3658              		.cfi_def_cfa_offset 8
 3659              		.cfi_offset 7, -8
 3660              		.cfi_offset 14, -4
 3661 0002 82B0     		sub	sp, sp, #8
 3662              	.LCFI157:
 3663              		.cfi_def_cfa_offset 16
 3664 0004 00AF     		add	r7, sp, #0
 3665              	.LCFI158:
 3666              		.cfi_def_cfa_register 7
 3667 0006 7860     		str	r0, [r7, #4]
1371:.\Generated_Source\PSoC5/ETH.c **** 	ETH_GetSourceMAC( mac );
 3668              		.loc 1 1371 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 90


 3669 0008 7868     		ldr	r0, [r7, #4]
 3670 000a FFF7FEFF 		bl	ETH_GetSourceMAC
1372:.\Generated_Source\PSoC5/ETH.c **** }
 3671              		.loc 1 1372 0
 3672 000e 07F10807 		add	r7, r7, #8
 3673 0012 BD46     		mov	sp, r7
 3674 0014 80BD     		pop	{r7, pc}
 3675              		.cfi_endproc
 3676              	.LFE53:
 3677              		.size	ETH_GetMAC, .-ETH_GetMAC
 3678 0016 00BF     		.section	.text.ETH_SocketOpen,"ax",%progbits
 3679              		.align	2
 3680              		.global	ETH_SocketOpen
 3681              		.thumb
 3682              		.thumb_func
 3683              		.type	ETH_SocketOpen, %function
 3684              	ETH_SocketOpen:
 3685              	.LFB54:
1373:.\Generated_Source\PSoC5/ETH.c **** #endif
1374:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
1375:.\Generated_Source\PSoC5/ETH.c **** /* Socket Controls */
1376:.\Generated_Source\PSoC5/ETH.c **** #if (1)
1377:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1378:.\Generated_Source\PSoC5/ETH.c **** uint8
1379:.\Generated_Source\PSoC5/ETH.c **** ETH_SocketOpen( uint8 Protocol, uint16 port, uint8 flags )
1380:.\Generated_Source\PSoC5/ETH.c **** {
 3686              		.loc 1 1380 0
 3687              		.cfi_startproc
 3688              		@ args = 0, pretend = 0, frame = 16
 3689              		@ frame_needed = 1, uses_anonymous_args = 0
 3690 0000 80B5     		push	{r7, lr}
 3691              	.LCFI159:
 3692              		.cfi_def_cfa_offset 8
 3693              		.cfi_offset 7, -8
 3694              		.cfi_offset 14, -4
 3695 0002 84B0     		sub	sp, sp, #16
 3696              	.LCFI160:
 3697              		.cfi_def_cfa_offset 24
 3698 0004 00AF     		add	r7, sp, #0
 3699              	.LCFI161:
 3700              		.cfi_def_cfa_register 7
 3701 0006 1346     		mov	r3, r2
 3702 0008 0246     		mov	r2, r0
 3703 000a FA71     		strb	r2, [r7, #7]
 3704 000c 0A46     		mov	r2, r1	@ movhi
 3705 000e BA80     		strh	r2, [r7, #4]	@ movhi
 3706 0010 BB71     		strb	r3, [r7, #6]
1381:.\Generated_Source\PSoC5/ETH.c **** 	uint8 socket;
1382:.\Generated_Source\PSoC5/ETH.c **** 	int index;
1383:.\Generated_Source\PSoC5/ETH.c **** 	
1384:.\Generated_Source\PSoC5/ETH.c **** 	/*
1385:.\Generated_Source\PSoC5/ETH.c **** 	 * This function will look for the first available socket for allocation
1386:.\Generated_Source\PSoC5/ETH.c **** 	 * using the defined protocol.  The socket configuration will then be
1387:.\Generated_Source\PSoC5/ETH.c **** 	 * initialized and saved in the allocation table. If the requested socket
1388:.\Generated_Source\PSoC5/ETH.c **** 	 * can not be initialized, 0xFF is returned
1389:.\Generated_Source\PSoC5/ETH.c **** 	 */
1390:.\Generated_Source\PSoC5/ETH.c **** 	socket = 0xFF;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 91


 3707              		.loc 1 1390 0
 3708 0012 4FF0FF03 		mov	r3, #255
 3709 0016 FB73     		strb	r3, [r7, #15]
1391:.\Generated_Source\PSoC5/ETH.c **** 	/* find the first available socket to open, and how much memory is available */
1392:.\Generated_Source\PSoC5/ETH.c **** 	for( index = 0;index<ETH_MAX_SOCKET;++index) {
 3710              		.loc 1 1392 0
 3711 0018 4FF00003 		mov	r3, #0
 3712 001c BB60     		str	r3, [r7, #8]
 3713 001e 17E0     		b	.L165
 3714              	.L168:
1393:.\Generated_Source\PSoC5/ETH.c **** 		if ( (socket == 0xFF) && (ETH_SocketConfig[index].Protocol == 0) ) {
 3715              		.loc 1 1393 0
 3716 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3717 0022 FF2B     		cmp	r3, #255
 3718 0024 10D1     		bne	.L166
 3719              		.loc 1 1393 0 is_stmt 0 discriminator 1
 3720 0026 40F20003 		movw	r3, #:lower16:ETH_SocketConfig
 3721 002a C0F20003 		movt	r3, #:upper16:ETH_SocketConfig
 3722 002e BA68     		ldr	r2, [r7, #8]
 3723 0030 13F83230 		ldrb	r3, [r3, r2, lsl #3]	@ zero_extendqisi2
 3724 0034 002B     		cmp	r3, #0
 3725 0036 07D1     		bne	.L166
1394:.\Generated_Source\PSoC5/ETH.c **** 			/*
1395:.\Generated_Source\PSoC5/ETH.c **** 			 * Since the W5100 does not support MAC mode commucications, check to see
1396:.\Generated_Source\PSoC5/ETH.c **** 			 * if the socket that is free was socket 0.  If the mac protocol was
1397:.\Generated_Source\PSoC5/ETH.c **** 			 * selected, ignore socket 0
1398:.\Generated_Source\PSoC5/ETH.c **** 			 */
1399:.\Generated_Source\PSoC5/ETH.c **** 			if ( (Protocol != ETH_PROTO_MAC) || (index != 0) ) {
 3726              		.loc 1 1399 0 is_stmt 1
 3727 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3728 003a 042B     		cmp	r3, #4
 3729 003c 02D1     		bne	.L167
 3730              		.loc 1 1399 0 is_stmt 0 discriminator 1
 3731 003e BB68     		ldr	r3, [r7, #8]
 3732 0040 002B     		cmp	r3, #0
 3733 0042 01D0     		beq	.L166
 3734              	.L167:
1400:.\Generated_Source\PSoC5/ETH.c **** 				/* store this socket number for allocation */
1401:.\Generated_Source\PSoC5/ETH.c **** 				socket = index;
 3735              		.loc 1 1401 0 is_stmt 1
 3736 0044 BB68     		ldr	r3, [r7, #8]
 3737 0046 FB73     		strb	r3, [r7, #15]
 3738              	.L166:
1392:.\Generated_Source\PSoC5/ETH.c **** 	for( index = 0;index<ETH_MAX_SOCKET;++index) {
 3739              		.loc 1 1392 0
 3740 0048 BB68     		ldr	r3, [r7, #8]
 3741 004a 03F10103 		add	r3, r3, #1
 3742 004e BB60     		str	r3, [r7, #8]
 3743              	.L165:
1392:.\Generated_Source\PSoC5/ETH.c **** 	for( index = 0;index<ETH_MAX_SOCKET;++index) {
 3744              		.loc 1 1392 0 is_stmt 0 discriminator 1
 3745 0050 BB68     		ldr	r3, [r7, #8]
 3746 0052 072B     		cmp	r3, #7
 3747 0054 E4DD     		ble	.L168
1402:.\Generated_Source\PSoC5/ETH.c **** 			}
1403:.\Generated_Source\PSoC5/ETH.c **** 		}
1404:.\Generated_Source\PSoC5/ETH.c **** 	}
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 92


1405:.\Generated_Source\PSoC5/ETH.c **** 	if (socket != 0xFF ) {
 3748              		.loc 1 1405 0 is_stmt 1
 3749 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3750 0058 FF2B     		cmp	r3, #255
 3751 005a 7BD0     		beq	.L169
1406:.\Generated_Source\PSoC5/ETH.c **** 		/* Store the socket information in the allocation table */
1407:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketConfig[socket].Protocol = Protocol;
 3752              		.loc 1 1407 0
 3753 005c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3754 005e 40F20003 		movw	r3, #:lower16:ETH_SocketConfig
 3755 0062 C0F20003 		movt	r3, #:upper16:ETH_SocketConfig
 3756 0066 F979     		ldrb	r1, [r7, #7]
 3757 0068 03F83210 		strb	r1, [r3, r2, lsl #3]
1408:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketConfig[socket].SocketFlags = flags;
 3758              		.loc 1 1408 0
 3759 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3760 006e 40F20002 		movw	r2, #:lower16:ETH_SocketConfig
 3761 0072 C0F20002 		movt	r2, #:upper16:ETH_SocketConfig
 3762 0076 4FEAC303 		lsl	r3, r3, #3
 3763 007a D318     		adds	r3, r2, r3
 3764 007c BA79     		ldrb	r2, [r7, #6]
 3765 007e 5A70     		strb	r2, [r3, #1]
1409:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketConfig[socket].SourcePort = port;
 3766              		.loc 1 1409 0
 3767 0080 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3768 0082 40F20002 		movw	r2, #:lower16:ETH_SocketConfig
 3769 0086 C0F20002 		movt	r2, #:upper16:ETH_SocketConfig
 3770 008a 4FEAC303 		lsl	r3, r3, #3
 3771 008e D318     		adds	r3, r2, r3
 3772 0090 BA88     		ldrh	r2, [r7, #4]	@ movhi
 3773 0092 5A80     		strh	r2, [r3, #2]	@ movhi
1410:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketConfig[socket].ServerFlag = 0;
 3774              		.loc 1 1410 0
 3775 0094 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3776 0096 40F20002 		movw	r2, #:lower16:ETH_SocketConfig
 3777 009a C0F20002 		movt	r2, #:upper16:ETH_SocketConfig
 3778 009e 4FEAC303 		lsl	r3, r3, #3
 3779 00a2 D318     		adds	r3, r2, r3
 3780 00a4 4FF00002 		mov	r2, #0
 3781 00a8 1A71     		strb	r2, [r3, #4]
1411:.\Generated_Source\PSoC5/ETH.c **** 
1412:.\Generated_Source\PSoC5/ETH.c **** 		/* Set the socket memory size */
1413:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketTxMemSize(socket, ETH_MEM_2K); /* 2K each */
 3782              		.loc 1 1413 0
 3783 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3784 00ac 1846     		mov	r0, r3
 3785 00ae 4FF00201 		mov	r1, #2
 3786 00b2 FFF7FEFF 		bl	ETH_SetSocketTxMemSize
1414:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketRxMemSize(socket, ETH_MEM_2K); /* 2K Each */
 3787              		.loc 1 1414 0
 3788 00b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3789 00b8 1846     		mov	r0, r3
 3790 00ba 4FF00201 		mov	r1, #2
 3791 00be FFF7FEFF 		bl	ETH_SetSocketRxMemSize
1415:.\Generated_Source\PSoC5/ETH.c **** 		/* Initialize the socket memeory pointers */
1416:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketRxReadPtr( socket, ETH_SOCKET_RX_BASE[index] );
 3792              		.loc 1 1416 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 93


 3793 00c2 40F20003 		movw	r3, #:lower16:ETH_SOCKET_RX_BASE
 3794 00c6 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_RX_BASE
 3795 00ca BA68     		ldr	r2, [r7, #8]
 3796 00cc 53F82230 		ldr	r3, [r3, r2, lsl #2]
 3797 00d0 9BB2     		uxth	r3, r3
 3798 00d2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3799 00d4 1046     		mov	r0, r2
 3800 00d6 1946     		mov	r1, r3
 3801 00d8 FFF7FEFF 		bl	ETH_SetSocketRxReadPtr
1417:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketRxWritePtr( socket, ETH_SOCKET_RX_BASE[index] );
 3802              		.loc 1 1417 0
 3803 00dc 40F20003 		movw	r3, #:lower16:ETH_SOCKET_RX_BASE
 3804 00e0 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_RX_BASE
 3805 00e4 BA68     		ldr	r2, [r7, #8]
 3806 00e6 53F82230 		ldr	r3, [r3, r2, lsl #2]
 3807 00ea 9BB2     		uxth	r3, r3
 3808 00ec FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3809 00ee 1046     		mov	r0, r2
 3810 00f0 1946     		mov	r1, r3
 3811 00f2 FFF7FEFF 		bl	ETH_SetSocketRxWritePtr
1418:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketTxReadPtr( socket, ETH_SOCKET_TX_BASE[index] );
 3812              		.loc 1 1418 0
 3813 00f6 40F20003 		movw	r3, #:lower16:ETH_SOCKET_TX_BASE
 3814 00fa C0F20003 		movt	r3, #:upper16:ETH_SOCKET_TX_BASE
 3815 00fe BA68     		ldr	r2, [r7, #8]
 3816 0100 53F82230 		ldr	r3, [r3, r2, lsl #2]
 3817 0104 9BB2     		uxth	r3, r3
 3818 0106 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3819 0108 1046     		mov	r0, r2
 3820 010a 1946     		mov	r1, r3
 3821 010c FFF7FEFF 		bl	ETH_SetSocketTxReadPtr
1419:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketTxWritePtr( socket, ETH_SOCKET_TX_BASE[index] );
 3822              		.loc 1 1419 0
 3823 0110 40F20003 		movw	r3, #:lower16:ETH_SOCKET_TX_BASE
 3824 0114 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_TX_BASE
 3825 0118 BA68     		ldr	r2, [r7, #8]
 3826 011a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 3827 011e 9BB2     		uxth	r3, r3
 3828 0120 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3829 0122 1046     		mov	r0, r2
 3830 0124 1946     		mov	r1, r3
 3831 0126 FFF7FEFF 		bl	ETH_SetSocketTxWritePtr
1420:.\Generated_Source\PSoC5/ETH.c **** 
1421:.\Generated_Source\PSoC5/ETH.c **** 		/* Send the socket open with the correct protocol information */
1422:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketSourcePort( socket, port );
 3832              		.loc 1 1422 0
 3833 012a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3834 012c BB88     		ldrh	r3, [r7, #4]
 3835 012e 1046     		mov	r0, r2
 3836 0130 1946     		mov	r1, r3
 3837 0132 FFF7FEFF 		bl	ETH_SetSocketSourcePort
1423:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketMode( socket, Protocol | flags );
 3838              		.loc 1 1423 0
 3839 0136 FA79     		ldrb	r2, [r7, #7]
 3840 0138 BB79     		ldrb	r3, [r7, #6]
 3841 013a 1343     		orrs	r3, r3, r2
 3842 013c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 94


 3843 013e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3844 0140 1046     		mov	r0, r2
 3845 0142 1946     		mov	r1, r3
 3846 0144 FFF7FEFF 		bl	ETH_SetSocketMode
1424:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 1 );
 3847              		.loc 1 1424 0
 3848 0148 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3849 014a 1846     		mov	r0, r3
 3850 014c 4FF00101 		mov	r1, #1
 3851 0150 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
 3852              	.L169:
1425:.\Generated_Source\PSoC5/ETH.c **** 		
1426:.\Generated_Source\PSoC5/ETH.c **** 	}
1427:.\Generated_Source\PSoC5/ETH.c **** 	return socket;
 3853              		.loc 1 1427 0
 3854 0154 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1428:.\Generated_Source\PSoC5/ETH.c **** }
 3855              		.loc 1 1428 0
 3856 0156 1846     		mov	r0, r3
 3857 0158 07F11007 		add	r7, r7, #16
 3858 015c BD46     		mov	sp, r7
 3859 015e 80BD     		pop	{r7, pc}
 3860              		.cfi_endproc
 3861              	.LFE54:
 3862              		.size	ETH_SocketOpen, .-ETH_SocketOpen
 3863              		.section	.text.ETH_SocketClose,"ax",%progbits
 3864              		.align	2
 3865              		.global	ETH_SocketClose
 3866              		.thumb
 3867              		.thumb_func
 3868              		.type	ETH_SocketClose, %function
 3869              	ETH_SocketClose:
 3870              	.LFB55:
1429:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1430:.\Generated_Source\PSoC5/ETH.c **** void
1431:.\Generated_Source\PSoC5/ETH.c **** ETH_SocketClose( uint8 socket )
1432:.\Generated_Source\PSoC5/ETH.c **** {
 3871              		.loc 1 1432 0
 3872              		.cfi_startproc
 3873              		@ args = 0, pretend = 0, frame = 8
 3874              		@ frame_needed = 1, uses_anonymous_args = 0
 3875 0000 80B5     		push	{r7, lr}
 3876              	.LCFI162:
 3877              		.cfi_def_cfa_offset 8
 3878              		.cfi_offset 7, -8
 3879              		.cfi_offset 14, -4
 3880 0002 82B0     		sub	sp, sp, #8
 3881              	.LCFI163:
 3882              		.cfi_def_cfa_offset 16
 3883 0004 00AF     		add	r7, sp, #0
 3884              	.LCFI164:
 3885              		.cfi_def_cfa_register 7
 3886 0006 0346     		mov	r3, r0
 3887 0008 FB71     		strb	r3, [r7, #7]
1433:.\Generated_Source\PSoC5/ETH.c **** 	/*
1434:.\Generated_Source\PSoC5/ETH.c **** 	 * Set the socket allocation to empty, and issue the close command
1435:.\Generated_Source\PSoC5/ETH.c **** 	 * to the socket
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 95


1436:.\Generated_Source\PSoC5/ETH.c **** 	 */
1437:.\Generated_Source\PSoC5/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 3888              		.loc 1 1437 0
 3889 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3890 000c 072B     		cmp	r3, #7
 3891 000e 1FD8     		bhi	.L171
1438:.\Generated_Source\PSoC5/ETH.c **** 		/* clear the socket memory allocations */
1439:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketConfig[socket].Protocol = 0;
 3892              		.loc 1 1439 0
 3893 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3894 0012 40F20003 		movw	r3, #:lower16:ETH_SocketConfig
 3895 0016 C0F20003 		movt	r3, #:upper16:ETH_SocketConfig
 3896 001a 4FF00001 		mov	r1, #0
 3897 001e 03F83210 		strb	r1, [r3, r2, lsl #3]
1440:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketConfig[socket].SocketFlags = 0;
 3898              		.loc 1 1440 0
 3899 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3900 0024 40F20002 		movw	r2, #:lower16:ETH_SocketConfig
 3901 0028 C0F20002 		movt	r2, #:upper16:ETH_SocketConfig
 3902 002c 4FEAC303 		lsl	r3, r3, #3
 3903 0030 D318     		adds	r3, r2, r3
 3904 0032 4FF00002 		mov	r2, #0
 3905 0036 5A70     		strb	r2, [r3, #1]
1441:.\Generated_Source\PSoC5/ETH.c **** 		/* close the socket */
1442:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x10 );
 3906              		.loc 1 1442 0
 3907 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3908 003a 1846     		mov	r0, r3
 3909 003c 4FF01001 		mov	r1, #16
 3910 0040 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1443:.\Generated_Source\PSoC5/ETH.c **** 		/* Clear pending Interrupts */
1444:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketIR( socket, 0xFF);
 3911              		.loc 1 1444 0
 3912 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3913 0046 1846     		mov	r0, r3
 3914 0048 4FF0FF01 		mov	r1, #255
 3915 004c FFF7FEFF 		bl	ETH_SetSocketIR
 3916              	.L171:
1445:.\Generated_Source\PSoC5/ETH.c **** 	}
1446:.\Generated_Source\PSoC5/ETH.c **** }
 3917              		.loc 1 1446 0
 3918 0050 07F10807 		add	r7, r7, #8
 3919 0054 BD46     		mov	sp, r7
 3920 0056 80BD     		pop	{r7, pc}
 3921              		.cfi_endproc
 3922              	.LFE55:
 3923              		.size	ETH_SocketClose, .-ETH_SocketClose
 3924              		.section	.text.ETH_SocketProcessConnections,"ax",%progbits
 3925              		.align	2
 3926              		.global	ETH_SocketProcessConnections
 3927              		.thumb
 3928              		.thumb_func
 3929              		.type	ETH_SocketProcessConnections, %function
 3930              	ETH_SocketProcessConnections:
 3931              	.LFB56:
1447:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1448:.\Generated_Source\PSoC5/ETH.c **** uint8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 96


1449:.\Generated_Source\PSoC5/ETH.c **** ETH_SocketProcessConnections( uint8 socket )
1450:.\Generated_Source\PSoC5/ETH.c **** {
 3932              		.loc 1 1450 0
 3933              		.cfi_startproc
 3934              		@ args = 0, pretend = 0, frame = 16
 3935              		@ frame_needed = 1, uses_anonymous_args = 0
 3936 0000 80B5     		push	{r7, lr}
 3937              	.LCFI165:
 3938              		.cfi_def_cfa_offset 8
 3939              		.cfi_offset 7, -8
 3940              		.cfi_offset 14, -4
 3941 0002 84B0     		sub	sp, sp, #16
 3942              	.LCFI166:
 3943              		.cfi_def_cfa_offset 24
 3944 0004 00AF     		add	r7, sp, #0
 3945              	.LCFI167:
 3946              		.cfi_def_cfa_register 7
 3947 0006 0346     		mov	r3, r0
 3948 0008 FB71     		strb	r3, [r7, #7]
1451:.\Generated_Source\PSoC5/ETH.c **** 	uint8 status;
1452:.\Generated_Source\PSoC5/ETH.c **** 	
1453:.\Generated_Source\PSoC5/ETH.c **** 	status = ETH_GetSocketStatus(socket);
 3949              		.loc 1 1453 0
 3950 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3951 000c 1846     		mov	r0, r3
 3952 000e FFF7FEFF 		bl	ETH_GetSocketStatus
 3953 0012 0346     		mov	r3, r0
 3954 0014 FB73     		strb	r3, [r7, #15]
1454:.\Generated_Source\PSoC5/ETH.c **** 	/* has a connection termination been requested by remote system */
1455:.\Generated_Source\PSoC5/ETH.c **** 	if (status == 0x1C) {
 3955              		.loc 1 1455 0
 3956 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3957 0018 1C2B     		cmp	r3, #28
 3958 001a 03D1     		bne	.L174
1456:.\Generated_Source\PSoC5/ETH.c **** 		/* Close the socket on this end */
1457:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketClose(socket);
 3959              		.loc 1 1457 0
 3960 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3961 001e 1846     		mov	r0, r3
 3962 0020 FFF7FEFF 		bl	ETH_SocketClose
 3963              	.L174:
1458:.\Generated_Source\PSoC5/ETH.c **** 	}
1459:.\Generated_Source\PSoC5/ETH.c **** 	return (ETH_GetSocketStatus(socket) == 0x00);
 3964              		.loc 1 1459 0
 3965 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3966 0026 1846     		mov	r0, r3
 3967 0028 FFF7FEFF 		bl	ETH_GetSocketStatus
 3968 002c 0346     		mov	r3, r0
 3969 002e 002B     		cmp	r3, #0
 3970 0030 14BF     		ite	ne
 3971 0032 0023     		movne	r3, #0
 3972 0034 0123     		moveq	r3, #1
 3973 0036 DBB2     		uxtb	r3, r3
1460:.\Generated_Source\PSoC5/ETH.c **** }
 3974              		.loc 1 1460 0
 3975 0038 1846     		mov	r0, r3
 3976 003a 07F11007 		add	r7, r7, #16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 97


 3977 003e BD46     		mov	sp, r7
 3978 0040 80BD     		pop	{r7, pc}
 3979              		.cfi_endproc
 3980              	.LFE56:
 3981              		.size	ETH_SocketProcessConnections, .-ETH_SocketProcessConnections
 3982 0042 00BF     		.section	.text.ETH_SocketEstablished,"ax",%progbits
 3983              		.align	2
 3984              		.global	ETH_SocketEstablished
 3985              		.thumb
 3986              		.thumb_func
 3987              		.type	ETH_SocketEstablished, %function
 3988              	ETH_SocketEstablished:
 3989              	.LFB57:
1461:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1462:.\Generated_Source\PSoC5/ETH.c **** uint8
1463:.\Generated_Source\PSoC5/ETH.c **** ETH_SocketEstablished( uint8 socket )
1464:.\Generated_Source\PSoC5/ETH.c **** {
 3990              		.loc 1 1464 0
 3991              		.cfi_startproc
 3992              		@ args = 0, pretend = 0, frame = 16
 3993              		@ frame_needed = 1, uses_anonymous_args = 0
 3994 0000 80B5     		push	{r7, lr}
 3995              	.LCFI168:
 3996              		.cfi_def_cfa_offset 8
 3997              		.cfi_offset 7, -8
 3998              		.cfi_offset 14, -4
 3999 0002 84B0     		sub	sp, sp, #16
 4000              	.LCFI169:
 4001              		.cfi_def_cfa_offset 24
 4002 0004 00AF     		add	r7, sp, #0
 4003              	.LCFI170:
 4004              		.cfi_def_cfa_register 7
 4005 0006 0346     		mov	r3, r0
 4006 0008 FB71     		strb	r3, [r7, #7]
1465:.\Generated_Source\PSoC5/ETH.c **** 	uint8 result;
1466:.\Generated_Source\PSoC5/ETH.c **** 	
1467:.\Generated_Source\PSoC5/ETH.c **** 	result = 0;
 4007              		.loc 1 1467 0
 4008 000a 4FF00003 		mov	r3, #0
 4009 000e FB73     		strb	r3, [r7, #15]
1468:.\Generated_Source\PSoC5/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 4010              		.loc 1 1468 0
 4011 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4012 0012 072B     		cmp	r3, #7
 4013 0014 05D8     		bhi	.L177
1469:.\Generated_Source\PSoC5/ETH.c **** 		result = ETH_GetSocketStatus( socket );
 4014              		.loc 1 1469 0
 4015 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4016 0018 1846     		mov	r0, r3
 4017 001a FFF7FEFF 		bl	ETH_GetSocketStatus
 4018 001e 0346     		mov	r3, r0
 4019 0020 FB73     		strb	r3, [r7, #15]
 4020              	.L177:
1470:.\Generated_Source\PSoC5/ETH.c **** 	}
1471:.\Generated_Source\PSoC5/ETH.c **** 	return( result == 0x17);
 4021              		.loc 1 1471 0
 4022 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 98


 4023 0024 172B     		cmp	r3, #23
 4024 0026 14BF     		ite	ne
 4025 0028 0023     		movne	r3, #0
 4026 002a 0123     		moveq	r3, #1
 4027 002c DBB2     		uxtb	r3, r3
1472:.\Generated_Source\PSoC5/ETH.c **** }
 4028              		.loc 1 1472 0
 4029 002e 1846     		mov	r0, r3
 4030 0030 07F11007 		add	r7, r7, #16
 4031 0034 BD46     		mov	sp, r7
 4032 0036 80BD     		pop	{r7, pc}
 4033              		.cfi_endproc
 4034              	.LFE57:
 4035              		.size	ETH_SocketEstablished, .-ETH_SocketEstablished
 4036              		.section	.text.ETH_SocketSend,"ax",%progbits
 4037              		.align	2
 4038              		.global	ETH_SocketSend
 4039              		.thumb
 4040              		.thumb_func
 4041              		.type	ETH_SocketSend, %function
 4042              	ETH_SocketSend:
 4043              	.LFB58:
1473:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1474:.\Generated_Source\PSoC5/ETH.c **** /**
1475:.\Generated_Source\PSoC5/ETH.c ****  * \brief Transmit a SEND operation over a socket
1476:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket to which the send command will be sent
1477:.\Generated_Source\PSoC5/ETH.c ****  */
1478:.\Generated_Source\PSoC5/ETH.c **** void
1479:.\Generated_Source\PSoC5/ETH.c **** ETH_SocketSend(uint8 socket )
1480:.\Generated_Source\PSoC5/ETH.c **** {
 4044              		.loc 1 1480 0
 4045              		.cfi_startproc
 4046              		@ args = 0, pretend = 0, frame = 16
 4047              		@ frame_needed = 1, uses_anonymous_args = 0
 4048 0000 80B5     		push	{r7, lr}
 4049              	.LCFI171:
 4050              		.cfi_def_cfa_offset 8
 4051              		.cfi_offset 7, -8
 4052              		.cfi_offset 14, -4
 4053 0002 84B0     		sub	sp, sp, #16
 4054              	.LCFI172:
 4055              		.cfi_def_cfa_offset 24
 4056 0004 00AF     		add	r7, sp, #0
 4057              	.LCFI173:
 4058              		.cfi_def_cfa_register 7
 4059 0006 0346     		mov	r3, r0
 4060 0008 FB71     		strb	r3, [r7, #7]
1481:.\Generated_Source\PSoC5/ETH.c **** 	uint8 ir;
1482:.\Generated_Source\PSoC5/ETH.c **** 	
1483:.\Generated_Source\PSoC5/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 4061              		.loc 1 1483 0
 4062 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4063 000c 072B     		cmp	r3, #7
 4064 000e 32D8     		bhi	.L179
1484:.\Generated_Source\PSoC5/ETH.c **** 		/* initialize the subnet mask register : ERRATA FIX */
1485:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSubnetMask( ETH_SubnetMask );
 4065              		.loc 1 1485 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 99


 4066 0010 40F20003 		movw	r3, #:lower16:ETH_SubnetMask
 4067 0014 C0F20003 		movt	r3, #:upper16:ETH_SubnetMask
 4068 0018 1B68     		ldr	r3, [r3, #0]
 4069 001a 1846     		mov	r0, r3
 4070 001c FFF7FEFF 		bl	ETH_SetSubnetMask
1486:.\Generated_Source\PSoC5/ETH.c **** 		/* Issue the SEND command */
1487:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x20 );
 4071              		.loc 1 1487 0
 4072 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4073 0022 1846     		mov	r0, r3
 4074 0024 4FF02001 		mov	r1, #32
 4075 0028 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1488:.\Generated_Source\PSoC5/ETH.c **** 		/* wait for the SEND to complete, or for a timeout */
1489:.\Generated_Source\PSoC5/ETH.c **** 		ir = ETH_GetSocketIR( socket );
 4076              		.loc 1 1489 0
 4077 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4078 002e 1846     		mov	r0, r3
 4079 0030 FFF7FEFF 		bl	ETH_GetSocketIR
 4080 0034 0346     		mov	r3, r0
 4081 0036 FB73     		strb	r3, [r7, #15]
1490:.\Generated_Source\PSoC5/ETH.c **** 		/* while SEND is not done, and the socket hasnot timed out or been dsconnected */
1491:.\Generated_Source\PSoC5/ETH.c **** 		while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4082              		.loc 1 1491 0
 4083 0038 09E0     		b	.L181
 4084              	.L183:
1492:.\Generated_Source\PSoC5/ETH.c **** 			CyDelay(1);
 4085              		.loc 1 1492 0
 4086 003a 4FF00100 		mov	r0, #1
 4087 003e FFF7FEFF 		bl	CyDelay
1493:.\Generated_Source\PSoC5/ETH.c **** 			ir = ETH_GetSocketIR( socket );
 4088              		.loc 1 1493 0
 4089 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4090 0044 1846     		mov	r0, r3
 4091 0046 FFF7FEFF 		bl	ETH_GetSocketIR
 4092 004a 0346     		mov	r3, r0
 4093 004c FB73     		strb	r3, [r7, #15]
 4094              	.L181:
1491:.\Generated_Source\PSoC5/ETH.c **** 		while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4095              		.loc 1 1491 0 discriminator 1
 4096 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4097 0050 03F01003 		and	r3, r3, #16
 4098 0054 002B     		cmp	r3, #0
 4099 0056 04D1     		bne	.L182
1491:.\Generated_Source\PSoC5/ETH.c **** 		while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4100              		.loc 1 1491 0 is_stmt 0 discriminator 2
 4101 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4102 005a 03F00A03 		and	r3, r3, #10
 4103 005e 002B     		cmp	r3, #0
 4104 0060 EBD0     		beq	.L183
 4105              	.L182:
1494:.\Generated_Source\PSoC5/ETH.c **** 			
1495:.\Generated_Source\PSoC5/ETH.c **** 		}
1496:.\Generated_Source\PSoC5/ETH.c **** 		/* clear the SEND_OK flag from the register */
1497:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketIR( socket, 0x10 );
 4106              		.loc 1 1497 0 is_stmt 1
 4107 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4108 0064 1846     		mov	r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 100


 4109 0066 4FF01001 		mov	r1, #16
 4110 006a FFF7FEFF 		bl	ETH_SetSocketIR
1498:.\Generated_Source\PSoC5/ETH.c **** 		/* reset the subnet mask : ERRATA FIX */
1499:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSubnetMask( 0 );
 4111              		.loc 1 1499 0
 4112 006e 4FF00000 		mov	r0, #0
 4113 0072 FFF7FEFF 		bl	ETH_SetSubnetMask
 4114              	.L179:
1500:.\Generated_Source\PSoC5/ETH.c **** 	}
1501:.\Generated_Source\PSoC5/ETH.c **** }
 4115              		.loc 1 1501 0
 4116 0076 07F11007 		add	r7, r7, #16
 4117 007a BD46     		mov	sp, r7
 4118 007c 80BD     		pop	{r7, pc}
 4119              		.cfi_endproc
 4120              	.LFE58:
 4121              		.size	ETH_SocketSend, .-ETH_SocketSend
 4122 007e 00BF     		.section	.text.ETH_SocketSendMac,"ax",%progbits
 4123              		.align	2
 4124              		.global	ETH_SocketSendMac
 4125              		.thumb
 4126              		.thumb_func
 4127              		.type	ETH_SocketSendMac, %function
 4128              	ETH_SocketSendMac:
 4129              	.LFB59:
1502:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1503:.\Generated_Source\PSoC5/ETH.c **** /**
1504:.\Generated_Source\PSoC5/ETH.c ****  * \brief Execute a SEND without an ARP.
1505:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket to which the SEND will be executed.
1506:.\Generated_Source\PSoC5/ETH.c ****  */
1507:.\Generated_Source\PSoC5/ETH.c **** void
1508:.\Generated_Source\PSoC5/ETH.c **** ETH_SocketSendMac(uint8 socket )
1509:.\Generated_Source\PSoC5/ETH.c **** {
 4130              		.loc 1 1509 0
 4131              		.cfi_startproc
 4132              		@ args = 0, pretend = 0, frame = 16
 4133              		@ frame_needed = 1, uses_anonymous_args = 0
 4134 0000 80B5     		push	{r7, lr}
 4135              	.LCFI174:
 4136              		.cfi_def_cfa_offset 8
 4137              		.cfi_offset 7, -8
 4138              		.cfi_offset 14, -4
 4139 0002 84B0     		sub	sp, sp, #16
 4140              	.LCFI175:
 4141              		.cfi_def_cfa_offset 24
 4142 0004 00AF     		add	r7, sp, #0
 4143              	.LCFI176:
 4144              		.cfi_def_cfa_register 7
 4145 0006 0346     		mov	r3, r0
 4146 0008 FB71     		strb	r3, [r7, #7]
1510:.\Generated_Source\PSoC5/ETH.c **** 	uint8 ir;
1511:.\Generated_Source\PSoC5/ETH.c **** 	
1512:.\Generated_Source\PSoC5/ETH.c **** 	/* initialize the subnet mask register : ERRATA FIX */
1513:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSubnetMask( ETH_SubnetMask );
 4147              		.loc 1 1513 0
 4148 000a 40F20003 		movw	r3, #:lower16:ETH_SubnetMask
 4149 000e C0F20003 		movt	r3, #:upper16:ETH_SubnetMask
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 101


 4150 0012 1B68     		ldr	r3, [r3, #0]
 4151 0014 1846     		mov	r0, r3
 4152 0016 FFF7FEFF 		bl	ETH_SetSubnetMask
1514:.\Generated_Source\PSoC5/ETH.c **** 	/* Issue the SEND command */
1515:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ExecuteSocketCommand( socket, 0x21 );
 4153              		.loc 1 1515 0
 4154 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4155 001c 1846     		mov	r0, r3
 4156 001e 4FF02101 		mov	r1, #33
 4157 0022 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1516:.\Generated_Source\PSoC5/ETH.c **** 	/* wait for the SEND to complete, or for a timeout */
1517:.\Generated_Source\PSoC5/ETH.c **** 	ir = ETH_GetSocketIR( socket );
 4158              		.loc 1 1517 0
 4159 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4160 0028 1846     		mov	r0, r3
 4161 002a FFF7FEFF 		bl	ETH_GetSocketIR
 4162 002e 0346     		mov	r3, r0
 4163 0030 FB73     		strb	r3, [r7, #15]
1518:.\Generated_Source\PSoC5/ETH.c **** 	/* while SEND is not done, and the socket hasnot timed out or been dsconnected */
1519:.\Generated_Source\PSoC5/ETH.c **** 	while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4164              		.loc 1 1519 0
 4165 0032 09E0     		b	.L185
 4166              	.L187:
1520:.\Generated_Source\PSoC5/ETH.c **** 		CyDelay(1);
 4167              		.loc 1 1520 0
 4168 0034 4FF00100 		mov	r0, #1
 4169 0038 FFF7FEFF 		bl	CyDelay
1521:.\Generated_Source\PSoC5/ETH.c **** 		ir = ETH_GetSocketIR( socket );
 4170              		.loc 1 1521 0
 4171 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4172 003e 1846     		mov	r0, r3
 4173 0040 FFF7FEFF 		bl	ETH_GetSocketIR
 4174 0044 0346     		mov	r3, r0
 4175 0046 FB73     		strb	r3, [r7, #15]
 4176              	.L185:
1519:.\Generated_Source\PSoC5/ETH.c **** 	while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4177              		.loc 1 1519 0 discriminator 1
 4178 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4179 004a 03F01003 		and	r3, r3, #16
 4180 004e 002B     		cmp	r3, #0
 4181 0050 04D1     		bne	.L186
1519:.\Generated_Source\PSoC5/ETH.c **** 	while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4182              		.loc 1 1519 0 is_stmt 0 discriminator 2
 4183 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4184 0054 03F00A03 		and	r3, r3, #10
 4185 0058 002B     		cmp	r3, #0
 4186 005a EBD0     		beq	.L187
 4187              	.L186:
1522:.\Generated_Source\PSoC5/ETH.c **** 		
1523:.\Generated_Source\PSoC5/ETH.c **** 	}
1524:.\Generated_Source\PSoC5/ETH.c **** 	/* clear the SEND_OK flag from the register */
1525:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSocketIR( socket, 0x10 );
 4188              		.loc 1 1525 0 is_stmt 1
 4189 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4190 005e 1846     		mov	r0, r3
 4191 0060 4FF01001 		mov	r1, #16
 4192 0064 FFF7FEFF 		bl	ETH_SetSocketIR
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 102


1526:.\Generated_Source\PSoC5/ETH.c **** 	/* reset the subnet mask : ERRATA FIX */
1527:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSubnetMask( 0 );
 4193              		.loc 1 1527 0
 4194 0068 4FF00000 		mov	r0, #0
 4195 006c FFF7FEFF 		bl	ETH_SetSubnetMask
1528:.\Generated_Source\PSoC5/ETH.c **** }
 4196              		.loc 1 1528 0
 4197 0070 07F11007 		add	r7, r7, #16
 4198 0074 BD46     		mov	sp, r7
 4199 0076 80BD     		pop	{r7, pc}
 4200              		.cfi_endproc
 4201              	.LFE59:
 4202              		.size	ETH_SocketSendMac, .-ETH_SocketSendMac
 4203              		.section	.text.ETH_SocketRxDataWaiting,"ax",%progbits
 4204              		.align	2
 4205              		.global	ETH_SocketRxDataWaiting
 4206              		.thumb
 4207              		.thumb_func
 4208              		.type	ETH_SocketRxDataWaiting, %function
 4209              	ETH_SocketRxDataWaiting:
 4210              	.LFB60:
1529:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1530:.\Generated_Source\PSoC5/ETH.c **** uint16
1531:.\Generated_Source\PSoC5/ETH.c **** ETH_SocketRxDataWaiting( uint8 socket )
1532:.\Generated_Source\PSoC5/ETH.c **** {
 4211              		.loc 1 1532 0
 4212              		.cfi_startproc
 4213              		@ args = 0, pretend = 0, frame = 8
 4214              		@ frame_needed = 1, uses_anonymous_args = 0
 4215 0000 80B5     		push	{r7, lr}
 4216              	.LCFI177:
 4217              		.cfi_def_cfa_offset 8
 4218              		.cfi_offset 7, -8
 4219              		.cfi_offset 14, -4
 4220 0002 82B0     		sub	sp, sp, #8
 4221              	.LCFI178:
 4222              		.cfi_def_cfa_offset 16
 4223 0004 00AF     		add	r7, sp, #0
 4224              	.LCFI179:
 4225              		.cfi_def_cfa_register 7
 4226 0006 0346     		mov	r3, r0
 4227 0008 FB71     		strb	r3, [r7, #7]
1533:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_GetRxSize( socket );
 4228              		.loc 1 1533 0
 4229 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4230 000c 1846     		mov	r0, r3
 4231 000e FFF7FEFF 		bl	ETH_GetRxSize
 4232 0012 0346     		mov	r3, r0
1534:.\Generated_Source\PSoC5/ETH.c **** }
 4233              		.loc 1 1534 0
 4234 0014 1846     		mov	r0, r3
 4235 0016 07F10807 		add	r7, r7, #8
 4236 001a BD46     		mov	sp, r7
 4237 001c 80BD     		pop	{r7, pc}
 4238              		.cfi_endproc
 4239              	.LFE60:
 4240              		.size	ETH_SocketRxDataWaiting, .-ETH_SocketRxDataWaiting
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 103


 4241 001e 00BF     		.section	.text.ETH_TcpOpen,"ax",%progbits
 4242              		.align	2
 4243              		.global	ETH_TcpOpen
 4244              		.thumb
 4245              		.thumb_func
 4246              		.type	ETH_TcpOpen, %function
 4247              	ETH_TcpOpen:
 4248              	.LFB61:
1535:.\Generated_Source\PSoC5/ETH.c **** #endif
1536:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
1537:.\Generated_Source\PSoC5/ETH.c **** /* TCP/IP */
1538:.\Generated_Source\PSoC5/ETH.c **** #if (1)
1539:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1540:.\Generated_Source\PSoC5/ETH.c **** uint8
1541:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpOpen(uint16 port)
1542:.\Generated_Source\PSoC5/ETH.c **** {
 4249              		.loc 1 1542 0
 4250              		.cfi_startproc
 4251              		@ args = 0, pretend = 0, frame = 8
 4252              		@ frame_needed = 1, uses_anonymous_args = 0
 4253 0000 80B5     		push	{r7, lr}
 4254              	.LCFI180:
 4255              		.cfi_def_cfa_offset 8
 4256              		.cfi_offset 7, -8
 4257              		.cfi_offset 14, -4
 4258 0002 82B0     		sub	sp, sp, #8
 4259              	.LCFI181:
 4260              		.cfi_def_cfa_offset 16
 4261 0004 00AF     		add	r7, sp, #0
 4262              	.LCFI182:
 4263              		.cfi_def_cfa_register 7
 4264 0006 0346     		mov	r3, r0
 4265 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1543:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_SocketOpen(ETH_PROTO_TCP, port, 0);
 4266              		.loc 1 1543 0
 4267 000a FB88     		ldrh	r3, [r7, #6]
 4268 000c 4FF00100 		mov	r0, #1
 4269 0010 1946     		mov	r1, r3
 4270 0012 4FF00002 		mov	r2, #0
 4271 0016 FFF7FEFF 		bl	ETH_SocketOpen
 4272 001a 0346     		mov	r3, r0
1544:.\Generated_Source\PSoC5/ETH.c **** }
 4273              		.loc 1 1544 0
 4274 001c 1846     		mov	r0, r3
 4275 001e 07F10807 		add	r7, r7, #8
 4276 0022 BD46     		mov	sp, r7
 4277 0024 80BD     		pop	{r7, pc}
 4278              		.cfi_endproc
 4279              	.LFE61:
 4280              		.size	ETH_TcpOpen, .-ETH_TcpOpen
 4281 0026 00BF     		.section	.text.ETH_TcpStartServer,"ax",%progbits
 4282              		.align	2
 4283              		.global	ETH_TcpStartServer
 4284              		.thumb
 4285              		.thumb_func
 4286              		.type	ETH_TcpStartServer, %function
 4287              	ETH_TcpStartServer:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 104


 4288              	.LFB62:
1545:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1546:.\Generated_Source\PSoC5/ETH.c **** void
1547:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpStartServer( uint8 socket )
1548:.\Generated_Source\PSoC5/ETH.c **** {
 4289              		.loc 1 1548 0
 4290              		.cfi_startproc
 4291              		@ args = 0, pretend = 0, frame = 8
 4292              		@ frame_needed = 1, uses_anonymous_args = 0
 4293 0000 80B5     		push	{r7, lr}
 4294              	.LCFI183:
 4295              		.cfi_def_cfa_offset 8
 4296              		.cfi_offset 7, -8
 4297              		.cfi_offset 14, -4
 4298 0002 82B0     		sub	sp, sp, #8
 4299              	.LCFI184:
 4300              		.cfi_def_cfa_offset 16
 4301 0004 00AF     		add	r7, sp, #0
 4302              	.LCFI185:
 4303              		.cfi_def_cfa_register 7
 4304 0006 0346     		mov	r3, r0
 4305 0008 FB71     		strb	r3, [r7, #7]
1549:.\Generated_Source\PSoC5/ETH.c **** 	/*
1550:.\Generated_Source\PSoC5/ETH.c **** 	 * Start a open socket listening for a connection
1551:.\Generated_Source\PSoC5/ETH.c **** 	 */
1552:.\Generated_Source\PSoC5/ETH.c **** 	/* was this a valid socket? */
1553:.\Generated_Source\PSoC5/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 4306              		.loc 1 1553 0
 4307 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4308 000c 072B     		cmp	r3, #7
 4309 000e 05D8     		bhi	.L192
1554:.\Generated_Source\PSoC5/ETH.c **** 		/* Execute the listen command */
1555:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x02 );
 4310              		.loc 1 1555 0
 4311 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4312 0012 1846     		mov	r0, r3
 4313 0014 4FF00201 		mov	r1, #2
 4314 0018 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
 4315              	.L192:
1556:.\Generated_Source\PSoC5/ETH.c **** 	}
1557:.\Generated_Source\PSoC5/ETH.c **** }
 4316              		.loc 1 1557 0
 4317 001c 07F10807 		add	r7, r7, #8
 4318 0020 BD46     		mov	sp, r7
 4319 0022 80BD     		pop	{r7, pc}
 4320              		.cfi_endproc
 4321              	.LFE62:
 4322              		.size	ETH_TcpStartServer, .-ETH_TcpStartServer
 4323              		.section	.text.ETH_TcpStartServerWait,"ax",%progbits
 4324              		.align	2
 4325              		.global	ETH_TcpStartServerWait
 4326              		.thumb
 4327              		.thumb_func
 4328              		.type	ETH_TcpStartServerWait, %function
 4329              	ETH_TcpStartServerWait:
 4330              	.LFB63:
1558:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 105


1559:.\Generated_Source\PSoC5/ETH.c **** void
1560:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpStartServerWait( uint8 socket )
1561:.\Generated_Source\PSoC5/ETH.c **** {
 4331              		.loc 1 1561 0
 4332              		.cfi_startproc
 4333              		@ args = 0, pretend = 0, frame = 16
 4334              		@ frame_needed = 1, uses_anonymous_args = 0
 4335 0000 80B5     		push	{r7, lr}
 4336              	.LCFI186:
 4337              		.cfi_def_cfa_offset 8
 4338              		.cfi_offset 7, -8
 4339              		.cfi_offset 14, -4
 4340 0002 84B0     		sub	sp, sp, #16
 4341              	.LCFI187:
 4342              		.cfi_def_cfa_offset 24
 4343 0004 00AF     		add	r7, sp, #0
 4344              	.LCFI188:
 4345              		.cfi_def_cfa_register 7
 4346 0006 0346     		mov	r3, r0
 4347 0008 FB71     		strb	r3, [r7, #7]
1562:.\Generated_Source\PSoC5/ETH.c **** 	uint8 status;
1563:.\Generated_Source\PSoC5/ETH.c **** 	
1564:.\Generated_Source\PSoC5/ETH.c **** 	/*
1565:.\Generated_Source\PSoC5/ETH.c **** 	 * Bug Patch: Exit Waiting for server when an invalid socket is passed
1566:.\Generated_Source\PSoC5/ETH.c **** 	 */
1567:.\Generated_Source\PSoC5/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return;
 4348              		.loc 1 1567 0
 4349 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4350 000c 072B     		cmp	r3, #7
 4351 000e 1FD8     		bhi	.L199
 4352              	.L195:
1568:.\Generated_Source\PSoC5/ETH.c **** 	ETH_TcpStartServer(socket);
 4353              		.loc 1 1568 0
 4354 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4355 0012 1846     		mov	r0, r3
 4356 0014 FFF7FEFF 		bl	ETH_TcpStartServer
1569:.\Generated_Source\PSoC5/ETH.c **** 	/* wait for socket establishment */
1570:.\Generated_Source\PSoC5/ETH.c **** 	/* Update Patch: Loop calls process connections to exit on a closed socket */
1571:.\Generated_Source\PSoC5/ETH.c **** 	status = ETH_GetSocketStatus(socket);
 4357              		.loc 1 1571 0
 4358 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4359 001a 1846     		mov	r0, r3
 4360 001c FFF7FEFF 		bl	ETH_GetSocketStatus
 4361 0020 0346     		mov	r3, r0
 4362 0022 FB73     		strb	r3, [r7, #15]
1572:.\Generated_Source\PSoC5/ETH.c **** 	while ( (status != 0x17 ) && (status != 0 ) ) {
 4363              		.loc 1 1572 0
 4364 0024 0DE0     		b	.L197
 4365              	.L198:
1573:.\Generated_Source\PSoC5/ETH.c **** 		CyDelay(1);
 4366              		.loc 1 1573 0
 4367 0026 4FF00100 		mov	r0, #1
 4368 002a FFF7FEFF 		bl	CyDelay
1574:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketProcessConnections( socket );
 4369              		.loc 1 1574 0
 4370 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4371 0030 1846     		mov	r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 106


 4372 0032 FFF7FEFF 		bl	ETH_SocketProcessConnections
1575:.\Generated_Source\PSoC5/ETH.c **** 		status = ETH_GetSocketStatus( socket );
 4373              		.loc 1 1575 0
 4374 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4375 0038 1846     		mov	r0, r3
 4376 003a FFF7FEFF 		bl	ETH_GetSocketStatus
 4377 003e 0346     		mov	r3, r0
 4378 0040 FB73     		strb	r3, [r7, #15]
 4379              	.L197:
1572:.\Generated_Source\PSoC5/ETH.c **** 	while ( (status != 0x17 ) && (status != 0 ) ) {
 4380              		.loc 1 1572 0 discriminator 1
 4381 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4382 0044 172B     		cmp	r3, #23
 4383 0046 04D0     		beq	.L194
1572:.\Generated_Source\PSoC5/ETH.c **** 	while ( (status != 0x17 ) && (status != 0 ) ) {
 4384              		.loc 1 1572 0 is_stmt 0 discriminator 2
 4385 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4386 004a 002B     		cmp	r3, #0
 4387 004c EBD1     		bne	.L198
 4388 004e 00E0     		b	.L194
 4389              	.L199:
1567:.\Generated_Source\PSoC5/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return;
 4390              		.loc 1 1567 0 is_stmt 1
 4391 0050 00BF     		nop
 4392              	.L194:
1576:.\Generated_Source\PSoC5/ETH.c **** 	}
1577:.\Generated_Source\PSoC5/ETH.c **** }
 4393              		.loc 1 1577 0
 4394 0052 07F11007 		add	r7, r7, #16
 4395 0056 BD46     		mov	sp, r7
 4396 0058 80BD     		pop	{r7, pc}
 4397              		.cfi_endproc
 4398              	.LFE63:
 4399              		.size	ETH_TcpStartServerWait, .-ETH_TcpStartServerWait
 4400 005a 00BF     		.section	.text.ETH_TcpConnect,"ax",%progbits
 4401              		.align	2
 4402              		.global	ETH_TcpConnect
 4403              		.thumb
 4404              		.thumb_func
 4405              		.type	ETH_TcpConnect, %function
 4406              	ETH_TcpConnect:
 4407              	.LFB64:
1578:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1579:.\Generated_Source\PSoC5/ETH.c **** void
1580:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpConnect( uint8 socket, uint32 ip, uint16 port )
1581:.\Generated_Source\PSoC5/ETH.c **** {
 4408              		.loc 1 1581 0
 4409              		.cfi_startproc
 4410              		@ args = 0, pretend = 0, frame = 16
 4411              		@ frame_needed = 1, uses_anonymous_args = 0
 4412 0000 80B5     		push	{r7, lr}
 4413              	.LCFI189:
 4414              		.cfi_def_cfa_offset 8
 4415              		.cfi_offset 7, -8
 4416              		.cfi_offset 14, -4
 4417 0002 84B0     		sub	sp, sp, #16
 4418              	.LCFI190:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 107


 4419              		.cfi_def_cfa_offset 24
 4420 0004 00AF     		add	r7, sp, #0
 4421              	.LCFI191:
 4422              		.cfi_def_cfa_register 7
 4423 0006 3960     		str	r1, [r7, #0]
 4424 0008 1346     		mov	r3, r2
 4425 000a 0246     		mov	r2, r0
 4426 000c FA71     		strb	r2, [r7, #7]
 4427 000e BB80     		strh	r3, [r7, #4]	@ movhi
1582:.\Generated_Source\PSoC5/ETH.c **** 	uint32 timeout;
1583:.\Generated_Source\PSoC5/ETH.c **** 	uint8 ir;
1584:.\Generated_Source\PSoC5/ETH.c **** 	
1585:.\Generated_Source\PSoC5/ETH.c **** 	/* Exit when passed a closed or invalid socket */
1586:.\Generated_Source\PSoC5/ETH.c **** 	if ( socket >= ETH_MAX_SOCKET) return;
 4428              		.loc 1 1586 0
 4429 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4430 0012 072B     		cmp	r3, #7
 4431 0014 47D8     		bhi	.L206
 4432              	.L201:
1587:.\Generated_Source\PSoC5/ETH.c **** 	/* Check for a valid IP address */
1588:.\Generated_Source\PSoC5/ETH.c **** 	if ( (ip != 0xFFFFFFFF) && (ip != 0) ) {
 4433              		.loc 1 1588 0
 4434 0016 3B68     		ldr	r3, [r7, #0]
 4435 0018 B3F1FF3F 		cmp	r3, #-1
 4436 001c 44D0     		beq	.L200
 4437              		.loc 1 1588 0 is_stmt 0 discriminator 1
 4438 001e 3B68     		ldr	r3, [r7, #0]
 4439 0020 002B     		cmp	r3, #0
 4440 0022 41D0     		beq	.L200
1589:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketDestIP( socket, ip );
 4441              		.loc 1 1589 0 is_stmt 1
 4442 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4443 0026 1846     		mov	r0, r3
 4444 0028 3968     		ldr	r1, [r7, #0]
 4445 002a FFF7FEFF 		bl	ETH_SetSocketDestIP
1590:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketDestPort( socket, port );
 4446              		.loc 1 1590 0
 4447 002e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4448 0030 BB88     		ldrh	r3, [r7, #4]
 4449 0032 1046     		mov	r0, r2
 4450 0034 1946     		mov	r1, r3
 4451 0036 FFF7FEFF 		bl	ETH_SetSocketDestPort
1591:.\Generated_Source\PSoC5/ETH.c **** 		/* set socket subnet mask */
1592:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSubnetMask( ETH_SubnetMask );
 4452              		.loc 1 1592 0
 4453 003a 40F20003 		movw	r3, #:lower16:ETH_SubnetMask
 4454 003e C0F20003 		movt	r3, #:upper16:ETH_SubnetMask
 4455 0042 1B68     		ldr	r3, [r3, #0]
 4456 0044 1846     		mov	r0, r3
 4457 0046 FFF7FEFF 		bl	ETH_SetSubnetMask
1593:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x04);
 4458              		.loc 1 1593 0
 4459 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4460 004c 1846     		mov	r0, r3
 4461 004e 4FF00401 		mov	r1, #4
 4462 0052 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1594:.\Generated_Source\PSoC5/ETH.c **** 		/* wait for the socket connection to the remote host is established */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 108


1595:.\Generated_Source\PSoC5/ETH.c **** 		while ( (!ETH_SocketEstablished(socket))  && (timeout < 3000) ) {
 4463              		.loc 1 1595 0
 4464 0056 15E0     		b	.L203
 4465              	.L205:
1596:.\Generated_Source\PSoC5/ETH.c **** 			CyDelay(1);
 4466              		.loc 1 1596 0
 4467 0058 4FF00100 		mov	r0, #1
 4468 005c FFF7FEFF 		bl	CyDelay
1597:.\Generated_Source\PSoC5/ETH.c **** 			++timeout;
 4469              		.loc 1 1597 0
 4470 0060 FB68     		ldr	r3, [r7, #12]
 4471 0062 03F10103 		add	r3, r3, #1
 4472 0066 FB60     		str	r3, [r7, #12]
1598:.\Generated_Source\PSoC5/ETH.c **** 			ir = ETH_GetSocketIR( socket );
 4473              		.loc 1 1598 0
 4474 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4475 006a 1846     		mov	r0, r3
 4476 006c FFF7FEFF 		bl	ETH_GetSocketIR
 4477 0070 0346     		mov	r3, r0
 4478 0072 FB72     		strb	r3, [r7, #11]
1599:.\Generated_Source\PSoC5/ETH.c **** 			if ( (ir & 0x08) != 0 ) {
 4479              		.loc 1 1599 0
 4480 0074 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4481 0076 03F00803 		and	r3, r3, #8
 4482 007a 002B     		cmp	r3, #0
 4483 007c 02D0     		beq	.L203
1600:.\Generated_Source\PSoC5/ETH.c **** 				/* internal chip timeout occured */
1601:.\Generated_Source\PSoC5/ETH.c **** 				timeout = 3000;
 4484              		.loc 1 1601 0
 4485 007e 40F6B833 		movw	r3, #3000
 4486 0082 FB60     		str	r3, [r7, #12]
 4487              	.L203:
1595:.\Generated_Source\PSoC5/ETH.c **** 		while ( (!ETH_SocketEstablished(socket))  && (timeout < 3000) ) {
 4488              		.loc 1 1595 0 discriminator 1
 4489 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4490 0086 1846     		mov	r0, r3
 4491 0088 FFF7FEFF 		bl	ETH_SocketEstablished
 4492 008c 0346     		mov	r3, r0
 4493 008e 002B     		cmp	r3, #0
 4494 0090 04D1     		bne	.L204
1595:.\Generated_Source\PSoC5/ETH.c **** 		while ( (!ETH_SocketEstablished(socket))  && (timeout < 3000) ) {
 4495              		.loc 1 1595 0 is_stmt 0 discriminator 2
 4496 0092 FA68     		ldr	r2, [r7, #12]
 4497 0094 40F6B733 		movw	r3, #2999
 4498 0098 9A42     		cmp	r2, r3
 4499 009a DDD9     		bls	.L205
 4500              	.L204:
1602:.\Generated_Source\PSoC5/ETH.c **** 			}
1603:.\Generated_Source\PSoC5/ETH.c **** 		}
1604:.\Generated_Source\PSoC5/ETH.c **** 		/* clear the Subnet mask register */
1605:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSubnetMask(0);
 4501              		.loc 1 1605 0 is_stmt 1
 4502 009c 4FF00000 		mov	r0, #0
 4503 00a0 FFF7FEFF 		bl	ETH_SetSubnetMask
 4504 00a4 00E0     		b	.L200
 4505              	.L206:
1586:.\Generated_Source\PSoC5/ETH.c **** 	if ( socket >= ETH_MAX_SOCKET) return;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 109


 4506              		.loc 1 1586 0
 4507 00a6 00BF     		nop
 4508              	.L200:
1606:.\Generated_Source\PSoC5/ETH.c **** 	}
1607:.\Generated_Source\PSoC5/ETH.c **** }
 4509              		.loc 1 1607 0
 4510 00a8 07F11007 		add	r7, r7, #16
 4511 00ac BD46     		mov	sp, r7
 4512 00ae 80BD     		pop	{r7, pc}
 4513              		.cfi_endproc
 4514              	.LFE64:
 4515              		.size	ETH_TcpConnect, .-ETH_TcpConnect
 4516              		.section	.text.ETH_TcpConnected,"ax",%progbits
 4517              		.align	2
 4518              		.global	ETH_TcpConnected
 4519              		.thumb
 4520              		.thumb_func
 4521              		.type	ETH_TcpConnected, %function
 4522              	ETH_TcpConnected:
 4523              	.LFB65:
1608:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1609:.\Generated_Source\PSoC5/ETH.c **** uint8
1610:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpConnected( uint8 socket )
1611:.\Generated_Source\PSoC5/ETH.c **** { return ETH_SocketEstablished(socket); }
 4524              		.loc 1 1611 0
 4525              		.cfi_startproc
 4526              		@ args = 0, pretend = 0, frame = 8
 4527              		@ frame_needed = 1, uses_anonymous_args = 0
 4528 0000 80B5     		push	{r7, lr}
 4529              	.LCFI192:
 4530              		.cfi_def_cfa_offset 8
 4531              		.cfi_offset 7, -8
 4532              		.cfi_offset 14, -4
 4533 0002 82B0     		sub	sp, sp, #8
 4534              	.LCFI193:
 4535              		.cfi_def_cfa_offset 16
 4536 0004 00AF     		add	r7, sp, #0
 4537              	.LCFI194:
 4538              		.cfi_def_cfa_register 7
 4539 0006 0346     		mov	r3, r0
 4540 0008 FB71     		strb	r3, [r7, #7]
 4541              		.loc 1 1611 0
 4542 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4543 000c 1846     		mov	r0, r3
 4544 000e FFF7FEFF 		bl	ETH_SocketEstablished
 4545 0012 0346     		mov	r3, r0
 4546 0014 1846     		mov	r0, r3
 4547 0016 07F10807 		add	r7, r7, #8
 4548 001a BD46     		mov	sp, r7
 4549 001c 80BD     		pop	{r7, pc}
 4550              		.cfi_endproc
 4551              	.LFE65:
 4552              		.size	ETH_TcpConnected, .-ETH_TcpConnected
 4553 001e 00BF     		.section	.text.ETH_TcpDisconnect,"ax",%progbits
 4554              		.align	2
 4555              		.global	ETH_TcpDisconnect
 4556              		.thumb
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 110


 4557              		.thumb_func
 4558              		.type	ETH_TcpDisconnect, %function
 4559              	ETH_TcpDisconnect:
 4560              	.LFB66:
1612:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1613:.\Generated_Source\PSoC5/ETH.c **** void
1614:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpDisconnect( uint8 socket )
1615:.\Generated_Source\PSoC5/ETH.c **** {
 4561              		.loc 1 1615 0
 4562              		.cfi_startproc
 4563              		@ args = 0, pretend = 0, frame = 8
 4564              		@ frame_needed = 1, uses_anonymous_args = 0
 4565 0000 80B5     		push	{r7, lr}
 4566              	.LCFI195:
 4567              		.cfi_def_cfa_offset 8
 4568              		.cfi_offset 7, -8
 4569              		.cfi_offset 14, -4
 4570 0002 82B0     		sub	sp, sp, #8
 4571              	.LCFI196:
 4572              		.cfi_def_cfa_offset 16
 4573 0004 00AF     		add	r7, sp, #0
 4574              	.LCFI197:
 4575              		.cfi_def_cfa_register 7
 4576 0006 0346     		mov	r3, r0
 4577 0008 FB71     		strb	r3, [r7, #7]
1616:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ExecuteSocketCommand(socket, 0x08);
 4578              		.loc 1 1616 0
 4579 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4580 000c 1846     		mov	r0, r3
 4581 000e 4FF00801 		mov	r1, #8
 4582 0012 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1617:.\Generated_Source\PSoC5/ETH.c **** }
 4583              		.loc 1 1617 0
 4584 0016 07F10807 		add	r7, r7, #8
 4585 001a BD46     		mov	sp, r7
 4586 001c 80BD     		pop	{r7, pc}
 4587              		.cfi_endproc
 4588              	.LFE66:
 4589              		.size	ETH_TcpDisconnect, .-ETH_TcpDisconnect
 4590 001e 00BF     		.section	.text.ETH_TcpSend,"ax",%progbits
 4591              		.align	2
 4592              		.global	ETH_TcpSend
 4593              		.thumb
 4594              		.thumb_func
 4595              		.type	ETH_TcpSend, %function
 4596              	ETH_TcpSend:
 4597              	.LFB67:
1618:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1619:.\Generated_Source\PSoC5/ETH.c **** uint16
1620:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpSend(uint8 socket, uint8* buffer, uint16 len)
1621:.\Generated_Source\PSoC5/ETH.c **** {
 4598              		.loc 1 1621 0
 4599              		.cfi_startproc
 4600              		@ args = 0, pretend = 0, frame = 16
 4601              		@ frame_needed = 1, uses_anonymous_args = 0
 4602 0000 80B5     		push	{r7, lr}
 4603              	.LCFI198:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 111


 4604              		.cfi_def_cfa_offset 8
 4605              		.cfi_offset 7, -8
 4606              		.cfi_offset 14, -4
 4607 0002 84B0     		sub	sp, sp, #16
 4608              	.LCFI199:
 4609              		.cfi_def_cfa_offset 24
 4610 0004 00AF     		add	r7, sp, #0
 4611              	.LCFI200:
 4612              		.cfi_def_cfa_register 7
 4613 0006 3960     		str	r1, [r7, #0]
 4614 0008 1346     		mov	r3, r2
 4615 000a 0246     		mov	r2, r0
 4616 000c FA71     		strb	r2, [r7, #7]
 4617 000e BB80     		strh	r3, [r7, #4]	@ movhi
1622:.\Generated_Source\PSoC5/ETH.c **** 	uint16 TxSize;
1623:.\Generated_Source\PSoC5/ETH.c **** 	uint16 FreeSpace;
1624:.\Generated_Source\PSoC5/ETH.c **** 	uint8 status;
1625:.\Generated_Source\PSoC5/ETH.c **** 	
1626:.\Generated_Source\PSoC5/ETH.c **** 	/* Update Patch: Exit immediately with 0 data tx on bad socket */
1627:.\Generated_Source\PSoC5/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 4618              		.loc 1 1627 0
 4619 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4620 0012 072B     		cmp	r3, #7
 4621 0014 02D9     		bls	.L211
 4622              		.loc 1 1627 0 is_stmt 0 discriminator 1
 4623 0016 4FF00003 		mov	r3, #0
 4624 001a 46E0     		b	.L212
 4625              	.L211:
1628:.\Generated_Source\PSoC5/ETH.c **** 	TxSize =  (len > 0x0800) ? 0x0800 : len;
 4626              		.loc 1 1628 0 is_stmt 1
 4627 001c BB88     		ldrh	r3, [r7, #4]
 4628 001e B3F5006F 		cmp	r3, #2048
 4629 0022 28BF     		it	cs
 4630 0024 4FF40063 		movcs	r3, #2048
 4631 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1629:.\Generated_Source\PSoC5/ETH.c **** 	/* check the connection status, and protocol of the socket */
1630:.\Generated_Source\PSoC5/ETH.c **** 	status = ETH_GetSocketStatus(socket);
 4632              		.loc 1 1630 0
 4633 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4634 002c 1846     		mov	r0, r3
 4635 002e FFF7FEFF 		bl	ETH_GetSocketStatus
 4636 0032 0346     		mov	r3, r0
 4637 0034 FB72     		strb	r3, [r7, #11]
1631:.\Generated_Source\PSoC5/ETH.c **** 	if ( ( status == 0x17) && (ETH_SocketConfig[socket].Protocol == ETH_PROTO_TCP) ) {
 4638              		.loc 1 1631 0
 4639 0036 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4640 0038 172B     		cmp	r3, #23
 4641 003a 32D1     		bne	.L213
 4642              		.loc 1 1631 0 is_stmt 0 discriminator 1
 4643 003c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4644 003e 40F20003 		movw	r3, #:lower16:ETH_SocketConfig
 4645 0042 C0F20003 		movt	r3, #:upper16:ETH_SocketConfig
 4646 0046 13F83230 		ldrb	r3, [r3, r2, lsl #3]	@ zero_extendqisi2
 4647 004a 012B     		cmp	r3, #1
 4648 004c 29D1     		bne	.L213
1632:.\Generated_Source\PSoC5/ETH.c **** 		/* 
1633:.\Generated_Source\PSoC5/ETH.c **** 		 * The socket was open with the correct protocol and is connected to
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 112


1634:.\Generated_Source\PSoC5/ETH.c **** 		 * a valid remote system. In order to send the requested packet data,
1635:.\Generated_Source\PSoC5/ETH.c **** 		 * first, we must wait for the available buffer memory to be free
1636:.\Generated_Source\PSoC5/ETH.c **** 		 * in the transmit buffer fifo.
1637:.\Generated_Source\PSoC5/ETH.c **** 		 */
1638:.\Generated_Source\PSoC5/ETH.c **** 		FreeSpace = 0;
 4649              		.loc 1 1638 0 is_stmt 1
 4650 004e 4FF00003 		mov	r3, #0
 4651 0052 BB81     		strh	r3, [r7, #12]	@ movhi
1639:.\Generated_Source\PSoC5/ETH.c **** 		status = 0x17;
 4652              		.loc 1 1639 0
 4653 0054 4FF01703 		mov	r3, #23
 4654 0058 FB72     		strb	r3, [r7, #11]
1640:.\Generated_Source\PSoC5/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
 4655              		.loc 1 1640 0
 4656 005a 0BE0     		b	.L214
 4657              	.L216:
1641:.\Generated_Source\PSoC5/ETH.c **** 			FreeSpace = ETH_GetTxFreeSize( socket );
 4658              		.loc 1 1641 0
 4659 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4660 005e 1846     		mov	r0, r3
 4661 0060 FFF7FEFF 		bl	ETH_GetTxFreeSize
 4662 0064 0346     		mov	r3, r0
 4663 0066 BB81     		strh	r3, [r7, #12]	@ movhi
1642:.\Generated_Source\PSoC5/ETH.c **** 			status = ETH_GetSocketStatus( socket );
 4664              		.loc 1 1642 0
 4665 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4666 006a 1846     		mov	r0, r3
 4667 006c FFF7FEFF 		bl	ETH_GetSocketStatus
 4668 0070 0346     		mov	r3, r0
 4669 0072 FB72     		strb	r3, [r7, #11]
 4670              	.L214:
1640:.\Generated_Source\PSoC5/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
 4671              		.loc 1 1640 0 discriminator 1
 4672 0074 BA89     		ldrh	r2, [r7, #12]
 4673 0076 FB89     		ldrh	r3, [r7, #14]
 4674 0078 9A42     		cmp	r2, r3
 4675 007a 05D2     		bcs	.L215
1640:.\Generated_Source\PSoC5/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
 4676              		.loc 1 1640 0 is_stmt 0 discriminator 2
 4677 007c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4678 007e 172B     		cmp	r3, #23
 4679 0080 02D1     		bne	.L215
1640:.\Generated_Source\PSoC5/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
 4680              		.loc 1 1640 0 discriminator 1
 4681 0082 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4682 0084 1C2B     		cmp	r3, #28
 4683 0086 E9D1     		bne	.L216
 4684              	.L215:
1643:.\Generated_Source\PSoC5/ETH.c **** 		}
1644:.\Generated_Source\PSoC5/ETH.c **** 		/*
1645:.\Generated_Source\PSoC5/ETH.c **** 		 * Write the data buffer to the chip Tx Buffer, then issue
1646:.\Generated_Source\PSoC5/ETH.c **** 		 * the chip SEND command
1647:.\Generated_Source\PSoC5/ETH.c **** 		 */
1648:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ProcessTxData(socket, 0, buffer, TxSize);
 4685              		.loc 1 1648 0 is_stmt 1
 4686 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4687 008a FB89     		ldrh	r3, [r7, #14]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 113


 4688 008c 1046     		mov	r0, r2
 4689 008e 4FF00001 		mov	r1, #0
 4690 0092 3A68     		ldr	r2, [r7, #0]
 4691 0094 FFF7FEFF 		bl	ETH_ProcessTxData
1649:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketSend( socket );
 4692              		.loc 1 1649 0
 4693 0098 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4694 009a 1846     		mov	r0, r3
 4695 009c FFF7FEFF 		bl	ETH_SocketSend
 4696 00a0 02E0     		b	.L217
 4697              	.L213:
1650:.\Generated_Source\PSoC5/ETH.c **** 	}
1651:.\Generated_Source\PSoC5/ETH.c **** 	else {
1652:.\Generated_Source\PSoC5/ETH.c **** 		/*
1653:.\Generated_Source\PSoC5/ETH.c **** 		 * the socket was not establised, or there was an error, so clear
1654:.\Generated_Source\PSoC5/ETH.c **** 		 * the TxSize to signal that no data has bee sent
1655:.\Generated_Source\PSoC5/ETH.c **** 		 */
1656:.\Generated_Source\PSoC5/ETH.c **** 		TxSize = 0;
 4698              		.loc 1 1656 0
 4699 00a2 4FF00003 		mov	r3, #0
 4700 00a6 FB81     		strh	r3, [r7, #14]	@ movhi
 4701              	.L217:
1657:.\Generated_Source\PSoC5/ETH.c **** 	}
1658:.\Generated_Source\PSoC5/ETH.c **** 	return TxSize;
 4702              		.loc 1 1658 0
 4703 00a8 FB89     		ldrh	r3, [r7, #14]
 4704              	.L212:
1659:.\Generated_Source\PSoC5/ETH.c **** }
 4705              		.loc 1 1659 0
 4706 00aa 1846     		mov	r0, r3
 4707 00ac 07F11007 		add	r7, r7, #16
 4708 00b0 BD46     		mov	sp, r7
 4709 00b2 80BD     		pop	{r7, pc}
 4710              		.cfi_endproc
 4711              	.LFE67:
 4712              		.size	ETH_TcpSend, .-ETH_TcpSend
 4713              		.section	.text.ETH_TcpReceive,"ax",%progbits
 4714              		.align	2
 4715              		.global	ETH_TcpReceive
 4716              		.thumb
 4717              		.thumb_func
 4718              		.type	ETH_TcpReceive, %function
 4719              	ETH_TcpReceive:
 4720              	.LFB68:
1660:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1661:.\Generated_Source\PSoC5/ETH.c **** uint16
1662:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpReceive( uint8 socket, uint8* buffer, uint16 length )
1663:.\Generated_Source\PSoC5/ETH.c **** {
 4721              		.loc 1 1663 0
 4722              		.cfi_startproc
 4723              		@ args = 0, pretend = 0, frame = 16
 4724              		@ frame_needed = 1, uses_anonymous_args = 0
 4725 0000 80B5     		push	{r7, lr}
 4726              	.LCFI201:
 4727              		.cfi_def_cfa_offset 8
 4728              		.cfi_offset 7, -8
 4729              		.cfi_offset 14, -4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 114


 4730 0002 86B0     		sub	sp, sp, #24
 4731              	.LCFI202:
 4732              		.cfi_def_cfa_offset 32
 4733 0004 02AF     		add	r7, sp, #8
 4734              	.LCFI203:
 4735              		.cfi_def_cfa 7, 24
 4736 0006 3960     		str	r1, [r7, #0]
 4737 0008 1346     		mov	r3, r2
 4738 000a 0246     		mov	r2, r0
 4739 000c FA71     		strb	r2, [r7, #7]
 4740 000e BB80     		strh	r3, [r7, #4]	@ movhi
1664:.\Generated_Source\PSoC5/ETH.c **** 	uint16 RxSize;
1665:.\Generated_Source\PSoC5/ETH.c **** 
1666:.\Generated_Source\PSoC5/ETH.c **** 	/*
1667:.\Generated_Source\PSoC5/ETH.c **** 	 * Revision Update:
1668:.\Generated_Source\PSoC5/ETH.c **** 	 * Removed dead code, added exit when there is an invlaid socket specified
1669:.\Generated_Source\PSoC5/ETH.c **** 	 */
1670:.\Generated_Source\PSoC5/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 4741              		.loc 1 1670 0
 4742 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4743 0012 072B     		cmp	r3, #7
 4744 0014 02D9     		bls	.L219
 4745              		.loc 1 1670 0 is_stmt 0 discriminator 1
 4746 0016 4FF00003 		mov	r3, #0
 4747 001a 20E0     		b	.L220
 4748              	.L219:
1671:.\Generated_Source\PSoC5/ETH.c **** 	/*
1672:.\Generated_Source\PSoC5/ETH.c **** 	 * read the number of waiting bytes in the buffer memory
1673:.\Generated_Source\PSoC5/ETH.c **** 	 * but, clip the length of data read to the requested
1674:.\Generated_Source\PSoC5/ETH.c **** 	 * length of data.
1675:.\Generated_Source\PSoC5/ETH.c **** 	 */
1676:.\Generated_Source\PSoC5/ETH.c **** 	RxSize = ETH_GetRxSize( socket );
 4749              		.loc 1 1676 0 is_stmt 1
 4750 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4751 001e 1846     		mov	r0, r3
 4752 0020 FFF7FEFF 		bl	ETH_GetRxSize
 4753 0024 0346     		mov	r3, r0
 4754 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1677:.\Generated_Source\PSoC5/ETH.c **** 	RxSize = (RxSize > length) ? length : RxSize;
 4755              		.loc 1 1677 0
 4756 0028 FA89     		ldrh	r2, [r7, #14]
 4757 002a BB88     		ldrh	r3, [r7, #4]
 4758 002c 9A42     		cmp	r2, r3
 4759 002e 38BF     		it	cc
 4760 0030 1346     		movcc	r3, r2
 4761 0032 FB81     		strh	r3, [r7, #14]	@ movhi
1678:.\Generated_Source\PSoC5/ETH.c **** 	/* If there was waiting data, read it from the buffer */
1679:.\Generated_Source\PSoC5/ETH.c **** 	if (RxSize > 0) {
 4762              		.loc 1 1679 0
 4763 0034 FB89     		ldrh	r3, [r7, #14]
 4764 0036 002B     		cmp	r3, #0
 4765 0038 10D0     		beq	.L221
1680:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ProcessRxData( socket, 0, buffer, RxSize, 0);
 4766              		.loc 1 1680 0
 4767 003a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4768 003c FB89     		ldrh	r3, [r7, #14]
 4769 003e 4FF00001 		mov	r1, #0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 115


 4770 0042 0091     		str	r1, [sp, #0]
 4771 0044 1046     		mov	r0, r2
 4772 0046 4FF00001 		mov	r1, #0
 4773 004a 3A68     		ldr	r2, [r7, #0]
 4774 004c FFF7FEFF 		bl	ETH_ProcessRxData
1681:.\Generated_Source\PSoC5/ETH.c **** 		/* 
1682:.\Generated_Source\PSoC5/ETH.c **** 		 * after reading the buffer data, send the receive command
1683:.\Generated_Source\PSoC5/ETH.c **** 		 * to the socket so that the W5100 completes the read
1684:.\Generated_Source\PSoC5/ETH.c **** 		 */
1685:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ExecuteSocketCommand(socket, 0x40);
 4775              		.loc 1 1685 0
 4776 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4777 0052 1846     		mov	r0, r3
 4778 0054 4FF04001 		mov	r1, #64
 4779 0058 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
 4780              	.L221:
1686:.\Generated_Source\PSoC5/ETH.c **** 	}
1687:.\Generated_Source\PSoC5/ETH.c **** 	
1688:.\Generated_Source\PSoC5/ETH.c **** 	/* return the number of read bytes from the buffer memory */
1689:.\Generated_Source\PSoC5/ETH.c **** 	return RxSize;
 4781              		.loc 1 1689 0
 4782 005c FB89     		ldrh	r3, [r7, #14]
 4783              	.L220:
1690:.\Generated_Source\PSoC5/ETH.c **** }
 4784              		.loc 1 1690 0
 4785 005e 1846     		mov	r0, r3
 4786 0060 07F11007 		add	r7, r7, #16
 4787 0064 BD46     		mov	sp, r7
 4788 0066 80BD     		pop	{r7, pc}
 4789              		.cfi_endproc
 4790              	.LFE68:
 4791              		.size	ETH_TcpReceive, .-ETH_TcpReceive
 4792              		.section	.text.ETH_TcpPrint,"ax",%progbits
 4793              		.align	2
 4794              		.global	ETH_TcpPrint
 4795              		.thumb
 4796              		.thumb_func
 4797              		.type	ETH_TcpPrint, %function
 4798              	ETH_TcpPrint:
 4799              	.LFB69:
1691:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1692:.\Generated_Source\PSoC5/ETH.c **** void
1693:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpPrint( uint8 socket, const char* str )
1694:.\Generated_Source\PSoC5/ETH.c **** {
 4800              		.loc 1 1694 0
 4801              		.cfi_startproc
 4802              		@ args = 0, pretend = 0, frame = 8
 4803              		@ frame_needed = 1, uses_anonymous_args = 0
 4804 0000 80B5     		push	{r7, lr}
 4805              	.LCFI204:
 4806              		.cfi_def_cfa_offset 8
 4807              		.cfi_offset 7, -8
 4808              		.cfi_offset 14, -4
 4809 0002 82B0     		sub	sp, sp, #8
 4810              	.LCFI205:
 4811              		.cfi_def_cfa_offset 16
 4812 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 116


 4813              	.LCFI206:
 4814              		.cfi_def_cfa_register 7
 4815 0006 0346     		mov	r3, r0
 4816 0008 3960     		str	r1, [r7, #0]
 4817 000a FB71     		strb	r3, [r7, #7]
1695:.\Generated_Source\PSoC5/ETH.c **** 	ETH_TcpSend(socket, (uint8*)str, strlen(str));
 4818              		.loc 1 1695 0
 4819 000c 3868     		ldr	r0, [r7, #0]
 4820 000e FFF7FEFF 		bl	strlen
 4821 0012 0346     		mov	r3, r0
 4822 0014 9BB2     		uxth	r3, r3
 4823 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4824 0018 1046     		mov	r0, r2
 4825 001a 3968     		ldr	r1, [r7, #0]
 4826 001c 1A46     		mov	r2, r3
 4827 001e FFF7FEFF 		bl	ETH_TcpSend
1696:.\Generated_Source\PSoC5/ETH.c **** }
 4828              		.loc 1 1696 0
 4829 0022 07F10807 		add	r7, r7, #8
 4830 0026 BD46     		mov	sp, r7
 4831 0028 80BD     		pop	{r7, pc}
 4832              		.cfi_endproc
 4833              	.LFE69:
 4834              		.size	ETH_TcpPrint, .-ETH_TcpPrint
 4835 002a 00BF     		.section	.text.ETH_UdpOpen,"ax",%progbits
 4836              		.align	2
 4837              		.global	ETH_UdpOpen
 4838              		.thumb
 4839              		.thumb_func
 4840              		.type	ETH_UdpOpen, %function
 4841              	ETH_UdpOpen:
 4842              	.LFB70:
1697:.\Generated_Source\PSoC5/ETH.c **** #endif
1698:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
1699:.\Generated_Source\PSoC5/ETH.c **** /* UDP */
1700:.\Generated_Source\PSoC5/ETH.c **** #if (1)
1701:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1702:.\Generated_Source\PSoC5/ETH.c **** uint8
1703:.\Generated_Source\PSoC5/ETH.c **** ETH_UdpOpen(uint16 port)
1704:.\Generated_Source\PSoC5/ETH.c **** {
 4843              		.loc 1 1704 0
 4844              		.cfi_startproc
 4845              		@ args = 0, pretend = 0, frame = 8
 4846              		@ frame_needed = 1, uses_anonymous_args = 0
 4847 0000 80B5     		push	{r7, lr}
 4848              	.LCFI207:
 4849              		.cfi_def_cfa_offset 8
 4850              		.cfi_offset 7, -8
 4851              		.cfi_offset 14, -4
 4852 0002 82B0     		sub	sp, sp, #8
 4853              	.LCFI208:
 4854              		.cfi_def_cfa_offset 16
 4855 0004 00AF     		add	r7, sp, #0
 4856              	.LCFI209:
 4857              		.cfi_def_cfa_register 7
 4858 0006 0346     		mov	r3, r0
 4859 0008 FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 117


1705:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_SocketOpen(ETH_PROTO_UDP, port, 0);
 4860              		.loc 1 1705 0
 4861 000a FB88     		ldrh	r3, [r7, #6]
 4862 000c 4FF00200 		mov	r0, #2
 4863 0010 1946     		mov	r1, r3
 4864 0012 4FF00002 		mov	r2, #0
 4865 0016 FFF7FEFF 		bl	ETH_SocketOpen
 4866 001a 0346     		mov	r3, r0
1706:.\Generated_Source\PSoC5/ETH.c **** }
 4867              		.loc 1 1706 0
 4868 001c 1846     		mov	r0, r3
 4869 001e 07F10807 		add	r7, r7, #8
 4870 0022 BD46     		mov	sp, r7
 4871 0024 80BD     		pop	{r7, pc}
 4872              		.cfi_endproc
 4873              	.LFE70:
 4874              		.size	ETH_UdpOpen, .-ETH_UdpOpen
 4875 0026 00BF     		.section	.text.ETH_UdpSend,"ax",%progbits
 4876              		.align	2
 4877              		.global	ETH_UdpSend
 4878              		.thumb
 4879              		.thumb_func
 4880              		.type	ETH_UdpSend, %function
 4881              	ETH_UdpSend:
 4882              	.LFB71:
1707:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */	
1708:.\Generated_Source\PSoC5/ETH.c **** uint16
1709:.\Generated_Source\PSoC5/ETH.c **** ETH_UdpSend(uint8 socket, uint32 ip, uint16 port, uint8* buffer, uint16 length)
1710:.\Generated_Source\PSoC5/ETH.c **** {
 4883              		.loc 1 1710 0
 4884              		.cfi_startproc
 4885              		@ args = 4, pretend = 0, frame = 24
 4886              		@ frame_needed = 1, uses_anonymous_args = 0
 4887 0000 80B5     		push	{r7, lr}
 4888              	.LCFI210:
 4889              		.cfi_def_cfa_offset 8
 4890              		.cfi_offset 7, -8
 4891              		.cfi_offset 14, -4
 4892 0002 86B0     		sub	sp, sp, #24
 4893              	.LCFI211:
 4894              		.cfi_def_cfa_offset 32
 4895 0004 00AF     		add	r7, sp, #0
 4896              	.LCFI212:
 4897              		.cfi_def_cfa_register 7
 4898 0006 B960     		str	r1, [r7, #8]
 4899 0008 7B60     		str	r3, [r7, #4]
 4900 000a 0346     		mov	r3, r0
 4901 000c FB73     		strb	r3, [r7, #15]
 4902 000e 1346     		mov	r3, r2	@ movhi
 4903 0010 BB81     		strh	r3, [r7, #12]	@ movhi
1711:.\Generated_Source\PSoC5/ETH.c **** 	uint16 TxSize;
1712:.\Generated_Source\PSoC5/ETH.c **** 	
1713:.\Generated_Source\PSoC5/ETH.c **** 	/*
1714:.\Generated_Source\PSoC5/ETH.c **** 	 * 2.0 Patch: retun immediately upon the detection of a socket that is not open
1715:.\Generated_Source\PSoC5/ETH.c **** 	 */
1716:.\Generated_Source\PSoC5/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 4904              		.loc 1 1716 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 118


 4905 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4906 0014 072B     		cmp	r3, #7
 4907 0016 02D9     		bls	.L226
 4908              		.loc 1 1716 0 is_stmt 0 discriminator 1
 4909 0018 4FF00003 		mov	r3, #0
 4910 001c 30E0     		b	.L227
 4911              	.L226:
1717:.\Generated_Source\PSoC5/ETH.c **** 	/*
1718:.\Generated_Source\PSoC5/ETH.c **** 	 * Transmit a buffer of data to a specified remote system using UDP.
1719:.\Generated_Source\PSoC5/ETH.c **** 	 */
1720:.\Generated_Source\PSoC5/ETH.c **** 	if (ETH_GetSocketStatus(socket) == 0x17) {
 4912              		.loc 1 1720 0 is_stmt 1
 4913 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4914 0020 1846     		mov	r0, r3
 4915 0022 FFF7FEFF 		bl	ETH_GetSocketStatus
 4916 0026 0346     		mov	r3, r0
 4917 0028 172B     		cmp	r3, #23
 4918 002a 28D1     		bne	.L228
1721:.\Generated_Source\PSoC5/ETH.c **** 		/*
1722:.\Generated_Source\PSoC5/ETH.c **** 		 * The socket has been established, so wait for available
1723:.\Generated_Source\PSoC5/ETH.c **** 		 * room in the transmit buffer of the socket, but, trim the
1724:.\Generated_Source\PSoC5/ETH.c **** 		 * transmitted data length to no more than the available
1725:.\Generated_Source\PSoC5/ETH.c **** 		 * buffer size in the device. (2K)
1726:.\Generated_Source\PSoC5/ETH.c **** 		 */
1727:.\Generated_Source\PSoC5/ETH.c **** 		TxSize = (length > 0x0800) ? 0x0800 : length;
 4919              		.loc 1 1727 0
 4920 002c 3B8C     		ldrh	r3, [r7, #32]
 4921 002e B3F5006F 		cmp	r3, #2048
 4922 0032 28BF     		it	cs
 4923 0034 4FF40063 		movcs	r3, #2048
 4924 0038 FB82     		strh	r3, [r7, #22]	@ movhi
1728:.\Generated_Source\PSoC5/ETH.c **** 		if ( (ip != 0) && (ip != 0xFFFFFFFF) ) {
 4925              		.loc 1 1728 0
 4926 003a BB68     		ldr	r3, [r7, #8]
 4927 003c 002B     		cmp	r3, #0
 4928 003e 1BD0     		beq	.L229
 4929              		.loc 1 1728 0 is_stmt 0 discriminator 1
 4930 0040 BB68     		ldr	r3, [r7, #8]
 4931 0042 B3F1FF3F 		cmp	r3, #-1
 4932 0046 17D0     		beq	.L229
1729:.\Generated_Source\PSoC5/ETH.c **** 			/*
1730:.\Generated_Source\PSoC5/ETH.c **** 			 * Store the destination IP and port in the chip
1731:.\Generated_Source\PSoC5/ETH.c **** 			 * socket registers.
1732:.\Generated_Source\PSoC5/ETH.c **** 			 */
1733:.\Generated_Source\PSoC5/ETH.c **** 			ETH_SetSocketDestIP( socket, ip );
 4933              		.loc 1 1733 0 is_stmt 1
 4934 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4935 004a 1846     		mov	r0, r3
 4936 004c B968     		ldr	r1, [r7, #8]
 4937 004e FFF7FEFF 		bl	ETH_SetSocketDestIP
1734:.\Generated_Source\PSoC5/ETH.c **** 			ETH_SetSocketDestPort( socket, port );
 4938              		.loc 1 1734 0
 4939 0052 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4940 0054 BB89     		ldrh	r3, [r7, #12]
 4941 0056 1046     		mov	r0, r2
 4942 0058 1946     		mov	r1, r3
 4943 005a FFF7FEFF 		bl	ETH_SetSocketDestPort
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 119


1735:.\Generated_Source\PSoC5/ETH.c **** 			/*
1736:.\Generated_Source\PSoC5/ETH.c **** 			 * process the transmission buffer, and write it in to
1737:.\Generated_Source\PSoC5/ETH.c **** 			 * the chip buffer memory.
1738:.\Generated_Source\PSoC5/ETH.c **** 			 */
1739:.\Generated_Source\PSoC5/ETH.c **** 			ETH_ProcessTxData(socket,0,buffer,TxSize);
 4944              		.loc 1 1739 0
 4945 005e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4946 0060 FB8A     		ldrh	r3, [r7, #22]
 4947 0062 1046     		mov	r0, r2
 4948 0064 4FF00001 		mov	r1, #0
 4949 0068 7A68     		ldr	r2, [r7, #4]
 4950 006a FFF7FEFF 		bl	ETH_ProcessTxData
1740:.\Generated_Source\PSoC5/ETH.c **** 			/*
1741:.\Generated_Source\PSoC5/ETH.c **** 			 * Issue the send command to transmit the buffer.
1742:.\Generated_Source\PSoC5/ETH.c **** 			 */
1743:.\Generated_Source\PSoC5/ETH.c **** 			ETH_SocketSend( socket ); 
 4951              		.loc 1 1743 0
 4952 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4953 0070 1846     		mov	r0, r3
 4954 0072 FFF7FEFF 		bl	ETH_SocketSend
 4955 0076 02E0     		b	.L228
 4956              	.L229:
1744:.\Generated_Source\PSoC5/ETH.c **** 		}
1745:.\Generated_Source\PSoC5/ETH.c **** 		else {
1746:.\Generated_Source\PSoC5/ETH.c **** 			/* an invalid IP address was issued, so return that no data was sent. */
1747:.\Generated_Source\PSoC5/ETH.c **** 			TxSize = 0;
 4957              		.loc 1 1747 0
 4958 0078 4FF00003 		mov	r3, #0
 4959 007c FB82     		strh	r3, [r7, #22]	@ movhi
 4960              	.L228:
1748:.\Generated_Source\PSoC5/ETH.c **** 		}
1749:.\Generated_Source\PSoC5/ETH.c **** 	}
1750:.\Generated_Source\PSoC5/ETH.c **** 	return TxSize;
 4961              		.loc 1 1750 0
 4962 007e FB8A     		ldrh	r3, [r7, #22]
 4963              	.L227:
1751:.\Generated_Source\PSoC5/ETH.c **** }
 4964              		.loc 1 1751 0
 4965 0080 1846     		mov	r0, r3
 4966 0082 07F11807 		add	r7, r7, #24
 4967 0086 BD46     		mov	sp, r7
 4968 0088 80BD     		pop	{r7, pc}
 4969              		.cfi_endproc
 4970              	.LFE71:
 4971              		.size	ETH_UdpSend, .-ETH_UdpSend
 4972 008a 00BF     		.section	.text.ETH_UdpReceive,"ax",%progbits
 4973              		.align	2
 4974              		.global	ETH_UdpReceive
 4975              		.thumb
 4976              		.thumb_func
 4977              		.type	ETH_UdpReceive, %function
 4978              	ETH_UdpReceive:
 4979              	.LFB72:
1752:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1753:.\Generated_Source\PSoC5/ETH.c **** uint16
1754:.\Generated_Source\PSoC5/ETH.c **** ETH_UdpReceive(uint8 socket, uint32 *ip, uint16 *port, uint8* buffer, uint16 length)
1755:.\Generated_Source\PSoC5/ETH.c **** {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 120


 4980              		.loc 1 1755 0
 4981              		.cfi_startproc
 4982              		@ args = 4, pretend = 0, frame = 32
 4983              		@ frame_needed = 1, uses_anonymous_args = 0
 4984 0000 80B5     		push	{r7, lr}
 4985              	.LCFI213:
 4986              		.cfi_def_cfa_offset 8
 4987              		.cfi_offset 7, -8
 4988              		.cfi_offset 14, -4
 4989 0002 8AB0     		sub	sp, sp, #40
 4990              	.LCFI214:
 4991              		.cfi_def_cfa_offset 48
 4992 0004 02AF     		add	r7, sp, #8
 4993              	.LCFI215:
 4994              		.cfi_def_cfa 7, 40
 4995 0006 B960     		str	r1, [r7, #8]
 4996 0008 7A60     		str	r2, [r7, #4]
 4997 000a 3B60     		str	r3, [r7, #0]
 4998 000c 0346     		mov	r3, r0
 4999 000e FB73     		strb	r3, [r7, #15]
1756:.\Generated_Source\PSoC5/ETH.c **** 	uint16 RxSize;
1757:.\Generated_Source\PSoC5/ETH.c **** 	uint16 PacketSize;
1758:.\Generated_Source\PSoC5/ETH.c **** 	uint8  PacketHeader[8];
1759:.\Generated_Source\PSoC5/ETH.c **** 	
1760:.\Generated_Source\PSoC5/ETH.c **** 	/*
1761:.\Generated_Source\PSoC5/ETH.c **** 	 * 2.0 Patch: retun immediately upon the detection of a socket that is not open
1762:.\Generated_Source\PSoC5/ETH.c **** 	 */
1763:.\Generated_Source\PSoC5/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 5000              		.loc 1 1763 0
 5001 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5002 0012 072B     		cmp	r3, #7
 5003 0014 02D9     		bls	.L231
 5004              		.loc 1 1763 0 is_stmt 0 discriminator 1
 5005 0016 4FF00003 		mov	r3, #0
 5006 001a 6CE0     		b	.L237
 5007              	.L231:
1764:.\Generated_Source\PSoC5/ETH.c **** 	/*
1765:.\Generated_Source\PSoC5/ETH.c **** 	 * read the number of waiting bytes in the buffer memory
1766:.\Generated_Source\PSoC5/ETH.c **** 	 * but, clip the length of data read to the requested
1767:.\Generated_Source\PSoC5/ETH.c **** 	 * length of data.
1768:.\Generated_Source\PSoC5/ETH.c **** 	 */
1769:.\Generated_Source\PSoC5/ETH.c **** 	RxSize = ETH_GetRxSize( socket );
 5008              		.loc 1 1769 0 is_stmt 1
 5009 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5010 001e 1846     		mov	r0, r3
 5011 0020 FFF7FEFF 		bl	ETH_GetRxSize
 5012 0024 0346     		mov	r3, r0
 5013 0026 FB83     		strh	r3, [r7, #30]	@ movhi
1770:.\Generated_Source\PSoC5/ETH.c **** 	RxSize = (RxSize > length+8) ? length : RxSize;
 5014              		.loc 1 1770 0
 5015 0028 FA8B     		ldrh	r2, [r7, #30]
 5016 002a 3B8D     		ldrh	r3, [r7, #40]
 5017 002c 03F10803 		add	r3, r3, #8
 5018 0030 9A42     		cmp	r2, r3
 5019 0032 01DD     		ble	.L233
 5020              		.loc 1 1770 0 is_stmt 0 discriminator 1
 5021 0034 3B8D     		ldrh	r3, [r7, #40]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 121


 5022 0036 00E0     		b	.L234
 5023              	.L233:
 5024              		.loc 1 1770 0 discriminator 2
 5025 0038 FB8B     		ldrh	r3, [r7, #30]
 5026              	.L234:
 5027              		.loc 1 1770 0 discriminator 3
 5028 003a FB83     		strh	r3, [r7, #30]	@ movhi
1771:.\Generated_Source\PSoC5/ETH.c **** 	/* If there was waiting data, read it from the buffer */
1772:.\Generated_Source\PSoC5/ETH.c **** 	if (RxSize > 0) {
 5029              		.loc 1 1772 0 is_stmt 1 discriminator 3
 5030 003c FB8B     		ldrh	r3, [r7, #30]
 5031 003e 002B     		cmp	r3, #0
 5032 0040 58D0     		beq	.L235
1773:.\Generated_Source\PSoC5/ETH.c **** 		/*
1774:.\Generated_Source\PSoC5/ETH.c **** 		 * the UDP packet is stored in the buffer memory as an 8-byte
1775:.\Generated_Source\PSoC5/ETH.c **** 		 * packet header followed by the packet data.
1776:.\Generated_Source\PSoC5/ETH.c **** 		*/
1777:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ProcessRxData( socket, 0, &PacketHeader[0], 8, 0);
 5033              		.loc 1 1777 0
 5034 0042 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5035 0044 07F11403 		add	r3, r7, #20
 5036 0048 4FF00001 		mov	r1, #0
 5037 004c 0091     		str	r1, [sp, #0]
 5038 004e 1046     		mov	r0, r2
 5039 0050 4FF00001 		mov	r1, #0
 5040 0054 1A46     		mov	r2, r3
 5041 0056 4FF00803 		mov	r3, #8
 5042 005a FFF7FEFF 		bl	ETH_ProcessRxData
1778:.\Generated_Source\PSoC5/ETH.c **** 		/*
1779:.\Generated_Source\PSoC5/ETH.c **** 		 * The packet header contains the 4-byte IP address followed by the
1780:.\Generated_Source\PSoC5/ETH.c **** 		 * 2-byte port number and the 2-byte packet data length
1781:.\Generated_Source\PSoC5/ETH.c **** 		 */
1782:.\Generated_Source\PSoC5/ETH.c **** 		*ip = ETH_IPADDRESS(PacketHeader[0], PacketHeader[1], PacketHeader[2], PacketHeader[3]);
 5043              		.loc 1 1782 0
 5044 005e 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 5045 0060 1A46     		mov	r2, r3
 5046 0062 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 5047 0064 4FEA0323 		lsl	r3, r3, #8
 5048 0068 4FEA0343 		lsl	r3, r3, #16
 5049 006c 4FEA1343 		lsr	r3, r3, #16
 5050 0070 D218     		adds	r2, r2, r3
 5051 0072 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 5052 0074 4FEA0343 		lsl	r3, r3, #16
 5053 0078 03F47F03 		and	r3, r3, #16711680
 5054 007c D218     		adds	r2, r2, r3
 5055 007e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5056 0080 4FEA0363 		lsl	r3, r3, #24
 5057 0084 D218     		adds	r2, r2, r3
 5058 0086 BB68     		ldr	r3, [r7, #8]
 5059 0088 1A60     		str	r2, [r3, #0]
1783:.\Generated_Source\PSoC5/ETH.c **** 		*port = (uint16)((PacketHeader[4]<<8)&0xFF00) | (PacketHeader[5]&0x00FF);
 5060              		.loc 1 1783 0
 5061 008a 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 5062 008c 4FEA0323 		lsl	r3, r3, #8
 5063 0090 9BB2     		uxth	r3, r3
 5064 0092 23F0FF03 		bic	r3, r3, #255
 5065 0096 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 122


 5066 0098 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 5067 009a 1343     		orrs	r3, r3, r2
 5068 009c 9BB2     		uxth	r3, r3
 5069 009e 9AB2     		uxth	r2, r3
 5070 00a0 7B68     		ldr	r3, [r7, #4]
 5071 00a2 1A80     		strh	r2, [r3, #0]	@ movhi
1784:.\Generated_Source\PSoC5/ETH.c **** 		PacketSize = (uint16)((PacketHeader[6]<<8)&0xFF00) | (PacketHeader[7]&0x00FF);
 5072              		.loc 1 1784 0
 5073 00a4 BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 5074 00a6 4FEA0323 		lsl	r3, r3, #8
 5075 00aa 9BB2     		uxth	r3, r3
 5076 00ac 23F0FF03 		bic	r3, r3, #255
 5077 00b0 9AB2     		uxth	r2, r3
 5078 00b2 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 5079 00b4 1343     		orrs	r3, r3, r2
 5080 00b6 9BB2     		uxth	r3, r3
 5081 00b8 BB83     		strh	r3, [r7, #28]	@ movhi
1785:.\Generated_Source\PSoC5/ETH.c **** 		/*
1786:.\Generated_Source\PSoC5/ETH.c **** 		 * Check to make sure that the packet data has been received completely
1787:.\Generated_Source\PSoC5/ETH.c **** 		 */
1788:.\Generated_Source\PSoC5/ETH.c **** 		if (RxSize >= (PacketSize+8) ) {
 5082              		.loc 1 1788 0
 5083 00ba FA8B     		ldrh	r2, [r7, #30]
 5084 00bc BB8B     		ldrh	r3, [r7, #28]
 5085 00be 03F10803 		add	r3, r3, #8
 5086 00c2 9A42     		cmp	r2, r3
 5087 00c4 13DB     		blt	.L236
1789:.\Generated_Source\PSoC5/ETH.c **** 		
1790:.\Generated_Source\PSoC5/ETH.c **** 			ETH_ProcessRxData( socket, 8, buffer, PacketSize, 0);
 5088              		.loc 1 1790 0
 5089 00c6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5090 00c8 BB8B     		ldrh	r3, [r7, #28]
 5091 00ca 4FF00001 		mov	r1, #0
 5092 00ce 0091     		str	r1, [sp, #0]
 5093 00d0 1046     		mov	r0, r2
 5094 00d2 4FF00801 		mov	r1, #8
 5095 00d6 3A68     		ldr	r2, [r7, #0]
 5096 00d8 FFF7FEFF 		bl	ETH_ProcessRxData
1791:.\Generated_Source\PSoC5/ETH.c **** 			/* 
1792:.\Generated_Source\PSoC5/ETH.c **** 			 * after reading the buffer data, send the receive command
1793:.\Generated_Source\PSoC5/ETH.c **** 			 * to the socket so that the W5100 completes the read
1794:.\Generated_Source\PSoC5/ETH.c **** 			 */
1795:.\Generated_Source\PSoC5/ETH.c **** 			ETH_ExecuteSocketCommand(socket, 0x40);
 5097              		.loc 1 1795 0
 5098 00dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5099 00de 1846     		mov	r0, r3
 5100 00e0 4FF04001 		mov	r1, #64
 5101 00e4 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1796:.\Generated_Source\PSoC5/ETH.c **** 			RxSize = PacketSize;
 5102              		.loc 1 1796 0
 5103 00e8 BB8B     		ldrh	r3, [r7, #28]	@ movhi
 5104 00ea FB83     		strh	r3, [r7, #30]	@ movhi
 5105 00ec 02E0     		b	.L235
 5106              	.L236:
1797:.\Generated_Source\PSoC5/ETH.c **** 		}
1798:.\Generated_Source\PSoC5/ETH.c **** 		else {
1799:.\Generated_Source\PSoC5/ETH.c **** 			RxSize = 8;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 123


 5107              		.loc 1 1799 0
 5108 00ee 4FF00803 		mov	r3, #8
 5109 00f2 FB83     		strh	r3, [r7, #30]	@ movhi
 5110              	.L235:
1800:.\Generated_Source\PSoC5/ETH.c **** 		}
1801:.\Generated_Source\PSoC5/ETH.c **** 	}
1802:.\Generated_Source\PSoC5/ETH.c **** 	
1803:.\Generated_Source\PSoC5/ETH.c **** 	/* return the number of read bytes from the buffer memory */
1804:.\Generated_Source\PSoC5/ETH.c **** 	return RxSize;
 5111              		.loc 1 1804 0
 5112 00f4 FB8B     		ldrh	r3, [r7, #30]
 5113              	.L237:
1805:.\Generated_Source\PSoC5/ETH.c **** }
 5114              		.loc 1 1805 0
 5115 00f6 1846     		mov	r0, r3
 5116 00f8 07F12007 		add	r7, r7, #32
 5117 00fc BD46     		mov	sp, r7
 5118 00fe 80BD     		pop	{r7, pc}
 5119              		.cfi_endproc
 5120              	.LFE72:
 5121              		.size	ETH_UdpReceive, .-ETH_UdpReceive
 5122              		.text
 5123              	.Letext0:
 5124              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 5125              		.section	.debug_info,"",%progbits
 5126              	.Ldebug_info0:
 5127 0000 75150000 		.4byte	0x1575
 5128 0004 0200     		.2byte	0x2
 5129 0006 00000000 		.4byte	.Ldebug_abbrev0
 5130 000a 04       		.byte	0x4
 5131 000b 01       		.uleb128 0x1
 5132 000c 95070000 		.4byte	.LASF145
 5133 0010 01       		.byte	0x1
 5134 0011 2F020000 		.4byte	.LASF146
 5135 0015 C4020000 		.4byte	.LASF147
 5136 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5137 001d 00000000 		.4byte	0
 5138 0021 00000000 		.4byte	0
 5139 0025 00000000 		.4byte	.Ldebug_line0
 5140 0029 02       		.uleb128 0x2
 5141 002a 01       		.byte	0x1
 5142 002b 06       		.byte	0x6
 5143 002c 6F070000 		.4byte	.LASF0
 5144 0030 02       		.uleb128 0x2
 5145 0031 01       		.byte	0x1
 5146 0032 08       		.byte	0x8
 5147 0033 D0060000 		.4byte	.LASF1
 5148 0037 02       		.uleb128 0x2
 5149 0038 02       		.byte	0x2
 5150 0039 05       		.byte	0x5
 5151 003a 56050000 		.4byte	.LASF2
 5152 003e 02       		.uleb128 0x2
 5153 003f 02       		.byte	0x2
 5154 0040 07       		.byte	0x7
 5155 0041 7B070000 		.4byte	.LASF3
 5156 0045 02       		.uleb128 0x2
 5157 0046 04       		.byte	0x4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 124


 5158 0047 05       		.byte	0x5
 5159 0048 77050000 		.4byte	.LASF4
 5160 004c 02       		.uleb128 0x2
 5161 004d 04       		.byte	0x4
 5162 004e 07       		.byte	0x7
 5163 004f 68060000 		.4byte	.LASF5
 5164 0053 02       		.uleb128 0x2
 5165 0054 08       		.byte	0x8
 5166 0055 05       		.byte	0x5
 5167 0056 48040000 		.4byte	.LASF6
 5168 005a 02       		.uleb128 0x2
 5169 005b 08       		.byte	0x8
 5170 005c 07       		.byte	0x7
 5171 005d E3010000 		.4byte	.LASF7
 5172 0061 03       		.uleb128 0x3
 5173 0062 04       		.byte	0x4
 5174 0063 05       		.byte	0x5
 5175 0064 696E7400 		.ascii	"int\000"
 5176 0068 02       		.uleb128 0x2
 5177 0069 04       		.byte	0x4
 5178 006a 07       		.byte	0x7
 5179 006b 7B000000 		.4byte	.LASF8
 5180 006f 04       		.uleb128 0x4
 5181 0070 F8070000 		.4byte	.LASF9
 5182 0074 02       		.byte	0x2
 5183 0075 5B       		.byte	0x5b
 5184 0076 30000000 		.4byte	0x30
 5185 007a 04       		.uleb128 0x4
 5186 007b C9030000 		.4byte	.LASF10
 5187 007f 02       		.byte	0x2
 5188 0080 5C       		.byte	0x5c
 5189 0081 3E000000 		.4byte	0x3e
 5190 0085 04       		.uleb128 0x4
 5191 0086 B6040000 		.4byte	.LASF11
 5192 008a 02       		.byte	0x2
 5193 008b 5D       		.byte	0x5d
 5194 008c 4C000000 		.4byte	0x4c
 5195 0090 02       		.uleb128 0x2
 5196 0091 04       		.byte	0x4
 5197 0092 04       		.byte	0x4
 5198 0093 98010000 		.4byte	.LASF12
 5199 0097 02       		.uleb128 0x2
 5200 0098 08       		.byte	0x8
 5201 0099 04       		.byte	0x4
 5202 009a FE070000 		.4byte	.LASF13
 5203 009e 02       		.uleb128 0x2
 5204 009f 01       		.byte	0x1
 5205 00a0 08       		.byte	0x8
 5206 00a1 99030000 		.4byte	.LASF14
 5207 00a5 04       		.uleb128 0x4
 5208 00a6 C7060000 		.4byte	.LASF15
 5209 00aa 02       		.byte	0x2
 5210 00ab E8       		.byte	0xe8
 5211 00ac 4C000000 		.4byte	0x4c
 5212 00b0 02       		.uleb128 0x2
 5213 00b1 04       		.byte	0x4
 5214 00b2 07       		.byte	0x7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 125


 5215 00b3 4D060000 		.4byte	.LASF16
 5216 00b7 05       		.uleb128 0x5
 5217 00b8 04       		.byte	0x4
 5218 00b9 9E000000 		.4byte	0x9e
 5219 00bd 05       		.uleb128 0x5
 5220 00be 04       		.byte	0x4
 5221 00bf C3000000 		.4byte	0xc3
 5222 00c3 06       		.uleb128 0x6
 5223 00c4 9E000000 		.4byte	0x9e
 5224 00c8 07       		.uleb128 0x7
 5225 00c9 08       		.byte	0x8
 5226 00ca 01       		.byte	0x1
 5227 00cb 32       		.byte	0x32
 5228 00cc 25010000 		.4byte	0x125
 5229 00d0 08       		.uleb128 0x8
 5230 00d1 A8040000 		.4byte	.LASF17
 5231 00d5 01       		.byte	0x1
 5232 00d6 34       		.byte	0x34
 5233 00d7 6F000000 		.4byte	0x6f
 5234 00db 02       		.byte	0x2
 5235 00dc 23       		.byte	0x23
 5236 00dd 00       		.uleb128 0
 5237 00de 08       		.uleb128 0x8
 5238 00df A9060000 		.4byte	.LASF18
 5239 00e3 01       		.byte	0x1
 5240 00e4 35       		.byte	0x35
 5241 00e5 6F000000 		.4byte	0x6f
 5242 00e9 02       		.byte	0x2
 5243 00ea 23       		.byte	0x23
 5244 00eb 01       		.uleb128 0x1
 5245 00ec 08       		.uleb128 0x8
 5246 00ed 37030000 		.4byte	.LASF19
 5247 00f1 01       		.byte	0x1
 5248 00f2 36       		.byte	0x36
 5249 00f3 7A000000 		.4byte	0x7a
 5250 00f7 02       		.byte	0x2
 5251 00f8 23       		.byte	0x23
 5252 00f9 02       		.uleb128 0x2
 5253 00fa 08       		.uleb128 0x8
 5254 00fb 39010000 		.4byte	.LASF20
 5255 00ff 01       		.byte	0x1
 5256 0100 37       		.byte	0x37
 5257 0101 6F000000 		.4byte	0x6f
 5258 0105 02       		.byte	0x2
 5259 0106 23       		.byte	0x23
 5260 0107 04       		.uleb128 0x4
 5261 0108 08       		.uleb128 0x8
 5262 0109 56000000 		.4byte	.LASF21
 5263 010d 01       		.byte	0x1
 5264 010e 38       		.byte	0x38
 5265 010f 6F000000 		.4byte	0x6f
 5266 0113 02       		.byte	0x2
 5267 0114 23       		.byte	0x23
 5268 0115 05       		.uleb128 0x5
 5269 0116 08       		.uleb128 0x8
 5270 0117 6F030000 		.4byte	.LASF22
 5271 011b 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 126


 5272 011c 39       		.byte	0x39
 5273 011d 6F000000 		.4byte	0x6f
 5274 0121 02       		.byte	0x2
 5275 0122 23       		.byte	0x23
 5276 0123 06       		.uleb128 0x6
 5277 0124 00       		.byte	0
 5278 0125 04       		.uleb128 0x4
 5279 0126 E7040000 		.4byte	.LASF23
 5280 012a 01       		.byte	0x1
 5281 012b 3A       		.byte	0x3a
 5282 012c C8000000 		.4byte	0xc8
 5283 0130 09       		.uleb128 0x9
 5284 0131 01       		.byte	0x1
 5285 0132 87060000 		.4byte	.LASF24
 5286 0136 01       		.byte	0x1
 5287 0137 9C       		.byte	0x9c
 5288 0138 01       		.byte	0x1
 5289 0139 00000000 		.4byte	.LFB0
 5290 013d 0E000000 		.4byte	.LFE0
 5291 0141 00000000 		.4byte	.LLST0
 5292 0145 01       		.byte	0x1
 5293 0146 09       		.uleb128 0x9
 5294 0147 01       		.byte	0x1
 5295 0148 91040000 		.4byte	.LASF25
 5296 014c 01       		.byte	0x1
 5297 014d B9       		.byte	0xb9
 5298 014e 01       		.byte	0x1
 5299 014f 00000000 		.4byte	.LFB1
 5300 0153 26000000 		.4byte	.LFE1
 5301 0157 2C000000 		.4byte	.LLST1
 5302 015b 01       		.byte	0x1
 5303 015c 0A       		.uleb128 0xa
 5304 015d 01       		.byte	0x1
 5305 015e 50010000 		.4byte	.LASF31
 5306 0162 01       		.byte	0x1
 5307 0163 D5       		.byte	0xd5
 5308 0164 01       		.byte	0x1
 5309 0165 00000000 		.4byte	.LFB2
 5310 0169 00010000 		.4byte	.LFE2
 5311 016d 58000000 		.4byte	.LLST2
 5312 0171 01       		.byte	0x1
 5313 0172 E7010000 		.4byte	0x1e7
 5314 0176 0B       		.uleb128 0xb
 5315 0177 09070000 		.4byte	.LASF26
 5316 017b 01       		.byte	0x1
 5317 017c D5       		.byte	0xd5
 5318 017d 85000000 		.4byte	0x85
 5319 0181 02       		.byte	0x2
 5320 0182 91       		.byte	0x91
 5321 0183 6C       		.sleb128 -20
 5322 0184 0C       		.uleb128 0xc
 5323 0185 64617400 		.ascii	"dat\000"
 5324 0189 01       		.byte	0x1
 5325 018a D5       		.byte	0xd5
 5326 018b E7010000 		.4byte	0x1e7
 5327 018f 02       		.byte	0x2
 5328 0190 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 127


 5329 0191 68       		.sleb128 -24
 5330 0192 0B       		.uleb128 0xb
 5331 0193 99050000 		.4byte	.LASF27
 5332 0197 01       		.byte	0x1
 5333 0198 D5       		.byte	0xd5
 5334 0199 7A000000 		.4byte	0x7a
 5335 019d 02       		.byte	0x2
 5336 019e 91       		.byte	0x91
 5337 019f 66       		.sleb128 -26
 5338 01a0 0D       		.uleb128 0xd
 5339 01a1 8B040000 		.4byte	.LASF28
 5340 01a5 01       		.byte	0x1
 5341 01a6 D7       		.byte	0xd7
 5342 01a7 7A000000 		.4byte	0x7a
 5343 01ab 02       		.byte	0x2
 5344 01ac 91       		.byte	0x91
 5345 01ad 76       		.sleb128 -10
 5346 01ae 0D       		.uleb128 0xd
 5347 01af C1010000 		.4byte	.LASF29
 5348 01b3 01       		.byte	0x1
 5349 01b4 D8       		.byte	0xd8
 5350 01b5 7A000000 		.4byte	0x7a
 5351 01b9 02       		.byte	0x2
 5352 01ba 91       		.byte	0x91
 5353 01bb 74       		.sleb128 -12
 5354 01bc 0E       		.uleb128 0xe
 5355 01bd 61647200 		.ascii	"adr\000"
 5356 01c1 01       		.byte	0x1
 5357 01c2 D9       		.byte	0xd9
 5358 01c3 7A000000 		.4byte	0x7a
 5359 01c7 02       		.byte	0x2
 5360 01c8 91       		.byte	0x91
 5361 01c9 72       		.sleb128 -14
 5362 01ca 0D       		.uleb128 0xd
 5363 01cb 6A070000 		.4byte	.LASF30
 5364 01cf 01       		.byte	0x1
 5365 01d0 DA       		.byte	0xda
 5366 01d1 6F000000 		.4byte	0x6f
 5367 01d5 02       		.byte	0x2
 5368 01d6 91       		.byte	0x91
 5369 01d7 70       		.sleb128 -16
 5370 01d8 0E       		.uleb128 0xe
 5371 01d9 62736200 		.ascii	"bsb\000"
 5372 01dd 01       		.byte	0x1
 5373 01de DC       		.byte	0xdc
 5374 01df 6F000000 		.4byte	0x6f
 5375 01e3 02       		.byte	0x2
 5376 01e4 91       		.byte	0x91
 5377 01e5 71       		.sleb128 -15
 5378 01e6 00       		.byte	0
 5379 01e7 05       		.uleb128 0x5
 5380 01e8 04       		.byte	0x4
 5381 01e9 6F000000 		.4byte	0x6f
 5382 01ed 0F       		.uleb128 0xf
 5383 01ee 01       		.byte	0x1
 5384 01ef 17080000 		.4byte	.LASF32
 5385 01f3 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 128


 5386 01f4 3F01     		.2byte	0x13f
 5387 01f6 01       		.byte	0x1
 5388 01f7 00000000 		.4byte	.LFB3
 5389 01fb 0A010000 		.4byte	.LFE3
 5390 01ff 90000000 		.4byte	.LLST3
 5391 0203 01       		.byte	0x1
 5392 0204 AE020000 		.4byte	0x2ae
 5393 0208 10       		.uleb128 0x10
 5394 0209 09070000 		.4byte	.LASF26
 5395 020d 01       		.byte	0x1
 5396 020e 3F01     		.2byte	0x13f
 5397 0210 85000000 		.4byte	0x85
 5398 0214 02       		.byte	0x2
 5399 0215 91       		.byte	0x91
 5400 0216 64       		.sleb128 -28
 5401 0217 11       		.uleb128 0x11
 5402 0218 64617400 		.ascii	"dat\000"
 5403 021c 01       		.byte	0x1
 5404 021d 3F01     		.2byte	0x13f
 5405 021f E7010000 		.4byte	0x1e7
 5406 0223 02       		.byte	0x2
 5407 0224 91       		.byte	0x91
 5408 0225 60       		.sleb128 -32
 5409 0226 10       		.uleb128 0x10
 5410 0227 99050000 		.4byte	.LASF27
 5411 022b 01       		.byte	0x1
 5412 022c 3F01     		.2byte	0x13f
 5413 022e 7A000000 		.4byte	0x7a
 5414 0232 02       		.byte	0x2
 5415 0233 91       		.byte	0x91
 5416 0234 5E       		.sleb128 -34
 5417 0235 12       		.uleb128 0x12
 5418 0236 C6000000 		.4byte	.LASF33
 5419 023a 01       		.byte	0x1
 5420 023b 4101     		.2byte	0x141
 5421 023d 7A000000 		.4byte	0x7a
 5422 0241 02       		.byte	0x2
 5423 0242 91       		.byte	0x91
 5424 0243 76       		.sleb128 -10
 5425 0244 12       		.uleb128 0x12
 5426 0245 7A060000 		.4byte	.LASF34
 5427 0249 01       		.byte	0x1
 5428 024a 4201     		.2byte	0x142
 5429 024c 7A000000 		.4byte	0x7a
 5430 0250 02       		.byte	0x2
 5431 0251 91       		.byte	0x91
 5432 0252 74       		.sleb128 -12
 5433 0253 12       		.uleb128 0x12
 5434 0254 B0010000 		.4byte	.LASF35
 5435 0258 01       		.byte	0x1
 5436 0259 4301     		.2byte	0x143
 5437 025b 7A000000 		.4byte	0x7a
 5438 025f 02       		.byte	0x2
 5439 0260 91       		.byte	0x91
 5440 0261 6A       		.sleb128 -22
 5441 0262 12       		.uleb128 0x12
 5442 0263 2F030000 		.4byte	.LASF36
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 129


 5443 0267 01       		.byte	0x1
 5444 0268 4401     		.2byte	0x144
 5445 026a 7A000000 		.4byte	0x7a
 5446 026e 02       		.byte	0x2
 5447 026f 91       		.byte	0x91
 5448 0270 72       		.sleb128 -14
 5449 0271 12       		.uleb128 0x12
 5450 0272 DE070000 		.4byte	.LASF37
 5451 0276 01       		.byte	0x1
 5452 0277 4501     		.2byte	0x145
 5453 0279 6F000000 		.4byte	0x6f
 5454 027d 02       		.byte	0x2
 5455 027e 91       		.byte	0x91
 5456 027f 71       		.sleb128 -15
 5457 0280 12       		.uleb128 0x12
 5458 0281 BE000000 		.4byte	.LASF38
 5459 0285 01       		.byte	0x1
 5460 0286 4601     		.2byte	0x146
 5461 0288 7A000000 		.4byte	0x7a
 5462 028c 02       		.byte	0x2
 5463 028d 91       		.byte	0x91
 5464 028e 6E       		.sleb128 -18
 5465 028f 13       		.uleb128 0x13
 5466 0290 72786200 		.ascii	"rxb\000"
 5467 0294 01       		.byte	0x1
 5468 0295 4701     		.2byte	0x147
 5469 0297 6F000000 		.4byte	0x6f
 5470 029b 02       		.byte	0x2
 5471 029c 91       		.byte	0x91
 5472 029d 69       		.sleb128 -23
 5473 029e 13       		.uleb128 0x13
 5474 029f 62736200 		.ascii	"bsb\000"
 5475 02a3 01       		.byte	0x1
 5476 02a4 4901     		.2byte	0x149
 5477 02a6 6F000000 		.4byte	0x6f
 5478 02aa 02       		.byte	0x2
 5479 02ab 91       		.byte	0x91
 5480 02ac 6D       		.sleb128 -19
 5481 02ad 00       		.byte	0
 5482 02ae 0F       		.uleb128 0xf
 5483 02af 01       		.byte	0x1
 5484 02b0 1F020000 		.4byte	.LASF39
 5485 02b4 01       		.byte	0x1
 5486 02b5 E901     		.2byte	0x1e9
 5487 02b7 01       		.byte	0x1
 5488 02b8 00000000 		.4byte	.LFB4
 5489 02bc 3E000000 		.4byte	.LFE4
 5490 02c0 C8000000 		.4byte	.LLST4
 5491 02c4 01       		.byte	0x1
 5492 02c5 F7020000 		.4byte	0x2f7
 5493 02c9 10       		.uleb128 0x10
 5494 02ca 09070000 		.4byte	.LASF26
 5495 02ce 01       		.byte	0x1
 5496 02cf E901     		.2byte	0x1e9
 5497 02d1 85000000 		.4byte	0x85
 5498 02d5 02       		.byte	0x2
 5499 02d6 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 130


 5500 02d7 6C       		.sleb128 -20
 5501 02d8 11       		.uleb128 0x11
 5502 02d9 76616C00 		.ascii	"val\000"
 5503 02dd 01       		.byte	0x1
 5504 02de E901     		.2byte	0x1e9
 5505 02e0 7A000000 		.4byte	0x7a
 5506 02e4 02       		.byte	0x2
 5507 02e5 91       		.byte	0x91
 5508 02e6 6A       		.sleb128 -22
 5509 02e7 12       		.uleb128 0x12
 5510 02e8 65010000 		.4byte	.LASF40
 5511 02ec 01       		.byte	0x1
 5512 02ed EB01     		.2byte	0x1eb
 5513 02ef 7A000000 		.4byte	0x7a
 5514 02f3 02       		.byte	0x2
 5515 02f4 91       		.byte	0x91
 5516 02f5 76       		.sleb128 -10
 5517 02f6 00       		.byte	0
 5518 02f7 14       		.uleb128 0x14
 5519 02f8 01       		.byte	0x1
 5520 02f9 AF000000 		.4byte	.LASF44
 5521 02fd 01       		.byte	0x1
 5522 02fe FA01     		.2byte	0x1fa
 5523 0300 01       		.byte	0x1
 5524 0301 7A000000 		.4byte	0x7a
 5525 0305 00000000 		.4byte	.LFB5
 5526 0309 3E000000 		.4byte	.LFE5
 5527 030d 00010000 		.4byte	.LLST5
 5528 0311 01       		.byte	0x1
 5529 0312 35030000 		.4byte	0x335
 5530 0316 10       		.uleb128 0x10
 5531 0317 09070000 		.4byte	.LASF26
 5532 031b 01       		.byte	0x1
 5533 031c FA01     		.2byte	0x1fa
 5534 031e 85000000 		.4byte	0x85
 5535 0322 02       		.byte	0x2
 5536 0323 91       		.byte	0x91
 5537 0324 6C       		.sleb128 -20
 5538 0325 13       		.uleb128 0x13
 5539 0326 76616C00 		.ascii	"val\000"
 5540 032a 01       		.byte	0x1
 5541 032b FC01     		.2byte	0x1fc
 5542 032d 7A000000 		.4byte	0x7a
 5543 0331 02       		.byte	0x2
 5544 0332 91       		.byte	0x91
 5545 0333 76       		.sleb128 -10
 5546 0334 00       		.byte	0
 5547 0335 0F       		.uleb128 0xf
 5548 0336 01       		.byte	0x1
 5549 0337 29000000 		.4byte	.LASF41
 5550 033b 01       		.byte	0x1
 5551 033c 1102     		.2byte	0x211
 5552 033e 01       		.byte	0x1
 5553 033f 00000000 		.4byte	.LFB6
 5554 0343 1E000000 		.4byte	.LFE6
 5555 0347 38010000 		.4byte	.LLST6
 5556 034b 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 131


 5557 034c 60030000 		.4byte	0x360
 5558 0350 11       		.uleb128 0x11
 5559 0351 6D616300 		.ascii	"mac\000"
 5560 0355 01       		.byte	0x1
 5561 0356 1102     		.2byte	0x211
 5562 0358 E7010000 		.4byte	0x1e7
 5563 035c 02       		.byte	0x2
 5564 035d 91       		.byte	0x91
 5565 035e 74       		.sleb128 -12
 5566 035f 00       		.byte	0
 5567 0360 0F       		.uleb128 0xf
 5568 0361 01       		.byte	0x1
 5569 0362 2B070000 		.4byte	.LASF42
 5570 0366 01       		.byte	0x1
 5571 0367 1A02     		.2byte	0x21a
 5572 0369 01       		.byte	0x1
 5573 036a 00000000 		.4byte	.LFB7
 5574 036e 1E000000 		.4byte	.LFE7
 5575 0372 70010000 		.4byte	.LLST7
 5576 0376 01       		.byte	0x1
 5577 0377 8B030000 		.4byte	0x38b
 5578 037b 11       		.uleb128 0x11
 5579 037c 6D616300 		.ascii	"mac\000"
 5580 0380 01       		.byte	0x1
 5581 0381 1A02     		.2byte	0x21a
 5582 0383 E7010000 		.4byte	0x1e7
 5583 0387 02       		.byte	0x2
 5584 0388 91       		.byte	0x91
 5585 0389 74       		.sleb128 -12
 5586 038a 00       		.byte	0
 5587 038b 0F       		.uleb128 0xf
 5588 038c 01       		.byte	0x1
 5589 038d BD040000 		.4byte	.LASF43
 5590 0391 01       		.byte	0x1
 5591 0392 2302     		.2byte	0x223
 5592 0394 01       		.byte	0x1
 5593 0395 00000000 		.4byte	.LFB8
 5594 0399 22000000 		.4byte	.LFE8
 5595 039d A8010000 		.4byte	.LLST8
 5596 03a1 01       		.byte	0x1
 5597 03a2 B5030000 		.4byte	0x3b5
 5598 03a6 11       		.uleb128 0x11
 5599 03a7 697000   		.ascii	"ip\000"
 5600 03aa 01       		.byte	0x1
 5601 03ab 2302     		.2byte	0x223
 5602 03ad 85000000 		.4byte	0x85
 5603 03b1 02       		.byte	0x2
 5604 03b2 91       		.byte	0x91
 5605 03b3 74       		.sleb128 -12
 5606 03b4 00       		.byte	0
 5607 03b5 14       		.uleb128 0x14
 5608 03b6 01       		.byte	0x1
 5609 03b7 54070000 		.4byte	.LASF45
 5610 03bb 01       		.byte	0x1
 5611 03bc 2C02     		.2byte	0x22c
 5612 03be 01       		.byte	0x1
 5613 03bf 85000000 		.4byte	0x85
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 132


 5614 03c3 00000000 		.4byte	.LFB9
 5615 03c7 28000000 		.4byte	.LFE9
 5616 03cb E0010000 		.4byte	.LLST9
 5617 03cf 01       		.byte	0x1
 5618 03d0 E3030000 		.4byte	0x3e3
 5619 03d4 13       		.uleb128 0x13
 5620 03d5 697000   		.ascii	"ip\000"
 5621 03d8 01       		.byte	0x1
 5622 03d9 2E02     		.2byte	0x22e
 5623 03db 85000000 		.4byte	0x85
 5624 03df 02       		.byte	0x2
 5625 03e0 91       		.byte	0x91
 5626 03e1 74       		.sleb128 -12
 5627 03e2 00       		.byte	0
 5628 03e3 0F       		.uleb128 0xf
 5629 03e4 01       		.byte	0x1
 5630 03e5 F1050000 		.4byte	.LASF46
 5631 03e9 01       		.byte	0x1
 5632 03ea 3902     		.2byte	0x239
 5633 03ec 01       		.byte	0x1
 5634 03ed 00000000 		.4byte	.LFB10
 5635 03f1 22000000 		.4byte	.LFE10
 5636 03f5 18020000 		.4byte	.LLST10
 5637 03f9 01       		.byte	0x1
 5638 03fa 0D040000 		.4byte	0x40d
 5639 03fe 11       		.uleb128 0x11
 5640 03ff 697000   		.ascii	"ip\000"
 5641 0402 01       		.byte	0x1
 5642 0403 3902     		.2byte	0x239
 5643 0405 85000000 		.4byte	0x85
 5644 0409 02       		.byte	0x2
 5645 040a 91       		.byte	0x91
 5646 040b 74       		.sleb128 -12
 5647 040c 00       		.byte	0
 5648 040d 14       		.uleb128 0x14
 5649 040e 01       		.byte	0x1
 5650 040f B5060000 		.4byte	.LASF47
 5651 0413 01       		.byte	0x1
 5652 0414 4202     		.2byte	0x242
 5653 0416 01       		.byte	0x1
 5654 0417 85000000 		.4byte	0x85
 5655 041b 00000000 		.4byte	.LFB11
 5656 041f 28000000 		.4byte	.LFE11
 5657 0423 50020000 		.4byte	.LLST11
 5658 0427 01       		.byte	0x1
 5659 0428 3B040000 		.4byte	0x43b
 5660 042c 13       		.uleb128 0x13
 5661 042d 697000   		.ascii	"ip\000"
 5662 0430 01       		.byte	0x1
 5663 0431 4402     		.2byte	0x244
 5664 0433 85000000 		.4byte	0x85
 5665 0437 02       		.byte	0x2
 5666 0438 91       		.byte	0x91
 5667 0439 74       		.sleb128 -12
 5668 043a 00       		.byte	0
 5669 043b 0F       		.uleb128 0xf
 5670 043c 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 133


 5671 043d 4E020000 		.4byte	.LASF48
 5672 0441 01       		.byte	0x1
 5673 0442 4D02     		.2byte	0x24d
 5674 0444 01       		.byte	0x1
 5675 0445 00000000 		.4byte	.LFB12
 5676 0449 22000000 		.4byte	.LFE12
 5677 044d 88020000 		.4byte	.LLST12
 5678 0451 01       		.byte	0x1
 5679 0452 65040000 		.4byte	0x465
 5680 0456 11       		.uleb128 0x11
 5681 0457 697000   		.ascii	"ip\000"
 5682 045a 01       		.byte	0x1
 5683 045b 4D02     		.2byte	0x24d
 5684 045d 85000000 		.4byte	0x85
 5685 0461 02       		.byte	0x2
 5686 0462 91       		.byte	0x91
 5687 0463 74       		.sleb128 -12
 5688 0464 00       		.byte	0
 5689 0465 14       		.uleb128 0x14
 5690 0466 01       		.byte	0x1
 5691 0467 5F030000 		.4byte	.LASF49
 5692 046b 01       		.byte	0x1
 5693 046c 5602     		.2byte	0x256
 5694 046e 01       		.byte	0x1
 5695 046f 85000000 		.4byte	0x85
 5696 0473 00000000 		.4byte	.LFB13
 5697 0477 28000000 		.4byte	.LFE13
 5698 047b C0020000 		.4byte	.LLST13
 5699 047f 01       		.byte	0x1
 5700 0480 93040000 		.4byte	0x493
 5701 0484 13       		.uleb128 0x13
 5702 0485 697000   		.ascii	"ip\000"
 5703 0488 01       		.byte	0x1
 5704 0489 5802     		.2byte	0x258
 5705 048b 85000000 		.4byte	0x85
 5706 048f 02       		.byte	0x2
 5707 0490 91       		.byte	0x91
 5708 0491 74       		.sleb128 -12
 5709 0492 00       		.byte	0
 5710 0493 0F       		.uleb128 0xf
 5711 0494 01       		.byte	0x1
 5712 0495 3A000000 		.4byte	.LASF50
 5713 0499 01       		.byte	0x1
 5714 049a 6102     		.2byte	0x261
 5715 049c 01       		.byte	0x1
 5716 049d 00000000 		.4byte	.LFB14
 5717 04a1 24000000 		.4byte	.LFE14
 5718 04a5 F8020000 		.4byte	.LLST14
 5719 04a9 01       		.byte	0x1
 5720 04aa BE040000 		.4byte	0x4be
 5721 04ae 10       		.uleb128 0x10
 5722 04af 06010000 		.4byte	.LASF51
 5723 04b3 01       		.byte	0x1
 5724 04b4 6102     		.2byte	0x261
 5725 04b6 6F000000 		.4byte	0x6f
 5726 04ba 02       		.byte	0x2
 5727 04bb 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 134


 5728 04bc 77       		.sleb128 -9
 5729 04bd 00       		.byte	0
 5730 04be 14       		.uleb128 0x14
 5731 04bf 01       		.byte	0x1
 5732 04c0 49030000 		.4byte	.LASF52
 5733 04c4 01       		.byte	0x1
 5734 04c5 6A02     		.2byte	0x26a
 5735 04c7 01       		.byte	0x1
 5736 04c8 6F000000 		.4byte	0x6f
 5737 04cc 00000000 		.4byte	.LFB15
 5738 04d0 24000000 		.4byte	.LFE15
 5739 04d4 30030000 		.4byte	.LLST15
 5740 04d8 01       		.byte	0x1
 5741 04d9 ED040000 		.4byte	0x4ed
 5742 04dd 12       		.uleb128 0x12
 5743 04de 06010000 		.4byte	.LASF51
 5744 04e2 01       		.byte	0x1
 5745 04e3 6C02     		.2byte	0x26c
 5746 04e5 6F000000 		.4byte	0x6f
 5747 04e9 02       		.byte	0x2
 5748 04ea 91       		.byte	0x91
 5749 04eb 77       		.sleb128 -9
 5750 04ec 00       		.byte	0
 5751 04ed 0F       		.uleb128 0xf
 5752 04ee 01       		.byte	0x1
 5753 04ef 76010000 		.4byte	.LASF53
 5754 04f3 01       		.byte	0x1
 5755 04f4 7502     		.2byte	0x275
 5756 04f6 01       		.byte	0x1
 5757 04f7 00000000 		.4byte	.LFB16
 5758 04fb 24000000 		.4byte	.LFE16
 5759 04ff 68030000 		.4byte	.LLST16
 5760 0503 01       		.byte	0x1
 5761 0504 17050000 		.4byte	0x517
 5762 0508 11       		.uleb128 0x11
 5763 0509 697200   		.ascii	"ir\000"
 5764 050c 01       		.byte	0x1
 5765 050d 7502     		.2byte	0x275
 5766 050f 6F000000 		.4byte	0x6f
 5767 0513 02       		.byte	0x2
 5768 0514 91       		.byte	0x91
 5769 0515 77       		.sleb128 -9
 5770 0516 00       		.byte	0
 5771 0517 0F       		.uleb128 0xf
 5772 0518 01       		.byte	0x1
 5773 0519 60050000 		.4byte	.LASF54
 5774 051d 01       		.byte	0x1
 5775 051e 7E02     		.2byte	0x27e
 5776 0520 01       		.byte	0x1
 5777 0521 00000000 		.4byte	.LFB17
 5778 0525 38000000 		.4byte	.LFE17
 5779 0529 A0030000 		.4byte	.LLST17
 5780 052d 01       		.byte	0x1
 5781 052e 51050000 		.4byte	0x551
 5782 0532 10       		.uleb128 0x10
 5783 0533 B1050000 		.4byte	.LASF55
 5784 0537 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 135


 5785 0538 7E02     		.2byte	0x27e
 5786 053a 6F000000 		.4byte	0x6f
 5787 053e 02       		.byte	0x2
 5788 053f 91       		.byte	0x91
 5789 0540 77       		.sleb128 -9
 5790 0541 10       		.uleb128 0x10
 5791 0542 B1040000 		.4byte	.LASF56
 5792 0546 01       		.byte	0x1
 5793 0547 7E02     		.2byte	0x27e
 5794 0549 6F000000 		.4byte	0x6f
 5795 054d 02       		.byte	0x2
 5796 054e 91       		.byte	0x91
 5797 054f 76       		.sleb128 -10
 5798 0550 00       		.byte	0
 5799 0551 14       		.uleb128 0x14
 5800 0552 01       		.byte	0x1
 5801 0553 00000000 		.4byte	.LASF57
 5802 0557 01       		.byte	0x1
 5803 0558 9902     		.2byte	0x299
 5804 055a 01       		.byte	0x1
 5805 055b 6F000000 		.4byte	0x6f
 5806 055f 00000000 		.4byte	.LFB18
 5807 0563 3E000000 		.4byte	.LFE18
 5808 0567 D8030000 		.4byte	.LLST18
 5809 056b 01       		.byte	0x1
 5810 056c 8E050000 		.4byte	0x58e
 5811 0570 10       		.uleb128 0x10
 5812 0571 B1050000 		.4byte	.LASF55
 5813 0575 01       		.byte	0x1
 5814 0576 9902     		.2byte	0x299
 5815 0578 6F000000 		.4byte	0x6f
 5816 057c 02       		.byte	0x2
 5817 057d 91       		.byte	0x91
 5818 057e 6F       		.sleb128 -17
 5819 057f 13       		.uleb128 0x13
 5820 0580 737A00   		.ascii	"sz\000"
 5821 0583 01       		.byte	0x1
 5822 0584 9B02     		.2byte	0x29b
 5823 0586 6F000000 		.4byte	0x6f
 5824 058a 02       		.byte	0x2
 5825 058b 91       		.byte	0x91
 5826 058c 77       		.sleb128 -9
 5827 058d 00       		.byte	0
 5828 058e 0F       		.uleb128 0xf
 5829 058f 01       		.byte	0x1
 5830 0590 01020000 		.4byte	.LASF58
 5831 0594 01       		.byte	0x1
 5832 0595 AB02     		.2byte	0x2ab
 5833 0597 01       		.byte	0x1
 5834 0598 00000000 		.4byte	.LFB19
 5835 059c 38000000 		.4byte	.LFE19
 5836 05a0 10040000 		.4byte	.LLST19
 5837 05a4 01       		.byte	0x1
 5838 05a5 C8050000 		.4byte	0x5c8
 5839 05a9 10       		.uleb128 0x10
 5840 05aa B1050000 		.4byte	.LASF55
 5841 05ae 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 136


 5842 05af AB02     		.2byte	0x2ab
 5843 05b1 6F000000 		.4byte	0x6f
 5844 05b5 02       		.byte	0x2
 5845 05b6 91       		.byte	0x91
 5846 05b7 77       		.sleb128 -9
 5847 05b8 10       		.uleb128 0x10
 5848 05b9 B1040000 		.4byte	.LASF56
 5849 05bd 01       		.byte	0x1
 5850 05be AB02     		.2byte	0x2ab
 5851 05c0 6F000000 		.4byte	0x6f
 5852 05c4 02       		.byte	0x2
 5853 05c5 91       		.byte	0x91
 5854 05c6 76       		.sleb128 -10
 5855 05c7 00       		.byte	0
 5856 05c8 14       		.uleb128 0x14
 5857 05c9 01       		.byte	0x1
 5858 05ca 5E020000 		.4byte	.LASF59
 5859 05ce 01       		.byte	0x1
 5860 05cf C502     		.2byte	0x2c5
 5861 05d1 01       		.byte	0x1
 5862 05d2 6F000000 		.4byte	0x6f
 5863 05d6 00000000 		.4byte	.LFB20
 5864 05da 3E000000 		.4byte	.LFE20
 5865 05de 48040000 		.4byte	.LLST20
 5866 05e2 01       		.byte	0x1
 5867 05e3 05060000 		.4byte	0x605
 5868 05e7 10       		.uleb128 0x10
 5869 05e8 B1050000 		.4byte	.LASF55
 5870 05ec 01       		.byte	0x1
 5871 05ed C502     		.2byte	0x2c5
 5872 05ef 6F000000 		.4byte	0x6f
 5873 05f3 02       		.byte	0x2
 5874 05f4 91       		.byte	0x91
 5875 05f5 6F       		.sleb128 -17
 5876 05f6 13       		.uleb128 0x13
 5877 05f7 737A00   		.ascii	"sz\000"
 5878 05fa 01       		.byte	0x1
 5879 05fb C702     		.2byte	0x2c7
 5880 05fd 6F000000 		.4byte	0x6f
 5881 0601 02       		.byte	0x2
 5882 0602 91       		.byte	0x91
 5883 0603 77       		.sleb128 -9
 5884 0604 00       		.byte	0
 5885 0605 0F       		.uleb128 0xf
 5886 0606 01       		.byte	0x1
 5887 0607 9E010000 		.4byte	.LASF60
 5888 060b 01       		.byte	0x1
 5889 060c DF02     		.2byte	0x2df
 5890 060e 01       		.byte	0x1
 5891 060f 00000000 		.4byte	.LFB21
 5892 0613 34000000 		.4byte	.LFE21
 5893 0617 80040000 		.4byte	.LLST21
 5894 061b 01       		.byte	0x1
 5895 061c 3F060000 		.4byte	0x63f
 5896 0620 10       		.uleb128 0x10
 5897 0621 B1050000 		.4byte	.LASF55
 5898 0625 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 137


 5899 0626 DF02     		.2byte	0x2df
 5900 0628 6F000000 		.4byte	0x6f
 5901 062c 02       		.byte	0x2
 5902 062d 91       		.byte	0x91
 5903 062e 77       		.sleb128 -9
 5904 062f 10       		.uleb128 0x10
 5905 0630 06010000 		.4byte	.LASF51
 5906 0634 01       		.byte	0x1
 5907 0635 DF02     		.2byte	0x2df
 5908 0637 6F000000 		.4byte	0x6f
 5909 063b 02       		.byte	0x2
 5910 063c 91       		.byte	0x91
 5911 063d 76       		.sleb128 -10
 5912 063e 00       		.byte	0
 5913 063f 0F       		.uleb128 0xf
 5914 0640 01       		.byte	0x1
 5915 0641 9E030000 		.4byte	.LASF61
 5916 0645 01       		.byte	0x1
 5917 0646 E902     		.2byte	0x2e9
 5918 0648 01       		.byte	0x1
 5919 0649 00000000 		.4byte	.LFB22
 5920 064d 38000000 		.4byte	.LFE22
 5921 0651 B8040000 		.4byte	.LLST22
 5922 0655 01       		.byte	0x1
 5923 0656 79060000 		.4byte	0x679
 5924 065a 10       		.uleb128 0x10
 5925 065b B1050000 		.4byte	.LASF55
 5926 065f 01       		.byte	0x1
 5927 0660 E902     		.2byte	0x2e9
 5928 0662 6F000000 		.4byte	0x6f
 5929 0666 02       		.byte	0x2
 5930 0667 91       		.byte	0x91
 5931 0668 77       		.sleb128 -9
 5932 0669 11       		.uleb128 0x11
 5933 066a 636D6400 		.ascii	"cmd\000"
 5934 066e 01       		.byte	0x1
 5935 066f E902     		.2byte	0x2e9
 5936 0671 6F000000 		.4byte	0x6f
 5937 0675 02       		.byte	0x2
 5938 0676 91       		.byte	0x91
 5939 0677 76       		.sleb128 -10
 5940 0678 00       		.byte	0
 5941 0679 14       		.uleb128 0x14
 5942 067a 01       		.byte	0x1
 5943 067b FB040000 		.4byte	.LASF62
 5944 067f 01       		.byte	0x1
 5945 0680 F302     		.2byte	0x2f3
 5946 0682 01       		.byte	0x1
 5947 0683 6F000000 		.4byte	0x6f
 5948 0687 00000000 		.4byte	.LFB23
 5949 068b 3E000000 		.4byte	.LFE23
 5950 068f F0040000 		.4byte	.LLST23
 5951 0693 01       		.byte	0x1
 5952 0694 B7060000 		.4byte	0x6b7
 5953 0698 10       		.uleb128 0x10
 5954 0699 B1050000 		.4byte	.LASF55
 5955 069d 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 138


 5956 069e F302     		.2byte	0x2f3
 5957 06a0 6F000000 		.4byte	0x6f
 5958 06a4 02       		.byte	0x2
 5959 06a5 91       		.byte	0x91
 5960 06a6 6F       		.sleb128 -17
 5961 06a7 13       		.uleb128 0x13
 5962 06a8 636D6400 		.ascii	"cmd\000"
 5963 06ac 01       		.byte	0x1
 5964 06ad F502     		.2byte	0x2f5
 5965 06af 6F000000 		.4byte	0x6f
 5966 06b3 02       		.byte	0x2
 5967 06b4 91       		.byte	0x91
 5968 06b5 77       		.sleb128 -9
 5969 06b6 00       		.byte	0
 5970 06b7 0F       		.uleb128 0xf
 5971 06b8 01       		.byte	0x1
 5972 06b9 24080000 		.4byte	.LASF63
 5973 06bd 01       		.byte	0x1
 5974 06be FF02     		.2byte	0x2ff
 5975 06c0 01       		.byte	0x1
 5976 06c1 00000000 		.4byte	.LFB24
 5977 06c5 38000000 		.4byte	.LFE24
 5978 06c9 28050000 		.4byte	.LLST24
 5979 06cd 01       		.byte	0x1
 5980 06ce F0060000 		.4byte	0x6f0
 5981 06d2 10       		.uleb128 0x10
 5982 06d3 B1050000 		.4byte	.LASF55
 5983 06d7 01       		.byte	0x1
 5984 06d8 FF02     		.2byte	0x2ff
 5985 06da 6F000000 		.4byte	0x6f
 5986 06de 02       		.byte	0x2
 5987 06df 91       		.byte	0x91
 5988 06e0 77       		.sleb128 -9
 5989 06e1 11       		.uleb128 0x11
 5990 06e2 697200   		.ascii	"ir\000"
 5991 06e5 01       		.byte	0x1
 5992 06e6 FF02     		.2byte	0x2ff
 5993 06e8 6F000000 		.4byte	0x6f
 5994 06ec 02       		.byte	0x2
 5995 06ed 91       		.byte	0x91
 5996 06ee 76       		.sleb128 -10
 5997 06ef 00       		.byte	0
 5998 06f0 14       		.uleb128 0x14
 5999 06f1 01       		.byte	0x1
 6000 06f2 88000000 		.4byte	.LASF64
 6001 06f6 01       		.byte	0x1
 6002 06f7 0903     		.2byte	0x309
 6003 06f9 01       		.byte	0x1
 6004 06fa 6F000000 		.4byte	0x6f
 6005 06fe 00000000 		.4byte	.LFB25
 6006 0702 3E000000 		.4byte	.LFE25
 6007 0706 60050000 		.4byte	.LLST25
 6008 070a 01       		.byte	0x1
 6009 070b 2D070000 		.4byte	0x72d
 6010 070f 10       		.uleb128 0x10
 6011 0710 B1050000 		.4byte	.LASF55
 6012 0714 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 139


 6013 0715 0903     		.2byte	0x309
 6014 0717 6F000000 		.4byte	0x6f
 6015 071b 02       		.byte	0x2
 6016 071c 91       		.byte	0x91
 6017 071d 6F       		.sleb128 -17
 6018 071e 13       		.uleb128 0x13
 6019 071f 697200   		.ascii	"ir\000"
 6020 0722 01       		.byte	0x1
 6021 0723 0B03     		.2byte	0x30b
 6022 0725 6F000000 		.4byte	0x6f
 6023 0729 02       		.byte	0x2
 6024 072a 91       		.byte	0x91
 6025 072b 77       		.sleb128 -9
 6026 072c 00       		.byte	0
 6027 072d 14       		.uleb128 0x14
 6028 072e 01       		.byte	0x1
 6029 072f 20050000 		.4byte	.LASF65
 6030 0733 01       		.byte	0x1
 6031 0734 1503     		.2byte	0x315
 6032 0736 01       		.byte	0x1
 6033 0737 6F000000 		.4byte	0x6f
 6034 073b 00000000 		.4byte	.LFB26
 6035 073f 3E000000 		.4byte	.LFE26
 6036 0743 98050000 		.4byte	.LLST26
 6037 0747 01       		.byte	0x1
 6038 0748 6B070000 		.4byte	0x76b
 6039 074c 10       		.uleb128 0x10
 6040 074d B1050000 		.4byte	.LASF55
 6041 0751 01       		.byte	0x1
 6042 0752 1503     		.2byte	0x315
 6043 0754 6F000000 		.4byte	0x6f
 6044 0758 02       		.byte	0x2
 6045 0759 91       		.byte	0x91
 6046 075a 6F       		.sleb128 -17
 6047 075b 12       		.uleb128 0x12
 6048 075c A0050000 		.4byte	.LASF66
 6049 0760 01       		.byte	0x1
 6050 0761 1703     		.2byte	0x317
 6051 0763 6F000000 		.4byte	0x6f
 6052 0767 02       		.byte	0x2
 6053 0768 91       		.byte	0x91
 6054 0769 77       		.sleb128 -9
 6055 076a 00       		.byte	0
 6056 076b 0F       		.uleb128 0xf
 6057 076c 01       		.byte	0x1
 6058 076d 3C070000 		.4byte	.LASF67
 6059 0771 01       		.byte	0x1
 6060 0772 2103     		.2byte	0x321
 6061 0774 01       		.byte	0x1
 6062 0775 00000000 		.4byte	.LFB27
 6063 0779 32000000 		.4byte	.LFE27
 6064 077d D0050000 		.4byte	.LLST27
 6065 0781 01       		.byte	0x1
 6066 0782 A5070000 		.4byte	0x7a5
 6067 0786 10       		.uleb128 0x10
 6068 0787 B1050000 		.4byte	.LASF55
 6069 078b 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 140


 6070 078c 2103     		.2byte	0x321
 6071 078e 6F000000 		.4byte	0x6f
 6072 0792 02       		.byte	0x2
 6073 0793 91       		.byte	0x91
 6074 0794 77       		.sleb128 -9
 6075 0795 10       		.uleb128 0x10
 6076 0796 82060000 		.4byte	.LASF68
 6077 079a 01       		.byte	0x1
 6078 079b 2103     		.2byte	0x321
 6079 079d 7A000000 		.4byte	0x7a
 6080 07a1 02       		.byte	0x2
 6081 07a2 91       		.byte	0x91
 6082 07a3 74       		.sleb128 -12
 6083 07a4 00       		.byte	0
 6084 07a5 0F       		.uleb128 0xf
 6085 07a6 01       		.byte	0x1
 6086 07a7 E3070000 		.4byte	.LASF69
 6087 07ab 01       		.byte	0x1
 6088 07ac 2B03     		.2byte	0x32b
 6089 07ae 01       		.byte	0x1
 6090 07af 00000000 		.4byte	.LFB28
 6091 07b3 32000000 		.4byte	.LFE28
 6092 07b7 08060000 		.4byte	.LLST28
 6093 07bb 01       		.byte	0x1
 6094 07bc DF070000 		.4byte	0x7df
 6095 07c0 10       		.uleb128 0x10
 6096 07c1 B1050000 		.4byte	.LASF55
 6097 07c5 01       		.byte	0x1
 6098 07c6 2B03     		.2byte	0x32b
 6099 07c8 6F000000 		.4byte	0x6f
 6100 07cc 02       		.byte	0x2
 6101 07cd 91       		.byte	0x91
 6102 07ce 77       		.sleb128 -9
 6103 07cf 11       		.uleb128 0x11
 6104 07d0 6D616300 		.ascii	"mac\000"
 6105 07d4 01       		.byte	0x1
 6106 07d5 2B03     		.2byte	0x32b
 6107 07d7 E7010000 		.4byte	0x1e7
 6108 07db 02       		.byte	0x2
 6109 07dc 91       		.byte	0x91
 6110 07dd 70       		.sleb128 -16
 6111 07de 00       		.byte	0
 6112 07df 0F       		.uleb128 0xf
 6113 07e0 01       		.byte	0x1
 6114 07e1 D3040000 		.4byte	.LASF70
 6115 07e5 01       		.byte	0x1
 6116 07e6 3503     		.2byte	0x335
 6117 07e8 01       		.byte	0x1
 6118 07e9 00000000 		.4byte	.LFB29
 6119 07ed 34000000 		.4byte	.LFE29
 6120 07f1 40060000 		.4byte	.LLST29
 6121 07f5 01       		.byte	0x1
 6122 07f6 18080000 		.4byte	0x818
 6123 07fa 10       		.uleb128 0x10
 6124 07fb B1050000 		.4byte	.LASF55
 6125 07ff 01       		.byte	0x1
 6126 0800 3503     		.2byte	0x335
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 141


 6127 0802 6F000000 		.4byte	0x6f
 6128 0806 02       		.byte	0x2
 6129 0807 91       		.byte	0x91
 6130 0808 77       		.sleb128 -9
 6131 0809 11       		.uleb128 0x11
 6132 080a 697000   		.ascii	"ip\000"
 6133 080d 01       		.byte	0x1
 6134 080e 3503     		.2byte	0x335
 6135 0810 85000000 		.4byte	0x85
 6136 0814 02       		.byte	0x2
 6137 0815 91       		.byte	0x91
 6138 0816 70       		.sleb128 -16
 6139 0817 00       		.byte	0
 6140 0818 0F       		.uleb128 0xf
 6141 0819 01       		.byte	0x1
 6142 081a F0000000 		.4byte	.LASF71
 6143 081e 01       		.byte	0x1
 6144 081f 3F03     		.2byte	0x33f
 6145 0821 01       		.byte	0x1
 6146 0822 00000000 		.4byte	.LFB30
 6147 0826 32000000 		.4byte	.LFE30
 6148 082a 78060000 		.4byte	.LLST30
 6149 082e 01       		.byte	0x1
 6150 082f 52080000 		.4byte	0x852
 6151 0833 10       		.uleb128 0x10
 6152 0834 B1050000 		.4byte	.LASF55
 6153 0838 01       		.byte	0x1
 6154 0839 3F03     		.2byte	0x33f
 6155 083b 6F000000 		.4byte	0x6f
 6156 083f 02       		.byte	0x2
 6157 0840 91       		.byte	0x91
 6158 0841 77       		.sleb128 -9
 6159 0842 10       		.uleb128 0x10
 6160 0843 82060000 		.4byte	.LASF68
 6161 0847 01       		.byte	0x1
 6162 0848 3F03     		.2byte	0x33f
 6163 084a 7A000000 		.4byte	0x7a
 6164 084e 02       		.byte	0x2
 6165 084f 91       		.byte	0x91
 6166 0850 74       		.sleb128 -12
 6167 0851 00       		.byte	0
 6168 0852 14       		.uleb128 0x14
 6169 0853 01       		.byte	0x1
 6170 0854 B0020000 		.4byte	.LASF72
 6171 0858 01       		.byte	0x1
 6172 0859 4903     		.2byte	0x349
 6173 085b 01       		.byte	0x1
 6174 085c 7A000000 		.4byte	0x7a
 6175 0860 00000000 		.4byte	.LFB31
 6176 0864 2E000000 		.4byte	.LFE31
 6177 0868 B0060000 		.4byte	.LLST31
 6178 086c 01       		.byte	0x1
 6179 086d 81080000 		.4byte	0x881
 6180 0871 10       		.uleb128 0x10
 6181 0872 B1050000 		.4byte	.LASF55
 6182 0876 01       		.byte	0x1
 6183 0877 4903     		.2byte	0x349
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 142


 6184 0879 6F000000 		.4byte	0x6f
 6185 087d 02       		.byte	0x2
 6186 087e 91       		.byte	0x91
 6187 087f 77       		.sleb128 -9
 6188 0880 00       		.byte	0
 6189 0881 0F       		.uleb128 0xf
 6190 0882 01       		.byte	0x1
 6191 0883 80010000 		.4byte	.LASF73
 6192 0887 01       		.byte	0x1
 6193 0888 5303     		.2byte	0x353
 6194 088a 01       		.byte	0x1
 6195 088b 00000000 		.4byte	.LFB32
 6196 088f 32000000 		.4byte	.LFE32
 6197 0893 E8060000 		.4byte	.LLST32
 6198 0897 01       		.byte	0x1
 6199 0898 BB080000 		.4byte	0x8bb
 6200 089c 10       		.uleb128 0x10
 6201 089d B1050000 		.4byte	.LASF55
 6202 08a1 01       		.byte	0x1
 6203 08a2 5303     		.2byte	0x353
 6204 08a4 6F000000 		.4byte	0x6f
 6205 08a8 02       		.byte	0x2
 6206 08a9 91       		.byte	0x91
 6207 08aa 77       		.sleb128 -9
 6208 08ab 11       		.uleb128 0x11
 6209 08ac 70747200 		.ascii	"ptr\000"
 6210 08b0 01       		.byte	0x1
 6211 08b1 5303     		.2byte	0x353
 6212 08b3 7A000000 		.4byte	0x7a
 6213 08b7 02       		.byte	0x2
 6214 08b8 91       		.byte	0x91
 6215 08b9 74       		.sleb128 -12
 6216 08ba 00       		.byte	0
 6217 08bb 14       		.uleb128 0x14
 6218 08bc 01       		.byte	0x1
 6219 08bd 13010000 		.4byte	.LASF74
 6220 08c1 01       		.byte	0x1
 6221 08c2 5D03     		.2byte	0x35d
 6222 08c4 01       		.byte	0x1
 6223 08c5 7A000000 		.4byte	0x7a
 6224 08c9 00000000 		.4byte	.LFB33
 6225 08cd 2E000000 		.4byte	.LFE33
 6226 08d1 20070000 		.4byte	.LLST33
 6227 08d5 01       		.byte	0x1
 6228 08d6 EA080000 		.4byte	0x8ea
 6229 08da 10       		.uleb128 0x10
 6230 08db B1050000 		.4byte	.LASF55
 6231 08df 01       		.byte	0x1
 6232 08e0 5D03     		.2byte	0x35d
 6233 08e2 6F000000 		.4byte	0x6f
 6234 08e6 02       		.byte	0x2
 6235 08e7 91       		.byte	0x91
 6236 08e8 77       		.sleb128 -9
 6237 08e9 00       		.byte	0
 6238 08ea 14       		.uleb128 0x14
 6239 08eb 01       		.byte	0x1
 6240 08ec F4030000 		.4byte	.LASF75
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 143


 6241 08f0 01       		.byte	0x1
 6242 08f1 6703     		.2byte	0x367
 6243 08f3 01       		.byte	0x1
 6244 08f4 7A000000 		.4byte	0x7a
 6245 08f8 00000000 		.4byte	.LFB34
 6246 08fc 2E000000 		.4byte	.LFE34
 6247 0900 58070000 		.4byte	.LLST34
 6248 0904 01       		.byte	0x1
 6249 0905 19090000 		.4byte	0x919
 6250 0909 10       		.uleb128 0x10
 6251 090a B1050000 		.4byte	.LASF55
 6252 090e 01       		.byte	0x1
 6253 090f 6703     		.2byte	0x367
 6254 0911 6F000000 		.4byte	0x6f
 6255 0915 02       		.byte	0x2
 6256 0916 91       		.byte	0x91
 6257 0917 77       		.sleb128 -9
 6258 0918 00       		.byte	0
 6259 0919 0F       		.uleb128 0xf
 6260 091a 01       		.byte	0x1
 6261 091b 98000000 		.4byte	.LASF76
 6262 091f 01       		.byte	0x1
 6263 0920 7103     		.2byte	0x371
 6264 0922 01       		.byte	0x1
 6265 0923 00000000 		.4byte	.LFB35
 6266 0927 32000000 		.4byte	.LFE35
 6267 092b 90070000 		.4byte	.LLST35
 6268 092f 01       		.byte	0x1
 6269 0930 53090000 		.4byte	0x953
 6270 0934 10       		.uleb128 0x10
 6271 0935 B1050000 		.4byte	.LASF55
 6272 0939 01       		.byte	0x1
 6273 093a 7103     		.2byte	0x371
 6274 093c 6F000000 		.4byte	0x6f
 6275 0940 02       		.byte	0x2
 6276 0941 91       		.byte	0x91
 6277 0942 77       		.sleb128 -9
 6278 0943 11       		.uleb128 0x11
 6279 0944 70747200 		.ascii	"ptr\000"
 6280 0948 01       		.byte	0x1
 6281 0949 7103     		.2byte	0x371
 6282 094b 7A000000 		.4byte	0x7a
 6283 094f 02       		.byte	0x2
 6284 0950 91       		.byte	0x91
 6285 0951 74       		.sleb128 -12
 6286 0952 00       		.byte	0
 6287 0953 14       		.uleb128 0x14
 6288 0954 01       		.byte	0x1
 6289 0955 74040000 		.4byte	.LASF77
 6290 0959 01       		.byte	0x1
 6291 095a 7B03     		.2byte	0x37b
 6292 095c 01       		.byte	0x1
 6293 095d 7A000000 		.4byte	0x7a
 6294 0961 00000000 		.4byte	.LFB36
 6295 0965 2E000000 		.4byte	.LFE36
 6296 0969 C8070000 		.4byte	.LLST36
 6297 096d 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 144


 6298 096e 82090000 		.4byte	0x982
 6299 0972 10       		.uleb128 0x10
 6300 0973 B1050000 		.4byte	.LASF55
 6301 0977 01       		.byte	0x1
 6302 0978 7B03     		.2byte	0x37b
 6303 097a 6F000000 		.4byte	0x6f
 6304 097e 02       		.byte	0x2
 6305 097f 91       		.byte	0x91
 6306 0980 77       		.sleb128 -9
 6307 0981 00       		.byte	0
 6308 0982 15       		.uleb128 0x15
 6309 0983 01       		.byte	0x1
 6310 0984 03060000 		.4byte	.LASF78
 6311 0988 01       		.byte	0x1
 6312 0989 8503     		.2byte	0x385
 6313 098b 01       		.byte	0x1
 6314 098c 00000000 		.4byte	.LFB37
 6315 0990 18000000 		.4byte	.LFE37
 6316 0994 00080000 		.4byte	.LLST37
 6317 0998 01       		.byte	0x1
 6318 0999 BC090000 		.4byte	0x9bc
 6319 099d 10       		.uleb128 0x10
 6320 099e B1050000 		.4byte	.LASF55
 6321 09a2 01       		.byte	0x1
 6322 09a3 8503     		.2byte	0x385
 6323 09a5 6F000000 		.4byte	0x6f
 6324 09a9 02       		.byte	0x2
 6325 09aa 91       		.byte	0x91
 6326 09ab 77       		.sleb128 -9
 6327 09ac 11       		.uleb128 0x11
 6328 09ad 70747200 		.ascii	"ptr\000"
 6329 09b1 01       		.byte	0x1
 6330 09b2 8503     		.2byte	0x385
 6331 09b4 7A000000 		.4byte	0x7a
 6332 09b8 02       		.byte	0x2
 6333 09b9 91       		.byte	0x91
 6334 09ba 74       		.sleb128 -12
 6335 09bb 00       		.byte	0
 6336 09bc 0F       		.uleb128 0xf
 6337 09bd 01       		.byte	0x1
 6338 09be 29060000 		.4byte	.LASF79
 6339 09c2 01       		.byte	0x1
 6340 09c3 9803     		.2byte	0x398
 6341 09c5 01       		.byte	0x1
 6342 09c6 00000000 		.4byte	.LFB38
 6343 09ca 32000000 		.4byte	.LFE38
 6344 09ce 38080000 		.4byte	.LLST38
 6345 09d2 01       		.byte	0x1
 6346 09d3 F6090000 		.4byte	0x9f6
 6347 09d7 10       		.uleb128 0x10
 6348 09d8 B1050000 		.4byte	.LASF55
 6349 09dc 01       		.byte	0x1
 6350 09dd 9803     		.2byte	0x398
 6351 09df 6F000000 		.4byte	0x6f
 6352 09e3 02       		.byte	0x2
 6353 09e4 91       		.byte	0x91
 6354 09e5 77       		.sleb128 -9
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 145


 6355 09e6 11       		.uleb128 0x11
 6356 09e7 70747200 		.ascii	"ptr\000"
 6357 09eb 01       		.byte	0x1
 6358 09ec 9803     		.2byte	0x398
 6359 09ee 7A000000 		.4byte	0x7a
 6360 09f2 02       		.byte	0x2
 6361 09f3 91       		.byte	0x91
 6362 09f4 74       		.sleb128 -12
 6363 09f5 00       		.byte	0
 6364 09f6 14       		.uleb128 0x14
 6365 09f7 01       		.byte	0x1
 6366 09f8 80050000 		.4byte	.LASF80
 6367 09fc 01       		.byte	0x1
 6368 09fd A203     		.2byte	0x3a2
 6369 09ff 01       		.byte	0x1
 6370 0a00 85000000 		.4byte	0x85
 6371 0a04 00000000 		.4byte	.LFB39
 6372 0a08 52000000 		.4byte	.LFE39
 6373 0a0c 70080000 		.4byte	.LLST39
 6374 0a10 01       		.byte	0x1
 6375 0a11 430A0000 		.4byte	0xa43
 6376 0a15 10       		.uleb128 0x10
 6377 0a16 B1050000 		.4byte	.LASF55
 6378 0a1a 01       		.byte	0x1
 6379 0a1b A203     		.2byte	0x3a2
 6380 0a1d 6F000000 		.4byte	0x6f
 6381 0a21 02       		.byte	0x2
 6382 0a22 91       		.byte	0x91
 6383 0a23 6F       		.sleb128 -17
 6384 0a24 11       		.uleb128 0x11
 6385 0a25 636D6400 		.ascii	"cmd\000"
 6386 0a29 01       		.byte	0x1
 6387 0a2a A203     		.2byte	0x3a2
 6388 0a2c 61000000 		.4byte	0x61
 6389 0a30 02       		.byte	0x2
 6390 0a31 91       		.byte	0x91
 6391 0a32 68       		.sleb128 -24
 6392 0a33 12       		.uleb128 0x12
 6393 0a34 ED060000 		.4byte	.LASF81
 6394 0a38 01       		.byte	0x1
 6395 0a39 A403     		.2byte	0x3a4
 6396 0a3b 85000000 		.4byte	0x85
 6397 0a3f 02       		.byte	0x2
 6398 0a40 91       		.byte	0x91
 6399 0a41 74       		.sleb128 -12
 6400 0a42 00       		.byte	0
 6401 0a43 14       		.uleb128 0x14
 6402 0a44 01       		.byte	0x1
 6403 0a45 75020000 		.4byte	.LASF82
 6404 0a49 01       		.byte	0x1
 6405 0a4a B503     		.2byte	0x3b5
 6406 0a4c 01       		.byte	0x1
 6407 0a4d 7A000000 		.4byte	0x7a
 6408 0a51 00000000 		.4byte	.LFB40
 6409 0a55 48000000 		.4byte	.LFE40
 6410 0a59 A8080000 		.4byte	.LLST40
 6411 0a5d 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 146


 6412 0a5e 900A0000 		.4byte	0xa90
 6413 0a62 10       		.uleb128 0x10
 6414 0a63 B1050000 		.4byte	.LASF55
 6415 0a67 01       		.byte	0x1
 6416 0a68 B503     		.2byte	0x3b5
 6417 0a6a 6F000000 		.4byte	0x6f
 6418 0a6e 02       		.byte	0x2
 6419 0a6f 91       		.byte	0x91
 6420 0a70 6F       		.sleb128 -17
 6421 0a71 12       		.uleb128 0x12
 6422 0a72 03070000 		.4byte	.LASF83
 6423 0a76 01       		.byte	0x1
 6424 0a77 B703     		.2byte	0x3b7
 6425 0a79 7A000000 		.4byte	0x7a
 6426 0a7d 02       		.byte	0x2
 6427 0a7e 91       		.byte	0x91
 6428 0a7f 74       		.sleb128 -12
 6429 0a80 12       		.uleb128 0x12
 6430 0a81 42030000 		.4byte	.LASF84
 6431 0a85 01       		.byte	0x1
 6432 0a86 B703     		.2byte	0x3b7
 6433 0a88 7A000000 		.4byte	0x7a
 6434 0a8c 02       		.byte	0x2
 6435 0a8d 91       		.byte	0x91
 6436 0a8e 76       		.sleb128 -10
 6437 0a8f 00       		.byte	0
 6438 0a90 14       		.uleb128 0x14
 6439 0a91 01       		.byte	0x1
 6440 0a92 2B010000 		.4byte	.LASF85
 6441 0a96 01       		.byte	0x1
 6442 0a97 CB03     		.2byte	0x3cb
 6443 0a99 01       		.byte	0x1
 6444 0a9a 7A000000 		.4byte	0x7a
 6445 0a9e 00000000 		.4byte	.LFB41
 6446 0aa2 48000000 		.4byte	.LFE41
 6447 0aa6 E0080000 		.4byte	.LLST41
 6448 0aaa 01       		.byte	0x1
 6449 0aab DD0A0000 		.4byte	0xadd
 6450 0aaf 10       		.uleb128 0x10
 6451 0ab0 B1050000 		.4byte	.LASF55
 6452 0ab4 01       		.byte	0x1
 6453 0ab5 CB03     		.2byte	0x3cb
 6454 0ab7 6F000000 		.4byte	0x6f
 6455 0abb 02       		.byte	0x2
 6456 0abc 91       		.byte	0x91
 6457 0abd 6F       		.sleb128 -17
 6458 0abe 12       		.uleb128 0x12
 6459 0abf 03070000 		.4byte	.LASF83
 6460 0ac3 01       		.byte	0x1
 6461 0ac4 CD03     		.2byte	0x3cd
 6462 0ac6 7A000000 		.4byte	0x7a
 6463 0aca 02       		.byte	0x2
 6464 0acb 91       		.byte	0x91
 6465 0acc 74       		.sleb128 -12
 6466 0acd 12       		.uleb128 0x12
 6467 0ace 42030000 		.4byte	.LASF84
 6468 0ad2 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 147


 6469 0ad3 CD03     		.2byte	0x3cd
 6470 0ad5 7A000000 		.4byte	0x7a
 6471 0ad9 02       		.byte	0x2
 6472 0ada 91       		.byte	0x91
 6473 0adb 76       		.sleb128 -10
 6474 0adc 00       		.byte	0
 6475 0add 0F       		.uleb128 0xf
 6476 0ade 01       		.byte	0x1
 6477 0adf 05080000 		.4byte	.LASF86
 6478 0ae3 01       		.byte	0x1
 6479 0ae4 EA03     		.2byte	0x3ea
 6480 0ae6 01       		.byte	0x1
 6481 0ae7 00000000 		.4byte	.LFB42
 6482 0aeb B6000000 		.4byte	.LFE42
 6483 0aef 18090000 		.4byte	.LLST42
 6484 0af3 01       		.byte	0x1
 6485 0af4 710B0000 		.4byte	0xb71
 6486 0af8 10       		.uleb128 0x10
 6487 0af9 B1050000 		.4byte	.LASF55
 6488 0afd 01       		.byte	0x1
 6489 0afe EA03     		.2byte	0x3ea
 6490 0b00 6F000000 		.4byte	0x6f
 6491 0b04 02       		.byte	0x2
 6492 0b05 91       		.byte	0x91
 6493 0b06 67       		.sleb128 -25
 6494 0b07 10       		.uleb128 0x10
 6495 0b08 FA010000 		.4byte	.LASF87
 6496 0b0c 01       		.byte	0x1
 6497 0b0d EA03     		.2byte	0x3ea
 6498 0b0f 7A000000 		.4byte	0x7a
 6499 0b13 02       		.byte	0x2
 6500 0b14 91       		.byte	0x91
 6501 0b15 64       		.sleb128 -28
 6502 0b16 10       		.uleb128 0x10
 6503 0b17 63000000 		.4byte	.LASF88
 6504 0b1b 01       		.byte	0x1
 6505 0b1c EA03     		.2byte	0x3ea
 6506 0b1e E7010000 		.4byte	0x1e7
 6507 0b22 02       		.byte	0x2
 6508 0b23 91       		.byte	0x91
 6509 0b24 60       		.sleb128 -32
 6510 0b25 10       		.uleb128 0x10
 6511 0b26 99050000 		.4byte	.LASF27
 6512 0b2a 01       		.byte	0x1
 6513 0b2b EA03     		.2byte	0x3ea
 6514 0b2d 7A000000 		.4byte	0x7a
 6515 0b31 02       		.byte	0x2
 6516 0b32 91       		.byte	0x91
 6517 0b33 5E       		.sleb128 -34
 6518 0b34 12       		.uleb128 0x12
 6519 0b35 09070000 		.4byte	.LASF26
 6520 0b39 01       		.byte	0x1
 6521 0b3a EC03     		.2byte	0x3ec
 6522 0b3c 85000000 		.4byte	0x85
 6523 0b40 02       		.byte	0x2
 6524 0b41 91       		.byte	0x91
 6525 0b42 6C       		.sleb128 -20
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 148


 6526 0b43 12       		.uleb128 0x12
 6527 0b44 B6010000 		.4byte	.LASF89
 6528 0b48 01       		.byte	0x1
 6529 0b49 ED03     		.2byte	0x3ed
 6530 0b4b 85000000 		.4byte	0x85
 6531 0b4f 02       		.byte	0x2
 6532 0b50 91       		.byte	0x91
 6533 0b51 74       		.sleb128 -12
 6534 0b52 12       		.uleb128 0x12
 6535 0b53 1B060000 		.4byte	.LASF90
 6536 0b57 01       		.byte	0x1
 6537 0b58 EE03     		.2byte	0x3ee
 6538 0b5a 85000000 		.4byte	0x85
 6539 0b5e 02       		.byte	0x2
 6540 0b5f 91       		.byte	0x91
 6541 0b60 70       		.sleb128 -16
 6542 0b61 12       		.uleb128 0x12
 6543 0b62 B1040000 		.4byte	.LASF56
 6544 0b66 01       		.byte	0x1
 6545 0b67 EF03     		.2byte	0x3ef
 6546 0b69 85000000 		.4byte	0x85
 6547 0b6d 02       		.byte	0x2
 6548 0b6e 91       		.byte	0x91
 6549 0b6f 68       		.sleb128 -24
 6550 0b70 00       		.byte	0
 6551 0b71 0F       		.uleb128 0xf
 6552 0b72 01       		.byte	0x1
 6553 0b73 56060000 		.4byte	.LASF91
 6554 0b77 01       		.byte	0x1
 6555 0b78 2204     		.2byte	0x422
 6556 0b7a 01       		.byte	0x1
 6557 0b7b 00000000 		.4byte	.LFB43
 6558 0b7f C2000000 		.4byte	.LFE43
 6559 0b83 50090000 		.4byte	.LLST43
 6560 0b87 01       		.byte	0x1
 6561 0b88 140C0000 		.4byte	0xc14
 6562 0b8c 10       		.uleb128 0x10
 6563 0b8d B1050000 		.4byte	.LASF55
 6564 0b91 01       		.byte	0x1
 6565 0b92 2204     		.2byte	0x422
 6566 0b94 6F000000 		.4byte	0x6f
 6567 0b98 02       		.byte	0x2
 6568 0b99 91       		.byte	0x91
 6569 0b9a 67       		.sleb128 -25
 6570 0b9b 10       		.uleb128 0x10
 6571 0b9c FA010000 		.4byte	.LASF87
 6572 0ba0 01       		.byte	0x1
 6573 0ba1 2204     		.2byte	0x422
 6574 0ba3 7A000000 		.4byte	0x7a
 6575 0ba7 02       		.byte	0x2
 6576 0ba8 91       		.byte	0x91
 6577 0ba9 64       		.sleb128 -28
 6578 0baa 10       		.uleb128 0x10
 6579 0bab 63000000 		.4byte	.LASF88
 6580 0baf 01       		.byte	0x1
 6581 0bb0 2204     		.2byte	0x422
 6582 0bb2 E7010000 		.4byte	0x1e7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 149


 6583 0bb6 02       		.byte	0x2
 6584 0bb7 91       		.byte	0x91
 6585 0bb8 60       		.sleb128 -32
 6586 0bb9 10       		.uleb128 0x10
 6587 0bba 99050000 		.4byte	.LASF27
 6588 0bbe 01       		.byte	0x1
 6589 0bbf 2204     		.2byte	0x422
 6590 0bc1 7A000000 		.4byte	0x7a
 6591 0bc5 02       		.byte	0x2
 6592 0bc6 91       		.byte	0x91
 6593 0bc7 5E       		.sleb128 -34
 6594 0bc8 10       		.uleb128 0x10
 6595 0bc9 50000000 		.4byte	.LASF92
 6596 0bcd 01       		.byte	0x1
 6597 0bce 2204     		.2byte	0x422
 6598 0bd0 6F000000 		.4byte	0x6f
 6599 0bd4 02       		.byte	0x2
 6600 0bd5 91       		.byte	0x91
 6601 0bd6 00       		.sleb128 0
 6602 0bd7 12       		.uleb128 0x12
 6603 0bd8 09070000 		.4byte	.LASF26
 6604 0bdc 01       		.byte	0x1
 6605 0bdd 2404     		.2byte	0x424
 6606 0bdf 85000000 		.4byte	0x85
 6607 0be3 02       		.byte	0x2
 6608 0be4 91       		.byte	0x91
 6609 0be5 6C       		.sleb128 -20
 6610 0be6 12       		.uleb128 0x12
 6611 0be7 B6010000 		.4byte	.LASF89
 6612 0beb 01       		.byte	0x1
 6613 0bec 2504     		.2byte	0x425
 6614 0bee 85000000 		.4byte	0x85
 6615 0bf2 02       		.byte	0x2
 6616 0bf3 91       		.byte	0x91
 6617 0bf4 74       		.sleb128 -12
 6618 0bf5 12       		.uleb128 0x12
 6619 0bf6 1B060000 		.4byte	.LASF90
 6620 0bfa 01       		.byte	0x1
 6621 0bfb 2604     		.2byte	0x426
 6622 0bfd 85000000 		.4byte	0x85
 6623 0c01 02       		.byte	0x2
 6624 0c02 91       		.byte	0x91
 6625 0c03 70       		.sleb128 -16
 6626 0c04 12       		.uleb128 0x12
 6627 0c05 B1040000 		.4byte	.LASF56
 6628 0c09 01       		.byte	0x1
 6629 0c0a 2704     		.2byte	0x427
 6630 0c0c 85000000 		.4byte	0x85
 6631 0c10 02       		.byte	0x2
 6632 0c11 91       		.byte	0x91
 6633 0c12 68       		.sleb128 -24
 6634 0c13 00       		.byte	0
 6635 0c14 0F       		.uleb128 0xf
 6636 0c15 01       		.byte	0x1
 6637 0c16 41050000 		.4byte	.LASF93
 6638 0c1a 01       		.byte	0x1
 6639 0c1b 5804     		.2byte	0x458
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 150


 6640 0c1d 01       		.byte	0x1
 6641 0c1e 00000000 		.4byte	.LFB44
 6642 0c22 0E010000 		.4byte	.LFE44
 6643 0c26 88090000 		.4byte	.LLST44
 6644 0c2a 01       		.byte	0x1
 6645 0c2b 7A0C0000 		.4byte	0xc7a
 6646 0c2f 11       		.uleb128 0x11
 6647 0c30 6D616300 		.ascii	"mac\000"
 6648 0c34 01       		.byte	0x1
 6649 0c35 5804     		.2byte	0x458
 6650 0c37 E7010000 		.4byte	0x1e7
 6651 0c3b 02       		.byte	0x2
 6652 0c3c 91       		.byte	0x91
 6653 0c3d 6C       		.sleb128 -20
 6654 0c3e 11       		.uleb128 0x11
 6655 0c3f 697000   		.ascii	"ip\000"
 6656 0c42 01       		.byte	0x1
 6657 0c43 5804     		.2byte	0x458
 6658 0c45 85000000 		.4byte	0x85
 6659 0c49 02       		.byte	0x2
 6660 0c4a 91       		.byte	0x91
 6661 0c4b 68       		.sleb128 -24
 6662 0c4c 10       		.uleb128 0x10
 6663 0c4d 18020000 		.4byte	.LASF94
 6664 0c51 01       		.byte	0x1
 6665 0c52 5804     		.2byte	0x458
 6666 0c54 85000000 		.4byte	0x85
 6667 0c58 02       		.byte	0x2
 6668 0c59 91       		.byte	0x91
 6669 0c5a 64       		.sleb128 -28
 6670 0c5b 10       		.uleb128 0x10
 6671 0c5c 0B010000 		.4byte	.LASF95
 6672 0c60 01       		.byte	0x1
 6673 0c61 5804     		.2byte	0x458
 6674 0c63 85000000 		.4byte	0x85
 6675 0c67 02       		.byte	0x2
 6676 0c68 91       		.byte	0x91
 6677 0c69 60       		.sleb128 -32
 6678 0c6a 12       		.uleb128 0x12
 6679 0c6b BB010000 		.4byte	.LASF96
 6680 0c6f 01       		.byte	0x1
 6681 0c70 5F04     		.2byte	0x45f
 6682 0c72 61000000 		.4byte	0x61
 6683 0c76 02       		.byte	0x2
 6684 0c77 91       		.byte	0x91
 6685 0c78 74       		.sleb128 -12
 6686 0c79 00       		.byte	0
 6687 0c7a 0F       		.uleb128 0xf
 6688 0c7b 01       		.byte	0x1
 6689 0c7c 46000000 		.4byte	.LASF97
 6690 0c80 01       		.byte	0x1
 6691 0c81 8404     		.2byte	0x484
 6692 0c83 01       		.byte	0x1
 6693 0c84 00000000 		.4byte	.LFB45
 6694 0c88 D2000000 		.4byte	.LFE45
 6695 0c8c C0090000 		.4byte	.LLST45
 6696 0c90 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 151


 6697 0c91 C20C0000 		.4byte	0xcc2
 6698 0c95 13       		.uleb128 0x13
 6699 0c96 697000   		.ascii	"ip\000"
 6700 0c99 01       		.byte	0x1
 6701 0c9a 8604     		.2byte	0x486
 6702 0c9c 85000000 		.4byte	0x85
 6703 0ca0 02       		.byte	0x2
 6704 0ca1 91       		.byte	0x91
 6705 0ca2 74       		.sleb128 -12
 6706 0ca3 12       		.uleb128 0x12
 6707 0ca4 0B010000 		.4byte	.LASF95
 6708 0ca8 01       		.byte	0x1
 6709 0ca9 8704     		.2byte	0x487
 6710 0cab 85000000 		.4byte	0x85
 6711 0caf 02       		.byte	0x2
 6712 0cb0 91       		.byte	0x91
 6713 0cb1 6C       		.sleb128 -20
 6714 0cb2 13       		.uleb128 0x13
 6715 0cb3 73756200 		.ascii	"sub\000"
 6716 0cb7 01       		.byte	0x1
 6717 0cb8 8804     		.2byte	0x488
 6718 0cba 85000000 		.4byte	0x85
 6719 0cbe 02       		.byte	0x2
 6720 0cbf 91       		.byte	0x91
 6721 0cc0 70       		.sleb128 -16
 6722 0cc1 00       		.byte	0
 6723 0cc2 14       		.uleb128 0x14
 6724 0cc3 01       		.byte	0x1
 6725 0cc4 0E070000 		.4byte	.LASF98
 6726 0cc8 01       		.byte	0x1
 6727 0cc9 A704     		.2byte	0x4a7
 6728 0ccb 01       		.byte	0x1
 6729 0ccc 85000000 		.4byte	0x85
 6730 0cd0 00000000 		.4byte	.LFB46
 6731 0cd4 4E010000 		.4byte	.LFE46
 6732 0cd8 F8090000 		.4byte	.LLST46
 6733 0cdc 01       		.byte	0x1
 6734 0cdd 3B0D0000 		.4byte	0xd3b
 6735 0ce1 10       		.uleb128 0x10
 6736 0ce2 F2040000 		.4byte	.LASF99
 6737 0ce6 01       		.byte	0x1
 6738 0ce7 A704     		.2byte	0x4a7
 6739 0ce9 BD000000 		.4byte	0xbd
 6740 0ced 02       		.byte	0x2
 6741 0cee 91       		.byte	0x91
 6742 0cef 54       		.sleb128 -44
 6743 0cf0 12       		.uleb128 0x12
 6744 0cf1 BB010000 		.4byte	.LASF96
 6745 0cf5 01       		.byte	0x1
 6746 0cf6 AC04     		.2byte	0x4ac
 6747 0cf8 61000000 		.4byte	0x61
 6748 0cfc 02       		.byte	0x2
 6749 0cfd 91       		.byte	0x91
 6750 0cfe 6C       		.sleb128 -20
 6751 0cff 12       		.uleb128 0x12
 6752 0d00 A2040000 		.4byte	.LASF100
 6753 0d04 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 152


 6754 0d05 AD04     		.2byte	0x4ad
 6755 0d07 3B0D0000 		.4byte	0xd3b
 6756 0d0b 02       		.byte	0x2
 6757 0d0c 91       		.byte	0x91
 6758 0d0d 5C       		.sleb128 -36
 6759 0d0e 13       		.uleb128 0x13
 6760 0d0f 697000   		.ascii	"ip\000"
 6761 0d12 01       		.byte	0x1
 6762 0d13 AE04     		.2byte	0x4ae
 6763 0d15 4B0D0000 		.4byte	0xd4b
 6764 0d19 02       		.byte	0x2
 6765 0d1a 91       		.byte	0x91
 6766 0d1b 58       		.sleb128 -40
 6767 0d1c 12       		.uleb128 0x12
 6768 0d1d 9E020000 		.4byte	.LASF101
 6769 0d21 01       		.byte	0x1
 6770 0d22 AF04     		.2byte	0x4af
 6771 0d24 61000000 		.4byte	0x61
 6772 0d28 02       		.byte	0x2
 6773 0d29 91       		.byte	0x91
 6774 0d2a 68       		.sleb128 -24
 6775 0d2b 12       		.uleb128 0x12
 6776 0d2c 28030000 		.4byte	.LASF102
 6777 0d30 01       		.byte	0x1
 6778 0d31 B004     		.2byte	0x4b0
 6779 0d33 61000000 		.4byte	0x61
 6780 0d37 02       		.byte	0x2
 6781 0d38 91       		.byte	0x91
 6782 0d39 64       		.sleb128 -28
 6783 0d3a 00       		.byte	0
 6784 0d3b 16       		.uleb128 0x16
 6785 0d3c 9E000000 		.4byte	0x9e
 6786 0d40 4B0D0000 		.4byte	0xd4b
 6787 0d44 17       		.uleb128 0x17
 6788 0d45 B0000000 		.4byte	0xb0
 6789 0d49 04       		.byte	0x4
 6790 0d4a 00       		.byte	0
 6791 0d4b 16       		.uleb128 0x16
 6792 0d4c 6F000000 		.4byte	0x6f
 6793 0d50 5B0D0000 		.4byte	0xd5b
 6794 0d54 17       		.uleb128 0x17
 6795 0d55 B0000000 		.4byte	0xb0
 6796 0d59 03       		.byte	0x3
 6797 0d5a 00       		.byte	0
 6798 0d5b 18       		.uleb128 0x18
 6799 0d5c 01       		.byte	0x1
 6800 0d5d 23040000 		.4byte	.LASF103
 6801 0d61 01       		.byte	0x1
 6802 0d62 DC04     		.2byte	0x4dc
 6803 0d64 01       		.byte	0x1
 6804 0d65 A5000000 		.4byte	0xa5
 6805 0d69 00000000 		.4byte	.LFB47
 6806 0d6d 5A020000 		.4byte	.LFE47
 6807 0d71 300A0000 		.4byte	.LLST47
 6808 0d75 01       		.byte	0x1
 6809 0d76 C60D0000 		.4byte	0xdc6
 6810 0d7a 10       		.uleb128 0x10
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 153


 6811 0d7b A6020000 		.4byte	.LASF104
 6812 0d7f 01       		.byte	0x1
 6813 0d80 DC04     		.2byte	0x4dc
 6814 0d82 BD000000 		.4byte	0xbd
 6815 0d86 02       		.byte	0x2
 6816 0d87 91       		.byte	0x91
 6817 0d88 64       		.sleb128 -28
 6818 0d89 11       		.uleb128 0x11
 6819 0d8a 6D616300 		.ascii	"mac\000"
 6820 0d8e 01       		.byte	0x1
 6821 0d8f DC04     		.2byte	0x4dc
 6822 0d91 E7010000 		.4byte	0x1e7
 6823 0d95 02       		.byte	0x2
 6824 0d96 91       		.byte	0x91
 6825 0d97 60       		.sleb128 -32
 6826 0d98 12       		.uleb128 0x12
 6827 0d99 A2040000 		.4byte	.LASF100
 6828 0d9d 01       		.byte	0x1
 6829 0d9e E404     		.2byte	0x4e4
 6830 0da0 61000000 		.4byte	0x61
 6831 0da4 02       		.byte	0x2
 6832 0da5 91       		.byte	0x91
 6833 0da6 74       		.sleb128 -12
 6834 0da7 12       		.uleb128 0x12
 6835 0da8 BB010000 		.4byte	.LASF96
 6836 0dac 01       		.byte	0x1
 6837 0dad E504     		.2byte	0x4e5
 6838 0daf 61000000 		.4byte	0x61
 6839 0db3 02       		.byte	0x2
 6840 0db4 91       		.byte	0x91
 6841 0db5 70       		.sleb128 -16
 6842 0db6 12       		.uleb128 0x12
 6843 0db7 DC010000 		.4byte	.LASF105
 6844 0dbb 01       		.byte	0x1
 6845 0dbc E604     		.2byte	0x4e6
 6846 0dbe A5000000 		.4byte	0xa5
 6847 0dc2 02       		.byte	0x2
 6848 0dc3 91       		.byte	0x91
 6849 0dc4 6C       		.sleb128 -20
 6850 0dc5 00       		.byte	0
 6851 0dc6 15       		.uleb128 0x15
 6852 0dc7 01       		.byte	0x1
 6853 0dc8 F5060000 		.4byte	.LASF106
 6854 0dcc 01       		.byte	0x1
 6855 0dcd 0905     		.2byte	0x509
 6856 0dcf 01       		.byte	0x1
 6857 0dd0 00000000 		.4byte	.LFB48
 6858 0dd4 F2000000 		.4byte	.LFE48
 6859 0dd8 680A0000 		.4byte	.LLST48
 6860 0ddc 01       		.byte	0x1
 6861 0ddd 1E0E0000 		.4byte	0xe1e
 6862 0de1 11       		.uleb128 0x11
 6863 0de2 6D616300 		.ascii	"mac\000"
 6864 0de6 01       		.byte	0x1
 6865 0de7 0905     		.2byte	0x509
 6866 0de9 E7010000 		.4byte	0x1e7
 6867 0ded 02       		.byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 154


 6868 0dee 91       		.byte	0x91
 6869 0def 6C       		.sleb128 -20
 6870 0df0 10       		.uleb128 0x10
 6871 0df1 A6020000 		.4byte	.LASF104
 6872 0df5 01       		.byte	0x1
 6873 0df6 0905     		.2byte	0x509
 6874 0df8 B7000000 		.4byte	0xb7
 6875 0dfc 02       		.byte	0x2
 6876 0dfd 91       		.byte	0x91
 6877 0dfe 68       		.sleb128 -24
 6878 0dff 12       		.uleb128 0x12
 6879 0e00 A2040000 		.4byte	.LASF100
 6880 0e04 01       		.byte	0x1
 6881 0e05 0B05     		.2byte	0x50b
 6882 0e07 61000000 		.4byte	0x61
 6883 0e0b 02       		.byte	0x2
 6884 0e0c 91       		.byte	0x91
 6885 0e0d 74       		.sleb128 -12
 6886 0e0e 12       		.uleb128 0x12
 6887 0e0f BB010000 		.4byte	.LASF96
 6888 0e13 01       		.byte	0x1
 6889 0e14 0C05     		.2byte	0x50c
 6890 0e16 61000000 		.4byte	0x61
 6891 0e1a 02       		.byte	0x2
 6892 0e1b 91       		.byte	0x91
 6893 0e1c 70       		.sleb128 -16
 6894 0e1d 00       		.byte	0
 6895 0e1e 15       		.uleb128 0x15
 6896 0e1f 01       		.byte	0x1
 6897 0e20 34050000 		.4byte	.LASF107
 6898 0e24 01       		.byte	0x1
 6899 0e25 1F05     		.2byte	0x51f
 6900 0e27 01       		.byte	0x1
 6901 0e28 00000000 		.4byte	.LFB49
 6902 0e2c 16010000 		.4byte	.LFE49
 6903 0e30 A00A0000 		.4byte	.LLST49
 6904 0e34 01       		.byte	0x1
 6905 0e35 A20E0000 		.4byte	0xea2
 6906 0e39 11       		.uleb128 0x11
 6907 0e3a 697000   		.ascii	"ip\000"
 6908 0e3d 01       		.byte	0x1
 6909 0e3e 1F05     		.2byte	0x51f
 6910 0e40 85000000 		.4byte	0x85
 6911 0e44 02       		.byte	0x2
 6912 0e45 91       		.byte	0x91
 6913 0e46 5C       		.sleb128 -36
 6914 0e47 10       		.uleb128 0x10
 6915 0e48 F2040000 		.4byte	.LASF99
 6916 0e4c 01       		.byte	0x1
 6917 0e4d 1F05     		.2byte	0x51f
 6918 0e4f B7000000 		.4byte	0xb7
 6919 0e53 02       		.byte	0x2
 6920 0e54 91       		.byte	0x91
 6921 0e55 58       		.sleb128 -40
 6922 0e56 12       		.uleb128 0x12
 6923 0e57 08040000 		.4byte	.LASF108
 6924 0e5b 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 155


 6925 0e5c 2105     		.2byte	0x521
 6926 0e5e E7010000 		.4byte	0x1e7
 6927 0e62 02       		.byte	0x2
 6928 0e63 91       		.byte	0x91
 6929 0e64 68       		.sleb128 -24
 6930 0e65 12       		.uleb128 0x12
 6931 0e66 BB010000 		.4byte	.LASF96
 6932 0e6a 01       		.byte	0x1
 6933 0e6b 2205     		.2byte	0x522
 6934 0e6d 61000000 		.4byte	0x61
 6935 0e71 02       		.byte	0x2
 6936 0e72 91       		.byte	0x91
 6937 0e73 74       		.sleb128 -12
 6938 0e74 12       		.uleb128 0x12
 6939 0e75 A2040000 		.4byte	.LASF100
 6940 0e79 01       		.byte	0x1
 6941 0e7a 2305     		.2byte	0x523
 6942 0e7c 61000000 		.4byte	0x61
 6943 0e80 02       		.byte	0x2
 6944 0e81 91       		.byte	0x91
 6945 0e82 70       		.sleb128 -16
 6946 0e83 12       		.uleb128 0x12
 6947 0e84 AC050000 		.4byte	.LASF109
 6948 0e88 01       		.byte	0x1
 6949 0e89 2405     		.2byte	0x524
 6950 0e8b 61000000 		.4byte	0x61
 6951 0e8f 02       		.byte	0x2
 6952 0e90 91       		.byte	0x91
 6953 0e91 6C       		.sleb128 -20
 6954 0e92 12       		.uleb128 0x12
 6955 0e93 A7050000 		.4byte	.LASF110
 6956 0e97 01       		.byte	0x1
 6957 0e98 2405     		.2byte	0x524
 6958 0e9a 61000000 		.4byte	0x61
 6959 0e9e 02       		.byte	0x2
 6960 0e9f 91       		.byte	0x91
 6961 0ea0 64       		.sleb128 -28
 6962 0ea1 00       		.byte	0
 6963 0ea2 14       		.uleb128 0x14
 6964 0ea3 01       		.byte	0x1
 6965 0ea4 6C010000 		.4byte	.LASF111
 6966 0ea8 01       		.byte	0x1
 6967 0ea9 4005     		.2byte	0x540
 6968 0eab 01       		.byte	0x1
 6969 0eac 6F000000 		.4byte	0x6f
 6970 0eb0 00000000 		.4byte	.LFB50
 6971 0eb4 34000000 		.4byte	.LFE50
 6972 0eb8 D80A0000 		.4byte	.LLST50
 6973 0ebc 01       		.byte	0x1
 6974 0ebd DE0E0000 		.4byte	0xede
 6975 0ec1 11       		.uleb128 0x11
 6976 0ec2 697000   		.ascii	"ip\000"
 6977 0ec5 01       		.byte	0x1
 6978 0ec6 4005     		.2byte	0x540
 6979 0ec8 85000000 		.4byte	0x85
 6980 0ecc 02       		.byte	0x2
 6981 0ecd 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 156


 6982 0ece 6C       		.sleb128 -20
 6983 0ecf 13       		.uleb128 0x13
 6984 0ed0 6F6B00   		.ascii	"ok\000"
 6985 0ed3 01       		.byte	0x1
 6986 0ed4 4205     		.2byte	0x542
 6987 0ed6 6F000000 		.4byte	0x6f
 6988 0eda 02       		.byte	0x2
 6989 0edb 91       		.byte	0x91
 6990 0edc 77       		.sleb128 -9
 6991 0edd 00       		.byte	0
 6992 0ede 19       		.uleb128 0x19
 6993 0edf 01       		.byte	0x1
 6994 0ee0 55030000 		.4byte	.LASF148
 6995 0ee4 01       		.byte	0x1
 6996 0ee5 4D05     		.2byte	0x54d
 6997 0ee7 01       		.byte	0x1
 6998 0ee8 85000000 		.4byte	0x85
 6999 0eec 00000000 		.4byte	.LFB51
 7000 0ef0 0E000000 		.4byte	.LFE51
 7001 0ef4 100B0000 		.4byte	.LLST51
 7002 0ef8 01       		.byte	0x1
 7003 0ef9 0F       		.uleb128 0xf
 7004 0efa 01       		.byte	0x1
 7005 0efb 18040000 		.4byte	.LASF112
 7006 0eff 01       		.byte	0x1
 7007 0f00 5305     		.2byte	0x553
 7008 0f02 01       		.byte	0x1
 7009 0f03 00000000 		.4byte	.LFB52
 7010 0f07 16000000 		.4byte	.LFE52
 7011 0f0b 3C0B0000 		.4byte	.LLST52
 7012 0f0f 01       		.byte	0x1
 7013 0f10 240F0000 		.4byte	0xf24
 7014 0f14 11       		.uleb128 0x11
 7015 0f15 6D616300 		.ascii	"mac\000"
 7016 0f19 01       		.byte	0x1
 7017 0f1a 5305     		.2byte	0x553
 7018 0f1c E7010000 		.4byte	0x1e7
 7019 0f20 02       		.byte	0x2
 7020 0f21 91       		.byte	0x91
 7021 0f22 74       		.sleb128 -12
 7022 0f23 00       		.byte	0
 7023 0f24 0F       		.uleb128 0xf
 7024 0f25 01       		.byte	0x1
 7025 0f26 DD030000 		.4byte	.LASF113
 7026 0f2a 01       		.byte	0x1
 7027 0f2b 5905     		.2byte	0x559
 7028 0f2d 01       		.byte	0x1
 7029 0f2e 00000000 		.4byte	.LFB53
 7030 0f32 16000000 		.4byte	.LFE53
 7031 0f36 740B0000 		.4byte	.LLST53
 7032 0f3a 01       		.byte	0x1
 7033 0f3b 4F0F0000 		.4byte	0xf4f
 7034 0f3f 11       		.uleb128 0x11
 7035 0f40 6D616300 		.ascii	"mac\000"
 7036 0f44 01       		.byte	0x1
 7037 0f45 5905     		.2byte	0x559
 7038 0f47 E7010000 		.4byte	0x1e7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 157


 7039 0f4b 02       		.byte	0x2
 7040 0f4c 91       		.byte	0x91
 7041 0f4d 74       		.sleb128 -12
 7042 0f4e 00       		.byte	0
 7043 0f4f 14       		.uleb128 0x14
 7044 0f50 01       		.byte	0x1
 7045 0f51 4B080000 		.4byte	.LASF114
 7046 0f55 01       		.byte	0x1
 7047 0f56 6305     		.2byte	0x563
 7048 0f58 01       		.byte	0x1
 7049 0f59 6F000000 		.4byte	0x6f
 7050 0f5d 00000000 		.4byte	.LFB54
 7051 0f61 60010000 		.4byte	.LFE54
 7052 0f65 AC0B0000 		.4byte	.LLST54
 7053 0f69 01       		.byte	0x1
 7054 0f6a BA0F0000 		.4byte	0xfba
 7055 0f6e 10       		.uleb128 0x10
 7056 0f6f A8040000 		.4byte	.LASF17
 7057 0f73 01       		.byte	0x1
 7058 0f74 6305     		.2byte	0x563
 7059 0f76 6F000000 		.4byte	0x6f
 7060 0f7a 02       		.byte	0x2
 7061 0f7b 91       		.byte	0x91
 7062 0f7c 6F       		.sleb128 -17
 7063 0f7d 10       		.uleb128 0x10
 7064 0f7e 82060000 		.4byte	.LASF68
 7065 0f82 01       		.byte	0x1
 7066 0f83 6305     		.2byte	0x563
 7067 0f85 7A000000 		.4byte	0x7a
 7068 0f89 02       		.byte	0x2
 7069 0f8a 91       		.byte	0x91
 7070 0f8b 6C       		.sleb128 -20
 7071 0f8c 10       		.uleb128 0x10
 7072 0f8d 50000000 		.4byte	.LASF92
 7073 0f91 01       		.byte	0x1
 7074 0f92 6305     		.2byte	0x563
 7075 0f94 6F000000 		.4byte	0x6f
 7076 0f98 02       		.byte	0x2
 7077 0f99 91       		.byte	0x91
 7078 0f9a 6E       		.sleb128 -18
 7079 0f9b 12       		.uleb128 0x12
 7080 0f9c B1050000 		.4byte	.LASF55
 7081 0fa0 01       		.byte	0x1
 7082 0fa1 6505     		.2byte	0x565
 7083 0fa3 6F000000 		.4byte	0x6f
 7084 0fa7 02       		.byte	0x2
 7085 0fa8 91       		.byte	0x91
 7086 0fa9 77       		.sleb128 -9
 7087 0faa 12       		.uleb128 0x12
 7088 0fab BB010000 		.4byte	.LASF96
 7089 0faf 01       		.byte	0x1
 7090 0fb0 6605     		.2byte	0x566
 7091 0fb2 61000000 		.4byte	0x61
 7092 0fb6 02       		.byte	0x2
 7093 0fb7 91       		.byte	0x91
 7094 0fb8 70       		.sleb128 -16
 7095 0fb9 00       		.byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 158


 7096 0fba 0F       		.uleb128 0xf
 7097 0fbb 01       		.byte	0x1
 7098 0fbc 10050000 		.4byte	.LASF115
 7099 0fc0 01       		.byte	0x1
 7100 0fc1 9705     		.2byte	0x597
 7101 0fc3 01       		.byte	0x1
 7102 0fc4 00000000 		.4byte	.LFB55
 7103 0fc8 58000000 		.4byte	.LFE55
 7104 0fcc E40B0000 		.4byte	.LLST55
 7105 0fd0 01       		.byte	0x1
 7106 0fd1 E50F0000 		.4byte	0xfe5
 7107 0fd5 10       		.uleb128 0x10
 7108 0fd6 B1050000 		.4byte	.LASF55
 7109 0fda 01       		.byte	0x1
 7110 0fdb 9705     		.2byte	0x597
 7111 0fdd 6F000000 		.4byte	0x6f
 7112 0fe1 02       		.byte	0x2
 7113 0fe2 91       		.byte	0x91
 7114 0fe3 77       		.sleb128 -9
 7115 0fe4 00       		.byte	0
 7116 0fe5 14       		.uleb128 0x14
 7117 0fe6 01       		.byte	0x1
 7118 0fe7 7C030000 		.4byte	.LASF116
 7119 0feb 01       		.byte	0x1
 7120 0fec A905     		.2byte	0x5a9
 7121 0fee 01       		.byte	0x1
 7122 0fef 6F000000 		.4byte	0x6f
 7123 0ff3 00000000 		.4byte	.LFB56
 7124 0ff7 42000000 		.4byte	.LFE56
 7125 0ffb 1C0C0000 		.4byte	.LLST56
 7126 0fff 01       		.byte	0x1
 7127 1000 23100000 		.4byte	0x1023
 7128 1004 10       		.uleb128 0x10
 7129 1005 B1050000 		.4byte	.LASF55
 7130 1009 01       		.byte	0x1
 7131 100a A905     		.2byte	0x5a9
 7132 100c 6F000000 		.4byte	0x6f
 7133 1010 02       		.byte	0x2
 7134 1011 91       		.byte	0x91
 7135 1012 6F       		.sleb128 -17
 7136 1013 12       		.uleb128 0x12
 7137 1014 A0050000 		.4byte	.LASF66
 7138 1018 01       		.byte	0x1
 7139 1019 AB05     		.2byte	0x5ab
 7140 101b 6F000000 		.4byte	0x6f
 7141 101f 02       		.byte	0x2
 7142 1020 91       		.byte	0x91
 7143 1021 77       		.sleb128 -9
 7144 1022 00       		.byte	0
 7145 1023 14       		.uleb128 0x14
 7146 1024 01       		.byte	0x1
 7147 1025 B3030000 		.4byte	.LASF117
 7148 1029 01       		.byte	0x1
 7149 102a B705     		.2byte	0x5b7
 7150 102c 01       		.byte	0x1
 7151 102d 6F000000 		.4byte	0x6f
 7152 1031 00000000 		.4byte	.LFB57
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 159


 7153 1035 38000000 		.4byte	.LFE57
 7154 1039 540C0000 		.4byte	.LLST57
 7155 103d 01       		.byte	0x1
 7156 103e 61100000 		.4byte	0x1061
 7157 1042 10       		.uleb128 0x10
 7158 1043 B1050000 		.4byte	.LASF55
 7159 1047 01       		.byte	0x1
 7160 1048 B705     		.2byte	0x5b7
 7161 104a 6F000000 		.4byte	0x6f
 7162 104e 02       		.byte	0x2
 7163 104f 91       		.byte	0x91
 7164 1050 6F       		.sleb128 -17
 7165 1051 12       		.uleb128 0x12
 7166 1052 DC010000 		.4byte	.LASF105
 7167 1056 01       		.byte	0x1
 7168 1057 B905     		.2byte	0x5b9
 7169 1059 6F000000 		.4byte	0x6f
 7170 105d 02       		.byte	0x2
 7171 105e 91       		.byte	0x91
 7172 105f 77       		.sleb128 -9
 7173 1060 00       		.byte	0
 7174 1061 0F       		.uleb128 0xf
 7175 1062 01       		.byte	0x1
 7176 1063 65040000 		.4byte	.LASF118
 7177 1067 01       		.byte	0x1
 7178 1068 C705     		.2byte	0x5c7
 7179 106a 01       		.byte	0x1
 7180 106b 00000000 		.4byte	.LFB58
 7181 106f 7E000000 		.4byte	.LFE58
 7182 1073 8C0C0000 		.4byte	.LLST58
 7183 1077 01       		.byte	0x1
 7184 1078 9A100000 		.4byte	0x109a
 7185 107c 10       		.uleb128 0x10
 7186 107d B1050000 		.4byte	.LASF55
 7187 1081 01       		.byte	0x1
 7188 1082 C705     		.2byte	0x5c7
 7189 1084 6F000000 		.4byte	0x6f
 7190 1088 02       		.byte	0x2
 7191 1089 91       		.byte	0x91
 7192 108a 6F       		.sleb128 -17
 7193 108b 13       		.uleb128 0x13
 7194 108c 697200   		.ascii	"ir\000"
 7195 108f 01       		.byte	0x1
 7196 1090 C905     		.2byte	0x5c9
 7197 1092 6F000000 		.4byte	0x6f
 7198 1096 02       		.byte	0x2
 7199 1097 91       		.byte	0x91
 7200 1098 77       		.sleb128 -9
 7201 1099 00       		.byte	0
 7202 109a 0F       		.uleb128 0xf
 7203 109b 01       		.byte	0x1
 7204 109c 17000000 		.4byte	.LASF119
 7205 10a0 01       		.byte	0x1
 7206 10a1 E405     		.2byte	0x5e4
 7207 10a3 01       		.byte	0x1
 7208 10a4 00000000 		.4byte	.LFB59
 7209 10a8 78000000 		.4byte	.LFE59
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 160


 7210 10ac C40C0000 		.4byte	.LLST59
 7211 10b0 01       		.byte	0x1
 7212 10b1 D3100000 		.4byte	0x10d3
 7213 10b5 10       		.uleb128 0x10
 7214 10b6 B1050000 		.4byte	.LASF55
 7215 10ba 01       		.byte	0x1
 7216 10bb E405     		.2byte	0x5e4
 7217 10bd 6F000000 		.4byte	0x6f
 7218 10c1 02       		.byte	0x2
 7219 10c2 91       		.byte	0x91
 7220 10c3 6F       		.sleb128 -17
 7221 10c4 13       		.uleb128 0x13
 7222 10c5 697200   		.ascii	"ir\000"
 7223 10c8 01       		.byte	0x1
 7224 10c9 E605     		.2byte	0x5e6
 7225 10cb 6F000000 		.4byte	0x6f
 7226 10cf 02       		.byte	0x2
 7227 10d0 91       		.byte	0x91
 7228 10d1 77       		.sleb128 -9
 7229 10d2 00       		.byte	0
 7230 10d3 14       		.uleb128 0x14
 7231 10d4 01       		.byte	0x1
 7232 10d5 30040000 		.4byte	.LASF120
 7233 10d9 01       		.byte	0x1
 7234 10da FB05     		.2byte	0x5fb
 7235 10dc 01       		.byte	0x1
 7236 10dd 7A000000 		.4byte	0x7a
 7237 10e1 00000000 		.4byte	.LFB60
 7238 10e5 1E000000 		.4byte	.LFE60
 7239 10e9 FC0C0000 		.4byte	.LLST60
 7240 10ed 01       		.byte	0x1
 7241 10ee 02110000 		.4byte	0x1102
 7242 10f2 10       		.uleb128 0x10
 7243 10f3 B1050000 		.4byte	.LASF55
 7244 10f7 01       		.byte	0x1
 7245 10f8 FB05     		.2byte	0x5fb
 7246 10fa 6F000000 		.4byte	0x6f
 7247 10fe 02       		.byte	0x2
 7248 10ff 91       		.byte	0x91
 7249 1100 77       		.sleb128 -9
 7250 1101 00       		.byte	0
 7251 1102 14       		.uleb128 0x14
 7252 1103 01       		.byte	0x1
 7253 1104 E8030000 		.4byte	.LASF121
 7254 1108 01       		.byte	0x1
 7255 1109 0506     		.2byte	0x605
 7256 110b 01       		.byte	0x1
 7257 110c 6F000000 		.4byte	0x6f
 7258 1110 00000000 		.4byte	.LFB61
 7259 1114 26000000 		.4byte	.LFE61
 7260 1118 340D0000 		.4byte	.LLST61
 7261 111c 01       		.byte	0x1
 7262 111d 31110000 		.4byte	0x1131
 7263 1121 10       		.uleb128 0x10
 7264 1122 82060000 		.4byte	.LASF68
 7265 1126 01       		.byte	0x1
 7266 1127 0506     		.2byte	0x605
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 161


 7267 1129 7A000000 		.4byte	0x7a
 7268 112d 02       		.byte	0x2
 7269 112e 91       		.byte	0x91
 7270 112f 76       		.sleb128 -10
 7271 1130 00       		.byte	0
 7272 1131 0F       		.uleb128 0xf
 7273 1132 01       		.byte	0x1
 7274 1133 96060000 		.4byte	.LASF122
 7275 1137 01       		.byte	0x1
 7276 1138 0B06     		.2byte	0x60b
 7277 113a 01       		.byte	0x1
 7278 113b 00000000 		.4byte	.LFB62
 7279 113f 24000000 		.4byte	.LFE62
 7280 1143 6C0D0000 		.4byte	.LLST62
 7281 1147 01       		.byte	0x1
 7282 1148 5C110000 		.4byte	0x115c
 7283 114c 10       		.uleb128 0x10
 7284 114d B1050000 		.4byte	.LASF55
 7285 1151 01       		.byte	0x1
 7286 1152 0B06     		.2byte	0x60b
 7287 1154 6F000000 		.4byte	0x6f
 7288 1158 02       		.byte	0x2
 7289 1159 91       		.byte	0x91
 7290 115a 77       		.sleb128 -9
 7291 115b 00       		.byte	0
 7292 115c 0F       		.uleb128 0xf
 7293 115d 01       		.byte	0x1
 7294 115e 87020000 		.4byte	.LASF123
 7295 1162 01       		.byte	0x1
 7296 1163 1806     		.2byte	0x618
 7297 1165 01       		.byte	0x1
 7298 1166 00000000 		.4byte	.LFB63
 7299 116a 5A000000 		.4byte	.LFE63
 7300 116e A40D0000 		.4byte	.LLST63
 7301 1172 01       		.byte	0x1
 7302 1173 96110000 		.4byte	0x1196
 7303 1177 10       		.uleb128 0x10
 7304 1178 B1050000 		.4byte	.LASF55
 7305 117c 01       		.byte	0x1
 7306 117d 1806     		.2byte	0x618
 7307 117f 6F000000 		.4byte	0x6f
 7308 1183 02       		.byte	0x2
 7309 1184 91       		.byte	0x91
 7310 1185 6F       		.sleb128 -17
 7311 1186 12       		.uleb128 0x12
 7312 1187 A0050000 		.4byte	.LASF66
 7313 118b 01       		.byte	0x1
 7314 118c 1A06     		.2byte	0x61a
 7315 118e 6F000000 		.4byte	0x6f
 7316 1192 02       		.byte	0x2
 7317 1193 91       		.byte	0x91
 7318 1194 77       		.sleb128 -9
 7319 1195 00       		.byte	0
 7320 1196 0F       		.uleb128 0xf
 7321 1197 01       		.byte	0x1
 7322 1198 D0050000 		.4byte	.LASF124
 7323 119c 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 162


 7324 119d 2C06     		.2byte	0x62c
 7325 119f 01       		.byte	0x1
 7326 11a0 00000000 		.4byte	.LFB64
 7327 11a4 B0000000 		.4byte	.LFE64
 7328 11a8 DC0D0000 		.4byte	.LLST64
 7329 11ac 01       		.byte	0x1
 7330 11ad FB110000 		.4byte	0x11fb
 7331 11b1 10       		.uleb128 0x10
 7332 11b2 B1050000 		.4byte	.LASF55
 7333 11b6 01       		.byte	0x1
 7334 11b7 2C06     		.2byte	0x62c
 7335 11b9 6F000000 		.4byte	0x6f
 7336 11bd 02       		.byte	0x2
 7337 11be 91       		.byte	0x91
 7338 11bf 6F       		.sleb128 -17
 7339 11c0 11       		.uleb128 0x11
 7340 11c1 697000   		.ascii	"ip\000"
 7341 11c4 01       		.byte	0x1
 7342 11c5 2C06     		.2byte	0x62c
 7343 11c7 85000000 		.4byte	0x85
 7344 11cb 02       		.byte	0x2
 7345 11cc 91       		.byte	0x91
 7346 11cd 68       		.sleb128 -24
 7347 11ce 10       		.uleb128 0x10
 7348 11cf 82060000 		.4byte	.LASF68
 7349 11d3 01       		.byte	0x1
 7350 11d4 2C06     		.2byte	0x62c
 7351 11d6 7A000000 		.4byte	0x7a
 7352 11da 02       		.byte	0x2
 7353 11db 91       		.byte	0x91
 7354 11dc 6C       		.sleb128 -20
 7355 11dd 12       		.uleb128 0x12
 7356 11de ED060000 		.4byte	.LASF81
 7357 11e2 01       		.byte	0x1
 7358 11e3 2E06     		.2byte	0x62e
 7359 11e5 85000000 		.4byte	0x85
 7360 11e9 02       		.byte	0x2
 7361 11ea 91       		.byte	0x91
 7362 11eb 74       		.sleb128 -12
 7363 11ec 13       		.uleb128 0x13
 7364 11ed 697200   		.ascii	"ir\000"
 7365 11f0 01       		.byte	0x1
 7366 11f1 2F06     		.2byte	0x62f
 7367 11f3 6F000000 		.4byte	0x6f
 7368 11f7 02       		.byte	0x2
 7369 11f8 91       		.byte	0x91
 7370 11f9 73       		.sleb128 -13
 7371 11fa 00       		.byte	0
 7372 11fb 14       		.uleb128 0x14
 7373 11fc 01       		.byte	0x1
 7374 11fd 1A070000 		.4byte	.LASF125
 7375 1201 01       		.byte	0x1
 7376 1202 4A06     		.2byte	0x64a
 7377 1204 01       		.byte	0x1
 7378 1205 6F000000 		.4byte	0x6f
 7379 1209 00000000 		.4byte	.LFB65
 7380 120d 1E000000 		.4byte	.LFE65
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 163


 7381 1211 140E0000 		.4byte	.LLST65
 7382 1215 01       		.byte	0x1
 7383 1216 2A120000 		.4byte	0x122a
 7384 121a 10       		.uleb128 0x10
 7385 121b B1050000 		.4byte	.LASF55
 7386 121f 01       		.byte	0x1
 7387 1220 4A06     		.2byte	0x64a
 7388 1222 6F000000 		.4byte	0x6f
 7389 1226 02       		.byte	0x2
 7390 1227 91       		.byte	0x91
 7391 1228 77       		.sleb128 -9
 7392 1229 00       		.byte	0
 7393 122a 0F       		.uleb128 0xf
 7394 122b 01       		.byte	0x1
 7395 122c DF050000 		.4byte	.LASF126
 7396 1230 01       		.byte	0x1
 7397 1231 4E06     		.2byte	0x64e
 7398 1233 01       		.byte	0x1
 7399 1234 00000000 		.4byte	.LFB66
 7400 1238 1E000000 		.4byte	.LFE66
 7401 123c 4C0E0000 		.4byte	.LLST66
 7402 1240 01       		.byte	0x1
 7403 1241 55120000 		.4byte	0x1255
 7404 1245 10       		.uleb128 0x10
 7405 1246 B1050000 		.4byte	.LASF55
 7406 124a 01       		.byte	0x1
 7407 124b 4E06     		.2byte	0x64e
 7408 124d 6F000000 		.4byte	0x6f
 7409 1251 02       		.byte	0x2
 7410 1252 91       		.byte	0x91
 7411 1253 77       		.sleb128 -9
 7412 1254 00       		.byte	0
 7413 1255 14       		.uleb128 0x14
 7414 1256 01       		.byte	0x1
 7415 1257 3F080000 		.4byte	.LASF127
 7416 125b 01       		.byte	0x1
 7417 125c 5406     		.2byte	0x654
 7418 125e 01       		.byte	0x1
 7419 125f 7A000000 		.4byte	0x7a
 7420 1263 00000000 		.4byte	.LFB67
 7421 1267 B4000000 		.4byte	.LFE67
 7422 126b 840E0000 		.4byte	.LLST67
 7423 126f 01       		.byte	0x1
 7424 1270 CF120000 		.4byte	0x12cf
 7425 1274 10       		.uleb128 0x10
 7426 1275 B1050000 		.4byte	.LASF55
 7427 1279 01       		.byte	0x1
 7428 127a 5406     		.2byte	0x654
 7429 127c 6F000000 		.4byte	0x6f
 7430 1280 02       		.byte	0x2
 7431 1281 91       		.byte	0x91
 7432 1282 6F       		.sleb128 -17
 7433 1283 10       		.uleb128 0x10
 7434 1284 63000000 		.4byte	.LASF88
 7435 1288 01       		.byte	0x1
 7436 1289 5406     		.2byte	0x654
 7437 128b E7010000 		.4byte	0x1e7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 164


 7438 128f 02       		.byte	0x2
 7439 1290 91       		.byte	0x91
 7440 1291 68       		.sleb128 -24
 7441 1292 11       		.uleb128 0x11
 7442 1293 6C656E00 		.ascii	"len\000"
 7443 1297 01       		.byte	0x1
 7444 1298 5406     		.2byte	0x654
 7445 129a 7A000000 		.4byte	0x7a
 7446 129e 02       		.byte	0x2
 7447 129f 91       		.byte	0x91
 7448 12a0 6C       		.sleb128 -20
 7449 12a1 12       		.uleb128 0x12
 7450 12a2 5E010000 		.4byte	.LASF128
 7451 12a6 01       		.byte	0x1
 7452 12a7 5606     		.2byte	0x656
 7453 12a9 7A000000 		.4byte	0x7a
 7454 12ad 02       		.byte	0x2
 7455 12ae 91       		.byte	0x91
 7456 12af 76       		.sleb128 -10
 7457 12b0 12       		.uleb128 0x12
 7458 12b1 C6050000 		.4byte	.LASF129
 7459 12b5 01       		.byte	0x1
 7460 12b6 5706     		.2byte	0x657
 7461 12b8 7A000000 		.4byte	0x7a
 7462 12bc 02       		.byte	0x2
 7463 12bd 91       		.byte	0x91
 7464 12be 74       		.sleb128 -12
 7465 12bf 12       		.uleb128 0x12
 7466 12c0 A0050000 		.4byte	.LASF66
 7467 12c4 01       		.byte	0x1
 7468 12c5 5806     		.2byte	0x658
 7469 12c7 6F000000 		.4byte	0x6f
 7470 12cb 02       		.byte	0x2
 7471 12cc 91       		.byte	0x91
 7472 12cd 73       		.sleb128 -13
 7473 12ce 00       		.byte	0
 7474 12cf 14       		.uleb128 0x14
 7475 12d0 01       		.byte	0x1
 7476 12d1 56040000 		.4byte	.LASF130
 7477 12d5 01       		.byte	0x1
 7478 12d6 7E06     		.2byte	0x67e
 7479 12d8 01       		.byte	0x1
 7480 12d9 7A000000 		.4byte	0x7a
 7481 12dd 00000000 		.4byte	.LFB68
 7482 12e1 68000000 		.4byte	.LFE68
 7483 12e5 BC0E0000 		.4byte	.LLST68
 7484 12e9 01       		.byte	0x1
 7485 12ea 2B130000 		.4byte	0x132b
 7486 12ee 10       		.uleb128 0x10
 7487 12ef B1050000 		.4byte	.LASF55
 7488 12f3 01       		.byte	0x1
 7489 12f4 7E06     		.2byte	0x67e
 7490 12f6 6F000000 		.4byte	0x6f
 7491 12fa 02       		.byte	0x2
 7492 12fb 91       		.byte	0x91
 7493 12fc 6F       		.sleb128 -17
 7494 12fd 10       		.uleb128 0x10
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 165


 7495 12fe 63000000 		.4byte	.LASF88
 7496 1302 01       		.byte	0x1
 7497 1303 7E06     		.2byte	0x67e
 7498 1305 E7010000 		.4byte	0x1e7
 7499 1309 02       		.byte	0x2
 7500 130a 91       		.byte	0x91
 7501 130b 68       		.sleb128 -24
 7502 130c 10       		.uleb128 0x10
 7503 130d 99050000 		.4byte	.LASF27
 7504 1311 01       		.byte	0x1
 7505 1312 7E06     		.2byte	0x67e
 7506 1314 7A000000 		.4byte	0x7a
 7507 1318 02       		.byte	0x2
 7508 1319 91       		.byte	0x91
 7509 131a 6C       		.sleb128 -20
 7510 131b 12       		.uleb128 0x12
 7511 131c 8E070000 		.4byte	.LASF131
 7512 1320 01       		.byte	0x1
 7513 1321 8006     		.2byte	0x680
 7514 1323 7A000000 		.4byte	0x7a
 7515 1327 02       		.byte	0x2
 7516 1328 91       		.byte	0x91
 7517 1329 76       		.sleb128 -10
 7518 132a 00       		.byte	0
 7519 132b 0F       		.uleb128 0xf
 7520 132c 01       		.byte	0x1
 7521 132d D0030000 		.4byte	.LASF132
 7522 1331 01       		.byte	0x1
 7523 1332 9D06     		.2byte	0x69d
 7524 1334 01       		.byte	0x1
 7525 1335 00000000 		.4byte	.LFB69
 7526 1339 2A000000 		.4byte	.LFE69
 7527 133d F40E0000 		.4byte	.LLST69
 7528 1341 01       		.byte	0x1
 7529 1342 65130000 		.4byte	0x1365
 7530 1346 10       		.uleb128 0x10
 7531 1347 B1050000 		.4byte	.LASF55
 7532 134b 01       		.byte	0x1
 7533 134c 9D06     		.2byte	0x69d
 7534 134e 6F000000 		.4byte	0x6f
 7535 1352 02       		.byte	0x2
 7536 1353 91       		.byte	0x91
 7537 1354 77       		.sleb128 -9
 7538 1355 11       		.uleb128 0x11
 7539 1356 73747200 		.ascii	"str\000"
 7540 135a 01       		.byte	0x1
 7541 135b 9D06     		.2byte	0x69d
 7542 135d BD000000 		.4byte	0xbd
 7543 1361 02       		.byte	0x2
 7544 1362 91       		.byte	0x91
 7545 1363 70       		.sleb128 -16
 7546 1364 00       		.byte	0
 7547 1365 14       		.uleb128 0x14
 7548 1366 01       		.byte	0x1
 7549 1367 4A050000 		.4byte	.LASF133
 7550 136b 01       		.byte	0x1
 7551 136c A706     		.2byte	0x6a7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 166


 7552 136e 01       		.byte	0x1
 7553 136f 6F000000 		.4byte	0x6f
 7554 1373 00000000 		.4byte	.LFB70
 7555 1377 26000000 		.4byte	.LFE70
 7556 137b 2C0F0000 		.4byte	.LLST70
 7557 137f 01       		.byte	0x1
 7558 1380 94130000 		.4byte	0x1394
 7559 1384 10       		.uleb128 0x10
 7560 1385 82060000 		.4byte	.LASF68
 7561 1389 01       		.byte	0x1
 7562 138a A706     		.2byte	0x6a7
 7563 138c 7A000000 		.4byte	0x7a
 7564 1390 02       		.byte	0x2
 7565 1391 91       		.byte	0x91
 7566 1392 76       		.sleb128 -10
 7567 1393 00       		.byte	0
 7568 1394 14       		.uleb128 0x14
 7569 1395 01       		.byte	0x1
 7570 1396 44010000 		.4byte	.LASF134
 7571 139a 01       		.byte	0x1
 7572 139b AD06     		.2byte	0x6ad
 7573 139d 01       		.byte	0x1
 7574 139e 7A000000 		.4byte	0x7a
 7575 13a2 00000000 		.4byte	.LFB71
 7576 13a6 8A000000 		.4byte	.LFE71
 7577 13aa 640F0000 		.4byte	.LLST71
 7578 13ae 01       		.byte	0x1
 7579 13af 0D140000 		.4byte	0x140d
 7580 13b3 10       		.uleb128 0x10
 7581 13b4 B1050000 		.4byte	.LASF55
 7582 13b8 01       		.byte	0x1
 7583 13b9 AD06     		.2byte	0x6ad
 7584 13bb 6F000000 		.4byte	0x6f
 7585 13bf 02       		.byte	0x2
 7586 13c0 91       		.byte	0x91
 7587 13c1 6F       		.sleb128 -17
 7588 13c2 11       		.uleb128 0x11
 7589 13c3 697000   		.ascii	"ip\000"
 7590 13c6 01       		.byte	0x1
 7591 13c7 AD06     		.2byte	0x6ad
 7592 13c9 85000000 		.4byte	0x85
 7593 13cd 02       		.byte	0x2
 7594 13ce 91       		.byte	0x91
 7595 13cf 68       		.sleb128 -24
 7596 13d0 10       		.uleb128 0x10
 7597 13d1 82060000 		.4byte	.LASF68
 7598 13d5 01       		.byte	0x1
 7599 13d6 AD06     		.2byte	0x6ad
 7600 13d8 7A000000 		.4byte	0x7a
 7601 13dc 02       		.byte	0x2
 7602 13dd 91       		.byte	0x91
 7603 13de 6C       		.sleb128 -20
 7604 13df 10       		.uleb128 0x10
 7605 13e0 63000000 		.4byte	.LASF88
 7606 13e4 01       		.byte	0x1
 7607 13e5 AD06     		.2byte	0x6ad
 7608 13e7 E7010000 		.4byte	0x1e7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 167


 7609 13eb 02       		.byte	0x2
 7610 13ec 91       		.byte	0x91
 7611 13ed 64       		.sleb128 -28
 7612 13ee 10       		.uleb128 0x10
 7613 13ef 99050000 		.4byte	.LASF27
 7614 13f3 01       		.byte	0x1
 7615 13f4 AD06     		.2byte	0x6ad
 7616 13f6 7A000000 		.4byte	0x7a
 7617 13fa 02       		.byte	0x2
 7618 13fb 91       		.byte	0x91
 7619 13fc 00       		.sleb128 0
 7620 13fd 12       		.uleb128 0x12
 7621 13fe 5E010000 		.4byte	.LASF128
 7622 1402 01       		.byte	0x1
 7623 1403 AF06     		.2byte	0x6af
 7624 1405 7A000000 		.4byte	0x7a
 7625 1409 02       		.byte	0x2
 7626 140a 91       		.byte	0x91
 7627 140b 76       		.sleb128 -10
 7628 140c 00       		.byte	0
 7629 140d 14       		.uleb128 0x14
 7630 140e 01       		.byte	0x1
 7631 140f CE000000 		.4byte	.LASF135
 7632 1413 01       		.byte	0x1
 7633 1414 DA06     		.2byte	0x6da
 7634 1416 01       		.byte	0x1
 7635 1417 7A000000 		.4byte	0x7a
 7636 141b 00000000 		.4byte	.LFB72
 7637 141f 00010000 		.4byte	.LFE72
 7638 1423 9C0F0000 		.4byte	.LLST72
 7639 1427 01       		.byte	0x1
 7640 1428 A4140000 		.4byte	0x14a4
 7641 142c 10       		.uleb128 0x10
 7642 142d B1050000 		.4byte	.LASF55
 7643 1431 01       		.byte	0x1
 7644 1432 DA06     		.2byte	0x6da
 7645 1434 6F000000 		.4byte	0x6f
 7646 1438 02       		.byte	0x2
 7647 1439 91       		.byte	0x91
 7648 143a 67       		.sleb128 -25
 7649 143b 11       		.uleb128 0x11
 7650 143c 697000   		.ascii	"ip\000"
 7651 143f 01       		.byte	0x1
 7652 1440 DA06     		.2byte	0x6da
 7653 1442 A4140000 		.4byte	0x14a4
 7654 1446 02       		.byte	0x2
 7655 1447 91       		.byte	0x91
 7656 1448 60       		.sleb128 -32
 7657 1449 10       		.uleb128 0x10
 7658 144a 82060000 		.4byte	.LASF68
 7659 144e 01       		.byte	0x1
 7660 144f DA06     		.2byte	0x6da
 7661 1451 AA140000 		.4byte	0x14aa
 7662 1455 02       		.byte	0x2
 7663 1456 91       		.byte	0x91
 7664 1457 5C       		.sleb128 -36
 7665 1458 10       		.uleb128 0x10
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 168


 7666 1459 63000000 		.4byte	.LASF88
 7667 145d 01       		.byte	0x1
 7668 145e DA06     		.2byte	0x6da
 7669 1460 E7010000 		.4byte	0x1e7
 7670 1464 02       		.byte	0x2
 7671 1465 91       		.byte	0x91
 7672 1466 58       		.sleb128 -40
 7673 1467 10       		.uleb128 0x10
 7674 1468 99050000 		.4byte	.LASF27
 7675 146c 01       		.byte	0x1
 7676 146d DA06     		.2byte	0x6da
 7677 146f 7A000000 		.4byte	0x7a
 7678 1473 02       		.byte	0x2
 7679 1474 91       		.byte	0x91
 7680 1475 00       		.sleb128 0
 7681 1476 12       		.uleb128 0x12
 7682 1477 8E070000 		.4byte	.LASF131
 7683 147b 01       		.byte	0x1
 7684 147c DC06     		.2byte	0x6dc
 7685 147e 7A000000 		.4byte	0x7a
 7686 1482 02       		.byte	0x2
 7687 1483 91       		.byte	0x91
 7688 1484 76       		.sleb128 -10
 7689 1485 12       		.uleb128 0x12
 7690 1486 34080000 		.4byte	.LASF136
 7691 148a 01       		.byte	0x1
 7692 148b DD06     		.2byte	0x6dd
 7693 148d 7A000000 		.4byte	0x7a
 7694 1491 02       		.byte	0x2
 7695 1492 91       		.byte	0x91
 7696 1493 74       		.sleb128 -12
 7697 1494 12       		.uleb128 0x12
 7698 1495 40060000 		.4byte	.LASF137
 7699 1499 01       		.byte	0x1
 7700 149a DE06     		.2byte	0x6de
 7701 149c B0140000 		.4byte	0x14b0
 7702 14a0 02       		.byte	0x2
 7703 14a1 91       		.byte	0x91
 7704 14a2 6C       		.sleb128 -20
 7705 14a3 00       		.byte	0
 7706 14a4 05       		.uleb128 0x5
 7707 14a5 04       		.byte	0x4
 7708 14a6 85000000 		.4byte	0x85
 7709 14aa 05       		.uleb128 0x5
 7710 14ab 04       		.byte	0x4
 7711 14ac 7A000000 		.4byte	0x7a
 7712 14b0 16       		.uleb128 0x16
 7713 14b1 6F000000 		.4byte	0x6f
 7714 14b5 C0140000 		.4byte	0x14c0
 7715 14b9 17       		.uleb128 0x17
 7716 14ba B0000000 		.4byte	0xb0
 7717 14be 07       		.byte	0x7
 7718 14bf 00       		.byte	0
 7719 14c0 1A       		.uleb128 0x1a
 7720 14c1 5A080000 		.4byte	.LASF138
 7721 14c5 01       		.byte	0x1
 7722 14c6 30       		.byte	0x30
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 169


 7723 14c7 6F000000 		.4byte	0x6f
 7724 14cb 01       		.byte	0x1
 7725 14cc 01       		.byte	0x1
 7726 14cd 16       		.uleb128 0x16
 7727 14ce 85000000 		.4byte	0x85
 7728 14d2 DD140000 		.4byte	0x14dd
 7729 14d6 17       		.uleb128 0x17
 7730 14d7 B0000000 		.4byte	0xb0
 7731 14db 07       		.byte	0x7
 7732 14dc 00       		.byte	0
 7733 14dd 1B       		.uleb128 0x1b
 7734 14de C9010000 		.4byte	.LASF139
 7735 14e2 01       		.byte	0x1
 7736 14e3 58       		.byte	0x58
 7737 14e4 EF140000 		.4byte	0x14ef
 7738 14e8 01       		.byte	0x1
 7739 14e9 05       		.byte	0x5
 7740 14ea 03       		.byte	0x3
 7741 14eb 00000000 		.4byte	ETH_SOCKET_TX_BASE
 7742 14ef 06       		.uleb128 0x6
 7743 14f0 CD140000 		.4byte	0x14cd
 7744 14f4 1B       		.uleb128 0x1b
 7745 14f5 DD000000 		.4byte	.LASF140
 7746 14f9 01       		.byte	0x1
 7747 14fa 59       		.byte	0x59
 7748 14fb 06150000 		.4byte	0x1506
 7749 14ff 01       		.byte	0x1
 7750 1500 05       		.byte	0x5
 7751 1501 03       		.byte	0x3
 7752 1502 00000000 		.4byte	ETH_SOCKET_RX_BASE
 7753 1506 06       		.uleb128 0x6
 7754 1507 CD140000 		.4byte	0x14cd
 7755 150b 1B       		.uleb128 0x1b
 7756 150c B8050000 		.4byte	.LASF141
 7757 1510 01       		.byte	0x1
 7758 1511 5E       		.byte	0x5e
 7759 1512 1D150000 		.4byte	0x151d
 7760 1516 01       		.byte	0x1
 7761 1517 05       		.byte	0x5
 7762 1518 03       		.byte	0x3
 7763 1519 00000000 		.4byte	ETH_W5500_BSB
 7764 151d 06       		.uleb128 0x6
 7765 151e CD140000 		.4byte	0x14cd
 7766 1522 16       		.uleb128 0x16
 7767 1523 25010000 		.4byte	0x125
 7768 1527 32150000 		.4byte	0x1532
 7769 152b 17       		.uleb128 0x17
 7770 152c B0000000 		.4byte	0xb0
 7771 1530 07       		.byte	0x7
 7772 1531 00       		.byte	0
 7773 1532 1B       		.uleb128 0x1b
 7774 1533 6A000000 		.4byte	.LASF142
 7775 1537 01       		.byte	0x1
 7776 1538 69       		.byte	0x69
 7777 1539 22150000 		.4byte	0x1522
 7778 153d 01       		.byte	0x1
 7779 153e 05       		.byte	0x5
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 170


 7780 153f 03       		.byte	0x3
 7781 1540 00000000 		.4byte	ETH_SocketConfig
 7782 1544 1B       		.uleb128 0x1b
 7783 1545 DE060000 		.4byte	.LASF143
 7784 1549 01       		.byte	0x1
 7785 154a 6A       		.byte	0x6a
 7786 154b 85000000 		.4byte	0x85
 7787 154f 01       		.byte	0x1
 7788 1550 05       		.byte	0x5
 7789 1551 03       		.byte	0x3
 7790 1552 00000000 		.4byte	ETH_SubnetMask
 7791 1556 16       		.uleb128 0x16
 7792 1557 6F000000 		.4byte	0x6f
 7793 155b 66150000 		.4byte	0x1566
 7794 155f 17       		.uleb128 0x17
 7795 1560 B0000000 		.4byte	0xb0
 7796 1564 05       		.byte	0x5
 7797 1565 00       		.byte	0
 7798 1566 1B       		.uleb128 0x1b
 7799 1567 10040000 		.4byte	.LASF144
 7800 156b 01       		.byte	0x1
 7801 156c 6C       		.byte	0x6c
 7802 156d 56150000 		.4byte	0x1556
 7803 1571 01       		.byte	0x1
 7804 1572 05       		.byte	0x5
 7805 1573 03       		.byte	0x3
 7806 1574 00000000 		.4byte	ETH_MAC
 7807 1578 00       		.byte	0
 7808              		.section	.debug_abbrev,"",%progbits
 7809              	.Ldebug_abbrev0:
 7810 0000 01       		.uleb128 0x1
 7811 0001 11       		.uleb128 0x11
 7812 0002 01       		.byte	0x1
 7813 0003 25       		.uleb128 0x25
 7814 0004 0E       		.uleb128 0xe
 7815 0005 13       		.uleb128 0x13
 7816 0006 0B       		.uleb128 0xb
 7817 0007 03       		.uleb128 0x3
 7818 0008 0E       		.uleb128 0xe
 7819 0009 1B       		.uleb128 0x1b
 7820 000a 0E       		.uleb128 0xe
 7821 000b 55       		.uleb128 0x55
 7822 000c 06       		.uleb128 0x6
 7823 000d 11       		.uleb128 0x11
 7824 000e 01       		.uleb128 0x1
 7825 000f 52       		.uleb128 0x52
 7826 0010 01       		.uleb128 0x1
 7827 0011 10       		.uleb128 0x10
 7828 0012 06       		.uleb128 0x6
 7829 0013 00       		.byte	0
 7830 0014 00       		.byte	0
 7831 0015 02       		.uleb128 0x2
 7832 0016 24       		.uleb128 0x24
 7833 0017 00       		.byte	0
 7834 0018 0B       		.uleb128 0xb
 7835 0019 0B       		.uleb128 0xb
 7836 001a 3E       		.uleb128 0x3e
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 171


 7837 001b 0B       		.uleb128 0xb
 7838 001c 03       		.uleb128 0x3
 7839 001d 0E       		.uleb128 0xe
 7840 001e 00       		.byte	0
 7841 001f 00       		.byte	0
 7842 0020 03       		.uleb128 0x3
 7843 0021 24       		.uleb128 0x24
 7844 0022 00       		.byte	0
 7845 0023 0B       		.uleb128 0xb
 7846 0024 0B       		.uleb128 0xb
 7847 0025 3E       		.uleb128 0x3e
 7848 0026 0B       		.uleb128 0xb
 7849 0027 03       		.uleb128 0x3
 7850 0028 08       		.uleb128 0x8
 7851 0029 00       		.byte	0
 7852 002a 00       		.byte	0
 7853 002b 04       		.uleb128 0x4
 7854 002c 16       		.uleb128 0x16
 7855 002d 00       		.byte	0
 7856 002e 03       		.uleb128 0x3
 7857 002f 0E       		.uleb128 0xe
 7858 0030 3A       		.uleb128 0x3a
 7859 0031 0B       		.uleb128 0xb
 7860 0032 3B       		.uleb128 0x3b
 7861 0033 0B       		.uleb128 0xb
 7862 0034 49       		.uleb128 0x49
 7863 0035 13       		.uleb128 0x13
 7864 0036 00       		.byte	0
 7865 0037 00       		.byte	0
 7866 0038 05       		.uleb128 0x5
 7867 0039 0F       		.uleb128 0xf
 7868 003a 00       		.byte	0
 7869 003b 0B       		.uleb128 0xb
 7870 003c 0B       		.uleb128 0xb
 7871 003d 49       		.uleb128 0x49
 7872 003e 13       		.uleb128 0x13
 7873 003f 00       		.byte	0
 7874 0040 00       		.byte	0
 7875 0041 06       		.uleb128 0x6
 7876 0042 26       		.uleb128 0x26
 7877 0043 00       		.byte	0
 7878 0044 49       		.uleb128 0x49
 7879 0045 13       		.uleb128 0x13
 7880 0046 00       		.byte	0
 7881 0047 00       		.byte	0
 7882 0048 07       		.uleb128 0x7
 7883 0049 13       		.uleb128 0x13
 7884 004a 01       		.byte	0x1
 7885 004b 0B       		.uleb128 0xb
 7886 004c 0B       		.uleb128 0xb
 7887 004d 3A       		.uleb128 0x3a
 7888 004e 0B       		.uleb128 0xb
 7889 004f 3B       		.uleb128 0x3b
 7890 0050 0B       		.uleb128 0xb
 7891 0051 01       		.uleb128 0x1
 7892 0052 13       		.uleb128 0x13
 7893 0053 00       		.byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 172


 7894 0054 00       		.byte	0
 7895 0055 08       		.uleb128 0x8
 7896 0056 0D       		.uleb128 0xd
 7897 0057 00       		.byte	0
 7898 0058 03       		.uleb128 0x3
 7899 0059 0E       		.uleb128 0xe
 7900 005a 3A       		.uleb128 0x3a
 7901 005b 0B       		.uleb128 0xb
 7902 005c 3B       		.uleb128 0x3b
 7903 005d 0B       		.uleb128 0xb
 7904 005e 49       		.uleb128 0x49
 7905 005f 13       		.uleb128 0x13
 7906 0060 38       		.uleb128 0x38
 7907 0061 0A       		.uleb128 0xa
 7908 0062 00       		.byte	0
 7909 0063 00       		.byte	0
 7910 0064 09       		.uleb128 0x9
 7911 0065 2E       		.uleb128 0x2e
 7912 0066 00       		.byte	0
 7913 0067 3F       		.uleb128 0x3f
 7914 0068 0C       		.uleb128 0xc
 7915 0069 03       		.uleb128 0x3
 7916 006a 0E       		.uleb128 0xe
 7917 006b 3A       		.uleb128 0x3a
 7918 006c 0B       		.uleb128 0xb
 7919 006d 3B       		.uleb128 0x3b
 7920 006e 0B       		.uleb128 0xb
 7921 006f 27       		.uleb128 0x27
 7922 0070 0C       		.uleb128 0xc
 7923 0071 11       		.uleb128 0x11
 7924 0072 01       		.uleb128 0x1
 7925 0073 12       		.uleb128 0x12
 7926 0074 01       		.uleb128 0x1
 7927 0075 40       		.uleb128 0x40
 7928 0076 06       		.uleb128 0x6
 7929 0077 9642     		.uleb128 0x2116
 7930 0079 0C       		.uleb128 0xc
 7931 007a 00       		.byte	0
 7932 007b 00       		.byte	0
 7933 007c 0A       		.uleb128 0xa
 7934 007d 2E       		.uleb128 0x2e
 7935 007e 01       		.byte	0x1
 7936 007f 3F       		.uleb128 0x3f
 7937 0080 0C       		.uleb128 0xc
 7938 0081 03       		.uleb128 0x3
 7939 0082 0E       		.uleb128 0xe
 7940 0083 3A       		.uleb128 0x3a
 7941 0084 0B       		.uleb128 0xb
 7942 0085 3B       		.uleb128 0x3b
 7943 0086 0B       		.uleb128 0xb
 7944 0087 27       		.uleb128 0x27
 7945 0088 0C       		.uleb128 0xc
 7946 0089 11       		.uleb128 0x11
 7947 008a 01       		.uleb128 0x1
 7948 008b 12       		.uleb128 0x12
 7949 008c 01       		.uleb128 0x1
 7950 008d 40       		.uleb128 0x40
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 173


 7951 008e 06       		.uleb128 0x6
 7952 008f 9642     		.uleb128 0x2116
 7953 0091 0C       		.uleb128 0xc
 7954 0092 01       		.uleb128 0x1
 7955 0093 13       		.uleb128 0x13
 7956 0094 00       		.byte	0
 7957 0095 00       		.byte	0
 7958 0096 0B       		.uleb128 0xb
 7959 0097 05       		.uleb128 0x5
 7960 0098 00       		.byte	0
 7961 0099 03       		.uleb128 0x3
 7962 009a 0E       		.uleb128 0xe
 7963 009b 3A       		.uleb128 0x3a
 7964 009c 0B       		.uleb128 0xb
 7965 009d 3B       		.uleb128 0x3b
 7966 009e 0B       		.uleb128 0xb
 7967 009f 49       		.uleb128 0x49
 7968 00a0 13       		.uleb128 0x13
 7969 00a1 02       		.uleb128 0x2
 7970 00a2 0A       		.uleb128 0xa
 7971 00a3 00       		.byte	0
 7972 00a4 00       		.byte	0
 7973 00a5 0C       		.uleb128 0xc
 7974 00a6 05       		.uleb128 0x5
 7975 00a7 00       		.byte	0
 7976 00a8 03       		.uleb128 0x3
 7977 00a9 08       		.uleb128 0x8
 7978 00aa 3A       		.uleb128 0x3a
 7979 00ab 0B       		.uleb128 0xb
 7980 00ac 3B       		.uleb128 0x3b
 7981 00ad 0B       		.uleb128 0xb
 7982 00ae 49       		.uleb128 0x49
 7983 00af 13       		.uleb128 0x13
 7984 00b0 02       		.uleb128 0x2
 7985 00b1 0A       		.uleb128 0xa
 7986 00b2 00       		.byte	0
 7987 00b3 00       		.byte	0
 7988 00b4 0D       		.uleb128 0xd
 7989 00b5 34       		.uleb128 0x34
 7990 00b6 00       		.byte	0
 7991 00b7 03       		.uleb128 0x3
 7992 00b8 0E       		.uleb128 0xe
 7993 00b9 3A       		.uleb128 0x3a
 7994 00ba 0B       		.uleb128 0xb
 7995 00bb 3B       		.uleb128 0x3b
 7996 00bc 0B       		.uleb128 0xb
 7997 00bd 49       		.uleb128 0x49
 7998 00be 13       		.uleb128 0x13
 7999 00bf 02       		.uleb128 0x2
 8000 00c0 0A       		.uleb128 0xa
 8001 00c1 00       		.byte	0
 8002 00c2 00       		.byte	0
 8003 00c3 0E       		.uleb128 0xe
 8004 00c4 34       		.uleb128 0x34
 8005 00c5 00       		.byte	0
 8006 00c6 03       		.uleb128 0x3
 8007 00c7 08       		.uleb128 0x8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 174


 8008 00c8 3A       		.uleb128 0x3a
 8009 00c9 0B       		.uleb128 0xb
 8010 00ca 3B       		.uleb128 0x3b
 8011 00cb 0B       		.uleb128 0xb
 8012 00cc 49       		.uleb128 0x49
 8013 00cd 13       		.uleb128 0x13
 8014 00ce 02       		.uleb128 0x2
 8015 00cf 0A       		.uleb128 0xa
 8016 00d0 00       		.byte	0
 8017 00d1 00       		.byte	0
 8018 00d2 0F       		.uleb128 0xf
 8019 00d3 2E       		.uleb128 0x2e
 8020 00d4 01       		.byte	0x1
 8021 00d5 3F       		.uleb128 0x3f
 8022 00d6 0C       		.uleb128 0xc
 8023 00d7 03       		.uleb128 0x3
 8024 00d8 0E       		.uleb128 0xe
 8025 00d9 3A       		.uleb128 0x3a
 8026 00da 0B       		.uleb128 0xb
 8027 00db 3B       		.uleb128 0x3b
 8028 00dc 05       		.uleb128 0x5
 8029 00dd 27       		.uleb128 0x27
 8030 00de 0C       		.uleb128 0xc
 8031 00df 11       		.uleb128 0x11
 8032 00e0 01       		.uleb128 0x1
 8033 00e1 12       		.uleb128 0x12
 8034 00e2 01       		.uleb128 0x1
 8035 00e3 40       		.uleb128 0x40
 8036 00e4 06       		.uleb128 0x6
 8037 00e5 9642     		.uleb128 0x2116
 8038 00e7 0C       		.uleb128 0xc
 8039 00e8 01       		.uleb128 0x1
 8040 00e9 13       		.uleb128 0x13
 8041 00ea 00       		.byte	0
 8042 00eb 00       		.byte	0
 8043 00ec 10       		.uleb128 0x10
 8044 00ed 05       		.uleb128 0x5
 8045 00ee 00       		.byte	0
 8046 00ef 03       		.uleb128 0x3
 8047 00f0 0E       		.uleb128 0xe
 8048 00f1 3A       		.uleb128 0x3a
 8049 00f2 0B       		.uleb128 0xb
 8050 00f3 3B       		.uleb128 0x3b
 8051 00f4 05       		.uleb128 0x5
 8052 00f5 49       		.uleb128 0x49
 8053 00f6 13       		.uleb128 0x13
 8054 00f7 02       		.uleb128 0x2
 8055 00f8 0A       		.uleb128 0xa
 8056 00f9 00       		.byte	0
 8057 00fa 00       		.byte	0
 8058 00fb 11       		.uleb128 0x11
 8059 00fc 05       		.uleb128 0x5
 8060 00fd 00       		.byte	0
 8061 00fe 03       		.uleb128 0x3
 8062 00ff 08       		.uleb128 0x8
 8063 0100 3A       		.uleb128 0x3a
 8064 0101 0B       		.uleb128 0xb
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 175


 8065 0102 3B       		.uleb128 0x3b
 8066 0103 05       		.uleb128 0x5
 8067 0104 49       		.uleb128 0x49
 8068 0105 13       		.uleb128 0x13
 8069 0106 02       		.uleb128 0x2
 8070 0107 0A       		.uleb128 0xa
 8071 0108 00       		.byte	0
 8072 0109 00       		.byte	0
 8073 010a 12       		.uleb128 0x12
 8074 010b 34       		.uleb128 0x34
 8075 010c 00       		.byte	0
 8076 010d 03       		.uleb128 0x3
 8077 010e 0E       		.uleb128 0xe
 8078 010f 3A       		.uleb128 0x3a
 8079 0110 0B       		.uleb128 0xb
 8080 0111 3B       		.uleb128 0x3b
 8081 0112 05       		.uleb128 0x5
 8082 0113 49       		.uleb128 0x49
 8083 0114 13       		.uleb128 0x13
 8084 0115 02       		.uleb128 0x2
 8085 0116 0A       		.uleb128 0xa
 8086 0117 00       		.byte	0
 8087 0118 00       		.byte	0
 8088 0119 13       		.uleb128 0x13
 8089 011a 34       		.uleb128 0x34
 8090 011b 00       		.byte	0
 8091 011c 03       		.uleb128 0x3
 8092 011d 08       		.uleb128 0x8
 8093 011e 3A       		.uleb128 0x3a
 8094 011f 0B       		.uleb128 0xb
 8095 0120 3B       		.uleb128 0x3b
 8096 0121 05       		.uleb128 0x5
 8097 0122 49       		.uleb128 0x49
 8098 0123 13       		.uleb128 0x13
 8099 0124 02       		.uleb128 0x2
 8100 0125 0A       		.uleb128 0xa
 8101 0126 00       		.byte	0
 8102 0127 00       		.byte	0
 8103 0128 14       		.uleb128 0x14
 8104 0129 2E       		.uleb128 0x2e
 8105 012a 01       		.byte	0x1
 8106 012b 3F       		.uleb128 0x3f
 8107 012c 0C       		.uleb128 0xc
 8108 012d 03       		.uleb128 0x3
 8109 012e 0E       		.uleb128 0xe
 8110 012f 3A       		.uleb128 0x3a
 8111 0130 0B       		.uleb128 0xb
 8112 0131 3B       		.uleb128 0x3b
 8113 0132 05       		.uleb128 0x5
 8114 0133 27       		.uleb128 0x27
 8115 0134 0C       		.uleb128 0xc
 8116 0135 49       		.uleb128 0x49
 8117 0136 13       		.uleb128 0x13
 8118 0137 11       		.uleb128 0x11
 8119 0138 01       		.uleb128 0x1
 8120 0139 12       		.uleb128 0x12
 8121 013a 01       		.uleb128 0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 176


 8122 013b 40       		.uleb128 0x40
 8123 013c 06       		.uleb128 0x6
 8124 013d 9642     		.uleb128 0x2116
 8125 013f 0C       		.uleb128 0xc
 8126 0140 01       		.uleb128 0x1
 8127 0141 13       		.uleb128 0x13
 8128 0142 00       		.byte	0
 8129 0143 00       		.byte	0
 8130 0144 15       		.uleb128 0x15
 8131 0145 2E       		.uleb128 0x2e
 8132 0146 01       		.byte	0x1
 8133 0147 3F       		.uleb128 0x3f
 8134 0148 0C       		.uleb128 0xc
 8135 0149 03       		.uleb128 0x3
 8136 014a 0E       		.uleb128 0xe
 8137 014b 3A       		.uleb128 0x3a
 8138 014c 0B       		.uleb128 0xb
 8139 014d 3B       		.uleb128 0x3b
 8140 014e 05       		.uleb128 0x5
 8141 014f 27       		.uleb128 0x27
 8142 0150 0C       		.uleb128 0xc
 8143 0151 11       		.uleb128 0x11
 8144 0152 01       		.uleb128 0x1
 8145 0153 12       		.uleb128 0x12
 8146 0154 01       		.uleb128 0x1
 8147 0155 40       		.uleb128 0x40
 8148 0156 06       		.uleb128 0x6
 8149 0157 9742     		.uleb128 0x2117
 8150 0159 0C       		.uleb128 0xc
 8151 015a 01       		.uleb128 0x1
 8152 015b 13       		.uleb128 0x13
 8153 015c 00       		.byte	0
 8154 015d 00       		.byte	0
 8155 015e 16       		.uleb128 0x16
 8156 015f 01       		.uleb128 0x1
 8157 0160 01       		.byte	0x1
 8158 0161 49       		.uleb128 0x49
 8159 0162 13       		.uleb128 0x13
 8160 0163 01       		.uleb128 0x1
 8161 0164 13       		.uleb128 0x13
 8162 0165 00       		.byte	0
 8163 0166 00       		.byte	0
 8164 0167 17       		.uleb128 0x17
 8165 0168 21       		.uleb128 0x21
 8166 0169 00       		.byte	0
 8167 016a 49       		.uleb128 0x49
 8168 016b 13       		.uleb128 0x13
 8169 016c 2F       		.uleb128 0x2f
 8170 016d 0B       		.uleb128 0xb
 8171 016e 00       		.byte	0
 8172 016f 00       		.byte	0
 8173 0170 18       		.uleb128 0x18
 8174 0171 2E       		.uleb128 0x2e
 8175 0172 01       		.byte	0x1
 8176 0173 3F       		.uleb128 0x3f
 8177 0174 0C       		.uleb128 0xc
 8178 0175 03       		.uleb128 0x3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 177


 8179 0176 0E       		.uleb128 0xe
 8180 0177 3A       		.uleb128 0x3a
 8181 0178 0B       		.uleb128 0xb
 8182 0179 3B       		.uleb128 0x3b
 8183 017a 05       		.uleb128 0x5
 8184 017b 27       		.uleb128 0x27
 8185 017c 0C       		.uleb128 0xc
 8186 017d 49       		.uleb128 0x49
 8187 017e 13       		.uleb128 0x13
 8188 017f 11       		.uleb128 0x11
 8189 0180 01       		.uleb128 0x1
 8190 0181 12       		.uleb128 0x12
 8191 0182 01       		.uleb128 0x1
 8192 0183 40       		.uleb128 0x40
 8193 0184 06       		.uleb128 0x6
 8194 0185 9742     		.uleb128 0x2117
 8195 0187 0C       		.uleb128 0xc
 8196 0188 01       		.uleb128 0x1
 8197 0189 13       		.uleb128 0x13
 8198 018a 00       		.byte	0
 8199 018b 00       		.byte	0
 8200 018c 19       		.uleb128 0x19
 8201 018d 2E       		.uleb128 0x2e
 8202 018e 00       		.byte	0
 8203 018f 3F       		.uleb128 0x3f
 8204 0190 0C       		.uleb128 0xc
 8205 0191 03       		.uleb128 0x3
 8206 0192 0E       		.uleb128 0xe
 8207 0193 3A       		.uleb128 0x3a
 8208 0194 0B       		.uleb128 0xb
 8209 0195 3B       		.uleb128 0x3b
 8210 0196 05       		.uleb128 0x5
 8211 0197 27       		.uleb128 0x27
 8212 0198 0C       		.uleb128 0xc
 8213 0199 49       		.uleb128 0x49
 8214 019a 13       		.uleb128 0x13
 8215 019b 11       		.uleb128 0x11
 8216 019c 01       		.uleb128 0x1
 8217 019d 12       		.uleb128 0x12
 8218 019e 01       		.uleb128 0x1
 8219 019f 40       		.uleb128 0x40
 8220 01a0 06       		.uleb128 0x6
 8221 01a1 9642     		.uleb128 0x2116
 8222 01a3 0C       		.uleb128 0xc
 8223 01a4 00       		.byte	0
 8224 01a5 00       		.byte	0
 8225 01a6 1A       		.uleb128 0x1a
 8226 01a7 34       		.uleb128 0x34
 8227 01a8 00       		.byte	0
 8228 01a9 03       		.uleb128 0x3
 8229 01aa 0E       		.uleb128 0xe
 8230 01ab 3A       		.uleb128 0x3a
 8231 01ac 0B       		.uleb128 0xb
 8232 01ad 3B       		.uleb128 0x3b
 8233 01ae 0B       		.uleb128 0xb
 8234 01af 49       		.uleb128 0x49
 8235 01b0 13       		.uleb128 0x13
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 178


 8236 01b1 3F       		.uleb128 0x3f
 8237 01b2 0C       		.uleb128 0xc
 8238 01b3 3C       		.uleb128 0x3c
 8239 01b4 0C       		.uleb128 0xc
 8240 01b5 00       		.byte	0
 8241 01b6 00       		.byte	0
 8242 01b7 1B       		.uleb128 0x1b
 8243 01b8 34       		.uleb128 0x34
 8244 01b9 00       		.byte	0
 8245 01ba 03       		.uleb128 0x3
 8246 01bb 0E       		.uleb128 0xe
 8247 01bc 3A       		.uleb128 0x3a
 8248 01bd 0B       		.uleb128 0xb
 8249 01be 3B       		.uleb128 0x3b
 8250 01bf 0B       		.uleb128 0xb
 8251 01c0 49       		.uleb128 0x49
 8252 01c1 13       		.uleb128 0x13
 8253 01c2 3F       		.uleb128 0x3f
 8254 01c3 0C       		.uleb128 0xc
 8255 01c4 02       		.uleb128 0x2
 8256 01c5 0A       		.uleb128 0xa
 8257 01c6 00       		.byte	0
 8258 01c7 00       		.byte	0
 8259 01c8 00       		.byte	0
 8260              		.section	.debug_loc,"",%progbits
 8261              	.Ldebug_loc0:
 8262              	.LLST0:
 8263 0000 00000000 		.4byte	.LFB0
 8264 0004 02000000 		.4byte	.LCFI0
 8265 0008 0200     		.2byte	0x2
 8266 000a 7D       		.byte	0x7d
 8267 000b 00       		.sleb128 0
 8268 000c 02000000 		.4byte	.LCFI0
 8269 0010 04000000 		.4byte	.LCFI1
 8270 0014 0200     		.2byte	0x2
 8271 0016 7D       		.byte	0x7d
 8272 0017 08       		.sleb128 8
 8273 0018 04000000 		.4byte	.LCFI1
 8274 001c 0E000000 		.4byte	.LFE0
 8275 0020 0200     		.2byte	0x2
 8276 0022 77       		.byte	0x77
 8277 0023 08       		.sleb128 8
 8278 0024 00000000 		.4byte	0
 8279 0028 00000000 		.4byte	0
 8280              	.LLST1:
 8281 002c 00000000 		.4byte	.LFB1
 8282 0030 02000000 		.4byte	.LCFI2
 8283 0034 0200     		.2byte	0x2
 8284 0036 7D       		.byte	0x7d
 8285 0037 00       		.sleb128 0
 8286 0038 02000000 		.4byte	.LCFI2
 8287 003c 04000000 		.4byte	.LCFI3
 8288 0040 0200     		.2byte	0x2
 8289 0042 7D       		.byte	0x7d
 8290 0043 08       		.sleb128 8
 8291 0044 04000000 		.4byte	.LCFI3
 8292 0048 26000000 		.4byte	.LFE1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 179


 8293 004c 0200     		.2byte	0x2
 8294 004e 77       		.byte	0x77
 8295 004f 08       		.sleb128 8
 8296 0050 00000000 		.4byte	0
 8297 0054 00000000 		.4byte	0
 8298              	.LLST2:
 8299 0058 00000000 		.4byte	.LFB2
 8300 005c 02000000 		.4byte	.LCFI4
 8301 0060 0200     		.2byte	0x2
 8302 0062 7D       		.byte	0x7d
 8303 0063 00       		.sleb128 0
 8304 0064 02000000 		.4byte	.LCFI4
 8305 0068 04000000 		.4byte	.LCFI5
 8306 006c 0200     		.2byte	0x2
 8307 006e 7D       		.byte	0x7d
 8308 006f 08       		.sleb128 8
 8309 0070 04000000 		.4byte	.LCFI5
 8310 0074 06000000 		.4byte	.LCFI6
 8311 0078 0200     		.2byte	0x2
 8312 007a 7D       		.byte	0x7d
 8313 007b 20       		.sleb128 32
 8314 007c 06000000 		.4byte	.LCFI6
 8315 0080 00010000 		.4byte	.LFE2
 8316 0084 0200     		.2byte	0x2
 8317 0086 77       		.byte	0x77
 8318 0087 20       		.sleb128 32
 8319 0088 00000000 		.4byte	0
 8320 008c 00000000 		.4byte	0
 8321              	.LLST3:
 8322 0090 00000000 		.4byte	.LFB3
 8323 0094 02000000 		.4byte	.LCFI7
 8324 0098 0200     		.2byte	0x2
 8325 009a 7D       		.byte	0x7d
 8326 009b 00       		.sleb128 0
 8327 009c 02000000 		.4byte	.LCFI7
 8328 00a0 04000000 		.4byte	.LCFI8
 8329 00a4 0200     		.2byte	0x2
 8330 00a6 7D       		.byte	0x7d
 8331 00a7 08       		.sleb128 8
 8332 00a8 04000000 		.4byte	.LCFI8
 8333 00ac 06000000 		.4byte	.LCFI9
 8334 00b0 0200     		.2byte	0x2
 8335 00b2 7D       		.byte	0x7d
 8336 00b3 28       		.sleb128 40
 8337 00b4 06000000 		.4byte	.LCFI9
 8338 00b8 0A010000 		.4byte	.LFE3
 8339 00bc 0200     		.2byte	0x2
 8340 00be 77       		.byte	0x77
 8341 00bf 28       		.sleb128 40
 8342 00c0 00000000 		.4byte	0
 8343 00c4 00000000 		.4byte	0
 8344              	.LLST4:
 8345 00c8 00000000 		.4byte	.LFB4
 8346 00cc 02000000 		.4byte	.LCFI10
 8347 00d0 0200     		.2byte	0x2
 8348 00d2 7D       		.byte	0x7d
 8349 00d3 00       		.sleb128 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 180


 8350 00d4 02000000 		.4byte	.LCFI10
 8351 00d8 04000000 		.4byte	.LCFI11
 8352 00dc 0200     		.2byte	0x2
 8353 00de 7D       		.byte	0x7d
 8354 00df 08       		.sleb128 8
 8355 00e0 04000000 		.4byte	.LCFI11
 8356 00e4 06000000 		.4byte	.LCFI12
 8357 00e8 0200     		.2byte	0x2
 8358 00ea 7D       		.byte	0x7d
 8359 00eb 18       		.sleb128 24
 8360 00ec 06000000 		.4byte	.LCFI12
 8361 00f0 3E000000 		.4byte	.LFE4
 8362 00f4 0200     		.2byte	0x2
 8363 00f6 77       		.byte	0x77
 8364 00f7 18       		.sleb128 24
 8365 00f8 00000000 		.4byte	0
 8366 00fc 00000000 		.4byte	0
 8367              	.LLST5:
 8368 0100 00000000 		.4byte	.LFB5
 8369 0104 02000000 		.4byte	.LCFI13
 8370 0108 0200     		.2byte	0x2
 8371 010a 7D       		.byte	0x7d
 8372 010b 00       		.sleb128 0
 8373 010c 02000000 		.4byte	.LCFI13
 8374 0110 04000000 		.4byte	.LCFI14
 8375 0114 0200     		.2byte	0x2
 8376 0116 7D       		.byte	0x7d
 8377 0117 08       		.sleb128 8
 8378 0118 04000000 		.4byte	.LCFI14
 8379 011c 06000000 		.4byte	.LCFI15
 8380 0120 0200     		.2byte	0x2
 8381 0122 7D       		.byte	0x7d
 8382 0123 18       		.sleb128 24
 8383 0124 06000000 		.4byte	.LCFI15
 8384 0128 3E000000 		.4byte	.LFE5
 8385 012c 0200     		.2byte	0x2
 8386 012e 77       		.byte	0x77
 8387 012f 18       		.sleb128 24
 8388 0130 00000000 		.4byte	0
 8389 0134 00000000 		.4byte	0
 8390              	.LLST6:
 8391 0138 00000000 		.4byte	.LFB6
 8392 013c 02000000 		.4byte	.LCFI16
 8393 0140 0200     		.2byte	0x2
 8394 0142 7D       		.byte	0x7d
 8395 0143 00       		.sleb128 0
 8396 0144 02000000 		.4byte	.LCFI16
 8397 0148 04000000 		.4byte	.LCFI17
 8398 014c 0200     		.2byte	0x2
 8399 014e 7D       		.byte	0x7d
 8400 014f 08       		.sleb128 8
 8401 0150 04000000 		.4byte	.LCFI17
 8402 0154 06000000 		.4byte	.LCFI18
 8403 0158 0200     		.2byte	0x2
 8404 015a 7D       		.byte	0x7d
 8405 015b 10       		.sleb128 16
 8406 015c 06000000 		.4byte	.LCFI18
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 181


 8407 0160 1E000000 		.4byte	.LFE6
 8408 0164 0200     		.2byte	0x2
 8409 0166 77       		.byte	0x77
 8410 0167 10       		.sleb128 16
 8411 0168 00000000 		.4byte	0
 8412 016c 00000000 		.4byte	0
 8413              	.LLST7:
 8414 0170 00000000 		.4byte	.LFB7
 8415 0174 02000000 		.4byte	.LCFI19
 8416 0178 0200     		.2byte	0x2
 8417 017a 7D       		.byte	0x7d
 8418 017b 00       		.sleb128 0
 8419 017c 02000000 		.4byte	.LCFI19
 8420 0180 04000000 		.4byte	.LCFI20
 8421 0184 0200     		.2byte	0x2
 8422 0186 7D       		.byte	0x7d
 8423 0187 08       		.sleb128 8
 8424 0188 04000000 		.4byte	.LCFI20
 8425 018c 06000000 		.4byte	.LCFI21
 8426 0190 0200     		.2byte	0x2
 8427 0192 7D       		.byte	0x7d
 8428 0193 10       		.sleb128 16
 8429 0194 06000000 		.4byte	.LCFI21
 8430 0198 1E000000 		.4byte	.LFE7
 8431 019c 0200     		.2byte	0x2
 8432 019e 77       		.byte	0x77
 8433 019f 10       		.sleb128 16
 8434 01a0 00000000 		.4byte	0
 8435 01a4 00000000 		.4byte	0
 8436              	.LLST8:
 8437 01a8 00000000 		.4byte	.LFB8
 8438 01ac 02000000 		.4byte	.LCFI22
 8439 01b0 0200     		.2byte	0x2
 8440 01b2 7D       		.byte	0x7d
 8441 01b3 00       		.sleb128 0
 8442 01b4 02000000 		.4byte	.LCFI22
 8443 01b8 04000000 		.4byte	.LCFI23
 8444 01bc 0200     		.2byte	0x2
 8445 01be 7D       		.byte	0x7d
 8446 01bf 08       		.sleb128 8
 8447 01c0 04000000 		.4byte	.LCFI23
 8448 01c4 06000000 		.4byte	.LCFI24
 8449 01c8 0200     		.2byte	0x2
 8450 01ca 7D       		.byte	0x7d
 8451 01cb 10       		.sleb128 16
 8452 01cc 06000000 		.4byte	.LCFI24
 8453 01d0 22000000 		.4byte	.LFE8
 8454 01d4 0200     		.2byte	0x2
 8455 01d6 77       		.byte	0x77
 8456 01d7 10       		.sleb128 16
 8457 01d8 00000000 		.4byte	0
 8458 01dc 00000000 		.4byte	0
 8459              	.LLST9:
 8460 01e0 00000000 		.4byte	.LFB9
 8461 01e4 02000000 		.4byte	.LCFI25
 8462 01e8 0200     		.2byte	0x2
 8463 01ea 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 182


 8464 01eb 00       		.sleb128 0
 8465 01ec 02000000 		.4byte	.LCFI25
 8466 01f0 04000000 		.4byte	.LCFI26
 8467 01f4 0200     		.2byte	0x2
 8468 01f6 7D       		.byte	0x7d
 8469 01f7 08       		.sleb128 8
 8470 01f8 04000000 		.4byte	.LCFI26
 8471 01fc 06000000 		.4byte	.LCFI27
 8472 0200 0200     		.2byte	0x2
 8473 0202 7D       		.byte	0x7d
 8474 0203 10       		.sleb128 16
 8475 0204 06000000 		.4byte	.LCFI27
 8476 0208 28000000 		.4byte	.LFE9
 8477 020c 0200     		.2byte	0x2
 8478 020e 77       		.byte	0x77
 8479 020f 10       		.sleb128 16
 8480 0210 00000000 		.4byte	0
 8481 0214 00000000 		.4byte	0
 8482              	.LLST10:
 8483 0218 00000000 		.4byte	.LFB10
 8484 021c 02000000 		.4byte	.LCFI28
 8485 0220 0200     		.2byte	0x2
 8486 0222 7D       		.byte	0x7d
 8487 0223 00       		.sleb128 0
 8488 0224 02000000 		.4byte	.LCFI28
 8489 0228 04000000 		.4byte	.LCFI29
 8490 022c 0200     		.2byte	0x2
 8491 022e 7D       		.byte	0x7d
 8492 022f 08       		.sleb128 8
 8493 0230 04000000 		.4byte	.LCFI29
 8494 0234 06000000 		.4byte	.LCFI30
 8495 0238 0200     		.2byte	0x2
 8496 023a 7D       		.byte	0x7d
 8497 023b 10       		.sleb128 16
 8498 023c 06000000 		.4byte	.LCFI30
 8499 0240 22000000 		.4byte	.LFE10
 8500 0244 0200     		.2byte	0x2
 8501 0246 77       		.byte	0x77
 8502 0247 10       		.sleb128 16
 8503 0248 00000000 		.4byte	0
 8504 024c 00000000 		.4byte	0
 8505              	.LLST11:
 8506 0250 00000000 		.4byte	.LFB11
 8507 0254 02000000 		.4byte	.LCFI31
 8508 0258 0200     		.2byte	0x2
 8509 025a 7D       		.byte	0x7d
 8510 025b 00       		.sleb128 0
 8511 025c 02000000 		.4byte	.LCFI31
 8512 0260 04000000 		.4byte	.LCFI32
 8513 0264 0200     		.2byte	0x2
 8514 0266 7D       		.byte	0x7d
 8515 0267 08       		.sleb128 8
 8516 0268 04000000 		.4byte	.LCFI32
 8517 026c 06000000 		.4byte	.LCFI33
 8518 0270 0200     		.2byte	0x2
 8519 0272 7D       		.byte	0x7d
 8520 0273 10       		.sleb128 16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 183


 8521 0274 06000000 		.4byte	.LCFI33
 8522 0278 28000000 		.4byte	.LFE11
 8523 027c 0200     		.2byte	0x2
 8524 027e 77       		.byte	0x77
 8525 027f 10       		.sleb128 16
 8526 0280 00000000 		.4byte	0
 8527 0284 00000000 		.4byte	0
 8528              	.LLST12:
 8529 0288 00000000 		.4byte	.LFB12
 8530 028c 02000000 		.4byte	.LCFI34
 8531 0290 0200     		.2byte	0x2
 8532 0292 7D       		.byte	0x7d
 8533 0293 00       		.sleb128 0
 8534 0294 02000000 		.4byte	.LCFI34
 8535 0298 04000000 		.4byte	.LCFI35
 8536 029c 0200     		.2byte	0x2
 8537 029e 7D       		.byte	0x7d
 8538 029f 08       		.sleb128 8
 8539 02a0 04000000 		.4byte	.LCFI35
 8540 02a4 06000000 		.4byte	.LCFI36
 8541 02a8 0200     		.2byte	0x2
 8542 02aa 7D       		.byte	0x7d
 8543 02ab 10       		.sleb128 16
 8544 02ac 06000000 		.4byte	.LCFI36
 8545 02b0 22000000 		.4byte	.LFE12
 8546 02b4 0200     		.2byte	0x2
 8547 02b6 77       		.byte	0x77
 8548 02b7 10       		.sleb128 16
 8549 02b8 00000000 		.4byte	0
 8550 02bc 00000000 		.4byte	0
 8551              	.LLST13:
 8552 02c0 00000000 		.4byte	.LFB13
 8553 02c4 02000000 		.4byte	.LCFI37
 8554 02c8 0200     		.2byte	0x2
 8555 02ca 7D       		.byte	0x7d
 8556 02cb 00       		.sleb128 0
 8557 02cc 02000000 		.4byte	.LCFI37
 8558 02d0 04000000 		.4byte	.LCFI38
 8559 02d4 0200     		.2byte	0x2
 8560 02d6 7D       		.byte	0x7d
 8561 02d7 08       		.sleb128 8
 8562 02d8 04000000 		.4byte	.LCFI38
 8563 02dc 06000000 		.4byte	.LCFI39
 8564 02e0 0200     		.2byte	0x2
 8565 02e2 7D       		.byte	0x7d
 8566 02e3 10       		.sleb128 16
 8567 02e4 06000000 		.4byte	.LCFI39
 8568 02e8 28000000 		.4byte	.LFE13
 8569 02ec 0200     		.2byte	0x2
 8570 02ee 77       		.byte	0x77
 8571 02ef 10       		.sleb128 16
 8572 02f0 00000000 		.4byte	0
 8573 02f4 00000000 		.4byte	0
 8574              	.LLST14:
 8575 02f8 00000000 		.4byte	.LFB14
 8576 02fc 02000000 		.4byte	.LCFI40
 8577 0300 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 184


 8578 0302 7D       		.byte	0x7d
 8579 0303 00       		.sleb128 0
 8580 0304 02000000 		.4byte	.LCFI40
 8581 0308 04000000 		.4byte	.LCFI41
 8582 030c 0200     		.2byte	0x2
 8583 030e 7D       		.byte	0x7d
 8584 030f 08       		.sleb128 8
 8585 0310 04000000 		.4byte	.LCFI41
 8586 0314 06000000 		.4byte	.LCFI42
 8587 0318 0200     		.2byte	0x2
 8588 031a 7D       		.byte	0x7d
 8589 031b 10       		.sleb128 16
 8590 031c 06000000 		.4byte	.LCFI42
 8591 0320 24000000 		.4byte	.LFE14
 8592 0324 0200     		.2byte	0x2
 8593 0326 77       		.byte	0x77
 8594 0327 10       		.sleb128 16
 8595 0328 00000000 		.4byte	0
 8596 032c 00000000 		.4byte	0
 8597              	.LLST15:
 8598 0330 00000000 		.4byte	.LFB15
 8599 0334 02000000 		.4byte	.LCFI43
 8600 0338 0200     		.2byte	0x2
 8601 033a 7D       		.byte	0x7d
 8602 033b 00       		.sleb128 0
 8603 033c 02000000 		.4byte	.LCFI43
 8604 0340 04000000 		.4byte	.LCFI44
 8605 0344 0200     		.2byte	0x2
 8606 0346 7D       		.byte	0x7d
 8607 0347 08       		.sleb128 8
 8608 0348 04000000 		.4byte	.LCFI44
 8609 034c 06000000 		.4byte	.LCFI45
 8610 0350 0200     		.2byte	0x2
 8611 0352 7D       		.byte	0x7d
 8612 0353 10       		.sleb128 16
 8613 0354 06000000 		.4byte	.LCFI45
 8614 0358 24000000 		.4byte	.LFE15
 8615 035c 0200     		.2byte	0x2
 8616 035e 77       		.byte	0x77
 8617 035f 10       		.sleb128 16
 8618 0360 00000000 		.4byte	0
 8619 0364 00000000 		.4byte	0
 8620              	.LLST16:
 8621 0368 00000000 		.4byte	.LFB16
 8622 036c 02000000 		.4byte	.LCFI46
 8623 0370 0200     		.2byte	0x2
 8624 0372 7D       		.byte	0x7d
 8625 0373 00       		.sleb128 0
 8626 0374 02000000 		.4byte	.LCFI46
 8627 0378 04000000 		.4byte	.LCFI47
 8628 037c 0200     		.2byte	0x2
 8629 037e 7D       		.byte	0x7d
 8630 037f 08       		.sleb128 8
 8631 0380 04000000 		.4byte	.LCFI47
 8632 0384 06000000 		.4byte	.LCFI48
 8633 0388 0200     		.2byte	0x2
 8634 038a 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 185


 8635 038b 10       		.sleb128 16
 8636 038c 06000000 		.4byte	.LCFI48
 8637 0390 24000000 		.4byte	.LFE16
 8638 0394 0200     		.2byte	0x2
 8639 0396 77       		.byte	0x77
 8640 0397 10       		.sleb128 16
 8641 0398 00000000 		.4byte	0
 8642 039c 00000000 		.4byte	0
 8643              	.LLST17:
 8644 03a0 00000000 		.4byte	.LFB17
 8645 03a4 02000000 		.4byte	.LCFI49
 8646 03a8 0200     		.2byte	0x2
 8647 03aa 7D       		.byte	0x7d
 8648 03ab 00       		.sleb128 0
 8649 03ac 02000000 		.4byte	.LCFI49
 8650 03b0 04000000 		.4byte	.LCFI50
 8651 03b4 0200     		.2byte	0x2
 8652 03b6 7D       		.byte	0x7d
 8653 03b7 08       		.sleb128 8
 8654 03b8 04000000 		.4byte	.LCFI50
 8655 03bc 06000000 		.4byte	.LCFI51
 8656 03c0 0200     		.2byte	0x2
 8657 03c2 7D       		.byte	0x7d
 8658 03c3 10       		.sleb128 16
 8659 03c4 06000000 		.4byte	.LCFI51
 8660 03c8 38000000 		.4byte	.LFE17
 8661 03cc 0200     		.2byte	0x2
 8662 03ce 77       		.byte	0x77
 8663 03cf 10       		.sleb128 16
 8664 03d0 00000000 		.4byte	0
 8665 03d4 00000000 		.4byte	0
 8666              	.LLST18:
 8667 03d8 00000000 		.4byte	.LFB18
 8668 03dc 02000000 		.4byte	.LCFI52
 8669 03e0 0200     		.2byte	0x2
 8670 03e2 7D       		.byte	0x7d
 8671 03e3 00       		.sleb128 0
 8672 03e4 02000000 		.4byte	.LCFI52
 8673 03e8 04000000 		.4byte	.LCFI53
 8674 03ec 0200     		.2byte	0x2
 8675 03ee 7D       		.byte	0x7d
 8676 03ef 08       		.sleb128 8
 8677 03f0 04000000 		.4byte	.LCFI53
 8678 03f4 06000000 		.4byte	.LCFI54
 8679 03f8 0200     		.2byte	0x2
 8680 03fa 7D       		.byte	0x7d
 8681 03fb 18       		.sleb128 24
 8682 03fc 06000000 		.4byte	.LCFI54
 8683 0400 3E000000 		.4byte	.LFE18
 8684 0404 0200     		.2byte	0x2
 8685 0406 77       		.byte	0x77
 8686 0407 18       		.sleb128 24
 8687 0408 00000000 		.4byte	0
 8688 040c 00000000 		.4byte	0
 8689              	.LLST19:
 8690 0410 00000000 		.4byte	.LFB19
 8691 0414 02000000 		.4byte	.LCFI55
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 186


 8692 0418 0200     		.2byte	0x2
 8693 041a 7D       		.byte	0x7d
 8694 041b 00       		.sleb128 0
 8695 041c 02000000 		.4byte	.LCFI55
 8696 0420 04000000 		.4byte	.LCFI56
 8697 0424 0200     		.2byte	0x2
 8698 0426 7D       		.byte	0x7d
 8699 0427 08       		.sleb128 8
 8700 0428 04000000 		.4byte	.LCFI56
 8701 042c 06000000 		.4byte	.LCFI57
 8702 0430 0200     		.2byte	0x2
 8703 0432 7D       		.byte	0x7d
 8704 0433 10       		.sleb128 16
 8705 0434 06000000 		.4byte	.LCFI57
 8706 0438 38000000 		.4byte	.LFE19
 8707 043c 0200     		.2byte	0x2
 8708 043e 77       		.byte	0x77
 8709 043f 10       		.sleb128 16
 8710 0440 00000000 		.4byte	0
 8711 0444 00000000 		.4byte	0
 8712              	.LLST20:
 8713 0448 00000000 		.4byte	.LFB20
 8714 044c 02000000 		.4byte	.LCFI58
 8715 0450 0200     		.2byte	0x2
 8716 0452 7D       		.byte	0x7d
 8717 0453 00       		.sleb128 0
 8718 0454 02000000 		.4byte	.LCFI58
 8719 0458 04000000 		.4byte	.LCFI59
 8720 045c 0200     		.2byte	0x2
 8721 045e 7D       		.byte	0x7d
 8722 045f 08       		.sleb128 8
 8723 0460 04000000 		.4byte	.LCFI59
 8724 0464 06000000 		.4byte	.LCFI60
 8725 0468 0200     		.2byte	0x2
 8726 046a 7D       		.byte	0x7d
 8727 046b 18       		.sleb128 24
 8728 046c 06000000 		.4byte	.LCFI60
 8729 0470 3E000000 		.4byte	.LFE20
 8730 0474 0200     		.2byte	0x2
 8731 0476 77       		.byte	0x77
 8732 0477 18       		.sleb128 24
 8733 0478 00000000 		.4byte	0
 8734 047c 00000000 		.4byte	0
 8735              	.LLST21:
 8736 0480 00000000 		.4byte	.LFB21
 8737 0484 02000000 		.4byte	.LCFI61
 8738 0488 0200     		.2byte	0x2
 8739 048a 7D       		.byte	0x7d
 8740 048b 00       		.sleb128 0
 8741 048c 02000000 		.4byte	.LCFI61
 8742 0490 04000000 		.4byte	.LCFI62
 8743 0494 0200     		.2byte	0x2
 8744 0496 7D       		.byte	0x7d
 8745 0497 08       		.sleb128 8
 8746 0498 04000000 		.4byte	.LCFI62
 8747 049c 06000000 		.4byte	.LCFI63
 8748 04a0 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 187


 8749 04a2 7D       		.byte	0x7d
 8750 04a3 10       		.sleb128 16
 8751 04a4 06000000 		.4byte	.LCFI63
 8752 04a8 34000000 		.4byte	.LFE21
 8753 04ac 0200     		.2byte	0x2
 8754 04ae 77       		.byte	0x77
 8755 04af 10       		.sleb128 16
 8756 04b0 00000000 		.4byte	0
 8757 04b4 00000000 		.4byte	0
 8758              	.LLST22:
 8759 04b8 00000000 		.4byte	.LFB22
 8760 04bc 02000000 		.4byte	.LCFI64
 8761 04c0 0200     		.2byte	0x2
 8762 04c2 7D       		.byte	0x7d
 8763 04c3 00       		.sleb128 0
 8764 04c4 02000000 		.4byte	.LCFI64
 8765 04c8 04000000 		.4byte	.LCFI65
 8766 04cc 0200     		.2byte	0x2
 8767 04ce 7D       		.byte	0x7d
 8768 04cf 08       		.sleb128 8
 8769 04d0 04000000 		.4byte	.LCFI65
 8770 04d4 06000000 		.4byte	.LCFI66
 8771 04d8 0200     		.2byte	0x2
 8772 04da 7D       		.byte	0x7d
 8773 04db 10       		.sleb128 16
 8774 04dc 06000000 		.4byte	.LCFI66
 8775 04e0 38000000 		.4byte	.LFE22
 8776 04e4 0200     		.2byte	0x2
 8777 04e6 77       		.byte	0x77
 8778 04e7 10       		.sleb128 16
 8779 04e8 00000000 		.4byte	0
 8780 04ec 00000000 		.4byte	0
 8781              	.LLST23:
 8782 04f0 00000000 		.4byte	.LFB23
 8783 04f4 02000000 		.4byte	.LCFI67
 8784 04f8 0200     		.2byte	0x2
 8785 04fa 7D       		.byte	0x7d
 8786 04fb 00       		.sleb128 0
 8787 04fc 02000000 		.4byte	.LCFI67
 8788 0500 04000000 		.4byte	.LCFI68
 8789 0504 0200     		.2byte	0x2
 8790 0506 7D       		.byte	0x7d
 8791 0507 08       		.sleb128 8
 8792 0508 04000000 		.4byte	.LCFI68
 8793 050c 06000000 		.4byte	.LCFI69
 8794 0510 0200     		.2byte	0x2
 8795 0512 7D       		.byte	0x7d
 8796 0513 18       		.sleb128 24
 8797 0514 06000000 		.4byte	.LCFI69
 8798 0518 3E000000 		.4byte	.LFE23
 8799 051c 0200     		.2byte	0x2
 8800 051e 77       		.byte	0x77
 8801 051f 18       		.sleb128 24
 8802 0520 00000000 		.4byte	0
 8803 0524 00000000 		.4byte	0
 8804              	.LLST24:
 8805 0528 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 188


 8806 052c 02000000 		.4byte	.LCFI70
 8807 0530 0200     		.2byte	0x2
 8808 0532 7D       		.byte	0x7d
 8809 0533 00       		.sleb128 0
 8810 0534 02000000 		.4byte	.LCFI70
 8811 0538 04000000 		.4byte	.LCFI71
 8812 053c 0200     		.2byte	0x2
 8813 053e 7D       		.byte	0x7d
 8814 053f 08       		.sleb128 8
 8815 0540 04000000 		.4byte	.LCFI71
 8816 0544 06000000 		.4byte	.LCFI72
 8817 0548 0200     		.2byte	0x2
 8818 054a 7D       		.byte	0x7d
 8819 054b 10       		.sleb128 16
 8820 054c 06000000 		.4byte	.LCFI72
 8821 0550 38000000 		.4byte	.LFE24
 8822 0554 0200     		.2byte	0x2
 8823 0556 77       		.byte	0x77
 8824 0557 10       		.sleb128 16
 8825 0558 00000000 		.4byte	0
 8826 055c 00000000 		.4byte	0
 8827              	.LLST25:
 8828 0560 00000000 		.4byte	.LFB25
 8829 0564 02000000 		.4byte	.LCFI73
 8830 0568 0200     		.2byte	0x2
 8831 056a 7D       		.byte	0x7d
 8832 056b 00       		.sleb128 0
 8833 056c 02000000 		.4byte	.LCFI73
 8834 0570 04000000 		.4byte	.LCFI74
 8835 0574 0200     		.2byte	0x2
 8836 0576 7D       		.byte	0x7d
 8837 0577 08       		.sleb128 8
 8838 0578 04000000 		.4byte	.LCFI74
 8839 057c 06000000 		.4byte	.LCFI75
 8840 0580 0200     		.2byte	0x2
 8841 0582 7D       		.byte	0x7d
 8842 0583 18       		.sleb128 24
 8843 0584 06000000 		.4byte	.LCFI75
 8844 0588 3E000000 		.4byte	.LFE25
 8845 058c 0200     		.2byte	0x2
 8846 058e 77       		.byte	0x77
 8847 058f 18       		.sleb128 24
 8848 0590 00000000 		.4byte	0
 8849 0594 00000000 		.4byte	0
 8850              	.LLST26:
 8851 0598 00000000 		.4byte	.LFB26
 8852 059c 02000000 		.4byte	.LCFI76
 8853 05a0 0200     		.2byte	0x2
 8854 05a2 7D       		.byte	0x7d
 8855 05a3 00       		.sleb128 0
 8856 05a4 02000000 		.4byte	.LCFI76
 8857 05a8 04000000 		.4byte	.LCFI77
 8858 05ac 0200     		.2byte	0x2
 8859 05ae 7D       		.byte	0x7d
 8860 05af 08       		.sleb128 8
 8861 05b0 04000000 		.4byte	.LCFI77
 8862 05b4 06000000 		.4byte	.LCFI78
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 189


 8863 05b8 0200     		.2byte	0x2
 8864 05ba 7D       		.byte	0x7d
 8865 05bb 18       		.sleb128 24
 8866 05bc 06000000 		.4byte	.LCFI78
 8867 05c0 3E000000 		.4byte	.LFE26
 8868 05c4 0200     		.2byte	0x2
 8869 05c6 77       		.byte	0x77
 8870 05c7 18       		.sleb128 24
 8871 05c8 00000000 		.4byte	0
 8872 05cc 00000000 		.4byte	0
 8873              	.LLST27:
 8874 05d0 00000000 		.4byte	.LFB27
 8875 05d4 02000000 		.4byte	.LCFI79
 8876 05d8 0200     		.2byte	0x2
 8877 05da 7D       		.byte	0x7d
 8878 05db 00       		.sleb128 0
 8879 05dc 02000000 		.4byte	.LCFI79
 8880 05e0 04000000 		.4byte	.LCFI80
 8881 05e4 0200     		.2byte	0x2
 8882 05e6 7D       		.byte	0x7d
 8883 05e7 08       		.sleb128 8
 8884 05e8 04000000 		.4byte	.LCFI80
 8885 05ec 06000000 		.4byte	.LCFI81
 8886 05f0 0200     		.2byte	0x2
 8887 05f2 7D       		.byte	0x7d
 8888 05f3 10       		.sleb128 16
 8889 05f4 06000000 		.4byte	.LCFI81
 8890 05f8 32000000 		.4byte	.LFE27
 8891 05fc 0200     		.2byte	0x2
 8892 05fe 77       		.byte	0x77
 8893 05ff 10       		.sleb128 16
 8894 0600 00000000 		.4byte	0
 8895 0604 00000000 		.4byte	0
 8896              	.LLST28:
 8897 0608 00000000 		.4byte	.LFB28
 8898 060c 02000000 		.4byte	.LCFI82
 8899 0610 0200     		.2byte	0x2
 8900 0612 7D       		.byte	0x7d
 8901 0613 00       		.sleb128 0
 8902 0614 02000000 		.4byte	.LCFI82
 8903 0618 04000000 		.4byte	.LCFI83
 8904 061c 0200     		.2byte	0x2
 8905 061e 7D       		.byte	0x7d
 8906 061f 08       		.sleb128 8
 8907 0620 04000000 		.4byte	.LCFI83
 8908 0624 06000000 		.4byte	.LCFI84
 8909 0628 0200     		.2byte	0x2
 8910 062a 7D       		.byte	0x7d
 8911 062b 10       		.sleb128 16
 8912 062c 06000000 		.4byte	.LCFI84
 8913 0630 32000000 		.4byte	.LFE28
 8914 0634 0200     		.2byte	0x2
 8915 0636 77       		.byte	0x77
 8916 0637 10       		.sleb128 16
 8917 0638 00000000 		.4byte	0
 8918 063c 00000000 		.4byte	0
 8919              	.LLST29:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 190


 8920 0640 00000000 		.4byte	.LFB29
 8921 0644 02000000 		.4byte	.LCFI85
 8922 0648 0200     		.2byte	0x2
 8923 064a 7D       		.byte	0x7d
 8924 064b 00       		.sleb128 0
 8925 064c 02000000 		.4byte	.LCFI85
 8926 0650 04000000 		.4byte	.LCFI86
 8927 0654 0200     		.2byte	0x2
 8928 0656 7D       		.byte	0x7d
 8929 0657 08       		.sleb128 8
 8930 0658 04000000 		.4byte	.LCFI86
 8931 065c 06000000 		.4byte	.LCFI87
 8932 0660 0200     		.2byte	0x2
 8933 0662 7D       		.byte	0x7d
 8934 0663 10       		.sleb128 16
 8935 0664 06000000 		.4byte	.LCFI87
 8936 0668 34000000 		.4byte	.LFE29
 8937 066c 0200     		.2byte	0x2
 8938 066e 77       		.byte	0x77
 8939 066f 10       		.sleb128 16
 8940 0670 00000000 		.4byte	0
 8941 0674 00000000 		.4byte	0
 8942              	.LLST30:
 8943 0678 00000000 		.4byte	.LFB30
 8944 067c 02000000 		.4byte	.LCFI88
 8945 0680 0200     		.2byte	0x2
 8946 0682 7D       		.byte	0x7d
 8947 0683 00       		.sleb128 0
 8948 0684 02000000 		.4byte	.LCFI88
 8949 0688 04000000 		.4byte	.LCFI89
 8950 068c 0200     		.2byte	0x2
 8951 068e 7D       		.byte	0x7d
 8952 068f 08       		.sleb128 8
 8953 0690 04000000 		.4byte	.LCFI89
 8954 0694 06000000 		.4byte	.LCFI90
 8955 0698 0200     		.2byte	0x2
 8956 069a 7D       		.byte	0x7d
 8957 069b 10       		.sleb128 16
 8958 069c 06000000 		.4byte	.LCFI90
 8959 06a0 32000000 		.4byte	.LFE30
 8960 06a4 0200     		.2byte	0x2
 8961 06a6 77       		.byte	0x77
 8962 06a7 10       		.sleb128 16
 8963 06a8 00000000 		.4byte	0
 8964 06ac 00000000 		.4byte	0
 8965              	.LLST31:
 8966 06b0 00000000 		.4byte	.LFB31
 8967 06b4 02000000 		.4byte	.LCFI91
 8968 06b8 0200     		.2byte	0x2
 8969 06ba 7D       		.byte	0x7d
 8970 06bb 00       		.sleb128 0
 8971 06bc 02000000 		.4byte	.LCFI91
 8972 06c0 04000000 		.4byte	.LCFI92
 8973 06c4 0200     		.2byte	0x2
 8974 06c6 7D       		.byte	0x7d
 8975 06c7 08       		.sleb128 8
 8976 06c8 04000000 		.4byte	.LCFI92
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 191


 8977 06cc 06000000 		.4byte	.LCFI93
 8978 06d0 0200     		.2byte	0x2
 8979 06d2 7D       		.byte	0x7d
 8980 06d3 10       		.sleb128 16
 8981 06d4 06000000 		.4byte	.LCFI93
 8982 06d8 2E000000 		.4byte	.LFE31
 8983 06dc 0200     		.2byte	0x2
 8984 06de 77       		.byte	0x77
 8985 06df 10       		.sleb128 16
 8986 06e0 00000000 		.4byte	0
 8987 06e4 00000000 		.4byte	0
 8988              	.LLST32:
 8989 06e8 00000000 		.4byte	.LFB32
 8990 06ec 02000000 		.4byte	.LCFI94
 8991 06f0 0200     		.2byte	0x2
 8992 06f2 7D       		.byte	0x7d
 8993 06f3 00       		.sleb128 0
 8994 06f4 02000000 		.4byte	.LCFI94
 8995 06f8 04000000 		.4byte	.LCFI95
 8996 06fc 0200     		.2byte	0x2
 8997 06fe 7D       		.byte	0x7d
 8998 06ff 08       		.sleb128 8
 8999 0700 04000000 		.4byte	.LCFI95
 9000 0704 06000000 		.4byte	.LCFI96
 9001 0708 0200     		.2byte	0x2
 9002 070a 7D       		.byte	0x7d
 9003 070b 10       		.sleb128 16
 9004 070c 06000000 		.4byte	.LCFI96
 9005 0710 32000000 		.4byte	.LFE32
 9006 0714 0200     		.2byte	0x2
 9007 0716 77       		.byte	0x77
 9008 0717 10       		.sleb128 16
 9009 0718 00000000 		.4byte	0
 9010 071c 00000000 		.4byte	0
 9011              	.LLST33:
 9012 0720 00000000 		.4byte	.LFB33
 9013 0724 02000000 		.4byte	.LCFI97
 9014 0728 0200     		.2byte	0x2
 9015 072a 7D       		.byte	0x7d
 9016 072b 00       		.sleb128 0
 9017 072c 02000000 		.4byte	.LCFI97
 9018 0730 04000000 		.4byte	.LCFI98
 9019 0734 0200     		.2byte	0x2
 9020 0736 7D       		.byte	0x7d
 9021 0737 08       		.sleb128 8
 9022 0738 04000000 		.4byte	.LCFI98
 9023 073c 06000000 		.4byte	.LCFI99
 9024 0740 0200     		.2byte	0x2
 9025 0742 7D       		.byte	0x7d
 9026 0743 10       		.sleb128 16
 9027 0744 06000000 		.4byte	.LCFI99
 9028 0748 2E000000 		.4byte	.LFE33
 9029 074c 0200     		.2byte	0x2
 9030 074e 77       		.byte	0x77
 9031 074f 10       		.sleb128 16
 9032 0750 00000000 		.4byte	0
 9033 0754 00000000 		.4byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 192


 9034              	.LLST34:
 9035 0758 00000000 		.4byte	.LFB34
 9036 075c 02000000 		.4byte	.LCFI100
 9037 0760 0200     		.2byte	0x2
 9038 0762 7D       		.byte	0x7d
 9039 0763 00       		.sleb128 0
 9040 0764 02000000 		.4byte	.LCFI100
 9041 0768 04000000 		.4byte	.LCFI101
 9042 076c 0200     		.2byte	0x2
 9043 076e 7D       		.byte	0x7d
 9044 076f 08       		.sleb128 8
 9045 0770 04000000 		.4byte	.LCFI101
 9046 0774 06000000 		.4byte	.LCFI102
 9047 0778 0200     		.2byte	0x2
 9048 077a 7D       		.byte	0x7d
 9049 077b 10       		.sleb128 16
 9050 077c 06000000 		.4byte	.LCFI102
 9051 0780 2E000000 		.4byte	.LFE34
 9052 0784 0200     		.2byte	0x2
 9053 0786 77       		.byte	0x77
 9054 0787 10       		.sleb128 16
 9055 0788 00000000 		.4byte	0
 9056 078c 00000000 		.4byte	0
 9057              	.LLST35:
 9058 0790 00000000 		.4byte	.LFB35
 9059 0794 02000000 		.4byte	.LCFI103
 9060 0798 0200     		.2byte	0x2
 9061 079a 7D       		.byte	0x7d
 9062 079b 00       		.sleb128 0
 9063 079c 02000000 		.4byte	.LCFI103
 9064 07a0 04000000 		.4byte	.LCFI104
 9065 07a4 0200     		.2byte	0x2
 9066 07a6 7D       		.byte	0x7d
 9067 07a7 08       		.sleb128 8
 9068 07a8 04000000 		.4byte	.LCFI104
 9069 07ac 06000000 		.4byte	.LCFI105
 9070 07b0 0200     		.2byte	0x2
 9071 07b2 7D       		.byte	0x7d
 9072 07b3 10       		.sleb128 16
 9073 07b4 06000000 		.4byte	.LCFI105
 9074 07b8 32000000 		.4byte	.LFE35
 9075 07bc 0200     		.2byte	0x2
 9076 07be 77       		.byte	0x77
 9077 07bf 10       		.sleb128 16
 9078 07c0 00000000 		.4byte	0
 9079 07c4 00000000 		.4byte	0
 9080              	.LLST36:
 9081 07c8 00000000 		.4byte	.LFB36
 9082 07cc 02000000 		.4byte	.LCFI106
 9083 07d0 0200     		.2byte	0x2
 9084 07d2 7D       		.byte	0x7d
 9085 07d3 00       		.sleb128 0
 9086 07d4 02000000 		.4byte	.LCFI106
 9087 07d8 04000000 		.4byte	.LCFI107
 9088 07dc 0200     		.2byte	0x2
 9089 07de 7D       		.byte	0x7d
 9090 07df 08       		.sleb128 8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 193


 9091 07e0 04000000 		.4byte	.LCFI107
 9092 07e4 06000000 		.4byte	.LCFI108
 9093 07e8 0200     		.2byte	0x2
 9094 07ea 7D       		.byte	0x7d
 9095 07eb 10       		.sleb128 16
 9096 07ec 06000000 		.4byte	.LCFI108
 9097 07f0 2E000000 		.4byte	.LFE36
 9098 07f4 0200     		.2byte	0x2
 9099 07f6 77       		.byte	0x77
 9100 07f7 10       		.sleb128 16
 9101 07f8 00000000 		.4byte	0
 9102 07fc 00000000 		.4byte	0
 9103              	.LLST37:
 9104 0800 00000000 		.4byte	.LFB37
 9105 0804 02000000 		.4byte	.LCFI109
 9106 0808 0200     		.2byte	0x2
 9107 080a 7D       		.byte	0x7d
 9108 080b 00       		.sleb128 0
 9109 080c 02000000 		.4byte	.LCFI109
 9110 0810 04000000 		.4byte	.LCFI110
 9111 0814 0200     		.2byte	0x2
 9112 0816 7D       		.byte	0x7d
 9113 0817 04       		.sleb128 4
 9114 0818 04000000 		.4byte	.LCFI110
 9115 081c 06000000 		.4byte	.LCFI111
 9116 0820 0200     		.2byte	0x2
 9117 0822 7D       		.byte	0x7d
 9118 0823 10       		.sleb128 16
 9119 0824 06000000 		.4byte	.LCFI111
 9120 0828 18000000 		.4byte	.LFE37
 9121 082c 0200     		.2byte	0x2
 9122 082e 77       		.byte	0x77
 9123 082f 10       		.sleb128 16
 9124 0830 00000000 		.4byte	0
 9125 0834 00000000 		.4byte	0
 9126              	.LLST38:
 9127 0838 00000000 		.4byte	.LFB38
 9128 083c 02000000 		.4byte	.LCFI112
 9129 0840 0200     		.2byte	0x2
 9130 0842 7D       		.byte	0x7d
 9131 0843 00       		.sleb128 0
 9132 0844 02000000 		.4byte	.LCFI112
 9133 0848 04000000 		.4byte	.LCFI113
 9134 084c 0200     		.2byte	0x2
 9135 084e 7D       		.byte	0x7d
 9136 084f 08       		.sleb128 8
 9137 0850 04000000 		.4byte	.LCFI113
 9138 0854 06000000 		.4byte	.LCFI114
 9139 0858 0200     		.2byte	0x2
 9140 085a 7D       		.byte	0x7d
 9141 085b 10       		.sleb128 16
 9142 085c 06000000 		.4byte	.LCFI114
 9143 0860 32000000 		.4byte	.LFE38
 9144 0864 0200     		.2byte	0x2
 9145 0866 77       		.byte	0x77
 9146 0867 10       		.sleb128 16
 9147 0868 00000000 		.4byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 194


 9148 086c 00000000 		.4byte	0
 9149              	.LLST39:
 9150 0870 00000000 		.4byte	.LFB39
 9151 0874 02000000 		.4byte	.LCFI115
 9152 0878 0200     		.2byte	0x2
 9153 087a 7D       		.byte	0x7d
 9154 087b 00       		.sleb128 0
 9155 087c 02000000 		.4byte	.LCFI115
 9156 0880 04000000 		.4byte	.LCFI116
 9157 0884 0200     		.2byte	0x2
 9158 0886 7D       		.byte	0x7d
 9159 0887 08       		.sleb128 8
 9160 0888 04000000 		.4byte	.LCFI116
 9161 088c 06000000 		.4byte	.LCFI117
 9162 0890 0200     		.2byte	0x2
 9163 0892 7D       		.byte	0x7d
 9164 0893 18       		.sleb128 24
 9165 0894 06000000 		.4byte	.LCFI117
 9166 0898 52000000 		.4byte	.LFE39
 9167 089c 0200     		.2byte	0x2
 9168 089e 77       		.byte	0x77
 9169 089f 18       		.sleb128 24
 9170 08a0 00000000 		.4byte	0
 9171 08a4 00000000 		.4byte	0
 9172              	.LLST40:
 9173 08a8 00000000 		.4byte	.LFB40
 9174 08ac 02000000 		.4byte	.LCFI118
 9175 08b0 0200     		.2byte	0x2
 9176 08b2 7D       		.byte	0x7d
 9177 08b3 00       		.sleb128 0
 9178 08b4 02000000 		.4byte	.LCFI118
 9179 08b8 04000000 		.4byte	.LCFI119
 9180 08bc 0200     		.2byte	0x2
 9181 08be 7D       		.byte	0x7d
 9182 08bf 08       		.sleb128 8
 9183 08c0 04000000 		.4byte	.LCFI119
 9184 08c4 06000000 		.4byte	.LCFI120
 9185 08c8 0200     		.2byte	0x2
 9186 08ca 7D       		.byte	0x7d
 9187 08cb 18       		.sleb128 24
 9188 08cc 06000000 		.4byte	.LCFI120
 9189 08d0 48000000 		.4byte	.LFE40
 9190 08d4 0200     		.2byte	0x2
 9191 08d6 77       		.byte	0x77
 9192 08d7 18       		.sleb128 24
 9193 08d8 00000000 		.4byte	0
 9194 08dc 00000000 		.4byte	0
 9195              	.LLST41:
 9196 08e0 00000000 		.4byte	.LFB41
 9197 08e4 02000000 		.4byte	.LCFI121
 9198 08e8 0200     		.2byte	0x2
 9199 08ea 7D       		.byte	0x7d
 9200 08eb 00       		.sleb128 0
 9201 08ec 02000000 		.4byte	.LCFI121
 9202 08f0 04000000 		.4byte	.LCFI122
 9203 08f4 0200     		.2byte	0x2
 9204 08f6 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 195


 9205 08f7 08       		.sleb128 8
 9206 08f8 04000000 		.4byte	.LCFI122
 9207 08fc 06000000 		.4byte	.LCFI123
 9208 0900 0200     		.2byte	0x2
 9209 0902 7D       		.byte	0x7d
 9210 0903 18       		.sleb128 24
 9211 0904 06000000 		.4byte	.LCFI123
 9212 0908 48000000 		.4byte	.LFE41
 9213 090c 0200     		.2byte	0x2
 9214 090e 77       		.byte	0x77
 9215 090f 18       		.sleb128 24
 9216 0910 00000000 		.4byte	0
 9217 0914 00000000 		.4byte	0
 9218              	.LLST42:
 9219 0918 00000000 		.4byte	.LFB42
 9220 091c 02000000 		.4byte	.LCFI124
 9221 0920 0200     		.2byte	0x2
 9222 0922 7D       		.byte	0x7d
 9223 0923 00       		.sleb128 0
 9224 0924 02000000 		.4byte	.LCFI124
 9225 0928 04000000 		.4byte	.LCFI125
 9226 092c 0200     		.2byte	0x2
 9227 092e 7D       		.byte	0x7d
 9228 092f 08       		.sleb128 8
 9229 0930 04000000 		.4byte	.LCFI125
 9230 0934 06000000 		.4byte	.LCFI126
 9231 0938 0200     		.2byte	0x2
 9232 093a 7D       		.byte	0x7d
 9233 093b 28       		.sleb128 40
 9234 093c 06000000 		.4byte	.LCFI126
 9235 0940 B6000000 		.4byte	.LFE42
 9236 0944 0200     		.2byte	0x2
 9237 0946 77       		.byte	0x77
 9238 0947 28       		.sleb128 40
 9239 0948 00000000 		.4byte	0
 9240 094c 00000000 		.4byte	0
 9241              	.LLST43:
 9242 0950 00000000 		.4byte	.LFB43
 9243 0954 02000000 		.4byte	.LCFI127
 9244 0958 0200     		.2byte	0x2
 9245 095a 7D       		.byte	0x7d
 9246 095b 00       		.sleb128 0
 9247 095c 02000000 		.4byte	.LCFI127
 9248 0960 04000000 		.4byte	.LCFI128
 9249 0964 0200     		.2byte	0x2
 9250 0966 7D       		.byte	0x7d
 9251 0967 08       		.sleb128 8
 9252 0968 04000000 		.4byte	.LCFI128
 9253 096c 06000000 		.4byte	.LCFI129
 9254 0970 0200     		.2byte	0x2
 9255 0972 7D       		.byte	0x7d
 9256 0973 28       		.sleb128 40
 9257 0974 06000000 		.4byte	.LCFI129
 9258 0978 C2000000 		.4byte	.LFE43
 9259 097c 0200     		.2byte	0x2
 9260 097e 77       		.byte	0x77
 9261 097f 28       		.sleb128 40
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 196


 9262 0980 00000000 		.4byte	0
 9263 0984 00000000 		.4byte	0
 9264              	.LLST44:
 9265 0988 00000000 		.4byte	.LFB44
 9266 098c 02000000 		.4byte	.LCFI130
 9267 0990 0200     		.2byte	0x2
 9268 0992 7D       		.byte	0x7d
 9269 0993 00       		.sleb128 0
 9270 0994 02000000 		.4byte	.LCFI130
 9271 0998 04000000 		.4byte	.LCFI131
 9272 099c 0200     		.2byte	0x2
 9273 099e 7D       		.byte	0x7d
 9274 099f 08       		.sleb128 8
 9275 09a0 04000000 		.4byte	.LCFI131
 9276 09a4 06000000 		.4byte	.LCFI132
 9277 09a8 0200     		.2byte	0x2
 9278 09aa 7D       		.byte	0x7d
 9279 09ab 20       		.sleb128 32
 9280 09ac 06000000 		.4byte	.LCFI132
 9281 09b0 0E010000 		.4byte	.LFE44
 9282 09b4 0200     		.2byte	0x2
 9283 09b6 77       		.byte	0x77
 9284 09b7 20       		.sleb128 32
 9285 09b8 00000000 		.4byte	0
 9286 09bc 00000000 		.4byte	0
 9287              	.LLST45:
 9288 09c0 00000000 		.4byte	.LFB45
 9289 09c4 02000000 		.4byte	.LCFI133
 9290 09c8 0200     		.2byte	0x2
 9291 09ca 7D       		.byte	0x7d
 9292 09cb 00       		.sleb128 0
 9293 09cc 02000000 		.4byte	.LCFI133
 9294 09d0 04000000 		.4byte	.LCFI134
 9295 09d4 0200     		.2byte	0x2
 9296 09d6 7D       		.byte	0x7d
 9297 09d7 08       		.sleb128 8
 9298 09d8 04000000 		.4byte	.LCFI134
 9299 09dc 06000000 		.4byte	.LCFI135
 9300 09e0 0200     		.2byte	0x2
 9301 09e2 7D       		.byte	0x7d
 9302 09e3 18       		.sleb128 24
 9303 09e4 06000000 		.4byte	.LCFI135
 9304 09e8 D2000000 		.4byte	.LFE45
 9305 09ec 0200     		.2byte	0x2
 9306 09ee 77       		.byte	0x77
 9307 09ef 18       		.sleb128 24
 9308 09f0 00000000 		.4byte	0
 9309 09f4 00000000 		.4byte	0
 9310              	.LLST46:
 9311 09f8 00000000 		.4byte	.LFB46
 9312 09fc 02000000 		.4byte	.LCFI136
 9313 0a00 0200     		.2byte	0x2
 9314 0a02 7D       		.byte	0x7d
 9315 0a03 00       		.sleb128 0
 9316 0a04 02000000 		.4byte	.LCFI136
 9317 0a08 04000000 		.4byte	.LCFI137
 9318 0a0c 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 197


 9319 0a0e 7D       		.byte	0x7d
 9320 0a0f 0C       		.sleb128 12
 9321 0a10 04000000 		.4byte	.LCFI137
 9322 0a14 06000000 		.4byte	.LCFI138
 9323 0a18 0200     		.2byte	0x2
 9324 0a1a 7D       		.byte	0x7d
 9325 0a1b 30       		.sleb128 48
 9326 0a1c 06000000 		.4byte	.LCFI138
 9327 0a20 4E010000 		.4byte	.LFE46
 9328 0a24 0200     		.2byte	0x2
 9329 0a26 77       		.byte	0x77
 9330 0a27 30       		.sleb128 48
 9331 0a28 00000000 		.4byte	0
 9332 0a2c 00000000 		.4byte	0
 9333              	.LLST47:
 9334 0a30 00000000 		.4byte	.LFB47
 9335 0a34 02000000 		.4byte	.LCFI139
 9336 0a38 0200     		.2byte	0x2
 9337 0a3a 7D       		.byte	0x7d
 9338 0a3b 00       		.sleb128 0
 9339 0a3c 02000000 		.4byte	.LCFI139
 9340 0a40 04000000 		.4byte	.LCFI140
 9341 0a44 0200     		.2byte	0x2
 9342 0a46 7D       		.byte	0x7d
 9343 0a47 04       		.sleb128 4
 9344 0a48 04000000 		.4byte	.LCFI140
 9345 0a4c 06000000 		.4byte	.LCFI141
 9346 0a50 0200     		.2byte	0x2
 9347 0a52 7D       		.byte	0x7d
 9348 0a53 20       		.sleb128 32
 9349 0a54 06000000 		.4byte	.LCFI141
 9350 0a58 5A020000 		.4byte	.LFE47
 9351 0a5c 0200     		.2byte	0x2
 9352 0a5e 77       		.byte	0x77
 9353 0a5f 20       		.sleb128 32
 9354 0a60 00000000 		.4byte	0
 9355 0a64 00000000 		.4byte	0
 9356              	.LLST48:
 9357 0a68 00000000 		.4byte	.LFB48
 9358 0a6c 02000000 		.4byte	.LCFI142
 9359 0a70 0200     		.2byte	0x2
 9360 0a72 7D       		.byte	0x7d
 9361 0a73 00       		.sleb128 0
 9362 0a74 02000000 		.4byte	.LCFI142
 9363 0a78 04000000 		.4byte	.LCFI143
 9364 0a7c 0200     		.2byte	0x2
 9365 0a7e 7D       		.byte	0x7d
 9366 0a7f 04       		.sleb128 4
 9367 0a80 04000000 		.4byte	.LCFI143
 9368 0a84 06000000 		.4byte	.LCFI144
 9369 0a88 0200     		.2byte	0x2
 9370 0a8a 7D       		.byte	0x7d
 9371 0a8b 18       		.sleb128 24
 9372 0a8c 06000000 		.4byte	.LCFI144
 9373 0a90 F2000000 		.4byte	.LFE48
 9374 0a94 0200     		.2byte	0x2
 9375 0a96 77       		.byte	0x77
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 198


 9376 0a97 18       		.sleb128 24
 9377 0a98 00000000 		.4byte	0
 9378 0a9c 00000000 		.4byte	0
 9379              	.LLST49:
 9380 0aa0 00000000 		.4byte	.LFB49
 9381 0aa4 02000000 		.4byte	.LCFI145
 9382 0aa8 0200     		.2byte	0x2
 9383 0aaa 7D       		.byte	0x7d
 9384 0aab 00       		.sleb128 0
 9385 0aac 02000000 		.4byte	.LCFI145
 9386 0ab0 04000000 		.4byte	.LCFI146
 9387 0ab4 0200     		.2byte	0x2
 9388 0ab6 7D       		.byte	0x7d
 9389 0ab7 04       		.sleb128 4
 9390 0ab8 04000000 		.4byte	.LCFI146
 9391 0abc 06000000 		.4byte	.LCFI147
 9392 0ac0 0200     		.2byte	0x2
 9393 0ac2 7D       		.byte	0x7d
 9394 0ac3 28       		.sleb128 40
 9395 0ac4 06000000 		.4byte	.LCFI147
 9396 0ac8 16010000 		.4byte	.LFE49
 9397 0acc 0200     		.2byte	0x2
 9398 0ace 77       		.byte	0x77
 9399 0acf 28       		.sleb128 40
 9400 0ad0 00000000 		.4byte	0
 9401 0ad4 00000000 		.4byte	0
 9402              	.LLST50:
 9403 0ad8 00000000 		.4byte	.LFB50
 9404 0adc 02000000 		.4byte	.LCFI148
 9405 0ae0 0200     		.2byte	0x2
 9406 0ae2 7D       		.byte	0x7d
 9407 0ae3 00       		.sleb128 0
 9408 0ae4 02000000 		.4byte	.LCFI148
 9409 0ae8 04000000 		.4byte	.LCFI149
 9410 0aec 0200     		.2byte	0x2
 9411 0aee 7D       		.byte	0x7d
 9412 0aef 08       		.sleb128 8
 9413 0af0 04000000 		.4byte	.LCFI149
 9414 0af4 06000000 		.4byte	.LCFI150
 9415 0af8 0200     		.2byte	0x2
 9416 0afa 7D       		.byte	0x7d
 9417 0afb 18       		.sleb128 24
 9418 0afc 06000000 		.4byte	.LCFI150
 9419 0b00 34000000 		.4byte	.LFE50
 9420 0b04 0200     		.2byte	0x2
 9421 0b06 77       		.byte	0x77
 9422 0b07 18       		.sleb128 24
 9423 0b08 00000000 		.4byte	0
 9424 0b0c 00000000 		.4byte	0
 9425              	.LLST51:
 9426 0b10 00000000 		.4byte	.LFB51
 9427 0b14 02000000 		.4byte	.LCFI151
 9428 0b18 0200     		.2byte	0x2
 9429 0b1a 7D       		.byte	0x7d
 9430 0b1b 00       		.sleb128 0
 9431 0b1c 02000000 		.4byte	.LCFI151
 9432 0b20 04000000 		.4byte	.LCFI152
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 199


 9433 0b24 0200     		.2byte	0x2
 9434 0b26 7D       		.byte	0x7d
 9435 0b27 08       		.sleb128 8
 9436 0b28 04000000 		.4byte	.LCFI152
 9437 0b2c 0E000000 		.4byte	.LFE51
 9438 0b30 0200     		.2byte	0x2
 9439 0b32 77       		.byte	0x77
 9440 0b33 08       		.sleb128 8
 9441 0b34 00000000 		.4byte	0
 9442 0b38 00000000 		.4byte	0
 9443              	.LLST52:
 9444 0b3c 00000000 		.4byte	.LFB52
 9445 0b40 02000000 		.4byte	.LCFI153
 9446 0b44 0200     		.2byte	0x2
 9447 0b46 7D       		.byte	0x7d
 9448 0b47 00       		.sleb128 0
 9449 0b48 02000000 		.4byte	.LCFI153
 9450 0b4c 04000000 		.4byte	.LCFI154
 9451 0b50 0200     		.2byte	0x2
 9452 0b52 7D       		.byte	0x7d
 9453 0b53 08       		.sleb128 8
 9454 0b54 04000000 		.4byte	.LCFI154
 9455 0b58 06000000 		.4byte	.LCFI155
 9456 0b5c 0200     		.2byte	0x2
 9457 0b5e 7D       		.byte	0x7d
 9458 0b5f 10       		.sleb128 16
 9459 0b60 06000000 		.4byte	.LCFI155
 9460 0b64 16000000 		.4byte	.LFE52
 9461 0b68 0200     		.2byte	0x2
 9462 0b6a 77       		.byte	0x77
 9463 0b6b 10       		.sleb128 16
 9464 0b6c 00000000 		.4byte	0
 9465 0b70 00000000 		.4byte	0
 9466              	.LLST53:
 9467 0b74 00000000 		.4byte	.LFB53
 9468 0b78 02000000 		.4byte	.LCFI156
 9469 0b7c 0200     		.2byte	0x2
 9470 0b7e 7D       		.byte	0x7d
 9471 0b7f 00       		.sleb128 0
 9472 0b80 02000000 		.4byte	.LCFI156
 9473 0b84 04000000 		.4byte	.LCFI157
 9474 0b88 0200     		.2byte	0x2
 9475 0b8a 7D       		.byte	0x7d
 9476 0b8b 08       		.sleb128 8
 9477 0b8c 04000000 		.4byte	.LCFI157
 9478 0b90 06000000 		.4byte	.LCFI158
 9479 0b94 0200     		.2byte	0x2
 9480 0b96 7D       		.byte	0x7d
 9481 0b97 10       		.sleb128 16
 9482 0b98 06000000 		.4byte	.LCFI158
 9483 0b9c 16000000 		.4byte	.LFE53
 9484 0ba0 0200     		.2byte	0x2
 9485 0ba2 77       		.byte	0x77
 9486 0ba3 10       		.sleb128 16
 9487 0ba4 00000000 		.4byte	0
 9488 0ba8 00000000 		.4byte	0
 9489              	.LLST54:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 200


 9490 0bac 00000000 		.4byte	.LFB54
 9491 0bb0 02000000 		.4byte	.LCFI159
 9492 0bb4 0200     		.2byte	0x2
 9493 0bb6 7D       		.byte	0x7d
 9494 0bb7 00       		.sleb128 0
 9495 0bb8 02000000 		.4byte	.LCFI159
 9496 0bbc 04000000 		.4byte	.LCFI160
 9497 0bc0 0200     		.2byte	0x2
 9498 0bc2 7D       		.byte	0x7d
 9499 0bc3 08       		.sleb128 8
 9500 0bc4 04000000 		.4byte	.LCFI160
 9501 0bc8 06000000 		.4byte	.LCFI161
 9502 0bcc 0200     		.2byte	0x2
 9503 0bce 7D       		.byte	0x7d
 9504 0bcf 18       		.sleb128 24
 9505 0bd0 06000000 		.4byte	.LCFI161
 9506 0bd4 60010000 		.4byte	.LFE54
 9507 0bd8 0200     		.2byte	0x2
 9508 0bda 77       		.byte	0x77
 9509 0bdb 18       		.sleb128 24
 9510 0bdc 00000000 		.4byte	0
 9511 0be0 00000000 		.4byte	0
 9512              	.LLST55:
 9513 0be4 00000000 		.4byte	.LFB55
 9514 0be8 02000000 		.4byte	.LCFI162
 9515 0bec 0200     		.2byte	0x2
 9516 0bee 7D       		.byte	0x7d
 9517 0bef 00       		.sleb128 0
 9518 0bf0 02000000 		.4byte	.LCFI162
 9519 0bf4 04000000 		.4byte	.LCFI163
 9520 0bf8 0200     		.2byte	0x2
 9521 0bfa 7D       		.byte	0x7d
 9522 0bfb 08       		.sleb128 8
 9523 0bfc 04000000 		.4byte	.LCFI163
 9524 0c00 06000000 		.4byte	.LCFI164
 9525 0c04 0200     		.2byte	0x2
 9526 0c06 7D       		.byte	0x7d
 9527 0c07 10       		.sleb128 16
 9528 0c08 06000000 		.4byte	.LCFI164
 9529 0c0c 58000000 		.4byte	.LFE55
 9530 0c10 0200     		.2byte	0x2
 9531 0c12 77       		.byte	0x77
 9532 0c13 10       		.sleb128 16
 9533 0c14 00000000 		.4byte	0
 9534 0c18 00000000 		.4byte	0
 9535              	.LLST56:
 9536 0c1c 00000000 		.4byte	.LFB56
 9537 0c20 02000000 		.4byte	.LCFI165
 9538 0c24 0200     		.2byte	0x2
 9539 0c26 7D       		.byte	0x7d
 9540 0c27 00       		.sleb128 0
 9541 0c28 02000000 		.4byte	.LCFI165
 9542 0c2c 04000000 		.4byte	.LCFI166
 9543 0c30 0200     		.2byte	0x2
 9544 0c32 7D       		.byte	0x7d
 9545 0c33 08       		.sleb128 8
 9546 0c34 04000000 		.4byte	.LCFI166
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 201


 9547 0c38 06000000 		.4byte	.LCFI167
 9548 0c3c 0200     		.2byte	0x2
 9549 0c3e 7D       		.byte	0x7d
 9550 0c3f 18       		.sleb128 24
 9551 0c40 06000000 		.4byte	.LCFI167
 9552 0c44 42000000 		.4byte	.LFE56
 9553 0c48 0200     		.2byte	0x2
 9554 0c4a 77       		.byte	0x77
 9555 0c4b 18       		.sleb128 24
 9556 0c4c 00000000 		.4byte	0
 9557 0c50 00000000 		.4byte	0
 9558              	.LLST57:
 9559 0c54 00000000 		.4byte	.LFB57
 9560 0c58 02000000 		.4byte	.LCFI168
 9561 0c5c 0200     		.2byte	0x2
 9562 0c5e 7D       		.byte	0x7d
 9563 0c5f 00       		.sleb128 0
 9564 0c60 02000000 		.4byte	.LCFI168
 9565 0c64 04000000 		.4byte	.LCFI169
 9566 0c68 0200     		.2byte	0x2
 9567 0c6a 7D       		.byte	0x7d
 9568 0c6b 08       		.sleb128 8
 9569 0c6c 04000000 		.4byte	.LCFI169
 9570 0c70 06000000 		.4byte	.LCFI170
 9571 0c74 0200     		.2byte	0x2
 9572 0c76 7D       		.byte	0x7d
 9573 0c77 18       		.sleb128 24
 9574 0c78 06000000 		.4byte	.LCFI170
 9575 0c7c 38000000 		.4byte	.LFE57
 9576 0c80 0200     		.2byte	0x2
 9577 0c82 77       		.byte	0x77
 9578 0c83 18       		.sleb128 24
 9579 0c84 00000000 		.4byte	0
 9580 0c88 00000000 		.4byte	0
 9581              	.LLST58:
 9582 0c8c 00000000 		.4byte	.LFB58
 9583 0c90 02000000 		.4byte	.LCFI171
 9584 0c94 0200     		.2byte	0x2
 9585 0c96 7D       		.byte	0x7d
 9586 0c97 00       		.sleb128 0
 9587 0c98 02000000 		.4byte	.LCFI171
 9588 0c9c 04000000 		.4byte	.LCFI172
 9589 0ca0 0200     		.2byte	0x2
 9590 0ca2 7D       		.byte	0x7d
 9591 0ca3 08       		.sleb128 8
 9592 0ca4 04000000 		.4byte	.LCFI172
 9593 0ca8 06000000 		.4byte	.LCFI173
 9594 0cac 0200     		.2byte	0x2
 9595 0cae 7D       		.byte	0x7d
 9596 0caf 18       		.sleb128 24
 9597 0cb0 06000000 		.4byte	.LCFI173
 9598 0cb4 7E000000 		.4byte	.LFE58
 9599 0cb8 0200     		.2byte	0x2
 9600 0cba 77       		.byte	0x77
 9601 0cbb 18       		.sleb128 24
 9602 0cbc 00000000 		.4byte	0
 9603 0cc0 00000000 		.4byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 202


 9604              	.LLST59:
 9605 0cc4 00000000 		.4byte	.LFB59
 9606 0cc8 02000000 		.4byte	.LCFI174
 9607 0ccc 0200     		.2byte	0x2
 9608 0cce 7D       		.byte	0x7d
 9609 0ccf 00       		.sleb128 0
 9610 0cd0 02000000 		.4byte	.LCFI174
 9611 0cd4 04000000 		.4byte	.LCFI175
 9612 0cd8 0200     		.2byte	0x2
 9613 0cda 7D       		.byte	0x7d
 9614 0cdb 08       		.sleb128 8
 9615 0cdc 04000000 		.4byte	.LCFI175
 9616 0ce0 06000000 		.4byte	.LCFI176
 9617 0ce4 0200     		.2byte	0x2
 9618 0ce6 7D       		.byte	0x7d
 9619 0ce7 18       		.sleb128 24
 9620 0ce8 06000000 		.4byte	.LCFI176
 9621 0cec 78000000 		.4byte	.LFE59
 9622 0cf0 0200     		.2byte	0x2
 9623 0cf2 77       		.byte	0x77
 9624 0cf3 18       		.sleb128 24
 9625 0cf4 00000000 		.4byte	0
 9626 0cf8 00000000 		.4byte	0
 9627              	.LLST60:
 9628 0cfc 00000000 		.4byte	.LFB60
 9629 0d00 02000000 		.4byte	.LCFI177
 9630 0d04 0200     		.2byte	0x2
 9631 0d06 7D       		.byte	0x7d
 9632 0d07 00       		.sleb128 0
 9633 0d08 02000000 		.4byte	.LCFI177
 9634 0d0c 04000000 		.4byte	.LCFI178
 9635 0d10 0200     		.2byte	0x2
 9636 0d12 7D       		.byte	0x7d
 9637 0d13 08       		.sleb128 8
 9638 0d14 04000000 		.4byte	.LCFI178
 9639 0d18 06000000 		.4byte	.LCFI179
 9640 0d1c 0200     		.2byte	0x2
 9641 0d1e 7D       		.byte	0x7d
 9642 0d1f 10       		.sleb128 16
 9643 0d20 06000000 		.4byte	.LCFI179
 9644 0d24 1E000000 		.4byte	.LFE60
 9645 0d28 0200     		.2byte	0x2
 9646 0d2a 77       		.byte	0x77
 9647 0d2b 10       		.sleb128 16
 9648 0d2c 00000000 		.4byte	0
 9649 0d30 00000000 		.4byte	0
 9650              	.LLST61:
 9651 0d34 00000000 		.4byte	.LFB61
 9652 0d38 02000000 		.4byte	.LCFI180
 9653 0d3c 0200     		.2byte	0x2
 9654 0d3e 7D       		.byte	0x7d
 9655 0d3f 00       		.sleb128 0
 9656 0d40 02000000 		.4byte	.LCFI180
 9657 0d44 04000000 		.4byte	.LCFI181
 9658 0d48 0200     		.2byte	0x2
 9659 0d4a 7D       		.byte	0x7d
 9660 0d4b 08       		.sleb128 8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 203


 9661 0d4c 04000000 		.4byte	.LCFI181
 9662 0d50 06000000 		.4byte	.LCFI182
 9663 0d54 0200     		.2byte	0x2
 9664 0d56 7D       		.byte	0x7d
 9665 0d57 10       		.sleb128 16
 9666 0d58 06000000 		.4byte	.LCFI182
 9667 0d5c 26000000 		.4byte	.LFE61
 9668 0d60 0200     		.2byte	0x2
 9669 0d62 77       		.byte	0x77
 9670 0d63 10       		.sleb128 16
 9671 0d64 00000000 		.4byte	0
 9672 0d68 00000000 		.4byte	0
 9673              	.LLST62:
 9674 0d6c 00000000 		.4byte	.LFB62
 9675 0d70 02000000 		.4byte	.LCFI183
 9676 0d74 0200     		.2byte	0x2
 9677 0d76 7D       		.byte	0x7d
 9678 0d77 00       		.sleb128 0
 9679 0d78 02000000 		.4byte	.LCFI183
 9680 0d7c 04000000 		.4byte	.LCFI184
 9681 0d80 0200     		.2byte	0x2
 9682 0d82 7D       		.byte	0x7d
 9683 0d83 08       		.sleb128 8
 9684 0d84 04000000 		.4byte	.LCFI184
 9685 0d88 06000000 		.4byte	.LCFI185
 9686 0d8c 0200     		.2byte	0x2
 9687 0d8e 7D       		.byte	0x7d
 9688 0d8f 10       		.sleb128 16
 9689 0d90 06000000 		.4byte	.LCFI185
 9690 0d94 24000000 		.4byte	.LFE62
 9691 0d98 0200     		.2byte	0x2
 9692 0d9a 77       		.byte	0x77
 9693 0d9b 10       		.sleb128 16
 9694 0d9c 00000000 		.4byte	0
 9695 0da0 00000000 		.4byte	0
 9696              	.LLST63:
 9697 0da4 00000000 		.4byte	.LFB63
 9698 0da8 02000000 		.4byte	.LCFI186
 9699 0dac 0200     		.2byte	0x2
 9700 0dae 7D       		.byte	0x7d
 9701 0daf 00       		.sleb128 0
 9702 0db0 02000000 		.4byte	.LCFI186
 9703 0db4 04000000 		.4byte	.LCFI187
 9704 0db8 0200     		.2byte	0x2
 9705 0dba 7D       		.byte	0x7d
 9706 0dbb 08       		.sleb128 8
 9707 0dbc 04000000 		.4byte	.LCFI187
 9708 0dc0 06000000 		.4byte	.LCFI188
 9709 0dc4 0200     		.2byte	0x2
 9710 0dc6 7D       		.byte	0x7d
 9711 0dc7 18       		.sleb128 24
 9712 0dc8 06000000 		.4byte	.LCFI188
 9713 0dcc 5A000000 		.4byte	.LFE63
 9714 0dd0 0200     		.2byte	0x2
 9715 0dd2 77       		.byte	0x77
 9716 0dd3 18       		.sleb128 24
 9717 0dd4 00000000 		.4byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 204


 9718 0dd8 00000000 		.4byte	0
 9719              	.LLST64:
 9720 0ddc 00000000 		.4byte	.LFB64
 9721 0de0 02000000 		.4byte	.LCFI189
 9722 0de4 0200     		.2byte	0x2
 9723 0de6 7D       		.byte	0x7d
 9724 0de7 00       		.sleb128 0
 9725 0de8 02000000 		.4byte	.LCFI189
 9726 0dec 04000000 		.4byte	.LCFI190
 9727 0df0 0200     		.2byte	0x2
 9728 0df2 7D       		.byte	0x7d
 9729 0df3 08       		.sleb128 8
 9730 0df4 04000000 		.4byte	.LCFI190
 9731 0df8 06000000 		.4byte	.LCFI191
 9732 0dfc 0200     		.2byte	0x2
 9733 0dfe 7D       		.byte	0x7d
 9734 0dff 18       		.sleb128 24
 9735 0e00 06000000 		.4byte	.LCFI191
 9736 0e04 B0000000 		.4byte	.LFE64
 9737 0e08 0200     		.2byte	0x2
 9738 0e0a 77       		.byte	0x77
 9739 0e0b 18       		.sleb128 24
 9740 0e0c 00000000 		.4byte	0
 9741 0e10 00000000 		.4byte	0
 9742              	.LLST65:
 9743 0e14 00000000 		.4byte	.LFB65
 9744 0e18 02000000 		.4byte	.LCFI192
 9745 0e1c 0200     		.2byte	0x2
 9746 0e1e 7D       		.byte	0x7d
 9747 0e1f 00       		.sleb128 0
 9748 0e20 02000000 		.4byte	.LCFI192
 9749 0e24 04000000 		.4byte	.LCFI193
 9750 0e28 0200     		.2byte	0x2
 9751 0e2a 7D       		.byte	0x7d
 9752 0e2b 08       		.sleb128 8
 9753 0e2c 04000000 		.4byte	.LCFI193
 9754 0e30 06000000 		.4byte	.LCFI194
 9755 0e34 0200     		.2byte	0x2
 9756 0e36 7D       		.byte	0x7d
 9757 0e37 10       		.sleb128 16
 9758 0e38 06000000 		.4byte	.LCFI194
 9759 0e3c 1E000000 		.4byte	.LFE65
 9760 0e40 0200     		.2byte	0x2
 9761 0e42 77       		.byte	0x77
 9762 0e43 10       		.sleb128 16
 9763 0e44 00000000 		.4byte	0
 9764 0e48 00000000 		.4byte	0
 9765              	.LLST66:
 9766 0e4c 00000000 		.4byte	.LFB66
 9767 0e50 02000000 		.4byte	.LCFI195
 9768 0e54 0200     		.2byte	0x2
 9769 0e56 7D       		.byte	0x7d
 9770 0e57 00       		.sleb128 0
 9771 0e58 02000000 		.4byte	.LCFI195
 9772 0e5c 04000000 		.4byte	.LCFI196
 9773 0e60 0200     		.2byte	0x2
 9774 0e62 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 205


 9775 0e63 08       		.sleb128 8
 9776 0e64 04000000 		.4byte	.LCFI196
 9777 0e68 06000000 		.4byte	.LCFI197
 9778 0e6c 0200     		.2byte	0x2
 9779 0e6e 7D       		.byte	0x7d
 9780 0e6f 10       		.sleb128 16
 9781 0e70 06000000 		.4byte	.LCFI197
 9782 0e74 1E000000 		.4byte	.LFE66
 9783 0e78 0200     		.2byte	0x2
 9784 0e7a 77       		.byte	0x77
 9785 0e7b 10       		.sleb128 16
 9786 0e7c 00000000 		.4byte	0
 9787 0e80 00000000 		.4byte	0
 9788              	.LLST67:
 9789 0e84 00000000 		.4byte	.LFB67
 9790 0e88 02000000 		.4byte	.LCFI198
 9791 0e8c 0200     		.2byte	0x2
 9792 0e8e 7D       		.byte	0x7d
 9793 0e8f 00       		.sleb128 0
 9794 0e90 02000000 		.4byte	.LCFI198
 9795 0e94 04000000 		.4byte	.LCFI199
 9796 0e98 0200     		.2byte	0x2
 9797 0e9a 7D       		.byte	0x7d
 9798 0e9b 08       		.sleb128 8
 9799 0e9c 04000000 		.4byte	.LCFI199
 9800 0ea0 06000000 		.4byte	.LCFI200
 9801 0ea4 0200     		.2byte	0x2
 9802 0ea6 7D       		.byte	0x7d
 9803 0ea7 18       		.sleb128 24
 9804 0ea8 06000000 		.4byte	.LCFI200
 9805 0eac B4000000 		.4byte	.LFE67
 9806 0eb0 0200     		.2byte	0x2
 9807 0eb2 77       		.byte	0x77
 9808 0eb3 18       		.sleb128 24
 9809 0eb4 00000000 		.4byte	0
 9810 0eb8 00000000 		.4byte	0
 9811              	.LLST68:
 9812 0ebc 00000000 		.4byte	.LFB68
 9813 0ec0 02000000 		.4byte	.LCFI201
 9814 0ec4 0200     		.2byte	0x2
 9815 0ec6 7D       		.byte	0x7d
 9816 0ec7 00       		.sleb128 0
 9817 0ec8 02000000 		.4byte	.LCFI201
 9818 0ecc 04000000 		.4byte	.LCFI202
 9819 0ed0 0200     		.2byte	0x2
 9820 0ed2 7D       		.byte	0x7d
 9821 0ed3 08       		.sleb128 8
 9822 0ed4 04000000 		.4byte	.LCFI202
 9823 0ed8 06000000 		.4byte	.LCFI203
 9824 0edc 0200     		.2byte	0x2
 9825 0ede 7D       		.byte	0x7d
 9826 0edf 20       		.sleb128 32
 9827 0ee0 06000000 		.4byte	.LCFI203
 9828 0ee4 68000000 		.4byte	.LFE68
 9829 0ee8 0200     		.2byte	0x2
 9830 0eea 77       		.byte	0x77
 9831 0eeb 18       		.sleb128 24
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 206


 9832 0eec 00000000 		.4byte	0
 9833 0ef0 00000000 		.4byte	0
 9834              	.LLST69:
 9835 0ef4 00000000 		.4byte	.LFB69
 9836 0ef8 02000000 		.4byte	.LCFI204
 9837 0efc 0200     		.2byte	0x2
 9838 0efe 7D       		.byte	0x7d
 9839 0eff 00       		.sleb128 0
 9840 0f00 02000000 		.4byte	.LCFI204
 9841 0f04 04000000 		.4byte	.LCFI205
 9842 0f08 0200     		.2byte	0x2
 9843 0f0a 7D       		.byte	0x7d
 9844 0f0b 08       		.sleb128 8
 9845 0f0c 04000000 		.4byte	.LCFI205
 9846 0f10 06000000 		.4byte	.LCFI206
 9847 0f14 0200     		.2byte	0x2
 9848 0f16 7D       		.byte	0x7d
 9849 0f17 10       		.sleb128 16
 9850 0f18 06000000 		.4byte	.LCFI206
 9851 0f1c 2A000000 		.4byte	.LFE69
 9852 0f20 0200     		.2byte	0x2
 9853 0f22 77       		.byte	0x77
 9854 0f23 10       		.sleb128 16
 9855 0f24 00000000 		.4byte	0
 9856 0f28 00000000 		.4byte	0
 9857              	.LLST70:
 9858 0f2c 00000000 		.4byte	.LFB70
 9859 0f30 02000000 		.4byte	.LCFI207
 9860 0f34 0200     		.2byte	0x2
 9861 0f36 7D       		.byte	0x7d
 9862 0f37 00       		.sleb128 0
 9863 0f38 02000000 		.4byte	.LCFI207
 9864 0f3c 04000000 		.4byte	.LCFI208
 9865 0f40 0200     		.2byte	0x2
 9866 0f42 7D       		.byte	0x7d
 9867 0f43 08       		.sleb128 8
 9868 0f44 04000000 		.4byte	.LCFI208
 9869 0f48 06000000 		.4byte	.LCFI209
 9870 0f4c 0200     		.2byte	0x2
 9871 0f4e 7D       		.byte	0x7d
 9872 0f4f 10       		.sleb128 16
 9873 0f50 06000000 		.4byte	.LCFI209
 9874 0f54 26000000 		.4byte	.LFE70
 9875 0f58 0200     		.2byte	0x2
 9876 0f5a 77       		.byte	0x77
 9877 0f5b 10       		.sleb128 16
 9878 0f5c 00000000 		.4byte	0
 9879 0f60 00000000 		.4byte	0
 9880              	.LLST71:
 9881 0f64 00000000 		.4byte	.LFB71
 9882 0f68 02000000 		.4byte	.LCFI210
 9883 0f6c 0200     		.2byte	0x2
 9884 0f6e 7D       		.byte	0x7d
 9885 0f6f 00       		.sleb128 0
 9886 0f70 02000000 		.4byte	.LCFI210
 9887 0f74 04000000 		.4byte	.LCFI211
 9888 0f78 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 207


 9889 0f7a 7D       		.byte	0x7d
 9890 0f7b 08       		.sleb128 8
 9891 0f7c 04000000 		.4byte	.LCFI211
 9892 0f80 06000000 		.4byte	.LCFI212
 9893 0f84 0200     		.2byte	0x2
 9894 0f86 7D       		.byte	0x7d
 9895 0f87 20       		.sleb128 32
 9896 0f88 06000000 		.4byte	.LCFI212
 9897 0f8c 8A000000 		.4byte	.LFE71
 9898 0f90 0200     		.2byte	0x2
 9899 0f92 77       		.byte	0x77
 9900 0f93 20       		.sleb128 32
 9901 0f94 00000000 		.4byte	0
 9902 0f98 00000000 		.4byte	0
 9903              	.LLST72:
 9904 0f9c 00000000 		.4byte	.LFB72
 9905 0fa0 02000000 		.4byte	.LCFI213
 9906 0fa4 0200     		.2byte	0x2
 9907 0fa6 7D       		.byte	0x7d
 9908 0fa7 00       		.sleb128 0
 9909 0fa8 02000000 		.4byte	.LCFI213
 9910 0fac 04000000 		.4byte	.LCFI214
 9911 0fb0 0200     		.2byte	0x2
 9912 0fb2 7D       		.byte	0x7d
 9913 0fb3 08       		.sleb128 8
 9914 0fb4 04000000 		.4byte	.LCFI214
 9915 0fb8 06000000 		.4byte	.LCFI215
 9916 0fbc 0200     		.2byte	0x2
 9917 0fbe 7D       		.byte	0x7d
 9918 0fbf 30       		.sleb128 48
 9919 0fc0 06000000 		.4byte	.LCFI215
 9920 0fc4 00010000 		.4byte	.LFE72
 9921 0fc8 0200     		.2byte	0x2
 9922 0fca 77       		.byte	0x77
 9923 0fcb 28       		.sleb128 40
 9924 0fcc 00000000 		.4byte	0
 9925 0fd0 00000000 		.4byte	0
 9926              		.section	.debug_aranges,"",%progbits
 9927 0000 5C020000 		.4byte	0x25c
 9928 0004 0200     		.2byte	0x2
 9929 0006 00000000 		.4byte	.Ldebug_info0
 9930 000a 04       		.byte	0x4
 9931 000b 00       		.byte	0
 9932 000c 0000     		.2byte	0
 9933 000e 0000     		.2byte	0
 9934 0010 00000000 		.4byte	.LFB0
 9935 0014 0E000000 		.4byte	.LFE0-.LFB0
 9936 0018 00000000 		.4byte	.LFB1
 9937 001c 26000000 		.4byte	.LFE1-.LFB1
 9938 0020 00000000 		.4byte	.LFB2
 9939 0024 00010000 		.4byte	.LFE2-.LFB2
 9940 0028 00000000 		.4byte	.LFB3
 9941 002c 0A010000 		.4byte	.LFE3-.LFB3
 9942 0030 00000000 		.4byte	.LFB4
 9943 0034 3E000000 		.4byte	.LFE4-.LFB4
 9944 0038 00000000 		.4byte	.LFB5
 9945 003c 3E000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 208


 9946 0040 00000000 		.4byte	.LFB6
 9947 0044 1E000000 		.4byte	.LFE6-.LFB6
 9948 0048 00000000 		.4byte	.LFB7
 9949 004c 1E000000 		.4byte	.LFE7-.LFB7
 9950 0050 00000000 		.4byte	.LFB8
 9951 0054 22000000 		.4byte	.LFE8-.LFB8
 9952 0058 00000000 		.4byte	.LFB9
 9953 005c 28000000 		.4byte	.LFE9-.LFB9
 9954 0060 00000000 		.4byte	.LFB10
 9955 0064 22000000 		.4byte	.LFE10-.LFB10
 9956 0068 00000000 		.4byte	.LFB11
 9957 006c 28000000 		.4byte	.LFE11-.LFB11
 9958 0070 00000000 		.4byte	.LFB12
 9959 0074 22000000 		.4byte	.LFE12-.LFB12
 9960 0078 00000000 		.4byte	.LFB13
 9961 007c 28000000 		.4byte	.LFE13-.LFB13
 9962 0080 00000000 		.4byte	.LFB14
 9963 0084 24000000 		.4byte	.LFE14-.LFB14
 9964 0088 00000000 		.4byte	.LFB15
 9965 008c 24000000 		.4byte	.LFE15-.LFB15
 9966 0090 00000000 		.4byte	.LFB16
 9967 0094 24000000 		.4byte	.LFE16-.LFB16
 9968 0098 00000000 		.4byte	.LFB17
 9969 009c 38000000 		.4byte	.LFE17-.LFB17
 9970 00a0 00000000 		.4byte	.LFB18
 9971 00a4 3E000000 		.4byte	.LFE18-.LFB18
 9972 00a8 00000000 		.4byte	.LFB19
 9973 00ac 38000000 		.4byte	.LFE19-.LFB19
 9974 00b0 00000000 		.4byte	.LFB20
 9975 00b4 3E000000 		.4byte	.LFE20-.LFB20
 9976 00b8 00000000 		.4byte	.LFB21
 9977 00bc 34000000 		.4byte	.LFE21-.LFB21
 9978 00c0 00000000 		.4byte	.LFB22
 9979 00c4 38000000 		.4byte	.LFE22-.LFB22
 9980 00c8 00000000 		.4byte	.LFB23
 9981 00cc 3E000000 		.4byte	.LFE23-.LFB23
 9982 00d0 00000000 		.4byte	.LFB24
 9983 00d4 38000000 		.4byte	.LFE24-.LFB24
 9984 00d8 00000000 		.4byte	.LFB25
 9985 00dc 3E000000 		.4byte	.LFE25-.LFB25
 9986 00e0 00000000 		.4byte	.LFB26
 9987 00e4 3E000000 		.4byte	.LFE26-.LFB26
 9988 00e8 00000000 		.4byte	.LFB27
 9989 00ec 32000000 		.4byte	.LFE27-.LFB27
 9990 00f0 00000000 		.4byte	.LFB28
 9991 00f4 32000000 		.4byte	.LFE28-.LFB28
 9992 00f8 00000000 		.4byte	.LFB29
 9993 00fc 34000000 		.4byte	.LFE29-.LFB29
 9994 0100 00000000 		.4byte	.LFB30
 9995 0104 32000000 		.4byte	.LFE30-.LFB30
 9996 0108 00000000 		.4byte	.LFB31
 9997 010c 2E000000 		.4byte	.LFE31-.LFB31
 9998 0110 00000000 		.4byte	.LFB32
 9999 0114 32000000 		.4byte	.LFE32-.LFB32
 10000 0118 00000000 		.4byte	.LFB33
 10001 011c 2E000000 		.4byte	.LFE33-.LFB33
 10002 0120 00000000 		.4byte	.LFB34
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 209


 10003 0124 2E000000 		.4byte	.LFE34-.LFB34
 10004 0128 00000000 		.4byte	.LFB35
 10005 012c 32000000 		.4byte	.LFE35-.LFB35
 10006 0130 00000000 		.4byte	.LFB36
 10007 0134 2E000000 		.4byte	.LFE36-.LFB36
 10008 0138 00000000 		.4byte	.LFB37
 10009 013c 18000000 		.4byte	.LFE37-.LFB37
 10010 0140 00000000 		.4byte	.LFB38
 10011 0144 32000000 		.4byte	.LFE38-.LFB38
 10012 0148 00000000 		.4byte	.LFB39
 10013 014c 52000000 		.4byte	.LFE39-.LFB39
 10014 0150 00000000 		.4byte	.LFB40
 10015 0154 48000000 		.4byte	.LFE40-.LFB40
 10016 0158 00000000 		.4byte	.LFB41
 10017 015c 48000000 		.4byte	.LFE41-.LFB41
 10018 0160 00000000 		.4byte	.LFB42
 10019 0164 B6000000 		.4byte	.LFE42-.LFB42
 10020 0168 00000000 		.4byte	.LFB43
 10021 016c C2000000 		.4byte	.LFE43-.LFB43
 10022 0170 00000000 		.4byte	.LFB44
 10023 0174 0E010000 		.4byte	.LFE44-.LFB44
 10024 0178 00000000 		.4byte	.LFB45
 10025 017c D2000000 		.4byte	.LFE45-.LFB45
 10026 0180 00000000 		.4byte	.LFB46
 10027 0184 4E010000 		.4byte	.LFE46-.LFB46
 10028 0188 00000000 		.4byte	.LFB47
 10029 018c 5A020000 		.4byte	.LFE47-.LFB47
 10030 0190 00000000 		.4byte	.LFB48
 10031 0194 F2000000 		.4byte	.LFE48-.LFB48
 10032 0198 00000000 		.4byte	.LFB49
 10033 019c 16010000 		.4byte	.LFE49-.LFB49
 10034 01a0 00000000 		.4byte	.LFB50
 10035 01a4 34000000 		.4byte	.LFE50-.LFB50
 10036 01a8 00000000 		.4byte	.LFB51
 10037 01ac 0E000000 		.4byte	.LFE51-.LFB51
 10038 01b0 00000000 		.4byte	.LFB52
 10039 01b4 16000000 		.4byte	.LFE52-.LFB52
 10040 01b8 00000000 		.4byte	.LFB53
 10041 01bc 16000000 		.4byte	.LFE53-.LFB53
 10042 01c0 00000000 		.4byte	.LFB54
 10043 01c4 60010000 		.4byte	.LFE54-.LFB54
 10044 01c8 00000000 		.4byte	.LFB55
 10045 01cc 58000000 		.4byte	.LFE55-.LFB55
 10046 01d0 00000000 		.4byte	.LFB56
 10047 01d4 42000000 		.4byte	.LFE56-.LFB56
 10048 01d8 00000000 		.4byte	.LFB57
 10049 01dc 38000000 		.4byte	.LFE57-.LFB57
 10050 01e0 00000000 		.4byte	.LFB58
 10051 01e4 7E000000 		.4byte	.LFE58-.LFB58
 10052 01e8 00000000 		.4byte	.LFB59
 10053 01ec 78000000 		.4byte	.LFE59-.LFB59
 10054 01f0 00000000 		.4byte	.LFB60
 10055 01f4 1E000000 		.4byte	.LFE60-.LFB60
 10056 01f8 00000000 		.4byte	.LFB61
 10057 01fc 26000000 		.4byte	.LFE61-.LFB61
 10058 0200 00000000 		.4byte	.LFB62
 10059 0204 24000000 		.4byte	.LFE62-.LFB62
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 210


 10060 0208 00000000 		.4byte	.LFB63
 10061 020c 5A000000 		.4byte	.LFE63-.LFB63
 10062 0210 00000000 		.4byte	.LFB64
 10063 0214 B0000000 		.4byte	.LFE64-.LFB64
 10064 0218 00000000 		.4byte	.LFB65
 10065 021c 1E000000 		.4byte	.LFE65-.LFB65
 10066 0220 00000000 		.4byte	.LFB66
 10067 0224 1E000000 		.4byte	.LFE66-.LFB66
 10068 0228 00000000 		.4byte	.LFB67
 10069 022c B4000000 		.4byte	.LFE67-.LFB67
 10070 0230 00000000 		.4byte	.LFB68
 10071 0234 68000000 		.4byte	.LFE68-.LFB68
 10072 0238 00000000 		.4byte	.LFB69
 10073 023c 2A000000 		.4byte	.LFE69-.LFB69
 10074 0240 00000000 		.4byte	.LFB70
 10075 0244 26000000 		.4byte	.LFE70-.LFB70
 10076 0248 00000000 		.4byte	.LFB71
 10077 024c 8A000000 		.4byte	.LFE71-.LFB71
 10078 0250 00000000 		.4byte	.LFB72
 10079 0254 00010000 		.4byte	.LFE72-.LFB72
 10080 0258 00000000 		.4byte	0
 10081 025c 00000000 		.4byte	0
 10082              		.section	.debug_ranges,"",%progbits
 10083              	.Ldebug_ranges0:
 10084 0000 00000000 		.4byte	.LFB0
 10085 0004 0E000000 		.4byte	.LFE0
 10086 0008 00000000 		.4byte	.LFB1
 10087 000c 26000000 		.4byte	.LFE1
 10088 0010 00000000 		.4byte	.LFB2
 10089 0014 00010000 		.4byte	.LFE2
 10090 0018 00000000 		.4byte	.LFB3
 10091 001c 0A010000 		.4byte	.LFE3
 10092 0020 00000000 		.4byte	.LFB4
 10093 0024 3E000000 		.4byte	.LFE4
 10094 0028 00000000 		.4byte	.LFB5
 10095 002c 3E000000 		.4byte	.LFE5
 10096 0030 00000000 		.4byte	.LFB6
 10097 0034 1E000000 		.4byte	.LFE6
 10098 0038 00000000 		.4byte	.LFB7
 10099 003c 1E000000 		.4byte	.LFE7
 10100 0040 00000000 		.4byte	.LFB8
 10101 0044 22000000 		.4byte	.LFE8
 10102 0048 00000000 		.4byte	.LFB9
 10103 004c 28000000 		.4byte	.LFE9
 10104 0050 00000000 		.4byte	.LFB10
 10105 0054 22000000 		.4byte	.LFE10
 10106 0058 00000000 		.4byte	.LFB11
 10107 005c 28000000 		.4byte	.LFE11
 10108 0060 00000000 		.4byte	.LFB12
 10109 0064 22000000 		.4byte	.LFE12
 10110 0068 00000000 		.4byte	.LFB13
 10111 006c 28000000 		.4byte	.LFE13
 10112 0070 00000000 		.4byte	.LFB14
 10113 0074 24000000 		.4byte	.LFE14
 10114 0078 00000000 		.4byte	.LFB15
 10115 007c 24000000 		.4byte	.LFE15
 10116 0080 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 211


 10117 0084 24000000 		.4byte	.LFE16
 10118 0088 00000000 		.4byte	.LFB17
 10119 008c 38000000 		.4byte	.LFE17
 10120 0090 00000000 		.4byte	.LFB18
 10121 0094 3E000000 		.4byte	.LFE18
 10122 0098 00000000 		.4byte	.LFB19
 10123 009c 38000000 		.4byte	.LFE19
 10124 00a0 00000000 		.4byte	.LFB20
 10125 00a4 3E000000 		.4byte	.LFE20
 10126 00a8 00000000 		.4byte	.LFB21
 10127 00ac 34000000 		.4byte	.LFE21
 10128 00b0 00000000 		.4byte	.LFB22
 10129 00b4 38000000 		.4byte	.LFE22
 10130 00b8 00000000 		.4byte	.LFB23
 10131 00bc 3E000000 		.4byte	.LFE23
 10132 00c0 00000000 		.4byte	.LFB24
 10133 00c4 38000000 		.4byte	.LFE24
 10134 00c8 00000000 		.4byte	.LFB25
 10135 00cc 3E000000 		.4byte	.LFE25
 10136 00d0 00000000 		.4byte	.LFB26
 10137 00d4 3E000000 		.4byte	.LFE26
 10138 00d8 00000000 		.4byte	.LFB27
 10139 00dc 32000000 		.4byte	.LFE27
 10140 00e0 00000000 		.4byte	.LFB28
 10141 00e4 32000000 		.4byte	.LFE28
 10142 00e8 00000000 		.4byte	.LFB29
 10143 00ec 34000000 		.4byte	.LFE29
 10144 00f0 00000000 		.4byte	.LFB30
 10145 00f4 32000000 		.4byte	.LFE30
 10146 00f8 00000000 		.4byte	.LFB31
 10147 00fc 2E000000 		.4byte	.LFE31
 10148 0100 00000000 		.4byte	.LFB32
 10149 0104 32000000 		.4byte	.LFE32
 10150 0108 00000000 		.4byte	.LFB33
 10151 010c 2E000000 		.4byte	.LFE33
 10152 0110 00000000 		.4byte	.LFB34
 10153 0114 2E000000 		.4byte	.LFE34
 10154 0118 00000000 		.4byte	.LFB35
 10155 011c 32000000 		.4byte	.LFE35
 10156 0120 00000000 		.4byte	.LFB36
 10157 0124 2E000000 		.4byte	.LFE36
 10158 0128 00000000 		.4byte	.LFB37
 10159 012c 18000000 		.4byte	.LFE37
 10160 0130 00000000 		.4byte	.LFB38
 10161 0134 32000000 		.4byte	.LFE38
 10162 0138 00000000 		.4byte	.LFB39
 10163 013c 52000000 		.4byte	.LFE39
 10164 0140 00000000 		.4byte	.LFB40
 10165 0144 48000000 		.4byte	.LFE40
 10166 0148 00000000 		.4byte	.LFB41
 10167 014c 48000000 		.4byte	.LFE41
 10168 0150 00000000 		.4byte	.LFB42
 10169 0154 B6000000 		.4byte	.LFE42
 10170 0158 00000000 		.4byte	.LFB43
 10171 015c C2000000 		.4byte	.LFE43
 10172 0160 00000000 		.4byte	.LFB44
 10173 0164 0E010000 		.4byte	.LFE44
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 212


 10174 0168 00000000 		.4byte	.LFB45
 10175 016c D2000000 		.4byte	.LFE45
 10176 0170 00000000 		.4byte	.LFB46
 10177 0174 4E010000 		.4byte	.LFE46
 10178 0178 00000000 		.4byte	.LFB47
 10179 017c 5A020000 		.4byte	.LFE47
 10180 0180 00000000 		.4byte	.LFB48
 10181 0184 F2000000 		.4byte	.LFE48
 10182 0188 00000000 		.4byte	.LFB49
 10183 018c 16010000 		.4byte	.LFE49
 10184 0190 00000000 		.4byte	.LFB50
 10185 0194 34000000 		.4byte	.LFE50
 10186 0198 00000000 		.4byte	.LFB51
 10187 019c 0E000000 		.4byte	.LFE51
 10188 01a0 00000000 		.4byte	.LFB52
 10189 01a4 16000000 		.4byte	.LFE52
 10190 01a8 00000000 		.4byte	.LFB53
 10191 01ac 16000000 		.4byte	.LFE53
 10192 01b0 00000000 		.4byte	.LFB54
 10193 01b4 60010000 		.4byte	.LFE54
 10194 01b8 00000000 		.4byte	.LFB55
 10195 01bc 58000000 		.4byte	.LFE55
 10196 01c0 00000000 		.4byte	.LFB56
 10197 01c4 42000000 		.4byte	.LFE56
 10198 01c8 00000000 		.4byte	.LFB57
 10199 01cc 38000000 		.4byte	.LFE57
 10200 01d0 00000000 		.4byte	.LFB58
 10201 01d4 7E000000 		.4byte	.LFE58
 10202 01d8 00000000 		.4byte	.LFB59
 10203 01dc 78000000 		.4byte	.LFE59
 10204 01e0 00000000 		.4byte	.LFB60
 10205 01e4 1E000000 		.4byte	.LFE60
 10206 01e8 00000000 		.4byte	.LFB61
 10207 01ec 26000000 		.4byte	.LFE61
 10208 01f0 00000000 		.4byte	.LFB62
 10209 01f4 24000000 		.4byte	.LFE62
 10210 01f8 00000000 		.4byte	.LFB63
 10211 01fc 5A000000 		.4byte	.LFE63
 10212 0200 00000000 		.4byte	.LFB64
 10213 0204 B0000000 		.4byte	.LFE64
 10214 0208 00000000 		.4byte	.LFB65
 10215 020c 1E000000 		.4byte	.LFE65
 10216 0210 00000000 		.4byte	.LFB66
 10217 0214 1E000000 		.4byte	.LFE66
 10218 0218 00000000 		.4byte	.LFB67
 10219 021c B4000000 		.4byte	.LFE67
 10220 0220 00000000 		.4byte	.LFB68
 10221 0224 68000000 		.4byte	.LFE68
 10222 0228 00000000 		.4byte	.LFB69
 10223 022c 2A000000 		.4byte	.LFE69
 10224 0230 00000000 		.4byte	.LFB70
 10225 0234 26000000 		.4byte	.LFE70
 10226 0238 00000000 		.4byte	.LFB71
 10227 023c 8A000000 		.4byte	.LFE71
 10228 0240 00000000 		.4byte	.LFB72
 10229 0244 00010000 		.4byte	.LFE72
 10230 0248 00000000 		.4byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 213


 10231 024c 00000000 		.4byte	0
 10232              		.section	.debug_line,"",%progbits
 10233              	.Ldebug_line0:
 10234 0000 0F090000 		.section	.debug_str,"MS",%progbits,1
 10234      02004200 
 10234      00000201 
 10234      FB0E0D00 
 10234      01010101 
 10235              	.LASF57:
 10236 0000 4554485F 		.ascii	"ETH_GetSocketRxMemSize\000"
 10236      47657453 
 10236      6F636B65 
 10236      7452784D 
 10236      656D5369 
 10237              	.LASF119:
 10238 0017 4554485F 		.ascii	"ETH_SocketSendMac\000"
 10238      536F636B 
 10238      65745365 
 10238      6E644D61 
 10238      6300
 10239              	.LASF41:
 10240 0029 4554485F 		.ascii	"ETH_SetSourceMAC\000"
 10240      53657453 
 10240      6F757263 
 10240      654D4143 
 10240      00
 10241              	.LASF50:
 10242 003a 4554485F 		.ascii	"ETH_SetMode\000"
 10242      5365744D 
 10242      6F646500 
 10243              	.LASF97:
 10244 0046 4554485F 		.ascii	"ETH_Start\000"
 10244      53746172 
 10244      7400
 10245              	.LASF92:
 10246 0050 666C6167 		.ascii	"flags\000"
 10246      7300
 10247              	.LASF21:
 10248 0056 54784275 		.ascii	"TxBufferSize\000"
 10248      66666572 
 10248      53697A65 
 10248      00
 10249              	.LASF88:
 10250 0063 62756666 		.ascii	"buffer\000"
 10250      657200
 10251              	.LASF142:
 10252 006a 4554485F 		.ascii	"ETH_SocketConfig\000"
 10252      536F636B 
 10252      6574436F 
 10252      6E666967 
 10252      00
 10253              	.LASF8:
 10254 007b 756E7369 		.ascii	"unsigned int\000"
 10254      676E6564 
 10254      20696E74 
 10254      00
 10255              	.LASF64:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 214


 10256 0088 4554485F 		.ascii	"ETH_GetSocketIR\000"
 10256      47657453 
 10256      6F636B65 
 10256      74495200 
 10257              	.LASF76:
 10258 0098 4554485F 		.ascii	"ETH_SetSocketRxReadPtr\000"
 10258      53657453 
 10258      6F636B65 
 10258      74527852 
 10258      65616450 
 10259              	.LASF44:
 10260 00af 4554485F 		.ascii	"ETH_ChipRead16\000"
 10260      43686970 
 10260      52656164 
 10260      313600
 10261              	.LASF38:
 10262 00be 7278436F 		.ascii	"rxCount\000"
 10262      756E7400 
 10263              	.LASF33:
 10264 00c6 7278496E 		.ascii	"rxIndex\000"
 10264      64657800 
 10265              	.LASF135:
 10266 00ce 4554485F 		.ascii	"ETH_UdpReceive\000"
 10266      55647052 
 10266      65636569 
 10266      766500
 10267              	.LASF140:
 10268 00dd 4554485F 		.ascii	"ETH_SOCKET_RX_BASE\000"
 10268      534F434B 
 10268      45545F52 
 10268      585F4241 
 10268      534500
 10269              	.LASF71:
 10270 00f0 4554485F 		.ascii	"ETH_SetSocketDestPort\000"
 10270      53657453 
 10270      6F636B65 
 10270      74446573 
 10270      74506F72 
 10271              	.LASF51:
 10272 0106 6D6F6465 		.ascii	"mode\000"
 10272      00
 10273              	.LASF95:
 10274 010b 67617465 		.ascii	"gateway\000"
 10274      77617900 
 10275              	.LASF74:
 10276 0113 4554485F 		.ascii	"ETH_GetSocketTxWritePtr\000"
 10276      47657453 
 10276      6F636B65 
 10276      74547857 
 10276      72697465 
 10277              	.LASF85:
 10278 012b 4554485F 		.ascii	"ETH_GetRxSize\000"
 10278      47657452 
 10278      7853697A 
 10278      6500
 10279              	.LASF20:
 10280 0139 53657276 		.ascii	"ServerFlag\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 215


 10280      6572466C 
 10280      616700
 10281              	.LASF134:
 10282 0144 4554485F 		.ascii	"ETH_UdpSend\000"
 10282      55647053 
 10282      656E6400 
 10283              	.LASF31:
 10284 0150 4554485F 		.ascii	"ETH_ChipWrite\000"
 10284      43686970 
 10284      57726974 
 10284      6500
 10285              	.LASF128:
 10286 015e 54785369 		.ascii	"TxSize\000"
 10286      7A6500
 10287              	.LASF40:
 10288 0165 62696756 		.ascii	"bigVal\000"
 10288      616C00
 10289              	.LASF111:
 10290 016c 4554485F 		.ascii	"ETH_SetIP\000"
 10290      53657449 
 10290      5000
 10291              	.LASF53:
 10292 0176 4554485F 		.ascii	"ETH_SetIR\000"
 10292      53657449 
 10292      5200
 10293              	.LASF73:
 10294 0180 4554485F 		.ascii	"ETH_SetSocketTxWritePtr\000"
 10294      53657453 
 10294      6F636B65 
 10294      74547857 
 10294      72697465 
 10295              	.LASF12:
 10296 0198 666C6F61 		.ascii	"float\000"
 10296      7400
 10297              	.LASF60:
 10298 019e 4554485F 		.ascii	"ETH_SetSocketMode\000"
 10298      53657453 
 10298      6F636B65 
 10298      744D6F64 
 10298      6500
 10299              	.LASF35:
 10300 01b0 72784C65 		.ascii	"rxLen\000"
 10300      6E00
 10301              	.LASF89:
 10302 01b6 62617365 		.ascii	"base\000"
 10302      00
 10303              	.LASF96:
 10304 01bb 696E6465 		.ascii	"index\000"
 10304      7800
 10305              	.LASF29:
 10306 01c1 7478436F 		.ascii	"txCount\000"
 10306      756E7400 
 10307              	.LASF139:
 10308 01c9 4554485F 		.ascii	"ETH_SOCKET_TX_BASE\000"
 10308      534F434B 
 10308      45545F54 
 10308      585F4241 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 216


 10308      534500
 10309              	.LASF105:
 10310 01dc 72657375 		.ascii	"result\000"
 10310      6C7400
 10311              	.LASF7:
 10312 01e3 6C6F6E67 		.ascii	"long long unsigned int\000"
 10312      206C6F6E 
 10312      6720756E 
 10312      7369676E 
 10312      65642069 
 10313              	.LASF87:
 10314 01fa 6F666673 		.ascii	"offset\000"
 10314      657400
 10315              	.LASF58:
 10316 0201 4554485F 		.ascii	"ETH_SetSocketTxMemSize\000"
 10316      53657453 
 10316      6F636B65 
 10316      7454784D 
 10316      656D5369 
 10317              	.LASF94:
 10318 0218 7375626E 		.ascii	"subnet\000"
 10318      657400
 10319              	.LASF39:
 10320 021f 4554485F 		.ascii	"ETH_ChipWrite16\000"
 10320      43686970 
 10320      57726974 
 10320      65313600 
 10321              	.LASF146:
 10322 022f 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ETH.c\000"
 10322      6E657261 
 10322      7465645F 
 10322      536F7572 
 10322      63655C50 
 10323              	.LASF48:
 10324 024e 4554485F 		.ascii	"ETH_SetSourceIP\000"
 10324      53657453 
 10324      6F757263 
 10324      65495000 
 10325              	.LASF59:
 10326 025e 4554485F 		.ascii	"ETH_GetSocketTxMemSize\000"
 10326      47657453 
 10326      6F636B65 
 10326      7454784D 
 10326      656D5369 
 10327              	.LASF82:
 10328 0275 4554485F 		.ascii	"ETH_GetTxFreeSize\000"
 10328      47657454 
 10328      78467265 
 10328      6553697A 
 10328      6500
 10329              	.LASF123:
 10330 0287 4554485F 		.ascii	"ETH_TcpStartServerWait\000"
 10330      54637053 
 10330      74617274 
 10330      53657276 
 10330      65725761 
 10331              	.LASF101:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 217


 10332 029e 636F756E 		.ascii	"counter\000"
 10332      74657200 
 10333              	.LASF104:
 10334 02a6 6D616353 		.ascii	"macString\000"
 10334      7472696E 
 10334      6700
 10335              	.LASF72:
 10336 02b0 4554485F 		.ascii	"ETH_GetSocketTxFree\000"
 10336      47657453 
 10336      6F636B65 
 10336      74547846 
 10336      72656500 
 10337              	.LASF147:
 10338 02c4 433A5C55 		.ascii	"C:\\Users\\chuck.erhardt\\Documents\\GitHub\\PSoC-W"
 10338      73657273 
 10338      5C636875 
 10338      636B2E65 
 10338      72686172 
 10339 02f2 35313030 		.ascii	"5100-Driver\\FreeSoC Explorer - W5500 ioShield-A.cy"
 10339      2D447269 
 10339      7665725C 
 10339      46726565 
 10339      536F4320 
 10340 0324 64736E00 		.ascii	"dsn\000"
 10341              	.LASF102:
 10342 0328 64696E64 		.ascii	"dindex\000"
 10342      657800
 10343              	.LASF36:
 10344 032f 74784279 		.ascii	"txBytes\000"
 10344      74657300 
 10345              	.LASF19:
 10346 0337 536F7572 		.ascii	"SourcePort\000"
 10346      6365506F 
 10346      727400
 10347              	.LASF84:
 10348 0342 7365636F 		.ascii	"second\000"
 10348      6E6400
 10349              	.LASF52:
 10350 0349 4554485F 		.ascii	"ETH_GetMode\000"
 10350      4765744D 
 10350      6F646500 
 10351              	.LASF148:
 10352 0355 4554485F 		.ascii	"ETH_GetIP\000"
 10352      47657449 
 10352      5000
 10353              	.LASF49:
 10354 035f 4554485F 		.ascii	"ETH_GetSourceIP\000"
 10354      47657453 
 10354      6F757263 
 10354      65495000 
 10355              	.LASF22:
 10356 036f 52784275 		.ascii	"RxBufferSize\000"
 10356      66666572 
 10356      53697A65 
 10356      00
 10357              	.LASF116:
 10358 037c 4554485F 		.ascii	"ETH_SocketProcessConnections\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 218


 10358      536F636B 
 10358      65745072 
 10358      6F636573 
 10358      73436F6E 
 10359              	.LASF14:
 10360 0399 63686172 		.ascii	"char\000"
 10360      00
 10361              	.LASF61:
 10362 039e 4554485F 		.ascii	"ETH_SetSocketCommand\000"
 10362      53657453 
 10362      6F636B65 
 10362      74436F6D 
 10362      6D616E64 
 10363              	.LASF117:
 10364 03b3 4554485F 		.ascii	"ETH_SocketEstablished\000"
 10364      536F636B 
 10364      65744573 
 10364      7461626C 
 10364      69736865 
 10365              	.LASF10:
 10366 03c9 75696E74 		.ascii	"uint16\000"
 10366      313600
 10367              	.LASF132:
 10368 03d0 4554485F 		.ascii	"ETH_TcpPrint\000"
 10368      54637050 
 10368      72696E74 
 10368      00
 10369              	.LASF113:
 10370 03dd 4554485F 		.ascii	"ETH_GetMAC\000"
 10370      4765744D 
 10370      414300
 10371              	.LASF121:
 10372 03e8 4554485F 		.ascii	"ETH_TcpOpen\000"
 10372      5463704F 
 10372      70656E00 
 10373              	.LASF75:
 10374 03f4 4554485F 		.ascii	"ETH_GetSocketRxSize\000"
 10374      47657453 
 10374      6F636B65 
 10374      74527853 
 10374      697A6500 
 10375              	.LASF108:
 10376 0408 69704279 		.ascii	"ipBytes\000"
 10376      74657300 
 10377              	.LASF144:
 10378 0410 4554485F 		.ascii	"ETH_MAC\000"
 10378      4D414300 
 10379              	.LASF112:
 10380 0418 4554485F 		.ascii	"ETH_SetMAC\000"
 10380      5365744D 
 10380      414300
 10381              	.LASF103:
 10382 0423 4554485F 		.ascii	"ETH_ParseMAC\000"
 10382      50617273 
 10382      654D4143 
 10382      00
 10383              	.LASF120:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 219


 10384 0430 4554485F 		.ascii	"ETH_SocketRxDataWaiting\000"
 10384      536F636B 
 10384      65745278 
 10384      44617461 
 10384      57616974 
 10385              	.LASF6:
 10386 0448 6C6F6E67 		.ascii	"long long int\000"
 10386      206C6F6E 
 10386      6720696E 
 10386      7400
 10387              	.LASF130:
 10388 0456 4554485F 		.ascii	"ETH_TcpReceive\000"
 10388      54637052 
 10388      65636569 
 10388      766500
 10389              	.LASF118:
 10390 0465 4554485F 		.ascii	"ETH_SocketSend\000"
 10390      536F636B 
 10390      65745365 
 10390      6E6400
 10391              	.LASF77:
 10392 0474 4554485F 		.ascii	"ETH_GetSocketRxReadPtr\000"
 10392      47657453 
 10392      6F636B65 
 10392      74527852 
 10392      65616450 
 10393              	.LASF28:
 10394 048b 74784C65 		.ascii	"txLen\000"
 10394      6E00
 10395              	.LASF25:
 10396 0491 4554485F 		.ascii	"ETH_ChipDeSelect\000"
 10396      43686970 
 10396      44655365 
 10396      6C656374 
 10396      00
 10397              	.LASF100:
 10398 04a2 64696769 		.ascii	"digit\000"
 10398      7400
 10399              	.LASF17:
 10400 04a8 50726F74 		.ascii	"Protocol\000"
 10400      6F636F6C 
 10400      00
 10401              	.LASF56:
 10402 04b1 73697A65 		.ascii	"size\000"
 10402      00
 10403              	.LASF11:
 10404 04b6 75696E74 		.ascii	"uint32\000"
 10404      333200
 10405              	.LASF43:
 10406 04bd 4554485F 		.ascii	"ETH_SetGatewayAddress\000"
 10406      53657447 
 10406      61746577 
 10406      61794164 
 10406      64726573 
 10407              	.LASF70:
 10408 04d3 4554485F 		.ascii	"ETH_SetSocketDestIP\000"
 10408      53657453 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 220


 10408      6F636B65 
 10408      74446573 
 10408      74495000 
 10409              	.LASF23:
 10410 04e7 4554485F 		.ascii	"ETH_SOCKET\000"
 10410      534F434B 
 10410      455400
 10411              	.LASF99:
 10412 04f2 69705374 		.ascii	"ipString\000"
 10412      72696E67 
 10412      00
 10413              	.LASF62:
 10414 04fb 4554485F 		.ascii	"ETH_GetSocketCommand\000"
 10414      47657453 
 10414      6F636B65 
 10414      74436F6D 
 10414      6D616E64 
 10415              	.LASF115:
 10416 0510 4554485F 		.ascii	"ETH_SocketClose\000"
 10416      536F636B 
 10416      6574436C 
 10416      6F736500 
 10417              	.LASF65:
 10418 0520 4554485F 		.ascii	"ETH_GetSocketStatus\000"
 10418      47657453 
 10418      6F636B65 
 10418      74537461 
 10418      74757300 
 10419              	.LASF107:
 10420 0534 4554485F 		.ascii	"ETH_StringIP\000"
 10420      53747269 
 10420      6E674950 
 10420      00
 10421              	.LASF93:
 10422 0541 4554485F 		.ascii	"ETH_Init\000"
 10422      496E6974 
 10422      00
 10423              	.LASF133:
 10424 054a 4554485F 		.ascii	"ETH_UdpOpen\000"
 10424      5564704F 
 10424      70656E00 
 10425              	.LASF2:
 10426 0556 73686F72 		.ascii	"short int\000"
 10426      7420696E 
 10426      7400
 10427              	.LASF54:
 10428 0560 4554485F 		.ascii	"ETH_SetSocketRxMemSize\000"
 10428      53657453 
 10428      6F636B65 
 10428      7452784D 
 10428      656D5369 
 10429              	.LASF4:
 10430 0577 6C6F6E67 		.ascii	"long int\000"
 10430      20696E74 
 10430      00
 10431              	.LASF80:
 10432 0580 4554485F 		.ascii	"ETH_ExecuteSocketCommand\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 221


 10432      45786563 
 10432      75746553 
 10432      6F636B65 
 10432      74436F6D 
 10433              	.LASF27:
 10434 0599 6C656E67 		.ascii	"length\000"
 10434      746800
 10435              	.LASF66:
 10436 05a0 73746174 		.ascii	"status\000"
 10436      757300
 10437              	.LASF110:
 10438 05a7 74656D70 		.ascii	"temp\000"
 10438      00
 10439              	.LASF109:
 10440 05ac 776F726B 		.ascii	"work\000"
 10440      00
 10441              	.LASF55:
 10442 05b1 736F636B 		.ascii	"socket\000"
 10442      657400
 10443              	.LASF141:
 10444 05b8 4554485F 		.ascii	"ETH_W5500_BSB\000"
 10444      57353530 
 10444      305F4253 
 10444      4200
 10445              	.LASF129:
 10446 05c6 46726565 		.ascii	"FreeSpace\000"
 10446      53706163 
 10446      6500
 10447              	.LASF124:
 10448 05d0 4554485F 		.ascii	"ETH_TcpConnect\000"
 10448      54637043 
 10448      6F6E6E65 
 10448      637400
 10449              	.LASF126:
 10450 05df 4554485F 		.ascii	"ETH_TcpDisconnect\000"
 10450      54637044 
 10450      6973636F 
 10450      6E6E6563 
 10450      7400
 10451              	.LASF46:
 10452 05f1 4554485F 		.ascii	"ETH_SetSubnetMask\000"
 10452      53657453 
 10452      75626E65 
 10452      744D6173 
 10452      6B00
 10453              	.LASF78:
 10454 0603 4554485F 		.ascii	"ETH_SetSocketRxWritePtr\000"
 10454      53657453 
 10454      6F636B65 
 10454      74527857 
 10454      72697465 
 10455              	.LASF90:
 10456 061b 506F696E 		.ascii	"PointerOffset\000"
 10456      7465724F 
 10456      66667365 
 10456      7400
 10457              	.LASF79:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 222


 10458 0629 4554485F 		.ascii	"ETH_SetSocketTxReadPtr\000"
 10458      53657453 
 10458      6F636B65 
 10458      74547852 
 10458      65616450 
 10459              	.LASF137:
 10460 0640 5061636B 		.ascii	"PacketHeader\000"
 10460      65744865 
 10460      61646572 
 10460      00
 10461              	.LASF16:
 10462 064d 73697A65 		.ascii	"sizetype\000"
 10462      74797065 
 10462      00
 10463              	.LASF91:
 10464 0656 4554485F 		.ascii	"ETH_ProcessRxData\000"
 10464      50726F63 
 10464      65737352 
 10464      78446174 
 10464      6100
 10465              	.LASF5:
 10466 0668 6C6F6E67 		.ascii	"long unsigned int\000"
 10466      20756E73 
 10466      69676E65 
 10466      6420696E 
 10466      7400
 10467              	.LASF34:
 10468 067a 61646472 		.ascii	"address\000"
 10468      65737300 
 10469              	.LASF68:
 10470 0682 706F7274 		.ascii	"port\000"
 10470      00
 10471              	.LASF24:
 10472 0687 4554485F 		.ascii	"ETH_ChipSelect\000"
 10472      43686970 
 10472      53656C65 
 10472      637400
 10473              	.LASF122:
 10474 0696 4554485F 		.ascii	"ETH_TcpStartServer\000"
 10474      54637053 
 10474      74617274 
 10474      53657276 
 10474      657200
 10475              	.LASF18:
 10476 06a9 536F636B 		.ascii	"SocketFlags\000"
 10476      6574466C 
 10476      61677300 
 10477              	.LASF47:
 10478 06b5 4554485F 		.ascii	"ETH_GetSubnetMask\000"
 10478      47657453 
 10478      75626E65 
 10478      744D6173 
 10478      6B00
 10479              	.LASF15:
 10480 06c7 63797374 		.ascii	"cystatus\000"
 10480      61747573 
 10480      00
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 223


 10481              	.LASF1:
 10482 06d0 756E7369 		.ascii	"unsigned char\000"
 10482      676E6564 
 10482      20636861 
 10482      7200
 10483              	.LASF143:
 10484 06de 4554485F 		.ascii	"ETH_SubnetMask\000"
 10484      5375626E 
 10484      65744D61 
 10484      736B00
 10485              	.LASF81:
 10486 06ed 74696D65 		.ascii	"timeout\000"
 10486      6F757400 
 10487              	.LASF106:
 10488 06f5 4554485F 		.ascii	"ETH_StringMAC\000"
 10488      53747269 
 10488      6E674D41 
 10488      4300
 10489              	.LASF83:
 10490 0703 66697273 		.ascii	"first\000"
 10490      7400
 10491              	.LASF26:
 10492 0709 61646472 		.ascii	"addr\000"
 10492      00
 10493              	.LASF98:
 10494 070e 4554485F 		.ascii	"ETH_ParseIP\000"
 10494      50617273 
 10494      65495000 
 10495              	.LASF125:
 10496 071a 4554485F 		.ascii	"ETH_TcpConnected\000"
 10496      54637043 
 10496      6F6E6E65 
 10496      63746564 
 10496      00
 10497              	.LASF42:
 10498 072b 4554485F 		.ascii	"ETH_GetSourceMAC\000"
 10498      47657453 
 10498      6F757263 
 10498      654D4143 
 10498      00
 10499              	.LASF67:
 10500 073c 4554485F 		.ascii	"ETH_SetSocketSourcePort\000"
 10500      53657453 
 10500      6F636B65 
 10500      74536F75 
 10500      72636550 
 10501              	.LASF45:
 10502 0754 4554485F 		.ascii	"ETH_GetGatewayAddress\000"
 10502      47657447 
 10502      61746577 
 10502      61794164 
 10502      64726573 
 10503              	.LASF30:
 10504 076a 63726974 		.ascii	"crit\000"
 10504      00
 10505              	.LASF0:
 10506 076f 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 224


 10506      65642063 
 10506      68617200 
 10507              	.LASF3:
 10508 077b 73686F72 		.ascii	"short unsigned int\000"
 10508      7420756E 
 10508      7369676E 
 10508      65642069 
 10508      6E7400
 10509              	.LASF131:
 10510 078e 52785369 		.ascii	"RxSize\000"
 10510      7A6500
 10511              	.LASF145:
 10512 0795 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 10512      4320342E 
 10512      372E3320 
 10512      32303133 
 10512      30333132 
 10513 07c8 616E6368 		.ascii	"anch revision 196615]\000"
 10513      20726576 
 10513      6973696F 
 10513      6E203139 
 10513      36363135 
 10514              	.LASF37:
 10515 07de 64756D70 		.ascii	"dump\000"
 10515      00
 10516              	.LASF69:
 10517 07e3 4554485F 		.ascii	"ETH_SetSocketDestMAC\000"
 10517      53657453 
 10517      6F636B65 
 10517      74446573 
 10517      744D4143 
 10518              	.LASF9:
 10519 07f8 75696E74 		.ascii	"uint8\000"
 10519      3800
 10520              	.LASF13:
 10521 07fe 646F7562 		.ascii	"double\000"
 10521      6C6500
 10522              	.LASF86:
 10523 0805 4554485F 		.ascii	"ETH_ProcessTxData\000"
 10523      50726F63 
 10523      65737354 
 10523      78446174 
 10523      6100
 10524              	.LASF32:
 10525 0817 4554485F 		.ascii	"ETH_ChipRead\000"
 10525      43686970 
 10525      52656164 
 10525      00
 10526              	.LASF63:
 10527 0824 4554485F 		.ascii	"ETH_SetSocketIR\000"
 10527      53657453 
 10527      6F636B65 
 10527      74495200 
 10528              	.LASF136:
 10529 0834 5061636B 		.ascii	"PacketSize\000"
 10529      65745369 
 10529      7A6500
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccWRPeSc.s 			page 225


 10530              	.LASF127:
 10531 083f 4554485F 		.ascii	"ETH_TcpSend\000"
 10531      54637053 
 10531      656E6400 
 10532              	.LASF114:
 10533 084b 4554485F 		.ascii	"ETH_SocketOpen\000"
 10533      536F636B 
 10533      65744F70 
 10533      656E00
 10534              	.LASF138:
 10535 085a 5350495F 		.ascii	"SPI_initVar\000"
 10535      696E6974 
 10535      56617200 
 10536              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
