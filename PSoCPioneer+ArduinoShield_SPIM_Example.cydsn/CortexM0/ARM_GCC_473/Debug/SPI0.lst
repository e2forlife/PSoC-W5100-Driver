ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"SPI0.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SPI0_initVar
  18              		.bss
  19              		.type	SPI0_initVar, %object
  20              		.size	SPI0_initVar, 1
  21              	SPI0_initVar:
  22 0000 00       		.space	1
  23              		.comm	SPI0_swStatusTx,1,1
  24              		.comm	SPI0_swStatusRx,1,1
  25              		.section	.text.SPI0_Init,"ax",%progbits
  26              		.align	2
  27              		.global	SPI0_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	SPI0_Init, %function
  31              	SPI0_Init:
  32              	.LFB0:
  33              		.file 1 ".\\Generated_Source\\PSoC4\\SPI0.c"
   1:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/SPI0.c **** * File Name: SPI0.c
   3:.\Generated_Source\PSoC4/SPI0.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/SPI0.c **** *
   5:.\Generated_Source\PSoC4/SPI0.c **** * Description:
   6:.\Generated_Source\PSoC4/SPI0.c **** *  This file provides all API functionality of the SPI Master component.
   7:.\Generated_Source\PSoC4/SPI0.c **** *
   8:.\Generated_Source\PSoC4/SPI0.c **** * Note:
   9:.\Generated_Source\PSoC4/SPI0.c **** *  None.
  10:.\Generated_Source\PSoC4/SPI0.c **** *
  11:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/SPI0.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/SPI0.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/SPI0.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/SPI0.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/SPI0.c **** 
  18:.\Generated_Source\PSoC4/SPI0.c **** #include "SPI0_PVT.h"
  19:.\Generated_Source\PSoC4/SPI0.c **** 
  20:.\Generated_Source\PSoC4/SPI0.c **** #if(SPI0_TX_SOFTWARE_BUF_ENABLED)
  21:.\Generated_Source\PSoC4/SPI0.c ****     volatile uint8 SPI0_txBuffer[SPI0_TX_BUFFER_SIZE] = {0u};
  22:.\Generated_Source\PSoC4/SPI0.c ****     volatile uint8 SPI0_txBufferFull;
  23:.\Generated_Source\PSoC4/SPI0.c ****     volatile uint8 SPI0_txBufferRead;
  24:.\Generated_Source\PSoC4/SPI0.c ****     volatile uint8 SPI0_txBufferWrite;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 2


  25:.\Generated_Source\PSoC4/SPI0.c **** #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
  26:.\Generated_Source\PSoC4/SPI0.c **** 
  27:.\Generated_Source\PSoC4/SPI0.c **** #if(SPI0_RX_SOFTWARE_BUF_ENABLED)
  28:.\Generated_Source\PSoC4/SPI0.c ****     volatile uint8 SPI0_rxBuffer[SPI0_RX_BUFFER_SIZE] = {0u};
  29:.\Generated_Source\PSoC4/SPI0.c ****     volatile uint8 SPI0_rxBufferFull;
  30:.\Generated_Source\PSoC4/SPI0.c ****     volatile uint8 SPI0_rxBufferRead;
  31:.\Generated_Source\PSoC4/SPI0.c ****     volatile uint8 SPI0_rxBufferWrite;
  32:.\Generated_Source\PSoC4/SPI0.c **** #endif /* (SPI0_RX_SOFTWARE_BUF_ENABLED) */
  33:.\Generated_Source\PSoC4/SPI0.c **** 
  34:.\Generated_Source\PSoC4/SPI0.c **** uint8 SPI0_initVar = 0u;
  35:.\Generated_Source\PSoC4/SPI0.c **** 
  36:.\Generated_Source\PSoC4/SPI0.c **** volatile uint8 SPI0_swStatusTx;
  37:.\Generated_Source\PSoC4/SPI0.c **** volatile uint8 SPI0_swStatusRx;
  38:.\Generated_Source\PSoC4/SPI0.c **** 
  39:.\Generated_Source\PSoC4/SPI0.c **** 
  40:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
  41:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_Init
  42:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
  43:.\Generated_Source\PSoC4/SPI0.c **** *
  44:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
  45:.\Generated_Source\PSoC4/SPI0.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:.\Generated_Source\PSoC4/SPI0.c **** *
  47:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
  48:.\Generated_Source\PSoC4/SPI0.c **** *  None.
  49:.\Generated_Source\PSoC4/SPI0.c **** *
  50:.\Generated_Source\PSoC4/SPI0.c **** * Return:
  51:.\Generated_Source\PSoC4/SPI0.c **** *  None.
  52:.\Generated_Source\PSoC4/SPI0.c **** *
  53:.\Generated_Source\PSoC4/SPI0.c **** * Side Effects:
  54:.\Generated_Source\PSoC4/SPI0.c **** *  When this function is called it initializes all of the necessary parameters
  55:.\Generated_Source\PSoC4/SPI0.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:.\Generated_Source\PSoC4/SPI0.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:.\Generated_Source\PSoC4/SPI0.c **** *  clearing the FIFO and Status Register.
  58:.\Generated_Source\PSoC4/SPI0.c **** *
  59:.\Generated_Source\PSoC4/SPI0.c **** * Reentrant:
  60:.\Generated_Source\PSoC4/SPI0.c **** *  No.
  61:.\Generated_Source\PSoC4/SPI0.c **** *
  62:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_Init(void) 
  64:.\Generated_Source\PSoC4/SPI0.c **** {
  34              		.loc 1 64 0
  35              		.cfi_startproc
  36 0000 80B5     		push	{r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              	.LCFI1:
  43              		.cfi_def_cfa_register 7
  65:.\Generated_Source\PSoC4/SPI0.c ****     /* Initialize the Bit counter */
  66:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_COUNTER_PERIOD_REG = SPI0_BITCTR_INIT;
  44              		.loc 1 66 0
  45 0004 084B     		ldr	r3, .L2
  46 0006 0F22     		mov	r2, #15
  47 0008 1A70     		strb	r2, [r3]
  67:.\Generated_Source\PSoC4/SPI0.c **** 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 3


  68:.\Generated_Source\PSoC4/SPI0.c ****     /* Init TX ISR  */
  69:.\Generated_Source\PSoC4/SPI0.c ****     #if(0u != SPI0_INTERNAL_TX_INT_ENABLED)
  70:.\Generated_Source\PSoC4/SPI0.c ****         CyIntDisable         (SPI0_TX_ISR_NUMBER);
  71:.\Generated_Source\PSoC4/SPI0.c ****         CyIntSetPriority     (SPI0_TX_ISR_NUMBER,  SPI0_TX_ISR_PRIORITY);
  72:.\Generated_Source\PSoC4/SPI0.c ****         (void) CyIntSetVector(SPI0_TX_ISR_NUMBER, &SPI0_TX_ISR);
  73:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_TX_INT_ENABLED) */
  74:.\Generated_Source\PSoC4/SPI0.c **** 
  75:.\Generated_Source\PSoC4/SPI0.c ****     /* Init RX ISR  */
  76:.\Generated_Source\PSoC4/SPI0.c ****     #if(0u != SPI0_INTERNAL_RX_INT_ENABLED)
  77:.\Generated_Source\PSoC4/SPI0.c ****         CyIntDisable         (SPI0_RX_ISR_NUMBER);
  78:.\Generated_Source\PSoC4/SPI0.c ****         CyIntSetPriority     (SPI0_RX_ISR_NUMBER,  SPI0_RX_ISR_PRIORITY);
  79:.\Generated_Source\PSoC4/SPI0.c ****         (void) CyIntSetVector(SPI0_RX_ISR_NUMBER, &SPI0_RX_ISR);
  80:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_RX_INT_ENABLED) */
  81:.\Generated_Source\PSoC4/SPI0.c **** 
  82:.\Generated_Source\PSoC4/SPI0.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_ClearFIFO();
  48              		.loc 1 83 0
  49 000a FFF7FEFF 		bl	SPI0_ClearFIFO
  84:.\Generated_Source\PSoC4/SPI0.c **** 
  85:.\Generated_Source\PSoC4/SPI0.c ****     #if(SPI0_RX_SOFTWARE_BUF_ENABLED)
  86:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_rxBufferFull  = 0u;
  87:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_rxBufferRead  = 0u;
  88:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_rxBufferWrite = 0u;
  89:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (SPI0_RX_SOFTWARE_BUF_ENABLED) */
  90:.\Generated_Source\PSoC4/SPI0.c **** 
  91:.\Generated_Source\PSoC4/SPI0.c ****     #if(SPI0_TX_SOFTWARE_BUF_ENABLED)
  92:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_txBufferFull  = 0u;
  93:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_txBufferRead  = 0u;
  94:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_txBufferWrite = 0u;
  95:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
  96:.\Generated_Source\PSoC4/SPI0.c **** 
  97:.\Generated_Source\PSoC4/SPI0.c ****     (void) SPI0_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  50              		.loc 1 97 0
  51 000e FFF7FEFF 		bl	SPI0_ReadTxStatus
  98:.\Generated_Source\PSoC4/SPI0.c ****     (void) SPI0_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  52              		.loc 1 98 0
  53 0012 FFF7FEFF 		bl	SPI0_ReadRxStatus
  99:.\Generated_Source\PSoC4/SPI0.c **** 
 100:.\Generated_Source\PSoC4/SPI0.c ****     /* Configure TX and RX interrupt mask */
 101:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_TX_STATUS_MASK_REG = SPI0_TX_INIT_INTERRUPTS_MASK;
  54              		.loc 1 101 0
  55 0016 054B     		ldr	r3, .L2+4
  56 0018 0022     		mov	r2, #0
  57 001a 1A70     		strb	r2, [r3]
 102:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_RX_STATUS_MASK_REG = SPI0_RX_INIT_INTERRUPTS_MASK;
  58              		.loc 1 102 0
  59 001c 044B     		ldr	r3, .L2+8
  60 001e 0022     		mov	r2, #0
  61 0020 1A70     		strb	r2, [r3]
 103:.\Generated_Source\PSoC4/SPI0.c **** }
  62              		.loc 1 103 0
  63 0022 BD46     		mov	sp, r7
  64              		@ sp needed for prologue
  65 0024 80BD     		pop	{r7, pc}
  66              	.L3:
  67 0026 C046     		.align	2
  68              	.L2:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 4


  69 0028 80000F40 		.word	1074724992
  70 002c 83000F40 		.word	1074724995
  71 0030 82000F40 		.word	1074724994
  72              		.cfi_endproc
  73              	.LFE0:
  74              		.size	SPI0_Init, .-SPI0_Init
  75              		.section	.text.SPI0_Enable,"ax",%progbits
  76              		.align	2
  77              		.global	SPI0_Enable
  78              		.code	16
  79              		.thumb_func
  80              		.type	SPI0_Enable, %function
  81              	SPI0_Enable:
  82              	.LFB1:
 104:.\Generated_Source\PSoC4/SPI0.c **** 
 105:.\Generated_Source\PSoC4/SPI0.c **** 
 106:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 107:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_Enable
 108:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 109:.\Generated_Source\PSoC4/SPI0.c **** *
 110:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 111:.\Generated_Source\PSoC4/SPI0.c **** *  Enable SPIM component.
 112:.\Generated_Source\PSoC4/SPI0.c **** *
 113:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 114:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 115:.\Generated_Source\PSoC4/SPI0.c **** *
 116:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 117:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 118:.\Generated_Source\PSoC4/SPI0.c **** *
 119:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 120:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_Enable(void) 
 121:.\Generated_Source\PSoC4/SPI0.c **** {
  83              		.loc 1 121 0
  84              		.cfi_startproc
  85 0000 90B5     		push	{r4, r7, lr}
  86              	.LCFI2:
  87              		.cfi_def_cfa_offset 12
  88              		.cfi_offset 4, -12
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 83B0     		sub	sp, sp, #12
  92              	.LCFI3:
  93              		.cfi_def_cfa_offset 24
  94 0004 00AF     		add	r7, sp, #0
  95              	.LCFI4:
  96              		.cfi_def_cfa_register 7
 122:.\Generated_Source\PSoC4/SPI0.c ****     uint8 enableInterrupts;
 123:.\Generated_Source\PSoC4/SPI0.c **** 
 124:.\Generated_Source\PSoC4/SPI0.c ****     enableInterrupts = CyEnterCriticalSection();
  97              		.loc 1 124 0
  98 0006 FC1D     		add	r4, r7, #7
  99 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 100 000c 031C     		mov	r3, r0
 101 000e 2370     		strb	r3, [r4]
 125:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_COUNTER_CONTROL_REG |= SPI0_CNTR_ENABLE;
 102              		.loc 1 125 0
 103 0010 124B     		ldr	r3, .L5
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 5


 104 0012 124A     		ldr	r2, .L5
 105 0014 1278     		ldrb	r2, [r2]
 106 0016 D2B2     		uxtb	r2, r2
 107 0018 2021     		mov	r1, #32
 108 001a 0A43     		orr	r2, r1
 109 001c D2B2     		uxtb	r2, r2
 110 001e 1A70     		strb	r2, [r3]
 126:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_TX_STATUS_ACTL_REG  |= SPI0_INT_ENABLE;
 111              		.loc 1 126 0
 112 0020 0F4B     		ldr	r3, .L5+4
 113 0022 0F4A     		ldr	r2, .L5+4
 114 0024 1278     		ldrb	r2, [r2]
 115 0026 D2B2     		uxtb	r2, r2
 116 0028 1021     		mov	r1, #16
 117 002a 0A43     		orr	r2, r1
 118 002c D2B2     		uxtb	r2, r2
 119 002e 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_RX_STATUS_ACTL_REG  |= SPI0_INT_ENABLE;
 120              		.loc 1 127 0
 121 0030 0C4B     		ldr	r3, .L5+8
 122 0032 0C4A     		ldr	r2, .L5+8
 123 0034 1278     		ldrb	r2, [r2]
 124 0036 D2B2     		uxtb	r2, r2
 125 0038 1021     		mov	r1, #16
 126 003a 0A43     		orr	r2, r1
 127 003c D2B2     		uxtb	r2, r2
 128 003e 1A70     		strb	r2, [r3]
 128:.\Generated_Source\PSoC4/SPI0.c ****     CyExitCriticalSection(enableInterrupts);
 129              		.loc 1 128 0
 130 0040 FB1D     		add	r3, r7, #7
 131 0042 1B78     		ldrb	r3, [r3]
 132 0044 181C     		mov	r0, r3
 133 0046 FFF7FEFF 		bl	CyExitCriticalSection
 129:.\Generated_Source\PSoC4/SPI0.c **** 
 130:.\Generated_Source\PSoC4/SPI0.c ****     #if(0u != SPI0_INTERNAL_CLOCK)
 131:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_IntClock_Enable();
 134              		.loc 1 131 0
 135 004a FFF7FEFF 		bl	SPI0_IntClock_Start
 132:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_CLOCK) */
 133:.\Generated_Source\PSoC4/SPI0.c **** 
 134:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_EnableTxInt();
 136              		.loc 1 134 0
 137 004e FFF7FEFF 		bl	SPI0_EnableTxInt
 135:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_EnableRxInt();
 138              		.loc 1 135 0
 139 0052 FFF7FEFF 		bl	SPI0_EnableRxInt
 136:.\Generated_Source\PSoC4/SPI0.c **** }
 140              		.loc 1 136 0
 141 0056 BD46     		mov	sp, r7
 142 0058 03B0     		add	sp, sp, #12
 143              		@ sp needed for prologue
 144 005a 90BD     		pop	{r4, r7, pc}
 145              	.L6:
 146              		.align	2
 147              	.L5:
 148 005c 90000F40 		.word	1074725008
 149 0060 93000F40 		.word	1074725011
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 6


 150 0064 92000F40 		.word	1074725010
 151              		.cfi_endproc
 152              	.LFE1:
 153              		.size	SPI0_Enable, .-SPI0_Enable
 154              		.section	.text.SPI0_Start,"ax",%progbits
 155              		.align	2
 156              		.global	SPI0_Start
 157              		.code	16
 158              		.thumb_func
 159              		.type	SPI0_Start, %function
 160              	SPI0_Start:
 161              	.LFB2:
 137:.\Generated_Source\PSoC4/SPI0.c **** 
 138:.\Generated_Source\PSoC4/SPI0.c **** 
 139:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 140:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_Start
 141:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 142:.\Generated_Source\PSoC4/SPI0.c **** *
 143:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 144:.\Generated_Source\PSoC4/SPI0.c **** *  Initialize and Enable the SPI Master component.
 145:.\Generated_Source\PSoC4/SPI0.c **** *
 146:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 147:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 148:.\Generated_Source\PSoC4/SPI0.c **** *
 149:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 150:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 151:.\Generated_Source\PSoC4/SPI0.c **** *
 152:.\Generated_Source\PSoC4/SPI0.c **** * Global variables:
 153:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_initVar - used to check initial configuration, modified on
 154:.\Generated_Source\PSoC4/SPI0.c **** *  first function call.
 155:.\Generated_Source\PSoC4/SPI0.c **** *
 156:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
 157:.\Generated_Source\PSoC4/SPI0.c **** *  Enable the clock input to enable operation.
 158:.\Generated_Source\PSoC4/SPI0.c **** *
 159:.\Generated_Source\PSoC4/SPI0.c **** * Reentrant:
 160:.\Generated_Source\PSoC4/SPI0.c **** *  No.
 161:.\Generated_Source\PSoC4/SPI0.c **** *
 162:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 163:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_Start(void) 
 164:.\Generated_Source\PSoC4/SPI0.c **** {
 162              		.loc 1 164 0
 163              		.cfi_startproc
 164 0000 80B5     		push	{r7, lr}
 165              	.LCFI5:
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169 0002 00AF     		add	r7, sp, #0
 170              	.LCFI6:
 171              		.cfi_def_cfa_register 7
 165:.\Generated_Source\PSoC4/SPI0.c ****     if(0u == SPI0_initVar)
 172              		.loc 1 165 0
 173 0004 064B     		ldr	r3, .L9
 174 0006 1B78     		ldrb	r3, [r3]
 175 0008 002B     		cmp	r3, #0
 176 000a 04D1     		bne	.L8
 166:.\Generated_Source\PSoC4/SPI0.c ****     {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 7


 167:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_Init();
 177              		.loc 1 167 0
 178 000c FFF7FEFF 		bl	SPI0_Init
 168:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_initVar = 1u;
 179              		.loc 1 168 0
 180 0010 034B     		ldr	r3, .L9
 181 0012 0122     		mov	r2, #1
 182 0014 1A70     		strb	r2, [r3]
 183              	.L8:
 169:.\Generated_Source\PSoC4/SPI0.c ****     }
 170:.\Generated_Source\PSoC4/SPI0.c **** 
 171:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_Enable();
 184              		.loc 1 171 0
 185 0016 FFF7FEFF 		bl	SPI0_Enable
 172:.\Generated_Source\PSoC4/SPI0.c **** }
 186              		.loc 1 172 0
 187 001a BD46     		mov	sp, r7
 188              		@ sp needed for prologue
 189 001c 80BD     		pop	{r7, pc}
 190              	.L10:
 191 001e C046     		.align	2
 192              	.L9:
 193 0020 00000000 		.word	SPI0_initVar
 194              		.cfi_endproc
 195              	.LFE2:
 196              		.size	SPI0_Start, .-SPI0_Start
 197              		.section	.text.SPI0_Stop,"ax",%progbits
 198              		.align	2
 199              		.global	SPI0_Stop
 200              		.code	16
 201              		.thumb_func
 202              		.type	SPI0_Stop, %function
 203              	SPI0_Stop:
 204              	.LFB3:
 173:.\Generated_Source\PSoC4/SPI0.c **** 
 174:.\Generated_Source\PSoC4/SPI0.c **** 
 175:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 176:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_Stop
 177:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 178:.\Generated_Source\PSoC4/SPI0.c **** *
 179:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 180:.\Generated_Source\PSoC4/SPI0.c **** *  Disable the SPI Master component.
 181:.\Generated_Source\PSoC4/SPI0.c **** *
 182:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 183:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 184:.\Generated_Source\PSoC4/SPI0.c **** *
 185:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 186:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 187:.\Generated_Source\PSoC4/SPI0.c **** *
 188:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
 189:.\Generated_Source\PSoC4/SPI0.c **** *  Disable the clock input to enable operation.
 190:.\Generated_Source\PSoC4/SPI0.c **** *
 191:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 192:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_Stop(void) 
 193:.\Generated_Source\PSoC4/SPI0.c **** {
 205              		.loc 1 193 0
 206              		.cfi_startproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 8


 207 0000 90B5     		push	{r4, r7, lr}
 208              	.LCFI7:
 209              		.cfi_def_cfa_offset 12
 210              		.cfi_offset 4, -12
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 83B0     		sub	sp, sp, #12
 214              	.LCFI8:
 215              		.cfi_def_cfa_offset 24
 216 0004 00AF     		add	r7, sp, #0
 217              	.LCFI9:
 218              		.cfi_def_cfa_register 7
 194:.\Generated_Source\PSoC4/SPI0.c ****     uint8 enableInterrupts;
 195:.\Generated_Source\PSoC4/SPI0.c **** 
 196:.\Generated_Source\PSoC4/SPI0.c ****     enableInterrupts = CyEnterCriticalSection();
 219              		.loc 1 196 0
 220 0006 FC1D     		add	r4, r7, #7
 221 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 222 000c 031C     		mov	r3, r0
 223 000e 2370     		strb	r3, [r4]
 197:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_TX_STATUS_ACTL_REG &= ((uint8) ~SPI0_INT_ENABLE);
 224              		.loc 1 197 0
 225 0010 0E4B     		ldr	r3, .L12
 226 0012 0E4A     		ldr	r2, .L12
 227 0014 1278     		ldrb	r2, [r2]
 228 0016 D2B2     		uxtb	r2, r2
 229 0018 1021     		mov	r1, #16
 230 001a 8A43     		bic	r2, r1
 231 001c D2B2     		uxtb	r2, r2
 232 001e 1A70     		strb	r2, [r3]
 198:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_RX_STATUS_ACTL_REG &= ((uint8) ~SPI0_INT_ENABLE);
 233              		.loc 1 198 0
 234 0020 0B4B     		ldr	r3, .L12+4
 235 0022 0B4A     		ldr	r2, .L12+4
 236 0024 1278     		ldrb	r2, [r2]
 237 0026 D2B2     		uxtb	r2, r2
 238 0028 1021     		mov	r1, #16
 239 002a 8A43     		bic	r2, r1
 240 002c D2B2     		uxtb	r2, r2
 241 002e 1A70     		strb	r2, [r3]
 199:.\Generated_Source\PSoC4/SPI0.c ****     CyExitCriticalSection(enableInterrupts);
 242              		.loc 1 199 0
 243 0030 FB1D     		add	r3, r7, #7
 244 0032 1B78     		ldrb	r3, [r3]
 245 0034 181C     		mov	r0, r3
 246 0036 FFF7FEFF 		bl	CyExitCriticalSection
 200:.\Generated_Source\PSoC4/SPI0.c **** 
 201:.\Generated_Source\PSoC4/SPI0.c ****     #if(0u != SPI0_INTERNAL_CLOCK)
 202:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_IntClock_Disable();
 247              		.loc 1 202 0
 248 003a FFF7FEFF 		bl	SPI0_IntClock_Stop
 203:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_CLOCK) */
 204:.\Generated_Source\PSoC4/SPI0.c **** 
 205:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_DisableTxInt();
 249              		.loc 1 205 0
 250 003e FFF7FEFF 		bl	SPI0_DisableTxInt
 206:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_DisableRxInt();
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 9


 251              		.loc 1 206 0
 252 0042 FFF7FEFF 		bl	SPI0_DisableRxInt
 207:.\Generated_Source\PSoC4/SPI0.c **** }
 253              		.loc 1 207 0
 254 0046 BD46     		mov	sp, r7
 255 0048 03B0     		add	sp, sp, #12
 256              		@ sp needed for prologue
 257 004a 90BD     		pop	{r4, r7, pc}
 258              	.L13:
 259              		.align	2
 260              	.L12:
 261 004c 93000F40 		.word	1074725011
 262 0050 92000F40 		.word	1074725010
 263              		.cfi_endproc
 264              	.LFE3:
 265              		.size	SPI0_Stop, .-SPI0_Stop
 266              		.section	.text.SPI0_EnableTxInt,"ax",%progbits
 267              		.align	2
 268              		.global	SPI0_EnableTxInt
 269              		.code	16
 270              		.thumb_func
 271              		.type	SPI0_EnableTxInt, %function
 272              	SPI0_EnableTxInt:
 273              	.LFB4:
 208:.\Generated_Source\PSoC4/SPI0.c **** 
 209:.\Generated_Source\PSoC4/SPI0.c **** 
 210:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 211:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_EnableTxInt
 212:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 213:.\Generated_Source\PSoC4/SPI0.c **** *
 214:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 215:.\Generated_Source\PSoC4/SPI0.c **** *  Enable internal Tx interrupt generation.
 216:.\Generated_Source\PSoC4/SPI0.c **** *
 217:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 218:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 219:.\Generated_Source\PSoC4/SPI0.c **** *
 220:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 221:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 222:.\Generated_Source\PSoC4/SPI0.c **** *
 223:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
 224:.\Generated_Source\PSoC4/SPI0.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:.\Generated_Source\PSoC4/SPI0.c **** *
 226:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_EnableTxInt(void) 
 228:.\Generated_Source\PSoC4/SPI0.c **** {
 274              		.loc 1 228 0
 275              		.cfi_startproc
 276 0000 80B5     		push	{r7, lr}
 277              	.LCFI10:
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 7, -8
 280              		.cfi_offset 14, -4
 281 0002 00AF     		add	r7, sp, #0
 282              	.LCFI11:
 283              		.cfi_def_cfa_register 7
 229:.\Generated_Source\PSoC4/SPI0.c ****     #if(0u != SPI0_INTERNAL_TX_INT_ENABLED)
 230:.\Generated_Source\PSoC4/SPI0.c ****         CyIntEnable(SPI0_TX_ISR_NUMBER);
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 10


 231:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_TX_INT_ENABLED) */
 232:.\Generated_Source\PSoC4/SPI0.c **** }
 284              		.loc 1 232 0
 285 0004 BD46     		mov	sp, r7
 286              		@ sp needed for prologue
 287 0006 80BD     		pop	{r7, pc}
 288              		.cfi_endproc
 289              	.LFE4:
 290              		.size	SPI0_EnableTxInt, .-SPI0_EnableTxInt
 291              		.section	.text.SPI0_EnableRxInt,"ax",%progbits
 292              		.align	2
 293              		.global	SPI0_EnableRxInt
 294              		.code	16
 295              		.thumb_func
 296              		.type	SPI0_EnableRxInt, %function
 297              	SPI0_EnableRxInt:
 298              	.LFB5:
 233:.\Generated_Source\PSoC4/SPI0.c **** 
 234:.\Generated_Source\PSoC4/SPI0.c **** 
 235:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 236:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_EnableRxInt
 237:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 238:.\Generated_Source\PSoC4/SPI0.c **** *
 239:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 240:.\Generated_Source\PSoC4/SPI0.c **** *  Enable internal Rx interrupt generation.
 241:.\Generated_Source\PSoC4/SPI0.c **** *
 242:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 243:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 244:.\Generated_Source\PSoC4/SPI0.c **** *
 245:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 246:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 247:.\Generated_Source\PSoC4/SPI0.c **** *
 248:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
 249:.\Generated_Source\PSoC4/SPI0.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:.\Generated_Source\PSoC4/SPI0.c **** *
 251:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 252:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_EnableRxInt(void) 
 253:.\Generated_Source\PSoC4/SPI0.c **** {
 299              		.loc 1 253 0
 300              		.cfi_startproc
 301 0000 80B5     		push	{r7, lr}
 302              	.LCFI12:
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 0002 00AF     		add	r7, sp, #0
 307              	.LCFI13:
 308              		.cfi_def_cfa_register 7
 254:.\Generated_Source\PSoC4/SPI0.c ****     #if(0u != SPI0_INTERNAL_RX_INT_ENABLED)
 255:.\Generated_Source\PSoC4/SPI0.c ****         CyIntEnable(SPI0_RX_ISR_NUMBER);
 256:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_RX_INT_ENABLED) */
 257:.\Generated_Source\PSoC4/SPI0.c **** }
 309              		.loc 1 257 0
 310 0004 BD46     		mov	sp, r7
 311              		@ sp needed for prologue
 312 0006 80BD     		pop	{r7, pc}
 313              		.cfi_endproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 11


 314              	.LFE5:
 315              		.size	SPI0_EnableRxInt, .-SPI0_EnableRxInt
 316              		.section	.text.SPI0_DisableTxInt,"ax",%progbits
 317              		.align	2
 318              		.global	SPI0_DisableTxInt
 319              		.code	16
 320              		.thumb_func
 321              		.type	SPI0_DisableTxInt, %function
 322              	SPI0_DisableTxInt:
 323              	.LFB6:
 258:.\Generated_Source\PSoC4/SPI0.c **** 
 259:.\Generated_Source\PSoC4/SPI0.c **** 
 260:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 261:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_DisableTxInt
 262:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 263:.\Generated_Source\PSoC4/SPI0.c **** *
 264:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 265:.\Generated_Source\PSoC4/SPI0.c **** *  Disable internal Tx interrupt generation.
 266:.\Generated_Source\PSoC4/SPI0.c **** *
 267:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 268:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 269:.\Generated_Source\PSoC4/SPI0.c **** *
 270:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 271:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 272:.\Generated_Source\PSoC4/SPI0.c **** *
 273:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
 274:.\Generated_Source\PSoC4/SPI0.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:.\Generated_Source\PSoC4/SPI0.c **** *
 276:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 277:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_DisableTxInt(void) 
 278:.\Generated_Source\PSoC4/SPI0.c **** {
 324              		.loc 1 278 0
 325              		.cfi_startproc
 326 0000 80B5     		push	{r7, lr}
 327              	.LCFI14:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 7, -8
 330              		.cfi_offset 14, -4
 331 0002 00AF     		add	r7, sp, #0
 332              	.LCFI15:
 333              		.cfi_def_cfa_register 7
 279:.\Generated_Source\PSoC4/SPI0.c ****     #if(0u != SPI0_INTERNAL_TX_INT_ENABLED)
 280:.\Generated_Source\PSoC4/SPI0.c ****         CyIntDisable(SPI0_TX_ISR_NUMBER);
 281:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_TX_INT_ENABLED) */
 282:.\Generated_Source\PSoC4/SPI0.c **** }
 334              		.loc 1 282 0
 335 0004 BD46     		mov	sp, r7
 336              		@ sp needed for prologue
 337 0006 80BD     		pop	{r7, pc}
 338              		.cfi_endproc
 339              	.LFE6:
 340              		.size	SPI0_DisableTxInt, .-SPI0_DisableTxInt
 341              		.section	.text.SPI0_DisableRxInt,"ax",%progbits
 342              		.align	2
 343              		.global	SPI0_DisableRxInt
 344              		.code	16
 345              		.thumb_func
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 12


 346              		.type	SPI0_DisableRxInt, %function
 347              	SPI0_DisableRxInt:
 348              	.LFB7:
 283:.\Generated_Source\PSoC4/SPI0.c **** 
 284:.\Generated_Source\PSoC4/SPI0.c **** 
 285:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_DisableRxInt
 287:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/SPI0.c **** *
 289:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 290:.\Generated_Source\PSoC4/SPI0.c **** *  Disable internal Rx interrupt generation.
 291:.\Generated_Source\PSoC4/SPI0.c **** *
 292:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 293:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 294:.\Generated_Source\PSoC4/SPI0.c **** *
 295:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 296:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 297:.\Generated_Source\PSoC4/SPI0.c **** *
 298:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
 299:.\Generated_Source\PSoC4/SPI0.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:.\Generated_Source\PSoC4/SPI0.c **** *
 301:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_DisableRxInt(void) 
 303:.\Generated_Source\PSoC4/SPI0.c **** {
 349              		.loc 1 303 0
 350              		.cfi_startproc
 351 0000 80B5     		push	{r7, lr}
 352              	.LCFI16:
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
 356 0002 00AF     		add	r7, sp, #0
 357              	.LCFI17:
 358              		.cfi_def_cfa_register 7
 304:.\Generated_Source\PSoC4/SPI0.c ****     #if(0u != SPI0_INTERNAL_RX_INT_ENABLED)
 305:.\Generated_Source\PSoC4/SPI0.c ****         CyIntDisable(SPI0_RX_ISR_NUMBER);
 306:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (0u != SPI0_INTERNAL_RX_INT_ENABLED) */
 307:.\Generated_Source\PSoC4/SPI0.c **** }
 359              		.loc 1 307 0
 360 0004 BD46     		mov	sp, r7
 361              		@ sp needed for prologue
 362 0006 80BD     		pop	{r7, pc}
 363              		.cfi_endproc
 364              	.LFE7:
 365              		.size	SPI0_DisableRxInt, .-SPI0_DisableRxInt
 366              		.section	.text.SPI0_SetTxInterruptMode,"ax",%progbits
 367              		.align	2
 368              		.global	SPI0_SetTxInterruptMode
 369              		.code	16
 370              		.thumb_func
 371              		.type	SPI0_SetTxInterruptMode, %function
 372              	SPI0_SetTxInterruptMode:
 373              	.LFB8:
 308:.\Generated_Source\PSoC4/SPI0.c **** 
 309:.\Generated_Source\PSoC4/SPI0.c **** 
 310:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 311:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_SetTxInterruptMode
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 13


 312:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 313:.\Generated_Source\PSoC4/SPI0.c **** *
 314:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 315:.\Generated_Source\PSoC4/SPI0.c **** *  Configure which status bits trigger an interrupt event.
 316:.\Generated_Source\PSoC4/SPI0.c **** *
 317:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 318:.\Generated_Source\PSoC4/SPI0.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:.\Generated_Source\PSoC4/SPI0.c **** *  header file).
 320:.\Generated_Source\PSoC4/SPI0.c **** *
 321:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 322:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 323:.\Generated_Source\PSoC4/SPI0.c **** *
 324:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
 325:.\Generated_Source\PSoC4/SPI0.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:.\Generated_Source\PSoC4/SPI0.c **** *
 327:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 328:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_SetTxInterruptMode(uint8 intSrc) 
 329:.\Generated_Source\PSoC4/SPI0.c **** {
 374              		.loc 1 329 0
 375              		.cfi_startproc
 376 0000 80B5     		push	{r7, lr}
 377              	.LCFI18:
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 7, -8
 380              		.cfi_offset 14, -4
 381 0002 82B0     		sub	sp, sp, #8
 382              	.LCFI19:
 383              		.cfi_def_cfa_offset 16
 384 0004 00AF     		add	r7, sp, #0
 385              	.LCFI20:
 386              		.cfi_def_cfa_register 7
 387 0006 021C     		mov	r2, r0
 388 0008 FB1D     		add	r3, r7, #7
 389 000a 1A70     		strb	r2, [r3]
 330:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_TX_STATUS_MASK_REG = intSrc;
 390              		.loc 1 330 0
 391 000c 034B     		ldr	r3, .L19
 392 000e FA1D     		add	r2, r7, #7
 393 0010 1278     		ldrb	r2, [r2]
 394 0012 1A70     		strb	r2, [r3]
 331:.\Generated_Source\PSoC4/SPI0.c **** }
 395              		.loc 1 331 0
 396 0014 BD46     		mov	sp, r7
 397 0016 02B0     		add	sp, sp, #8
 398              		@ sp needed for prologue
 399 0018 80BD     		pop	{r7, pc}
 400              	.L20:
 401 001a C046     		.align	2
 402              	.L19:
 403 001c 83000F40 		.word	1074724995
 404              		.cfi_endproc
 405              	.LFE8:
 406              		.size	SPI0_SetTxInterruptMode, .-SPI0_SetTxInterruptMode
 407              		.section	.text.SPI0_SetRxInterruptMode,"ax",%progbits
 408              		.align	2
 409              		.global	SPI0_SetRxInterruptMode
 410              		.code	16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 14


 411              		.thumb_func
 412              		.type	SPI0_SetRxInterruptMode, %function
 413              	SPI0_SetRxInterruptMode:
 414              	.LFB9:
 332:.\Generated_Source\PSoC4/SPI0.c **** 
 333:.\Generated_Source\PSoC4/SPI0.c **** 
 334:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 335:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_SetRxInterruptMode
 336:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 337:.\Generated_Source\PSoC4/SPI0.c **** *
 338:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 339:.\Generated_Source\PSoC4/SPI0.c **** *  Configure which status bits trigger an interrupt event.
 340:.\Generated_Source\PSoC4/SPI0.c **** *
 341:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 342:.\Generated_Source\PSoC4/SPI0.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:.\Generated_Source\PSoC4/SPI0.c **** *  header file).
 344:.\Generated_Source\PSoC4/SPI0.c **** *
 345:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 346:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 347:.\Generated_Source\PSoC4/SPI0.c **** *
 348:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
 349:.\Generated_Source\PSoC4/SPI0.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:.\Generated_Source\PSoC4/SPI0.c **** *
 351:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 352:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_SetRxInterruptMode(uint8 intSrc) 
 353:.\Generated_Source\PSoC4/SPI0.c **** {
 415              		.loc 1 353 0
 416              		.cfi_startproc
 417 0000 80B5     		push	{r7, lr}
 418              	.LCFI21:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 7, -8
 421              		.cfi_offset 14, -4
 422 0002 82B0     		sub	sp, sp, #8
 423              	.LCFI22:
 424              		.cfi_def_cfa_offset 16
 425 0004 00AF     		add	r7, sp, #0
 426              	.LCFI23:
 427              		.cfi_def_cfa_register 7
 428 0006 021C     		mov	r2, r0
 429 0008 FB1D     		add	r3, r7, #7
 430 000a 1A70     		strb	r2, [r3]
 354:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_RX_STATUS_MASK_REG  = intSrc;
 431              		.loc 1 354 0
 432 000c 034B     		ldr	r3, .L22
 433 000e FA1D     		add	r2, r7, #7
 434 0010 1278     		ldrb	r2, [r2]
 435 0012 1A70     		strb	r2, [r3]
 355:.\Generated_Source\PSoC4/SPI0.c **** }
 436              		.loc 1 355 0
 437 0014 BD46     		mov	sp, r7
 438 0016 02B0     		add	sp, sp, #8
 439              		@ sp needed for prologue
 440 0018 80BD     		pop	{r7, pc}
 441              	.L23:
 442 001a C046     		.align	2
 443              	.L22:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 15


 444 001c 82000F40 		.word	1074724994
 445              		.cfi_endproc
 446              	.LFE9:
 447              		.size	SPI0_SetRxInterruptMode, .-SPI0_SetRxInterruptMode
 448              		.section	.text.SPI0_ReadTxStatus,"ax",%progbits
 449              		.align	2
 450              		.global	SPI0_ReadTxStatus
 451              		.code	16
 452              		.thumb_func
 453              		.type	SPI0_ReadTxStatus, %function
 454              	SPI0_ReadTxStatus:
 455              	.LFB10:
 356:.\Generated_Source\PSoC4/SPI0.c **** 
 357:.\Generated_Source\PSoC4/SPI0.c **** 
 358:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 359:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_ReadTxStatus
 360:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 361:.\Generated_Source\PSoC4/SPI0.c **** *
 362:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 363:.\Generated_Source\PSoC4/SPI0.c **** *  Read the Tx status register for the component.
 364:.\Generated_Source\PSoC4/SPI0.c **** *
 365:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 366:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 367:.\Generated_Source\PSoC4/SPI0.c **** *
 368:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 369:.\Generated_Source\PSoC4/SPI0.c **** *  Contents of the Tx status register.
 370:.\Generated_Source\PSoC4/SPI0.c **** *
 371:.\Generated_Source\PSoC4/SPI0.c **** * Global variables:
 372:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_swStatusTx - used to store in software status register,
 373:.\Generated_Source\PSoC4/SPI0.c **** *  modified every function call - resets to zero.
 374:.\Generated_Source\PSoC4/SPI0.c **** *
 375:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
 376:.\Generated_Source\PSoC4/SPI0.c **** *  Allows the user and the API to read the Tx status register for error
 377:.\Generated_Source\PSoC4/SPI0.c **** *  detection and flow control.
 378:.\Generated_Source\PSoC4/SPI0.c **** *
 379:.\Generated_Source\PSoC4/SPI0.c **** * Side Effects:
 380:.\Generated_Source\PSoC4/SPI0.c **** *  Clear Tx status register of the component.
 381:.\Generated_Source\PSoC4/SPI0.c **** *
 382:.\Generated_Source\PSoC4/SPI0.c **** * Reentrant:
 383:.\Generated_Source\PSoC4/SPI0.c **** *  No.
 384:.\Generated_Source\PSoC4/SPI0.c **** *
 385:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 386:.\Generated_Source\PSoC4/SPI0.c **** uint8 SPI0_ReadTxStatus(void) 
 387:.\Generated_Source\PSoC4/SPI0.c **** {
 456              		.loc 1 387 0
 457              		.cfi_startproc
 458 0000 80B5     		push	{r7, lr}
 459              	.LCFI24:
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0002 82B0     		sub	sp, sp, #8
 464              	.LCFI25:
 465              		.cfi_def_cfa_offset 16
 466 0004 00AF     		add	r7, sp, #0
 467              	.LCFI26:
 468              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 16


 388:.\Generated_Source\PSoC4/SPI0.c ****     uint8 tmpStatus;
 389:.\Generated_Source\PSoC4/SPI0.c **** 
 390:.\Generated_Source\PSoC4/SPI0.c ****     #if(SPI0_TX_SOFTWARE_BUF_ENABLED)
 391:.\Generated_Source\PSoC4/SPI0.c ****         /* Disable TX interrupt to protect global veriables */
 392:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_DisableTxInt();
 393:.\Generated_Source\PSoC4/SPI0.c **** 
 394:.\Generated_Source\PSoC4/SPI0.c ****         tmpStatus = SPI0_GET_STATUS_TX(SPI0_swStatusTx);
 395:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_swStatusTx = 0u;
 396:.\Generated_Source\PSoC4/SPI0.c **** 
 397:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_EnableTxInt();
 398:.\Generated_Source\PSoC4/SPI0.c **** 
 399:.\Generated_Source\PSoC4/SPI0.c ****     #else
 400:.\Generated_Source\PSoC4/SPI0.c **** 
 401:.\Generated_Source\PSoC4/SPI0.c ****         tmpStatus = SPI0_TX_STATUS_REG;
 469              		.loc 1 401 0
 470 0006 054A     		ldr	r2, .L26
 471 0008 FB1D     		add	r3, r7, #7
 472 000a 1278     		ldrb	r2, [r2]
 473 000c 1A70     		strb	r2, [r3]
 402:.\Generated_Source\PSoC4/SPI0.c **** 
 403:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
 404:.\Generated_Source\PSoC4/SPI0.c **** 
 405:.\Generated_Source\PSoC4/SPI0.c ****     return(tmpStatus);
 474              		.loc 1 405 0
 475 000e FB1D     		add	r3, r7, #7
 476 0010 1B78     		ldrb	r3, [r3]
 406:.\Generated_Source\PSoC4/SPI0.c **** }
 477              		.loc 1 406 0
 478 0012 181C     		mov	r0, r3
 479 0014 BD46     		mov	sp, r7
 480 0016 02B0     		add	sp, sp, #8
 481              		@ sp needed for prologue
 482 0018 80BD     		pop	{r7, pc}
 483              	.L27:
 484 001a C046     		.align	2
 485              	.L26:
 486 001c 63000F40 		.word	1074724963
 487              		.cfi_endproc
 488              	.LFE10:
 489              		.size	SPI0_ReadTxStatus, .-SPI0_ReadTxStatus
 490              		.section	.text.SPI0_ReadRxStatus,"ax",%progbits
 491              		.align	2
 492              		.global	SPI0_ReadRxStatus
 493              		.code	16
 494              		.thumb_func
 495              		.type	SPI0_ReadRxStatus, %function
 496              	SPI0_ReadRxStatus:
 497              	.LFB11:
 407:.\Generated_Source\PSoC4/SPI0.c **** 
 408:.\Generated_Source\PSoC4/SPI0.c **** 
 409:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_ReadRxStatus
 411:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/SPI0.c **** *
 413:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 414:.\Generated_Source\PSoC4/SPI0.c **** *  Read the Rx status register for the component.
 415:.\Generated_Source\PSoC4/SPI0.c **** *
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 17


 416:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 417:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 418:.\Generated_Source\PSoC4/SPI0.c **** *
 419:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 420:.\Generated_Source\PSoC4/SPI0.c **** *  Contents of the Rx status register.
 421:.\Generated_Source\PSoC4/SPI0.c **** *
 422:.\Generated_Source\PSoC4/SPI0.c **** * Global variables:
 423:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_swStatusRx - used to store in software Rx status register,
 424:.\Generated_Source\PSoC4/SPI0.c **** *  modified every function call - resets to zero.
 425:.\Generated_Source\PSoC4/SPI0.c **** *
 426:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
 427:.\Generated_Source\PSoC4/SPI0.c **** *  Allows the user and the API to read the Rx status register for error
 428:.\Generated_Source\PSoC4/SPI0.c **** *  detection and flow control.
 429:.\Generated_Source\PSoC4/SPI0.c **** *
 430:.\Generated_Source\PSoC4/SPI0.c **** * Side Effects:
 431:.\Generated_Source\PSoC4/SPI0.c **** *  Clear Rx status register of the component.
 432:.\Generated_Source\PSoC4/SPI0.c **** *
 433:.\Generated_Source\PSoC4/SPI0.c **** * Reentrant:
 434:.\Generated_Source\PSoC4/SPI0.c **** *  No.
 435:.\Generated_Source\PSoC4/SPI0.c **** *
 436:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 437:.\Generated_Source\PSoC4/SPI0.c **** uint8 SPI0_ReadRxStatus(void) 
 438:.\Generated_Source\PSoC4/SPI0.c **** {
 498              		.loc 1 438 0
 499              		.cfi_startproc
 500 0000 80B5     		push	{r7, lr}
 501              	.LCFI27:
 502              		.cfi_def_cfa_offset 8
 503              		.cfi_offset 7, -8
 504              		.cfi_offset 14, -4
 505 0002 82B0     		sub	sp, sp, #8
 506              	.LCFI28:
 507              		.cfi_def_cfa_offset 16
 508 0004 00AF     		add	r7, sp, #0
 509              	.LCFI29:
 510              		.cfi_def_cfa_register 7
 439:.\Generated_Source\PSoC4/SPI0.c ****     uint8 tmpStatus;
 440:.\Generated_Source\PSoC4/SPI0.c **** 
 441:.\Generated_Source\PSoC4/SPI0.c ****     #if(SPI0_RX_SOFTWARE_BUF_ENABLED)
 442:.\Generated_Source\PSoC4/SPI0.c ****         /* Disable RX interrupt to protect global veriables */
 443:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_DisableRxInt();
 444:.\Generated_Source\PSoC4/SPI0.c **** 
 445:.\Generated_Source\PSoC4/SPI0.c ****         tmpStatus = SPI0_GET_STATUS_RX(SPI0_swStatusRx);
 446:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_swStatusRx = 0u;
 447:.\Generated_Source\PSoC4/SPI0.c **** 
 448:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_EnableRxInt();
 449:.\Generated_Source\PSoC4/SPI0.c **** 
 450:.\Generated_Source\PSoC4/SPI0.c ****     #else
 451:.\Generated_Source\PSoC4/SPI0.c **** 
 452:.\Generated_Source\PSoC4/SPI0.c ****         tmpStatus = SPI0_RX_STATUS_REG;
 511              		.loc 1 452 0
 512 0006 054A     		ldr	r2, .L30
 513 0008 FB1D     		add	r3, r7, #7
 514 000a 1278     		ldrb	r2, [r2]
 515 000c 1A70     		strb	r2, [r3]
 453:.\Generated_Source\PSoC4/SPI0.c **** 
 454:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (SPI0_RX_SOFTWARE_BUF_ENABLED) */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 18


 455:.\Generated_Source\PSoC4/SPI0.c **** 
 456:.\Generated_Source\PSoC4/SPI0.c ****     return(tmpStatus);
 516              		.loc 1 456 0
 517 000e FB1D     		add	r3, r7, #7
 518 0010 1B78     		ldrb	r3, [r3]
 457:.\Generated_Source\PSoC4/SPI0.c **** }
 519              		.loc 1 457 0
 520 0012 181C     		mov	r0, r3
 521 0014 BD46     		mov	sp, r7
 522 0016 02B0     		add	sp, sp, #8
 523              		@ sp needed for prologue
 524 0018 80BD     		pop	{r7, pc}
 525              	.L31:
 526 001a C046     		.align	2
 527              	.L30:
 528 001c 62000F40 		.word	1074724962
 529              		.cfi_endproc
 530              	.LFE11:
 531              		.size	SPI0_ReadRxStatus, .-SPI0_ReadRxStatus
 532              		.section	.text.SPI0_WriteTxData,"ax",%progbits
 533              		.align	2
 534              		.global	SPI0_WriteTxData
 535              		.code	16
 536              		.thumb_func
 537              		.type	SPI0_WriteTxData, %function
 538              	SPI0_WriteTxData:
 539              	.LFB12:
 458:.\Generated_Source\PSoC4/SPI0.c **** 
 459:.\Generated_Source\PSoC4/SPI0.c **** 
 460:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 461:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_WriteTxData
 462:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 463:.\Generated_Source\PSoC4/SPI0.c **** *
 464:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 465:.\Generated_Source\PSoC4/SPI0.c **** *  Write a byte of data to be sent across the SPI.
 466:.\Generated_Source\PSoC4/SPI0.c **** *
 467:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 468:.\Generated_Source\PSoC4/SPI0.c **** *  txDataByte: The data value to send across the SPI.
 469:.\Generated_Source\PSoC4/SPI0.c **** *
 470:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 471:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 472:.\Generated_Source\PSoC4/SPI0.c **** *
 473:.\Generated_Source\PSoC4/SPI0.c **** * Global variables:
 474:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_txBufferWrite - used for the account of the bytes which
 475:.\Generated_Source\PSoC4/SPI0.c **** *  have been written down in the TX software buffer, modified every function
 476:.\Generated_Source\PSoC4/SPI0.c **** *  call if TX Software Buffer is used.
 477:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_txBufferRead - used for the account of the bytes which
 478:.\Generated_Source\PSoC4/SPI0.c **** *  have been read from the TX software buffer.
 479:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_txBuffer[SPI0_TX_BUFFER_SIZE] - used to store
 480:.\Generated_Source\PSoC4/SPI0.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:.\Generated_Source\PSoC4/SPI0.c **** *
 482:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
 483:.\Generated_Source\PSoC4/SPI0.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:.\Generated_Source\PSoC4/SPI0.c **** *
 485:.\Generated_Source\PSoC4/SPI0.c **** * Side Effects:
 486:.\Generated_Source\PSoC4/SPI0.c **** *  If this function is called again before the previous byte is finished then
 487:.\Generated_Source\PSoC4/SPI0.c **** *  the next byte will be appended to the transfer with no time between
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 19


 488:.\Generated_Source\PSoC4/SPI0.c **** *  the byte transfers. Clear Tx status register of the component.
 489:.\Generated_Source\PSoC4/SPI0.c **** *
 490:.\Generated_Source\PSoC4/SPI0.c **** * Reentrant:
 491:.\Generated_Source\PSoC4/SPI0.c **** *  No.
 492:.\Generated_Source\PSoC4/SPI0.c **** *
 493:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 494:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_WriteTxData(uint8 txData) 
 495:.\Generated_Source\PSoC4/SPI0.c **** {
 540              		.loc 1 495 0
 541              		.cfi_startproc
 542 0000 80B5     		push	{r7, lr}
 543              	.LCFI30:
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 7, -8
 546              		.cfi_offset 14, -4
 547 0002 82B0     		sub	sp, sp, #8
 548              	.LCFI31:
 549              		.cfi_def_cfa_offset 16
 550 0004 00AF     		add	r7, sp, #0
 551              	.LCFI32:
 552              		.cfi_def_cfa_register 7
 553 0006 021C     		mov	r2, r0
 554 0008 FB1D     		add	r3, r7, #7
 555 000a 1A70     		strb	r2, [r3]
 496:.\Generated_Source\PSoC4/SPI0.c ****     #if(SPI0_TX_SOFTWARE_BUF_ENABLED)
 497:.\Generated_Source\PSoC4/SPI0.c **** 
 498:.\Generated_Source\PSoC4/SPI0.c ****         uint8 tempStatus;
 499:.\Generated_Source\PSoC4/SPI0.c ****         uint8 tmpTxBufferRead;
 500:.\Generated_Source\PSoC4/SPI0.c **** 
 501:.\Generated_Source\PSoC4/SPI0.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:.\Generated_Source\PSoC4/SPI0.c ****         do
 503:.\Generated_Source\PSoC4/SPI0.c ****         {
 504:.\Generated_Source\PSoC4/SPI0.c ****             tmpTxBufferRead = SPI0_txBufferRead;
 505:.\Generated_Source\PSoC4/SPI0.c ****             if(0u == tmpTxBufferRead)
 506:.\Generated_Source\PSoC4/SPI0.c ****             {
 507:.\Generated_Source\PSoC4/SPI0.c ****                 tmpTxBufferRead = (SPI0_TX_BUFFER_SIZE - 1u);
 508:.\Generated_Source\PSoC4/SPI0.c ****             }
 509:.\Generated_Source\PSoC4/SPI0.c ****             else
 510:.\Generated_Source\PSoC4/SPI0.c ****             {
 511:.\Generated_Source\PSoC4/SPI0.c ****                 tmpTxBufferRead--;
 512:.\Generated_Source\PSoC4/SPI0.c ****             }
 513:.\Generated_Source\PSoC4/SPI0.c **** 
 514:.\Generated_Source\PSoC4/SPI0.c ****         }while(tmpTxBufferRead == SPI0_txBufferWrite);
 515:.\Generated_Source\PSoC4/SPI0.c **** 
 516:.\Generated_Source\PSoC4/SPI0.c ****         /* Disable TX interrupt to protect global veriables */
 517:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_DisableTxInt();
 518:.\Generated_Source\PSoC4/SPI0.c **** 
 519:.\Generated_Source\PSoC4/SPI0.c ****         tempStatus = SPI0_GET_STATUS_TX(SPI0_swStatusTx);
 520:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_swStatusTx = tempStatus;
 521:.\Generated_Source\PSoC4/SPI0.c **** 
 522:.\Generated_Source\PSoC4/SPI0.c **** 
 523:.\Generated_Source\PSoC4/SPI0.c ****         if((SPI0_txBufferRead == SPI0_txBufferWrite) &&
 524:.\Generated_Source\PSoC4/SPI0.c ****            (0u != (SPI0_swStatusTx & SPI0_STS_TX_FIFO_NOT_FULL)))
 525:.\Generated_Source\PSoC4/SPI0.c ****         {
 526:.\Generated_Source\PSoC4/SPI0.c ****             /* Add directly to the TX FIFO */
 527:.\Generated_Source\PSoC4/SPI0.c ****             CY_SET_REG8(SPI0_TXDATA_PTR, txData);
 528:.\Generated_Source\PSoC4/SPI0.c ****         }
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 20


 529:.\Generated_Source\PSoC4/SPI0.c ****         else
 530:.\Generated_Source\PSoC4/SPI0.c ****         {
 531:.\Generated_Source\PSoC4/SPI0.c ****             /* Add to the TX software buffer */
 532:.\Generated_Source\PSoC4/SPI0.c ****             SPI0_txBufferWrite++;
 533:.\Generated_Source\PSoC4/SPI0.c ****             if(SPI0_txBufferWrite >= SPI0_TX_BUFFER_SIZE)
 534:.\Generated_Source\PSoC4/SPI0.c ****             {
 535:.\Generated_Source\PSoC4/SPI0.c ****                 SPI0_txBufferWrite = 0u;
 536:.\Generated_Source\PSoC4/SPI0.c ****             }
 537:.\Generated_Source\PSoC4/SPI0.c **** 
 538:.\Generated_Source\PSoC4/SPI0.c ****             if(SPI0_txBufferWrite == SPI0_txBufferRead)
 539:.\Generated_Source\PSoC4/SPI0.c ****             {
 540:.\Generated_Source\PSoC4/SPI0.c ****                 SPI0_txBufferRead++;
 541:.\Generated_Source\PSoC4/SPI0.c ****                 if(SPI0_txBufferRead >= SPI0_TX_BUFFER_SIZE)
 542:.\Generated_Source\PSoC4/SPI0.c ****                 {
 543:.\Generated_Source\PSoC4/SPI0.c ****                     SPI0_txBufferRead = 0u;
 544:.\Generated_Source\PSoC4/SPI0.c ****                 }
 545:.\Generated_Source\PSoC4/SPI0.c ****                 SPI0_txBufferFull = 1u;
 546:.\Generated_Source\PSoC4/SPI0.c ****             }
 547:.\Generated_Source\PSoC4/SPI0.c **** 
 548:.\Generated_Source\PSoC4/SPI0.c ****             SPI0_txBuffer[SPI0_txBufferWrite] = txData;
 549:.\Generated_Source\PSoC4/SPI0.c **** 
 550:.\Generated_Source\PSoC4/SPI0.c ****             SPI0_TX_STATUS_MASK_REG |= SPI0_STS_TX_FIFO_NOT_FULL;
 551:.\Generated_Source\PSoC4/SPI0.c ****         }
 552:.\Generated_Source\PSoC4/SPI0.c **** 
 553:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_EnableTxInt();
 554:.\Generated_Source\PSoC4/SPI0.c **** 
 555:.\Generated_Source\PSoC4/SPI0.c ****     #else
 556:.\Generated_Source\PSoC4/SPI0.c **** 
 557:.\Generated_Source\PSoC4/SPI0.c ****         while(0u == (SPI0_TX_STATUS_REG & SPI0_STS_TX_FIFO_NOT_FULL))
 556              		.loc 1 557 0
 557 000c C046     		mov	r8, r8
 558              	.L33:
 559              		.loc 1 557 0 is_stmt 0 discriminator 1
 560 000e 074B     		ldr	r3, .L34
 561 0010 1B78     		ldrb	r3, [r3]
 562 0012 DBB2     		uxtb	r3, r3
 563 0014 1A1C     		mov	r2, r3
 564 0016 0423     		mov	r3, #4
 565 0018 1340     		and	r3, r2
 566 001a F8D0     		beq	.L33
 558:.\Generated_Source\PSoC4/SPI0.c ****         {
 559:.\Generated_Source\PSoC4/SPI0.c ****             ; /* Wait for room in FIFO */
 560:.\Generated_Source\PSoC4/SPI0.c ****         }
 561:.\Generated_Source\PSoC4/SPI0.c **** 
 562:.\Generated_Source\PSoC4/SPI0.c ****         /* Put byte in TX FIFO */
 563:.\Generated_Source\PSoC4/SPI0.c ****         CY_SET_REG8(SPI0_TXDATA_PTR, txData);
 567              		.loc 1 563 0 is_stmt 1
 568 001c 044B     		ldr	r3, .L34+4
 569 001e FA1D     		add	r2, r7, #7
 570 0020 1278     		ldrb	r2, [r2]
 571 0022 1A70     		strb	r2, [r3]
 564:.\Generated_Source\PSoC4/SPI0.c **** 
 565:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
 566:.\Generated_Source\PSoC4/SPI0.c **** }
 572              		.loc 1 566 0
 573 0024 BD46     		mov	sp, r7
 574 0026 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 21


 575              		@ sp needed for prologue
 576 0028 80BD     		pop	{r7, pc}
 577              	.L35:
 578 002a C046     		.align	2
 579              	.L34:
 580 002c 63000F40 		.word	1074724963
 581 0030 40000F40 		.word	1074724928
 582              		.cfi_endproc
 583              	.LFE12:
 584              		.size	SPI0_WriteTxData, .-SPI0_WriteTxData
 585              		.section	.text.SPI0_ReadRxData,"ax",%progbits
 586              		.align	2
 587              		.global	SPI0_ReadRxData
 588              		.code	16
 589              		.thumb_func
 590              		.type	SPI0_ReadRxData, %function
 591              	SPI0_ReadRxData:
 592              	.LFB13:
 567:.\Generated_Source\PSoC4/SPI0.c **** 
 568:.\Generated_Source\PSoC4/SPI0.c **** 
 569:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 570:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_ReadRxData
 571:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 572:.\Generated_Source\PSoC4/SPI0.c **** *
 573:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 574:.\Generated_Source\PSoC4/SPI0.c **** *  Read the next byte of data received across the SPI.
 575:.\Generated_Source\PSoC4/SPI0.c **** *
 576:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 577:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 578:.\Generated_Source\PSoC4/SPI0.c **** *
 579:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 580:.\Generated_Source\PSoC4/SPI0.c **** *  The next byte of data read from the FIFO.
 581:.\Generated_Source\PSoC4/SPI0.c **** *
 582:.\Generated_Source\PSoC4/SPI0.c **** * Global variables:
 583:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_rxBufferWrite - used for the account of the bytes which
 584:.\Generated_Source\PSoC4/SPI0.c **** *  have been written down in the RX software buffer.
 585:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_rxBufferRead - used for the account of the bytes which
 586:.\Generated_Source\PSoC4/SPI0.c **** *  have been read from the RX software buffer, modified every function
 587:.\Generated_Source\PSoC4/SPI0.c **** *  call if RX Software Buffer is used.
 588:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_rxBuffer[SPI0_RX_BUFFER_SIZE] - used to store
 589:.\Generated_Source\PSoC4/SPI0.c **** *  received data.
 590:.\Generated_Source\PSoC4/SPI0.c **** *
 591:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
 592:.\Generated_Source\PSoC4/SPI0.c **** *  Allows the user to read a byte of data received.
 593:.\Generated_Source\PSoC4/SPI0.c **** *
 594:.\Generated_Source\PSoC4/SPI0.c **** * Side Effects:
 595:.\Generated_Source\PSoC4/SPI0.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 596:.\Generated_Source\PSoC4/SPI0.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 597:.\Generated_Source\PSoC4/SPI0.c **** *  ReadByte() function.
 598:.\Generated_Source\PSoC4/SPI0.c **** *
 599:.\Generated_Source\PSoC4/SPI0.c **** * Reentrant:
 600:.\Generated_Source\PSoC4/SPI0.c **** *  No.
 601:.\Generated_Source\PSoC4/SPI0.c **** *
 602:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 603:.\Generated_Source\PSoC4/SPI0.c **** uint8 SPI0_ReadRxData(void) 
 604:.\Generated_Source\PSoC4/SPI0.c **** {
 593              		.loc 1 604 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 22


 594              		.cfi_startproc
 595 0000 80B5     		push	{r7, lr}
 596              	.LCFI33:
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 7, -8
 599              		.cfi_offset 14, -4
 600 0002 82B0     		sub	sp, sp, #8
 601              	.LCFI34:
 602              		.cfi_def_cfa_offset 16
 603 0004 00AF     		add	r7, sp, #0
 604              	.LCFI35:
 605              		.cfi_def_cfa_register 7
 605:.\Generated_Source\PSoC4/SPI0.c ****     uint8 rxData;
 606:.\Generated_Source\PSoC4/SPI0.c **** 
 607:.\Generated_Source\PSoC4/SPI0.c ****     #if(SPI0_RX_SOFTWARE_BUF_ENABLED)
 608:.\Generated_Source\PSoC4/SPI0.c **** 
 609:.\Generated_Source\PSoC4/SPI0.c ****         /* Disable RX interrupt to protect global veriables */
 610:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_DisableRxInt();
 611:.\Generated_Source\PSoC4/SPI0.c **** 
 612:.\Generated_Source\PSoC4/SPI0.c ****         if(SPI0_rxBufferRead != SPI0_rxBufferWrite)
 613:.\Generated_Source\PSoC4/SPI0.c ****         {
 614:.\Generated_Source\PSoC4/SPI0.c ****             if(0u == SPI0_rxBufferFull)
 615:.\Generated_Source\PSoC4/SPI0.c ****             {
 616:.\Generated_Source\PSoC4/SPI0.c ****                 SPI0_rxBufferRead++;
 617:.\Generated_Source\PSoC4/SPI0.c ****                 if(SPI0_rxBufferRead >= SPI0_RX_BUFFER_SIZE)
 618:.\Generated_Source\PSoC4/SPI0.c ****                 {
 619:.\Generated_Source\PSoC4/SPI0.c ****                     SPI0_rxBufferRead = 0u;
 620:.\Generated_Source\PSoC4/SPI0.c ****                 }
 621:.\Generated_Source\PSoC4/SPI0.c ****             }
 622:.\Generated_Source\PSoC4/SPI0.c ****             else
 623:.\Generated_Source\PSoC4/SPI0.c ****             {
 624:.\Generated_Source\PSoC4/SPI0.c ****                 SPI0_rxBufferFull = 0u;
 625:.\Generated_Source\PSoC4/SPI0.c ****             }
 626:.\Generated_Source\PSoC4/SPI0.c ****         }
 627:.\Generated_Source\PSoC4/SPI0.c **** 
 628:.\Generated_Source\PSoC4/SPI0.c ****         rxData = SPI0_rxBuffer[SPI0_rxBufferRead];
 629:.\Generated_Source\PSoC4/SPI0.c **** 
 630:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_EnableRxInt();
 631:.\Generated_Source\PSoC4/SPI0.c **** 
 632:.\Generated_Source\PSoC4/SPI0.c ****     #else
 633:.\Generated_Source\PSoC4/SPI0.c **** 
 634:.\Generated_Source\PSoC4/SPI0.c ****         rxData = CY_GET_REG8(SPI0_RXDATA_PTR);
 606              		.loc 1 634 0
 607 0006 054A     		ldr	r2, .L38
 608 0008 FB1D     		add	r3, r7, #7
 609 000a 1278     		ldrb	r2, [r2]
 610 000c 1A70     		strb	r2, [r3]
 635:.\Generated_Source\PSoC4/SPI0.c **** 
 636:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (SPI0_RX_SOFTWARE_BUF_ENABLED) */
 637:.\Generated_Source\PSoC4/SPI0.c **** 
 638:.\Generated_Source\PSoC4/SPI0.c ****     return(rxData);
 611              		.loc 1 638 0
 612 000e FB1D     		add	r3, r7, #7
 613 0010 1B78     		ldrb	r3, [r3]
 639:.\Generated_Source\PSoC4/SPI0.c **** }
 614              		.loc 1 639 0
 615 0012 181C     		mov	r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 23


 616 0014 BD46     		mov	sp, r7
 617 0016 02B0     		add	sp, sp, #8
 618              		@ sp needed for prologue
 619 0018 80BD     		pop	{r7, pc}
 620              	.L39:
 621 001a C046     		.align	2
 622              	.L38:
 623 001c 50000F40 		.word	1074724944
 624              		.cfi_endproc
 625              	.LFE13:
 626              		.size	SPI0_ReadRxData, .-SPI0_ReadRxData
 627              		.section	.text.SPI0_GetRxBufferSize,"ax",%progbits
 628              		.align	2
 629              		.global	SPI0_GetRxBufferSize
 630              		.code	16
 631              		.thumb_func
 632              		.type	SPI0_GetRxBufferSize, %function
 633              	SPI0_GetRxBufferSize:
 634              	.LFB14:
 640:.\Generated_Source\PSoC4/SPI0.c **** 
 641:.\Generated_Source\PSoC4/SPI0.c **** 
 642:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 643:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_GetRxBufferSize
 644:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 645:.\Generated_Source\PSoC4/SPI0.c **** *
 646:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 647:.\Generated_Source\PSoC4/SPI0.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 648:.\Generated_Source\PSoC4/SPI0.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 649:.\Generated_Source\PSoC4/SPI0.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 650:.\Generated_Source\PSoC4/SPI0.c **** *
 651:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 652:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 653:.\Generated_Source\PSoC4/SPI0.c **** *
 654:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 655:.\Generated_Source\PSoC4/SPI0.c **** *  Integer count of the number of bytes/words in the RX buffer.
 656:.\Generated_Source\PSoC4/SPI0.c **** *
 657:.\Generated_Source\PSoC4/SPI0.c **** * Global variables:
 658:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_rxBufferWrite - used for the account of the bytes which
 659:.\Generated_Source\PSoC4/SPI0.c **** *  have been written down in the RX software buffer.
 660:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_rxBufferRead - used for the account of the bytes which
 661:.\Generated_Source\PSoC4/SPI0.c **** *  have been read from the RX software buffer.
 662:.\Generated_Source\PSoC4/SPI0.c **** *
 663:.\Generated_Source\PSoC4/SPI0.c **** * Side Effects:
 664:.\Generated_Source\PSoC4/SPI0.c **** *  Clear status register of the component.
 665:.\Generated_Source\PSoC4/SPI0.c **** *
 666:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 667:.\Generated_Source\PSoC4/SPI0.c **** uint8 SPI0_GetRxBufferSize(void) 
 668:.\Generated_Source\PSoC4/SPI0.c **** {
 635              		.loc 1 668 0
 636              		.cfi_startproc
 637 0000 80B5     		push	{r7, lr}
 638              	.LCFI36:
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 7, -8
 641              		.cfi_offset 14, -4
 642 0002 82B0     		sub	sp, sp, #8
 643              	.LCFI37:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 24


 644              		.cfi_def_cfa_offset 16
 645 0004 00AF     		add	r7, sp, #0
 646              	.LCFI38:
 647              		.cfi_def_cfa_register 7
 669:.\Generated_Source\PSoC4/SPI0.c ****     uint8 size;
 670:.\Generated_Source\PSoC4/SPI0.c **** 
 671:.\Generated_Source\PSoC4/SPI0.c ****     #if(SPI0_RX_SOFTWARE_BUF_ENABLED)
 672:.\Generated_Source\PSoC4/SPI0.c **** 
 673:.\Generated_Source\PSoC4/SPI0.c ****         /* Disable RX interrupt to protect global veriables */
 674:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_DisableRxInt();
 675:.\Generated_Source\PSoC4/SPI0.c **** 
 676:.\Generated_Source\PSoC4/SPI0.c ****         if(SPI0_rxBufferRead == SPI0_rxBufferWrite)
 677:.\Generated_Source\PSoC4/SPI0.c ****         {
 678:.\Generated_Source\PSoC4/SPI0.c ****             size = 0u;
 679:.\Generated_Source\PSoC4/SPI0.c ****         }
 680:.\Generated_Source\PSoC4/SPI0.c ****         else if(SPI0_rxBufferRead < SPI0_rxBufferWrite)
 681:.\Generated_Source\PSoC4/SPI0.c ****         {
 682:.\Generated_Source\PSoC4/SPI0.c ****             size = (SPI0_rxBufferWrite - SPI0_rxBufferRead);
 683:.\Generated_Source\PSoC4/SPI0.c ****         }
 684:.\Generated_Source\PSoC4/SPI0.c ****         else
 685:.\Generated_Source\PSoC4/SPI0.c ****         {
 686:.\Generated_Source\PSoC4/SPI0.c ****             size = (SPI0_RX_BUFFER_SIZE - SPI0_rxBufferRead) + SPI0_rxBufferWrite;
 687:.\Generated_Source\PSoC4/SPI0.c ****         }
 688:.\Generated_Source\PSoC4/SPI0.c **** 
 689:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_EnableRxInt();
 690:.\Generated_Source\PSoC4/SPI0.c **** 
 691:.\Generated_Source\PSoC4/SPI0.c ****     #else
 692:.\Generated_Source\PSoC4/SPI0.c **** 
 693:.\Generated_Source\PSoC4/SPI0.c ****         /* We can only know if there is data in the RX FIFO */
 694:.\Generated_Source\PSoC4/SPI0.c ****         size = (0u != (SPI0_RX_STATUS_REG & SPI0_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 648              		.loc 1 694 0
 649 0006 094B     		ldr	r3, .L44
 650 0008 1B78     		ldrb	r3, [r3]
 651 000a DBB2     		uxtb	r3, r3
 652 000c 1A1C     		mov	r2, r3
 653 000e 2023     		mov	r3, #32
 654 0010 1340     		and	r3, r2
 655 0012 01D0     		beq	.L41
 656              		.loc 1 694 0 is_stmt 0 discriminator 1
 657 0014 0123     		mov	r3, #1
 658 0016 00E0     		b	.L42
 659              	.L41:
 660              		.loc 1 694 0 discriminator 2
 661 0018 0023     		mov	r3, #0
 662              	.L42:
 663              		.loc 1 694 0 discriminator 3
 664 001a FA1D     		add	r2, r7, #7
 665 001c 1370     		strb	r3, [r2]
 695:.\Generated_Source\PSoC4/SPI0.c **** 
 696:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
 697:.\Generated_Source\PSoC4/SPI0.c **** 
 698:.\Generated_Source\PSoC4/SPI0.c ****     return(size);
 666              		.loc 1 698 0 is_stmt 1 discriminator 3
 667 001e FB1D     		add	r3, r7, #7
 668 0020 1B78     		ldrb	r3, [r3]
 699:.\Generated_Source\PSoC4/SPI0.c **** }
 669              		.loc 1 699 0 discriminator 3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 25


 670 0022 181C     		mov	r0, r3
 671 0024 BD46     		mov	sp, r7
 672 0026 02B0     		add	sp, sp, #8
 673              		@ sp needed for prologue
 674 0028 80BD     		pop	{r7, pc}
 675              	.L45:
 676 002a C046     		.align	2
 677              	.L44:
 678 002c 62000F40 		.word	1074724962
 679              		.cfi_endproc
 680              	.LFE14:
 681              		.size	SPI0_GetRxBufferSize, .-SPI0_GetRxBufferSize
 682              		.section	.text.SPI0_GetTxBufferSize,"ax",%progbits
 683              		.align	2
 684              		.global	SPI0_GetTxBufferSize
 685              		.code	16
 686              		.thumb_func
 687              		.type	SPI0_GetTxBufferSize, %function
 688              	SPI0_GetTxBufferSize:
 689              	.LFB15:
 700:.\Generated_Source\PSoC4/SPI0.c **** 
 701:.\Generated_Source\PSoC4/SPI0.c **** 
 702:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 703:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_GetTxBufferSize
 704:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 705:.\Generated_Source\PSoC4/SPI0.c **** *
 706:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 707:.\Generated_Source\PSoC4/SPI0.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 708:.\Generated_Source\PSoC4/SPI0.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 709:.\Generated_Source\PSoC4/SPI0.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 710:.\Generated_Source\PSoC4/SPI0.c **** *  Software Buffer.
 711:.\Generated_Source\PSoC4/SPI0.c **** *
 712:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 713:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 714:.\Generated_Source\PSoC4/SPI0.c **** *
 715:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 716:.\Generated_Source\PSoC4/SPI0.c **** *  Integer count of the number of bytes/words in the TX buffer.
 717:.\Generated_Source\PSoC4/SPI0.c **** *
 718:.\Generated_Source\PSoC4/SPI0.c **** * Global variables:
 719:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_txBufferWrite - used for the account of the bytes which
 720:.\Generated_Source\PSoC4/SPI0.c **** *  have been written down in the TX software buffer.
 721:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_txBufferRead - used for the account of the bytes which
 722:.\Generated_Source\PSoC4/SPI0.c **** *  have been read from the TX software buffer.
 723:.\Generated_Source\PSoC4/SPI0.c **** *
 724:.\Generated_Source\PSoC4/SPI0.c **** * Side Effects:
 725:.\Generated_Source\PSoC4/SPI0.c **** *  Clear status register of the component.
 726:.\Generated_Source\PSoC4/SPI0.c **** *
 727:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 728:.\Generated_Source\PSoC4/SPI0.c **** uint8  SPI0_GetTxBufferSize(void) 
 729:.\Generated_Source\PSoC4/SPI0.c **** {
 690              		.loc 1 729 0
 691              		.cfi_startproc
 692 0000 80B5     		push	{r7, lr}
 693              	.LCFI39:
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 7, -8
 696              		.cfi_offset 14, -4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 26


 697 0002 82B0     		sub	sp, sp, #8
 698              	.LCFI40:
 699              		.cfi_def_cfa_offset 16
 700 0004 00AF     		add	r7, sp, #0
 701              	.LCFI41:
 702              		.cfi_def_cfa_register 7
 730:.\Generated_Source\PSoC4/SPI0.c ****     uint8 size;
 731:.\Generated_Source\PSoC4/SPI0.c **** 
 732:.\Generated_Source\PSoC4/SPI0.c ****     #if(SPI0_TX_SOFTWARE_BUF_ENABLED)
 733:.\Generated_Source\PSoC4/SPI0.c ****         /* Disable TX interrupt to protect global veriables */
 734:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_DisableTxInt();
 735:.\Generated_Source\PSoC4/SPI0.c **** 
 736:.\Generated_Source\PSoC4/SPI0.c ****         if(SPI0_txBufferRead == SPI0_txBufferWrite)
 737:.\Generated_Source\PSoC4/SPI0.c ****         {
 738:.\Generated_Source\PSoC4/SPI0.c ****             size = 0u;
 739:.\Generated_Source\PSoC4/SPI0.c ****         }
 740:.\Generated_Source\PSoC4/SPI0.c ****         else if(SPI0_txBufferRead < SPI0_txBufferWrite)
 741:.\Generated_Source\PSoC4/SPI0.c ****         {
 742:.\Generated_Source\PSoC4/SPI0.c ****             size = (SPI0_txBufferWrite - SPI0_txBufferRead);
 743:.\Generated_Source\PSoC4/SPI0.c ****         }
 744:.\Generated_Source\PSoC4/SPI0.c ****         else
 745:.\Generated_Source\PSoC4/SPI0.c ****         {
 746:.\Generated_Source\PSoC4/SPI0.c ****             size = (SPI0_TX_BUFFER_SIZE - SPI0_txBufferRead) + SPI0_txBufferWrite;
 747:.\Generated_Source\PSoC4/SPI0.c ****         }
 748:.\Generated_Source\PSoC4/SPI0.c **** 
 749:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_EnableTxInt();
 750:.\Generated_Source\PSoC4/SPI0.c **** 
 751:.\Generated_Source\PSoC4/SPI0.c ****     #else
 752:.\Generated_Source\PSoC4/SPI0.c **** 
 753:.\Generated_Source\PSoC4/SPI0.c ****         size = SPI0_TX_STATUS_REG;
 703              		.loc 1 753 0
 704 0006 0F4A     		ldr	r2, .L51
 705 0008 FB1D     		add	r3, r7, #7
 706 000a 1278     		ldrb	r2, [r2]
 707 000c 1A70     		strb	r2, [r3]
 754:.\Generated_Source\PSoC4/SPI0.c **** 
 755:.\Generated_Source\PSoC4/SPI0.c ****         if(0u != (size & SPI0_STS_TX_FIFO_EMPTY))
 708              		.loc 1 755 0
 709 000e FB1D     		add	r3, r7, #7
 710 0010 1A78     		ldrb	r2, [r3]
 711 0012 0223     		mov	r3, #2
 712 0014 1340     		and	r3, r2
 713 0016 03D0     		beq	.L47
 756:.\Generated_Source\PSoC4/SPI0.c ****         {
 757:.\Generated_Source\PSoC4/SPI0.c ****             size = 0u;
 714              		.loc 1 757 0
 715 0018 FB1D     		add	r3, r7, #7
 716 001a 0022     		mov	r2, #0
 717 001c 1A70     		strb	r2, [r3]
 718 001e 0BE0     		b	.L48
 719              	.L47:
 758:.\Generated_Source\PSoC4/SPI0.c ****         }
 759:.\Generated_Source\PSoC4/SPI0.c ****         else if(0u != (size & SPI0_STS_TX_FIFO_NOT_FULL))
 720              		.loc 1 759 0
 721 0020 FB1D     		add	r3, r7, #7
 722 0022 1A78     		ldrb	r2, [r3]
 723 0024 0423     		mov	r3, #4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 27


 724 0026 1340     		and	r3, r2
 725 0028 03D0     		beq	.L49
 760:.\Generated_Source\PSoC4/SPI0.c ****         {
 761:.\Generated_Source\PSoC4/SPI0.c ****             size = 1u;
 726              		.loc 1 761 0
 727 002a FB1D     		add	r3, r7, #7
 728 002c 0122     		mov	r2, #1
 729 002e 1A70     		strb	r2, [r3]
 730 0030 02E0     		b	.L48
 731              	.L49:
 762:.\Generated_Source\PSoC4/SPI0.c ****         }
 763:.\Generated_Source\PSoC4/SPI0.c ****         else
 764:.\Generated_Source\PSoC4/SPI0.c ****         {
 765:.\Generated_Source\PSoC4/SPI0.c ****             size = SPI0_FIFO_SIZE;
 732              		.loc 1 765 0
 733 0032 FB1D     		add	r3, r7, #7
 734 0034 0422     		mov	r2, #4
 735 0036 1A70     		strb	r2, [r3]
 736              	.L48:
 766:.\Generated_Source\PSoC4/SPI0.c ****         }
 767:.\Generated_Source\PSoC4/SPI0.c **** 
 768:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
 769:.\Generated_Source\PSoC4/SPI0.c **** 
 770:.\Generated_Source\PSoC4/SPI0.c ****     return(size);
 737              		.loc 1 770 0
 738 0038 FB1D     		add	r3, r7, #7
 739 003a 1B78     		ldrb	r3, [r3]
 771:.\Generated_Source\PSoC4/SPI0.c **** }
 740              		.loc 1 771 0
 741 003c 181C     		mov	r0, r3
 742 003e BD46     		mov	sp, r7
 743 0040 02B0     		add	sp, sp, #8
 744              		@ sp needed for prologue
 745 0042 80BD     		pop	{r7, pc}
 746              	.L52:
 747              		.align	2
 748              	.L51:
 749 0044 63000F40 		.word	1074724963
 750              		.cfi_endproc
 751              	.LFE15:
 752              		.size	SPI0_GetTxBufferSize, .-SPI0_GetTxBufferSize
 753              		.section	.text.SPI0_ClearRxBuffer,"ax",%progbits
 754              		.align	2
 755              		.global	SPI0_ClearRxBuffer
 756              		.code	16
 757              		.thumb_func
 758              		.type	SPI0_ClearRxBuffer, %function
 759              	SPI0_ClearRxBuffer:
 760              	.LFB16:
 772:.\Generated_Source\PSoC4/SPI0.c **** 
 773:.\Generated_Source\PSoC4/SPI0.c **** 
 774:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 775:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_ClearRxBuffer
 776:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 777:.\Generated_Source\PSoC4/SPI0.c **** *
 778:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 779:.\Generated_Source\PSoC4/SPI0.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 28


 780:.\Generated_Source\PSoC4/SPI0.c **** *
 781:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 782:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 783:.\Generated_Source\PSoC4/SPI0.c **** *
 784:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 785:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 786:.\Generated_Source\PSoC4/SPI0.c **** *
 787:.\Generated_Source\PSoC4/SPI0.c **** * Global variables:
 788:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_rxBufferWrite - used for the account of the bytes which
 789:.\Generated_Source\PSoC4/SPI0.c **** *  have been written down in the RX software buffer, modified every function
 790:.\Generated_Source\PSoC4/SPI0.c **** *  call - resets to zero.
 791:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_rxBufferRead - used for the account of the bytes which
 792:.\Generated_Source\PSoC4/SPI0.c **** *  have been read from the RX software buffer, modified every function call -
 793:.\Generated_Source\PSoC4/SPI0.c **** *  resets to zero.
 794:.\Generated_Source\PSoC4/SPI0.c **** *
 795:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
 796:.\Generated_Source\PSoC4/SPI0.c **** *  Setting the pointers to zero makes the system believe there is no data to
 797:.\Generated_Source\PSoC4/SPI0.c **** *  read and writing will resume at address 0 overwriting any data that may have
 798:.\Generated_Source\PSoC4/SPI0.c **** *  remained in the RAM.
 799:.\Generated_Source\PSoC4/SPI0.c **** *
 800:.\Generated_Source\PSoC4/SPI0.c **** * Side Effects:
 801:.\Generated_Source\PSoC4/SPI0.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 802:.\Generated_Source\PSoC4/SPI0.c **** *
 803:.\Generated_Source\PSoC4/SPI0.c **** * Reentrant:
 804:.\Generated_Source\PSoC4/SPI0.c **** *  No.
 805:.\Generated_Source\PSoC4/SPI0.c **** *
 806:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 807:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_ClearRxBuffer(void) 
 808:.\Generated_Source\PSoC4/SPI0.c **** {
 761              		.loc 1 808 0
 762              		.cfi_startproc
 763 0000 80B5     		push	{r7, lr}
 764              	.LCFI42:
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 7, -8
 767              		.cfi_offset 14, -4
 768 0002 00AF     		add	r7, sp, #0
 769              	.LCFI43:
 770              		.cfi_def_cfa_register 7
 809:.\Generated_Source\PSoC4/SPI0.c ****     /* Clear Hardware RX FIFO */
 810:.\Generated_Source\PSoC4/SPI0.c ****     while(0u !=(SPI0_RX_STATUS_REG & SPI0_STS_RX_FIFO_NOT_EMPTY))
 771              		.loc 1 810 0
 772 0004 01E0     		b	.L54
 773              	.L55:
 811:.\Generated_Source\PSoC4/SPI0.c ****     {
 812:.\Generated_Source\PSoC4/SPI0.c ****         (void) CY_GET_REG8(SPI0_RXDATA_PTR);
 774              		.loc 1 812 0
 775 0006 054B     		ldr	r3, .L56
 776 0008 1B78     		ldrb	r3, [r3]
 777              	.L54:
 810:.\Generated_Source\PSoC4/SPI0.c ****     while(0u !=(SPI0_RX_STATUS_REG & SPI0_STS_RX_FIFO_NOT_EMPTY))
 778              		.loc 1 810 0 discriminator 1
 779 000a 054B     		ldr	r3, .L56+4
 780 000c 1B78     		ldrb	r3, [r3]
 781 000e DBB2     		uxtb	r3, r3
 782 0010 1A1C     		mov	r2, r3
 783 0012 2023     		mov	r3, #32
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 29


 784 0014 1340     		and	r3, r2
 785 0016 F6D1     		bne	.L55
 813:.\Generated_Source\PSoC4/SPI0.c ****     }
 814:.\Generated_Source\PSoC4/SPI0.c **** 
 815:.\Generated_Source\PSoC4/SPI0.c ****     #if(SPI0_RX_SOFTWARE_BUF_ENABLED)
 816:.\Generated_Source\PSoC4/SPI0.c ****         /* Disable RX interrupt to protect global veriables */
 817:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_DisableRxInt();
 818:.\Generated_Source\PSoC4/SPI0.c **** 
 819:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_rxBufferFull  = 0u;
 820:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_rxBufferRead  = 0u;
 821:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_rxBufferWrite = 0u;
 822:.\Generated_Source\PSoC4/SPI0.c **** 
 823:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_EnableRxInt();
 824:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (SPI0_RX_SOFTWARE_BUF_ENABLED) */
 825:.\Generated_Source\PSoC4/SPI0.c **** }
 786              		.loc 1 825 0
 787 0018 BD46     		mov	sp, r7
 788              		@ sp needed for prologue
 789 001a 80BD     		pop	{r7, pc}
 790              	.L57:
 791              		.align	2
 792              	.L56:
 793 001c 50000F40 		.word	1074724944
 794 0020 62000F40 		.word	1074724962
 795              		.cfi_endproc
 796              	.LFE16:
 797              		.size	SPI0_ClearRxBuffer, .-SPI0_ClearRxBuffer
 798              		.section	.text.SPI0_ClearTxBuffer,"ax",%progbits
 799              		.align	2
 800              		.global	SPI0_ClearTxBuffer
 801              		.code	16
 802              		.thumb_func
 803              		.type	SPI0_ClearTxBuffer, %function
 804              	SPI0_ClearTxBuffer:
 805              	.LFB17:
 826:.\Generated_Source\PSoC4/SPI0.c **** 
 827:.\Generated_Source\PSoC4/SPI0.c **** 
 828:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 829:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_ClearTxBuffer
 830:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 831:.\Generated_Source\PSoC4/SPI0.c **** *
 832:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 833:.\Generated_Source\PSoC4/SPI0.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 834:.\Generated_Source\PSoC4/SPI0.c **** *
 835:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 836:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 837:.\Generated_Source\PSoC4/SPI0.c **** *
 838:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 839:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 840:.\Generated_Source\PSoC4/SPI0.c **** *
 841:.\Generated_Source\PSoC4/SPI0.c **** * Global variables:
 842:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_txBufferWrite - used for the account of the bytes which
 843:.\Generated_Source\PSoC4/SPI0.c **** *  have been written down in the TX software buffer, modified every function
 844:.\Generated_Source\PSoC4/SPI0.c **** *  call - resets to zero.
 845:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_txBufferRead - used for the account of the bytes which
 846:.\Generated_Source\PSoC4/SPI0.c **** *  have been read from the TX software buffer, modified every function call -
 847:.\Generated_Source\PSoC4/SPI0.c **** *  resets to zero.
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 30


 848:.\Generated_Source\PSoC4/SPI0.c **** *
 849:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
 850:.\Generated_Source\PSoC4/SPI0.c **** *  Setting the pointers to zero makes the system believe there is no data to
 851:.\Generated_Source\PSoC4/SPI0.c **** *  read and writing will resume at address 0 overwriting any data that may have
 852:.\Generated_Source\PSoC4/SPI0.c **** *  remained in the RAM.
 853:.\Generated_Source\PSoC4/SPI0.c **** *
 854:.\Generated_Source\PSoC4/SPI0.c **** * Side Effects:
 855:.\Generated_Source\PSoC4/SPI0.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 856:.\Generated_Source\PSoC4/SPI0.c **** *  overwritten.
 857:.\Generated_Source\PSoC4/SPI0.c **** *
 858:.\Generated_Source\PSoC4/SPI0.c **** * Reentrant:
 859:.\Generated_Source\PSoC4/SPI0.c **** *  No.
 860:.\Generated_Source\PSoC4/SPI0.c **** *
 861:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 862:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_ClearTxBuffer(void) 
 863:.\Generated_Source\PSoC4/SPI0.c **** {
 806              		.loc 1 863 0
 807              		.cfi_startproc
 808 0000 90B5     		push	{r4, r7, lr}
 809              	.LCFI44:
 810              		.cfi_def_cfa_offset 12
 811              		.cfi_offset 4, -12
 812              		.cfi_offset 7, -8
 813              		.cfi_offset 14, -4
 814 0002 83B0     		sub	sp, sp, #12
 815              	.LCFI45:
 816              		.cfi_def_cfa_offset 24
 817 0004 00AF     		add	r7, sp, #0
 818              	.LCFI46:
 819              		.cfi_def_cfa_register 7
 864:.\Generated_Source\PSoC4/SPI0.c ****     uint8 enableInterrupts;
 865:.\Generated_Source\PSoC4/SPI0.c **** 
 866:.\Generated_Source\PSoC4/SPI0.c ****     enableInterrupts = CyEnterCriticalSection();
 820              		.loc 1 866 0
 821 0006 FC1D     		add	r4, r7, #7
 822 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 823 000c 031C     		mov	r3, r0
 824 000e 2370     		strb	r3, [r4]
 867:.\Generated_Source\PSoC4/SPI0.c ****     /* Clear TX FIFO */
 868:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_AUX_CONTROL_DP0_REG |= ((uint8)  SPI0_TX_FIFO_CLR);
 825              		.loc 1 868 0
 826 0010 0B4B     		ldr	r3, .L59
 827 0012 0B4A     		ldr	r2, .L59
 828 0014 1278     		ldrb	r2, [r2]
 829 0016 D2B2     		uxtb	r2, r2
 830 0018 0121     		mov	r1, #1
 831 001a 0A43     		orr	r2, r1
 832 001c D2B2     		uxtb	r2, r2
 833 001e 1A70     		strb	r2, [r3]
 869:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI0_TX_FIFO_CLR);
 834              		.loc 1 869 0
 835 0020 074B     		ldr	r3, .L59
 836 0022 074A     		ldr	r2, .L59
 837 0024 1278     		ldrb	r2, [r2]
 838 0026 D2B2     		uxtb	r2, r2
 839 0028 0121     		mov	r1, #1
 840 002a 8A43     		bic	r2, r1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 31


 841 002c D2B2     		uxtb	r2, r2
 842 002e 1A70     		strb	r2, [r3]
 870:.\Generated_Source\PSoC4/SPI0.c **** 
 871:.\Generated_Source\PSoC4/SPI0.c ****     #if(SPI0_USE_SECOND_DATAPATH)
 872:.\Generated_Source\PSoC4/SPI0.c ****         /* Clear TX FIFO for 2nd Datapath */
 873:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_AUX_CONTROL_DP1_REG |= ((uint8)  SPI0_TX_FIFO_CLR);
 874:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI0_TX_FIFO_CLR);
 875:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (SPI0_USE_SECOND_DATAPATH) */
 876:.\Generated_Source\PSoC4/SPI0.c ****     CyExitCriticalSection(enableInterrupts);
 843              		.loc 1 876 0
 844 0030 FB1D     		add	r3, r7, #7
 845 0032 1B78     		ldrb	r3, [r3]
 846 0034 181C     		mov	r0, r3
 847 0036 FFF7FEFF 		bl	CyExitCriticalSection
 877:.\Generated_Source\PSoC4/SPI0.c **** 
 878:.\Generated_Source\PSoC4/SPI0.c ****     #if(SPI0_TX_SOFTWARE_BUF_ENABLED)
 879:.\Generated_Source\PSoC4/SPI0.c ****         /* Disable TX interrupt to protect global veriables */
 880:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_DisableTxInt();
 881:.\Generated_Source\PSoC4/SPI0.c **** 
 882:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_txBufferFull  = 0u;
 883:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_txBufferRead  = 0u;
 884:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_txBufferWrite = 0u;
 885:.\Generated_Source\PSoC4/SPI0.c **** 
 886:.\Generated_Source\PSoC4/SPI0.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 887:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_TX_STATUS_MASK_REG &= ((uint8) ~SPI0_STS_TX_FIFO_NOT_FULL);
 888:.\Generated_Source\PSoC4/SPI0.c **** 
 889:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_EnableTxInt();
 890:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED) */
 891:.\Generated_Source\PSoC4/SPI0.c **** }
 848              		.loc 1 891 0
 849 003a BD46     		mov	sp, r7
 850 003c 03B0     		add	sp, sp, #12
 851              		@ sp needed for prologue
 852 003e 90BD     		pop	{r4, r7, pc}
 853              	.L60:
 854              		.align	2
 855              	.L59:
 856 0040 90000F40 		.word	1074725008
 857              		.cfi_endproc
 858              	.LFE17:
 859              		.size	SPI0_ClearTxBuffer, .-SPI0_ClearTxBuffer
 860              		.section	.text.SPI0_PutArray,"ax",%progbits
 861              		.align	2
 862              		.global	SPI0_PutArray
 863              		.code	16
 864              		.thumb_func
 865              		.type	SPI0_PutArray, %function
 866              	SPI0_PutArray:
 867              	.LFB18:
 892:.\Generated_Source\PSoC4/SPI0.c **** 
 893:.\Generated_Source\PSoC4/SPI0.c **** 
 894:.\Generated_Source\PSoC4/SPI0.c **** #if(0u != SPI0_BIDIRECTIONAL_MODE)
 895:.\Generated_Source\PSoC4/SPI0.c ****     /*******************************************************************************
 896:.\Generated_Source\PSoC4/SPI0.c ****     * Function Name: SPI0_TxEnable
 897:.\Generated_Source\PSoC4/SPI0.c ****     ********************************************************************************
 898:.\Generated_Source\PSoC4/SPI0.c ****     *
 899:.\Generated_Source\PSoC4/SPI0.c ****     * Summary:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 32


 900:.\Generated_Source\PSoC4/SPI0.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 901:.\Generated_Source\PSoC4/SPI0.c ****     *  will set the bi-directional pin to transmit.
 902:.\Generated_Source\PSoC4/SPI0.c ****     *
 903:.\Generated_Source\PSoC4/SPI0.c ****     * Parameters:
 904:.\Generated_Source\PSoC4/SPI0.c ****     *  None.
 905:.\Generated_Source\PSoC4/SPI0.c ****     *
 906:.\Generated_Source\PSoC4/SPI0.c ****     * Return:
 907:.\Generated_Source\PSoC4/SPI0.c ****     *  None.
 908:.\Generated_Source\PSoC4/SPI0.c ****     *
 909:.\Generated_Source\PSoC4/SPI0.c ****     *******************************************************************************/
 910:.\Generated_Source\PSoC4/SPI0.c ****     void SPI0_TxEnable(void) 
 911:.\Generated_Source\PSoC4/SPI0.c ****     {
 912:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_CONTROL_REG |= SPI0_CTRL_TX_SIGNAL_EN;
 913:.\Generated_Source\PSoC4/SPI0.c ****     }
 914:.\Generated_Source\PSoC4/SPI0.c **** 
 915:.\Generated_Source\PSoC4/SPI0.c **** 
 916:.\Generated_Source\PSoC4/SPI0.c ****     /*******************************************************************************
 917:.\Generated_Source\PSoC4/SPI0.c ****     * Function Name: SPI0_TxDisable
 918:.\Generated_Source\PSoC4/SPI0.c ****     ********************************************************************************
 919:.\Generated_Source\PSoC4/SPI0.c ****     *
 920:.\Generated_Source\PSoC4/SPI0.c ****     * Summary:
 921:.\Generated_Source\PSoC4/SPI0.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 922:.\Generated_Source\PSoC4/SPI0.c ****     *  will set the bi-directional pin to receive.
 923:.\Generated_Source\PSoC4/SPI0.c ****     *
 924:.\Generated_Source\PSoC4/SPI0.c ****     * Parameters:
 925:.\Generated_Source\PSoC4/SPI0.c ****     *  None.
 926:.\Generated_Source\PSoC4/SPI0.c ****     *
 927:.\Generated_Source\PSoC4/SPI0.c ****     * Return:
 928:.\Generated_Source\PSoC4/SPI0.c ****     *  None.
 929:.\Generated_Source\PSoC4/SPI0.c ****     *
 930:.\Generated_Source\PSoC4/SPI0.c ****     *******************************************************************************/
 931:.\Generated_Source\PSoC4/SPI0.c ****     void SPI0_TxDisable(void) 
 932:.\Generated_Source\PSoC4/SPI0.c ****     {
 933:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_CONTROL_REG &= ((uint8) ~SPI0_CTRL_TX_SIGNAL_EN);
 934:.\Generated_Source\PSoC4/SPI0.c ****     }
 935:.\Generated_Source\PSoC4/SPI0.c **** 
 936:.\Generated_Source\PSoC4/SPI0.c **** #endif /* (0u != SPI0_BIDIRECTIONAL_MODE) */
 937:.\Generated_Source\PSoC4/SPI0.c **** 
 938:.\Generated_Source\PSoC4/SPI0.c **** 
 939:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 940:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_PutArray
 941:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 942:.\Generated_Source\PSoC4/SPI0.c **** *
 943:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 944:.\Generated_Source\PSoC4/SPI0.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 945:.\Generated_Source\PSoC4/SPI0.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 946:.\Generated_Source\PSoC4/SPI0.c **** *
 947:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 948:.\Generated_Source\PSoC4/SPI0.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 949:.\Generated_Source\PSoC4/SPI0.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 950:.\Generated_Source\PSoC4/SPI0.c **** *
 951:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 952:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 953:.\Generated_Source\PSoC4/SPI0.c **** *
 954:.\Generated_Source\PSoC4/SPI0.c **** * Side Effects:
 955:.\Generated_Source\PSoC4/SPI0.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 956:.\Generated_Source\PSoC4/SPI0.c **** *  this loop if data is not being initiated by the master if there is not
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 33


 957:.\Generated_Source\PSoC4/SPI0.c **** *  enough room in the TX FIFO.
 958:.\Generated_Source\PSoC4/SPI0.c **** *
 959:.\Generated_Source\PSoC4/SPI0.c **** * Reentrant:
 960:.\Generated_Source\PSoC4/SPI0.c **** *  No.
 961:.\Generated_Source\PSoC4/SPI0.c **** *
 962:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 963:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_PutArray(const uint8 buffer[], uint8 byteCount)
 964:.\Generated_Source\PSoC4/SPI0.c ****                                                                           
 965:.\Generated_Source\PSoC4/SPI0.c **** {
 868              		.loc 1 965 0
 869              		.cfi_startproc
 870 0000 80B5     		push	{r7, lr}
 871              	.LCFI47:
 872              		.cfi_def_cfa_offset 8
 873              		.cfi_offset 7, -8
 874              		.cfi_offset 14, -4
 875 0002 84B0     		sub	sp, sp, #16
 876              	.LCFI48:
 877              		.cfi_def_cfa_offset 24
 878 0004 00AF     		add	r7, sp, #0
 879              	.LCFI49:
 880              		.cfi_def_cfa_register 7
 881 0006 7860     		str	r0, [r7, #4]
 882 0008 0A1C     		mov	r2, r1
 883 000a FB1C     		add	r3, r7, #3
 884 000c 1A70     		strb	r2, [r3]
 966:.\Generated_Source\PSoC4/SPI0.c ****     uint8 bufIndex;
 967:.\Generated_Source\PSoC4/SPI0.c **** 
 968:.\Generated_Source\PSoC4/SPI0.c ****     bufIndex = 0u;
 885              		.loc 1 968 0
 886 000e 3B1C     		mov	r3, r7
 887 0010 0F33     		add	r3, r3, #15
 888 0012 0022     		mov	r2, #0
 889 0014 1A70     		strb	r2, [r3]
 969:.\Generated_Source\PSoC4/SPI0.c **** 
 970:.\Generated_Source\PSoC4/SPI0.c ****     while(byteCount > 0u)
 890              		.loc 1 970 0
 891 0016 14E0     		b	.L62
 892              	.L63:
 971:.\Generated_Source\PSoC4/SPI0.c ****     {
 972:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_WriteTxData(buffer[bufIndex]);
 893              		.loc 1 972 0
 894 0018 3B1C     		mov	r3, r7
 895 001a 0F33     		add	r3, r3, #15
 896 001c 1B78     		ldrb	r3, [r3]
 897 001e 7A68     		ldr	r2, [r7, #4]
 898 0020 D318     		add	r3, r2, r3
 899 0022 1B78     		ldrb	r3, [r3]
 900 0024 181C     		mov	r0, r3
 901 0026 FFF7FEFF 		bl	SPI0_WriteTxData
 973:.\Generated_Source\PSoC4/SPI0.c ****         bufIndex++;
 902              		.loc 1 973 0
 903 002a 3B1C     		mov	r3, r7
 904 002c 0F33     		add	r3, r3, #15
 905 002e 3A1C     		mov	r2, r7
 906 0030 0F32     		add	r2, r2, #15
 907 0032 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 34


 908 0034 0132     		add	r2, r2, #1
 909 0036 1A70     		strb	r2, [r3]
 974:.\Generated_Source\PSoC4/SPI0.c ****         byteCount--;
 910              		.loc 1 974 0
 911 0038 FB1C     		add	r3, r7, #3
 912 003a FA1C     		add	r2, r7, #3
 913 003c 1278     		ldrb	r2, [r2]
 914 003e 013A     		sub	r2, r2, #1
 915 0040 1A70     		strb	r2, [r3]
 916              	.L62:
 970:.\Generated_Source\PSoC4/SPI0.c ****     while(byteCount > 0u)
 917              		.loc 1 970 0 discriminator 1
 918 0042 FB1C     		add	r3, r7, #3
 919 0044 1B78     		ldrb	r3, [r3]
 920 0046 002B     		cmp	r3, #0
 921 0048 E6D1     		bne	.L63
 975:.\Generated_Source\PSoC4/SPI0.c ****     }
 976:.\Generated_Source\PSoC4/SPI0.c **** }
 922              		.loc 1 976 0
 923 004a BD46     		mov	sp, r7
 924 004c 04B0     		add	sp, sp, #16
 925              		@ sp needed for prologue
 926 004e 80BD     		pop	{r7, pc}
 927              		.cfi_endproc
 928              	.LFE18:
 929              		.size	SPI0_PutArray, .-SPI0_PutArray
 930              		.section	.text.SPI0_ClearFIFO,"ax",%progbits
 931              		.align	2
 932              		.global	SPI0_ClearFIFO
 933              		.code	16
 934              		.thumb_func
 935              		.type	SPI0_ClearFIFO, %function
 936              	SPI0_ClearFIFO:
 937              	.LFB19:
 977:.\Generated_Source\PSoC4/SPI0.c **** 
 978:.\Generated_Source\PSoC4/SPI0.c **** 
 979:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
 980:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_ClearFIFO
 981:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
 982:.\Generated_Source\PSoC4/SPI0.c **** *
 983:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
 984:.\Generated_Source\PSoC4/SPI0.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 985:.\Generated_Source\PSoC4/SPI0.c **** *
 986:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
 987:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 988:.\Generated_Source\PSoC4/SPI0.c **** *
 989:.\Generated_Source\PSoC4/SPI0.c **** * Return:
 990:.\Generated_Source\PSoC4/SPI0.c **** *  None.
 991:.\Generated_Source\PSoC4/SPI0.c **** *
 992:.\Generated_Source\PSoC4/SPI0.c **** * Side Effects:
 993:.\Generated_Source\PSoC4/SPI0.c **** *  Clear status register of the component.
 994:.\Generated_Source\PSoC4/SPI0.c **** *
 995:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
 996:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_ClearFIFO(void) 
 997:.\Generated_Source\PSoC4/SPI0.c **** {
 938              		.loc 1 997 0
 939              		.cfi_startproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 35


 940 0000 90B5     		push	{r4, r7, lr}
 941              	.LCFI50:
 942              		.cfi_def_cfa_offset 12
 943              		.cfi_offset 4, -12
 944              		.cfi_offset 7, -8
 945              		.cfi_offset 14, -4
 946 0002 83B0     		sub	sp, sp, #12
 947              	.LCFI51:
 948              		.cfi_def_cfa_offset 24
 949 0004 00AF     		add	r7, sp, #0
 950              	.LCFI52:
 951              		.cfi_def_cfa_register 7
 998:.\Generated_Source\PSoC4/SPI0.c ****     uint8 enableInterrupts;
 999:.\Generated_Source\PSoC4/SPI0.c **** 
1000:.\Generated_Source\PSoC4/SPI0.c ****     /* Clear Hardware RX FIFO */
1001:.\Generated_Source\PSoC4/SPI0.c ****     while(0u !=(SPI0_RX_STATUS_REG & SPI0_STS_RX_FIFO_NOT_EMPTY))
 952              		.loc 1 1001 0
 953 0006 01E0     		b	.L65
 954              	.L66:
1002:.\Generated_Source\PSoC4/SPI0.c ****     {
1003:.\Generated_Source\PSoC4/SPI0.c ****         (void) CY_GET_REG8(SPI0_RXDATA_PTR);
 955              		.loc 1 1003 0
 956 0008 124B     		ldr	r3, .L67
 957 000a 1B78     		ldrb	r3, [r3]
 958              	.L65:
1001:.\Generated_Source\PSoC4/SPI0.c ****     while(0u !=(SPI0_RX_STATUS_REG & SPI0_STS_RX_FIFO_NOT_EMPTY))
 959              		.loc 1 1001 0 discriminator 1
 960 000c 124B     		ldr	r3, .L67+4
 961 000e 1B78     		ldrb	r3, [r3]
 962 0010 DBB2     		uxtb	r3, r3
 963 0012 1A1C     		mov	r2, r3
 964 0014 2023     		mov	r3, #32
 965 0016 1340     		and	r3, r2
 966 0018 F6D1     		bne	.L66
1004:.\Generated_Source\PSoC4/SPI0.c ****     }
1005:.\Generated_Source\PSoC4/SPI0.c **** 
1006:.\Generated_Source\PSoC4/SPI0.c ****     enableInterrupts = CyEnterCriticalSection();
 967              		.loc 1 1006 0
 968 001a FC1D     		add	r4, r7, #7
 969 001c FFF7FEFF 		bl	CyEnterCriticalSection
 970 0020 031C     		mov	r3, r0
 971 0022 2370     		strb	r3, [r4]
1007:.\Generated_Source\PSoC4/SPI0.c ****     /* Clear TX FIFO */
1008:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_AUX_CONTROL_DP0_REG |= ((uint8)  SPI0_TX_FIFO_CLR);
 972              		.loc 1 1008 0
 973 0024 0D4B     		ldr	r3, .L67+8
 974 0026 0D4A     		ldr	r2, .L67+8
 975 0028 1278     		ldrb	r2, [r2]
 976 002a D2B2     		uxtb	r2, r2
 977 002c 0121     		mov	r1, #1
 978 002e 0A43     		orr	r2, r1
 979 0030 D2B2     		uxtb	r2, r2
 980 0032 1A70     		strb	r2, [r3]
1009:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI0_TX_FIFO_CLR);
 981              		.loc 1 1009 0
 982 0034 094B     		ldr	r3, .L67+8
 983 0036 094A     		ldr	r2, .L67+8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 36


 984 0038 1278     		ldrb	r2, [r2]
 985 003a D2B2     		uxtb	r2, r2
 986 003c 0121     		mov	r1, #1
 987 003e 8A43     		bic	r2, r1
 988 0040 D2B2     		uxtb	r2, r2
 989 0042 1A70     		strb	r2, [r3]
1010:.\Generated_Source\PSoC4/SPI0.c **** 
1011:.\Generated_Source\PSoC4/SPI0.c ****     #if(SPI0_USE_SECOND_DATAPATH)
1012:.\Generated_Source\PSoC4/SPI0.c ****         /* Clear TX FIFO for 2nd Datapath */
1013:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_AUX_CONTROL_DP1_REG |= ((uint8)  SPI0_TX_FIFO_CLR);
1014:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI0_TX_FIFO_CLR);
1015:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (SPI0_USE_SECOND_DATAPATH) */
1016:.\Generated_Source\PSoC4/SPI0.c ****     CyExitCriticalSection(enableInterrupts);
 990              		.loc 1 1016 0
 991 0044 FB1D     		add	r3, r7, #7
 992 0046 1B78     		ldrb	r3, [r3]
 993 0048 181C     		mov	r0, r3
 994 004a FFF7FEFF 		bl	CyExitCriticalSection
1017:.\Generated_Source\PSoC4/SPI0.c **** }
 995              		.loc 1 1017 0
 996 004e BD46     		mov	sp, r7
 997 0050 03B0     		add	sp, sp, #12
 998              		@ sp needed for prologue
 999 0052 90BD     		pop	{r4, r7, pc}
 1000              	.L68:
 1001              		.align	2
 1002              	.L67:
 1003 0054 50000F40 		.word	1074724944
 1004 0058 62000F40 		.word	1074724962
 1005 005c 90000F40 		.word	1074725008
 1006              		.cfi_endproc
 1007              	.LFE19:
 1008              		.size	SPI0_ClearFIFO, .-SPI0_ClearFIFO
 1009              		.section	.text.SPI0_EnableInt,"ax",%progbits
 1010              		.align	2
 1011              		.global	SPI0_EnableInt
 1012              		.code	16
 1013              		.thumb_func
 1014              		.type	SPI0_EnableInt, %function
 1015              	SPI0_EnableInt:
 1016              	.LFB20:
1018:.\Generated_Source\PSoC4/SPI0.c **** 
1019:.\Generated_Source\PSoC4/SPI0.c **** 
1020:.\Generated_Source\PSoC4/SPI0.c **** /* Following functions are for version Compatibility, they are obsolete.
1021:.\Generated_Source\PSoC4/SPI0.c **** *  Please do not use it in new projects.
1022:.\Generated_Source\PSoC4/SPI0.c **** */
1023:.\Generated_Source\PSoC4/SPI0.c **** 
1024:.\Generated_Source\PSoC4/SPI0.c **** 
1025:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
1026:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_EnableInt
1027:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
1028:.\Generated_Source\PSoC4/SPI0.c **** *
1029:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
1030:.\Generated_Source\PSoC4/SPI0.c **** *  Enable internal interrupt generation.
1031:.\Generated_Source\PSoC4/SPI0.c **** *
1032:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
1033:.\Generated_Source\PSoC4/SPI0.c **** *  None.
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 37


1034:.\Generated_Source\PSoC4/SPI0.c **** *
1035:.\Generated_Source\PSoC4/SPI0.c **** * Return:
1036:.\Generated_Source\PSoC4/SPI0.c **** *  None.
1037:.\Generated_Source\PSoC4/SPI0.c **** *
1038:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
1039:.\Generated_Source\PSoC4/SPI0.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1040:.\Generated_Source\PSoC4/SPI0.c **** *
1041:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
1042:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_EnableInt(void) 
1043:.\Generated_Source\PSoC4/SPI0.c **** {
 1017              		.loc 1 1043 0
 1018              		.cfi_startproc
 1019 0000 80B5     		push	{r7, lr}
 1020              	.LCFI53:
 1021              		.cfi_def_cfa_offset 8
 1022              		.cfi_offset 7, -8
 1023              		.cfi_offset 14, -4
 1024 0002 00AF     		add	r7, sp, #0
 1025              	.LCFI54:
 1026              		.cfi_def_cfa_register 7
1044:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_EnableRxInt();
 1027              		.loc 1 1044 0
 1028 0004 FFF7FEFF 		bl	SPI0_EnableRxInt
1045:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_EnableTxInt();
 1029              		.loc 1 1045 0
 1030 0008 FFF7FEFF 		bl	SPI0_EnableTxInt
1046:.\Generated_Source\PSoC4/SPI0.c **** }
 1031              		.loc 1 1046 0
 1032 000c BD46     		mov	sp, r7
 1033              		@ sp needed for prologue
 1034 000e 80BD     		pop	{r7, pc}
 1035              		.cfi_endproc
 1036              	.LFE20:
 1037              		.size	SPI0_EnableInt, .-SPI0_EnableInt
 1038              		.section	.text.SPI0_DisableInt,"ax",%progbits
 1039              		.align	2
 1040              		.global	SPI0_DisableInt
 1041              		.code	16
 1042              		.thumb_func
 1043              		.type	SPI0_DisableInt, %function
 1044              	SPI0_DisableInt:
 1045              	.LFB21:
1047:.\Generated_Source\PSoC4/SPI0.c **** 
1048:.\Generated_Source\PSoC4/SPI0.c **** 
1049:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
1050:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_DisableInt
1051:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
1052:.\Generated_Source\PSoC4/SPI0.c **** *
1053:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
1054:.\Generated_Source\PSoC4/SPI0.c **** *  Disable internal interrupt generation.
1055:.\Generated_Source\PSoC4/SPI0.c **** *
1056:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
1057:.\Generated_Source\PSoC4/SPI0.c **** *  None.
1058:.\Generated_Source\PSoC4/SPI0.c **** *
1059:.\Generated_Source\PSoC4/SPI0.c **** * Return:
1060:.\Generated_Source\PSoC4/SPI0.c **** *  None.
1061:.\Generated_Source\PSoC4/SPI0.c **** *
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 38


1062:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
1063:.\Generated_Source\PSoC4/SPI0.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1064:.\Generated_Source\PSoC4/SPI0.c **** *
1065:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
1066:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_DisableInt(void) 
1067:.\Generated_Source\PSoC4/SPI0.c **** {
 1046              		.loc 1 1067 0
 1047              		.cfi_startproc
 1048 0000 80B5     		push	{r7, lr}
 1049              	.LCFI55:
 1050              		.cfi_def_cfa_offset 8
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
 1053 0002 00AF     		add	r7, sp, #0
 1054              	.LCFI56:
 1055              		.cfi_def_cfa_register 7
1068:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_DisableTxInt();
 1056              		.loc 1 1068 0
 1057 0004 FFF7FEFF 		bl	SPI0_DisableTxInt
1069:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_DisableRxInt();
 1058              		.loc 1 1069 0
 1059 0008 FFF7FEFF 		bl	SPI0_DisableRxInt
1070:.\Generated_Source\PSoC4/SPI0.c **** }
 1060              		.loc 1 1070 0
 1061 000c BD46     		mov	sp, r7
 1062              		@ sp needed for prologue
 1063 000e 80BD     		pop	{r7, pc}
 1064              		.cfi_endproc
 1065              	.LFE21:
 1066              		.size	SPI0_DisableInt, .-SPI0_DisableInt
 1067              		.section	.text.SPI0_SetInterruptMode,"ax",%progbits
 1068              		.align	2
 1069              		.global	SPI0_SetInterruptMode
 1070              		.code	16
 1071              		.thumb_func
 1072              		.type	SPI0_SetInterruptMode, %function
 1073              	SPI0_SetInterruptMode:
 1074              	.LFB22:
1071:.\Generated_Source\PSoC4/SPI0.c **** 
1072:.\Generated_Source\PSoC4/SPI0.c **** 
1073:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
1074:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_SetInterruptMode
1075:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
1076:.\Generated_Source\PSoC4/SPI0.c **** *
1077:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
1078:.\Generated_Source\PSoC4/SPI0.c **** *  Configure which status bits trigger an interrupt event.
1079:.\Generated_Source\PSoC4/SPI0.c **** *
1080:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
1081:.\Generated_Source\PSoC4/SPI0.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1082:.\Generated_Source\PSoC4/SPI0.c **** *  header file).
1083:.\Generated_Source\PSoC4/SPI0.c **** *
1084:.\Generated_Source\PSoC4/SPI0.c **** * Return:
1085:.\Generated_Source\PSoC4/SPI0.c **** *  None.
1086:.\Generated_Source\PSoC4/SPI0.c **** *
1087:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
1088:.\Generated_Source\PSoC4/SPI0.c **** *  Enables the output of specific status bits to the interrupt controller.
1089:.\Generated_Source\PSoC4/SPI0.c **** *
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 39


1090:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
1091:.\Generated_Source\PSoC4/SPI0.c **** void SPI0_SetInterruptMode(uint8 intSrc) 
1092:.\Generated_Source\PSoC4/SPI0.c **** {
 1075              		.loc 1 1092 0
 1076              		.cfi_startproc
 1077 0000 80B5     		push	{r7, lr}
 1078              	.LCFI57:
 1079              		.cfi_def_cfa_offset 8
 1080              		.cfi_offset 7, -8
 1081              		.cfi_offset 14, -4
 1082 0002 82B0     		sub	sp, sp, #8
 1083              	.LCFI58:
 1084              		.cfi_def_cfa_offset 16
 1085 0004 00AF     		add	r7, sp, #0
 1086              	.LCFI59:
 1087              		.cfi_def_cfa_register 7
 1088 0006 021C     		mov	r2, r0
 1089 0008 FB1D     		add	r3, r7, #7
 1090 000a 1A70     		strb	r2, [r3]
1093:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPI0_STS_SPI_IDLE));
 1091              		.loc 1 1093 0
 1092 000c 064B     		ldr	r3, .L72
 1093 000e FA1D     		add	r2, r7, #7
 1094 0010 1278     		ldrb	r2, [r2]
 1095 0012 1021     		mov	r1, #16
 1096 0014 8A43     		bic	r2, r1
 1097 0016 D2B2     		uxtb	r2, r2
 1098 0018 1A70     		strb	r2, [r3]
1094:.\Generated_Source\PSoC4/SPI0.c ****     SPI0_RX_STATUS_MASK_REG  =  intSrc;
 1099              		.loc 1 1094 0
 1100 001a 044B     		ldr	r3, .L72+4
 1101 001c FA1D     		add	r2, r7, #7
 1102 001e 1278     		ldrb	r2, [r2]
 1103 0020 1A70     		strb	r2, [r3]
1095:.\Generated_Source\PSoC4/SPI0.c **** }
 1104              		.loc 1 1095 0
 1105 0022 BD46     		mov	sp, r7
 1106 0024 02B0     		add	sp, sp, #8
 1107              		@ sp needed for prologue
 1108 0026 80BD     		pop	{r7, pc}
 1109              	.L73:
 1110              		.align	2
 1111              	.L72:
 1112 0028 83000F40 		.word	1074724995
 1113 002c 82000F40 		.word	1074724994
 1114              		.cfi_endproc
 1115              	.LFE22:
 1116              		.size	SPI0_SetInterruptMode, .-SPI0_SetInterruptMode
 1117              		.section	.text.SPI0_ReadStatus,"ax",%progbits
 1118              		.align	2
 1119              		.global	SPI0_ReadStatus
 1120              		.code	16
 1121              		.thumb_func
 1122              		.type	SPI0_ReadStatus, %function
 1123              	SPI0_ReadStatus:
 1124              	.LFB23:
1096:.\Generated_Source\PSoC4/SPI0.c **** 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 40


1097:.\Generated_Source\PSoC4/SPI0.c **** 
1098:.\Generated_Source\PSoC4/SPI0.c **** /*******************************************************************************
1099:.\Generated_Source\PSoC4/SPI0.c **** * Function Name: SPI0_ReadStatus
1100:.\Generated_Source\PSoC4/SPI0.c **** ********************************************************************************
1101:.\Generated_Source\PSoC4/SPI0.c **** *
1102:.\Generated_Source\PSoC4/SPI0.c **** * Summary:
1103:.\Generated_Source\PSoC4/SPI0.c **** *  Read the status register for the component.
1104:.\Generated_Source\PSoC4/SPI0.c **** *
1105:.\Generated_Source\PSoC4/SPI0.c **** * Parameters:
1106:.\Generated_Source\PSoC4/SPI0.c **** *  None.
1107:.\Generated_Source\PSoC4/SPI0.c **** *
1108:.\Generated_Source\PSoC4/SPI0.c **** * Return:
1109:.\Generated_Source\PSoC4/SPI0.c **** *  Contents of the status register.
1110:.\Generated_Source\PSoC4/SPI0.c **** *
1111:.\Generated_Source\PSoC4/SPI0.c **** * Global variables:
1112:.\Generated_Source\PSoC4/SPI0.c **** *  SPI0_swStatus - used to store in software status register,
1113:.\Generated_Source\PSoC4/SPI0.c **** *  modified every function call - resets to zero.
1114:.\Generated_Source\PSoC4/SPI0.c **** *
1115:.\Generated_Source\PSoC4/SPI0.c **** * Theory:
1116:.\Generated_Source\PSoC4/SPI0.c **** *  Allows the user and the API to read the status register for error detection
1117:.\Generated_Source\PSoC4/SPI0.c **** *  and flow control.
1118:.\Generated_Source\PSoC4/SPI0.c **** *
1119:.\Generated_Source\PSoC4/SPI0.c **** * Side Effects:
1120:.\Generated_Source\PSoC4/SPI0.c **** *  Clear status register of the component.
1121:.\Generated_Source\PSoC4/SPI0.c **** *
1122:.\Generated_Source\PSoC4/SPI0.c **** * Reentrant:
1123:.\Generated_Source\PSoC4/SPI0.c **** *  No.
1124:.\Generated_Source\PSoC4/SPI0.c **** *
1125:.\Generated_Source\PSoC4/SPI0.c **** *******************************************************************************/
1126:.\Generated_Source\PSoC4/SPI0.c **** uint8 SPI0_ReadStatus(void) 
1127:.\Generated_Source\PSoC4/SPI0.c **** {
 1125              		.loc 1 1127 0
 1126              		.cfi_startproc
 1127 0000 80B5     		push	{r7, lr}
 1128              	.LCFI60:
 1129              		.cfi_def_cfa_offset 8
 1130              		.cfi_offset 7, -8
 1131              		.cfi_offset 14, -4
 1132 0002 82B0     		sub	sp, sp, #8
 1133              	.LCFI61:
 1134              		.cfi_def_cfa_offset 16
 1135 0004 00AF     		add	r7, sp, #0
 1136              	.LCFI62:
 1137              		.cfi_def_cfa_register 7
1128:.\Generated_Source\PSoC4/SPI0.c ****     uint8 tmpStatus;
1129:.\Generated_Source\PSoC4/SPI0.c **** 
1130:.\Generated_Source\PSoC4/SPI0.c ****     #if(SPI0_TX_SOFTWARE_BUF_ENABLED || SPI0_RX_SOFTWARE_BUF_ENABLED)
1131:.\Generated_Source\PSoC4/SPI0.c **** 
1132:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_DisableInt();
1133:.\Generated_Source\PSoC4/SPI0.c **** 
1134:.\Generated_Source\PSoC4/SPI0.c ****         tmpStatus  = SPI0_GET_STATUS_RX(SPI0_swStatusRx);
1135:.\Generated_Source\PSoC4/SPI0.c ****         tmpStatus |= SPI0_GET_STATUS_TX(SPI0_swStatusTx);
1136:.\Generated_Source\PSoC4/SPI0.c ****         tmpStatus &= ((uint8) ~SPI0_STS_SPI_IDLE);
1137:.\Generated_Source\PSoC4/SPI0.c **** 
1138:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_swStatusTx = 0u;
1139:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_swStatusRx = 0u;
1140:.\Generated_Source\PSoC4/SPI0.c **** 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 41


1141:.\Generated_Source\PSoC4/SPI0.c ****         SPI0_EnableInt();
1142:.\Generated_Source\PSoC4/SPI0.c **** 
1143:.\Generated_Source\PSoC4/SPI0.c ****     #else
1144:.\Generated_Source\PSoC4/SPI0.c **** 
1145:.\Generated_Source\PSoC4/SPI0.c ****         tmpStatus  = SPI0_RX_STATUS_REG;
 1138              		.loc 1 1145 0
 1139 0006 0C4A     		ldr	r2, .L76
 1140 0008 FB1D     		add	r3, r7, #7
 1141 000a 1278     		ldrb	r2, [r2]
 1142 000c 1A70     		strb	r2, [r3]
1146:.\Generated_Source\PSoC4/SPI0.c ****         tmpStatus |= SPI0_TX_STATUS_REG;
 1143              		.loc 1 1146 0
 1144 000e 0B4B     		ldr	r3, .L76+4
 1145 0010 1B78     		ldrb	r3, [r3]
 1146 0012 D9B2     		uxtb	r1, r3
 1147 0014 FB1D     		add	r3, r7, #7
 1148 0016 FA1D     		add	r2, r7, #7
 1149 0018 1278     		ldrb	r2, [r2]
 1150 001a 0A43     		orr	r2, r1
 1151 001c 1A70     		strb	r2, [r3]
1147:.\Generated_Source\PSoC4/SPI0.c ****         tmpStatus &= ((uint8) ~SPI0_STS_SPI_IDLE);
 1152              		.loc 1 1147 0
 1153 001e FB1D     		add	r3, r7, #7
 1154 0020 FA1D     		add	r2, r7, #7
 1155 0022 1278     		ldrb	r2, [r2]
 1156 0024 1021     		mov	r1, #16
 1157 0026 8A43     		bic	r2, r1
 1158 0028 1A70     		strb	r2, [r3]
1148:.\Generated_Source\PSoC4/SPI0.c **** 
1149:.\Generated_Source\PSoC4/SPI0.c ****     #endif /* (SPI0_TX_SOFTWARE_BUF_ENABLED || SPI0_RX_SOFTWARE_BUF_ENABLED) */
1150:.\Generated_Source\PSoC4/SPI0.c **** 
1151:.\Generated_Source\PSoC4/SPI0.c ****     return(tmpStatus);
 1159              		.loc 1 1151 0
 1160 002a FB1D     		add	r3, r7, #7
 1161 002c 1B78     		ldrb	r3, [r3]
1152:.\Generated_Source\PSoC4/SPI0.c **** }
 1162              		.loc 1 1152 0
 1163 002e 181C     		mov	r0, r3
 1164 0030 BD46     		mov	sp, r7
 1165 0032 02B0     		add	sp, sp, #8
 1166              		@ sp needed for prologue
 1167 0034 80BD     		pop	{r7, pc}
 1168              	.L77:
 1169 0036 C046     		.align	2
 1170              	.L76:
 1171 0038 62000F40 		.word	1074724962
 1172 003c 63000F40 		.word	1074724963
 1173              		.cfi_endproc
 1174              	.LFE23:
 1175              		.size	SPI0_ReadStatus, .-SPI0_ReadStatus
 1176              		.text
 1177              	.Letext0:
 1178              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1179              		.section	.debug_info,"",%progbits
 1180              	.Ldebug_info0:
 1181 0000 66040000 		.4byte	0x466
 1182 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 42


 1183 0006 00000000 		.4byte	.Ldebug_abbrev0
 1184 000a 04       		.byte	0x4
 1185 000b 01       		.uleb128 0x1
 1186 000c 02030000 		.4byte	.LASF51
 1187 0010 01       		.byte	0x1
 1188 0011 92000000 		.4byte	.LASF52
 1189 0015 8E010000 		.4byte	.LASF53
 1190 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1191 001d 00000000 		.4byte	0
 1192 0021 00000000 		.4byte	0
 1193 0025 00000000 		.4byte	.Ldebug_line0
 1194 0029 02       		.uleb128 0x2
 1195 002a 01       		.byte	0x1
 1196 002b 06       		.byte	0x6
 1197 002c 68030000 		.4byte	.LASF0
 1198 0030 02       		.uleb128 0x2
 1199 0031 01       		.byte	0x1
 1200 0032 08       		.byte	0x8
 1201 0033 72010000 		.4byte	.LASF1
 1202 0037 02       		.uleb128 0x2
 1203 0038 02       		.byte	0x2
 1204 0039 05       		.byte	0x5
 1205 003a D5020000 		.4byte	.LASF2
 1206 003e 02       		.uleb128 0x2
 1207 003f 02       		.byte	0x2
 1208 0040 07       		.byte	0x7
 1209 0041 5C000000 		.4byte	.LASF3
 1210 0045 02       		.uleb128 0x2
 1211 0046 04       		.byte	0x4
 1212 0047 05       		.byte	0x5
 1213 0048 55030000 		.4byte	.LASF4
 1214 004c 02       		.uleb128 0x2
 1215 004d 04       		.byte	0x4
 1216 004e 07       		.byte	0x7
 1217 004f 04010000 		.4byte	.LASF5
 1218 0053 02       		.uleb128 0x2
 1219 0054 08       		.byte	0x8
 1220 0055 05       		.byte	0x5
 1221 0056 87020000 		.4byte	.LASF6
 1222 005a 02       		.uleb128 0x2
 1223 005b 08       		.byte	0x8
 1224 005c 07       		.byte	0x7
 1225 005d 17020000 		.4byte	.LASF7
 1226 0061 03       		.uleb128 0x3
 1227 0062 04       		.byte	0x4
 1228 0063 05       		.byte	0x5
 1229 0064 696E7400 		.ascii	"int\000"
 1230 0068 02       		.uleb128 0x2
 1231 0069 04       		.byte	0x4
 1232 006a 07       		.byte	0x7
 1233 006b F5010000 		.4byte	.LASF8
 1234 006f 04       		.uleb128 0x4
 1235 0070 26010000 		.4byte	.LASF12
 1236 0074 02       		.byte	0x2
 1237 0075 5B       		.byte	0x5b
 1238 0076 30000000 		.4byte	0x30
 1239 007a 02       		.uleb128 0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 43


 1240 007b 04       		.byte	0x4
 1241 007c 04       		.byte	0x4
 1242 007d DF000000 		.4byte	.LASF9
 1243 0081 02       		.uleb128 0x2
 1244 0082 08       		.byte	0x8
 1245 0083 04       		.byte	0x4
 1246 0084 80010000 		.4byte	.LASF10
 1247 0088 02       		.uleb128 0x2
 1248 0089 01       		.byte	0x1
 1249 008a 08       		.byte	0x8
 1250 008b A8020000 		.4byte	.LASF11
 1251 008f 04       		.uleb128 0x4
 1252 0090 FF000000 		.4byte	.LASF13
 1253 0094 02       		.byte	0x2
 1254 0095 F0       		.byte	0xf0
 1255 0096 9A000000 		.4byte	0x9a
 1256 009a 05       		.uleb128 0x5
 1257 009b 6F000000 		.4byte	0x6f
 1258 009f 02       		.uleb128 0x2
 1259 00a0 04       		.byte	0x4
 1260 00a1 07       		.byte	0x7
 1261 00a2 6D020000 		.4byte	.LASF14
 1262 00a6 06       		.uleb128 0x6
 1263 00a7 01       		.byte	0x1
 1264 00a8 4B030000 		.4byte	.LASF15
 1265 00ac 01       		.byte	0x1
 1266 00ad 3F       		.byte	0x3f
 1267 00ae 01       		.byte	0x1
 1268 00af 00000000 		.4byte	.LFB0
 1269 00b3 34000000 		.4byte	.LFE0
 1270 00b7 00000000 		.4byte	.LLST0
 1271 00bb 01       		.byte	0x1
 1272 00bc 07       		.uleb128 0x7
 1273 00bd 01       		.byte	0x1
 1274 00be 50000000 		.4byte	.LASF17
 1275 00c2 01       		.byte	0x1
 1276 00c3 78       		.byte	0x78
 1277 00c4 01       		.byte	0x1
 1278 00c5 00000000 		.4byte	.LFB1
 1279 00c9 68000000 		.4byte	.LFE1
 1280 00cd 2C000000 		.4byte	.LLST1
 1281 00d1 01       		.byte	0x1
 1282 00d2 E5000000 		.4byte	0xe5
 1283 00d6 08       		.uleb128 0x8
 1284 00d7 76020000 		.4byte	.LASF19
 1285 00db 01       		.byte	0x1
 1286 00dc 7A       		.byte	0x7a
 1287 00dd 6F000000 		.4byte	0x6f
 1288 00e1 02       		.byte	0x2
 1289 00e2 91       		.byte	0x91
 1290 00e3 6F       		.sleb128 -17
 1291 00e4 00       		.byte	0
 1292 00e5 06       		.uleb128 0x6
 1293 00e6 01       		.byte	0x1
 1294 00e7 00000000 		.4byte	.LASF16
 1295 00eb 01       		.byte	0x1
 1296 00ec A3       		.byte	0xa3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 44


 1297 00ed 01       		.byte	0x1
 1298 00ee 00000000 		.4byte	.LFB2
 1299 00f2 24000000 		.4byte	.LFE2
 1300 00f6 64000000 		.4byte	.LLST2
 1301 00fa 01       		.byte	0x1
 1302 00fb 07       		.uleb128 0x7
 1303 00fc 01       		.byte	0x1
 1304 00fd 74030000 		.4byte	.LASF18
 1305 0101 01       		.byte	0x1
 1306 0102 C0       		.byte	0xc0
 1307 0103 01       		.byte	0x1
 1308 0104 00000000 		.4byte	.LFB3
 1309 0108 54000000 		.4byte	.LFE3
 1310 010c 90000000 		.4byte	.LLST3
 1311 0110 01       		.byte	0x1
 1312 0111 24010000 		.4byte	0x124
 1313 0115 08       		.uleb128 0x8
 1314 0116 76020000 		.4byte	.LASF19
 1315 011a 01       		.byte	0x1
 1316 011b C2       		.byte	0xc2
 1317 011c 6F000000 		.4byte	0x6f
 1318 0120 02       		.byte	0x2
 1319 0121 91       		.byte	0x91
 1320 0122 6F       		.sleb128 -17
 1321 0123 00       		.byte	0
 1322 0124 09       		.uleb128 0x9
 1323 0125 01       		.byte	0x1
 1324 0126 F1020000 		.4byte	.LASF20
 1325 012a 01       		.byte	0x1
 1326 012b E3       		.byte	0xe3
 1327 012c 01       		.byte	0x1
 1328 012d 00000000 		.4byte	.LFB4
 1329 0131 08000000 		.4byte	.LFE4
 1330 0135 C8000000 		.4byte	.LLST4
 1331 0139 01       		.byte	0x1
 1332 013a 09       		.uleb128 0x9
 1333 013b 01       		.byte	0x1
 1334 013c 30000000 		.4byte	.LASF21
 1335 0140 01       		.byte	0x1
 1336 0141 FC       		.byte	0xfc
 1337 0142 01       		.byte	0x1
 1338 0143 00000000 		.4byte	.LFB5
 1339 0147 08000000 		.4byte	.LFE5
 1340 014b F4000000 		.4byte	.LLST5
 1341 014f 01       		.byte	0x1
 1342 0150 0A       		.uleb128 0xa
 1343 0151 01       		.byte	0x1
 1344 0152 DF020000 		.4byte	.LASF22
 1345 0156 01       		.byte	0x1
 1346 0157 1501     		.2byte	0x115
 1347 0159 01       		.byte	0x1
 1348 015a 00000000 		.4byte	.LFB6
 1349 015e 08000000 		.4byte	.LFE6
 1350 0162 20010000 		.4byte	.LLST6
 1351 0166 01       		.byte	0x1
 1352 0167 0A       		.uleb128 0xa
 1353 0168 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 45


 1354 0169 2C010000 		.4byte	.LASF23
 1355 016d 01       		.byte	0x1
 1356 016e 2E01     		.2byte	0x12e
 1357 0170 01       		.byte	0x1
 1358 0171 00000000 		.4byte	.LFB7
 1359 0175 08000000 		.4byte	.LFE7
 1360 0179 4C010000 		.4byte	.LLST7
 1361 017d 01       		.byte	0x1
 1362 017e 0B       		.uleb128 0xb
 1363 017f 01       		.byte	0x1
 1364 0180 C7000000 		.4byte	.LASF24
 1365 0184 01       		.byte	0x1
 1366 0185 4801     		.2byte	0x148
 1367 0187 01       		.byte	0x1
 1368 0188 00000000 		.4byte	.LFB8
 1369 018c 20000000 		.4byte	.LFE8
 1370 0190 78010000 		.4byte	.LLST8
 1371 0194 01       		.byte	0x1
 1372 0195 A9010000 		.4byte	0x1a9
 1373 0199 0C       		.uleb128 0xc
 1374 019a 87010000 		.4byte	.LASF26
 1375 019e 01       		.byte	0x1
 1376 019f 4801     		.2byte	0x148
 1377 01a1 6F000000 		.4byte	0x6f
 1378 01a5 02       		.byte	0x2
 1379 01a6 91       		.byte	0x91
 1380 01a7 77       		.sleb128 -9
 1381 01a8 00       		.byte	0
 1382 01a9 0B       		.uleb128 0xb
 1383 01aa 01       		.byte	0x1
 1384 01ab 48010000 		.4byte	.LASF25
 1385 01af 01       		.byte	0x1
 1386 01b0 6001     		.2byte	0x160
 1387 01b2 01       		.byte	0x1
 1388 01b3 00000000 		.4byte	.LFB9
 1389 01b7 20000000 		.4byte	.LFE9
 1390 01bb B0010000 		.4byte	.LLST9
 1391 01bf 01       		.byte	0x1
 1392 01c0 D4010000 		.4byte	0x1d4
 1393 01c4 0C       		.uleb128 0xc
 1394 01c5 87010000 		.4byte	.LASF26
 1395 01c9 01       		.byte	0x1
 1396 01ca 6001     		.2byte	0x160
 1397 01cc 6F000000 		.4byte	0x6f
 1398 01d0 02       		.byte	0x2
 1399 01d1 91       		.byte	0x91
 1400 01d2 77       		.sleb128 -9
 1401 01d3 00       		.byte	0
 1402 01d4 0D       		.uleb128 0xd
 1403 01d5 01       		.byte	0x1
 1404 01d6 60010000 		.4byte	.LASF28
 1405 01da 01       		.byte	0x1
 1406 01db 8201     		.2byte	0x182
 1407 01dd 01       		.byte	0x1
 1408 01de 6F000000 		.4byte	0x6f
 1409 01e2 00000000 		.4byte	.LFB10
 1410 01e6 20000000 		.4byte	.LFE10
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 46


 1411 01ea E8010000 		.4byte	.LLST10
 1412 01ee 01       		.byte	0x1
 1413 01ef 03020000 		.4byte	0x203
 1414 01f3 0E       		.uleb128 0xe
 1415 01f4 5E030000 		.4byte	.LASF27
 1416 01f8 01       		.byte	0x1
 1417 01f9 8401     		.2byte	0x184
 1418 01fb 6F000000 		.4byte	0x6f
 1419 01ff 02       		.byte	0x2
 1420 0200 91       		.byte	0x91
 1421 0201 77       		.sleb128 -9
 1422 0202 00       		.byte	0
 1423 0203 0D       		.uleb128 0xd
 1424 0204 01       		.byte	0x1
 1425 0205 AD020000 		.4byte	.LASF29
 1426 0209 01       		.byte	0x1
 1427 020a B501     		.2byte	0x1b5
 1428 020c 01       		.byte	0x1
 1429 020d 6F000000 		.4byte	0x6f
 1430 0211 00000000 		.4byte	.LFB11
 1431 0215 20000000 		.4byte	.LFE11
 1432 0219 20020000 		.4byte	.LLST11
 1433 021d 01       		.byte	0x1
 1434 021e 32020000 		.4byte	0x232
 1435 0222 0E       		.uleb128 0xe
 1436 0223 5E030000 		.4byte	.LASF27
 1437 0227 01       		.byte	0x1
 1438 0228 B701     		.2byte	0x1b7
 1439 022a 6F000000 		.4byte	0x6f
 1440 022e 02       		.byte	0x2
 1441 022f 91       		.byte	0x91
 1442 0230 77       		.sleb128 -9
 1443 0231 00       		.byte	0
 1444 0232 0B       		.uleb128 0xb
 1445 0233 01       		.byte	0x1
 1446 0234 18000000 		.4byte	.LASF30
 1447 0238 01       		.byte	0x1
 1448 0239 EE01     		.2byte	0x1ee
 1449 023b 01       		.byte	0x1
 1450 023c 00000000 		.4byte	.LFB12
 1451 0240 34000000 		.4byte	.LFE12
 1452 0244 58020000 		.4byte	.LLST12
 1453 0248 01       		.byte	0x1
 1454 0249 5D020000 		.4byte	0x25d
 1455 024d 0C       		.uleb128 0xc
 1456 024e 56020000 		.4byte	.LASF31
 1457 0252 01       		.byte	0x1
 1458 0253 EE01     		.2byte	0x1ee
 1459 0255 6F000000 		.4byte	0x6f
 1460 0259 02       		.byte	0x2
 1461 025a 91       		.byte	0x91
 1462 025b 77       		.sleb128 -9
 1463 025c 00       		.byte	0
 1464 025d 0D       		.uleb128 0xd
 1465 025e 01       		.byte	0x1
 1466 025f 7E030000 		.4byte	.LASF32
 1467 0263 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 47


 1468 0264 5B02     		.2byte	0x25b
 1469 0266 01       		.byte	0x1
 1470 0267 6F000000 		.4byte	0x6f
 1471 026b 00000000 		.4byte	.LFB13
 1472 026f 20000000 		.4byte	.LFE13
 1473 0273 90020000 		.4byte	.LLST13
 1474 0277 01       		.byte	0x1
 1475 0278 8C020000 		.4byte	0x28c
 1476 027c 0E       		.uleb128 0xe
 1477 027d B2000000 		.4byte	.LASF33
 1478 0281 01       		.byte	0x1
 1479 0282 5D02     		.2byte	0x25d
 1480 0284 6F000000 		.4byte	0x6f
 1481 0288 02       		.byte	0x2
 1482 0289 91       		.byte	0x91
 1483 028a 77       		.sleb128 -9
 1484 028b 00       		.byte	0
 1485 028c 0D       		.uleb128 0xd
 1486 028d 01       		.byte	0x1
 1487 028e E5000000 		.4byte	.LASF34
 1488 0292 01       		.byte	0x1
 1489 0293 9B02     		.2byte	0x29b
 1490 0295 01       		.byte	0x1
 1491 0296 6F000000 		.4byte	0x6f
 1492 029a 00000000 		.4byte	.LFB14
 1493 029e 30000000 		.4byte	.LFE14
 1494 02a2 C8020000 		.4byte	.LLST14
 1495 02a6 01       		.byte	0x1
 1496 02a7 BB020000 		.4byte	0x2bb
 1497 02ab 0E       		.uleb128 0xe
 1498 02ac FA000000 		.4byte	.LASF35
 1499 02b0 01       		.byte	0x1
 1500 02b1 9D02     		.2byte	0x29d
 1501 02b3 6F000000 		.4byte	0x6f
 1502 02b7 02       		.byte	0x2
 1503 02b8 91       		.byte	0x91
 1504 02b9 77       		.sleb128 -9
 1505 02ba 00       		.byte	0
 1506 02bb 0D       		.uleb128 0xd
 1507 02bc 01       		.byte	0x1
 1508 02bd 02020000 		.4byte	.LASF36
 1509 02c1 01       		.byte	0x1
 1510 02c2 D802     		.2byte	0x2d8
 1511 02c4 01       		.byte	0x1
 1512 02c5 6F000000 		.4byte	0x6f
 1513 02c9 00000000 		.4byte	.LFB15
 1514 02cd 48000000 		.4byte	.LFE15
 1515 02d1 00030000 		.4byte	.LLST15
 1516 02d5 01       		.byte	0x1
 1517 02d6 EA020000 		.4byte	0x2ea
 1518 02da 0E       		.uleb128 0xe
 1519 02db FA000000 		.4byte	.LASF35
 1520 02df 01       		.byte	0x1
 1521 02e0 DA02     		.2byte	0x2da
 1522 02e2 6F000000 		.4byte	0x6f
 1523 02e6 02       		.byte	0x2
 1524 02e7 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 48


 1525 02e8 77       		.sleb128 -9
 1526 02e9 00       		.byte	0
 1527 02ea 0A       		.uleb128 0xa
 1528 02eb 01       		.byte	0x1
 1529 02ec 6F000000 		.4byte	.LASF37
 1530 02f0 01       		.byte	0x1
 1531 02f1 2703     		.2byte	0x327
 1532 02f3 01       		.byte	0x1
 1533 02f4 00000000 		.4byte	.LFB16
 1534 02f8 24000000 		.4byte	.LFE16
 1535 02fc 38030000 		.4byte	.LLST16
 1536 0300 01       		.byte	0x1
 1537 0301 0F       		.uleb128 0xf
 1538 0302 01       		.byte	0x1
 1539 0303 95020000 		.4byte	.LASF38
 1540 0307 01       		.byte	0x1
 1541 0308 5E03     		.2byte	0x35e
 1542 030a 01       		.byte	0x1
 1543 030b 00000000 		.4byte	.LFB17
 1544 030f 44000000 		.4byte	.LFE17
 1545 0313 64030000 		.4byte	.LLST17
 1546 0317 01       		.byte	0x1
 1547 0318 2C030000 		.4byte	0x32c
 1548 031c 0E       		.uleb128 0xe
 1549 031d 76020000 		.4byte	.LASF19
 1550 0321 01       		.byte	0x1
 1551 0322 6003     		.2byte	0x360
 1552 0324 6F000000 		.4byte	0x6f
 1553 0328 02       		.byte	0x2
 1554 0329 91       		.byte	0x91
 1555 032a 6F       		.sleb128 -17
 1556 032b 00       		.byte	0
 1557 032c 0F       		.uleb128 0xf
 1558 032d 01       		.byte	0x1
 1559 032e B9000000 		.4byte	.LASF39
 1560 0332 01       		.byte	0x1
 1561 0333 C303     		.2byte	0x3c3
 1562 0335 01       		.byte	0x1
 1563 0336 00000000 		.4byte	.LFB18
 1564 033a 50000000 		.4byte	.LFE18
 1565 033e 9C030000 		.4byte	.LLST18
 1566 0342 01       		.byte	0x1
 1567 0343 75030000 		.4byte	0x375
 1568 0347 0C       		.uleb128 0xc
 1569 0348 29000000 		.4byte	.LASF40
 1570 034c 01       		.byte	0x1
 1571 034d C303     		.2byte	0x3c3
 1572 034f 75030000 		.4byte	0x375
 1573 0353 02       		.byte	0x2
 1574 0354 91       		.byte	0x91
 1575 0355 6C       		.sleb128 -20
 1576 0356 0C       		.uleb128 0xc
 1577 0357 3E010000 		.4byte	.LASF41
 1578 035b 01       		.byte	0x1
 1579 035c C303     		.2byte	0x3c3
 1580 035e 6F000000 		.4byte	0x6f
 1581 0362 02       		.byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 49


 1582 0363 91       		.byte	0x91
 1583 0364 6B       		.sleb128 -21
 1584 0365 0E       		.uleb128 0xe
 1585 0366 4D020000 		.4byte	.LASF42
 1586 036a 01       		.byte	0x1
 1587 036b C603     		.2byte	0x3c6
 1588 036d 6F000000 		.4byte	0x6f
 1589 0371 02       		.byte	0x2
 1590 0372 91       		.byte	0x91
 1591 0373 77       		.sleb128 -9
 1592 0374 00       		.byte	0
 1593 0375 10       		.uleb128 0x10
 1594 0376 04       		.byte	0x4
 1595 0377 7B030000 		.4byte	0x37b
 1596 037b 11       		.uleb128 0x11
 1597 037c 6F000000 		.4byte	0x6f
 1598 0380 0F       		.uleb128 0xf
 1599 0381 01       		.byte	0x1
 1600 0382 3E020000 		.4byte	.LASF43
 1601 0386 01       		.byte	0x1
 1602 0387 E403     		.2byte	0x3e4
 1603 0389 01       		.byte	0x1
 1604 038a 00000000 		.4byte	.LFB19
 1605 038e 60000000 		.4byte	.LFE19
 1606 0392 D4030000 		.4byte	.LLST19
 1607 0396 01       		.byte	0x1
 1608 0397 AB030000 		.4byte	0x3ab
 1609 039b 0E       		.uleb128 0xe
 1610 039c 76020000 		.4byte	.LASF19
 1611 03a0 01       		.byte	0x1
 1612 03a1 E603     		.2byte	0x3e6
 1613 03a3 6F000000 		.4byte	0x6f
 1614 03a7 02       		.byte	0x2
 1615 03a8 91       		.byte	0x91
 1616 03a9 6F       		.sleb128 -17
 1617 03aa 00       		.byte	0
 1618 03ab 12       		.uleb128 0x12
 1619 03ac 01       		.byte	0x1
 1620 03ad 41000000 		.4byte	.LASF44
 1621 03b1 01       		.byte	0x1
 1622 03b2 1204     		.2byte	0x412
 1623 03b4 01       		.byte	0x1
 1624 03b5 00000000 		.4byte	.LFB20
 1625 03b9 10000000 		.4byte	.LFE20
 1626 03bd 0C040000 		.4byte	.LLST20
 1627 03c1 01       		.byte	0x1
 1628 03c2 12       		.uleb128 0x12
 1629 03c3 01       		.byte	0x1
 1630 03c4 82000000 		.4byte	.LASF45
 1631 03c8 01       		.byte	0x1
 1632 03c9 2A04     		.2byte	0x42a
 1633 03cb 01       		.byte	0x1
 1634 03cc 00000000 		.4byte	.LFB21
 1635 03d0 10000000 		.4byte	.LFE21
 1636 03d4 38040000 		.4byte	.LLST21
 1637 03d8 01       		.byte	0x1
 1638 03d9 0B       		.uleb128 0xb
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 50


 1639 03da 01       		.byte	0x1
 1640 03db BF020000 		.4byte	.LASF46
 1641 03df 01       		.byte	0x1
 1642 03e0 4304     		.2byte	0x443
 1643 03e2 01       		.byte	0x1
 1644 03e3 00000000 		.4byte	.LFB22
 1645 03e7 30000000 		.4byte	.LFE22
 1646 03eb 64040000 		.4byte	.LLST22
 1647 03ef 01       		.byte	0x1
 1648 03f0 04040000 		.4byte	0x404
 1649 03f4 0C       		.uleb128 0xc
 1650 03f5 87010000 		.4byte	.LASF26
 1651 03f9 01       		.byte	0x1
 1652 03fa 4304     		.2byte	0x443
 1653 03fc 6F000000 		.4byte	0x6f
 1654 0400 02       		.byte	0x2
 1655 0401 91       		.byte	0x91
 1656 0402 77       		.sleb128 -9
 1657 0403 00       		.byte	0
 1658 0404 0D       		.uleb128 0xd
 1659 0405 01       		.byte	0x1
 1660 0406 16010000 		.4byte	.LASF47
 1661 040a 01       		.byte	0x1
 1662 040b 6604     		.2byte	0x466
 1663 040d 01       		.byte	0x1
 1664 040e 6F000000 		.4byte	0x6f
 1665 0412 00000000 		.4byte	.LFB23
 1666 0416 40000000 		.4byte	.LFE23
 1667 041a 9C040000 		.4byte	.LLST23
 1668 041e 01       		.byte	0x1
 1669 041f 33040000 		.4byte	0x433
 1670 0423 0E       		.uleb128 0xe
 1671 0424 5E030000 		.4byte	.LASF27
 1672 0428 01       		.byte	0x1
 1673 0429 6804     		.2byte	0x468
 1674 042b 6F000000 		.4byte	0x6f
 1675 042f 02       		.byte	0x2
 1676 0430 91       		.byte	0x91
 1677 0431 77       		.sleb128 -9
 1678 0432 00       		.byte	0
 1679 0433 13       		.uleb128 0x13
 1680 0434 0B000000 		.4byte	.LASF48
 1681 0438 01       		.byte	0x1
 1682 0439 22       		.byte	0x22
 1683 043a 6F000000 		.4byte	0x6f
 1684 043e 01       		.byte	0x1
 1685 043f 05       		.byte	0x5
 1686 0440 03       		.byte	0x3
 1687 0441 00000000 		.4byte	SPI0_initVar
 1688 0445 13       		.uleb128 0x13
 1689 0446 5D020000 		.4byte	.LASF49
 1690 044a 01       		.byte	0x1
 1691 044b 24       		.byte	0x24
 1692 044c 9A000000 		.4byte	0x9a
 1693 0450 01       		.byte	0x1
 1694 0451 05       		.byte	0x5
 1695 0452 03       		.byte	0x3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 51


 1696 0453 00000000 		.4byte	SPI0_swStatusTx
 1697 0457 13       		.uleb128 0x13
 1698 0458 2E020000 		.4byte	.LASF50
 1699 045c 01       		.byte	0x1
 1700 045d 25       		.byte	0x25
 1701 045e 9A000000 		.4byte	0x9a
 1702 0462 01       		.byte	0x1
 1703 0463 05       		.byte	0x5
 1704 0464 03       		.byte	0x3
 1705 0465 00000000 		.4byte	SPI0_swStatusRx
 1706 0469 00       		.byte	0
 1707              		.section	.debug_abbrev,"",%progbits
 1708              	.Ldebug_abbrev0:
 1709 0000 01       		.uleb128 0x1
 1710 0001 11       		.uleb128 0x11
 1711 0002 01       		.byte	0x1
 1712 0003 25       		.uleb128 0x25
 1713 0004 0E       		.uleb128 0xe
 1714 0005 13       		.uleb128 0x13
 1715 0006 0B       		.uleb128 0xb
 1716 0007 03       		.uleb128 0x3
 1717 0008 0E       		.uleb128 0xe
 1718 0009 1B       		.uleb128 0x1b
 1719 000a 0E       		.uleb128 0xe
 1720 000b 55       		.uleb128 0x55
 1721 000c 06       		.uleb128 0x6
 1722 000d 11       		.uleb128 0x11
 1723 000e 01       		.uleb128 0x1
 1724 000f 52       		.uleb128 0x52
 1725 0010 01       		.uleb128 0x1
 1726 0011 10       		.uleb128 0x10
 1727 0012 06       		.uleb128 0x6
 1728 0013 00       		.byte	0
 1729 0014 00       		.byte	0
 1730 0015 02       		.uleb128 0x2
 1731 0016 24       		.uleb128 0x24
 1732 0017 00       		.byte	0
 1733 0018 0B       		.uleb128 0xb
 1734 0019 0B       		.uleb128 0xb
 1735 001a 3E       		.uleb128 0x3e
 1736 001b 0B       		.uleb128 0xb
 1737 001c 03       		.uleb128 0x3
 1738 001d 0E       		.uleb128 0xe
 1739 001e 00       		.byte	0
 1740 001f 00       		.byte	0
 1741 0020 03       		.uleb128 0x3
 1742 0021 24       		.uleb128 0x24
 1743 0022 00       		.byte	0
 1744 0023 0B       		.uleb128 0xb
 1745 0024 0B       		.uleb128 0xb
 1746 0025 3E       		.uleb128 0x3e
 1747 0026 0B       		.uleb128 0xb
 1748 0027 03       		.uleb128 0x3
 1749 0028 08       		.uleb128 0x8
 1750 0029 00       		.byte	0
 1751 002a 00       		.byte	0
 1752 002b 04       		.uleb128 0x4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 52


 1753 002c 16       		.uleb128 0x16
 1754 002d 00       		.byte	0
 1755 002e 03       		.uleb128 0x3
 1756 002f 0E       		.uleb128 0xe
 1757 0030 3A       		.uleb128 0x3a
 1758 0031 0B       		.uleb128 0xb
 1759 0032 3B       		.uleb128 0x3b
 1760 0033 0B       		.uleb128 0xb
 1761 0034 49       		.uleb128 0x49
 1762 0035 13       		.uleb128 0x13
 1763 0036 00       		.byte	0
 1764 0037 00       		.byte	0
 1765 0038 05       		.uleb128 0x5
 1766 0039 35       		.uleb128 0x35
 1767 003a 00       		.byte	0
 1768 003b 49       		.uleb128 0x49
 1769 003c 13       		.uleb128 0x13
 1770 003d 00       		.byte	0
 1771 003e 00       		.byte	0
 1772 003f 06       		.uleb128 0x6
 1773 0040 2E       		.uleb128 0x2e
 1774 0041 00       		.byte	0
 1775 0042 3F       		.uleb128 0x3f
 1776 0043 0C       		.uleb128 0xc
 1777 0044 03       		.uleb128 0x3
 1778 0045 0E       		.uleb128 0xe
 1779 0046 3A       		.uleb128 0x3a
 1780 0047 0B       		.uleb128 0xb
 1781 0048 3B       		.uleb128 0x3b
 1782 0049 0B       		.uleb128 0xb
 1783 004a 27       		.uleb128 0x27
 1784 004b 0C       		.uleb128 0xc
 1785 004c 11       		.uleb128 0x11
 1786 004d 01       		.uleb128 0x1
 1787 004e 12       		.uleb128 0x12
 1788 004f 01       		.uleb128 0x1
 1789 0050 40       		.uleb128 0x40
 1790 0051 06       		.uleb128 0x6
 1791 0052 9642     		.uleb128 0x2116
 1792 0054 0C       		.uleb128 0xc
 1793 0055 00       		.byte	0
 1794 0056 00       		.byte	0
 1795 0057 07       		.uleb128 0x7
 1796 0058 2E       		.uleb128 0x2e
 1797 0059 01       		.byte	0x1
 1798 005a 3F       		.uleb128 0x3f
 1799 005b 0C       		.uleb128 0xc
 1800 005c 03       		.uleb128 0x3
 1801 005d 0E       		.uleb128 0xe
 1802 005e 3A       		.uleb128 0x3a
 1803 005f 0B       		.uleb128 0xb
 1804 0060 3B       		.uleb128 0x3b
 1805 0061 0B       		.uleb128 0xb
 1806 0062 27       		.uleb128 0x27
 1807 0063 0C       		.uleb128 0xc
 1808 0064 11       		.uleb128 0x11
 1809 0065 01       		.uleb128 0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 53


 1810 0066 12       		.uleb128 0x12
 1811 0067 01       		.uleb128 0x1
 1812 0068 40       		.uleb128 0x40
 1813 0069 06       		.uleb128 0x6
 1814 006a 9642     		.uleb128 0x2116
 1815 006c 0C       		.uleb128 0xc
 1816 006d 01       		.uleb128 0x1
 1817 006e 13       		.uleb128 0x13
 1818 006f 00       		.byte	0
 1819 0070 00       		.byte	0
 1820 0071 08       		.uleb128 0x8
 1821 0072 34       		.uleb128 0x34
 1822 0073 00       		.byte	0
 1823 0074 03       		.uleb128 0x3
 1824 0075 0E       		.uleb128 0xe
 1825 0076 3A       		.uleb128 0x3a
 1826 0077 0B       		.uleb128 0xb
 1827 0078 3B       		.uleb128 0x3b
 1828 0079 0B       		.uleb128 0xb
 1829 007a 49       		.uleb128 0x49
 1830 007b 13       		.uleb128 0x13
 1831 007c 02       		.uleb128 0x2
 1832 007d 0A       		.uleb128 0xa
 1833 007e 00       		.byte	0
 1834 007f 00       		.byte	0
 1835 0080 09       		.uleb128 0x9
 1836 0081 2E       		.uleb128 0x2e
 1837 0082 00       		.byte	0
 1838 0083 3F       		.uleb128 0x3f
 1839 0084 0C       		.uleb128 0xc
 1840 0085 03       		.uleb128 0x3
 1841 0086 0E       		.uleb128 0xe
 1842 0087 3A       		.uleb128 0x3a
 1843 0088 0B       		.uleb128 0xb
 1844 0089 3B       		.uleb128 0x3b
 1845 008a 0B       		.uleb128 0xb
 1846 008b 27       		.uleb128 0x27
 1847 008c 0C       		.uleb128 0xc
 1848 008d 11       		.uleb128 0x11
 1849 008e 01       		.uleb128 0x1
 1850 008f 12       		.uleb128 0x12
 1851 0090 01       		.uleb128 0x1
 1852 0091 40       		.uleb128 0x40
 1853 0092 06       		.uleb128 0x6
 1854 0093 9742     		.uleb128 0x2117
 1855 0095 0C       		.uleb128 0xc
 1856 0096 00       		.byte	0
 1857 0097 00       		.byte	0
 1858 0098 0A       		.uleb128 0xa
 1859 0099 2E       		.uleb128 0x2e
 1860 009a 00       		.byte	0
 1861 009b 3F       		.uleb128 0x3f
 1862 009c 0C       		.uleb128 0xc
 1863 009d 03       		.uleb128 0x3
 1864 009e 0E       		.uleb128 0xe
 1865 009f 3A       		.uleb128 0x3a
 1866 00a0 0B       		.uleb128 0xb
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 54


 1867 00a1 3B       		.uleb128 0x3b
 1868 00a2 05       		.uleb128 0x5
 1869 00a3 27       		.uleb128 0x27
 1870 00a4 0C       		.uleb128 0xc
 1871 00a5 11       		.uleb128 0x11
 1872 00a6 01       		.uleb128 0x1
 1873 00a7 12       		.uleb128 0x12
 1874 00a8 01       		.uleb128 0x1
 1875 00a9 40       		.uleb128 0x40
 1876 00aa 06       		.uleb128 0x6
 1877 00ab 9742     		.uleb128 0x2117
 1878 00ad 0C       		.uleb128 0xc
 1879 00ae 00       		.byte	0
 1880 00af 00       		.byte	0
 1881 00b0 0B       		.uleb128 0xb
 1882 00b1 2E       		.uleb128 0x2e
 1883 00b2 01       		.byte	0x1
 1884 00b3 3F       		.uleb128 0x3f
 1885 00b4 0C       		.uleb128 0xc
 1886 00b5 03       		.uleb128 0x3
 1887 00b6 0E       		.uleb128 0xe
 1888 00b7 3A       		.uleb128 0x3a
 1889 00b8 0B       		.uleb128 0xb
 1890 00b9 3B       		.uleb128 0x3b
 1891 00ba 05       		.uleb128 0x5
 1892 00bb 27       		.uleb128 0x27
 1893 00bc 0C       		.uleb128 0xc
 1894 00bd 11       		.uleb128 0x11
 1895 00be 01       		.uleb128 0x1
 1896 00bf 12       		.uleb128 0x12
 1897 00c0 01       		.uleb128 0x1
 1898 00c1 40       		.uleb128 0x40
 1899 00c2 06       		.uleb128 0x6
 1900 00c3 9742     		.uleb128 0x2117
 1901 00c5 0C       		.uleb128 0xc
 1902 00c6 01       		.uleb128 0x1
 1903 00c7 13       		.uleb128 0x13
 1904 00c8 00       		.byte	0
 1905 00c9 00       		.byte	0
 1906 00ca 0C       		.uleb128 0xc
 1907 00cb 05       		.uleb128 0x5
 1908 00cc 00       		.byte	0
 1909 00cd 03       		.uleb128 0x3
 1910 00ce 0E       		.uleb128 0xe
 1911 00cf 3A       		.uleb128 0x3a
 1912 00d0 0B       		.uleb128 0xb
 1913 00d1 3B       		.uleb128 0x3b
 1914 00d2 05       		.uleb128 0x5
 1915 00d3 49       		.uleb128 0x49
 1916 00d4 13       		.uleb128 0x13
 1917 00d5 02       		.uleb128 0x2
 1918 00d6 0A       		.uleb128 0xa
 1919 00d7 00       		.byte	0
 1920 00d8 00       		.byte	0
 1921 00d9 0D       		.uleb128 0xd
 1922 00da 2E       		.uleb128 0x2e
 1923 00db 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 55


 1924 00dc 3F       		.uleb128 0x3f
 1925 00dd 0C       		.uleb128 0xc
 1926 00de 03       		.uleb128 0x3
 1927 00df 0E       		.uleb128 0xe
 1928 00e0 3A       		.uleb128 0x3a
 1929 00e1 0B       		.uleb128 0xb
 1930 00e2 3B       		.uleb128 0x3b
 1931 00e3 05       		.uleb128 0x5
 1932 00e4 27       		.uleb128 0x27
 1933 00e5 0C       		.uleb128 0xc
 1934 00e6 49       		.uleb128 0x49
 1935 00e7 13       		.uleb128 0x13
 1936 00e8 11       		.uleb128 0x11
 1937 00e9 01       		.uleb128 0x1
 1938 00ea 12       		.uleb128 0x12
 1939 00eb 01       		.uleb128 0x1
 1940 00ec 40       		.uleb128 0x40
 1941 00ed 06       		.uleb128 0x6
 1942 00ee 9742     		.uleb128 0x2117
 1943 00f0 0C       		.uleb128 0xc
 1944 00f1 01       		.uleb128 0x1
 1945 00f2 13       		.uleb128 0x13
 1946 00f3 00       		.byte	0
 1947 00f4 00       		.byte	0
 1948 00f5 0E       		.uleb128 0xe
 1949 00f6 34       		.uleb128 0x34
 1950 00f7 00       		.byte	0
 1951 00f8 03       		.uleb128 0x3
 1952 00f9 0E       		.uleb128 0xe
 1953 00fa 3A       		.uleb128 0x3a
 1954 00fb 0B       		.uleb128 0xb
 1955 00fc 3B       		.uleb128 0x3b
 1956 00fd 05       		.uleb128 0x5
 1957 00fe 49       		.uleb128 0x49
 1958 00ff 13       		.uleb128 0x13
 1959 0100 02       		.uleb128 0x2
 1960 0101 0A       		.uleb128 0xa
 1961 0102 00       		.byte	0
 1962 0103 00       		.byte	0
 1963 0104 0F       		.uleb128 0xf
 1964 0105 2E       		.uleb128 0x2e
 1965 0106 01       		.byte	0x1
 1966 0107 3F       		.uleb128 0x3f
 1967 0108 0C       		.uleb128 0xc
 1968 0109 03       		.uleb128 0x3
 1969 010a 0E       		.uleb128 0xe
 1970 010b 3A       		.uleb128 0x3a
 1971 010c 0B       		.uleb128 0xb
 1972 010d 3B       		.uleb128 0x3b
 1973 010e 05       		.uleb128 0x5
 1974 010f 27       		.uleb128 0x27
 1975 0110 0C       		.uleb128 0xc
 1976 0111 11       		.uleb128 0x11
 1977 0112 01       		.uleb128 0x1
 1978 0113 12       		.uleb128 0x12
 1979 0114 01       		.uleb128 0x1
 1980 0115 40       		.uleb128 0x40
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 56


 1981 0116 06       		.uleb128 0x6
 1982 0117 9642     		.uleb128 0x2116
 1983 0119 0C       		.uleb128 0xc
 1984 011a 01       		.uleb128 0x1
 1985 011b 13       		.uleb128 0x13
 1986 011c 00       		.byte	0
 1987 011d 00       		.byte	0
 1988 011e 10       		.uleb128 0x10
 1989 011f 0F       		.uleb128 0xf
 1990 0120 00       		.byte	0
 1991 0121 0B       		.uleb128 0xb
 1992 0122 0B       		.uleb128 0xb
 1993 0123 49       		.uleb128 0x49
 1994 0124 13       		.uleb128 0x13
 1995 0125 00       		.byte	0
 1996 0126 00       		.byte	0
 1997 0127 11       		.uleb128 0x11
 1998 0128 26       		.uleb128 0x26
 1999 0129 00       		.byte	0
 2000 012a 49       		.uleb128 0x49
 2001 012b 13       		.uleb128 0x13
 2002 012c 00       		.byte	0
 2003 012d 00       		.byte	0
 2004 012e 12       		.uleb128 0x12
 2005 012f 2E       		.uleb128 0x2e
 2006 0130 00       		.byte	0
 2007 0131 3F       		.uleb128 0x3f
 2008 0132 0C       		.uleb128 0xc
 2009 0133 03       		.uleb128 0x3
 2010 0134 0E       		.uleb128 0xe
 2011 0135 3A       		.uleb128 0x3a
 2012 0136 0B       		.uleb128 0xb
 2013 0137 3B       		.uleb128 0x3b
 2014 0138 05       		.uleb128 0x5
 2015 0139 27       		.uleb128 0x27
 2016 013a 0C       		.uleb128 0xc
 2017 013b 11       		.uleb128 0x11
 2018 013c 01       		.uleb128 0x1
 2019 013d 12       		.uleb128 0x12
 2020 013e 01       		.uleb128 0x1
 2021 013f 40       		.uleb128 0x40
 2022 0140 06       		.uleb128 0x6
 2023 0141 9642     		.uleb128 0x2116
 2024 0143 0C       		.uleb128 0xc
 2025 0144 00       		.byte	0
 2026 0145 00       		.byte	0
 2027 0146 13       		.uleb128 0x13
 2028 0147 34       		.uleb128 0x34
 2029 0148 00       		.byte	0
 2030 0149 03       		.uleb128 0x3
 2031 014a 0E       		.uleb128 0xe
 2032 014b 3A       		.uleb128 0x3a
 2033 014c 0B       		.uleb128 0xb
 2034 014d 3B       		.uleb128 0x3b
 2035 014e 0B       		.uleb128 0xb
 2036 014f 49       		.uleb128 0x49
 2037 0150 13       		.uleb128 0x13
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 57


 2038 0151 3F       		.uleb128 0x3f
 2039 0152 0C       		.uleb128 0xc
 2040 0153 02       		.uleb128 0x2
 2041 0154 0A       		.uleb128 0xa
 2042 0155 00       		.byte	0
 2043 0156 00       		.byte	0
 2044 0157 00       		.byte	0
 2045              		.section	.debug_loc,"",%progbits
 2046              	.Ldebug_loc0:
 2047              	.LLST0:
 2048 0000 00000000 		.4byte	.LFB0
 2049 0004 02000000 		.4byte	.LCFI0
 2050 0008 0200     		.2byte	0x2
 2051 000a 7D       		.byte	0x7d
 2052 000b 00       		.sleb128 0
 2053 000c 02000000 		.4byte	.LCFI0
 2054 0010 04000000 		.4byte	.LCFI1
 2055 0014 0200     		.2byte	0x2
 2056 0016 7D       		.byte	0x7d
 2057 0017 08       		.sleb128 8
 2058 0018 04000000 		.4byte	.LCFI1
 2059 001c 34000000 		.4byte	.LFE0
 2060 0020 0200     		.2byte	0x2
 2061 0022 77       		.byte	0x77
 2062 0023 08       		.sleb128 8
 2063 0024 00000000 		.4byte	0
 2064 0028 00000000 		.4byte	0
 2065              	.LLST1:
 2066 002c 00000000 		.4byte	.LFB1
 2067 0030 02000000 		.4byte	.LCFI2
 2068 0034 0200     		.2byte	0x2
 2069 0036 7D       		.byte	0x7d
 2070 0037 00       		.sleb128 0
 2071 0038 02000000 		.4byte	.LCFI2
 2072 003c 04000000 		.4byte	.LCFI3
 2073 0040 0200     		.2byte	0x2
 2074 0042 7D       		.byte	0x7d
 2075 0043 0C       		.sleb128 12
 2076 0044 04000000 		.4byte	.LCFI3
 2077 0048 06000000 		.4byte	.LCFI4
 2078 004c 0200     		.2byte	0x2
 2079 004e 7D       		.byte	0x7d
 2080 004f 18       		.sleb128 24
 2081 0050 06000000 		.4byte	.LCFI4
 2082 0054 68000000 		.4byte	.LFE1
 2083 0058 0200     		.2byte	0x2
 2084 005a 77       		.byte	0x77
 2085 005b 18       		.sleb128 24
 2086 005c 00000000 		.4byte	0
 2087 0060 00000000 		.4byte	0
 2088              	.LLST2:
 2089 0064 00000000 		.4byte	.LFB2
 2090 0068 02000000 		.4byte	.LCFI5
 2091 006c 0200     		.2byte	0x2
 2092 006e 7D       		.byte	0x7d
 2093 006f 00       		.sleb128 0
 2094 0070 02000000 		.4byte	.LCFI5
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 58


 2095 0074 04000000 		.4byte	.LCFI6
 2096 0078 0200     		.2byte	0x2
 2097 007a 7D       		.byte	0x7d
 2098 007b 08       		.sleb128 8
 2099 007c 04000000 		.4byte	.LCFI6
 2100 0080 24000000 		.4byte	.LFE2
 2101 0084 0200     		.2byte	0x2
 2102 0086 77       		.byte	0x77
 2103 0087 08       		.sleb128 8
 2104 0088 00000000 		.4byte	0
 2105 008c 00000000 		.4byte	0
 2106              	.LLST3:
 2107 0090 00000000 		.4byte	.LFB3
 2108 0094 02000000 		.4byte	.LCFI7
 2109 0098 0200     		.2byte	0x2
 2110 009a 7D       		.byte	0x7d
 2111 009b 00       		.sleb128 0
 2112 009c 02000000 		.4byte	.LCFI7
 2113 00a0 04000000 		.4byte	.LCFI8
 2114 00a4 0200     		.2byte	0x2
 2115 00a6 7D       		.byte	0x7d
 2116 00a7 0C       		.sleb128 12
 2117 00a8 04000000 		.4byte	.LCFI8
 2118 00ac 06000000 		.4byte	.LCFI9
 2119 00b0 0200     		.2byte	0x2
 2120 00b2 7D       		.byte	0x7d
 2121 00b3 18       		.sleb128 24
 2122 00b4 06000000 		.4byte	.LCFI9
 2123 00b8 54000000 		.4byte	.LFE3
 2124 00bc 0200     		.2byte	0x2
 2125 00be 77       		.byte	0x77
 2126 00bf 18       		.sleb128 24
 2127 00c0 00000000 		.4byte	0
 2128 00c4 00000000 		.4byte	0
 2129              	.LLST4:
 2130 00c8 00000000 		.4byte	.LFB4
 2131 00cc 02000000 		.4byte	.LCFI10
 2132 00d0 0200     		.2byte	0x2
 2133 00d2 7D       		.byte	0x7d
 2134 00d3 00       		.sleb128 0
 2135 00d4 02000000 		.4byte	.LCFI10
 2136 00d8 04000000 		.4byte	.LCFI11
 2137 00dc 0200     		.2byte	0x2
 2138 00de 7D       		.byte	0x7d
 2139 00df 08       		.sleb128 8
 2140 00e0 04000000 		.4byte	.LCFI11
 2141 00e4 08000000 		.4byte	.LFE4
 2142 00e8 0200     		.2byte	0x2
 2143 00ea 77       		.byte	0x77
 2144 00eb 08       		.sleb128 8
 2145 00ec 00000000 		.4byte	0
 2146 00f0 00000000 		.4byte	0
 2147              	.LLST5:
 2148 00f4 00000000 		.4byte	.LFB5
 2149 00f8 02000000 		.4byte	.LCFI12
 2150 00fc 0200     		.2byte	0x2
 2151 00fe 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 59


 2152 00ff 00       		.sleb128 0
 2153 0100 02000000 		.4byte	.LCFI12
 2154 0104 04000000 		.4byte	.LCFI13
 2155 0108 0200     		.2byte	0x2
 2156 010a 7D       		.byte	0x7d
 2157 010b 08       		.sleb128 8
 2158 010c 04000000 		.4byte	.LCFI13
 2159 0110 08000000 		.4byte	.LFE5
 2160 0114 0200     		.2byte	0x2
 2161 0116 77       		.byte	0x77
 2162 0117 08       		.sleb128 8
 2163 0118 00000000 		.4byte	0
 2164 011c 00000000 		.4byte	0
 2165              	.LLST6:
 2166 0120 00000000 		.4byte	.LFB6
 2167 0124 02000000 		.4byte	.LCFI14
 2168 0128 0200     		.2byte	0x2
 2169 012a 7D       		.byte	0x7d
 2170 012b 00       		.sleb128 0
 2171 012c 02000000 		.4byte	.LCFI14
 2172 0130 04000000 		.4byte	.LCFI15
 2173 0134 0200     		.2byte	0x2
 2174 0136 7D       		.byte	0x7d
 2175 0137 08       		.sleb128 8
 2176 0138 04000000 		.4byte	.LCFI15
 2177 013c 08000000 		.4byte	.LFE6
 2178 0140 0200     		.2byte	0x2
 2179 0142 77       		.byte	0x77
 2180 0143 08       		.sleb128 8
 2181 0144 00000000 		.4byte	0
 2182 0148 00000000 		.4byte	0
 2183              	.LLST7:
 2184 014c 00000000 		.4byte	.LFB7
 2185 0150 02000000 		.4byte	.LCFI16
 2186 0154 0200     		.2byte	0x2
 2187 0156 7D       		.byte	0x7d
 2188 0157 00       		.sleb128 0
 2189 0158 02000000 		.4byte	.LCFI16
 2190 015c 04000000 		.4byte	.LCFI17
 2191 0160 0200     		.2byte	0x2
 2192 0162 7D       		.byte	0x7d
 2193 0163 08       		.sleb128 8
 2194 0164 04000000 		.4byte	.LCFI17
 2195 0168 08000000 		.4byte	.LFE7
 2196 016c 0200     		.2byte	0x2
 2197 016e 77       		.byte	0x77
 2198 016f 08       		.sleb128 8
 2199 0170 00000000 		.4byte	0
 2200 0174 00000000 		.4byte	0
 2201              	.LLST8:
 2202 0178 00000000 		.4byte	.LFB8
 2203 017c 02000000 		.4byte	.LCFI18
 2204 0180 0200     		.2byte	0x2
 2205 0182 7D       		.byte	0x7d
 2206 0183 00       		.sleb128 0
 2207 0184 02000000 		.4byte	.LCFI18
 2208 0188 04000000 		.4byte	.LCFI19
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 60


 2209 018c 0200     		.2byte	0x2
 2210 018e 7D       		.byte	0x7d
 2211 018f 08       		.sleb128 8
 2212 0190 04000000 		.4byte	.LCFI19
 2213 0194 06000000 		.4byte	.LCFI20
 2214 0198 0200     		.2byte	0x2
 2215 019a 7D       		.byte	0x7d
 2216 019b 10       		.sleb128 16
 2217 019c 06000000 		.4byte	.LCFI20
 2218 01a0 20000000 		.4byte	.LFE8
 2219 01a4 0200     		.2byte	0x2
 2220 01a6 77       		.byte	0x77
 2221 01a7 10       		.sleb128 16
 2222 01a8 00000000 		.4byte	0
 2223 01ac 00000000 		.4byte	0
 2224              	.LLST9:
 2225 01b0 00000000 		.4byte	.LFB9
 2226 01b4 02000000 		.4byte	.LCFI21
 2227 01b8 0200     		.2byte	0x2
 2228 01ba 7D       		.byte	0x7d
 2229 01bb 00       		.sleb128 0
 2230 01bc 02000000 		.4byte	.LCFI21
 2231 01c0 04000000 		.4byte	.LCFI22
 2232 01c4 0200     		.2byte	0x2
 2233 01c6 7D       		.byte	0x7d
 2234 01c7 08       		.sleb128 8
 2235 01c8 04000000 		.4byte	.LCFI22
 2236 01cc 06000000 		.4byte	.LCFI23
 2237 01d0 0200     		.2byte	0x2
 2238 01d2 7D       		.byte	0x7d
 2239 01d3 10       		.sleb128 16
 2240 01d4 06000000 		.4byte	.LCFI23
 2241 01d8 20000000 		.4byte	.LFE9
 2242 01dc 0200     		.2byte	0x2
 2243 01de 77       		.byte	0x77
 2244 01df 10       		.sleb128 16
 2245 01e0 00000000 		.4byte	0
 2246 01e4 00000000 		.4byte	0
 2247              	.LLST10:
 2248 01e8 00000000 		.4byte	.LFB10
 2249 01ec 02000000 		.4byte	.LCFI24
 2250 01f0 0200     		.2byte	0x2
 2251 01f2 7D       		.byte	0x7d
 2252 01f3 00       		.sleb128 0
 2253 01f4 02000000 		.4byte	.LCFI24
 2254 01f8 04000000 		.4byte	.LCFI25
 2255 01fc 0200     		.2byte	0x2
 2256 01fe 7D       		.byte	0x7d
 2257 01ff 08       		.sleb128 8
 2258 0200 04000000 		.4byte	.LCFI25
 2259 0204 06000000 		.4byte	.LCFI26
 2260 0208 0200     		.2byte	0x2
 2261 020a 7D       		.byte	0x7d
 2262 020b 10       		.sleb128 16
 2263 020c 06000000 		.4byte	.LCFI26
 2264 0210 20000000 		.4byte	.LFE10
 2265 0214 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 61


 2266 0216 77       		.byte	0x77
 2267 0217 10       		.sleb128 16
 2268 0218 00000000 		.4byte	0
 2269 021c 00000000 		.4byte	0
 2270              	.LLST11:
 2271 0220 00000000 		.4byte	.LFB11
 2272 0224 02000000 		.4byte	.LCFI27
 2273 0228 0200     		.2byte	0x2
 2274 022a 7D       		.byte	0x7d
 2275 022b 00       		.sleb128 0
 2276 022c 02000000 		.4byte	.LCFI27
 2277 0230 04000000 		.4byte	.LCFI28
 2278 0234 0200     		.2byte	0x2
 2279 0236 7D       		.byte	0x7d
 2280 0237 08       		.sleb128 8
 2281 0238 04000000 		.4byte	.LCFI28
 2282 023c 06000000 		.4byte	.LCFI29
 2283 0240 0200     		.2byte	0x2
 2284 0242 7D       		.byte	0x7d
 2285 0243 10       		.sleb128 16
 2286 0244 06000000 		.4byte	.LCFI29
 2287 0248 20000000 		.4byte	.LFE11
 2288 024c 0200     		.2byte	0x2
 2289 024e 77       		.byte	0x77
 2290 024f 10       		.sleb128 16
 2291 0250 00000000 		.4byte	0
 2292 0254 00000000 		.4byte	0
 2293              	.LLST12:
 2294 0258 00000000 		.4byte	.LFB12
 2295 025c 02000000 		.4byte	.LCFI30
 2296 0260 0200     		.2byte	0x2
 2297 0262 7D       		.byte	0x7d
 2298 0263 00       		.sleb128 0
 2299 0264 02000000 		.4byte	.LCFI30
 2300 0268 04000000 		.4byte	.LCFI31
 2301 026c 0200     		.2byte	0x2
 2302 026e 7D       		.byte	0x7d
 2303 026f 08       		.sleb128 8
 2304 0270 04000000 		.4byte	.LCFI31
 2305 0274 06000000 		.4byte	.LCFI32
 2306 0278 0200     		.2byte	0x2
 2307 027a 7D       		.byte	0x7d
 2308 027b 10       		.sleb128 16
 2309 027c 06000000 		.4byte	.LCFI32
 2310 0280 34000000 		.4byte	.LFE12
 2311 0284 0200     		.2byte	0x2
 2312 0286 77       		.byte	0x77
 2313 0287 10       		.sleb128 16
 2314 0288 00000000 		.4byte	0
 2315 028c 00000000 		.4byte	0
 2316              	.LLST13:
 2317 0290 00000000 		.4byte	.LFB13
 2318 0294 02000000 		.4byte	.LCFI33
 2319 0298 0200     		.2byte	0x2
 2320 029a 7D       		.byte	0x7d
 2321 029b 00       		.sleb128 0
 2322 029c 02000000 		.4byte	.LCFI33
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 62


 2323 02a0 04000000 		.4byte	.LCFI34
 2324 02a4 0200     		.2byte	0x2
 2325 02a6 7D       		.byte	0x7d
 2326 02a7 08       		.sleb128 8
 2327 02a8 04000000 		.4byte	.LCFI34
 2328 02ac 06000000 		.4byte	.LCFI35
 2329 02b0 0200     		.2byte	0x2
 2330 02b2 7D       		.byte	0x7d
 2331 02b3 10       		.sleb128 16
 2332 02b4 06000000 		.4byte	.LCFI35
 2333 02b8 20000000 		.4byte	.LFE13
 2334 02bc 0200     		.2byte	0x2
 2335 02be 77       		.byte	0x77
 2336 02bf 10       		.sleb128 16
 2337 02c0 00000000 		.4byte	0
 2338 02c4 00000000 		.4byte	0
 2339              	.LLST14:
 2340 02c8 00000000 		.4byte	.LFB14
 2341 02cc 02000000 		.4byte	.LCFI36
 2342 02d0 0200     		.2byte	0x2
 2343 02d2 7D       		.byte	0x7d
 2344 02d3 00       		.sleb128 0
 2345 02d4 02000000 		.4byte	.LCFI36
 2346 02d8 04000000 		.4byte	.LCFI37
 2347 02dc 0200     		.2byte	0x2
 2348 02de 7D       		.byte	0x7d
 2349 02df 08       		.sleb128 8
 2350 02e0 04000000 		.4byte	.LCFI37
 2351 02e4 06000000 		.4byte	.LCFI38
 2352 02e8 0200     		.2byte	0x2
 2353 02ea 7D       		.byte	0x7d
 2354 02eb 10       		.sleb128 16
 2355 02ec 06000000 		.4byte	.LCFI38
 2356 02f0 30000000 		.4byte	.LFE14
 2357 02f4 0200     		.2byte	0x2
 2358 02f6 77       		.byte	0x77
 2359 02f7 10       		.sleb128 16
 2360 02f8 00000000 		.4byte	0
 2361 02fc 00000000 		.4byte	0
 2362              	.LLST15:
 2363 0300 00000000 		.4byte	.LFB15
 2364 0304 02000000 		.4byte	.LCFI39
 2365 0308 0200     		.2byte	0x2
 2366 030a 7D       		.byte	0x7d
 2367 030b 00       		.sleb128 0
 2368 030c 02000000 		.4byte	.LCFI39
 2369 0310 04000000 		.4byte	.LCFI40
 2370 0314 0200     		.2byte	0x2
 2371 0316 7D       		.byte	0x7d
 2372 0317 08       		.sleb128 8
 2373 0318 04000000 		.4byte	.LCFI40
 2374 031c 06000000 		.4byte	.LCFI41
 2375 0320 0200     		.2byte	0x2
 2376 0322 7D       		.byte	0x7d
 2377 0323 10       		.sleb128 16
 2378 0324 06000000 		.4byte	.LCFI41
 2379 0328 48000000 		.4byte	.LFE15
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 63


 2380 032c 0200     		.2byte	0x2
 2381 032e 77       		.byte	0x77
 2382 032f 10       		.sleb128 16
 2383 0330 00000000 		.4byte	0
 2384 0334 00000000 		.4byte	0
 2385              	.LLST16:
 2386 0338 00000000 		.4byte	.LFB16
 2387 033c 02000000 		.4byte	.LCFI42
 2388 0340 0200     		.2byte	0x2
 2389 0342 7D       		.byte	0x7d
 2390 0343 00       		.sleb128 0
 2391 0344 02000000 		.4byte	.LCFI42
 2392 0348 04000000 		.4byte	.LCFI43
 2393 034c 0200     		.2byte	0x2
 2394 034e 7D       		.byte	0x7d
 2395 034f 08       		.sleb128 8
 2396 0350 04000000 		.4byte	.LCFI43
 2397 0354 24000000 		.4byte	.LFE16
 2398 0358 0200     		.2byte	0x2
 2399 035a 77       		.byte	0x77
 2400 035b 08       		.sleb128 8
 2401 035c 00000000 		.4byte	0
 2402 0360 00000000 		.4byte	0
 2403              	.LLST17:
 2404 0364 00000000 		.4byte	.LFB17
 2405 0368 02000000 		.4byte	.LCFI44
 2406 036c 0200     		.2byte	0x2
 2407 036e 7D       		.byte	0x7d
 2408 036f 00       		.sleb128 0
 2409 0370 02000000 		.4byte	.LCFI44
 2410 0374 04000000 		.4byte	.LCFI45
 2411 0378 0200     		.2byte	0x2
 2412 037a 7D       		.byte	0x7d
 2413 037b 0C       		.sleb128 12
 2414 037c 04000000 		.4byte	.LCFI45
 2415 0380 06000000 		.4byte	.LCFI46
 2416 0384 0200     		.2byte	0x2
 2417 0386 7D       		.byte	0x7d
 2418 0387 18       		.sleb128 24
 2419 0388 06000000 		.4byte	.LCFI46
 2420 038c 44000000 		.4byte	.LFE17
 2421 0390 0200     		.2byte	0x2
 2422 0392 77       		.byte	0x77
 2423 0393 18       		.sleb128 24
 2424 0394 00000000 		.4byte	0
 2425 0398 00000000 		.4byte	0
 2426              	.LLST18:
 2427 039c 00000000 		.4byte	.LFB18
 2428 03a0 02000000 		.4byte	.LCFI47
 2429 03a4 0200     		.2byte	0x2
 2430 03a6 7D       		.byte	0x7d
 2431 03a7 00       		.sleb128 0
 2432 03a8 02000000 		.4byte	.LCFI47
 2433 03ac 04000000 		.4byte	.LCFI48
 2434 03b0 0200     		.2byte	0x2
 2435 03b2 7D       		.byte	0x7d
 2436 03b3 08       		.sleb128 8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 64


 2437 03b4 04000000 		.4byte	.LCFI48
 2438 03b8 06000000 		.4byte	.LCFI49
 2439 03bc 0200     		.2byte	0x2
 2440 03be 7D       		.byte	0x7d
 2441 03bf 18       		.sleb128 24
 2442 03c0 06000000 		.4byte	.LCFI49
 2443 03c4 50000000 		.4byte	.LFE18
 2444 03c8 0200     		.2byte	0x2
 2445 03ca 77       		.byte	0x77
 2446 03cb 18       		.sleb128 24
 2447 03cc 00000000 		.4byte	0
 2448 03d0 00000000 		.4byte	0
 2449              	.LLST19:
 2450 03d4 00000000 		.4byte	.LFB19
 2451 03d8 02000000 		.4byte	.LCFI50
 2452 03dc 0200     		.2byte	0x2
 2453 03de 7D       		.byte	0x7d
 2454 03df 00       		.sleb128 0
 2455 03e0 02000000 		.4byte	.LCFI50
 2456 03e4 04000000 		.4byte	.LCFI51
 2457 03e8 0200     		.2byte	0x2
 2458 03ea 7D       		.byte	0x7d
 2459 03eb 0C       		.sleb128 12
 2460 03ec 04000000 		.4byte	.LCFI51
 2461 03f0 06000000 		.4byte	.LCFI52
 2462 03f4 0200     		.2byte	0x2
 2463 03f6 7D       		.byte	0x7d
 2464 03f7 18       		.sleb128 24
 2465 03f8 06000000 		.4byte	.LCFI52
 2466 03fc 60000000 		.4byte	.LFE19
 2467 0400 0200     		.2byte	0x2
 2468 0402 77       		.byte	0x77
 2469 0403 18       		.sleb128 24
 2470 0404 00000000 		.4byte	0
 2471 0408 00000000 		.4byte	0
 2472              	.LLST20:
 2473 040c 00000000 		.4byte	.LFB20
 2474 0410 02000000 		.4byte	.LCFI53
 2475 0414 0200     		.2byte	0x2
 2476 0416 7D       		.byte	0x7d
 2477 0417 00       		.sleb128 0
 2478 0418 02000000 		.4byte	.LCFI53
 2479 041c 04000000 		.4byte	.LCFI54
 2480 0420 0200     		.2byte	0x2
 2481 0422 7D       		.byte	0x7d
 2482 0423 08       		.sleb128 8
 2483 0424 04000000 		.4byte	.LCFI54
 2484 0428 10000000 		.4byte	.LFE20
 2485 042c 0200     		.2byte	0x2
 2486 042e 77       		.byte	0x77
 2487 042f 08       		.sleb128 8
 2488 0430 00000000 		.4byte	0
 2489 0434 00000000 		.4byte	0
 2490              	.LLST21:
 2491 0438 00000000 		.4byte	.LFB21
 2492 043c 02000000 		.4byte	.LCFI55
 2493 0440 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 65


 2494 0442 7D       		.byte	0x7d
 2495 0443 00       		.sleb128 0
 2496 0444 02000000 		.4byte	.LCFI55
 2497 0448 04000000 		.4byte	.LCFI56
 2498 044c 0200     		.2byte	0x2
 2499 044e 7D       		.byte	0x7d
 2500 044f 08       		.sleb128 8
 2501 0450 04000000 		.4byte	.LCFI56
 2502 0454 10000000 		.4byte	.LFE21
 2503 0458 0200     		.2byte	0x2
 2504 045a 77       		.byte	0x77
 2505 045b 08       		.sleb128 8
 2506 045c 00000000 		.4byte	0
 2507 0460 00000000 		.4byte	0
 2508              	.LLST22:
 2509 0464 00000000 		.4byte	.LFB22
 2510 0468 02000000 		.4byte	.LCFI57
 2511 046c 0200     		.2byte	0x2
 2512 046e 7D       		.byte	0x7d
 2513 046f 00       		.sleb128 0
 2514 0470 02000000 		.4byte	.LCFI57
 2515 0474 04000000 		.4byte	.LCFI58
 2516 0478 0200     		.2byte	0x2
 2517 047a 7D       		.byte	0x7d
 2518 047b 08       		.sleb128 8
 2519 047c 04000000 		.4byte	.LCFI58
 2520 0480 06000000 		.4byte	.LCFI59
 2521 0484 0200     		.2byte	0x2
 2522 0486 7D       		.byte	0x7d
 2523 0487 10       		.sleb128 16
 2524 0488 06000000 		.4byte	.LCFI59
 2525 048c 30000000 		.4byte	.LFE22
 2526 0490 0200     		.2byte	0x2
 2527 0492 77       		.byte	0x77
 2528 0493 10       		.sleb128 16
 2529 0494 00000000 		.4byte	0
 2530 0498 00000000 		.4byte	0
 2531              	.LLST23:
 2532 049c 00000000 		.4byte	.LFB23
 2533 04a0 02000000 		.4byte	.LCFI60
 2534 04a4 0200     		.2byte	0x2
 2535 04a6 7D       		.byte	0x7d
 2536 04a7 00       		.sleb128 0
 2537 04a8 02000000 		.4byte	.LCFI60
 2538 04ac 04000000 		.4byte	.LCFI61
 2539 04b0 0200     		.2byte	0x2
 2540 04b2 7D       		.byte	0x7d
 2541 04b3 08       		.sleb128 8
 2542 04b4 04000000 		.4byte	.LCFI61
 2543 04b8 06000000 		.4byte	.LCFI62
 2544 04bc 0200     		.2byte	0x2
 2545 04be 7D       		.byte	0x7d
 2546 04bf 10       		.sleb128 16
 2547 04c0 06000000 		.4byte	.LCFI62
 2548 04c4 40000000 		.4byte	.LFE23
 2549 04c8 0200     		.2byte	0x2
 2550 04ca 77       		.byte	0x77
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 66


 2551 04cb 10       		.sleb128 16
 2552 04cc 00000000 		.4byte	0
 2553 04d0 00000000 		.4byte	0
 2554              		.section	.debug_aranges,"",%progbits
 2555 0000 D4000000 		.4byte	0xd4
 2556 0004 0200     		.2byte	0x2
 2557 0006 00000000 		.4byte	.Ldebug_info0
 2558 000a 04       		.byte	0x4
 2559 000b 00       		.byte	0
 2560 000c 0000     		.2byte	0
 2561 000e 0000     		.2byte	0
 2562 0010 00000000 		.4byte	.LFB0
 2563 0014 34000000 		.4byte	.LFE0-.LFB0
 2564 0018 00000000 		.4byte	.LFB1
 2565 001c 68000000 		.4byte	.LFE1-.LFB1
 2566 0020 00000000 		.4byte	.LFB2
 2567 0024 24000000 		.4byte	.LFE2-.LFB2
 2568 0028 00000000 		.4byte	.LFB3
 2569 002c 54000000 		.4byte	.LFE3-.LFB3
 2570 0030 00000000 		.4byte	.LFB4
 2571 0034 08000000 		.4byte	.LFE4-.LFB4
 2572 0038 00000000 		.4byte	.LFB5
 2573 003c 08000000 		.4byte	.LFE5-.LFB5
 2574 0040 00000000 		.4byte	.LFB6
 2575 0044 08000000 		.4byte	.LFE6-.LFB6
 2576 0048 00000000 		.4byte	.LFB7
 2577 004c 08000000 		.4byte	.LFE7-.LFB7
 2578 0050 00000000 		.4byte	.LFB8
 2579 0054 20000000 		.4byte	.LFE8-.LFB8
 2580 0058 00000000 		.4byte	.LFB9
 2581 005c 20000000 		.4byte	.LFE9-.LFB9
 2582 0060 00000000 		.4byte	.LFB10
 2583 0064 20000000 		.4byte	.LFE10-.LFB10
 2584 0068 00000000 		.4byte	.LFB11
 2585 006c 20000000 		.4byte	.LFE11-.LFB11
 2586 0070 00000000 		.4byte	.LFB12
 2587 0074 34000000 		.4byte	.LFE12-.LFB12
 2588 0078 00000000 		.4byte	.LFB13
 2589 007c 20000000 		.4byte	.LFE13-.LFB13
 2590 0080 00000000 		.4byte	.LFB14
 2591 0084 30000000 		.4byte	.LFE14-.LFB14
 2592 0088 00000000 		.4byte	.LFB15
 2593 008c 48000000 		.4byte	.LFE15-.LFB15
 2594 0090 00000000 		.4byte	.LFB16
 2595 0094 24000000 		.4byte	.LFE16-.LFB16
 2596 0098 00000000 		.4byte	.LFB17
 2597 009c 44000000 		.4byte	.LFE17-.LFB17
 2598 00a0 00000000 		.4byte	.LFB18
 2599 00a4 50000000 		.4byte	.LFE18-.LFB18
 2600 00a8 00000000 		.4byte	.LFB19
 2601 00ac 60000000 		.4byte	.LFE19-.LFB19
 2602 00b0 00000000 		.4byte	.LFB20
 2603 00b4 10000000 		.4byte	.LFE20-.LFB20
 2604 00b8 00000000 		.4byte	.LFB21
 2605 00bc 10000000 		.4byte	.LFE21-.LFB21
 2606 00c0 00000000 		.4byte	.LFB22
 2607 00c4 30000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 67


 2608 00c8 00000000 		.4byte	.LFB23
 2609 00cc 40000000 		.4byte	.LFE23-.LFB23
 2610 00d0 00000000 		.4byte	0
 2611 00d4 00000000 		.4byte	0
 2612              		.section	.debug_ranges,"",%progbits
 2613              	.Ldebug_ranges0:
 2614 0000 00000000 		.4byte	.LFB0
 2615 0004 34000000 		.4byte	.LFE0
 2616 0008 00000000 		.4byte	.LFB1
 2617 000c 68000000 		.4byte	.LFE1
 2618 0010 00000000 		.4byte	.LFB2
 2619 0014 24000000 		.4byte	.LFE2
 2620 0018 00000000 		.4byte	.LFB3
 2621 001c 54000000 		.4byte	.LFE3
 2622 0020 00000000 		.4byte	.LFB4
 2623 0024 08000000 		.4byte	.LFE4
 2624 0028 00000000 		.4byte	.LFB5
 2625 002c 08000000 		.4byte	.LFE5
 2626 0030 00000000 		.4byte	.LFB6
 2627 0034 08000000 		.4byte	.LFE6
 2628 0038 00000000 		.4byte	.LFB7
 2629 003c 08000000 		.4byte	.LFE7
 2630 0040 00000000 		.4byte	.LFB8
 2631 0044 20000000 		.4byte	.LFE8
 2632 0048 00000000 		.4byte	.LFB9
 2633 004c 20000000 		.4byte	.LFE9
 2634 0050 00000000 		.4byte	.LFB10
 2635 0054 20000000 		.4byte	.LFE10
 2636 0058 00000000 		.4byte	.LFB11
 2637 005c 20000000 		.4byte	.LFE11
 2638 0060 00000000 		.4byte	.LFB12
 2639 0064 34000000 		.4byte	.LFE12
 2640 0068 00000000 		.4byte	.LFB13
 2641 006c 20000000 		.4byte	.LFE13
 2642 0070 00000000 		.4byte	.LFB14
 2643 0074 30000000 		.4byte	.LFE14
 2644 0078 00000000 		.4byte	.LFB15
 2645 007c 48000000 		.4byte	.LFE15
 2646 0080 00000000 		.4byte	.LFB16
 2647 0084 24000000 		.4byte	.LFE16
 2648 0088 00000000 		.4byte	.LFB17
 2649 008c 44000000 		.4byte	.LFE17
 2650 0090 00000000 		.4byte	.LFB18
 2651 0094 50000000 		.4byte	.LFE18
 2652 0098 00000000 		.4byte	.LFB19
 2653 009c 60000000 		.4byte	.LFE19
 2654 00a0 00000000 		.4byte	.LFB20
 2655 00a4 10000000 		.4byte	.LFE20
 2656 00a8 00000000 		.4byte	.LFB21
 2657 00ac 10000000 		.4byte	.LFE21
 2658 00b0 00000000 		.4byte	.LFB22
 2659 00b4 30000000 		.4byte	.LFE22
 2660 00b8 00000000 		.4byte	.LFB23
 2661 00bc 40000000 		.4byte	.LFE23
 2662 00c0 00000000 		.4byte	0
 2663 00c4 00000000 		.4byte	0
 2664              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 68


 2665              	.Ldebug_line0:
 2666 0000 6C020000 		.section	.debug_str,"MS",%progbits,1
 2666      02004300 
 2666      00000201 
 2666      FB0E0D00 
 2666      01010101 
 2667              	.LASF16:
 2668 0000 53504930 		.ascii	"SPI0_Start\000"
 2668      5F537461 
 2668      727400
 2669              	.LASF48:
 2670 000b 53504930 		.ascii	"SPI0_initVar\000"
 2670      5F696E69 
 2670      74566172 
 2670      00
 2671              	.LASF30:
 2672 0018 53504930 		.ascii	"SPI0_WriteTxData\000"
 2672      5F577269 
 2672      74655478 
 2672      44617461 
 2672      00
 2673              	.LASF40:
 2674 0029 62756666 		.ascii	"buffer\000"
 2674      657200
 2675              	.LASF21:
 2676 0030 53504930 		.ascii	"SPI0_EnableRxInt\000"
 2676      5F456E61 
 2676      626C6552 
 2676      78496E74 
 2676      00
 2677              	.LASF44:
 2678 0041 53504930 		.ascii	"SPI0_EnableInt\000"
 2678      5F456E61 
 2678      626C6549 
 2678      6E7400
 2679              	.LASF17:
 2680 0050 53504930 		.ascii	"SPI0_Enable\000"
 2680      5F456E61 
 2680      626C6500 
 2681              	.LASF3:
 2682 005c 73686F72 		.ascii	"short unsigned int\000"
 2682      7420756E 
 2682      7369676E 
 2682      65642069 
 2682      6E7400
 2683              	.LASF37:
 2684 006f 53504930 		.ascii	"SPI0_ClearRxBuffer\000"
 2684      5F436C65 
 2684      61725278 
 2684      42756666 
 2684      657200
 2685              	.LASF45:
 2686 0082 53504930 		.ascii	"SPI0_DisableInt\000"
 2686      5F446973 
 2686      61626C65 
 2686      496E7400 
 2687              	.LASF52:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 69


 2688 0092 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\SPI0.c\000"
 2688      6E657261 
 2688      7465645F 
 2688      536F7572 
 2688      63655C50 
 2689              	.LASF33:
 2690 00b2 72784461 		.ascii	"rxData\000"
 2690      746100
 2691              	.LASF39:
 2692 00b9 53504930 		.ascii	"SPI0_PutArray\000"
 2692      5F507574 
 2692      41727261 
 2692      7900
 2693              	.LASF24:
 2694 00c7 53504930 		.ascii	"SPI0_SetTxInterruptMode\000"
 2694      5F536574 
 2694      5478496E 
 2694      74657272 
 2694      7570744D 
 2695              	.LASF9:
 2696 00df 666C6F61 		.ascii	"float\000"
 2696      7400
 2697              	.LASF34:
 2698 00e5 53504930 		.ascii	"SPI0_GetRxBufferSize\000"
 2698      5F476574 
 2698      52784275 
 2698      66666572 
 2698      53697A65 
 2699              	.LASF35:
 2700 00fa 73697A65 		.ascii	"size\000"
 2700      00
 2701              	.LASF13:
 2702 00ff 72656738 		.ascii	"reg8\000"
 2702      00
 2703              	.LASF5:
 2704 0104 6C6F6E67 		.ascii	"long unsigned int\000"
 2704      20756E73 
 2704      69676E65 
 2704      6420696E 
 2704      7400
 2705              	.LASF47:
 2706 0116 53504930 		.ascii	"SPI0_ReadStatus\000"
 2706      5F526561 
 2706      64537461 
 2706      74757300 
 2707              	.LASF12:
 2708 0126 75696E74 		.ascii	"uint8\000"
 2708      3800
 2709              	.LASF23:
 2710 012c 53504930 		.ascii	"SPI0_DisableRxInt\000"
 2710      5F446973 
 2710      61626C65 
 2710      5278496E 
 2710      7400
 2711              	.LASF41:
 2712 013e 62797465 		.ascii	"byteCount\000"
 2712      436F756E 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 70


 2712      7400
 2713              	.LASF25:
 2714 0148 53504930 		.ascii	"SPI0_SetRxInterruptMode\000"
 2714      5F536574 
 2714      5278496E 
 2714      74657272 
 2714      7570744D 
 2715              	.LASF28:
 2716 0160 53504930 		.ascii	"SPI0_ReadTxStatus\000"
 2716      5F526561 
 2716      64547853 
 2716      74617475 
 2716      7300
 2717              	.LASF1:
 2718 0172 756E7369 		.ascii	"unsigned char\000"
 2718      676E6564 
 2718      20636861 
 2718      7200
 2719              	.LASF10:
 2720 0180 646F7562 		.ascii	"double\000"
 2720      6C6500
 2721              	.LASF26:
 2722 0187 696E7453 		.ascii	"intSrc\000"
 2722      726300
 2723              	.LASF53:
 2724 018e 433A5C55 		.ascii	"C:\\Users\\chuck.erhardt\\Documents\\GitHub\\PSoC-W"
 2724      73657273 
 2724      5C636875 
 2724      636B2E65 
 2724      72686172 
 2725 01bc 35313030 		.ascii	"5100-Driver\\PSoCPioneer+ArduinoShield_SPIM_Example"
 2725      2D447269 
 2725      7665725C 
 2725      50536F43 
 2725      50696F6E 
 2726 01ee 2E637964 		.ascii	".cydsn\000"
 2726      736E00
 2727              	.LASF8:
 2728 01f5 756E7369 		.ascii	"unsigned int\000"
 2728      676E6564 
 2728      20696E74 
 2728      00
 2729              	.LASF36:
 2730 0202 53504930 		.ascii	"SPI0_GetTxBufferSize\000"
 2730      5F476574 
 2730      54784275 
 2730      66666572 
 2730      53697A65 
 2731              	.LASF7:
 2732 0217 6C6F6E67 		.ascii	"long long unsigned int\000"
 2732      206C6F6E 
 2732      6720756E 
 2732      7369676E 
 2732      65642069 
 2733              	.LASF50:
 2734 022e 53504930 		.ascii	"SPI0_swStatusRx\000"
 2734      5F737753 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 71


 2734      74617475 
 2734      73527800 
 2735              	.LASF43:
 2736 023e 53504930 		.ascii	"SPI0_ClearFIFO\000"
 2736      5F436C65 
 2736      61724649 
 2736      464F00
 2737              	.LASF42:
 2738 024d 62756649 		.ascii	"bufIndex\000"
 2738      6E646578 
 2738      00
 2739              	.LASF31:
 2740 0256 74784461 		.ascii	"txData\000"
 2740      746100
 2741              	.LASF49:
 2742 025d 53504930 		.ascii	"SPI0_swStatusTx\000"
 2742      5F737753 
 2742      74617475 
 2742      73547800 
 2743              	.LASF14:
 2744 026d 73697A65 		.ascii	"sizetype\000"
 2744      74797065 
 2744      00
 2745              	.LASF19:
 2746 0276 656E6162 		.ascii	"enableInterrupts\000"
 2746      6C65496E 
 2746      74657272 
 2746      75707473 
 2746      00
 2747              	.LASF6:
 2748 0287 6C6F6E67 		.ascii	"long long int\000"
 2748      206C6F6E 
 2748      6720696E 
 2748      7400
 2749              	.LASF38:
 2750 0295 53504930 		.ascii	"SPI0_ClearTxBuffer\000"
 2750      5F436C65 
 2750      61725478 
 2750      42756666 
 2750      657200
 2751              	.LASF11:
 2752 02a8 63686172 		.ascii	"char\000"
 2752      00
 2753              	.LASF29:
 2754 02ad 53504930 		.ascii	"SPI0_ReadRxStatus\000"
 2754      5F526561 
 2754      64527853 
 2754      74617475 
 2754      7300
 2755              	.LASF46:
 2756 02bf 53504930 		.ascii	"SPI0_SetInterruptMode\000"
 2756      5F536574 
 2756      496E7465 
 2756      72727570 
 2756      744D6F64 
 2757              	.LASF2:
 2758 02d5 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccVk2CR9.s 			page 72


 2758      7420696E 
 2758      7400
 2759              	.LASF22:
 2760 02df 53504930 		.ascii	"SPI0_DisableTxInt\000"
 2760      5F446973 
 2760      61626C65 
 2760      5478496E 
 2760      7400
 2761              	.LASF20:
 2762 02f1 53504930 		.ascii	"SPI0_EnableTxInt\000"
 2762      5F456E61 
 2762      626C6554 
 2762      78496E74 
 2762      00
 2763              	.LASF51:
 2764 0302 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 2764      4320342E 
 2764      372E3320 
 2764      32303133 
 2764      30333132 
 2765 0335 616E6368 		.ascii	"anch revision 196615]\000"
 2765      20726576 
 2765      6973696F 
 2765      6E203139 
 2765      36363135 
 2766              	.LASF15:
 2767 034b 53504930 		.ascii	"SPI0_Init\000"
 2767      5F496E69 
 2767      7400
 2768              	.LASF4:
 2769 0355 6C6F6E67 		.ascii	"long int\000"
 2769      20696E74 
 2769      00
 2770              	.LASF27:
 2771 035e 746D7053 		.ascii	"tmpStatus\000"
 2771      74617475 
 2771      7300
 2772              	.LASF0:
 2773 0368 7369676E 		.ascii	"signed char\000"
 2773      65642063 
 2773      68617200 
 2774              	.LASF18:
 2775 0374 53504930 		.ascii	"SPI0_Stop\000"
 2775      5F53746F 
 2775      7000
 2776              	.LASF32:
 2777 037e 53504930 		.ascii	"SPI0_ReadRxData\000"
 2777      5F526561 
 2777      64527844 
 2777      61746100 
 2778              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
