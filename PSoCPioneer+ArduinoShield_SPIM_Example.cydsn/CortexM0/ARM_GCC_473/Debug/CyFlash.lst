ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyFlash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysFlashWriteRow,"ax",%progbits
  18              		.align	2
  19              		.global	CySysFlashWriteRow
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysFlashWriteRow, %function
  23              	CySysFlashWriteRow:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CyFlash.c"
   1:.\Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CyFlash.c **** * File Name: CyFlash.c
   3:.\Generated_Source\PSoC4/CyFlash.c **** * Version 4.10
   4:.\Generated_Source\PSoC4/CyFlash.c **** *
   5:.\Generated_Source\PSoC4/CyFlash.c **** *  Description:
   6:.\Generated_Source\PSoC4/CyFlash.c **** *   Provides an API for the FLASH.
   7:.\Generated_Source\PSoC4/CyFlash.c **** *
   8:.\Generated_Source\PSoC4/CyFlash.c **** *  Note:
   9:.\Generated_Source\PSoC4/CyFlash.c **** *   This code is endian agnostic.
  10:.\Generated_Source\PSoC4/CyFlash.c **** *
  11:.\Generated_Source\PSoC4/CyFlash.c **** *  Note:
  12:.\Generated_Source\PSoC4/CyFlash.c **** *   Documentation of the API's in this file is located in the
  13:.\Generated_Source\PSoC4/CyFlash.c **** *   System Reference Guide provided with PSoC Creator.
  14:.\Generated_Source\PSoC4/CyFlash.c **** *
  15:.\Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
  16:.\Generated_Source\PSoC4/CyFlash.c **** * Copyright 2010-2014, Cypress Semiconductor Corporation.  All rights reserved.
  17:.\Generated_Source\PSoC4/CyFlash.c **** * You may use this file only in accordance with the license, terms, conditions,
  18:.\Generated_Source\PSoC4/CyFlash.c **** * disclaimers, and limitations in the end user license agreement accompanying
  19:.\Generated_Source\PSoC4/CyFlash.c **** * the software package with which this file was provided.
  20:.\Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  21:.\Generated_Source\PSoC4/CyFlash.c **** 
  22:.\Generated_Source\PSoC4/CyFlash.c **** #include "CyFlash.h"
  23:.\Generated_Source\PSoC4/CyFlash.c **** 
  24:.\Generated_Source\PSoC4/CyFlash.c **** 
  25:.\Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashWriteRow
  27:.\Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/CyFlash.c **** *
  29:.\Generated_Source\PSoC4/CyFlash.c **** * Summary:
  30:.\Generated_Source\PSoC4/CyFlash.c **** *  Writes a row of Flash.
  31:.\Generated_Source\PSoC4/CyFlash.c **** *
  32:.\Generated_Source\PSoC4/CyFlash.c **** * Parameters:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 2


  33:.\Generated_Source\PSoC4/CyFlash.c **** *  uint16 rowNum:
  34:.\Generated_Source\PSoC4/CyFlash.c **** *   Row number. Each row is 128 bytes so a 32KB flash memory will have a valid
  35:.\Generated_Source\PSoC4/CyFlash.c **** *   range of [0-255].
  36:.\Generated_Source\PSoC4/CyFlash.c **** *
  37:.\Generated_Source\PSoC4/CyFlash.c **** *  uint8* rowData:
  38:.\Generated_Source\PSoC4/CyFlash.c **** *   Array of bytes to write.
  39:.\Generated_Source\PSoC4/CyFlash.c **** *
  40:.\Generated_Source\PSoC4/CyFlash.c **** * Return:
  41:.\Generated_Source\PSoC4/CyFlash.c **** *  Status
  42:.\Generated_Source\PSoC4/CyFlash.c **** *     Value             Description
  43:.\Generated_Source\PSoC4/CyFlash.c **** *    CYRET_SUCCESS     Successful
  44:.\Generated_Source\PSoC4/CyFlash.c **** *    CYRET_LOCKED      Flash writing already in use
  45:.\Generated_Source\PSoC4/CyFlash.c **** *    CYRET_CANCELED    Command not accepted
  46:.\Generated_Source\PSoC4/CyFlash.c **** *    CYRET_BAD_PARAM   One or more invalid parameters
  47:.\Generated_Source\PSoC4/CyFlash.c **** *    Other non-zero    Failure
  48:.\Generated_Source\PSoC4/CyFlash.c **** *
  49:.\Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  50:.\Generated_Source\PSoC4/CyFlash.c **** cystatus CySysFlashWriteRow(uint32 rowNum, const uint8 rowData[])
  51:.\Generated_Source\PSoC4/CyFlash.c **** {
  26              		.loc 1 51 0
  27              		.cfi_startproc
  28 0000 90B5     		push	{r4, r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 12
  31              		.cfi_offset 4, -12
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 ABB0     		sub	sp, sp, #172
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 184
  37 0004 00AF     		add	r7, sp, #0
  38              	.LCFI2:
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
  41 0008 3960     		str	r1, [r7]
  52:.\Generated_Source\PSoC4/CyFlash.c ****     volatile cystatus retValue = CYRET_SUCCESS;
  42              		.loc 1 52 0
  43 000a 0023     		mov	r3, #0
  44 000c 9C21     		mov	r1, #156
  45 000e C919     		add	r1, r1, r7
  46 0010 0B60     		str	r3, [r1]
  53:.\Generated_Source\PSoC4/CyFlash.c ****     volatile uint32   *ptr;
  54:.\Generated_Source\PSoC4/CyFlash.c ****     volatile uint32   cpuValue;
  55:.\Generated_Source\PSoC4/CyFlash.c ****     volatile uint32   localData[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA)/4u];
  56:.\Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
  57:.\Generated_Source\PSoC4/CyFlash.c **** 
  58:.\Generated_Source\PSoC4/CyFlash.c ****     #if(CY_PSOC4A)
  59:.\Generated_Source\PSoC4/CyFlash.c ****         volatile uint32   imoConfigReg;
  60:.\Generated_Source\PSoC4/CyFlash.c ****     #else
  61:.\Generated_Source\PSoC4/CyFlash.c ****         uint32 clkSelectReg;
  62:.\Generated_Source\PSoC4/CyFlash.c ****         uint32 clkImoEna;
  63:.\Generated_Source\PSoC4/CyFlash.c ****         uint32 clkImoFreq;
  64:.\Generated_Source\PSoC4/CyFlash.c ****     #endif
  65:.\Generated_Source\PSoC4/CyFlash.c **** 
  66:.\Generated_Source\PSoC4/CyFlash.c ****     #if(!CY_PSOC4A)
  67:.\Generated_Source\PSoC4/CyFlash.c ****         clkSelectReg = CY_SYS_CLK_SELECT_REG;
  68:.\Generated_Source\PSoC4/CyFlash.c ****         clkImoEna    = CY_SYS_CLK_IMO_CONFIG_REG & CY_SYS_CLK_IMO_CONFIG_ENABLE;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 3


  69:.\Generated_Source\PSoC4/CyFlash.c ****         clkImoFreq   = CY_SYS_CLK_IMO_MIN_FREQ_MHZ + (CY_SYS_CLK_IMO_SELECT_REG << 2);
  70:.\Generated_Source\PSoC4/CyFlash.c ****     #endif
  71:.\Generated_Source\PSoC4/CyFlash.c **** 
  72:.\Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_FLASH_NUMBER_ROWS) && (rowData != 0u))
  47              		.loc 1 72 0
  48 0012 7B68     		ldr	r3, [r7, #4]
  49 0014 FF2B     		cmp	r3, #255
  50 0016 00D9     		bls	.LCB24
  51 0018 98E0     		b	.L2	@long jump
  52              	.LCB24:
  53              		.loc 1 72 0 is_stmt 0 discriminator 1
  54 001a 3B68     		ldr	r3, [r7]
  55 001c 002B     		cmp	r3, #0
  56 001e 00D1     		bne	.LCB27
  57 0020 94E0     		b	.L2	@long jump
  58              	.LCB27:
  73:.\Generated_Source\PSoC4/CyFlash.c ****     {
  74:.\Generated_Source\PSoC4/CyFlash.c ****         /* First load data. Then invoke Write row command. */
  75:.\Generated_Source\PSoC4/CyFlash.c ****         ptr = &localData[CY_FLASH_SRAM_ROM_KEY1];
  59              		.loc 1 75 0 is_stmt 1
  60 0022 3B1C     		mov	r3, r7
  61 0024 1033     		add	r3, r3, #16
  62 0026 A422     		mov	r2, #164
  63 0028 D219     		add	r2, r2, r7
  64 002a 1360     		str	r3, [r2]
  76:.\Generated_Source\PSoC4/CyFlash.c **** 
  77:.\Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32)ptr;
  65              		.loc 1 77 0
  66 002c 4E4B     		ldr	r3, .L14
  67 002e A421     		mov	r1, #164
  68 0030 C919     		add	r1, r1, r7
  69 0032 0A68     		ldr	r2, [r1]
  70 0034 1A60     		str	r2, [r3]
  78:.\Generated_Source\PSoC4/CyFlash.c **** 
  79:.\Generated_Source\PSoC4/CyFlash.c ****         #if(CY_FLASH_NUMBER_ROWS > 255u)
  80:.\Generated_Source\PSoC4/CyFlash.c ****             localData[CY_FLASH_SRAM_ROM_KEY1] = CY_FLASH_SROM_LOAD_CMD | (uint32)((rowNum & 0x100u)
  71              		.loc 1 80 0
  72 0036 7A68     		ldr	r2, [r7, #4]
  73 0038 8023     		mov	r3, #128
  74 003a 5B00     		lsl	r3, r3, #1
  75 003c 1340     		and	r3, r2
  76 003e 1B04     		lsl	r3, r3, #16
  77 0040 4A4A     		ldr	r2, .L14+4
  78 0042 1A43     		orr	r2, r3
  79 0044 3B1C     		mov	r3, r7
  80 0046 1033     		add	r3, r3, #16
  81 0048 1A60     		str	r2, [r3]
  81:.\Generated_Source\PSoC4/CyFlash.c ****         #else
  82:.\Generated_Source\PSoC4/CyFlash.c ****             localData[CY_FLASH_SRAM_ROM_KEY1] = CY_FLASH_SROM_LOAD_CMD;
  83:.\Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_FLASH_SIZEOF_ROW > 255) */
  84:.\Generated_Source\PSoC4/CyFlash.c **** 
  85:.\Generated_Source\PSoC4/CyFlash.c ****         localData[CY_FLASH_SRAM_ROM_PARAM2/4u] = ((uint32)(CYDEV_FLS_ROW_SIZE - 1u));
  82              		.loc 1 85 0
  83 004a 3B1C     		mov	r3, r7
  84 004c 1033     		add	r3, r3, #16
  85 004e 7F22     		mov	r2, #127
  86 0050 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 4


  86:.\Generated_Source\PSoC4/CyFlash.c **** 
  87:.\Generated_Source\PSoC4/CyFlash.c ****         /* Copy row data from 8bit to 32bit array with shift for CPUSS commands */
  88:.\Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&localData[CY_FLASH_SRAM_ROM_DATA/4u], rowData, CYDEV_FLS_ROW_SIZE);
  87              		.loc 1 88 0
  88 0052 3B1C     		mov	r3, r7
  89 0054 1033     		add	r3, r3, #16
  90 0056 1A1C     		mov	r2, r3
  91 0058 0832     		add	r2, r2, #8
  92 005a 3B68     		ldr	r3, [r7]
  93 005c 101C     		mov	r0, r2
  94 005e 191C     		mov	r1, r3
  95 0060 8022     		mov	r2, #128
  96 0062 FFF7FEFF 		bl	memcpy
  89:.\Generated_Source\PSoC4/CyFlash.c **** 
  90:.\Generated_Source\PSoC4/CyFlash.c ****         /* Perform sysreq load data, opcode 0x80000004h */
  91:.\Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_LOAD_BYTE_OPCODE | CY_FLASH_CPUSS_REQ_START;
  97              		.loc 1 91 0
  98 0066 424B     		ldr	r3, .L14+8
  99 0068 424A     		ldr	r2, .L14+12
 100 006a 1A60     		str	r2, [r3]
  92:.\Generated_Source\PSoC4/CyFlash.c **** 
  93:.\Generated_Source\PSoC4/CyFlash.c ****         while((CY_FLASH_CPUSS_SYSREQ_REG & CY_FLASH_CPUSS_REQ_START) == CY_FLASH_CPUSS_REQ_START)
 101              		.loc 1 93 0
 102 006c C046     		mov	r8, r8
 103              	.L3:
 104              		.loc 1 93 0 is_stmt 0 discriminator 1
 105 006e 404B     		ldr	r3, .L14+8
 106 0070 1B68     		ldr	r3, [r3]
 107 0072 002B     		cmp	r3, #0
 108 0074 FBDB     		blt	.L3
  94:.\Generated_Source\PSoC4/CyFlash.c ****         {
  95:.\Generated_Source\PSoC4/CyFlash.c ****             /* Wait till CY_FLASH_CPUSS_REQ_START bit goes low */
  96:.\Generated_Source\PSoC4/CyFlash.c ****         }
  97:.\Generated_Source\PSoC4/CyFlash.c **** 
  98:.\Generated_Source\PSoC4/CyFlash.c ****         /* Check if value is written to SRAM_BASE */
  99:.\Generated_Source\PSoC4/CyFlash.c ****         cpuValue = CY_FLASH_CPUSS_SYSARG_REG;
 109              		.loc 1 99 0 is_stmt 1
 110 0076 3C4B     		ldr	r3, .L14
 111 0078 1B68     		ldr	r3, [r3]
 112 007a 9822     		mov	r2, #152
 113 007c D219     		add	r2, r2, r7
 114 007e 1360     		str	r3, [r2]
 100:.\Generated_Source\PSoC4/CyFlash.c ****         if (cpuValue == CY_FLASH_SROM_CMD_RETURN_SUCC)
 115              		.loc 1 100 0
 116 0080 9823     		mov	r3, #152
 117 0082 DB19     		add	r3, r3, r7
 118 0084 1A68     		ldr	r2, [r3]
 119 0086 A023     		mov	r3, #160
 120 0088 1B06     		lsl	r3, r3, #24
 121 008a 9A42     		cmp	r2, r3
 122 008c 04D1     		bne	.L4
 101:.\Generated_Source\PSoC4/CyFlash.c ****         {
 102:.\Generated_Source\PSoC4/CyFlash.c ****             retValue = CYRET_SUCCESS;
 123              		.loc 1 102 0
 124 008e 0023     		mov	r3, #0
 125 0090 9C21     		mov	r1, #156
 126 0092 C919     		add	r1, r1, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 5


 127 0094 0B60     		str	r3, [r1]
 128 0096 16E0     		b	.L5
 129              	.L4:
 103:.\Generated_Source\PSoC4/CyFlash.c ****         }
 104:.\Generated_Source\PSoC4/CyFlash.c ****         else if((cpuValue & CY_FLASH_SROM_CMD_RETURN_MASK) == CY_FLASH_SROM_CMD_RETURN_MASK)
 130              		.loc 1 104 0
 131 0098 9822     		mov	r2, #152
 132 009a D219     		add	r2, r2, r7
 133 009c 1368     		ldr	r3, [r2]
 134 009e 1B0F     		lsr	r3, r3, #28
 135 00a0 1A07     		lsl	r2, r3, #28
 136 00a2 F023     		mov	r3, #240
 137 00a4 1B06     		lsl	r3, r3, #24
 138 00a6 9A42     		cmp	r2, r3
 139 00a8 04D1     		bne	.L12
 105:.\Generated_Source\PSoC4/CyFlash.c ****         {
 106:.\Generated_Source\PSoC4/CyFlash.c ****             /* Error value, cant proceed */
 107:.\Generated_Source\PSoC4/CyFlash.c ****             retValue = CYRET_CANCELED;
 140              		.loc 1 107 0
 141 00aa 0923     		mov	r3, #9
 142 00ac 9C21     		mov	r1, #156
 143 00ae C919     		add	r1, r1, r7
 144 00b0 0B60     		str	r3, [r1]
 145 00b2 08E0     		b	.L5
 146              	.L12:
 108:.\Generated_Source\PSoC4/CyFlash.c ****         }
 109:.\Generated_Source\PSoC4/CyFlash.c ****         else
 110:.\Generated_Source\PSoC4/CyFlash.c ****         {
 111:.\Generated_Source\PSoC4/CyFlash.c ****             while((CY_FLASH_CPUSS_SYSARG_REG & CY_FLASH_SROM_CMD_RETURN_MASK) != CY_FLASH_SROM_CMD_
 147              		.loc 1 111 0
 148 00b4 C046     		mov	r8, r8
 149              	.L7:
 150              		.loc 1 111 0 is_stmt 0 discriminator 1
 151 00b6 2C4B     		ldr	r3, .L14
 152 00b8 1B68     		ldr	r3, [r3]
 153 00ba 1B0F     		lsr	r3, r3, #28
 154 00bc 1A07     		lsl	r2, r3, #28
 155 00be A023     		mov	r3, #160
 156 00c0 1B06     		lsl	r3, r3, #24
 157 00c2 9A42     		cmp	r2, r3
 158 00c4 F7D1     		bne	.L7
 159              	.L5:
 112:.\Generated_Source\PSoC4/CyFlash.c ****             {
 113:.\Generated_Source\PSoC4/CyFlash.c ****                 /* Wait till request is completed */
 114:.\Generated_Source\PSoC4/CyFlash.c ****             }
 115:.\Generated_Source\PSoC4/CyFlash.c ****         }
 116:.\Generated_Source\PSoC4/CyFlash.c **** 
 117:.\Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CYRET_SUCCESS)
 160              		.loc 1 117 0 is_stmt 1
 161 00c6 9C22     		mov	r2, #156
 162 00c8 D219     		add	r2, r2, r7
 163 00ca 1368     		ldr	r3, [r2]
 164 00cc 002B     		cmp	r3, #0
 165 00ce 42D1     		bne	.L13
 118:.\Generated_Source\PSoC4/CyFlash.c ****         {
 119:.\Generated_Source\PSoC4/CyFlash.c ****             #if(!CY_PSOC4A)
 120:.\Generated_Source\PSoC4/CyFlash.c ****                 /* Mask all exceptions to guarantee that IMO configuration will be changed
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 6


 121:.\Generated_Source\PSoC4/CyFlash.c ****                 * in the atomic way. It will not affect the syscall execution (flash row write)
 122:.\Generated_Source\PSoC4/CyFlash.c ****                 * since it is executed in the NMI context.
 123:.\Generated_Source\PSoC4/CyFlash.c ****                 */
 124:.\Generated_Source\PSoC4/CyFlash.c ****                 interruptState = CyEnterCriticalSection();
 125:.\Generated_Source\PSoC4/CyFlash.c **** 
 126:.\Generated_Source\PSoC4/CyFlash.c ****                 /* The FM-Lite IP (s8fmlt) uses the IMO at 48MHz for the pump clock and SPC timer c
 127:.\Generated_Source\PSoC4/CyFlash.c ****                  * The PUMP_SEL and HF clock must be set to IMO before calling Flash write or erase
 128:.\Generated_Source\PSoC4/CyFlash.c ****                  */
 129:.\Generated_Source\PSoC4/CyFlash.c ****                 if ((clkImoFreq != 48u) ||
 130:.\Generated_Source\PSoC4/CyFlash.c ****                     ((clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCLK_IMO) ||
 131:.\Generated_Source\PSoC4/CyFlash.c ****                     (((clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELECT_PUMP_S
 132:.\Generated_Source\PSoC4/CyFlash.c **** 					    CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 133:.\Generated_Source\PSoC4/CyFlash.c ****                 {
 134:.\Generated_Source\PSoC4/CyFlash.c ****                     CySysClkWriteHfclkDiv(CY_SYS_CLK_HFCLK_DIV_4);
 135:.\Generated_Source\PSoC4/CyFlash.c ****                     if (clkImoFreq != 48u)
 136:.\Generated_Source\PSoC4/CyFlash.c ****                     {
 137:.\Generated_Source\PSoC4/CyFlash.c ****                         CySysClkWriteImoFreq(48u);
 138:.\Generated_Source\PSoC4/CyFlash.c ****                     }
 139:.\Generated_Source\PSoC4/CyFlash.c ****                     CySysClkImoStart();
 140:.\Generated_Source\PSoC4/CyFlash.c ****                     CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_IMO);
 141:.\Generated_Source\PSoC4/CyFlash.c ****                     /* Set IMO output as clock source for charge pump clock */
 142:.\Generated_Source\PSoC4/CyFlash.c ****                     CY_SYS_CLK_SELECT_REG &= ((uint32)~(uint32)(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << 
 143:.\Generated_Source\PSoC4/CyFlash.c ****                     CY_SYS_CLK_SELECT_REG |= (uint32)((uint32)1u << CY_SYS_CLK_SELECT_PUMP_SEL_SHIF
 144:.\Generated_Source\PSoC4/CyFlash.c ****                 }
 145:.\Generated_Source\PSoC4/CyFlash.c ****             #endif
 146:.\Generated_Source\PSoC4/CyFlash.c **** 
 147:.\Generated_Source\PSoC4/CyFlash.c ****             ptr = &localData[CY_FLASH_SRAM_ROM_KEY1/4u];
 166              		.loc 1 147 0
 167 00d0 3B1C     		mov	r3, r7
 168 00d2 1033     		add	r3, r3, #16
 169 00d4 A421     		mov	r1, #164
 170 00d6 C919     		add	r1, r1, r7
 171 00d8 0B60     		str	r3, [r1]
 148:.\Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32)ptr;
 172              		.loc 1 148 0
 173 00da 234B     		ldr	r3, .L14
 174 00dc A421     		mov	r1, #164
 175 00de C919     		add	r1, r1, r7
 176 00e0 0A68     		ldr	r2, [r1]
 177 00e2 1A60     		str	r2, [r3]
 149:.\Generated_Source\PSoC4/CyFlash.c **** 
 150:.\Generated_Source\PSoC4/CyFlash.c ****             /* Write row command to SROM */
 151:.\Generated_Source\PSoC4/CyFlash.c ****             localData[CY_FLASH_SRAM_ROM_KEY1/4u] =  (uint32)(rowNum << 16u) |
 178              		.loc 1 151 0
 179 00e4 7B68     		ldr	r3, [r7, #4]
 180 00e6 1B04     		lsl	r3, r3, #16
 152:.\Generated_Source\PSoC4/CyFlash.c ****                                                     (uint32)(CY_FLASH_SROM_KEY2_WRITE << 8u) |
 181              		.loc 1 152 0
 182 00e8 234A     		ldr	r2, .L14+16
 183 00ea 1A43     		orr	r2, r3
 151:.\Generated_Source\PSoC4/CyFlash.c ****             localData[CY_FLASH_SRAM_ROM_KEY1/4u] =  (uint32)(rowNum << 16u) |
 184              		.loc 1 151 0
 185 00ec 3B1C     		mov	r3, r7
 186 00ee 1033     		add	r3, r3, #16
 187 00f0 1A60     		str	r2, [r3]
 153:.\Generated_Source\PSoC4/CyFlash.c ****                                                     CY_FLASH_SROM_KEY1;
 154:.\Generated_Source\PSoC4/CyFlash.c **** 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 7


 155:.\Generated_Source\PSoC4/CyFlash.c ****             #if(CY_PSOC4A)
 156:.\Generated_Source\PSoC4/CyFlash.c ****                 /* Mask all the exceptions to guarantee that IMO configuration will be changed
 157:.\Generated_Source\PSoC4/CyFlash.c ****                 * in the atomic way. It will not affect the syscall execution (flash row write)
 158:.\Generated_Source\PSoC4/CyFlash.c ****                 * since it is executed in the NMI context.
 159:.\Generated_Source\PSoC4/CyFlash.c ****                 */
 160:.\Generated_Source\PSoC4/CyFlash.c ****                 interruptState = CyEnterCriticalSection();
 188              		.loc 1 160 0
 189 00f2 3C1C     		mov	r4, r7
 190 00f4 A334     		add	r4, r4, #163
 191 00f6 FFF7FEFF 		bl	CyEnterCriticalSection
 192 00fa 031C     		mov	r3, r0
 193 00fc 2370     		strb	r3, [r4]
 161:.\Generated_Source\PSoC4/CyFlash.c **** 
 162:.\Generated_Source\PSoC4/CyFlash.c ****                 /* Preserve IMO configuration that could be changed
 163:.\Generated_Source\PSoC4/CyFlash.c ****                 * during syscall execution (Cypress ID #150448).
 164:.\Generated_Source\PSoC4/CyFlash.c ****                 */
 165:.\Generated_Source\PSoC4/CyFlash.c ****                 imoConfigReg = CY_SYS_CLK_IMO_CONFIG_REG;
 194              		.loc 1 165 0
 195 00fe 1F4B     		ldr	r3, .L14+20
 196 0100 1B68     		ldr	r3, [r3]
 197 0102 FB60     		str	r3, [r7, #12]
 166:.\Generated_Source\PSoC4/CyFlash.c ****             #endif
 167:.\Generated_Source\PSoC4/CyFlash.c **** 
 168:.\Generated_Source\PSoC4/CyFlash.c ****             /* Perform sysreq for Write row, opcode 0x80000005 */
 169:.\Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_WRITE_ROW_OPCODE | CY_FLASH_CPUSS_REQ_START;
 198              		.loc 1 169 0
 199 0104 1A4B     		ldr	r3, .L14+8
 200 0106 1E4A     		ldr	r2, .L14+24
 201 0108 1A60     		str	r2, [r3]
 170:.\Generated_Source\PSoC4/CyFlash.c **** 
 171:.\Generated_Source\PSoC4/CyFlash.c ****             while((CY_FLASH_CPUSS_SYSREQ_REG & CY_FLASH_CPUSS_REQ_START) == CY_FLASH_CPUSS_REQ_STAR
 202              		.loc 1 171 0
 203 010a C046     		mov	r8, r8
 204              	.L9:
 205              		.loc 1 171 0 is_stmt 0 discriminator 1
 206 010c 184B     		ldr	r3, .L14+8
 207 010e 1B68     		ldr	r3, [r3]
 208 0110 002B     		cmp	r3, #0
 209 0112 FBDB     		blt	.L9
 172:.\Generated_Source\PSoC4/CyFlash.c ****             {
 173:.\Generated_Source\PSoC4/CyFlash.c ****                 /* Wait till CY_FLASH_CPUSS_REQ_START bit goes low */
 174:.\Generated_Source\PSoC4/CyFlash.c ****             }
 175:.\Generated_Source\PSoC4/CyFlash.c **** 
 176:.\Generated_Source\PSoC4/CyFlash.c ****             #if(CY_PSOC4A)
 177:.\Generated_Source\PSoC4/CyFlash.c ****                 /* Restore IMO configuration */
 178:.\Generated_Source\PSoC4/CyFlash.c ****                 CY_SYS_CLK_IMO_CONFIG_REG = imoConfigReg;
 210              		.loc 1 178 0 is_stmt 1
 211 0114 194B     		ldr	r3, .L14+20
 212 0116 FA68     		ldr	r2, [r7, #12]
 213 0118 1A60     		str	r2, [r3]
 179:.\Generated_Source\PSoC4/CyFlash.c **** 
 180:.\Generated_Source\PSoC4/CyFlash.c ****                 CyExitCriticalSection(interruptState);
 214              		.loc 1 180 0
 215 011a 3B1C     		mov	r3, r7
 216 011c A333     		add	r3, r3, #163
 217 011e 1B78     		ldrb	r3, [r3]
 218 0120 181C     		mov	r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 8


 219 0122 FFF7FEFF 		bl	CyExitCriticalSection
 181:.\Generated_Source\PSoC4/CyFlash.c ****             #else
 182:.\Generated_Source\PSoC4/CyFlash.c ****                 /* Restore clock settings */
 183:.\Generated_Source\PSoC4/CyFlash.c ****                 if ((clkImoFreq != 48u) ||
 184:.\Generated_Source\PSoC4/CyFlash.c ****                     ((clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCLK_IMO) ||
 185:.\Generated_Source\PSoC4/CyFlash.c ****                     (((clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELECT_PUMP_S
 186:.\Generated_Source\PSoC4/CyFlash.c ****                         CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 187:.\Generated_Source\PSoC4/CyFlash.c ****                 {
 188:.\Generated_Source\PSoC4/CyFlash.c ****                     if (clkImoFreq != 48u)
 189:.\Generated_Source\PSoC4/CyFlash.c ****                     {
 190:.\Generated_Source\PSoC4/CyFlash.c ****                         CySysClkWriteImoFreq(clkImoFreq);
 191:.\Generated_Source\PSoC4/CyFlash.c ****                     }
 192:.\Generated_Source\PSoC4/CyFlash.c ****                     CySysClkWriteHfclkDiv(CY_SYS_CLK_HFCLK_DIV_8);
 193:.\Generated_Source\PSoC4/CyFlash.c ****                     CySysClkWriteHfclkDirect(clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 194:.\Generated_Source\PSoC4/CyFlash.c ****                     CY_SYS_CLK_SELECT_REG = clkSelectReg;
 195:.\Generated_Source\PSoC4/CyFlash.c ****                     if (0u == clkImoEna)
 196:.\Generated_Source\PSoC4/CyFlash.c ****                     {
 197:.\Generated_Source\PSoC4/CyFlash.c ****                         CySysClkImoStop();
 198:.\Generated_Source\PSoC4/CyFlash.c ****                     }
 199:.\Generated_Source\PSoC4/CyFlash.c ****                 }
 200:.\Generated_Source\PSoC4/CyFlash.c ****                 CyExitCriticalSection(interruptState);
 201:.\Generated_Source\PSoC4/CyFlash.c ****             #endif
 202:.\Generated_Source\PSoC4/CyFlash.c **** 
 203:.\Generated_Source\PSoC4/CyFlash.c ****             cpuValue = CY_FLASH_CPUSS_SYSARG_REG;
 220              		.loc 1 203 0
 221 0126 104B     		ldr	r3, .L14
 222 0128 1B68     		ldr	r3, [r3]
 223 012a 9822     		mov	r2, #152
 224 012c D219     		add	r2, r2, r7
 225 012e 1360     		str	r3, [r2]
 204:.\Generated_Source\PSoC4/CyFlash.c ****             if (cpuValue != CY_FLASH_SROM_CMD_RETURN_SUCC)
 226              		.loc 1 204 0
 227 0130 9823     		mov	r3, #152
 228 0132 DB19     		add	r3, r3, r7
 229 0134 1A68     		ldr	r2, [r3]
 230 0136 A023     		mov	r3, #160
 231 0138 1B06     		lsl	r3, r3, #24
 232 013a 9A42     		cmp	r2, r3
 233 013c 0BD0     		beq	.L13
 205:.\Generated_Source\PSoC4/CyFlash.c ****             {
 206:.\Generated_Source\PSoC4/CyFlash.c ****                 retValue = cpuValue;
 234              		.loc 1 206 0
 235 013e 9821     		mov	r1, #152
 236 0140 C919     		add	r1, r1, r7
 237 0142 0B68     		ldr	r3, [r1]
 238 0144 9C22     		mov	r2, #156
 239 0146 D219     		add	r2, r2, r7
 240 0148 1360     		str	r3, [r2]
 117:.\Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CYRET_SUCCESS)
 241              		.loc 1 117 0
 242 014a 04E0     		b	.L13
 243              	.L2:
 207:.\Generated_Source\PSoC4/CyFlash.c ****             }
 208:.\Generated_Source\PSoC4/CyFlash.c ****         }
 209:.\Generated_Source\PSoC4/CyFlash.c ****     }
 210:.\Generated_Source\PSoC4/CyFlash.c ****     else
 211:.\Generated_Source\PSoC4/CyFlash.c ****     {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 9


 212:.\Generated_Source\PSoC4/CyFlash.c ****         retValue = CYRET_BAD_PARAM;
 244              		.loc 1 212 0
 245 014c 0123     		mov	r3, #1
 246 014e 9C21     		mov	r1, #156
 247 0150 C919     		add	r1, r1, r7
 248 0152 0B60     		str	r3, [r1]
 249 0154 00E0     		b	.L10
 250              	.L13:
 117:.\Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CYRET_SUCCESS)
 251              		.loc 1 117 0
 252 0156 C046     		mov	r8, r8
 253              	.L10:
 213:.\Generated_Source\PSoC4/CyFlash.c ****     }
 214:.\Generated_Source\PSoC4/CyFlash.c **** 
 215:.\Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 254              		.loc 1 215 0
 255 0158 9C22     		mov	r2, #156
 256 015a D219     		add	r2, r2, r7
 257 015c 1368     		ldr	r3, [r2]
 216:.\Generated_Source\PSoC4/CyFlash.c **** }
 258              		.loc 1 216 0
 259 015e 181C     		mov	r0, r3
 260 0160 BD46     		mov	sp, r7
 261 0162 2BB0     		add	sp, sp, #172
 262              		@ sp needed for prologue
 263 0164 90BD     		pop	{r4, r7, pc}
 264              	.L15:
 265 0166 C046     		.align	2
 266              	.L14:
 267 0168 08000040 		.word	1073741832
 268 016c B6D70000 		.word	55222
 269 0170 04000040 		.word	1073741828
 270 0174 04000080 		.word	-2147483644
 271 0178 B6D80000 		.word	55478
 272 017c 08010B40 		.word	1074462984
 273 0180 05000080 		.word	-2147483643
 274              		.cfi_endproc
 275              	.LFE0:
 276              		.size	CySysFlashWriteRow, .-CySysFlashWriteRow
 277              		.section	.text.CySysFlashSetWaitCycles,"ax",%progbits
 278              		.align	2
 279              		.global	CySysFlashSetWaitCycles
 280              		.code	16
 281              		.thumb_func
 282              		.type	CySysFlashSetWaitCycles, %function
 283              	CySysFlashSetWaitCycles:
 284              	.LFB1:
 217:.\Generated_Source\PSoC4/CyFlash.c **** 
 218:.\Generated_Source\PSoC4/CyFlash.c **** #if(CY_PSOC4A)
 219:.\Generated_Source\PSoC4/CyFlash.c **** 
 220:.\Generated_Source\PSoC4/CyFlash.c ****     /*******************************************************************************
 221:.\Generated_Source\PSoC4/CyFlash.c ****     * Function Name: CySysFlashSetWaitCycles
 222:.\Generated_Source\PSoC4/CyFlash.c ****     ********************************************************************************
 223:.\Generated_Source\PSoC4/CyFlash.c ****     *
 224:.\Generated_Source\PSoC4/CyFlash.c ****     * Summary:
 225:.\Generated_Source\PSoC4/CyFlash.c ****     *  Sets the number of clock cycles the cache will wait before it samples data
 226:.\Generated_Source\PSoC4/CyFlash.c ****     *  coming back from Flash. This function must be called before increasing the
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 10


 227:.\Generated_Source\PSoC4/CyFlash.c ****     *  SYSCLK clock frequency. It can optionally be called after lowering SYSCLK
 228:.\Generated_Source\PSoC4/CyFlash.c ****     *  clock frequency in order to improve the CPU performance.
 229:.\Generated_Source\PSoC4/CyFlash.c ****     *
 230:.\Generated_Source\PSoC4/CyFlash.c ****     * Parameters:
 231:.\Generated_Source\PSoC4/CyFlash.c ****     *  freq: Valid range [3-48].  Frequency for operation of the IMO.
 232:.\Generated_Source\PSoC4/CyFlash.c ****     *  Note: Invalid frequency will be ignored.
 233:.\Generated_Source\PSoC4/CyFlash.c ****     *
 234:.\Generated_Source\PSoC4/CyFlash.c ****     * Return:
 235:.\Generated_Source\PSoC4/CyFlash.c ****     *  None
 236:.\Generated_Source\PSoC4/CyFlash.c ****     *
 237:.\Generated_Source\PSoC4/CyFlash.c ****     *******************************************************************************/
 238:.\Generated_Source\PSoC4/CyFlash.c ****     void CySysFlashSetWaitCycles(uint32 freq)
 239:.\Generated_Source\PSoC4/CyFlash.c ****     {
 285              		.loc 1 239 0
 286              		.cfi_startproc
 287 0000 80B5     		push	{r7, lr}
 288              	.LCFI3:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 7, -8
 291              		.cfi_offset 14, -4
 292 0002 82B0     		sub	sp, sp, #8
 293              	.LCFI4:
 294              		.cfi_def_cfa_offset 16
 295 0004 00AF     		add	r7, sp, #0
 296              	.LCFI5:
 297              		.cfi_def_cfa_register 7
 298 0006 7860     		str	r0, [r7, #4]
 240:.\Generated_Source\PSoC4/CyFlash.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 299              		.loc 1 240 0
 300 0008 7B68     		ldr	r3, [r7, #4]
 301 000a 022B     		cmp	r3, #2
 302 000c 14D9     		bls	.L17
 303              		.loc 1 240 0 is_stmt 0 discriminator 1
 304 000e 7B68     		ldr	r3, [r7, #4]
 305 0010 302B     		cmp	r3, #48
 306 0012 11D8     		bhi	.L17
 241:.\Generated_Source\PSoC4/CyFlash.c ****         {
 242:.\Generated_Source\PSoC4/CyFlash.c ****             if ( freq <= CY_FLASH_SYSCLK_BOUNDARY_MHZ )
 307              		.loc 1 242 0 is_stmt 1
 308 0014 7B68     		ldr	r3, [r7, #4]
 309 0016 182B     		cmp	r3, #24
 310 0018 06D8     		bhi	.L18
 243:.\Generated_Source\PSoC4/CyFlash.c ****             {
 244:.\Generated_Source\PSoC4/CyFlash.c ****                 CY_SYS_CLK_SELECT_REG &= (uint32)(~CY_FLASH_WAIT_STATE_EN);
 311              		.loc 1 244 0
 312 001a 0A4B     		ldr	r3, .L21
 313 001c 094A     		ldr	r2, .L21
 314 001e 1168     		ldr	r1, [r2]
 315 0020 094A     		ldr	r2, .L21+4
 316 0022 0A40     		and	r2, r1
 317 0024 1A60     		str	r2, [r3]
 242:.\Generated_Source\PSoC4/CyFlash.c ****             if ( freq <= CY_FLASH_SYSCLK_BOUNDARY_MHZ )
 318              		.loc 1 242 0
 319 0026 0AE0     		b	.L16
 320              	.L18:
 245:.\Generated_Source\PSoC4/CyFlash.c ****             }
 246:.\Generated_Source\PSoC4/CyFlash.c ****             else
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 11


 247:.\Generated_Source\PSoC4/CyFlash.c ****             {
 248:.\Generated_Source\PSoC4/CyFlash.c ****                 CY_SYS_CLK_SELECT_REG |= CY_FLASH_WAIT_STATE_EN;
 321              		.loc 1 248 0
 322 0028 064B     		ldr	r3, .L21
 323 002a 064A     		ldr	r2, .L21
 324 002c 1268     		ldr	r2, [r2]
 325 002e 8021     		mov	r1, #128
 326 0030 C902     		lsl	r1, r1, #11
 327 0032 0A43     		orr	r2, r1
 328 0034 1A60     		str	r2, [r3]
 242:.\Generated_Source\PSoC4/CyFlash.c ****             if ( freq <= CY_FLASH_SYSCLK_BOUNDARY_MHZ )
 329              		.loc 1 242 0
 330 0036 02E0     		b	.L16
 331              	.L17:
 249:.\Generated_Source\PSoC4/CyFlash.c ****             }
 250:.\Generated_Source\PSoC4/CyFlash.c ****         }
 251:.\Generated_Source\PSoC4/CyFlash.c ****         else
 252:.\Generated_Source\PSoC4/CyFlash.c ****         {
 253:.\Generated_Source\PSoC4/CyFlash.c ****             /* Halt CPU in debug mode if frequency is invalid */
 254:.\Generated_Source\PSoC4/CyFlash.c ****             CYASSERT(0u != 0u);
 332              		.loc 1 254 0 discriminator 1
 333 0038 0020     		mov	r0, #0
 334 003a FFF7FEFF 		bl	CyHalt
 335              	.L16:
 255:.\Generated_Source\PSoC4/CyFlash.c ****         }
 256:.\Generated_Source\PSoC4/CyFlash.c ****     }
 336              		.loc 1 256 0
 337 003e BD46     		mov	sp, r7
 338 0040 02B0     		add	sp, sp, #8
 339              		@ sp needed for prologue
 340 0042 80BD     		pop	{r7, pc}
 341              	.L22:
 342              		.align	2
 343              	.L21:
 344 0044 00010B40 		.word	1074462976
 345 0048 FFFFFBFF 		.word	-262145
 346              		.cfi_endproc
 347              	.LFE1:
 348              		.size	CySysFlashSetWaitCycles, .-CySysFlashSetWaitCycles
 349              		.text
 350              	.Letext0:
 351              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 352              		.section	.debug_info,"",%progbits
 353              	.Ldebug_info0:
 354 0000 9C010000 		.4byte	0x19c
 355 0004 0200     		.2byte	0x2
 356 0006 00000000 		.4byte	.Ldebug_abbrev0
 357 000a 04       		.byte	0x4
 358 000b 01       		.uleb128 0x1
 359 000c 7C010000 		.4byte	.LASF25
 360 0010 01       		.byte	0x1
 361 0011 16000000 		.4byte	.LASF26
 362 0015 BC000000 		.4byte	.LASF27
 363 0019 00000000 		.4byte	.Ldebug_ranges0+0
 364 001d 00000000 		.4byte	0
 365 0021 00000000 		.4byte	0
 366 0025 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 12


 367 0029 02       		.uleb128 0x2
 368 002a 01       		.byte	0x1
 369 002b 06       		.byte	0x6
 370 002c CE010000 		.4byte	.LASF0
 371 0030 02       		.uleb128 0x2
 372 0031 01       		.byte	0x1
 373 0032 08       		.byte	0x8
 374 0033 5B000000 		.4byte	.LASF1
 375 0037 02       		.uleb128 0x2
 376 0038 02       		.byte	0x2
 377 0039 05       		.byte	0x5
 378 003a A9000000 		.4byte	.LASF2
 379 003e 02       		.uleb128 0x2
 380 003f 02       		.byte	0x2
 381 0040 07       		.byte	0x7
 382 0041 39000000 		.4byte	.LASF3
 383 0045 02       		.uleb128 0x2
 384 0046 04       		.byte	0x4
 385 0047 05       		.byte	0x5
 386 0048 C5010000 		.4byte	.LASF4
 387 004c 02       		.uleb128 0x2
 388 004d 04       		.byte	0x4
 389 004e 07       		.byte	0x7
 390 004f 80000000 		.4byte	.LASF5
 391 0053 02       		.uleb128 0x2
 392 0054 08       		.byte	0x8
 393 0055 05       		.byte	0x5
 394 0056 57010000 		.4byte	.LASF6
 395 005a 02       		.uleb128 0x2
 396 005b 08       		.byte	0x8
 397 005c 07       		.byte	0x7
 398 005d 37010000 		.4byte	.LASF7
 399 0061 03       		.uleb128 0x3
 400 0062 04       		.byte	0x4
 401 0063 05       		.byte	0x5
 402 0064 696E7400 		.ascii	"int\000"
 403 0068 02       		.uleb128 0x2
 404 0069 04       		.byte	0x4
 405 006a 07       		.byte	0x7
 406 006b 2A010000 		.4byte	.LASF8
 407 006f 04       		.uleb128 0x4
 408 0070 92000000 		.4byte	.LASF9
 409 0074 02       		.byte	0x2
 410 0075 5B       		.byte	0x5b
 411 0076 30000000 		.4byte	0x30
 412 007a 04       		.uleb128 0x4
 413 007b 23010000 		.4byte	.LASF10
 414 007f 02       		.byte	0x2
 415 0080 5D       		.byte	0x5d
 416 0081 4C000000 		.4byte	0x4c
 417 0085 02       		.uleb128 0x2
 418 0086 04       		.byte	0x4
 419 0087 04       		.byte	0x4
 420 0088 55000000 		.4byte	.LASF11
 421 008c 02       		.uleb128 0x2
 422 008d 08       		.byte	0x8
 423 008e 04       		.byte	0x4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 13


 424 008f A2000000 		.4byte	.LASF12
 425 0093 02       		.uleb128 0x2
 426 0094 01       		.byte	0x1
 427 0095 08       		.byte	0x8
 428 0096 72010000 		.4byte	.LASF13
 429 009a 04       		.uleb128 0x4
 430 009b B3000000 		.4byte	.LASF14
 431 009f 02       		.byte	0x2
 432 00a0 E8       		.byte	0xe8
 433 00a1 4C000000 		.4byte	0x4c
 434 00a5 04       		.uleb128 0x4
 435 00a6 00000000 		.4byte	.LASF15
 436 00aa 02       		.byte	0x2
 437 00ab F2       		.byte	0xf2
 438 00ac B0000000 		.4byte	0xb0
 439 00b0 05       		.uleb128 0x5
 440 00b1 7A000000 		.4byte	0x7a
 441 00b5 02       		.uleb128 0x2
 442 00b6 04       		.byte	0x4
 443 00b7 07       		.byte	0x7
 444 00b8 4E010000 		.4byte	.LASF16
 445 00bc 06       		.uleb128 0x6
 446 00bd 01       		.byte	0x1
 447 00be DA010000 		.4byte	.LASF28
 448 00c2 01       		.byte	0x1
 449 00c3 32       		.byte	0x32
 450 00c4 01       		.byte	0x1
 451 00c5 9A000000 		.4byte	0x9a
 452 00c9 00000000 		.4byte	.LFB0
 453 00cd 84010000 		.4byte	.LFE0
 454 00d1 00000000 		.4byte	.LLST0
 455 00d5 01       		.byte	0x1
 456 00d6 4F010000 		.4byte	0x14f
 457 00da 07       		.uleb128 0x7
 458 00db 0F000000 		.4byte	.LASF17
 459 00df 01       		.byte	0x1
 460 00e0 32       		.byte	0x32
 461 00e1 7A000000 		.4byte	0x7a
 462 00e5 03       		.byte	0x3
 463 00e6 91       		.byte	0x91
 464 00e7 CC7E     		.sleb128 -180
 465 00e9 07       		.uleb128 0x7
 466 00ea 69000000 		.4byte	.LASF18
 467 00ee 01       		.byte	0x1
 468 00ef 32       		.byte	0x32
 469 00f0 4F010000 		.4byte	0x14f
 470 00f4 03       		.byte	0x3
 471 00f5 91       		.byte	0x91
 472 00f6 C87E     		.sleb128 -184
 473 00f8 08       		.uleb128 0x8
 474 00f9 06000000 		.4byte	.LASF19
 475 00fd 01       		.byte	0x1
 476 00fe 34       		.byte	0x34
 477 00ff 5A010000 		.4byte	0x15a
 478 0103 02       		.byte	0x2
 479 0104 91       		.byte	0x91
 480 0105 64       		.sleb128 -28
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 14


 481 0106 09       		.uleb128 0x9
 482 0107 70747200 		.ascii	"ptr\000"
 483 010b 01       		.byte	0x1
 484 010c 35       		.byte	0x35
 485 010d 5F010000 		.4byte	0x15f
 486 0111 02       		.byte	0x2
 487 0112 91       		.byte	0x91
 488 0113 6C       		.sleb128 -20
 489 0114 08       		.uleb128 0x8
 490 0115 4C000000 		.4byte	.LASF20
 491 0119 01       		.byte	0x1
 492 011a 36       		.byte	0x36
 493 011b B0000000 		.4byte	0xb0
 494 011f 02       		.byte	0x2
 495 0120 91       		.byte	0x91
 496 0121 60       		.sleb128 -32
 497 0122 08       		.uleb128 0x8
 498 0123 98000000 		.4byte	.LASF21
 499 0127 01       		.byte	0x1
 500 0128 37       		.byte	0x37
 501 0129 75010000 		.4byte	0x175
 502 012d 03       		.byte	0x3
 503 012e 91       		.byte	0x91
 504 012f D87E     		.sleb128 -168
 505 0131 08       		.uleb128 0x8
 506 0132 71000000 		.4byte	.LASF22
 507 0136 01       		.byte	0x1
 508 0137 38       		.byte	0x38
 509 0138 6F000000 		.4byte	0x6f
 510 013c 02       		.byte	0x2
 511 013d 91       		.byte	0x91
 512 013e 6B       		.sleb128 -21
 513 013f 08       		.uleb128 0x8
 514 0140 65010000 		.4byte	.LASF23
 515 0144 01       		.byte	0x1
 516 0145 3B       		.byte	0x3b
 517 0146 B0000000 		.4byte	0xb0
 518 014a 03       		.byte	0x3
 519 014b 91       		.byte	0x91
 520 014c D47E     		.sleb128 -172
 521 014e 00       		.byte	0
 522 014f 0A       		.uleb128 0xa
 523 0150 04       		.byte	0x4
 524 0151 55010000 		.4byte	0x155
 525 0155 0B       		.uleb128 0xb
 526 0156 6F000000 		.4byte	0x6f
 527 015a 05       		.uleb128 0x5
 528 015b 9A000000 		.4byte	0x9a
 529 015f 0A       		.uleb128 0xa
 530 0160 04       		.byte	0x4
 531 0161 B0000000 		.4byte	0xb0
 532 0165 0C       		.uleb128 0xc
 533 0166 7A000000 		.4byte	0x7a
 534 016a 75010000 		.4byte	0x175
 535 016e 0D       		.uleb128 0xd
 536 016f B5000000 		.4byte	0xb5
 537 0173 21       		.byte	0x21
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 15


 538 0174 00       		.byte	0
 539 0175 05       		.uleb128 0x5
 540 0176 65010000 		.4byte	0x165
 541 017a 0E       		.uleb128 0xe
 542 017b 01       		.byte	0x1
 543 017c ED010000 		.4byte	.LASF29
 544 0180 01       		.byte	0x1
 545 0181 EE       		.byte	0xee
 546 0182 01       		.byte	0x1
 547 0183 00000000 		.4byte	.LFB1
 548 0187 4C000000 		.4byte	.LFE1
 549 018b 3A000000 		.4byte	.LLST1
 550 018f 01       		.byte	0x1
 551 0190 07       		.uleb128 0x7
 552 0191 77010000 		.4byte	.LASF24
 553 0195 01       		.byte	0x1
 554 0196 EE       		.byte	0xee
 555 0197 7A000000 		.4byte	0x7a
 556 019b 02       		.byte	0x2
 557 019c 91       		.byte	0x91
 558 019d 74       		.sleb128 -12
 559 019e 00       		.byte	0
 560 019f 00       		.byte	0
 561              		.section	.debug_abbrev,"",%progbits
 562              	.Ldebug_abbrev0:
 563 0000 01       		.uleb128 0x1
 564 0001 11       		.uleb128 0x11
 565 0002 01       		.byte	0x1
 566 0003 25       		.uleb128 0x25
 567 0004 0E       		.uleb128 0xe
 568 0005 13       		.uleb128 0x13
 569 0006 0B       		.uleb128 0xb
 570 0007 03       		.uleb128 0x3
 571 0008 0E       		.uleb128 0xe
 572 0009 1B       		.uleb128 0x1b
 573 000a 0E       		.uleb128 0xe
 574 000b 55       		.uleb128 0x55
 575 000c 06       		.uleb128 0x6
 576 000d 11       		.uleb128 0x11
 577 000e 01       		.uleb128 0x1
 578 000f 52       		.uleb128 0x52
 579 0010 01       		.uleb128 0x1
 580 0011 10       		.uleb128 0x10
 581 0012 06       		.uleb128 0x6
 582 0013 00       		.byte	0
 583 0014 00       		.byte	0
 584 0015 02       		.uleb128 0x2
 585 0016 24       		.uleb128 0x24
 586 0017 00       		.byte	0
 587 0018 0B       		.uleb128 0xb
 588 0019 0B       		.uleb128 0xb
 589 001a 3E       		.uleb128 0x3e
 590 001b 0B       		.uleb128 0xb
 591 001c 03       		.uleb128 0x3
 592 001d 0E       		.uleb128 0xe
 593 001e 00       		.byte	0
 594 001f 00       		.byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 16


 595 0020 03       		.uleb128 0x3
 596 0021 24       		.uleb128 0x24
 597 0022 00       		.byte	0
 598 0023 0B       		.uleb128 0xb
 599 0024 0B       		.uleb128 0xb
 600 0025 3E       		.uleb128 0x3e
 601 0026 0B       		.uleb128 0xb
 602 0027 03       		.uleb128 0x3
 603 0028 08       		.uleb128 0x8
 604 0029 00       		.byte	0
 605 002a 00       		.byte	0
 606 002b 04       		.uleb128 0x4
 607 002c 16       		.uleb128 0x16
 608 002d 00       		.byte	0
 609 002e 03       		.uleb128 0x3
 610 002f 0E       		.uleb128 0xe
 611 0030 3A       		.uleb128 0x3a
 612 0031 0B       		.uleb128 0xb
 613 0032 3B       		.uleb128 0x3b
 614 0033 0B       		.uleb128 0xb
 615 0034 49       		.uleb128 0x49
 616 0035 13       		.uleb128 0x13
 617 0036 00       		.byte	0
 618 0037 00       		.byte	0
 619 0038 05       		.uleb128 0x5
 620 0039 35       		.uleb128 0x35
 621 003a 00       		.byte	0
 622 003b 49       		.uleb128 0x49
 623 003c 13       		.uleb128 0x13
 624 003d 00       		.byte	0
 625 003e 00       		.byte	0
 626 003f 06       		.uleb128 0x6
 627 0040 2E       		.uleb128 0x2e
 628 0041 01       		.byte	0x1
 629 0042 3F       		.uleb128 0x3f
 630 0043 0C       		.uleb128 0xc
 631 0044 03       		.uleb128 0x3
 632 0045 0E       		.uleb128 0xe
 633 0046 3A       		.uleb128 0x3a
 634 0047 0B       		.uleb128 0xb
 635 0048 3B       		.uleb128 0x3b
 636 0049 0B       		.uleb128 0xb
 637 004a 27       		.uleb128 0x27
 638 004b 0C       		.uleb128 0xc
 639 004c 49       		.uleb128 0x49
 640 004d 13       		.uleb128 0x13
 641 004e 11       		.uleb128 0x11
 642 004f 01       		.uleb128 0x1
 643 0050 12       		.uleb128 0x12
 644 0051 01       		.uleb128 0x1
 645 0052 40       		.uleb128 0x40
 646 0053 06       		.uleb128 0x6
 647 0054 9642     		.uleb128 0x2116
 648 0056 0C       		.uleb128 0xc
 649 0057 01       		.uleb128 0x1
 650 0058 13       		.uleb128 0x13
 651 0059 00       		.byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 17


 652 005a 00       		.byte	0
 653 005b 07       		.uleb128 0x7
 654 005c 05       		.uleb128 0x5
 655 005d 00       		.byte	0
 656 005e 03       		.uleb128 0x3
 657 005f 0E       		.uleb128 0xe
 658 0060 3A       		.uleb128 0x3a
 659 0061 0B       		.uleb128 0xb
 660 0062 3B       		.uleb128 0x3b
 661 0063 0B       		.uleb128 0xb
 662 0064 49       		.uleb128 0x49
 663 0065 13       		.uleb128 0x13
 664 0066 02       		.uleb128 0x2
 665 0067 0A       		.uleb128 0xa
 666 0068 00       		.byte	0
 667 0069 00       		.byte	0
 668 006a 08       		.uleb128 0x8
 669 006b 34       		.uleb128 0x34
 670 006c 00       		.byte	0
 671 006d 03       		.uleb128 0x3
 672 006e 0E       		.uleb128 0xe
 673 006f 3A       		.uleb128 0x3a
 674 0070 0B       		.uleb128 0xb
 675 0071 3B       		.uleb128 0x3b
 676 0072 0B       		.uleb128 0xb
 677 0073 49       		.uleb128 0x49
 678 0074 13       		.uleb128 0x13
 679 0075 02       		.uleb128 0x2
 680 0076 0A       		.uleb128 0xa
 681 0077 00       		.byte	0
 682 0078 00       		.byte	0
 683 0079 09       		.uleb128 0x9
 684 007a 34       		.uleb128 0x34
 685 007b 00       		.byte	0
 686 007c 03       		.uleb128 0x3
 687 007d 08       		.uleb128 0x8
 688 007e 3A       		.uleb128 0x3a
 689 007f 0B       		.uleb128 0xb
 690 0080 3B       		.uleb128 0x3b
 691 0081 0B       		.uleb128 0xb
 692 0082 49       		.uleb128 0x49
 693 0083 13       		.uleb128 0x13
 694 0084 02       		.uleb128 0x2
 695 0085 0A       		.uleb128 0xa
 696 0086 00       		.byte	0
 697 0087 00       		.byte	0
 698 0088 0A       		.uleb128 0xa
 699 0089 0F       		.uleb128 0xf
 700 008a 00       		.byte	0
 701 008b 0B       		.uleb128 0xb
 702 008c 0B       		.uleb128 0xb
 703 008d 49       		.uleb128 0x49
 704 008e 13       		.uleb128 0x13
 705 008f 00       		.byte	0
 706 0090 00       		.byte	0
 707 0091 0B       		.uleb128 0xb
 708 0092 26       		.uleb128 0x26
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 18


 709 0093 00       		.byte	0
 710 0094 49       		.uleb128 0x49
 711 0095 13       		.uleb128 0x13
 712 0096 00       		.byte	0
 713 0097 00       		.byte	0
 714 0098 0C       		.uleb128 0xc
 715 0099 01       		.uleb128 0x1
 716 009a 01       		.byte	0x1
 717 009b 49       		.uleb128 0x49
 718 009c 13       		.uleb128 0x13
 719 009d 01       		.uleb128 0x1
 720 009e 13       		.uleb128 0x13
 721 009f 00       		.byte	0
 722 00a0 00       		.byte	0
 723 00a1 0D       		.uleb128 0xd
 724 00a2 21       		.uleb128 0x21
 725 00a3 00       		.byte	0
 726 00a4 49       		.uleb128 0x49
 727 00a5 13       		.uleb128 0x13
 728 00a6 2F       		.uleb128 0x2f
 729 00a7 0B       		.uleb128 0xb
 730 00a8 00       		.byte	0
 731 00a9 00       		.byte	0
 732 00aa 0E       		.uleb128 0xe
 733 00ab 2E       		.uleb128 0x2e
 734 00ac 01       		.byte	0x1
 735 00ad 3F       		.uleb128 0x3f
 736 00ae 0C       		.uleb128 0xc
 737 00af 03       		.uleb128 0x3
 738 00b0 0E       		.uleb128 0xe
 739 00b1 3A       		.uleb128 0x3a
 740 00b2 0B       		.uleb128 0xb
 741 00b3 3B       		.uleb128 0x3b
 742 00b4 0B       		.uleb128 0xb
 743 00b5 27       		.uleb128 0x27
 744 00b6 0C       		.uleb128 0xc
 745 00b7 11       		.uleb128 0x11
 746 00b8 01       		.uleb128 0x1
 747 00b9 12       		.uleb128 0x12
 748 00ba 01       		.uleb128 0x1
 749 00bb 40       		.uleb128 0x40
 750 00bc 06       		.uleb128 0x6
 751 00bd 9642     		.uleb128 0x2116
 752 00bf 0C       		.uleb128 0xc
 753 00c0 00       		.byte	0
 754 00c1 00       		.byte	0
 755 00c2 00       		.byte	0
 756              		.section	.debug_loc,"",%progbits
 757              	.Ldebug_loc0:
 758              	.LLST0:
 759 0000 00000000 		.4byte	.LFB0
 760 0004 02000000 		.4byte	.LCFI0
 761 0008 0200     		.2byte	0x2
 762 000a 7D       		.byte	0x7d
 763 000b 00       		.sleb128 0
 764 000c 02000000 		.4byte	.LCFI0
 765 0010 04000000 		.4byte	.LCFI1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 19


 766 0014 0200     		.2byte	0x2
 767 0016 7D       		.byte	0x7d
 768 0017 0C       		.sleb128 12
 769 0018 04000000 		.4byte	.LCFI1
 770 001c 06000000 		.4byte	.LCFI2
 771 0020 0300     		.2byte	0x3
 772 0022 7D       		.byte	0x7d
 773 0023 B801     		.sleb128 184
 774 0025 06000000 		.4byte	.LCFI2
 775 0029 84010000 		.4byte	.LFE0
 776 002d 0300     		.2byte	0x3
 777 002f 77       		.byte	0x77
 778 0030 B801     		.sleb128 184
 779 0032 00000000 		.4byte	0
 780 0036 00000000 		.4byte	0
 781              	.LLST1:
 782 003a 00000000 		.4byte	.LFB1
 783 003e 02000000 		.4byte	.LCFI3
 784 0042 0200     		.2byte	0x2
 785 0044 7D       		.byte	0x7d
 786 0045 00       		.sleb128 0
 787 0046 02000000 		.4byte	.LCFI3
 788 004a 04000000 		.4byte	.LCFI4
 789 004e 0200     		.2byte	0x2
 790 0050 7D       		.byte	0x7d
 791 0051 08       		.sleb128 8
 792 0052 04000000 		.4byte	.LCFI4
 793 0056 06000000 		.4byte	.LCFI5
 794 005a 0200     		.2byte	0x2
 795 005c 7D       		.byte	0x7d
 796 005d 10       		.sleb128 16
 797 005e 06000000 		.4byte	.LCFI5
 798 0062 4C000000 		.4byte	.LFE1
 799 0066 0200     		.2byte	0x2
 800 0068 77       		.byte	0x77
 801 0069 10       		.sleb128 16
 802 006a 00000000 		.4byte	0
 803 006e 00000000 		.4byte	0
 804              		.section	.debug_aranges,"",%progbits
 805 0000 24000000 		.4byte	0x24
 806 0004 0200     		.2byte	0x2
 807 0006 00000000 		.4byte	.Ldebug_info0
 808 000a 04       		.byte	0x4
 809 000b 00       		.byte	0
 810 000c 0000     		.2byte	0
 811 000e 0000     		.2byte	0
 812 0010 00000000 		.4byte	.LFB0
 813 0014 84010000 		.4byte	.LFE0-.LFB0
 814 0018 00000000 		.4byte	.LFB1
 815 001c 4C000000 		.4byte	.LFE1-.LFB1
 816 0020 00000000 		.4byte	0
 817 0024 00000000 		.4byte	0
 818              		.section	.debug_ranges,"",%progbits
 819              	.Ldebug_ranges0:
 820 0000 00000000 		.4byte	.LFB0
 821 0004 84010000 		.4byte	.LFE0
 822 0008 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 20


 823 000c 4C000000 		.4byte	.LFE1
 824 0010 00000000 		.4byte	0
 825 0014 00000000 		.4byte	0
 826              		.section	.debug_line,"",%progbits
 827              	.Ldebug_line0:
 828 0000 D5000000 		.section	.debug_str,"MS",%progbits,1
 828      02004600 
 828      00000201 
 828      FB0E0D00 
 828      01010101 
 829              	.LASF15:
 830 0000 72656733 		.ascii	"reg32\000"
 830      3200
 831              	.LASF19:
 832 0006 72657456 		.ascii	"retValue\000"
 832      616C7565 
 832      00
 833              	.LASF17:
 834 000f 726F774E 		.ascii	"rowNum\000"
 834      756D00
 835              	.LASF26:
 836 0016 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyFlash.c\000"
 836      6E657261 
 836      7465645F 
 836      536F7572 
 836      63655C50 
 837              	.LASF3:
 838 0039 73686F72 		.ascii	"short unsigned int\000"
 838      7420756E 
 838      7369676E 
 838      65642069 
 838      6E7400
 839              	.LASF20:
 840 004c 63707556 		.ascii	"cpuValue\000"
 840      616C7565 
 840      00
 841              	.LASF11:
 842 0055 666C6F61 		.ascii	"float\000"
 842      7400
 843              	.LASF1:
 844 005b 756E7369 		.ascii	"unsigned char\000"
 844      676E6564 
 844      20636861 
 844      7200
 845              	.LASF18:
 846 0069 726F7744 		.ascii	"rowData\000"
 846      61746100 
 847              	.LASF22:
 848 0071 696E7465 		.ascii	"interruptState\000"
 848      72727570 
 848      74537461 
 848      746500
 849              	.LASF5:
 850 0080 6C6F6E67 		.ascii	"long unsigned int\000"
 850      20756E73 
 850      69676E65 
 850      6420696E 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 21


 850      7400
 851              	.LASF9:
 852 0092 75696E74 		.ascii	"uint8\000"
 852      3800
 853              	.LASF21:
 854 0098 6C6F6361 		.ascii	"localData\000"
 854      6C446174 
 854      6100
 855              	.LASF12:
 856 00a2 646F7562 		.ascii	"double\000"
 856      6C6500
 857              	.LASF2:
 858 00a9 73686F72 		.ascii	"short int\000"
 858      7420696E 
 858      7400
 859              	.LASF14:
 860 00b3 63797374 		.ascii	"cystatus\000"
 860      61747573 
 860      00
 861              	.LASF27:
 862 00bc 433A5C55 		.ascii	"C:\\Users\\chuck.erhardt\\Documents\\GitHub\\PSoC-W"
 862      73657273 
 862      5C636875 
 862      636B2E65 
 862      72686172 
 863 00ea 35313030 		.ascii	"5100-Driver\\PSoCPioneer+ArduinoShield_SPIM_Example"
 863      2D447269 
 863      7665725C 
 863      50536F43 
 863      50696F6E 
 864 011c 2E637964 		.ascii	".cydsn\000"
 864      736E00
 865              	.LASF10:
 866 0123 75696E74 		.ascii	"uint32\000"
 866      333200
 867              	.LASF8:
 868 012a 756E7369 		.ascii	"unsigned int\000"
 868      676E6564 
 868      20696E74 
 868      00
 869              	.LASF7:
 870 0137 6C6F6E67 		.ascii	"long long unsigned int\000"
 870      206C6F6E 
 870      6720756E 
 870      7369676E 
 870      65642069 
 871              	.LASF16:
 872 014e 73697A65 		.ascii	"sizetype\000"
 872      74797065 
 872      00
 873              	.LASF6:
 874 0157 6C6F6E67 		.ascii	"long long int\000"
 874      206C6F6E 
 874      6720696E 
 874      7400
 875              	.LASF23:
 876 0165 696D6F43 		.ascii	"imoConfigReg\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccDyP7f4.s 			page 22


 876      6F6E6669 
 876      67526567 
 876      00
 877              	.LASF13:
 878 0172 63686172 		.ascii	"char\000"
 878      00
 879              	.LASF24:
 880 0177 66726571 		.ascii	"freq\000"
 880      00
 881              	.LASF25:
 882 017c 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 882      4320342E 
 882      372E3320 
 882      32303133 
 882      30333132 
 883 01af 616E6368 		.ascii	"anch revision 196615]\000"
 883      20726576 
 883      6973696F 
 883      6E203139 
 883      36363135 
 884              	.LASF4:
 885 01c5 6C6F6E67 		.ascii	"long int\000"
 885      20696E74 
 885      00
 886              	.LASF0:
 887 01ce 7369676E 		.ascii	"signed char\000"
 887      65642063 
 887      68617200 
 888              	.LASF28:
 889 01da 43795379 		.ascii	"CySysFlashWriteRow\000"
 889      73466C61 
 889      73685772 
 889      69746552 
 889      6F7700
 890              	.LASF29:
 891 01ed 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 891      73466C61 
 891      73685365 
 891      74576169 
 891      74437963 
 892              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
