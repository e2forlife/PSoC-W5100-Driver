ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ETH.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ETH_SOCKET_TX_BASE
  18              		.section	.rodata
  19              		.align	2
  20              		.type	ETH_SOCKET_TX_BASE, %object
  21              		.size	ETH_SOCKET_TX_BASE, 8
  22              	ETH_SOCKET_TX_BASE:
  23 0000 0040     		.short	16384
  24 0002 0048     		.short	18432
  25 0004 0050     		.short	20480
  26 0006 0058     		.short	22528
  27              		.global	ETH_SOCKET_RX_BASE
  28              		.align	2
  29              		.type	ETH_SOCKET_RX_BASE, %object
  30              		.size	ETH_SOCKET_RX_BASE, 8
  31              	ETH_SOCKET_RX_BASE:
  32 0008 0060     		.short	24576
  33 000a 0068     		.short	26624
  34 000c 0070     		.short	28672
  35 000e 0078     		.short	30720
  36              		.comm	ETH_SocketConfig,32,4
  37              		.comm	ETH_SubnetMask,4,4
  38              		.comm	ETH_MAC,6,4
  39              		.section	.text.ETH_ChipSelect,"ax",%progbits
  40              		.align	2
  41              		.global	ETH_ChipSelect
  42              		.code	16
  43              		.thumb_func
  44              		.type	ETH_ChipSelect, %function
  45              	ETH_ChipSelect:
  46              	.LFB0:
  47              		.file 1 ".\\Generated_Source\\PSoC4\\ETH.c"
   1:.\Generated_Source\PSoC4/ETH.c **** /**
   2:.\Generated_Source\PSoC4/ETH.c ****  * \addtogroup w5x00
   3:.\Generated_Source\PSoC4/ETH.c ****  * @{
   4:.\Generated_Source\PSoC4/ETH.c ****  */
   5:.\Generated_Source\PSoC4/ETH.c **** 
   6:.\Generated_Source\PSoC4/ETH.c **** /**
   7:.\Generated_Source\PSoC4/ETH.c ****  * \file Driver implementation for interfacing with the W5x00 device
   8:.\Generated_Source\PSoC4/ETH.c ****  * \author Chuck Erhardt (chuck@e2forlife.com)
   9:.\Generated_Source\PSoC4/ETH.c ****  *
  10:.\Generated_Source\PSoC4/ETH.c ****  * This file contains the main driver implementation for control
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 2


  11:.\Generated_Source\PSoC4/ETH.c ****  * of the W5x00 device.
  12:.\Generated_Source\PSoC4/ETH.c **** */
  13:.\Generated_Source\PSoC4/ETH.c **** 
  14:.\Generated_Source\PSoC4/ETH.c **** /*
  15:.\Generated_Source\PSoC4/ETH.c ****  * Change Log:
  16:.\Generated_Source\PSoC4/ETH.c ****  * 
  17:.\Generated_Source\PSoC4/ETH.c ****  * V1.1
  18:.\Generated_Source\PSoC4/ETH.c ****  * - Modified the SPI access function to remove hard wait for READ_WRITE_DELAY  <CE>
  19:.\Generated_Source\PSoC4/ETH.c ****  * - Removed READ_WRITE_DELAY Parameter <CE>
  20:.\Generated_Source\PSoC4/ETH.c ****  * - Added validator to SS_NUM parameter to ensure that the value is the range 0-3 <CE>
  21:.\Generated_Source\PSoC4/ETH.c ****  * - Removed "inline" keywords from interal register access function to promote
  22:.\Generated_Source\PSoC4/ETH.c ****  *   compatibility with Keil PSoC3 compilers that don't support them. <CE>
  23:.\Generated_Source\PSoC4/ETH.c ****  * - Fixed bug in _ProcessRxData() that caused the read pointer not to be updated without
  24:.\Generated_Source\PSoC4/ETH.c ****  *   the lookahead flag being set. <CE>
  25:.\Generated_Source\PSoC4/ETH.c ****  * V1.2
  26:.\Generated_Source\PSoC4/ETH.c ****  * - Added _STS_SPI_IDLE flag to _SpiDone conditions to prevent deadlocking that
  27:.\Generated_Source\PSoC4/ETH.c ****  *   was occuring during the first read or write using the SPI device (SPIM moded) <CE>
  28:.\Generated_Source\PSoC4/ETH.c ****  * - Removed the check for SOCKET_ESTABLISHED at the start of the TcpReceive
  29:.\Generated_Source\PSoC4/ETH.c ****  *   function to allow for reading received socket data after the socket was dropped
  30:.\Generated_Source\PSoC4/ETH.c ****  *   by the remote server.  It was brought to my attention that this occurs when
  31:.\Generated_Source\PSoC4/ETH.c ****  *   operating with client connection to HTTP servers. <CE>
  32:.\Generated_Source\PSoC4/ETH.c ****  * - Added a MAC address parser and MAC to String Converter. <CE>
  33:.\Generated_Source\PSoC4/ETH.c ****  */
  34:.\Generated_Source\PSoC4/ETH.c **** 
  35:.\Generated_Source\PSoC4/ETH.c **** /* Cypress library includes */
  36:.\Generated_Source\PSoC4/ETH.c **** #include <cytypes.h>
  37:.\Generated_Source\PSoC4/ETH.c **** #include <cylib.h>
  38:.\Generated_Source\PSoC4/ETH.c **** 
  39:.\Generated_Source\PSoC4/ETH.c **** /*  include functions and types for the driver */
  40:.\Generated_Source\PSoC4/ETH.c **** #include "ETH.h"
  41:.\Generated_Source\PSoC4/ETH.c **** /* Include register address constants */
  42:.\Generated_Source\PSoC4/ETH.c **** #include "ETH_reg51.h"
  43:.\Generated_Source\PSoC4/ETH.c **** 
  44:.\Generated_Source\PSoC4/ETH.c **** /* include the serial interface functions */
  45:.\Generated_Source\PSoC4/ETH.c **** #include <SPI0.h>
  46:.\Generated_Source\PSoC4/ETH.c **** #include <SSCR.h>
  47:.\Generated_Source\PSoC4/ETH.c **** 
  48:.\Generated_Source\PSoC4/ETH.c **** extern uint8 SPI0_initVar;
  49:.\Generated_Source\PSoC4/ETH.c **** 
  50:.\Generated_Source\PSoC4/ETH.c **** typedef struct
  51:.\Generated_Source\PSoC4/ETH.c **** {
  52:.\Generated_Source\PSoC4/ETH.c **** 	uint8  Protocol;
  53:.\Generated_Source\PSoC4/ETH.c **** 	uint8  SocketFlags;
  54:.\Generated_Source\PSoC4/ETH.c **** 	uint16 SourcePort;
  55:.\Generated_Source\PSoC4/ETH.c **** 	uint8  ServerFlag;
  56:.\Generated_Source\PSoC4/ETH.c **** 	uint8  TxBufferSize;
  57:.\Generated_Source\PSoC4/ETH.c **** 	uint8  RxBufferSize;
  58:.\Generated_Source\PSoC4/ETH.c **** } ETH_SOCKET;
  59:.\Generated_Source\PSoC4/ETH.c **** 
  60:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 1) // W5100 Specific
  61:.\Generated_Source\PSoC4/ETH.c **** const uint16 ETH_SOCKET_TX_BASE[4] = { 0x4000, 0x4800, 0x5000, 0x5800 };
  62:.\Generated_Source\PSoC4/ETH.c **** const uint16 ETH_SOCKET_RX_BASE[4] = { 0x6000, 0x6800, 0x7000, 0x7800 };
  63:.\Generated_Source\PSoC4/ETH.c **** 
  64:.\Generated_Source\PSoC4/ETH.c **** #define ETH_MAX_SOCKET   ( 4 )
  65:.\Generated_Source\PSoC4/ETH.c **** #define ETH_BURST_MAX    ( 1 )
  66:.\Generated_Source\PSoC4/ETH.c **** 
  67:.\Generated_Source\PSoC4/ETH.c **** /**
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 3


  68:.\Generated_Source\PSoC4/ETH.c ****  * \def ETH_SOCKET REG(s,r)
  69:.\Generated_Source\PSoC4/ETH.c ****  * \brief Convert the socket number to a base address within the W5100
  70:.\Generated_Source\PSoC4/ETH.c ****  */
  71:.\Generated_Source\PSoC4/ETH.c **** #define ETH_SOCKET_REG(s,r)           ( (((uint16)s<<8)+0x0400) + r )
  72:.\Generated_Source\PSoC4/ETH.c **** 
  73:.\Generated_Source\PSoC4/ETH.c **** #elif (1 == 2) // W5200 Specific
  74:.\Generated_Source\PSoC4/ETH.c **** 	
  75:.\Generated_Source\PSoC4/ETH.c **** const uint16 ETH_SOCKET_TX_BASE[8] = { 0x8000, 0x8800, 0x9000, 0x9800, 0xA000, 0xA800, 0xB000, 0xB8
  76:.\Generated_Source\PSoC4/ETH.c **** const uint16 ETH_SOCKET_RX_BASE[8] = { 0xC000, 0xC800, 0xD000, 0xD800, 0xE000, 0xE800, 0xF000, 0xF8
  77:.\Generated_Source\PSoC4/ETH.c **** 
  78:.\Generated_Source\PSoC4/ETH.c **** #define ETH_MAX_SOCKET   ( 8 )
  79:.\Generated_Source\PSoC4/ETH.c **** #define ETH_BURST_MAX    ( 0x7FFF )
  80:.\Generated_Source\PSoC4/ETH.c **** 
  81:.\Generated_Source\PSoC4/ETH.c **** /**
  82:.\Generated_Source\PSoC4/ETH.c ****  * \def ETH_SOCKET REG(s,r)
  83:.\Generated_Source\PSoC4/ETH.c ****  * \brief Convert the socket number and register to a base address within the W5200
  84:.\Generated_Source\PSoC4/ETH.c ****  */
  85:.\Generated_Source\PSoC4/ETH.c **** #define ETH_SOCKET_REG(s,r)           ( ((uint16)s<<8) + r )
  86:.\Generated_Source\PSoC4/ETH.c **** 
  87:.\Generated_Source\PSoC4/ETH.c **** #else
  88:.\Generated_Source\PSoC4/ETH.c **** 	#error "W5x00 components other than W5100 and W5200 are not currently supported"
  89:.\Generated_Source\PSoC4/ETH.c **** #endif
  90:.\Generated_Source\PSoC4/ETH.c **** 
  91:.\Generated_Source\PSoC4/ETH.c **** ETH_SOCKET ETH_SocketConfig[ETH_MAX_SOCKET];
  92:.\Generated_Source\PSoC4/ETH.c **** uint32 ETH_SubnetMask;
  93:.\Generated_Source\PSoC4/ETH.c **** 
  94:.\Generated_Source\PSoC4/ETH.c **** uint8 ETH_MAC[6]; /* V1.2: removed = {00-de-ad-be-ef-00}; */
  95:.\Generated_Source\PSoC4/ETH.c **** 
  96:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
  97:.\Generated_Source\PSoC4/ETH.c **** /* V1.2 HEX digit conversion tools for MAC Address parsing */
  98:.\Generated_Source\PSoC4/ETH.c **** #define ETH_ISXDIGIT(x) \
  99:.\Generated_Source\PSoC4/ETH.c **** ( ((x>='0')&&(x<='9'))||((x>='a')&&(x<='f'))||((x>='A')&&(x<='F')) )
 100:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 101:.\Generated_Source\PSoC4/ETH.c **** #define ETH_HEX2BIN(x) \
 102:.\Generated_Source\PSoC4/ETH.c **** ( ((x>='0')&&(x<='9'))? (x-'0') : \
 103:.\Generated_Source\PSoC4/ETH.c ****   ((x>='a')&&(x<='f'))? ((x-'a')+10) : \
 104:.\Generated_Source\PSoC4/ETH.c ****   ((x>='A')&&(x<='F'))? ((x-'A')+10) : 0 )
 105:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 106:.\Generated_Source\PSoC4/ETH.c **** #define ETH_BIN2HEX(x) \
 107:.\Generated_Source\PSoC4/ETH.c **** ( (x>9)? ((x-10)+'A') : (x + '0'))
 108:.\Generated_Source\PSoC4/ETH.c **** /* END V1.2 defines */
 109:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 110:.\Generated_Source\PSoC4/ETH.c **** 
 111:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 112:.\Generated_Source\PSoC4/ETH.c **** /**
 113:.\Generated_Source\PSoC4/ETH.c ****  * \brief Select the active SCB chip select connected to the W51
 114:.\Generated_Source\PSoC4/ETH.c ****  *
 115:.\Generated_Source\PSoC4/ETH.c ****  * this fucntion will set the active SS line within the SCB to select and
 116:.\Generated_Source\PSoC4/ETH.c ****  * communicate with the W5100 device.
 117:.\Generated_Source\PSoC4/ETH.c ****  * \note this functions requires that the device chip select is originating
 118:.\Generated_Source\PSoC4/ETH.c ****  *  from the SPI device.
 119:.\Generated_Source\PSoC4/ETH.c ****  */
 120:.\Generated_Source\PSoC4/ETH.c **** void
 121:.\Generated_Source\PSoC4/ETH.c **** ETH_ChipSelect( void )
 122:.\Generated_Source\PSoC4/ETH.c **** {
  48              		.loc 1 122 0
  49              		.cfi_startproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 4


  50 0000 80B5     		push	{r7, lr}
  51              	.LCFI0:
  52              		.cfi_def_cfa_offset 8
  53              		.cfi_offset 7, -8
  54              		.cfi_offset 14, -4
  55 0002 00AF     		add	r7, sp, #0
  56              	.LCFI1:
  57              		.cfi_def_cfa_register 7
 123:.\Generated_Source\PSoC4/ETH.c **** 	/*
 124:.\Generated_Source\PSoC4/ETH.c **** 	 * User code for setting the chip select enable.  This is called once
 125:.\Generated_Source\PSoC4/ETH.c **** 	 * at the beginning of each tranfer to/from the W5100, so we recommend
 126:.\Generated_Source\PSoC4/ETH.c **** 	 * either doing nothing (SPIM SS straight out), or to switch the demux
 127:.\Generated_Source\PSoC4/ETH.c **** 	 * component to select the correct output for the SS routing.  This
 128:.\Generated_Source\PSoC4/ETH.c **** 	 * should probably not drive a pin directly since there is no return
 129:.\Generated_Source\PSoC4/ETH.c **** 	 * call from the driver that would allow an enable/disable type of
 130:.\Generated_Source\PSoC4/ETH.c **** 	 * implementation for CSN control.
 131:.\Generated_Source\PSoC4/ETH.c **** 	 */
 132:.\Generated_Source\PSoC4/ETH.c **** 	SSCR_Write( ~(1<<0) );
  58              		.loc 1 132 0
  59 0004 FE20     		mov	r0, #254
  60 0006 FFF7FEFF 		bl	SSCR_Write
 133:.\Generated_Source\PSoC4/ETH.c **** 	/* `#START CHIP_SELECT_GENERATION` */
 134:.\Generated_Source\PSoC4/ETH.c **** 
 135:.\Generated_Source\PSoC4/ETH.c **** 	/* `#END` */
 136:.\Generated_Source\PSoC4/ETH.c **** }
  61              		.loc 1 136 0
  62 000a BD46     		mov	sp, r7
  63              		@ sp needed for prologue
  64 000c 80BD     		pop	{r7, pc}
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	ETH_ChipSelect, .-ETH_ChipSelect
  68 000e C046     		.section	.text.ETH_ChipDeSelect,"ax",%progbits
  69              		.align	2
  70              		.global	ETH_ChipDeSelect
  71              		.code	16
  72              		.thumb_func
  73              		.type	ETH_ChipDeSelect, %function
  74              	ETH_ChipDeSelect:
  75              	.LFB1:
 137:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 138:.\Generated_Source\PSoC4/ETH.c **** /**
 139:.\Generated_Source\PSoC4/ETH.c ****  * \brief Called at the end of a transfer to deselect the device
 140:.\Generated_Source\PSoC4/ETH.c ****  *
 141:.\Generated_Source\PSoC4/ETH.c ****  * This function is called by the chip access functions from the core
 142:.\Generated_Source\PSoC4/ETH.c ****  * interface code to de-select the device after the read/write operation
 143:.\Generated_Source\PSoC4/ETH.c ****  * has been completed. This was changed from the "old way" of doing things
 144:.\Generated_Source\PSoC4/ETH.c ****  * using the hardware SS pin because the FIFO will empty too quickly
 145:.\Generated_Source\PSoC4/ETH.c ****  * causing interruptions in the transfer during burst writes at high
 146:.\Generated_Source\PSoC4/ETH.c ****  * speed. This allows bursting without having to have a huge software
 147:.\Generated_Source\PSoC4/ETH.c ****  * FIFO and using DMA to keep the buffer loaded.
 148:.\Generated_Source\PSoC4/ETH.c ****  */
 149:.\Generated_Source\PSoC4/ETH.c **** void
 150:.\Generated_Source\PSoC4/ETH.c **** ETH_ChipDeSelect( void )
 151:.\Generated_Source\PSoC4/ETH.c **** {
  76              		.loc 1 151 0
  77              		.cfi_startproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 5


  78 0000 80B5     		push	{r7, lr}
  79              	.LCFI2:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 00AF     		add	r7, sp, #0
  84              	.LCFI3:
  85              		.cfi_def_cfa_register 7
 152:.\Generated_Source\PSoC4/ETH.c **** 	SSCR_Write(0xFF);
  86              		.loc 1 152 0
  87 0004 FF20     		mov	r0, #255
  88 0006 FFF7FEFF 		bl	SSCR_Write
 153:.\Generated_Source\PSoC4/ETH.c **** }
  89              		.loc 1 153 0
  90 000a BD46     		mov	sp, r7
  91              		@ sp needed for prologue
  92 000c 80BD     		pop	{r7, pc}
  93              		.cfi_endproc
  94              	.LFE1:
  95              		.size	ETH_ChipDeSelect, .-ETH_ChipDeSelect
  96 000e C046     		.section	.text.ETH_ChipWrite,"ax",%progbits
  97              		.align	2
  98              		.global	ETH_ChipWrite
  99              		.code	16
 100              		.thumb_func
 101              		.type	ETH_ChipWrite, %function
 102              	ETH_ChipWrite:
 103              	.LFB2:
 154:.\Generated_Source\PSoC4/ETH.c **** 
 155:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 156:.\Generated_Source\PSoC4/ETH.c **** /* Generic SPI Functions */
 157:.\Generated_Source\PSoC4/ETH.c **** /*
 158:.\Generated_Source\PSoC4/ETH.c ****  * NOTE: when using the SPIM, there must be a buffer length of at least 4
 159:.\Generated_Source\PSoC4/ETH.c ****  * bytes to allow the transfer/receive cycle for each read/write operation
 160:.\Generated_Source\PSoC4/ETH.c ****  * to be contained within the FIFO buffer.
 161:.\Generated_Source\PSoC4/ETH.c ****  */
 162:.\Generated_Source\PSoC4/ETH.c **** #if !defined(CY_SCB_SPI0_H)
 163:.\Generated_Source\PSoC4/ETH.c **** 	/* SPIM Code */
 164:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */	
 165:.\Generated_Source\PSoC4/ETH.c **** /* V1.1 : Macro definition for the SpiDone flag. */
 166:.\Generated_Source\PSoC4/ETH.c **** /*  
 167:.\Generated_Source\PSoC4/ETH.c **** 	V1.2 : Added SPI_IDLE flag to the condition for done to eliminate
 168:.\Generated_Source\PSoC4/ETH.c **** 	deadlocking when IDLE but not done.  This seems to occur during the
 169:.\Generated_Source\PSoC4/ETH.c **** 	initial write/read to/from the SPI port.
 170:.\Generated_Source\PSoC4/ETH.c **** */
 171:.\Generated_Source\PSoC4/ETH.c **** /**
 172:.\Generated_Source\PSoC4/ETH.c ****  * \brief Macro to determine the state of the spi done
 173:.\Generated_Source\PSoC4/ETH.c ****  * This macro reads the status register of the transmitter and masks off the doen bit.
 174:.\Generated_Source\PSoC4/ETH.c ****  */
 175:.\Generated_Source\PSoC4/ETH.c **** #define ETH_SpiDone     (SPI0_ReadTxStatus() & (SPI0_STS_SPI_DONE | SPI0_STS_SPI_IDLE))
 176:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 177:.\Generated_Source\PSoC4/ETH.c **** /**
 178:.\Generated_Source\PSoC4/ETH.c ****  * \brief write Data to the W5100 at the specified address
 179:.\Generated_Source\PSoC4/ETH.c ****  * \param addr Address of register or memory buffer
 180:.\Generated_Source\PSoC4/ETH.c ****  * \param dat Data to write to the device
 181:.\Generated_Source\PSoC4/ETH.c ****  *
 182:.\Generated_Source\PSoC4/ETH.c ****  * This function will send the WRITE opcode, address and data to the W5100
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 6


 183:.\Generated_Source\PSoC4/ETH.c ****  * in order to write the data to the specified register.
 184:.\Generated_Source\PSoC4/ETH.c ****  */
 185:.\Generated_Source\PSoC4/ETH.c **** void 
 186:.\Generated_Source\PSoC4/ETH.c **** ETH_ChipWrite(uint16 addr, uint8 *dat, uint16 length)
 187:.\Generated_Source\PSoC4/ETH.c **** {
 104              		.loc 1 187 0
 105              		.cfi_startproc
 106 0000 90B5     		push	{r4, r7, lr}
 107              	.LCFI4:
 108              		.cfi_def_cfa_offset 12
 109              		.cfi_offset 4, -12
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 85B0     		sub	sp, sp, #20
 113              	.LCFI5:
 114              		.cfi_def_cfa_offset 32
 115 0004 00AF     		add	r7, sp, #0
 116              	.LCFI6:
 117              		.cfi_def_cfa_register 7
 118 0006 3960     		str	r1, [r7]
 119 0008 BB1D     		add	r3, r7, #6
 120 000a 011C     		add	r1, r0, #0
 121 000c 1980     		strh	r1, [r3]
 122 000e 3B1D     		add	r3, r7, #4
 123 0010 1A80     		strh	r2, [r3]
 188:.\Generated_Source\PSoC4/ETH.c **** 	uint16 txLen;
 189:.\Generated_Source\PSoC4/ETH.c **** 	uint16 txCount;
 190:.\Generated_Source\PSoC4/ETH.c **** 	uint16 adr;
 191:.\Generated_Source\PSoC4/ETH.c **** 	uint8 crit;
 192:.\Generated_Source\PSoC4/ETH.c **** 	
 193:.\Generated_Source\PSoC4/ETH.c **** 	/* V1.1: Wait for SPI operation to complete */
 194:.\Generated_Source\PSoC4/ETH.c **** 	while( ETH_SpiDone == 0) {
 124              		.loc 1 194 0
 125 0012 02E0     		b	.L4
 126              	.L5:
 195:.\Generated_Source\PSoC4/ETH.c **** 		CyDelayUs(1);
 127              		.loc 1 195 0
 128 0014 0120     		mov	r0, #1
 129 0016 FFF7FEFF 		bl	CyDelayUs
 130              	.L4:
 194:.\Generated_Source\PSoC4/ETH.c **** 	while( ETH_SpiDone == 0) {
 131              		.loc 1 194 0 discriminator 1
 132 001a FFF7FEFF 		bl	SPI0_ReadTxStatus
 133 001e 031C     		mov	r3, r0
 134 0020 1A1C     		mov	r2, r3
 135 0022 1123     		mov	r3, #17
 136 0024 1340     		and	r3, r2
 137 0026 F5D0     		beq	.L5
 196:.\Generated_Source\PSoC4/ETH.c **** 	}
 197:.\Generated_Source\PSoC4/ETH.c **** 	/* V1.1: End change */
 198:.\Generated_Source\PSoC4/ETH.c **** 	
 199:.\Generated_Source\PSoC4/ETH.c **** 	crit = CyEnterCriticalSection();
 138              		.loc 1 199 0
 139 0028 3C1C     		mov	r4, r7
 140 002a 0934     		add	r4, r4, #9
 141 002c FFF7FEFF 		bl	CyEnterCriticalSection
 142 0030 031C     		mov	r3, r0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 7


 143 0032 2370     		strb	r3, [r4]
 200:.\Generated_Source\PSoC4/ETH.c **** 	
 201:.\Generated_Source\PSoC4/ETH.c **** 	adr = addr;
 144              		.loc 1 201 0
 145 0034 3B1C     		mov	r3, r7
 146 0036 0A33     		add	r3, r3, #10
 147 0038 BA1D     		add	r2, r7, #6
 148 003a 1288     		ldrh	r2, [r2]
 149 003c 1A80     		strh	r2, [r3]
 202:.\Generated_Source\PSoC4/ETH.c **** 	txLen = 0;
 150              		.loc 1 202 0
 151 003e 3B1C     		mov	r3, r7
 152 0040 0E33     		add	r3, r3, #14
 153 0042 0022     		mov	r2, #0
 154 0044 1A80     		strh	r2, [r3]
 203:.\Generated_Source\PSoC4/ETH.c **** 	txCount = 0;
 155              		.loc 1 203 0
 156 0046 3B1C     		mov	r3, r7
 157 0048 0C33     		add	r3, r3, #12
 158 004a 0022     		mov	r2, #0
 159 004c 1A80     		strh	r2, [r3]
 160              	.L10:
 204:.\Generated_Source\PSoC4/ETH.c **** 	do {
 205:.\Generated_Source\PSoC4/ETH.c **** 		/* Using internal device SS generation */
 206:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipSelect();
 161              		.loc 1 206 0
 162 004e FFF7FEFF 		bl	ETH_ChipSelect
 207:.\Generated_Source\PSoC4/ETH.c **** 		/*
 208:.\Generated_Source\PSoC4/ETH.c **** 		 * The first thing to do is to clear the Rx Buffer of any lingering
 209:.\Generated_Source\PSoC4/ETH.c **** 		 * data left from other transfers.  Then send the data per the W5100
 210:.\Generated_Source\PSoC4/ETH.c **** 		 * datasheet p.62
 211:.\Generated_Source\PSoC4/ETH.c **** 		 */
 212:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_ClearRxBuffer();
 163              		.loc 1 212 0
 164 0052 FFF7FEFF 		bl	SPI0_ClearRxBuffer
 213:.\Generated_Source\PSoC4/ETH.c **** 		/* Begin transfer of data to device */
 214:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 1)
 215:.\Generated_Source\PSoC4/ETH.c **** 		/*
 216:.\Generated_Source\PSoC4/ETH.c **** 	     * The W5100 uses an opcode followed by the register/buffer
 217:.\Generated_Source\PSoC4/ETH.c **** 	     * address for each data element transfered.
 218:.\Generated_Source\PSoC4/ETH.c **** 	     */
 219:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData(ETH_WRITE_OP);
 165              		.loc 1 219 0
 166 0056 F020     		mov	r0, #240
 167 0058 FFF7FEFF 		bl	SPI0_WriteTxData
 220:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData((adr>>8)&0x00FF);
 168              		.loc 1 220 0
 169 005c 3B1C     		mov	r3, r7
 170 005e 0A33     		add	r3, r3, #10
 171 0060 1B88     		ldrh	r3, [r3]
 172 0062 1B0A     		lsr	r3, r3, #8
 173 0064 9BB2     		uxth	r3, r3
 174 0066 DBB2     		uxtb	r3, r3
 175 0068 181C     		mov	r0, r3
 176 006a FFF7FEFF 		bl	SPI0_WriteTxData
 221:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData(adr&0x00FF);
 177              		.loc 1 221 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 8


 178 006e 3B1C     		mov	r3, r7
 179 0070 0A33     		add	r3, r3, #10
 180 0072 1B88     		ldrh	r3, [r3]
 181 0074 DBB2     		uxtb	r3, r3
 182 0076 181C     		mov	r0, r3
 183 0078 FFF7FEFF 		bl	SPI0_WriteTxData
 222:.\Generated_Source\PSoC4/ETH.c **** 		txLen = 1;
 184              		.loc 1 222 0
 185 007c 3B1C     		mov	r3, r7
 186 007e 0E33     		add	r3, r3, #14
 187 0080 0122     		mov	r2, #1
 188 0082 1A80     		strh	r2, [r3]
 189              	.L11:
 223:.\Generated_Source\PSoC4/ETH.c **** #elif (1 == 2)
 224:.\Generated_Source\PSoC4/ETH.c **** 	    /*
 225:.\Generated_Source\PSoC4/ETH.c **** 	     * The Header block for the W5200 uses the address, plus
 226:.\Generated_Source\PSoC4/ETH.c **** 	     * a length word which contains a read/write bit.  Setting
 227:.\Generated_Source\PSoC4/ETH.c **** 	     * the bit to a 1 (0x80) will enable write mode
 228:.\Generated_Source\PSoC4/ETH.c **** 	     */
 229:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( (adr>>8) & 0x00FF);
 230:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( adr & 0x00FF );
 231:.\Generated_Source\PSoC4/ETH.c **** 		txLen = (length > ETH_BURST_MAX)? ETH_BURST_MAX : length;
 232:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( 0x80 | ((txLen>>8)&0x007F) );
 233:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( txLen & 0x00FF );
 234:.\Generated_Source\PSoC4/ETH.c **** #endif
 235:.\Generated_Source\PSoC4/ETH.c **** 		/*
 236:.\Generated_Source\PSoC4/ETH.c ****          * send the sequence of bytes to the device following the 
 237:.\Generated_Source\PSoC4/ETH.c ****          * header data transfer.  This will wait for the FIFO to  have
 238:.\Generated_Source\PSoC4/ETH.c ****          * available memory prior to writing the data to the part.
 239:.\Generated_Source\PSoC4/ETH.c ****          * at the end of the block the loop exits and ends the operation
 240:.\Generated_Source\PSoC4/ETH.c ****          * by setting the chip select high.
 241:.\Generated_Source\PSoC4/ETH.c ****          */
 242:.\Generated_Source\PSoC4/ETH.c **** 		// Transmit data block
 243:.\Generated_Source\PSoC4/ETH.c **** 		do {
 244:.\Generated_Source\PSoC4/ETH.c **** 			while ( (SPI0_ReadTxStatus() & SPI0_STS_TX_FIFO_NOT_FULL) == 0);
 190              		.loc 1 244 0
 191 0084 C046     		mov	r8, r8
 192              	.L6:
 193              		.loc 1 244 0 is_stmt 0 discriminator 1
 194 0086 FFF7FEFF 		bl	SPI0_ReadTxStatus
 195 008a 031C     		mov	r3, r0
 196 008c 1A1C     		mov	r2, r3
 197 008e 0423     		mov	r3, #4
 198 0090 1340     		and	r3, r2
 199 0092 F8D0     		beq	.L6
 245:.\Generated_Source\PSoC4/ETH.c **** 			SPI0_WriteTxData(dat[txCount++]);
 200              		.loc 1 245 0 is_stmt 1
 201 0094 3B1C     		mov	r3, r7
 202 0096 0C33     		add	r3, r3, #12
 203 0098 1B88     		ldrh	r3, [r3]
 204 009a 3A68     		ldr	r2, [r7]
 205 009c D318     		add	r3, r2, r3
 206 009e 1B78     		ldrb	r3, [r3]
 207 00a0 3A1C     		mov	r2, r7
 208 00a2 0C32     		add	r2, r2, #12
 209 00a4 391C     		mov	r1, r7
 210 00a6 0C31     		add	r1, r1, #12
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 9


 211 00a8 0988     		ldrh	r1, [r1]
 212 00aa 0131     		add	r1, r1, #1
 213 00ac 1180     		strh	r1, [r2]
 214 00ae 181C     		mov	r0, r3
 215 00b0 FFF7FEFF 		bl	SPI0_WriteTxData
 246:.\Generated_Source\PSoC4/ETH.c **** 			--length;
 216              		.loc 1 246 0
 217 00b4 3B1D     		add	r3, r7, #4
 218 00b6 3A1D     		add	r2, r7, #4
 219 00b8 1288     		ldrh	r2, [r2]
 220 00ba 013A     		sub	r2, r2, #1
 221 00bc 1A80     		strh	r2, [r3]
 247:.\Generated_Source\PSoC4/ETH.c **** 			--txLen;
 222              		.loc 1 247 0
 223 00be 3B1C     		mov	r3, r7
 224 00c0 0E33     		add	r3, r3, #14
 225 00c2 3A1C     		mov	r2, r7
 226 00c4 0E32     		add	r2, r2, #14
 227 00c6 1288     		ldrh	r2, [r2]
 228 00c8 013A     		sub	r2, r2, #1
 229 00ca 1A80     		strh	r2, [r3]
 248:.\Generated_Source\PSoC4/ETH.c **** 			++adr;
 230              		.loc 1 248 0
 231 00cc 3B1C     		mov	r3, r7
 232 00ce 0A33     		add	r3, r3, #10
 233 00d0 3A1C     		mov	r2, r7
 234 00d2 0A32     		add	r2, r2, #10
 235 00d4 1288     		ldrh	r2, [r2]
 236 00d6 0132     		add	r2, r2, #1
 237 00d8 1A80     		strh	r2, [r3]
 249:.\Generated_Source\PSoC4/ETH.c **** 		} while ( txLen > 0 );
 238              		.loc 1 249 0
 239 00da 3B1C     		mov	r3, r7
 240 00dc 0E33     		add	r3, r3, #14
 241 00de 1B88     		ldrh	r3, [r3]
 242 00e0 002B     		cmp	r3, #0
 243 00e2 CFD1     		bne	.L11
 250:.\Generated_Source\PSoC4/ETH.c **** 
 251:.\Generated_Source\PSoC4/ETH.c **** 		while( ETH_SpiDone == 0) {
 244              		.loc 1 251 0
 245 00e4 02E0     		b	.L8
 246              	.L9:
 252:.\Generated_Source\PSoC4/ETH.c **** 			CyDelayUs(1);
 247              		.loc 1 252 0
 248 00e6 0120     		mov	r0, #1
 249 00e8 FFF7FEFF 		bl	CyDelayUs
 250              	.L8:
 251:.\Generated_Source\PSoC4/ETH.c **** 		while( ETH_SpiDone == 0) {
 251              		.loc 1 251 0 discriminator 1
 252 00ec FFF7FEFF 		bl	SPI0_ReadTxStatus
 253 00f0 031C     		mov	r3, r0
 254 00f2 1A1C     		mov	r2, r3
 255 00f4 1123     		mov	r3, #17
 256 00f6 1340     		and	r3, r2
 257 00f8 F5D0     		beq	.L9
 253:.\Generated_Source\PSoC4/ETH.c **** 		}
 254:.\Generated_Source\PSoC4/ETH.c **** 		// End operation
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 10


 255:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipDeSelect();
 258              		.loc 1 255 0
 259 00fa FFF7FEFF 		bl	ETH_ChipDeSelect
 256:.\Generated_Source\PSoC4/ETH.c **** 	} while (length > 0);
 260              		.loc 1 256 0
 261 00fe 3B1D     		add	r3, r7, #4
 262 0100 1B88     		ldrh	r3, [r3]
 263 0102 002B     		cmp	r3, #0
 264 0104 A3D1     		bne	.L10
 257:.\Generated_Source\PSoC4/ETH.c **** 	
 258:.\Generated_Source\PSoC4/ETH.c **** 	CyExitCriticalSection( crit );
 265              		.loc 1 258 0
 266 0106 3B1C     		mov	r3, r7
 267 0108 0933     		add	r3, r3, #9
 268 010a 1B78     		ldrb	r3, [r3]
 269 010c 181C     		mov	r0, r3
 270 010e FFF7FEFF 		bl	CyExitCriticalSection
 259:.\Generated_Source\PSoC4/ETH.c **** }
 271              		.loc 1 259 0
 272 0112 BD46     		mov	sp, r7
 273 0114 05B0     		add	sp, sp, #20
 274              		@ sp needed for prologue
 275 0116 90BD     		pop	{r4, r7, pc}
 276              		.cfi_endproc
 277              	.LFE2:
 278              		.size	ETH_ChipWrite, .-ETH_ChipWrite
 279              		.section	.text.ETH_ChipRead,"ax",%progbits
 280              		.align	2
 281              		.global	ETH_ChipRead
 282              		.code	16
 283              		.thumb_func
 284              		.type	ETH_ChipRead, %function
 285              	ETH_ChipRead:
 286              	.LFB3:
 260:.\Generated_Source\PSoC4/ETH.c **** 
 261:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 262:.\Generated_Source\PSoC4/ETH.c **** /**
 263:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read data from the W5100 at the spsecified address
 264:.\Generated_Source\PSoC4/ETH.c ****  * \param addr Address from which to read
 265:.\Generated_Source\PSoC4/ETH.c ****  * \returns the data read from the address
 266:.\Generated_Source\PSoC4/ETH.c ****  *
 267:.\Generated_Source\PSoC4/ETH.c ****  * this fucntion will access a W5100 memory location and read the contents
 268:.\Generated_Source\PSoC4/ETH.c ****  * using the serial protocol specified on P.61 of the datasheet.
 269:.\Generated_Source\PSoC4/ETH.c ****  */
 270:.\Generated_Source\PSoC4/ETH.c **** void
 271:.\Generated_Source\PSoC4/ETH.c **** ETH_ChipRead(uint16 addr, uint8 *dat, uint16 length)
 272:.\Generated_Source\PSoC4/ETH.c **** {
 287              		.loc 1 272 0
 288              		.cfi_startproc
 289 0000 90B5     		push	{r4, r7, lr}
 290              	.LCFI7:
 291              		.cfi_def_cfa_offset 12
 292              		.cfi_offset 4, -12
 293              		.cfi_offset 7, -8
 294              		.cfi_offset 14, -4
 295 0002 87B0     		sub	sp, sp, #28
 296              	.LCFI8:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 11


 297              		.cfi_def_cfa_offset 40
 298 0004 00AF     		add	r7, sp, #0
 299              	.LCFI9:
 300              		.cfi_def_cfa_register 7
 301 0006 3960     		str	r1, [r7]
 302 0008 BB1D     		add	r3, r7, #6
 303 000a 011C     		add	r1, r0, #0
 304 000c 1980     		strh	r1, [r3]
 305 000e 3B1D     		add	r3, r7, #4
 306 0010 1A80     		strh	r2, [r3]
 273:.\Generated_Source\PSoC4/ETH.c **** 	uint16 rxIndex;
 274:.\Generated_Source\PSoC4/ETH.c **** 	uint16 address;
 275:.\Generated_Source\PSoC4/ETH.c **** 	uint16 rxLen;
 276:.\Generated_Source\PSoC4/ETH.c **** 	uint16 txBytes;
 277:.\Generated_Source\PSoC4/ETH.c **** 	uint8 dump; // the number of bytes to ignore from the data stream readback
 278:.\Generated_Source\PSoC4/ETH.c **** 	uint16 rxCount;
 279:.\Generated_Source\PSoC4/ETH.c **** 	uint8 rxb;
 280:.\Generated_Source\PSoC4/ETH.c **** 	
 281:.\Generated_Source\PSoC4/ETH.c **** 	/* V1.1: Wait for SPI operation to complete */
 282:.\Generated_Source\PSoC4/ETH.c **** 	while( ETH_SpiDone == 0) {
 307              		.loc 1 282 0
 308 0012 02E0     		b	.L13
 309              	.L14:
 283:.\Generated_Source\PSoC4/ETH.c **** 		CyDelayUs(1);
 310              		.loc 1 283 0
 311 0014 0120     		mov	r0, #1
 312 0016 FFF7FEFF 		bl	CyDelayUs
 313              	.L13:
 282:.\Generated_Source\PSoC4/ETH.c **** 	while( ETH_SpiDone == 0) {
 314              		.loc 1 282 0 discriminator 1
 315 001a FFF7FEFF 		bl	SPI0_ReadTxStatus
 316 001e 031C     		mov	r3, r0
 317 0020 1A1C     		mov	r2, r3
 318 0022 1123     		mov	r3, #17
 319 0024 1340     		and	r3, r2
 320 0026 F5D0     		beq	.L14
 284:.\Generated_Source\PSoC4/ETH.c **** 	}
 285:.\Generated_Source\PSoC4/ETH.c **** 	/* V1.1: End change */
 286:.\Generated_Source\PSoC4/ETH.c **** 
 287:.\Generated_Source\PSoC4/ETH.c **** 	address = addr; // assign base pointer address
 321              		.loc 1 287 0
 322 0028 3B1C     		mov	r3, r7
 323 002a 1433     		add	r3, r3, #20
 324 002c BA1D     		add	r2, r7, #6
 325 002e 1288     		ldrh	r2, [r2]
 326 0030 1A80     		strh	r2, [r3]
 288:.\Generated_Source\PSoC4/ETH.c **** 	rxIndex = 0;    // default the starting index for the receive to zero
 327              		.loc 1 288 0
 328 0032 3B1C     		mov	r3, r7
 329 0034 1633     		add	r3, r3, #22
 330 0036 0022     		mov	r2, #0
 331 0038 1A80     		strh	r2, [r3]
 332              	.L19:
 289:.\Generated_Source\PSoC4/ETH.c **** 	
 290:.\Generated_Source\PSoC4/ETH.c **** 	do {
 291:.\Generated_Source\PSoC4/ETH.c **** 		/* Write the chip select instance to select the device */
 292:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipSelect();
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 12


 333              		.loc 1 292 0
 334 003a FFF7FEFF 		bl	ETH_ChipSelect
 293:.\Generated_Source\PSoC4/ETH.c **** 		/*
 294:.\Generated_Source\PSoC4/ETH.c **** 		 * First, clear the Rx Buffer of any waiting data.  Then begin the
 295:.\Generated_Source\PSoC4/ETH.c **** 		 * read operation by sending the op code, followed byte the address
 296:.\Generated_Source\PSoC4/ETH.c **** 		 * from which the read will be executed, then send a dummy byte
 297:.\Generated_Source\PSoC4/ETH.c **** 		 * of zeros to read the data from the device.
 298:.\Generated_Source\PSoC4/ETH.c **** 		 */
 299:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_ClearRxBuffer();
 335              		.loc 1 299 0
 336 003e FFF7FEFF 		bl	SPI0_ClearRxBuffer
 300:.\Generated_Source\PSoC4/ETH.c **** 		/* Send the device header */
 301:.\Generated_Source\PSoC4/ETH.c **** 		rxCount = 0; // initialize the bytes received to none
 337              		.loc 1 301 0
 338 0042 3B1C     		mov	r3, r7
 339 0044 0E33     		add	r3, r3, #14
 340 0046 0022     		mov	r2, #0
 341 0048 1A80     		strh	r2, [r3]
 302:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 1 )
 303:.\Generated_Source\PSoC4/ETH.c **** 		/*
 304:.\Generated_Source\PSoC4/ETH.c **** 		 * W1100 interface code
 305:.\Generated_Source\PSoC4/ETH.c **** 		 * --------------------
 306:.\Generated_Source\PSoC4/ETH.c **** 		 * The W5100 only supports 1 byte transfers (no burst mode), so
 307:.\Generated_Source\PSoC4/ETH.c **** 		 * peg the receive length as 1 byte, and issue a number of commands
 308:.\Generated_Source\PSoC4/ETH.c **** 		 * in sequence to simulate a burst read.
 309:.\Generated_Source\PSoC4/ETH.c **** 		 */
 310:.\Generated_Source\PSoC4/ETH.c **** 		rxLen = 1;  // The W5100 is limited to 1 byte of data transmitted
 342              		.loc 1 310 0
 343 004a 3B1C     		mov	r3, r7
 344 004c 0C33     		add	r3, r3, #12
 345 004e 0122     		mov	r2, #1
 346 0050 1A80     		strh	r2, [r3]
 311:.\Generated_Source\PSoC4/ETH.c **** 		dump = 3;   // The W5100 has a 3-byte packet header
 347              		.loc 1 311 0
 348 0052 3B1C     		mov	r3, r7
 349 0054 1133     		add	r3, r3, #17
 350 0056 0322     		mov	r2, #3
 351 0058 1A70     		strb	r2, [r3]
 312:.\Generated_Source\PSoC4/ETH.c **** 		txBytes = 0; // Send only one byte afte rthe header then end the transfer
 352              		.loc 1 312 0
 353 005a 3B1C     		mov	r3, r7
 354 005c 1233     		add	r3, r3, #18
 355 005e 0022     		mov	r2, #0
 356 0060 1A80     		strh	r2, [r3]
 313:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData(ETH_READ_OP);
 357              		.loc 1 313 0
 358 0062 0F20     		mov	r0, #15
 359 0064 FFF7FEFF 		bl	SPI0_WriteTxData
 314:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData(address>>8);
 360              		.loc 1 314 0
 361 0068 3B1C     		mov	r3, r7
 362 006a 1433     		add	r3, r3, #20
 363 006c 1B88     		ldrh	r3, [r3]
 364 006e 1B0A     		lsr	r3, r3, #8
 365 0070 9BB2     		uxth	r3, r3
 366 0072 DBB2     		uxtb	r3, r3
 367 0074 181C     		mov	r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 13


 368 0076 FFF7FEFF 		bl	SPI0_WriteTxData
 315:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData(address&0x00FF);
 369              		.loc 1 315 0
 370 007a 3B1C     		mov	r3, r7
 371 007c 1433     		add	r3, r3, #20
 372 007e 1B88     		ldrh	r3, [r3]
 373 0080 DBB2     		uxtb	r3, r3
 374 0082 181C     		mov	r0, r3
 375 0084 FFF7FEFF 		bl	SPI0_WriteTxData
 316:.\Generated_Source\PSoC4/ETH.c **** 		
 317:.\Generated_Source\PSoC4/ETH.c **** #elif (1 == 2)
 318:.\Generated_Source\PSoC4/ETH.c **** 		/*
 319:.\Generated_Source\PSoC4/ETH.c **** 		 * W5200 Interface Header
 320:.\Generated_Source\PSoC4/ETH.c **** 		 * ----------------------
 321:.\Generated_Source\PSoC4/ETH.c **** 		 * The W5200 protocol expects an address followed by a read
 322:.\Generated_Source\PSoC4/ETH.c **** 		 * byte count for the header of the protocol, so, this will
 323:.\Generated_Source\PSoC4/ETH.c **** 		 * issue reads up to the max burst length
 324:.\Generated_Source\PSoC4/ETH.c **** 		 */
 325:.\Generated_Source\PSoC4/ETH.c **** 		dump = 4; /*  The W5200 has a definded data length and a header of 4 bytes */
 326:.\Generated_Source\PSoC4/ETH.c **** 		rxLen = (length < ETH_BURST_MAX) ? length : ETH_BURST_MAX;
 327:.\Generated_Source\PSoC4/ETH.c **** 		/* 
 328:.\Generated_Source\PSoC4/ETH.c **** 		 * Set the number of bytes to transmit before
 329:.\Generated_Source\PSoC4/ETH.c **** 		 * ending the packet to the calculated value
 330:.\Generated_Source\PSoC4/ETH.c **** 		 */
 331:.\Generated_Source\PSoC4/ETH.c **** 		txBytes = 0; 
 332:.\Generated_Source\PSoC4/ETH.c **** 		/* Send the packet header */
 333:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( address>>8);
 334:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( address & 0x00FF );
 335:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( 0x7F & (rxLen>>8) );
 336:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( rxLen&0x00FF );
 337:.\Generated_Source\PSoC4/ETH.c **** #endif
 338:.\Generated_Source\PSoC4/ETH.c **** 
 339:.\Generated_Source\PSoC4/ETH.c **** 		while (rxCount < rxLen) {
 376              		.loc 1 339 0
 377 0088 59E0     		b	.L15
 378              	.L18:
 340:.\Generated_Source\PSoC4/ETH.c **** 			/*
 341:.\Generated_Source\PSoC4/ETH.c **** 			 * Since the header is clogging the buffer (and it is inefficient
 342:.\Generated_Source\PSoC4/ETH.c **** 			 * to just clear the header before executing the reads), this loop
 343:.\Generated_Source\PSoC4/ETH.c **** 			 * will transmit the data completely the header size before
 344:.\Generated_Source\PSoC4/ETH.c **** 			 * the data has been read, so, send the data when the rxLength
 345:.\Generated_Source\PSoC4/ETH.c **** 			 * is not zero.
 346:.\Generated_Source\PSoC4/ETH.c **** 			 */
 347:.\Generated_Source\PSoC4/ETH.c **** 			if (txBytes < rxLen ) {
 379              		.loc 1 347 0
 380 008a 3A1C     		mov	r2, r7
 381 008c 1232     		add	r2, r2, #18
 382 008e 3B1C     		mov	r3, r7
 383 0090 0C33     		add	r3, r3, #12
 384 0092 1288     		ldrh	r2, [r2]
 385 0094 1B88     		ldrh	r3, [r3]
 386 0096 9A42     		cmp	r2, r3
 387 0098 15D2     		bcs	.L16
 348:.\Generated_Source\PSoC4/ETH.c **** 				SPI0_WriteTxData( 0 );
 388              		.loc 1 348 0
 389 009a 0020     		mov	r0, #0
 390 009c FFF7FEFF 		bl	SPI0_WriteTxData
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 14


 349:.\Generated_Source\PSoC4/ETH.c **** 				address ++;
 391              		.loc 1 349 0
 392 00a0 3B1C     		mov	r3, r7
 393 00a2 1433     		add	r3, r3, #20
 394 00a4 3A1C     		mov	r2, r7
 395 00a6 1432     		add	r2, r2, #20
 396 00a8 1288     		ldrh	r2, [r2]
 397 00aa 0132     		add	r2, r2, #1
 398 00ac 1A80     		strh	r2, [r3]
 350:.\Generated_Source\PSoC4/ETH.c **** 				length --;
 399              		.loc 1 350 0
 400 00ae 3B1D     		add	r3, r7, #4
 401 00b0 3A1D     		add	r2, r7, #4
 402 00b2 1288     		ldrh	r2, [r2]
 403 00b4 013A     		sub	r2, r2, #1
 404 00b6 1A80     		strh	r2, [r3]
 351:.\Generated_Source\PSoC4/ETH.c **** 				txBytes ++;
 405              		.loc 1 351 0
 406 00b8 3B1C     		mov	r3, r7
 407 00ba 1233     		add	r3, r3, #18
 408 00bc 3A1C     		mov	r2, r7
 409 00be 1232     		add	r2, r2, #18
 410 00c0 1288     		ldrh	r2, [r2]
 411 00c2 0132     		add	r2, r2, #1
 412 00c4 1A80     		strh	r2, [r3]
 413              	.L16:
 352:.\Generated_Source\PSoC4/ETH.c **** 			}
 353:.\Generated_Source\PSoC4/ETH.c **** //			else {
 354:.\Generated_Source\PSoC4/ETH.c **** //				if (ETH_SpiDone != 0) {
 355:.\Generated_Source\PSoC4/ETH.c **** //					ETH_ChipDeSelect();
 356:.\Generated_Source\PSoC4/ETH.c **** //				}
 357:.\Generated_Source\PSoC4/ETH.c **** //			}
 358:.\Generated_Source\PSoC4/ETH.c **** 			/*
 359:.\Generated_Source\PSoC4/ETH.c **** 			 * Read the data from the buffer.  The header data responses
 360:.\Generated_Source\PSoC4/ETH.c **** 			 * are going to be sitting in the buffer, so dump them
 361:.\Generated_Source\PSoC4/ETH.c **** 			 * and just receive the data bock
 362:.\Generated_Source\PSoC4/ETH.c **** 			 */
 363:.\Generated_Source\PSoC4/ETH.c **** 			rxb = SPI0_ReadRxData();
 414              		.loc 1 363 0
 415 00c6 3C1C     		mov	r4, r7
 416 00c8 0B34     		add	r4, r4, #11
 417 00ca FFF7FEFF 		bl	SPI0_ReadRxData
 418 00ce 031C     		mov	r3, r0
 419 00d0 2370     		strb	r3, [r4]
 364:.\Generated_Source\PSoC4/ETH.c **** 			dat[rxIndex] = rxb;
 420              		.loc 1 364 0
 421 00d2 3B1C     		mov	r3, r7
 422 00d4 1633     		add	r3, r3, #22
 423 00d6 1B88     		ldrh	r3, [r3]
 424 00d8 3A68     		ldr	r2, [r7]
 425 00da D318     		add	r3, r2, r3
 426 00dc 3A1C     		mov	r2, r7
 427 00de 0B32     		add	r2, r2, #11
 428 00e0 1278     		ldrb	r2, [r2]
 429 00e2 1A70     		strb	r2, [r3]
 365:.\Generated_Source\PSoC4/ETH.c **** 			if (dump > 0) {
 430              		.loc 1 365 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 15


 431 00e4 3B1C     		mov	r3, r7
 432 00e6 1133     		add	r3, r3, #17
 433 00e8 1B78     		ldrb	r3, [r3]
 434 00ea 002B     		cmp	r3, #0
 435 00ec 13D0     		beq	.L17
 366:.\Generated_Source\PSoC4/ETH.c **** 				--dump;
 436              		.loc 1 366 0
 437 00ee 3B1C     		mov	r3, r7
 438 00f0 1133     		add	r3, r3, #17
 439 00f2 3A1C     		mov	r2, r7
 440 00f4 1132     		add	r2, r2, #17
 441 00f6 1278     		ldrb	r2, [r2]
 442 00f8 013A     		sub	r2, r2, #1
 443 00fa 1A70     		strb	r2, [r3]
 444 00fc 3B1C     		mov	r3, r7
 445 00fe 1633     		add	r3, r3, #22
 446 0100 3A1C     		mov	r2, r7
 447 0102 1632     		add	r2, r2, #22
 448 0104 1288     		ldrh	r2, [r2]
 449 0106 1A80     		strh	r2, [r3]
 450 0108 3B1C     		mov	r3, r7
 451 010a 0E33     		add	r3, r3, #14
 452 010c 3A1C     		mov	r2, r7
 453 010e 0E32     		add	r2, r2, #14
 454 0110 1288     		ldrh	r2, [r2]
 455 0112 1A80     		strh	r2, [r3]
 456 0114 13E0     		b	.L15
 457              	.L17:
 367:.\Generated_Source\PSoC4/ETH.c **** 			}
 368:.\Generated_Source\PSoC4/ETH.c **** 			else {
 369:.\Generated_Source\PSoC4/ETH.c **** 				rxCount++;
 458              		.loc 1 369 0
 459 0116 3B1C     		mov	r3, r7
 460 0118 0E33     		add	r3, r3, #14
 461 011a 3A1C     		mov	r2, r7
 462 011c 0E32     		add	r2, r2, #14
 463 011e 1288     		ldrh	r2, [r2]
 464 0120 0132     		add	r2, r2, #1
 465 0122 1A80     		strh	r2, [r3]
 370:.\Generated_Source\PSoC4/ETH.c **** 				rxIndex++;;
 466              		.loc 1 370 0
 467 0124 3B1C     		mov	r3, r7
 468 0126 1633     		add	r3, r3, #22
 469 0128 3A1C     		mov	r2, r7
 470 012a 1632     		add	r2, r2, #22
 471 012c 1288     		ldrh	r2, [r2]
 472 012e 0132     		add	r2, r2, #1
 473 0130 1A80     		strh	r2, [r3]
 474 0132 3B1C     		mov	r3, r7
 475 0134 1133     		add	r3, r3, #17
 476 0136 3A1C     		mov	r2, r7
 477 0138 1132     		add	r2, r2, #17
 478 013a 1278     		ldrb	r2, [r2]
 479 013c 1A70     		strb	r2, [r3]
 480              	.L15:
 339:.\Generated_Source\PSoC4/ETH.c **** 		while (rxCount < rxLen) {
 481              		.loc 1 339 0 discriminator 1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 16


 482 013e 3A1C     		mov	r2, r7
 483 0140 0E32     		add	r2, r2, #14
 484 0142 3B1C     		mov	r3, r7
 485 0144 0C33     		add	r3, r3, #12
 486 0146 1288     		ldrh	r2, [r2]
 487 0148 1B88     		ldrh	r3, [r3]
 488 014a 9A42     		cmp	r2, r3
 489 014c 9DD3     		bcc	.L18
 371:.\Generated_Source\PSoC4/ETH.c **** 			}
 372:.\Generated_Source\PSoC4/ETH.c **** 		}
 373:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipDeSelect();
 490              		.loc 1 373 0
 491 014e FFF7FEFF 		bl	ETH_ChipDeSelect
 374:.\Generated_Source\PSoC4/ETH.c **** 	}
 375:.\Generated_Source\PSoC4/ETH.c **** 	while ( length > 0);
 492              		.loc 1 375 0
 493 0152 3B1D     		add	r3, r7, #4
 494 0154 1B88     		ldrh	r3, [r3]
 495 0156 002B     		cmp	r3, #0
 496 0158 00D0     		beq	.LCB400
 497 015a 6EE7     		b	.L19	@long jump
 498              	.LCB400:
 376:.\Generated_Source\PSoC4/ETH.c **** 	/* Turn off chip select, and set the buffer */
 377:.\Generated_Source\PSoC4/ETH.c **** //	ETH_ChipDeSelect();
 378:.\Generated_Source\PSoC4/ETH.c **** }
 499              		.loc 1 378 0
 500 015c BD46     		mov	sp, r7
 501 015e 07B0     		add	sp, sp, #28
 502              		@ sp needed for prologue
 503 0160 90BD     		pop	{r4, r7, pc}
 504              		.cfi_endproc
 505              	.LFE3:
 506              		.size	ETH_ChipRead, .-ETH_ChipRead
 507 0162 C046     		.section	.text.ETH_ChipWrite16,"ax",%progbits
 508              		.align	2
 509              		.global	ETH_ChipWrite16
 510              		.code	16
 511              		.thumb_func
 512              		.type	ETH_ChipWrite16, %function
 513              	ETH_ChipWrite16:
 514              	.LFB4:
 379:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 380:.\Generated_Source\PSoC4/ETH.c **** /* SCB Specific Functions */
 381:.\Generated_Source\PSoC4/ETH.c **** #else
 382:.\Generated_Source\PSoC4/ETH.c **** /* include SPI function header for the SCB */
 383:.\Generated_Source\PSoC4/ETH.c **** #include <SPI0_SPI_UART.h>
 384:.\Generated_Source\PSoC4/ETH.c **** 
 385:.\Generated_Source\PSoC4/ETH.c **** /* V1.1 : Include the header for the select pin used. */
 386:.\Generated_Source\PSoC4/ETH.c **** #define ETH_SpiDone    ((SPI0_SpiUartGetTxBufferSize()==0)?1:0)
 387:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 388:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 389:.\Generated_Source\PSoC4/ETH.c **** /**
 390:.\Generated_Source\PSoC4/ETH.c ****  * \brief write Data to the W5100 at the specified address
 391:.\Generated_Source\PSoC4/ETH.c ****  * \param addr Address of register or memory buffer
 392:.\Generated_Source\PSoC4/ETH.c ****  * \param dat Data to write to the device
 393:.\Generated_Source\PSoC4/ETH.c ****  *
 394:.\Generated_Source\PSoC4/ETH.c ****  * This function will send the WRITE opcode, address and data to the W5100
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 17


 395:.\Generated_Source\PSoC4/ETH.c ****  * in order to write the data to the specified register.
 396:.\Generated_Source\PSoC4/ETH.c ****  */
 397:.\Generated_Source\PSoC4/ETH.c **** void
 398:.\Generated_Source\PSoC4/ETH.c **** ETH_ChipWrite(uint16 addr, uint8 *dat, uint16 length)
 399:.\Generated_Source\PSoC4/ETH.c **** {
 400:.\Generated_Source\PSoC4/ETH.c **** 	/* TBD */
 401:.\Generated_Source\PSoC4/ETH.c **** }
 402:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 403:.\Generated_Source\PSoC4/ETH.c **** /**
 404:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read data from the W5100 at the spsecified address
 405:.\Generated_Source\PSoC4/ETH.c ****  * \param addr Address from which to read
 406:.\Generated_Source\PSoC4/ETH.c ****  * \returns the data read from the address
 407:.\Generated_Source\PSoC4/ETH.c ****  *
 408:.\Generated_Source\PSoC4/ETH.c ****  * this fucntion will access a W5100 memory location and read the contents
 409:.\Generated_Source\PSoC4/ETH.c ****  * using the serial protocol specified on P.61 of the datasheet.
 410:.\Generated_Source\PSoC4/ETH.c ****  */
 411:.\Generated_Source\PSoC4/ETH.c **** void
 412:.\Generated_Source\PSoC4/ETH.c **** ETH_ChipRead(uint16 addr, uint8 *dat, uint16 length)
 413:.\Generated_Source\PSoC4/ETH.c **** {
 414:.\Generated_Source\PSoC4/ETH.c **** 	/* TBD */
 415:.\Generated_Source\PSoC4/ETH.c **** }
 416:.\Generated_Source\PSoC4/ETH.c **** 
 417:.\Generated_Source\PSoC4/ETH.c **** #endif
 418:.\Generated_Source\PSoC4/ETH.c **** 
 419:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 420:.\Generated_Source\PSoC4/ETH.c **** /* W5x00 Access Primitaves */
 421:.\Generated_Source\PSoC4/ETH.c **** #if (1)
 422:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 423:.\Generated_Source\PSoC4/ETH.c **** /**
 424:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a 16-bit word to the device
 425:.\Generated_Source\PSoC4/ETH.c ****  * \param addr the starting address to which the data will be written
 426:.\Generated_Source\PSoC4/ETH.c ****  * \param val the 16-bit value to write
 427:.\Generated_Source\PSoC4/ETH.c ****  */
 428:.\Generated_Source\PSoC4/ETH.c **** void ETH_ChipWrite16( uint16 addr, uint16 val )
 429:.\Generated_Source\PSoC4/ETH.c **** {
 515              		.loc 1 429 0
 516              		.cfi_startproc
 517 0000 80B5     		push	{r7, lr}
 518              	.LCFI10:
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 84B0     		sub	sp, sp, #16
 523              	.LCFI11:
 524              		.cfi_def_cfa_offset 24
 525 0004 00AF     		add	r7, sp, #0
 526              	.LCFI12:
 527              		.cfi_def_cfa_register 7
 528 0006 0A1C     		mov	r2, r1
 529 0008 BB1D     		add	r3, r7, #6
 530 000a 011C     		add	r1, r0, #0
 531 000c 1980     		strh	r1, [r3]
 532 000e 3B1D     		add	r3, r7, #4
 533 0010 1A80     		strh	r2, [r3]
 430:.\Generated_Source\PSoC4/ETH.c **** 	uint16 bigVal;
 431:.\Generated_Source\PSoC4/ETH.c **** 	
 432:.\Generated_Source\PSoC4/ETH.c **** #if !( CY_PSOC3 ) 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 18


 433:.\Generated_Source\PSoC4/ETH.c **** 	bigVal = CYSWAP_ENDIAN16( val );
 534              		.loc 1 433 0
 535 0012 3B1D     		add	r3, r7, #4
 536 0014 1B88     		ldrh	r3, [r3]
 537 0016 1B02     		lsl	r3, r3, #8
 538 0018 9AB2     		uxth	r2, r3
 539 001a 3B1D     		add	r3, r7, #4
 540 001c 1B88     		ldrh	r3, [r3]
 541 001e 1B0A     		lsr	r3, r3, #8
 542 0020 9BB2     		uxth	r3, r3
 543 0022 9BB2     		uxth	r3, r3
 544 0024 1343     		orr	r3, r2
 545 0026 9BB2     		uxth	r3, r3
 546 0028 9AB2     		uxth	r2, r3
 547 002a 3B1C     		mov	r3, r7
 548 002c 0E33     		add	r3, r3, #14
 549 002e 1A80     		strh	r2, [r3]
 434:.\Generated_Source\PSoC4/ETH.c **** #else
 435:.\Generated_Source\PSoC4/ETH.c **** 	bigValu = val;
 436:.\Generated_Source\PSoC4/ETH.c **** #endif
 437:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite( addr, (uint8*)&bigVal, 2 );
 550              		.loc 1 437 0
 551 0030 BB1D     		add	r3, r7, #6
 552 0032 1A88     		ldrh	r2, [r3]
 553 0034 3B1C     		mov	r3, r7
 554 0036 0E33     		add	r3, r3, #14
 555 0038 101C     		mov	r0, r2
 556 003a 191C     		mov	r1, r3
 557 003c 0222     		mov	r2, #2
 558 003e FFF7FEFF 		bl	ETH_ChipWrite
 438:.\Generated_Source\PSoC4/ETH.c **** }
 559              		.loc 1 438 0
 560 0042 BD46     		mov	sp, r7
 561 0044 04B0     		add	sp, sp, #16
 562              		@ sp needed for prologue
 563 0046 80BD     		pop	{r7, pc}
 564              		.cfi_endproc
 565              	.LFE4:
 566              		.size	ETH_ChipWrite16, .-ETH_ChipWrite16
 567              		.section	.text.ETH_ChipRead16,"ax",%progbits
 568              		.align	2
 569              		.global	ETH_ChipRead16
 570              		.code	16
 571              		.thumb_func
 572              		.type	ETH_ChipRead16, %function
 573              	ETH_ChipRead16:
 574              	.LFB5:
 439:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 440:.\Generated_Source\PSoC4/ETH.c **** /**
 441:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a 16-bit value from the device
 442:.\Generated_Source\PSoC4/ETH.c ****  * \param addr The starting address from which data will be read
 443:.\Generated_Source\PSoC4/ETH.c ****  * \returns the 16-bit value read from the memory.
 444:.\Generated_Source\PSoC4/ETH.c ****  */
 445:.\Generated_Source\PSoC4/ETH.c **** uint16 ETH_ChipRead16( uint16 addr )
 446:.\Generated_Source\PSoC4/ETH.c **** {
 575              		.loc 1 446 0
 576              		.cfi_startproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 19


 577 0000 80B5     		push	{r7, lr}
 578              	.LCFI13:
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 7, -8
 581              		.cfi_offset 14, -4
 582 0002 84B0     		sub	sp, sp, #16
 583              	.LCFI14:
 584              		.cfi_def_cfa_offset 24
 585 0004 00AF     		add	r7, sp, #0
 586              	.LCFI15:
 587              		.cfi_def_cfa_register 7
 588 0006 021C     		mov	r2, r0
 589 0008 BB1D     		add	r3, r7, #6
 590 000a 1A80     		strh	r2, [r3]
 447:.\Generated_Source\PSoC4/ETH.c **** 	uint16 val;
 448:.\Generated_Source\PSoC4/ETH.c **** 	
 449:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead(addr, (uint8*)&val, 2);
 591              		.loc 1 449 0
 592 000c BB1D     		add	r3, r7, #6
 593 000e 1A88     		ldrh	r2, [r3]
 594 0010 3B1C     		mov	r3, r7
 595 0012 0E33     		add	r3, r3, #14
 596 0014 101C     		mov	r0, r2
 597 0016 191C     		mov	r1, r3
 598 0018 0222     		mov	r2, #2
 599 001a FFF7FEFF 		bl	ETH_ChipRead
 450:.\Generated_Source\PSoC4/ETH.c **** #if !( CY_PSOC3 )
 451:.\Generated_Source\PSoC4/ETH.c **** 	val = CYSWAP_ENDIAN16( val );
 600              		.loc 1 451 0
 601 001e 3B1C     		mov	r3, r7
 602 0020 0E33     		add	r3, r3, #14
 603 0022 1B88     		ldrh	r3, [r3]
 604 0024 1B02     		lsl	r3, r3, #8
 605 0026 9AB2     		uxth	r2, r3
 606 0028 3B1C     		mov	r3, r7
 607 002a 0E33     		add	r3, r3, #14
 608 002c 1B88     		ldrh	r3, [r3]
 609 002e 1B0A     		lsr	r3, r3, #8
 610 0030 9BB2     		uxth	r3, r3
 611 0032 9BB2     		uxth	r3, r3
 612 0034 1343     		orr	r3, r2
 613 0036 9BB2     		uxth	r3, r3
 614 0038 9AB2     		uxth	r2, r3
 615 003a 3B1C     		mov	r3, r7
 616 003c 0E33     		add	r3, r3, #14
 617 003e 1A80     		strh	r2, [r3]
 452:.\Generated_Source\PSoC4/ETH.c **** #endif
 453:.\Generated_Source\PSoC4/ETH.c **** 	
 454:.\Generated_Source\PSoC4/ETH.c **** 	return( val );
 618              		.loc 1 454 0
 619 0040 3B1C     		mov	r3, r7
 620 0042 0E33     		add	r3, r3, #14
 621 0044 1B88     		ldrh	r3, [r3]
 455:.\Generated_Source\PSoC4/ETH.c **** }
 622              		.loc 1 455 0
 623 0046 181C     		mov	r0, r3
 624 0048 BD46     		mov	sp, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 20


 625 004a 04B0     		add	sp, sp, #16
 626              		@ sp needed for prologue
 627 004c 80BD     		pop	{r7, pc}
 628              		.cfi_endproc
 629              	.LFE5:
 630              		.size	ETH_ChipRead16, .-ETH_ChipRead16
 631 004e C046     		.section	.text.ETH_SetSourceMAC,"ax",%progbits
 632              		.align	2
 633              		.global	ETH_SetSourceMAC
 634              		.code	16
 635              		.thumb_func
 636              		.type	ETH_SetSourceMAC, %function
 637              	ETH_SetSourceMAC:
 638              	.LFB6:
 456:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 457:.\Generated_Source\PSoC4/ETH.c **** /* END SECTION */
 458:.\Generated_Source\PSoC4/ETH.c **** #endif
 459:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 460:.\Generated_Source\PSoC4/ETH.c **** /* Chip Register access */
 461:.\Generated_Source\PSoC4/ETH.c **** #if (1)
 462:.\Generated_Source\PSoC4/ETH.c **** // Common Registers
 463:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 464:.\Generated_Source\PSoC4/ETH.c **** /**
 465:.\Generated_Source\PSoC4/ETH.c ****  * \brief Set teh chip mac address to teh specified address
 466:.\Generated_Source\PSoC4/ETH.c ****  * \param *mac pointer to the array holding the MAC address
 467:.\Generated_Source\PSoC4/ETH.c ****  */
 468:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSourceMAC( uint8 *mac )
 469:.\Generated_Source\PSoC4/ETH.c **** {
 639              		.loc 1 469 0
 640              		.cfi_startproc
 641 0000 80B5     		push	{r7, lr}
 642              	.LCFI16:
 643              		.cfi_def_cfa_offset 8
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 82B0     		sub	sp, sp, #8
 647              	.LCFI17:
 648              		.cfi_def_cfa_offset 16
 649 0004 00AF     		add	r7, sp, #0
 650              	.LCFI18:
 651              		.cfi_def_cfa_register 7
 652 0006 7860     		str	r0, [r7, #4]
 470:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite(ETH_REG_SHAR, mac,6 );
 653              		.loc 1 470 0
 654 0008 7B68     		ldr	r3, [r7, #4]
 655 000a 0920     		mov	r0, #9
 656 000c 191C     		mov	r1, r3
 657 000e 0622     		mov	r2, #6
 658 0010 FFF7FEFF 		bl	ETH_ChipWrite
 471:.\Generated_Source\PSoC4/ETH.c **** }
 659              		.loc 1 471 0
 660 0014 BD46     		mov	sp, r7
 661 0016 02B0     		add	sp, sp, #8
 662              		@ sp needed for prologue
 663 0018 80BD     		pop	{r7, pc}
 664              		.cfi_endproc
 665              	.LFE6:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 21


 666              		.size	ETH_SetSourceMAC, .-ETH_SetSourceMAC
 667 001a C046     		.section	.text.ETH_GetSourceMAC,"ax",%progbits
 668              		.align	2
 669              		.global	ETH_GetSourceMAC
 670              		.code	16
 671              		.thumb_func
 672              		.type	ETH_GetSourceMAC, %function
 673              	ETH_GetSourceMAC:
 674              	.LFB7:
 472:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 473:.\Generated_Source\PSoC4/ETH.c **** /**
 474:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read the chip source MAC address from the MAC registers
 475:.\Generated_Source\PSoC4/ETH.c ****  * \param *mac pointer to the address of the buffer to hold the read MAC address
 476:.\Generated_Source\PSoC4/ETH.c ****  */
 477:.\Generated_Source\PSoC4/ETH.c **** void ETH_GetSourceMAC( uint8 *mac )
 478:.\Generated_Source\PSoC4/ETH.c **** {
 675              		.loc 1 478 0
 676              		.cfi_startproc
 677 0000 80B5     		push	{r7, lr}
 678              	.LCFI19:
 679              		.cfi_def_cfa_offset 8
 680              		.cfi_offset 7, -8
 681              		.cfi_offset 14, -4
 682 0002 82B0     		sub	sp, sp, #8
 683              	.LCFI20:
 684              		.cfi_def_cfa_offset 16
 685 0004 00AF     		add	r7, sp, #0
 686              	.LCFI21:
 687              		.cfi_def_cfa_register 7
 688 0006 7860     		str	r0, [r7, #4]
 479:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead(ETH_REG_SHAR,mac,6);
 689              		.loc 1 479 0
 690 0008 7B68     		ldr	r3, [r7, #4]
 691 000a 0920     		mov	r0, #9
 692 000c 191C     		mov	r1, r3
 693 000e 0622     		mov	r2, #6
 694 0010 FFF7FEFF 		bl	ETH_ChipRead
 480:.\Generated_Source\PSoC4/ETH.c **** }
 695              		.loc 1 480 0
 696 0014 BD46     		mov	sp, r7
 697 0016 02B0     		add	sp, sp, #8
 698              		@ sp needed for prologue
 699 0018 80BD     		pop	{r7, pc}
 700              		.cfi_endproc
 701              	.LFE7:
 702              		.size	ETH_GetSourceMAC, .-ETH_GetSourceMAC
 703 001a C046     		.section	.text.ETH_SetGatewayAddress,"ax",%progbits
 704              		.align	2
 705              		.global	ETH_SetGatewayAddress
 706              		.code	16
 707              		.thumb_func
 708              		.type	ETH_SetGatewayAddress, %function
 709              	ETH_SetGatewayAddress:
 710              	.LFB8:
 481:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 482:.\Generated_Source\PSoC4/ETH.c **** /**
 483:.\Generated_Source\PSoC4/ETH.c ****  * \brief Set the IPv4 address of the network gateway
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 22


 484:.\Generated_Source\PSoC4/ETH.c ****  * \param ip IP address of the gateway
 485:.\Generated_Source\PSoC4/ETH.c ****  */
 486:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetGatewayAddress(uint32 ip)
 487:.\Generated_Source\PSoC4/ETH.c **** {
 711              		.loc 1 487 0
 712              		.cfi_startproc
 713 0000 80B5     		push	{r7, lr}
 714              	.LCFI22:
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 7, -8
 717              		.cfi_offset 14, -4
 718 0002 82B0     		sub	sp, sp, #8
 719              	.LCFI23:
 720              		.cfi_def_cfa_offset 16
 721 0004 00AF     		add	r7, sp, #0
 722              	.LCFI24:
 723              		.cfi_def_cfa_register 7
 724 0006 7860     		str	r0, [r7, #4]
 488:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite(ETH_REG_GAR, (uint8*)&(ip),4);
 725              		.loc 1 488 0
 726 0008 3B1D     		add	r3, r7, #4
 727 000a 0120     		mov	r0, #1
 728 000c 191C     		mov	r1, r3
 729 000e 0422     		mov	r2, #4
 730 0010 FFF7FEFF 		bl	ETH_ChipWrite
 489:.\Generated_Source\PSoC4/ETH.c **** }
 731              		.loc 1 489 0
 732 0014 BD46     		mov	sp, r7
 733 0016 02B0     		add	sp, sp, #8
 734              		@ sp needed for prologue
 735 0018 80BD     		pop	{r7, pc}
 736              		.cfi_endproc
 737              	.LFE8:
 738              		.size	ETH_SetGatewayAddress, .-ETH_SetGatewayAddress
 739 001a C046     		.section	.text.ETH_GetGatewayAddress,"ax",%progbits
 740              		.align	2
 741              		.global	ETH_GetGatewayAddress
 742              		.code	16
 743              		.thumb_func
 744              		.type	ETH_GetGatewayAddress, %function
 745              	ETH_GetGatewayAddress:
 746              	.LFB9:
 490:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 491:.\Generated_Source\PSoC4/ETH.c **** /**
 492:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read the gateway address from the device
 493:.\Generated_Source\PSoC4/ETH.c ****  * \returns the IP address of the gateway
 494:.\Generated_Source\PSoC4/ETH.c ****  */
 495:.\Generated_Source\PSoC4/ETH.c **** uint32 ETH_GetGatewayAddress( void )
 496:.\Generated_Source\PSoC4/ETH.c **** {
 747              		.loc 1 496 0
 748              		.cfi_startproc
 749 0000 80B5     		push	{r7, lr}
 750              	.LCFI25:
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 7, -8
 753              		.cfi_offset 14, -4
 754 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 23


 755              	.LCFI26:
 756              		.cfi_def_cfa_offset 16
 757 0004 00AF     		add	r7, sp, #0
 758              	.LCFI27:
 759              		.cfi_def_cfa_register 7
 497:.\Generated_Source\PSoC4/ETH.c **** 	uint32 ip = 0xFFFFFFFF;
 760              		.loc 1 497 0
 761 0006 0123     		mov	r3, #1
 762 0008 5B42     		neg	r3, r3
 763 000a 7B60     		str	r3, [r7, #4]
 498:.\Generated_Source\PSoC4/ETH.c **** 	
 499:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead( ETH_REG_GAR, (uint8*)(ip), 4);
 764              		.loc 1 499 0
 765 000c 7B68     		ldr	r3, [r7, #4]
 766 000e 0120     		mov	r0, #1
 767 0010 191C     		mov	r1, r3
 768 0012 0422     		mov	r2, #4
 769 0014 FFF7FEFF 		bl	ETH_ChipRead
 500:.\Generated_Source\PSoC4/ETH.c **** 	
 501:.\Generated_Source\PSoC4/ETH.c **** 	return ip;
 770              		.loc 1 501 0
 771 0018 7B68     		ldr	r3, [r7, #4]
 502:.\Generated_Source\PSoC4/ETH.c **** }
 772              		.loc 1 502 0
 773 001a 181C     		mov	r0, r3
 774 001c BD46     		mov	sp, r7
 775 001e 02B0     		add	sp, sp, #8
 776              		@ sp needed for prologue
 777 0020 80BD     		pop	{r7, pc}
 778              		.cfi_endproc
 779              	.LFE9:
 780              		.size	ETH_GetGatewayAddress, .-ETH_GetGatewayAddress
 781 0022 C046     		.section	.text.ETH_SetSubnetMask,"ax",%progbits
 782              		.align	2
 783              		.global	ETH_SetSubnetMask
 784              		.code	16
 785              		.thumb_func
 786              		.type	ETH_SetSubnetMask, %function
 787              	ETH_SetSubnetMask:
 788              	.LFB10:
 503:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 504:.\Generated_Source\PSoC4/ETH.c **** /**
 505:.\Generated_Source\PSoC4/ETH.c ****  * \brief set the subnet mask of the ethernet device
 506:.\Generated_Source\PSoC4/ETH.c ****  * \param the subnet mask (IPv4)
 507:.\Generated_Source\PSoC4/ETH.c ****  */
 508:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSubnetMask( uint32 ip )
 509:.\Generated_Source\PSoC4/ETH.c **** {
 789              		.loc 1 509 0
 790              		.cfi_startproc
 791 0000 80B5     		push	{r7, lr}
 792              	.LCFI28:
 793              		.cfi_def_cfa_offset 8
 794              		.cfi_offset 7, -8
 795              		.cfi_offset 14, -4
 796 0002 82B0     		sub	sp, sp, #8
 797              	.LCFI29:
 798              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 24


 799 0004 00AF     		add	r7, sp, #0
 800              	.LCFI30:
 801              		.cfi_def_cfa_register 7
 802 0006 7860     		str	r0, [r7, #4]
 510:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite(ETH_REG_SUBR, (uint8*)&(ip), 4);
 803              		.loc 1 510 0
 804 0008 3B1D     		add	r3, r7, #4
 805 000a 0520     		mov	r0, #5
 806 000c 191C     		mov	r1, r3
 807 000e 0422     		mov	r2, #4
 808 0010 FFF7FEFF 		bl	ETH_ChipWrite
 511:.\Generated_Source\PSoC4/ETH.c **** }
 809              		.loc 1 511 0
 810 0014 BD46     		mov	sp, r7
 811 0016 02B0     		add	sp, sp, #8
 812              		@ sp needed for prologue
 813 0018 80BD     		pop	{r7, pc}
 814              		.cfi_endproc
 815              	.LFE10:
 816              		.size	ETH_SetSubnetMask, .-ETH_SetSubnetMask
 817 001a C046     		.section	.text.ETH_GetSubnetMask,"ax",%progbits
 818              		.align	2
 819              		.global	ETH_GetSubnetMask
 820              		.code	16
 821              		.thumb_func
 822              		.type	ETH_GetSubnetMask, %function
 823              	ETH_GetSubnetMask:
 824              	.LFB11:
 512:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 513:.\Generated_Source\PSoC4/ETH.c **** /**
 514:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read the subnet mask from the device
 515:.\Generated_Source\PSoC4/ETH.c ****  * \returns the subnet mask that was read from the device.
 516:.\Generated_Source\PSoC4/ETH.c ****  */
 517:.\Generated_Source\PSoC4/ETH.c **** uint32 ETH_GetSubnetMask( void )
 518:.\Generated_Source\PSoC4/ETH.c **** {
 825              		.loc 1 518 0
 826              		.cfi_startproc
 827 0000 80B5     		push	{r7, lr}
 828              	.LCFI31:
 829              		.cfi_def_cfa_offset 8
 830              		.cfi_offset 7, -8
 831              		.cfi_offset 14, -4
 832 0002 82B0     		sub	sp, sp, #8
 833              	.LCFI32:
 834              		.cfi_def_cfa_offset 16
 835 0004 00AF     		add	r7, sp, #0
 836              	.LCFI33:
 837              		.cfi_def_cfa_register 7
 519:.\Generated_Source\PSoC4/ETH.c **** 	uint32 ip = 0xFFFFFFFF;
 838              		.loc 1 519 0
 839 0006 0123     		mov	r3, #1
 840 0008 5B42     		neg	r3, r3
 841 000a 7B60     		str	r3, [r7, #4]
 520:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead(ETH_REG_SUBR, (uint8*)(ip), 4);
 842              		.loc 1 520 0
 843 000c 7B68     		ldr	r3, [r7, #4]
 844 000e 0520     		mov	r0, #5
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 25


 845 0010 191C     		mov	r1, r3
 846 0012 0422     		mov	r2, #4
 847 0014 FFF7FEFF 		bl	ETH_ChipRead
 521:.\Generated_Source\PSoC4/ETH.c **** 	return ip;
 848              		.loc 1 521 0
 849 0018 7B68     		ldr	r3, [r7, #4]
 522:.\Generated_Source\PSoC4/ETH.c **** }
 850              		.loc 1 522 0
 851 001a 181C     		mov	r0, r3
 852 001c BD46     		mov	sp, r7
 853 001e 02B0     		add	sp, sp, #8
 854              		@ sp needed for prologue
 855 0020 80BD     		pop	{r7, pc}
 856              		.cfi_endproc
 857              	.LFE11:
 858              		.size	ETH_GetSubnetMask, .-ETH_GetSubnetMask
 859 0022 C046     		.section	.text.ETH_SetSourceIP,"ax",%progbits
 860              		.align	2
 861              		.global	ETH_SetSourceIP
 862              		.code	16
 863              		.thumb_func
 864              		.type	ETH_SetSourceIP, %function
 865              	ETH_SetSourceIP:
 866              	.LFB12:
 523:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 524:.\Generated_Source\PSoC4/ETH.c **** /**
 525:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write the device source IPv4 address
 526:.\Generated_Source\PSoC4/ETH.c ****  * \param ip the ip address to set as the chip IP address
 527:.\Generated_Source\PSoC4/ETH.c ****  */
 528:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSourceIP(uint32 ip )
 529:.\Generated_Source\PSoC4/ETH.c **** {
 867              		.loc 1 529 0
 868              		.cfi_startproc
 869 0000 80B5     		push	{r7, lr}
 870              	.LCFI34:
 871              		.cfi_def_cfa_offset 8
 872              		.cfi_offset 7, -8
 873              		.cfi_offset 14, -4
 874 0002 82B0     		sub	sp, sp, #8
 875              	.LCFI35:
 876              		.cfi_def_cfa_offset 16
 877 0004 00AF     		add	r7, sp, #0
 878              	.LCFI36:
 879              		.cfi_def_cfa_register 7
 880 0006 7860     		str	r0, [r7, #4]
 530:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite( ETH_REG_SIPR, (uint8*)&(ip), 4 );
 881              		.loc 1 530 0
 882 0008 3B1D     		add	r3, r7, #4
 883 000a 0F20     		mov	r0, #15
 884 000c 191C     		mov	r1, r3
 885 000e 0422     		mov	r2, #4
 886 0010 FFF7FEFF 		bl	ETH_ChipWrite
 531:.\Generated_Source\PSoC4/ETH.c **** }
 887              		.loc 1 531 0
 888 0014 BD46     		mov	sp, r7
 889 0016 02B0     		add	sp, sp, #8
 890              		@ sp needed for prologue
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 26


 891 0018 80BD     		pop	{r7, pc}
 892              		.cfi_endproc
 893              	.LFE12:
 894              		.size	ETH_SetSourceIP, .-ETH_SetSourceIP
 895 001a C046     		.section	.text.ETH_GetSourceIP,"ax",%progbits
 896              		.align	2
 897              		.global	ETH_GetSourceIP
 898              		.code	16
 899              		.thumb_func
 900              		.type	ETH_GetSourceIP, %function
 901              	ETH_GetSourceIP:
 902              	.LFB13:
 532:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 533:.\Generated_Source\PSoC4/ETH.c **** /**
 534:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read the device's programmed IP address
 535:.\Generated_Source\PSoC4/ETH.c ****  * \returns The IPv4 address to which the device is set.
 536:.\Generated_Source\PSoC4/ETH.c ****  */
 537:.\Generated_Source\PSoC4/ETH.c **** uint32 ETH_GetSourceIP( void )
 538:.\Generated_Source\PSoC4/ETH.c **** {
 903              		.loc 1 538 0
 904              		.cfi_startproc
 905 0000 80B5     		push	{r7, lr}
 906              	.LCFI37:
 907              		.cfi_def_cfa_offset 8
 908              		.cfi_offset 7, -8
 909              		.cfi_offset 14, -4
 910 0002 82B0     		sub	sp, sp, #8
 911              	.LCFI38:
 912              		.cfi_def_cfa_offset 16
 913 0004 00AF     		add	r7, sp, #0
 914              	.LCFI39:
 915              		.cfi_def_cfa_register 7
 539:.\Generated_Source\PSoC4/ETH.c **** 	uint32 ip = 0xFFFFFFFF;
 916              		.loc 1 539 0
 917 0006 0123     		mov	r3, #1
 918 0008 5B42     		neg	r3, r3
 919 000a 7B60     		str	r3, [r7, #4]
 540:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead( ETH_REG_SIPR, (uint8*)(ip), 4 );
 920              		.loc 1 540 0
 921 000c 7B68     		ldr	r3, [r7, #4]
 922 000e 0F20     		mov	r0, #15
 923 0010 191C     		mov	r1, r3
 924 0012 0422     		mov	r2, #4
 925 0014 FFF7FEFF 		bl	ETH_ChipRead
 541:.\Generated_Source\PSoC4/ETH.c **** 	return ip;
 926              		.loc 1 541 0
 927 0018 7B68     		ldr	r3, [r7, #4]
 542:.\Generated_Source\PSoC4/ETH.c **** }
 928              		.loc 1 542 0
 929 001a 181C     		mov	r0, r3
 930 001c BD46     		mov	sp, r7
 931 001e 02B0     		add	sp, sp, #8
 932              		@ sp needed for prologue
 933 0020 80BD     		pop	{r7, pc}
 934              		.cfi_endproc
 935              	.LFE13:
 936              		.size	ETH_GetSourceIP, .-ETH_GetSourceIP
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 27


 937 0022 C046     		.section	.text.ETH_SetMode,"ax",%progbits
 938              		.align	2
 939              		.global	ETH_SetMode
 940              		.code	16
 941              		.thumb_func
 942              		.type	ETH_SetMode, %function
 943              	ETH_SetMode:
 944              	.LFB14:
 543:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 544:.\Generated_Source\PSoC4/ETH.c **** /**
 545:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the device internal MODE register
 546:.\Generated_Source\PSoC4/ETH.c ****  * \param mode the value to be written to the mode register.
 547:.\Generated_Source\PSoC4/ETH.c ****  */
 548:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetMode( uint8 mode )
 549:.\Generated_Source\PSoC4/ETH.c **** {
 945              		.loc 1 549 0
 946              		.cfi_startproc
 947 0000 80B5     		push	{r7, lr}
 948              	.LCFI40:
 949              		.cfi_def_cfa_offset 8
 950              		.cfi_offset 7, -8
 951              		.cfi_offset 14, -4
 952 0002 82B0     		sub	sp, sp, #8
 953              	.LCFI41:
 954              		.cfi_def_cfa_offset 16
 955 0004 00AF     		add	r7, sp, #0
 956              	.LCFI42:
 957              		.cfi_def_cfa_register 7
 958 0006 021C     		mov	r2, r0
 959 0008 FB1D     		add	r3, r7, #7
 960 000a 1A70     		strb	r2, [r3]
 550:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite(ETH_REG_MODE, (uint8*)&(mode), 1);
 961              		.loc 1 550 0
 962 000c FB1D     		add	r3, r7, #7
 963 000e 0020     		mov	r0, #0
 964 0010 191C     		mov	r1, r3
 965 0012 0122     		mov	r2, #1
 966 0014 FFF7FEFF 		bl	ETH_ChipWrite
 551:.\Generated_Source\PSoC4/ETH.c **** }
 967              		.loc 1 551 0
 968 0018 BD46     		mov	sp, r7
 969 001a 02B0     		add	sp, sp, #8
 970              		@ sp needed for prologue
 971 001c 80BD     		pop	{r7, pc}
 972              		.cfi_endproc
 973              	.LFE14:
 974              		.size	ETH_SetMode, .-ETH_SetMode
 975 001e C046     		.section	.text.ETH_GetMode,"ax",%progbits
 976              		.align	2
 977              		.global	ETH_GetMode
 978              		.code	16
 979              		.thumb_func
 980              		.type	ETH_GetMode, %function
 981              	ETH_GetMode:
 982              	.LFB15:
 552:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 553:.\Generated_Source\PSoC4/ETH.c **** /**
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 28


 554:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read the present contents of the device internal mode register
 555:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value of the mode register
 556:.\Generated_Source\PSoC4/ETH.c ****  */
 557:.\Generated_Source\PSoC4/ETH.c **** uint8 ETH_GetMode( void )
 558:.\Generated_Source\PSoC4/ETH.c **** {
 983              		.loc 1 558 0
 984              		.cfi_startproc
 985 0000 80B5     		push	{r7, lr}
 986              	.LCFI43:
 987              		.cfi_def_cfa_offset 8
 988              		.cfi_offset 7, -8
 989              		.cfi_offset 14, -4
 990 0002 82B0     		sub	sp, sp, #8
 991              	.LCFI44:
 992              		.cfi_def_cfa_offset 16
 993 0004 00AF     		add	r7, sp, #0
 994              	.LCFI45:
 995              		.cfi_def_cfa_register 7
 559:.\Generated_Source\PSoC4/ETH.c **** 	uint8 mode;
 560:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead(ETH_REG_MODE, (uint8*)&(mode),1);
 996              		.loc 1 560 0
 997 0006 FB1D     		add	r3, r7, #7
 998 0008 0020     		mov	r0, #0
 999 000a 191C     		mov	r1, r3
 1000 000c 0122     		mov	r2, #1
 1001 000e FFF7FEFF 		bl	ETH_ChipRead
 561:.\Generated_Source\PSoC4/ETH.c **** 	return mode;
 1002              		.loc 1 561 0
 1003 0012 FB1D     		add	r3, r7, #7
 1004 0014 1B78     		ldrb	r3, [r3]
 562:.\Generated_Source\PSoC4/ETH.c **** }
 1005              		.loc 1 562 0
 1006 0016 181C     		mov	r0, r3
 1007 0018 BD46     		mov	sp, r7
 1008 001a 02B0     		add	sp, sp, #8
 1009              		@ sp needed for prologue
 1010 001c 80BD     		pop	{r7, pc}
 1011              		.cfi_endproc
 1012              	.LFE15:
 1013              		.size	ETH_GetMode, .-ETH_GetMode
 1014 001e C046     		.section	.text.ETH_SetIR,"ax",%progbits
 1015              		.align	2
 1016              		.global	ETH_SetIR
 1017              		.code	16
 1018              		.thumb_func
 1019              		.type	ETH_SetIR, %function
 1020              	ETH_SetIR:
 1021              	.LFB16:
 563:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 564:.\Generated_Source\PSoC4/ETH.c **** /**
 565:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write the value of the interrupt register
 566:.\Generated_Source\PSoC4/ETH.c ****  * \param ir the value to be written to the interrupt register
 567:.\Generated_Source\PSoC4/ETH.c ****  */
 568:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetIR(uint8 ir )
 569:.\Generated_Source\PSoC4/ETH.c **** {
 1022              		.loc 1 569 0
 1023              		.cfi_startproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 29


 1024 0000 80B5     		push	{r7, lr}
 1025              	.LCFI46:
 1026              		.cfi_def_cfa_offset 8
 1027              		.cfi_offset 7, -8
 1028              		.cfi_offset 14, -4
 1029 0002 82B0     		sub	sp, sp, #8
 1030              	.LCFI47:
 1031              		.cfi_def_cfa_offset 16
 1032 0004 00AF     		add	r7, sp, #0
 1033              	.LCFI48:
 1034              		.cfi_def_cfa_register 7
 1035 0006 021C     		mov	r2, r0
 1036 0008 FB1D     		add	r3, r7, #7
 1037 000a 1A70     		strb	r2, [r3]
 570:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite(ETH_REG_IR,(uint8*)&(ir), 1);
 1038              		.loc 1 570 0
 1039 000c FB1D     		add	r3, r7, #7
 1040 000e 1520     		mov	r0, #21
 1041 0010 191C     		mov	r1, r3
 1042 0012 0122     		mov	r2, #1
 1043 0014 FFF7FEFF 		bl	ETH_ChipWrite
 571:.\Generated_Source\PSoC4/ETH.c **** }
 1044              		.loc 1 571 0
 1045 0018 BD46     		mov	sp, r7
 1046 001a 02B0     		add	sp, sp, #8
 1047              		@ sp needed for prologue
 1048 001c 80BD     		pop	{r7, pc}
 1049              		.cfi_endproc
 1050              	.LFE16:
 1051              		.size	ETH_SetIR, .-ETH_SetIR
 1052 001e C046     		.section	.text.ETH_SetSocketRxMemSize,"ax",%progbits
 1053              		.align	2
 1054              		.global	ETH_SetSocketRxMemSize
 1055              		.code	16
 1056              		.thumb_func
 1057              		.type	ETH_SetSocketRxMemSize, %function
 1058              	ETH_SetSocketRxMemSize:
 1059              	.LFB17:
 572:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 573:.\Generated_Source\PSoC4/ETH.c **** /**
 574:.\Generated_Source\PSoC4/ETH.c ****  * \brief write a value to the Rx mem size register
 575:.\Generated_Source\PSoC4/ETH.c ****  * \param size the value to be written to the register
 576:.\Generated_Source\PSoC4/ETH.c ****  */
 577:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketRxMemSize( uint8 socket, uint8 size ) 
 578:.\Generated_Source\PSoC4/ETH.c **** {
 1060              		.loc 1 578 0
 1061              		.cfi_startproc
 1062 0000 80B5     		push	{r7, lr}
 1063              	.LCFI49:
 1064              		.cfi_def_cfa_offset 8
 1065              		.cfi_offset 7, -8
 1066              		.cfi_offset 14, -4
 1067 0002 84B0     		sub	sp, sp, #16
 1068              	.LCFI50:
 1069              		.cfi_def_cfa_offset 24
 1070 0004 00AF     		add	r7, sp, #0
 1071              	.LCFI51:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 30


 1072              		.cfi_def_cfa_register 7
 1073 0006 0A1C     		mov	r2, r1
 1074 0008 FB1D     		add	r3, r7, #7
 1075 000a 011C     		add	r1, r0, #0
 1076 000c 1970     		strb	r1, [r3]
 1077 000e BB1D     		add	r3, r7, #6
 1078 0010 1A70     		strb	r2, [r3]
 579:.\Generated_Source\PSoC4/ETH.c **** 	uint8 sz;
 580:.\Generated_Source\PSoC4/ETH.c **** 	
 581:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 1)
 582:.\Generated_Source\PSoC4/ETH.c **** 	/*
 583:.\Generated_Source\PSoC4/ETH.c **** 	 * The W5100 uses memory allocations within one register for all sockets.
 584:.\Generated_Source\PSoC4/ETH.c **** 	 * the options are set by a 2 bit code for 1, 2, 4, or 8 K
 585:.\Generated_Source\PSoC4/ETH.c **** 	 */
 586:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipRead( ETH_REG_RMSR, &sz, 1);
 1079              		.loc 1 586 0
 1080 0012 3B1C     		mov	r3, r7
 1081 0014 0F33     		add	r3, r3, #15
 1082 0016 1A20     		mov	r0, #26
 1083 0018 191C     		mov	r1, r3
 1084 001a 0122     		mov	r2, #1
 1085 001c FFF7FEFF 		bl	ETH_ChipRead
 587:.\Generated_Source\PSoC4/ETH.c **** 		sz = sz & (~(3<<(socket<<1)));
 1086              		.loc 1 587 0
 1087 0020 FB1D     		add	r3, r7, #7
 1088 0022 1B78     		ldrb	r3, [r3]
 1089 0024 5B00     		lsl	r3, r3, #1
 1090 0026 0322     		mov	r2, #3
 1091 0028 111C     		mov	r1, r2
 1092 002a 9940     		lsl	r1, r1, r3
 1093 002c 0B1C     		mov	r3, r1
 1094 002e DBB2     		uxtb	r3, r3
 1095 0030 DB43     		mvn	r3, r3
 1096 0032 DBB2     		uxtb	r3, r3
 1097 0034 3A1C     		mov	r2, r7
 1098 0036 0F32     		add	r2, r2, #15
 1099 0038 1278     		ldrb	r2, [r2]
 1100 003a D2B2     		uxtb	r2, r2
 1101 003c 1340     		and	r3, r2
 1102 003e DBB2     		uxtb	r3, r3
 1103 0040 DAB2     		uxtb	r2, r3
 1104 0042 3B1C     		mov	r3, r7
 1105 0044 0F33     		add	r3, r3, #15
 1106 0046 1A70     		strb	r2, [r3]
 588:.\Generated_Source\PSoC4/ETH.c **** 		sz = sz | (size<<(socket<<1));
 1107              		.loc 1 588 0
 1108 0048 BB1D     		add	r3, r7, #6
 1109 004a 1A78     		ldrb	r2, [r3]
 1110 004c FB1D     		add	r3, r7, #7
 1111 004e 1B78     		ldrb	r3, [r3]
 1112 0050 5B00     		lsl	r3, r3, #1
 1113 0052 111C     		mov	r1, r2
 1114 0054 9940     		lsl	r1, r1, r3
 1115 0056 0B1C     		mov	r3, r1
 1116 0058 DAB2     		uxtb	r2, r3
 1117 005a 3B1C     		mov	r3, r7
 1118 005c 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 31


 1119 005e 1B78     		ldrb	r3, [r3]
 1120 0060 DBB2     		uxtb	r3, r3
 1121 0062 1343     		orr	r3, r2
 1122 0064 DBB2     		uxtb	r3, r3
 1123 0066 DAB2     		uxtb	r2, r3
 1124 0068 3B1C     		mov	r3, r7
 1125 006a 0F33     		add	r3, r3, #15
 1126 006c 1A70     		strb	r2, [r3]
 589:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipWrite( ETH_REG_RMSR, &sz, 1);
 1127              		.loc 1 589 0
 1128 006e 3B1C     		mov	r3, r7
 1129 0070 0F33     		add	r3, r3, #15
 1130 0072 1A20     		mov	r0, #26
 1131 0074 191C     		mov	r1, r3
 1132 0076 0122     		mov	r2, #1
 1133 0078 FFF7FEFF 		bl	ETH_ChipWrite
 590:.\Generated_Source\PSoC4/ETH.c **** #elif (1 == 2)
 591:.\Generated_Source\PSoC4/ETH.c **** 	/*
 592:.\Generated_Source\PSoC4/ETH.c **** 	 * The W5200 interface uses memory size registers located within the socket
 593:.\Generated_Source\PSoC4/ETH.c **** 	 * register memory maps.
 594:.\Generated_Source\PSoC4/ETH.c **** 	 */
 595:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite( ETH_SOCKET_REG(socket,ETH_SOCK_RXMEM), &size, 1);
 596:.\Generated_Source\PSoC4/ETH.c **** #endif
 597:.\Generated_Source\PSoC4/ETH.c **** }
 1134              		.loc 1 597 0
 1135 007c BD46     		mov	sp, r7
 1136 007e 04B0     		add	sp, sp, #16
 1137              		@ sp needed for prologue
 1138 0080 80BD     		pop	{r7, pc}
 1139              		.cfi_endproc
 1140              	.LFE17:
 1141              		.size	ETH_SetSocketRxMemSize, .-ETH_SetSocketRxMemSize
 1142 0082 C046     		.section	.text.ETH_GetSocketRxMemSize,"ax",%progbits
 1143              		.align	2
 1144              		.global	ETH_GetSocketRxMemSize
 1145              		.code	16
 1146              		.thumb_func
 1147              		.type	ETH_GetSocketRxMemSize, %function
 1148              	ETH_GetSocketRxMemSize:
 1149              	.LFB18:
 598:.\Generated_Source\PSoC4/ETH.c **** 
 599:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 600:.\Generated_Source\PSoC4/ETH.c **** /**
 601:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read the contents of hte rx mem size register
 602:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from teh register
 603:.\Generated_Source\PSoC4/ETH.c ****  */
 604:.\Generated_Source\PSoC4/ETH.c **** uint8 ETH_GetSocketRxMemSize( uint8 socket )
 605:.\Generated_Source\PSoC4/ETH.c **** {
 1150              		.loc 1 605 0
 1151              		.cfi_startproc
 1152 0000 80B5     		push	{r7, lr}
 1153              	.LCFI52:
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 7, -8
 1156              		.cfi_offset 14, -4
 1157 0002 84B0     		sub	sp, sp, #16
 1158              	.LCFI53:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 32


 1159              		.cfi_def_cfa_offset 24
 1160 0004 00AF     		add	r7, sp, #0
 1161              	.LCFI54:
 1162              		.cfi_def_cfa_register 7
 1163 0006 021C     		mov	r2, r0
 1164 0008 FB1D     		add	r3, r7, #7
 1165 000a 1A70     		strb	r2, [r3]
 606:.\Generated_Source\PSoC4/ETH.c **** 	uint8 sz;
 607:.\Generated_Source\PSoC4/ETH.c **** 	
 608:.\Generated_Source\PSoC4/ETH.c **** 	sz = 0xFF;
 1166              		.loc 1 608 0
 1167 000c 3B1C     		mov	r3, r7
 1168 000e 0F33     		add	r3, r3, #15
 1169 0010 FF22     		mov	r2, #255
 1170 0012 1A70     		strb	r2, [r3]
 609:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 1)
 610:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead(ETH_REG_RMSR, &sz, 1);
 1171              		.loc 1 610 0
 1172 0014 3B1C     		mov	r3, r7
 1173 0016 0F33     		add	r3, r3, #15
 1174 0018 1A20     		mov	r0, #26
 1175 001a 191C     		mov	r1, r3
 1176 001c 0122     		mov	r2, #1
 1177 001e FFF7FEFF 		bl	ETH_ChipRead
 611:.\Generated_Source\PSoC4/ETH.c **** 	sz = (sz >> (socket<<1)) & 0x03;
 1178              		.loc 1 611 0
 1179 0022 3B1C     		mov	r3, r7
 1180 0024 0F33     		add	r3, r3, #15
 1181 0026 1B78     		ldrb	r3, [r3]
 1182 0028 1A1C     		mov	r2, r3
 1183 002a FB1D     		add	r3, r7, #7
 1184 002c 1B78     		ldrb	r3, [r3]
 1185 002e 5B00     		lsl	r3, r3, #1
 1186 0030 111C     		mov	r1, r2
 1187 0032 1941     		asr	r1, r1, r3
 1188 0034 0B1C     		mov	r3, r1
 1189 0036 DAB2     		uxtb	r2, r3
 1190 0038 0323     		mov	r3, #3
 1191 003a 1340     		and	r3, r2
 1192 003c DAB2     		uxtb	r2, r3
 1193 003e 3B1C     		mov	r3, r7
 1194 0040 0F33     		add	r3, r3, #15
 1195 0042 1A70     		strb	r2, [r3]
 612:.\Generated_Source\PSoC4/ETH.c **** #elif (1 == 2)
 613:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead( ETH_SOCKET_REG(socket,ETH_SOCK_RXMEM), &sz, 1);
 614:.\Generated_Source\PSoC4/ETH.c **** #endif
 615:.\Generated_Source\PSoC4/ETH.c **** 	return sz;
 1196              		.loc 1 615 0
 1197 0044 3B1C     		mov	r3, r7
 1198 0046 0F33     		add	r3, r3, #15
 1199 0048 1B78     		ldrb	r3, [r3]
 616:.\Generated_Source\PSoC4/ETH.c **** }
 1200              		.loc 1 616 0
 1201 004a 181C     		mov	r0, r3
 1202 004c BD46     		mov	sp, r7
 1203 004e 04B0     		add	sp, sp, #16
 1204              		@ sp needed for prologue
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 33


 1205 0050 80BD     		pop	{r7, pc}
 1206              		.cfi_endproc
 1207              	.LFE18:
 1208              		.size	ETH_GetSocketRxMemSize, .-ETH_GetSocketRxMemSize
 1209 0052 C046     		.section	.text.ETH_SetSocketTxMemSize,"ax",%progbits
 1210              		.align	2
 1211              		.global	ETH_SetSocketTxMemSize
 1212              		.code	16
 1213              		.thumb_func
 1214              		.type	ETH_SetSocketTxMemSize, %function
 1215              	ETH_SetSocketTxMemSize:
 1216              	.LFB19:
 617:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 618:.\Generated_Source\PSoC4/ETH.c **** /**
 619:.\Generated_Source\PSoC4/ETH.c ****  * \brief write a value to the tx mem size register
 620:.\Generated_Source\PSoC4/ETH.c ****  * \param size The value to be written to the register
 621:.\Generated_Source\PSoC4/ETH.c ****  */
 622:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketTxMemSize( uint8 socket, uint8 size )
 623:.\Generated_Source\PSoC4/ETH.c **** {
 1217              		.loc 1 623 0
 1218              		.cfi_startproc
 1219 0000 80B5     		push	{r7, lr}
 1220              	.LCFI55:
 1221              		.cfi_def_cfa_offset 8
 1222              		.cfi_offset 7, -8
 1223              		.cfi_offset 14, -4
 1224 0002 84B0     		sub	sp, sp, #16
 1225              	.LCFI56:
 1226              		.cfi_def_cfa_offset 24
 1227 0004 00AF     		add	r7, sp, #0
 1228              	.LCFI57:
 1229              		.cfi_def_cfa_register 7
 1230 0006 0A1C     		mov	r2, r1
 1231 0008 FB1D     		add	r3, r7, #7
 1232 000a 011C     		add	r1, r0, #0
 1233 000c 1970     		strb	r1, [r3]
 1234 000e BB1D     		add	r3, r7, #6
 1235 0010 1A70     		strb	r2, [r3]
 624:.\Generated_Source\PSoC4/ETH.c **** 	uint8 sz;
 625:.\Generated_Source\PSoC4/ETH.c **** 	
 626:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 1)
 627:.\Generated_Source\PSoC4/ETH.c **** 	/*
 628:.\Generated_Source\PSoC4/ETH.c **** 	 * The W5100 uses memory allocations within one register for all sockets.
 629:.\Generated_Source\PSoC4/ETH.c **** 	 * the options are set by a 2 bit code for 1, 2, 4, or 8 K
 630:.\Generated_Source\PSoC4/ETH.c **** 	 */
 631:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipRead( ETH_REG_TXSR, &sz, 1);
 1236              		.loc 1 631 0
 1237 0012 3B1C     		mov	r3, r7
 1238 0014 0F33     		add	r3, r3, #15
 1239 0016 1B20     		mov	r0, #27
 1240 0018 191C     		mov	r1, r3
 1241 001a 0122     		mov	r2, #1
 1242 001c FFF7FEFF 		bl	ETH_ChipRead
 632:.\Generated_Source\PSoC4/ETH.c **** 		sz = sz & (~(3<<(socket<<1)));
 1243              		.loc 1 632 0
 1244 0020 FB1D     		add	r3, r7, #7
 1245 0022 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 34


 1246 0024 5B00     		lsl	r3, r3, #1
 1247 0026 0322     		mov	r2, #3
 1248 0028 111C     		mov	r1, r2
 1249 002a 9940     		lsl	r1, r1, r3
 1250 002c 0B1C     		mov	r3, r1
 1251 002e DBB2     		uxtb	r3, r3
 1252 0030 DB43     		mvn	r3, r3
 1253 0032 DBB2     		uxtb	r3, r3
 1254 0034 3A1C     		mov	r2, r7
 1255 0036 0F32     		add	r2, r2, #15
 1256 0038 1278     		ldrb	r2, [r2]
 1257 003a D2B2     		uxtb	r2, r2
 1258 003c 1340     		and	r3, r2
 1259 003e DBB2     		uxtb	r3, r3
 1260 0040 DAB2     		uxtb	r2, r3
 1261 0042 3B1C     		mov	r3, r7
 1262 0044 0F33     		add	r3, r3, #15
 1263 0046 1A70     		strb	r2, [r3]
 633:.\Generated_Source\PSoC4/ETH.c **** 		sz = sz | (size<<(socket<<1));
 1264              		.loc 1 633 0
 1265 0048 BB1D     		add	r3, r7, #6
 1266 004a 1A78     		ldrb	r2, [r3]
 1267 004c FB1D     		add	r3, r7, #7
 1268 004e 1B78     		ldrb	r3, [r3]
 1269 0050 5B00     		lsl	r3, r3, #1
 1270 0052 111C     		mov	r1, r2
 1271 0054 9940     		lsl	r1, r1, r3
 1272 0056 0B1C     		mov	r3, r1
 1273 0058 DAB2     		uxtb	r2, r3
 1274 005a 3B1C     		mov	r3, r7
 1275 005c 0F33     		add	r3, r3, #15
 1276 005e 1B78     		ldrb	r3, [r3]
 1277 0060 DBB2     		uxtb	r3, r3
 1278 0062 1343     		orr	r3, r2
 1279 0064 DBB2     		uxtb	r3, r3
 1280 0066 DAB2     		uxtb	r2, r3
 1281 0068 3B1C     		mov	r3, r7
 1282 006a 0F33     		add	r3, r3, #15
 1283 006c 1A70     		strb	r2, [r3]
 634:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipWrite( ETH_REG_TXSR, &sz, 1);
 1284              		.loc 1 634 0
 1285 006e 3B1C     		mov	r3, r7
 1286 0070 0F33     		add	r3, r3, #15
 1287 0072 1B20     		mov	r0, #27
 1288 0074 191C     		mov	r1, r3
 1289 0076 0122     		mov	r2, #1
 1290 0078 FFF7FEFF 		bl	ETH_ChipWrite
 635:.\Generated_Source\PSoC4/ETH.c **** #elif (1 == 2)
 636:.\Generated_Source\PSoC4/ETH.c **** 	/*
 637:.\Generated_Source\PSoC4/ETH.c **** 	 * The W5200 interface uses memory size registers located within the socket
 638:.\Generated_Source\PSoC4/ETH.c **** 	 * register memory maps.
 639:.\Generated_Source\PSoC4/ETH.c **** 	 */
 640:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite( ETH_SOCKET_REG(socket,ETH_SOCK_TXMEM), &size, 1);
 641:.\Generated_Source\PSoC4/ETH.c **** #endif
 642:.\Generated_Source\PSoC4/ETH.c **** }
 1291              		.loc 1 642 0
 1292 007c BD46     		mov	sp, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 35


 1293 007e 04B0     		add	sp, sp, #16
 1294              		@ sp needed for prologue
 1295 0080 80BD     		pop	{r7, pc}
 1296              		.cfi_endproc
 1297              	.LFE19:
 1298              		.size	ETH_SetSocketTxMemSize, .-ETH_SetSocketTxMemSize
 1299 0082 C046     		.section	.text.ETH_GetSocketTxMemSize,"ax",%progbits
 1300              		.align	2
 1301              		.global	ETH_GetSocketTxMemSize
 1302              		.code	16
 1303              		.thumb_func
 1304              		.type	ETH_GetSocketTxMemSize, %function
 1305              	ETH_GetSocketTxMemSize:
 1306              	.LFB20:
 643:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 644:.\Generated_Source\PSoC4/ETH.c **** /**
 645:.\Generated_Source\PSoC4/ETH.c ****  * \brief read the contents of the tx mem size register
 646:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 647:.\Generated_Source\PSoC4/ETH.c ****  */
 648:.\Generated_Source\PSoC4/ETH.c **** uint8 ETH_GetSocketTxMemSize( uint8 socket )
 649:.\Generated_Source\PSoC4/ETH.c **** {
 1307              		.loc 1 649 0
 1308              		.cfi_startproc
 1309 0000 80B5     		push	{r7, lr}
 1310              	.LCFI58:
 1311              		.cfi_def_cfa_offset 8
 1312              		.cfi_offset 7, -8
 1313              		.cfi_offset 14, -4
 1314 0002 84B0     		sub	sp, sp, #16
 1315              	.LCFI59:
 1316              		.cfi_def_cfa_offset 24
 1317 0004 00AF     		add	r7, sp, #0
 1318              	.LCFI60:
 1319              		.cfi_def_cfa_register 7
 1320 0006 021C     		mov	r2, r0
 1321 0008 FB1D     		add	r3, r7, #7
 1322 000a 1A70     		strb	r2, [r3]
 650:.\Generated_Source\PSoC4/ETH.c **** 	uint8 sz;
 651:.\Generated_Source\PSoC4/ETH.c **** 	
 652:.\Generated_Source\PSoC4/ETH.c **** 	sz = 0xFF;
 1323              		.loc 1 652 0
 1324 000c 3B1C     		mov	r3, r7
 1325 000e 0F33     		add	r3, r3, #15
 1326 0010 FF22     		mov	r2, #255
 1327 0012 1A70     		strb	r2, [r3]
 653:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 1)
 654:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead(ETH_REG_TXSR, &sz, 1);
 1328              		.loc 1 654 0
 1329 0014 3B1C     		mov	r3, r7
 1330 0016 0F33     		add	r3, r3, #15
 1331 0018 1B20     		mov	r0, #27
 1332 001a 191C     		mov	r1, r3
 1333 001c 0122     		mov	r2, #1
 1334 001e FFF7FEFF 		bl	ETH_ChipRead
 655:.\Generated_Source\PSoC4/ETH.c **** 	sz = (sz >> (socket<<1)) & 0x03;
 1335              		.loc 1 655 0
 1336 0022 3B1C     		mov	r3, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 36


 1337 0024 0F33     		add	r3, r3, #15
 1338 0026 1B78     		ldrb	r3, [r3]
 1339 0028 1A1C     		mov	r2, r3
 1340 002a FB1D     		add	r3, r7, #7
 1341 002c 1B78     		ldrb	r3, [r3]
 1342 002e 5B00     		lsl	r3, r3, #1
 1343 0030 111C     		mov	r1, r2
 1344 0032 1941     		asr	r1, r1, r3
 1345 0034 0B1C     		mov	r3, r1
 1346 0036 DAB2     		uxtb	r2, r3
 1347 0038 0323     		mov	r3, #3
 1348 003a 1340     		and	r3, r2
 1349 003c DAB2     		uxtb	r2, r3
 1350 003e 3B1C     		mov	r3, r7
 1351 0040 0F33     		add	r3, r3, #15
 1352 0042 1A70     		strb	r2, [r3]
 656:.\Generated_Source\PSoC4/ETH.c **** #elif (1 == 2)
 657:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead( ETH_SOCKET_REG(socket,ETH_SOCK_TXMEM), &sz, 1);
 658:.\Generated_Source\PSoC4/ETH.c **** #endif
 659:.\Generated_Source\PSoC4/ETH.c **** 	return sz;
 1353              		.loc 1 659 0
 1354 0044 3B1C     		mov	r3, r7
 1355 0046 0F33     		add	r3, r3, #15
 1356 0048 1B78     		ldrb	r3, [r3]
 660:.\Generated_Source\PSoC4/ETH.c **** }
 1357              		.loc 1 660 0
 1358 004a 181C     		mov	r0, r3
 1359 004c BD46     		mov	sp, r7
 1360 004e 04B0     		add	sp, sp, #16
 1361              		@ sp needed for prologue
 1362 0050 80BD     		pop	{r7, pc}
 1363              		.cfi_endproc
 1364              	.LFE20:
 1365              		.size	ETH_GetSocketTxMemSize, .-ETH_GetSocketTxMemSize
 1366 0052 C046     		.section	.text.ETH_SetSocketMode,"ax",%progbits
 1367              		.align	2
 1368              		.global	ETH_SetSocketMode
 1369              		.code	16
 1370              		.thumb_func
 1371              		.type	ETH_SetSocketMode, %function
 1372              	ETH_SetSocketMode:
 1373              	.LFB21:
 661:.\Generated_Source\PSoC4/ETH.c **** 
 662:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 663:.\Generated_Source\PSoC4/ETH.c **** /* End Section */
 664:.\Generated_Source\PSoC4/ETH.c **** #endif
 665:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 666:.\Generated_Source\PSoC4/ETH.c **** /* Socket Registers */
 667:.\Generated_Source\PSoC4/ETH.c **** #if (1)
 668:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 669:.\Generated_Source\PSoC4/ETH.c **** /**
 670:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket mode register
 671:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 672:.\Generated_Source\PSoC4/ETH.c ****  * \param mode the value to be written to the register
 673:.\Generated_Source\PSoC4/ETH.c ****  */
 674:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketMode(uint8 socket, uint8 mode)
 675:.\Generated_Source\PSoC4/ETH.c **** {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 37


 1374              		.loc 1 675 0
 1375              		.cfi_startproc
 1376 0000 80B5     		push	{r7, lr}
 1377              	.LCFI61:
 1378              		.cfi_def_cfa_offset 8
 1379              		.cfi_offset 7, -8
 1380              		.cfi_offset 14, -4
 1381 0002 82B0     		sub	sp, sp, #8
 1382              	.LCFI62:
 1383              		.cfi_def_cfa_offset 16
 1384 0004 00AF     		add	r7, sp, #0
 1385              	.LCFI63:
 1386              		.cfi_def_cfa_register 7
 1387 0006 0A1C     		mov	r2, r1
 1388 0008 FB1D     		add	r3, r7, #7
 1389 000a 011C     		add	r1, r0, #0
 1390 000c 1970     		strb	r1, [r3]
 1391 000e BB1D     		add	r3, r7, #6
 1392 0010 1A70     		strb	r2, [r3]
 676:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite((ETH_SOCKET_REG(socket, ETH_SOCK_MR)),(uint8*)&(mode), 1);
 1393              		.loc 1 676 0
 1394 0012 FB1D     		add	r3, r7, #7
 1395 0014 1B78     		ldrb	r3, [r3]
 1396 0016 9BB2     		uxth	r3, r3
 1397 0018 1B02     		lsl	r3, r3, #8
 1398 001a 9BB2     		uxth	r3, r3
 1399 001c 8022     		mov	r2, #128
 1400 001e D200     		lsl	r2, r2, #3
 1401 0020 9B18     		add	r3, r3, r2
 1402 0022 9AB2     		uxth	r2, r3
 1403 0024 BB1D     		add	r3, r7, #6
 1404 0026 101C     		mov	r0, r2
 1405 0028 191C     		mov	r1, r3
 1406 002a 0122     		mov	r2, #1
 1407 002c FFF7FEFF 		bl	ETH_ChipWrite
 677:.\Generated_Source\PSoC4/ETH.c **** }
 1408              		.loc 1 677 0
 1409 0030 BD46     		mov	sp, r7
 1410 0032 02B0     		add	sp, sp, #8
 1411              		@ sp needed for prologue
 1412 0034 80BD     		pop	{r7, pc}
 1413              		.cfi_endproc
 1414              	.LFE21:
 1415              		.size	ETH_SetSocketMode, .-ETH_SetSocketMode
 1416 0036 C046     		.section	.text.ETH_SetSocketCommand,"ax",%progbits
 1417              		.align	2
 1418              		.global	ETH_SetSocketCommand
 1419              		.code	16
 1420              		.thumb_func
 1421              		.type	ETH_SetSocketCommand, %function
 1422              	ETH_SetSocketCommand:
 1423              	.LFB22:
 678:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 679:.\Generated_Source\PSoC4/ETH.c **** /**
 680:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket command register
 681:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 682:.\Generated_Source\PSoC4/ETH.c ****  * \param cmd the value to be written to the register
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 38


 683:.\Generated_Source\PSoC4/ETH.c ****  */
 684:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketCommand(uint8 socket, uint8 cmd)
 685:.\Generated_Source\PSoC4/ETH.c **** {
 1424              		.loc 1 685 0
 1425              		.cfi_startproc
 1426 0000 80B5     		push	{r7, lr}
 1427              	.LCFI64:
 1428              		.cfi_def_cfa_offset 8
 1429              		.cfi_offset 7, -8
 1430              		.cfi_offset 14, -4
 1431 0002 82B0     		sub	sp, sp, #8
 1432              	.LCFI65:
 1433              		.cfi_def_cfa_offset 16
 1434 0004 00AF     		add	r7, sp, #0
 1435              	.LCFI66:
 1436              		.cfi_def_cfa_register 7
 1437 0006 0A1C     		mov	r2, r1
 1438 0008 FB1D     		add	r3, r7, #7
 1439 000a 011C     		add	r1, r0, #0
 1440 000c 1970     		strb	r1, [r3]
 1441 000e BB1D     		add	r3, r7, #6
 1442 0010 1A70     		strb	r2, [r3]
 686:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite( (ETH_SOCKET_REG(socket, ETH_SOCK_CR)),(uint8*)&(cmd),1);
 1443              		.loc 1 686 0
 1444 0012 FB1D     		add	r3, r7, #7
 1445 0014 1B78     		ldrb	r3, [r3]
 1446 0016 9BB2     		uxth	r3, r3
 1447 0018 1B02     		lsl	r3, r3, #8
 1448 001a 9BB2     		uxth	r3, r3
 1449 001c 054A     		ldr	r2, .L46
 1450 001e 9B18     		add	r3, r3, r2
 1451 0020 9AB2     		uxth	r2, r3
 1452 0022 BB1D     		add	r3, r7, #6
 1453 0024 101C     		mov	r0, r2
 1454 0026 191C     		mov	r1, r3
 1455 0028 0122     		mov	r2, #1
 1456 002a FFF7FEFF 		bl	ETH_ChipWrite
 687:.\Generated_Source\PSoC4/ETH.c **** }
 1457              		.loc 1 687 0
 1458 002e BD46     		mov	sp, r7
 1459 0030 02B0     		add	sp, sp, #8
 1460              		@ sp needed for prologue
 1461 0032 80BD     		pop	{r7, pc}
 1462              	.L47:
 1463              		.align	2
 1464              	.L46:
 1465 0034 01040000 		.word	1025
 1466              		.cfi_endproc
 1467              	.LFE22:
 1468              		.size	ETH_SetSocketCommand, .-ETH_SetSocketCommand
 1469              		.section	.text.ETH_GetSocketCommand,"ax",%progbits
 1470              		.align	2
 1471              		.global	ETH_GetSocketCommand
 1472              		.code	16
 1473              		.thumb_func
 1474              		.type	ETH_GetSocketCommand, %function
 1475              	ETH_GetSocketCommand:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 39


 1476              	.LFB23:
 688:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 689:.\Generated_Source\PSoC4/ETH.c **** /**
 690:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a value from the socket command register
 691:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 692:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 693:.\Generated_Source\PSoC4/ETH.c ****  */
 694:.\Generated_Source\PSoC4/ETH.c **** uint8 ETH_GetSocketCommand(uint8 socket )
 695:.\Generated_Source\PSoC4/ETH.c **** {
 1477              		.loc 1 695 0
 1478              		.cfi_startproc
 1479 0000 80B5     		push	{r7, lr}
 1480              	.LCFI67:
 1481              		.cfi_def_cfa_offset 8
 1482              		.cfi_offset 7, -8
 1483              		.cfi_offset 14, -4
 1484 0002 84B0     		sub	sp, sp, #16
 1485              	.LCFI68:
 1486              		.cfi_def_cfa_offset 24
 1487 0004 00AF     		add	r7, sp, #0
 1488              	.LCFI69:
 1489              		.cfi_def_cfa_register 7
 1490 0006 021C     		mov	r2, r0
 1491 0008 FB1D     		add	r3, r7, #7
 1492 000a 1A70     		strb	r2, [r3]
 696:.\Generated_Source\PSoC4/ETH.c **** 	uint8 cmd = 0xFF;
 1493              		.loc 1 696 0
 1494 000c 3B1C     		mov	r3, r7
 1495 000e 0F33     		add	r3, r3, #15
 1496 0010 FF22     		mov	r2, #255
 1497 0012 1A70     		strb	r2, [r3]
 697:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead( (ETH_SOCKET_REG(socket, ETH_SOCK_CR)),(uint8*)(&cmd),1);
 1498              		.loc 1 697 0
 1499 0014 FB1D     		add	r3, r7, #7
 1500 0016 1B78     		ldrb	r3, [r3]
 1501 0018 9BB2     		uxth	r3, r3
 1502 001a 1B02     		lsl	r3, r3, #8
 1503 001c 9BB2     		uxth	r3, r3
 1504 001e 084A     		ldr	r2, .L50
 1505 0020 9B18     		add	r3, r3, r2
 1506 0022 9AB2     		uxth	r2, r3
 1507 0024 3B1C     		mov	r3, r7
 1508 0026 0F33     		add	r3, r3, #15
 1509 0028 101C     		mov	r0, r2
 1510 002a 191C     		mov	r1, r3
 1511 002c 0122     		mov	r2, #1
 1512 002e FFF7FEFF 		bl	ETH_ChipRead
 698:.\Generated_Source\PSoC4/ETH.c **** 	return cmd;
 1513              		.loc 1 698 0
 1514 0032 3B1C     		mov	r3, r7
 1515 0034 0F33     		add	r3, r3, #15
 1516 0036 1B78     		ldrb	r3, [r3]
 699:.\Generated_Source\PSoC4/ETH.c **** }
 1517              		.loc 1 699 0
 1518 0038 181C     		mov	r0, r3
 1519 003a BD46     		mov	sp, r7
 1520 003c 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 40


 1521              		@ sp needed for prologue
 1522 003e 80BD     		pop	{r7, pc}
 1523              	.L51:
 1524              		.align	2
 1525              	.L50:
 1526 0040 01040000 		.word	1025
 1527              		.cfi_endproc
 1528              	.LFE23:
 1529              		.size	ETH_GetSocketCommand, .-ETH_GetSocketCommand
 1530              		.section	.text.ETH_SetSocketIR,"ax",%progbits
 1531              		.align	2
 1532              		.global	ETH_SetSocketIR
 1533              		.code	16
 1534              		.thumb_func
 1535              		.type	ETH_SetSocketIR, %function
 1536              	ETH_SetSocketIR:
 1537              	.LFB24:
 700:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 701:.\Generated_Source\PSoC4/ETH.c **** /**
 702:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket interrupt register
 703:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 704:.\Generated_Source\PSoC4/ETH.c ****  * \param ir the value to be written to the register
 705:.\Generated_Source\PSoC4/ETH.c ****  */
 706:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketIR(uint8 socket, uint8 ir)
 707:.\Generated_Source\PSoC4/ETH.c **** {
 1538              		.loc 1 707 0
 1539              		.cfi_startproc
 1540 0000 80B5     		push	{r7, lr}
 1541              	.LCFI70:
 1542              		.cfi_def_cfa_offset 8
 1543              		.cfi_offset 7, -8
 1544              		.cfi_offset 14, -4
 1545 0002 82B0     		sub	sp, sp, #8
 1546              	.LCFI71:
 1547              		.cfi_def_cfa_offset 16
 1548 0004 00AF     		add	r7, sp, #0
 1549              	.LCFI72:
 1550              		.cfi_def_cfa_register 7
 1551 0006 0A1C     		mov	r2, r1
 1552 0008 FB1D     		add	r3, r7, #7
 1553 000a 011C     		add	r1, r0, #0
 1554 000c 1970     		strb	r1, [r3]
 1555 000e BB1D     		add	r3, r7, #6
 1556 0010 1A70     		strb	r2, [r3]
 708:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite( (ETH_SOCKET_REG(socket, ETH_SOCK_IR)), (uint8*)&(ir), 1);
 1557              		.loc 1 708 0
 1558 0012 FB1D     		add	r3, r7, #7
 1559 0014 1B78     		ldrb	r3, [r3]
 1560 0016 9BB2     		uxth	r3, r3
 1561 0018 1B02     		lsl	r3, r3, #8
 1562 001a 9BB2     		uxth	r3, r3
 1563 001c 054A     		ldr	r2, .L53
 1564 001e 9B18     		add	r3, r3, r2
 1565 0020 9AB2     		uxth	r2, r3
 1566 0022 BB1D     		add	r3, r7, #6
 1567 0024 101C     		mov	r0, r2
 1568 0026 191C     		mov	r1, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 41


 1569 0028 0122     		mov	r2, #1
 1570 002a FFF7FEFF 		bl	ETH_ChipWrite
 709:.\Generated_Source\PSoC4/ETH.c **** }
 1571              		.loc 1 709 0
 1572 002e BD46     		mov	sp, r7
 1573 0030 02B0     		add	sp, sp, #8
 1574              		@ sp needed for prologue
 1575 0032 80BD     		pop	{r7, pc}
 1576              	.L54:
 1577              		.align	2
 1578              	.L53:
 1579 0034 02040000 		.word	1026
 1580              		.cfi_endproc
 1581              	.LFE24:
 1582              		.size	ETH_SetSocketIR, .-ETH_SetSocketIR
 1583              		.section	.text.ETH_GetSocketIR,"ax",%progbits
 1584              		.align	2
 1585              		.global	ETH_GetSocketIR
 1586              		.code	16
 1587              		.thumb_func
 1588              		.type	ETH_GetSocketIR, %function
 1589              	ETH_GetSocketIR:
 1590              	.LFB25:
 710:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 711:.\Generated_Source\PSoC4/ETH.c **** /**
 712:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a value from the socket interrupt register
 713:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 714:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 715:.\Generated_Source\PSoC4/ETH.c ****  */
 716:.\Generated_Source\PSoC4/ETH.c **** uint8 ETH_GetSocketIR(uint8 socket)
 717:.\Generated_Source\PSoC4/ETH.c **** {	
 1591              		.loc 1 717 0
 1592              		.cfi_startproc
 1593 0000 80B5     		push	{r7, lr}
 1594              	.LCFI73:
 1595              		.cfi_def_cfa_offset 8
 1596              		.cfi_offset 7, -8
 1597              		.cfi_offset 14, -4
 1598 0002 84B0     		sub	sp, sp, #16
 1599              	.LCFI74:
 1600              		.cfi_def_cfa_offset 24
 1601 0004 00AF     		add	r7, sp, #0
 1602              	.LCFI75:
 1603              		.cfi_def_cfa_register 7
 1604 0006 021C     		mov	r2, r0
 1605 0008 FB1D     		add	r3, r7, #7
 1606 000a 1A70     		strb	r2, [r3]
 718:.\Generated_Source\PSoC4/ETH.c **** 	uint8 ir = 0xFF;
 1607              		.loc 1 718 0
 1608 000c 3B1C     		mov	r3, r7
 1609 000e 0F33     		add	r3, r3, #15
 1610 0010 FF22     		mov	r2, #255
 1611 0012 1A70     		strb	r2, [r3]
 719:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead((ETH_SOCKET_REG(socket, ETH_SOCK_IR)), (uint8*)&(ir), 1);
 1612              		.loc 1 719 0
 1613 0014 FB1D     		add	r3, r7, #7
 1614 0016 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 42


 1615 0018 9BB2     		uxth	r3, r3
 1616 001a 1B02     		lsl	r3, r3, #8
 1617 001c 9BB2     		uxth	r3, r3
 1618 001e 084A     		ldr	r2, .L57
 1619 0020 9B18     		add	r3, r3, r2
 1620 0022 9AB2     		uxth	r2, r3
 1621 0024 3B1C     		mov	r3, r7
 1622 0026 0F33     		add	r3, r3, #15
 1623 0028 101C     		mov	r0, r2
 1624 002a 191C     		mov	r1, r3
 1625 002c 0122     		mov	r2, #1
 1626 002e FFF7FEFF 		bl	ETH_ChipRead
 720:.\Generated_Source\PSoC4/ETH.c **** 	return ir;
 1627              		.loc 1 720 0
 1628 0032 3B1C     		mov	r3, r7
 1629 0034 0F33     		add	r3, r3, #15
 1630 0036 1B78     		ldrb	r3, [r3]
 721:.\Generated_Source\PSoC4/ETH.c **** }
 1631              		.loc 1 721 0
 1632 0038 181C     		mov	r0, r3
 1633 003a BD46     		mov	sp, r7
 1634 003c 04B0     		add	sp, sp, #16
 1635              		@ sp needed for prologue
 1636 003e 80BD     		pop	{r7, pc}
 1637              	.L58:
 1638              		.align	2
 1639              	.L57:
 1640 0040 02040000 		.word	1026
 1641              		.cfi_endproc
 1642              	.LFE25:
 1643              		.size	ETH_GetSocketIR, .-ETH_GetSocketIR
 1644              		.section	.text.ETH_GetSocketStatus,"ax",%progbits
 1645              		.align	2
 1646              		.global	ETH_GetSocketStatus
 1647              		.code	16
 1648              		.thumb_func
 1649              		.type	ETH_GetSocketStatus, %function
 1650              	ETH_GetSocketStatus:
 1651              	.LFB26:
 722:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 723:.\Generated_Source\PSoC4/ETH.c **** /**
 724:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a value from the socket status register
 725:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 726:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 727:.\Generated_Source\PSoC4/ETH.c ****  */
 728:.\Generated_Source\PSoC4/ETH.c **** uint8 ETH_GetSocketStatus(uint8 socket)
 729:.\Generated_Source\PSoC4/ETH.c **** { 
 1652              		.loc 1 729 0
 1653              		.cfi_startproc
 1654 0000 80B5     		push	{r7, lr}
 1655              	.LCFI76:
 1656              		.cfi_def_cfa_offset 8
 1657              		.cfi_offset 7, -8
 1658              		.cfi_offset 14, -4
 1659 0002 84B0     		sub	sp, sp, #16
 1660              	.LCFI77:
 1661              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 43


 1662 0004 00AF     		add	r7, sp, #0
 1663              	.LCFI78:
 1664              		.cfi_def_cfa_register 7
 1665 0006 021C     		mov	r2, r0
 1666 0008 FB1D     		add	r3, r7, #7
 1667 000a 1A70     		strb	r2, [r3]
 730:.\Generated_Source\PSoC4/ETH.c **** 	uint8 status = 0xFF;
 1668              		.loc 1 730 0
 1669 000c 3B1C     		mov	r3, r7
 1670 000e 0F33     		add	r3, r3, #15
 1671 0010 FF22     		mov	r2, #255
 1672 0012 1A70     		strb	r2, [r3]
 731:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead(ETH_SOCKET_REG(socket, ETH_SOCK_SR), &status, 1);
 1673              		.loc 1 731 0
 1674 0014 FB1D     		add	r3, r7, #7
 1675 0016 1B78     		ldrb	r3, [r3]
 1676 0018 9BB2     		uxth	r3, r3
 1677 001a 1B02     		lsl	r3, r3, #8
 1678 001c 9BB2     		uxth	r3, r3
 1679 001e 084A     		ldr	r2, .L61
 1680 0020 9B18     		add	r3, r3, r2
 1681 0022 9AB2     		uxth	r2, r3
 1682 0024 3B1C     		mov	r3, r7
 1683 0026 0F33     		add	r3, r3, #15
 1684 0028 101C     		mov	r0, r2
 1685 002a 191C     		mov	r1, r3
 1686 002c 0122     		mov	r2, #1
 1687 002e FFF7FEFF 		bl	ETH_ChipRead
 732:.\Generated_Source\PSoC4/ETH.c **** 	return status;
 1688              		.loc 1 732 0
 1689 0032 3B1C     		mov	r3, r7
 1690 0034 0F33     		add	r3, r3, #15
 1691 0036 1B78     		ldrb	r3, [r3]
 733:.\Generated_Source\PSoC4/ETH.c **** }
 1692              		.loc 1 733 0
 1693 0038 181C     		mov	r0, r3
 1694 003a BD46     		mov	sp, r7
 1695 003c 04B0     		add	sp, sp, #16
 1696              		@ sp needed for prologue
 1697 003e 80BD     		pop	{r7, pc}
 1698              	.L62:
 1699              		.align	2
 1700              	.L61:
 1701 0040 03040000 		.word	1027
 1702              		.cfi_endproc
 1703              	.LFE26:
 1704              		.size	ETH_GetSocketStatus, .-ETH_GetSocketStatus
 1705              		.section	.text.ETH_SetSocketSourcePort,"ax",%progbits
 1706              		.align	2
 1707              		.global	ETH_SetSocketSourcePort
 1708              		.code	16
 1709              		.thumb_func
 1710              		.type	ETH_SetSocketSourcePort, %function
 1711              	ETH_SetSocketSourcePort:
 1712              	.LFB27:
 734:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 735:.\Generated_Source\PSoC4/ETH.c **** /**
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 44


 736:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket source port register
 737:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 738:.\Generated_Source\PSoC4/ETH.c ****  * \param port the value to be written to the register
 739:.\Generated_Source\PSoC4/ETH.c ****  */
 740:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketSourcePort(uint8 socket, uint16 port)
 741:.\Generated_Source\PSoC4/ETH.c **** {
 1713              		.loc 1 741 0
 1714              		.cfi_startproc
 1715 0000 80B5     		push	{r7, lr}
 1716              	.LCFI79:
 1717              		.cfi_def_cfa_offset 8
 1718              		.cfi_offset 7, -8
 1719              		.cfi_offset 14, -4
 1720 0002 82B0     		sub	sp, sp, #8
 1721              	.LCFI80:
 1722              		.cfi_def_cfa_offset 16
 1723 0004 00AF     		add	r7, sp, #0
 1724              	.LCFI81:
 1725              		.cfi_def_cfa_register 7
 1726 0006 0A1C     		mov	r2, r1
 1727 0008 FB1D     		add	r3, r7, #7
 1728 000a 011C     		add	r1, r0, #0
 1729 000c 1970     		strb	r1, [r3]
 1730 000e 3B1D     		add	r3, r7, #4
 1731 0010 1A80     		strh	r2, [r3]
 742:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite16(ETH_SOCKET_REG(socket, ETH_SOCK_PORT),port);
 1732              		.loc 1 742 0
 1733 0012 FB1D     		add	r3, r7, #7
 1734 0014 1B78     		ldrb	r3, [r3]
 1735 0016 9BB2     		uxth	r3, r3
 1736 0018 1B02     		lsl	r3, r3, #8
 1737 001a 9BB2     		uxth	r3, r3
 1738 001c 054A     		ldr	r2, .L64
 1739 001e 9B18     		add	r3, r3, r2
 1740 0020 9AB2     		uxth	r2, r3
 1741 0022 3B1D     		add	r3, r7, #4
 1742 0024 1B88     		ldrh	r3, [r3]
 1743 0026 101C     		mov	r0, r2
 1744 0028 191C     		mov	r1, r3
 1745 002a FFF7FEFF 		bl	ETH_ChipWrite16
 743:.\Generated_Source\PSoC4/ETH.c **** }
 1746              		.loc 1 743 0
 1747 002e BD46     		mov	sp, r7
 1748 0030 02B0     		add	sp, sp, #8
 1749              		@ sp needed for prologue
 1750 0032 80BD     		pop	{r7, pc}
 1751              	.L65:
 1752              		.align	2
 1753              	.L64:
 1754 0034 04040000 		.word	1028
 1755              		.cfi_endproc
 1756              	.LFE27:
 1757              		.size	ETH_SetSocketSourcePort, .-ETH_SetSocketSourcePort
 1758              		.section	.text.ETH_SetSocketDestMAC,"ax",%progbits
 1759              		.align	2
 1760              		.global	ETH_SetSocketDestMAC
 1761              		.code	16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 45


 1762              		.thumb_func
 1763              		.type	ETH_SetSocketDestMAC, %function
 1764              	ETH_SetSocketDestMAC:
 1765              	.LFB28:
 744:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 745:.\Generated_Source\PSoC4/ETH.c **** /**
 746:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket Destination hardware address register
 747:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 748:.\Generated_Source\PSoC4/ETH.c ****  * \param *mac poitner to the array holding the values to be written to the register
 749:.\Generated_Source\PSoC4/ETH.c ****  */
 750:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketDestMAC(uint8 socket, uint8* mac)
 751:.\Generated_Source\PSoC4/ETH.c **** { 
 1766              		.loc 1 751 0
 1767              		.cfi_startproc
 1768 0000 80B5     		push	{r7, lr}
 1769              	.LCFI82:
 1770              		.cfi_def_cfa_offset 8
 1771              		.cfi_offset 7, -8
 1772              		.cfi_offset 14, -4
 1773 0002 82B0     		sub	sp, sp, #8
 1774              	.LCFI83:
 1775              		.cfi_def_cfa_offset 16
 1776 0004 00AF     		add	r7, sp, #0
 1777              	.LCFI84:
 1778              		.cfi_def_cfa_register 7
 1779 0006 021C     		mov	r2, r0
 1780 0008 3960     		str	r1, [r7]
 1781 000a FB1D     		add	r3, r7, #7
 1782 000c 1A70     		strb	r2, [r3]
 752:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite( ETH_SOCKET_REG(socket, ETH_SOCK_DHAR), &mac[0], 6);
 1783              		.loc 1 752 0
 1784 000e FB1D     		add	r3, r7, #7
 1785 0010 1B78     		ldrb	r3, [r3]
 1786 0012 9BB2     		uxth	r3, r3
 1787 0014 1B02     		lsl	r3, r3, #8
 1788 0016 9BB2     		uxth	r3, r3
 1789 0018 054A     		ldr	r2, .L67
 1790 001a 9B18     		add	r3, r3, r2
 1791 001c 9AB2     		uxth	r2, r3
 1792 001e 3B68     		ldr	r3, [r7]
 1793 0020 101C     		mov	r0, r2
 1794 0022 191C     		mov	r1, r3
 1795 0024 0622     		mov	r2, #6
 1796 0026 FFF7FEFF 		bl	ETH_ChipWrite
 753:.\Generated_Source\PSoC4/ETH.c **** }
 1797              		.loc 1 753 0
 1798 002a BD46     		mov	sp, r7
 1799 002c 02B0     		add	sp, sp, #8
 1800              		@ sp needed for prologue
 1801 002e 80BD     		pop	{r7, pc}
 1802              	.L68:
 1803              		.align	2
 1804              	.L67:
 1805 0030 06040000 		.word	1030
 1806              		.cfi_endproc
 1807              	.LFE28:
 1808              		.size	ETH_SetSocketDestMAC, .-ETH_SetSocketDestMAC
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 46


 1809              		.section	.text.ETH_SetSocketDestIP,"ax",%progbits
 1810              		.align	2
 1811              		.global	ETH_SetSocketDestIP
 1812              		.code	16
 1813              		.thumb_func
 1814              		.type	ETH_SetSocketDestIP, %function
 1815              	ETH_SetSocketDestIP:
 1816              	.LFB29:
 754:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 755:.\Generated_Source\PSoC4/ETH.c **** /**
 756:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket Destination IP address register
 757:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 758:.\Generated_Source\PSoC4/ETH.c ****  * \param ip the value to be written to the register
 759:.\Generated_Source\PSoC4/ETH.c ****  */
 760:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketDestIP(uint8 socket, uint32 ip)
 761:.\Generated_Source\PSoC4/ETH.c **** { 
 1817              		.loc 1 761 0
 1818              		.cfi_startproc
 1819 0000 80B5     		push	{r7, lr}
 1820              	.LCFI85:
 1821              		.cfi_def_cfa_offset 8
 1822              		.cfi_offset 7, -8
 1823              		.cfi_offset 14, -4
 1824 0002 82B0     		sub	sp, sp, #8
 1825              	.LCFI86:
 1826              		.cfi_def_cfa_offset 16
 1827 0004 00AF     		add	r7, sp, #0
 1828              	.LCFI87:
 1829              		.cfi_def_cfa_register 7
 1830 0006 021C     		mov	r2, r0
 1831 0008 3960     		str	r1, [r7]
 1832 000a FB1D     		add	r3, r7, #7
 1833 000c 1A70     		strb	r2, [r3]
 762:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite(ETH_SOCKET_REG(socket, ETH_SOCK_DIPR), (uint8*)&ip, 4);
 1834              		.loc 1 762 0
 1835 000e FB1D     		add	r3, r7, #7
 1836 0010 1B78     		ldrb	r3, [r3]
 1837 0012 9BB2     		uxth	r3, r3
 1838 0014 1B02     		lsl	r3, r3, #8
 1839 0016 9BB2     		uxth	r3, r3
 1840 0018 054A     		ldr	r2, .L70
 1841 001a 9B18     		add	r3, r3, r2
 1842 001c 9AB2     		uxth	r2, r3
 1843 001e 3B1C     		mov	r3, r7
 1844 0020 101C     		mov	r0, r2
 1845 0022 191C     		mov	r1, r3
 1846 0024 0422     		mov	r2, #4
 1847 0026 FFF7FEFF 		bl	ETH_ChipWrite
 763:.\Generated_Source\PSoC4/ETH.c **** }
 1848              		.loc 1 763 0
 1849 002a BD46     		mov	sp, r7
 1850 002c 02B0     		add	sp, sp, #8
 1851              		@ sp needed for prologue
 1852 002e 80BD     		pop	{r7, pc}
 1853              	.L71:
 1854              		.align	2
 1855              	.L70:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 47


 1856 0030 0C040000 		.word	1036
 1857              		.cfi_endproc
 1858              	.LFE29:
 1859              		.size	ETH_SetSocketDestIP, .-ETH_SetSocketDestIP
 1860              		.section	.text.ETH_SetSocketDestPort,"ax",%progbits
 1861              		.align	2
 1862              		.global	ETH_SetSocketDestPort
 1863              		.code	16
 1864              		.thumb_func
 1865              		.type	ETH_SetSocketDestPort, %function
 1866              	ETH_SetSocketDestPort:
 1867              	.LFB30:
 764:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 765:.\Generated_Source\PSoC4/ETH.c **** /**
 766:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket destination port register
 767:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 768:.\Generated_Source\PSoC4/ETH.c ****  * \param port the value to be written to the register
 769:.\Generated_Source\PSoC4/ETH.c ****  */
 770:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketDestPort(uint8 socket, uint16 port)
 771:.\Generated_Source\PSoC4/ETH.c **** { 
 1868              		.loc 1 771 0
 1869              		.cfi_startproc
 1870 0000 80B5     		push	{r7, lr}
 1871              	.LCFI88:
 1872              		.cfi_def_cfa_offset 8
 1873              		.cfi_offset 7, -8
 1874              		.cfi_offset 14, -4
 1875 0002 82B0     		sub	sp, sp, #8
 1876              	.LCFI89:
 1877              		.cfi_def_cfa_offset 16
 1878 0004 00AF     		add	r7, sp, #0
 1879              	.LCFI90:
 1880              		.cfi_def_cfa_register 7
 1881 0006 0A1C     		mov	r2, r1
 1882 0008 FB1D     		add	r3, r7, #7
 1883 000a 011C     		add	r1, r0, #0
 1884 000c 1970     		strb	r1, [r3]
 1885 000e 3B1D     		add	r3, r7, #4
 1886 0010 1A80     		strh	r2, [r3]
 772:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite16( ETH_SOCKET_REG(socket, ETH_SOCK_DPORT), port);
 1887              		.loc 1 772 0
 1888 0012 FB1D     		add	r3, r7, #7
 1889 0014 1B78     		ldrb	r3, [r3]
 1890 0016 9BB2     		uxth	r3, r3
 1891 0018 1B02     		lsl	r3, r3, #8
 1892 001a 9BB2     		uxth	r3, r3
 1893 001c 8222     		mov	r2, #130
 1894 001e D200     		lsl	r2, r2, #3
 1895 0020 9B18     		add	r3, r3, r2
 1896 0022 9AB2     		uxth	r2, r3
 1897 0024 3B1D     		add	r3, r7, #4
 1898 0026 1B88     		ldrh	r3, [r3]
 1899 0028 101C     		mov	r0, r2
 1900 002a 191C     		mov	r1, r3
 1901 002c FFF7FEFF 		bl	ETH_ChipWrite16
 773:.\Generated_Source\PSoC4/ETH.c **** }
 1902              		.loc 1 773 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 48


 1903 0030 BD46     		mov	sp, r7
 1904 0032 02B0     		add	sp, sp, #8
 1905              		@ sp needed for prologue
 1906 0034 80BD     		pop	{r7, pc}
 1907              		.cfi_endproc
 1908              	.LFE30:
 1909              		.size	ETH_SetSocketDestPort, .-ETH_SetSocketDestPort
 1910 0036 C046     		.section	.text.ETH_GetSocketTxFree,"ax",%progbits
 1911              		.align	2
 1912              		.global	ETH_GetSocketTxFree
 1913              		.code	16
 1914              		.thumb_func
 1915              		.type	ETH_GetSocketTxFree, %function
 1916              	ETH_GetSocketTxFree:
 1917              	.LFB31:
 774:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 775:.\Generated_Source\PSoC4/ETH.c **** /**
 776:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a value from the socket Tx free size register
 777:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 778:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 779:.\Generated_Source\PSoC4/ETH.c ****  */
 780:.\Generated_Source\PSoC4/ETH.c **** uint16 ETH_GetSocketTxFree(uint8 socket)
 781:.\Generated_Source\PSoC4/ETH.c **** { 
 1918              		.loc 1 781 0
 1919              		.cfi_startproc
 1920 0000 80B5     		push	{r7, lr}
 1921              	.LCFI91:
 1922              		.cfi_def_cfa_offset 8
 1923              		.cfi_offset 7, -8
 1924              		.cfi_offset 14, -4
 1925 0002 82B0     		sub	sp, sp, #8
 1926              	.LCFI92:
 1927              		.cfi_def_cfa_offset 16
 1928 0004 00AF     		add	r7, sp, #0
 1929              	.LCFI93:
 1930              		.cfi_def_cfa_register 7
 1931 0006 021C     		mov	r2, r0
 1932 0008 FB1D     		add	r3, r7, #7
 1933 000a 1A70     		strb	r2, [r3]
 782:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_TXFSR));
 1934              		.loc 1 782 0
 1935 000c FB1D     		add	r3, r7, #7
 1936 000e 1B78     		ldrb	r3, [r3]
 1937 0010 9BB2     		uxth	r3, r3
 1938 0012 1B02     		lsl	r3, r3, #8
 1939 0014 9BB2     		uxth	r3, r3
 1940 0016 8422     		mov	r2, #132
 1941 0018 D200     		lsl	r2, r2, #3
 1942 001a 9B18     		add	r3, r3, r2
 1943 001c 9BB2     		uxth	r3, r3
 1944 001e 181C     		mov	r0, r3
 1945 0020 FFF7FEFF 		bl	ETH_ChipRead16
 1946 0024 031C     		mov	r3, r0
 783:.\Generated_Source\PSoC4/ETH.c **** }
 1947              		.loc 1 783 0
 1948 0026 181C     		mov	r0, r3
 1949 0028 BD46     		mov	sp, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 49


 1950 002a 02B0     		add	sp, sp, #8
 1951              		@ sp needed for prologue
 1952 002c 80BD     		pop	{r7, pc}
 1953              		.cfi_endproc
 1954              	.LFE31:
 1955              		.size	ETH_GetSocketTxFree, .-ETH_GetSocketTxFree
 1956 002e C046     		.section	.text.ETH_SetSocketTxWritePtr,"ax",%progbits
 1957              		.align	2
 1958              		.global	ETH_SetSocketTxWritePtr
 1959              		.code	16
 1960              		.thumb_func
 1961              		.type	ETH_SetSocketTxWritePtr, %function
 1962              	ETH_SetSocketTxWritePtr:
 1963              	.LFB32:
 784:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 785:.\Generated_Source\PSoC4/ETH.c **** /**
 786:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket tx write pointer register
 787:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 788:.\Generated_Source\PSoC4/ETH.c ****  * \param ptr the value to be written to the register
 789:.\Generated_Source\PSoC4/ETH.c ****  */
 790:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketTxWritePtr(uint8 socket, uint16 ptr)
 791:.\Generated_Source\PSoC4/ETH.c **** { 
 1964              		.loc 1 791 0
 1965              		.cfi_startproc
 1966 0000 80B5     		push	{r7, lr}
 1967              	.LCFI94:
 1968              		.cfi_def_cfa_offset 8
 1969              		.cfi_offset 7, -8
 1970              		.cfi_offset 14, -4
 1971 0002 82B0     		sub	sp, sp, #8
 1972              	.LCFI95:
 1973              		.cfi_def_cfa_offset 16
 1974 0004 00AF     		add	r7, sp, #0
 1975              	.LCFI96:
 1976              		.cfi_def_cfa_register 7
 1977 0006 0A1C     		mov	r2, r1
 1978 0008 FB1D     		add	r3, r7, #7
 1979 000a 011C     		add	r1, r0, #0
 1980 000c 1970     		strb	r1, [r3]
 1981 000e 3B1D     		add	r3, r7, #4
 1982 0010 1A80     		strh	r2, [r3]
 792:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite16(ETH_SOCKET_REG(socket, ETH_SOCK_TXWR),ptr);
 1983              		.loc 1 792 0
 1984 0012 FB1D     		add	r3, r7, #7
 1985 0014 1B78     		ldrb	r3, [r3]
 1986 0016 9BB2     		uxth	r3, r3
 1987 0018 1B02     		lsl	r3, r3, #8
 1988 001a 9BB2     		uxth	r3, r3
 1989 001c 054A     		ldr	r2, .L76
 1990 001e 9B18     		add	r3, r3, r2
 1991 0020 9AB2     		uxth	r2, r3
 1992 0022 3B1D     		add	r3, r7, #4
 1993 0024 1B88     		ldrh	r3, [r3]
 1994 0026 101C     		mov	r0, r2
 1995 0028 191C     		mov	r1, r3
 1996 002a FFF7FEFF 		bl	ETH_ChipWrite16
 793:.\Generated_Source\PSoC4/ETH.c **** }
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 50


 1997              		.loc 1 793 0
 1998 002e BD46     		mov	sp, r7
 1999 0030 02B0     		add	sp, sp, #8
 2000              		@ sp needed for prologue
 2001 0032 80BD     		pop	{r7, pc}
 2002              	.L77:
 2003              		.align	2
 2004              	.L76:
 2005 0034 24040000 		.word	1060
 2006              		.cfi_endproc
 2007              	.LFE32:
 2008              		.size	ETH_SetSocketTxWritePtr, .-ETH_SetSocketTxWritePtr
 2009              		.section	.text.ETH_GetSocketTxWritePtr,"ax",%progbits
 2010              		.align	2
 2011              		.global	ETH_GetSocketTxWritePtr
 2012              		.code	16
 2013              		.thumb_func
 2014              		.type	ETH_GetSocketTxWritePtr, %function
 2015              	ETH_GetSocketTxWritePtr:
 2016              	.LFB33:
 794:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 795:.\Generated_Source\PSoC4/ETH.c **** /**
 796:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a value from the socket tx buffer write pointer register
 797:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 798:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 799:.\Generated_Source\PSoC4/ETH.c ****  */
 800:.\Generated_Source\PSoC4/ETH.c **** uint16 ETH_GetSocketTxWritePtr(uint8 socket)
 801:.\Generated_Source\PSoC4/ETH.c **** { 
 2017              		.loc 1 801 0
 2018              		.cfi_startproc
 2019 0000 80B5     		push	{r7, lr}
 2020              	.LCFI97:
 2021              		.cfi_def_cfa_offset 8
 2022              		.cfi_offset 7, -8
 2023              		.cfi_offset 14, -4
 2024 0002 82B0     		sub	sp, sp, #8
 2025              	.LCFI98:
 2026              		.cfi_def_cfa_offset 16
 2027 0004 00AF     		add	r7, sp, #0
 2028              	.LCFI99:
 2029              		.cfi_def_cfa_register 7
 2030 0006 021C     		mov	r2, r0
 2031 0008 FB1D     		add	r3, r7, #7
 2032 000a 1A70     		strb	r2, [r3]
 802:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_TXWR));
 2033              		.loc 1 802 0
 2034 000c FB1D     		add	r3, r7, #7
 2035 000e 1B78     		ldrb	r3, [r3]
 2036 0010 9BB2     		uxth	r3, r3
 2037 0012 1B02     		lsl	r3, r3, #8
 2038 0014 9BB2     		uxth	r3, r3
 2039 0016 054A     		ldr	r2, .L80
 2040 0018 9B18     		add	r3, r3, r2
 2041 001a 9BB2     		uxth	r3, r3
 2042 001c 181C     		mov	r0, r3
 2043 001e FFF7FEFF 		bl	ETH_ChipRead16
 2044 0022 031C     		mov	r3, r0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 51


 803:.\Generated_Source\PSoC4/ETH.c **** }
 2045              		.loc 1 803 0
 2046 0024 181C     		mov	r0, r3
 2047 0026 BD46     		mov	sp, r7
 2048 0028 02B0     		add	sp, sp, #8
 2049              		@ sp needed for prologue
 2050 002a 80BD     		pop	{r7, pc}
 2051              	.L81:
 2052              		.align	2
 2053              	.L80:
 2054 002c 24040000 		.word	1060
 2055              		.cfi_endproc
 2056              	.LFE33:
 2057              		.size	ETH_GetSocketTxWritePtr, .-ETH_GetSocketTxWritePtr
 2058              		.section	.text.ETH_GetSocketRxSize,"ax",%progbits
 2059              		.align	2
 2060              		.global	ETH_GetSocketRxSize
 2061              		.code	16
 2062              		.thumb_func
 2063              		.type	ETH_GetSocketRxSize, %function
 2064              	ETH_GetSocketRxSize:
 2065              	.LFB34:
 804:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 805:.\Generated_Source\PSoC4/ETH.c **** /**
 806:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a value from the socket rx received data size register
 807:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 808:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 809:.\Generated_Source\PSoC4/ETH.c ****  */
 810:.\Generated_Source\PSoC4/ETH.c **** uint16 ETH_GetSocketRxSize(uint8 socket)
 811:.\Generated_Source\PSoC4/ETH.c **** {
 2066              		.loc 1 811 0
 2067              		.cfi_startproc
 2068 0000 80B5     		push	{r7, lr}
 2069              	.LCFI100:
 2070              		.cfi_def_cfa_offset 8
 2071              		.cfi_offset 7, -8
 2072              		.cfi_offset 14, -4
 2073 0002 82B0     		sub	sp, sp, #8
 2074              	.LCFI101:
 2075              		.cfi_def_cfa_offset 16
 2076 0004 00AF     		add	r7, sp, #0
 2077              	.LCFI102:
 2078              		.cfi_def_cfa_register 7
 2079 0006 021C     		mov	r2, r0
 2080 0008 FB1D     		add	r3, r7, #7
 2081 000a 1A70     		strb	r2, [r3]
 812:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_RXRSR));
 2082              		.loc 1 812 0
 2083 000c FB1D     		add	r3, r7, #7
 2084 000e 1B78     		ldrb	r3, [r3]
 2085 0010 9BB2     		uxth	r3, r3
 2086 0012 1B02     		lsl	r3, r3, #8
 2087 0014 9BB2     		uxth	r3, r3
 2088 0016 054A     		ldr	r2, .L84
 2089 0018 9B18     		add	r3, r3, r2
 2090 001a 9BB2     		uxth	r3, r3
 2091 001c 181C     		mov	r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 52


 2092 001e FFF7FEFF 		bl	ETH_ChipRead16
 2093 0022 031C     		mov	r3, r0
 813:.\Generated_Source\PSoC4/ETH.c **** }
 2094              		.loc 1 813 0
 2095 0024 181C     		mov	r0, r3
 2096 0026 BD46     		mov	sp, r7
 2097 0028 02B0     		add	sp, sp, #8
 2098              		@ sp needed for prologue
 2099 002a 80BD     		pop	{r7, pc}
 2100              	.L85:
 2101              		.align	2
 2102              	.L84:
 2103 002c 26040000 		.word	1062
 2104              		.cfi_endproc
 2105              	.LFE34:
 2106              		.size	ETH_GetSocketRxSize, .-ETH_GetSocketRxSize
 2107              		.section	.text.ETH_SetSocketRxReadPtr,"ax",%progbits
 2108              		.align	2
 2109              		.global	ETH_SetSocketRxReadPtr
 2110              		.code	16
 2111              		.thumb_func
 2112              		.type	ETH_SetSocketRxReadPtr, %function
 2113              	ETH_SetSocketRxReadPtr:
 2114              	.LFB35:
 814:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 815:.\Generated_Source\PSoC4/ETH.c **** /**
 816:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket rx read pointer register
 817:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 818:.\Generated_Source\PSoC4/ETH.c ****  * \param ptr the value to be written to the register
 819:.\Generated_Source\PSoC4/ETH.c ****  */
 820:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketRxReadPtr(uint8 socket, uint16 ptr)
 821:.\Generated_Source\PSoC4/ETH.c **** { 
 2115              		.loc 1 821 0
 2116              		.cfi_startproc
 2117 0000 80B5     		push	{r7, lr}
 2118              	.LCFI103:
 2119              		.cfi_def_cfa_offset 8
 2120              		.cfi_offset 7, -8
 2121              		.cfi_offset 14, -4
 2122 0002 82B0     		sub	sp, sp, #8
 2123              	.LCFI104:
 2124              		.cfi_def_cfa_offset 16
 2125 0004 00AF     		add	r7, sp, #0
 2126              	.LCFI105:
 2127              		.cfi_def_cfa_register 7
 2128 0006 0A1C     		mov	r2, r1
 2129 0008 FB1D     		add	r3, r7, #7
 2130 000a 011C     		add	r1, r0, #0
 2131 000c 1970     		strb	r1, [r3]
 2132 000e 3B1D     		add	r3, r7, #4
 2133 0010 1A80     		strh	r2, [r3]
 822:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite16(ETH_SOCKET_REG(socket, ETH_SOCK_RXRD),ptr);
 2134              		.loc 1 822 0
 2135 0012 FB1D     		add	r3, r7, #7
 2136 0014 1B78     		ldrb	r3, [r3]
 2137 0016 9BB2     		uxth	r3, r3
 2138 0018 1B02     		lsl	r3, r3, #8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 53


 2139 001a 9BB2     		uxth	r3, r3
 2140 001c 8522     		mov	r2, #133
 2141 001e D200     		lsl	r2, r2, #3
 2142 0020 9B18     		add	r3, r3, r2
 2143 0022 9AB2     		uxth	r2, r3
 2144 0024 3B1D     		add	r3, r7, #4
 2145 0026 1B88     		ldrh	r3, [r3]
 2146 0028 101C     		mov	r0, r2
 2147 002a 191C     		mov	r1, r3
 2148 002c FFF7FEFF 		bl	ETH_ChipWrite16
 823:.\Generated_Source\PSoC4/ETH.c **** }
 2149              		.loc 1 823 0
 2150 0030 BD46     		mov	sp, r7
 2151 0032 02B0     		add	sp, sp, #8
 2152              		@ sp needed for prologue
 2153 0034 80BD     		pop	{r7, pc}
 2154              		.cfi_endproc
 2155              	.LFE35:
 2156              		.size	ETH_SetSocketRxReadPtr, .-ETH_SetSocketRxReadPtr
 2157 0036 C046     		.section	.text.ETH_GetSocketRxReadPtr,"ax",%progbits
 2158              		.align	2
 2159              		.global	ETH_GetSocketRxReadPtr
 2160              		.code	16
 2161              		.thumb_func
 2162              		.type	ETH_GetSocketRxReadPtr, %function
 2163              	ETH_GetSocketRxReadPtr:
 2164              	.LFB36:
 824:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 825:.\Generated_Source\PSoC4/ETH.c **** /**
 826:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a value from the socket rx buffer read pointer register
 827:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 828:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 829:.\Generated_Source\PSoC4/ETH.c ****  */
 830:.\Generated_Source\PSoC4/ETH.c **** uint16 ETH_GetSocketRxReadPtr(uint8 socket)
 831:.\Generated_Source\PSoC4/ETH.c **** { 
 2165              		.loc 1 831 0
 2166              		.cfi_startproc
 2167 0000 80B5     		push	{r7, lr}
 2168              	.LCFI106:
 2169              		.cfi_def_cfa_offset 8
 2170              		.cfi_offset 7, -8
 2171              		.cfi_offset 14, -4
 2172 0002 82B0     		sub	sp, sp, #8
 2173              	.LCFI107:
 2174              		.cfi_def_cfa_offset 16
 2175 0004 00AF     		add	r7, sp, #0
 2176              	.LCFI108:
 2177              		.cfi_def_cfa_register 7
 2178 0006 021C     		mov	r2, r0
 2179 0008 FB1D     		add	r3, r7, #7
 2180 000a 1A70     		strb	r2, [r3]
 832:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_RXRD));
 2181              		.loc 1 832 0
 2182 000c FB1D     		add	r3, r7, #7
 2183 000e 1B78     		ldrb	r3, [r3]
 2184 0010 9BB2     		uxth	r3, r3
 2185 0012 1B02     		lsl	r3, r3, #8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 54


 2186 0014 9BB2     		uxth	r3, r3
 2187 0016 8522     		mov	r2, #133
 2188 0018 D200     		lsl	r2, r2, #3
 2189 001a 9B18     		add	r3, r3, r2
 2190 001c 9BB2     		uxth	r3, r3
 2191 001e 181C     		mov	r0, r3
 2192 0020 FFF7FEFF 		bl	ETH_ChipRead16
 2193 0024 031C     		mov	r3, r0
 833:.\Generated_Source\PSoC4/ETH.c **** }
 2194              		.loc 1 833 0
 2195 0026 181C     		mov	r0, r3
 2196 0028 BD46     		mov	sp, r7
 2197 002a 02B0     		add	sp, sp, #8
 2198              		@ sp needed for prologue
 2199 002c 80BD     		pop	{r7, pc}
 2200              		.cfi_endproc
 2201              	.LFE36:
 2202              		.size	ETH_GetSocketRxReadPtr, .-ETH_GetSocketRxReadPtr
 2203 002e C046     		.section	.text.ETH_SetSocketRxWritePtr,"ax",%progbits
 2204              		.align	2
 2205              		.global	ETH_SetSocketRxWritePtr
 2206              		.code	16
 2207              		.thumb_func
 2208              		.type	ETH_SetSocketRxWritePtr, %function
 2209              	ETH_SetSocketRxWritePtr:
 2210              	.LFB37:
 834:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 835:.\Generated_Source\PSoC4/ETH.c **** /**
 836:.\Generated_Source\PSoC4/ETH.c ****  * \brief Set the write poitner starting address for a socket
 837:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number to modify
 838:.\Generated_Source\PSoC4/ETH.c ****  * \param ptr the address value to write in to the pointer register
 839:.\Generated_Source\PSoC4/ETH.c ****  */
 840:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketRxWritePtr( uint8 socket, uint16 ptr)
 841:.\Generated_Source\PSoC4/ETH.c **** {
 2211              		.loc 1 841 0
 2212              		.cfi_startproc
 2213 0000 80B5     		push	{r7, lr}
 2214              	.LCFI109:
 2215              		.cfi_def_cfa_offset 8
 2216              		.cfi_offset 7, -8
 2217              		.cfi_offset 14, -4
 2218 0002 82B0     		sub	sp, sp, #8
 2219              	.LCFI110:
 2220              		.cfi_def_cfa_offset 16
 2221 0004 00AF     		add	r7, sp, #0
 2222              	.LCFI111:
 2223              		.cfi_def_cfa_register 7
 2224 0006 0A1C     		mov	r2, r1
 2225 0008 FB1D     		add	r3, r7, #7
 2226 000a 011C     		add	r1, r0, #0
 2227 000c 1970     		strb	r1, [r3]
 2228 000e 3B1D     		add	r3, r7, #4
 2229 0010 1A80     		strh	r2, [r3]
 842:.\Generated_Source\PSoC4/ETH.c **** 	/*
 843:.\Generated_Source\PSoC4/ETH.c **** 	 * This function is not used on the W5100, since there is no register
 844:.\Generated_Source\PSoC4/ETH.c **** 	 * defined in the memor map to provide this capability
 845:.\Generated_Source\PSoC4/ETH.c **** 	 */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 55


 846:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 2)
 847:.\Generated_Source\PSoC4/ETH.c **** 	/*
 848:.\Generated_Source\PSoC4/ETH.c **** 	 * for the W5200 device, write the pointer value to the register
 849:.\Generated_Source\PSoC4/ETH.c **** 	 */
 850:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite16( ETH_SOCKET_REG(socket, ETH_SOCK_RXWR), ptr);
 851:.\Generated_Source\PSoC4/ETH.c **** #endif
 852:.\Generated_Source\PSoC4/ETH.c **** }
 2230              		.loc 1 852 0
 2231 0012 BD46     		mov	sp, r7
 2232 0014 02B0     		add	sp, sp, #8
 2233              		@ sp needed for prologue
 2234 0016 80BD     		pop	{r7, pc}
 2235              		.cfi_endproc
 2236              	.LFE37:
 2237              		.size	ETH_SetSocketRxWritePtr, .-ETH_SetSocketRxWritePtr
 2238              		.section	.text.ETH_SetSocketTxReadPtr,"ax",%progbits
 2239              		.align	2
 2240              		.global	ETH_SetSocketTxReadPtr
 2241              		.code	16
 2242              		.thumb_func
 2243              		.type	ETH_SetSocketTxReadPtr, %function
 2244              	ETH_SetSocketTxReadPtr:
 2245              	.LFB38:
 853:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 854:.\Generated_Source\PSoC4/ETH.c **** /**
 855:.\Generated_Source\PSoC4/ETH.c ****  * \brief Initialize the Tx buffer Read pointer register
 856:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the sockt to be modified
 857:.\Generated_Source\PSoC4/ETH.c ****  * \param ptr the address to store in to the pointer register
 858:.\Generated_Source\PSoC4/ETH.c **** */
 859:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketTxReadPtr(uint8 socket, uint16 ptr )
 860:.\Generated_Source\PSoC4/ETH.c **** {
 2246              		.loc 1 860 0
 2247              		.cfi_startproc
 2248 0000 80B5     		push	{r7, lr}
 2249              	.LCFI112:
 2250              		.cfi_def_cfa_offset 8
 2251              		.cfi_offset 7, -8
 2252              		.cfi_offset 14, -4
 2253 0002 82B0     		sub	sp, sp, #8
 2254              	.LCFI113:
 2255              		.cfi_def_cfa_offset 16
 2256 0004 00AF     		add	r7, sp, #0
 2257              	.LCFI114:
 2258              		.cfi_def_cfa_register 7
 2259 0006 0A1C     		mov	r2, r1
 2260 0008 FB1D     		add	r3, r7, #7
 2261 000a 011C     		add	r1, r0, #0
 2262 000c 1970     		strb	r1, [r3]
 2263 000e 3B1D     		add	r3, r7, #4
 2264 0010 1A80     		strh	r2, [r3]
 861:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite16( ETH_SOCKET_REG(socket, ETH_SOCK_TXRD), ptr);
 2265              		.loc 1 861 0
 2266 0012 FB1D     		add	r3, r7, #7
 2267 0014 1B78     		ldrb	r3, [r3]
 2268 0016 9BB2     		uxth	r3, r3
 2269 0018 1B02     		lsl	r3, r3, #8
 2270 001a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 56


 2271 001c 054A     		ldr	r2, .L91
 2272 001e 9B18     		add	r3, r3, r2
 2273 0020 9AB2     		uxth	r2, r3
 2274 0022 3B1D     		add	r3, r7, #4
 2275 0024 1B88     		ldrh	r3, [r3]
 2276 0026 101C     		mov	r0, r2
 2277 0028 191C     		mov	r1, r3
 2278 002a FFF7FEFF 		bl	ETH_ChipWrite16
 862:.\Generated_Source\PSoC4/ETH.c **** }
 2279              		.loc 1 862 0
 2280 002e BD46     		mov	sp, r7
 2281 0030 02B0     		add	sp, sp, #8
 2282              		@ sp needed for prologue
 2283 0032 80BD     		pop	{r7, pc}
 2284              	.L92:
 2285              		.align	2
 2286              	.L91:
 2287 0034 22040000 		.word	1058
 2288              		.cfi_endproc
 2289              	.LFE38:
 2290              		.size	ETH_SetSocketTxReadPtr, .-ETH_SetSocketTxReadPtr
 2291              		.section	.text.ETH_ExecuteSocketCommand,"ax",%progbits
 2292              		.align	2
 2293              		.global	ETH_ExecuteSocketCommand
 2294              		.code	16
 2295              		.thumb_func
 2296              		.type	ETH_ExecuteSocketCommand, %function
 2297              	ETH_ExecuteSocketCommand:
 2298              	.LFB39:
 863:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 864:.\Generated_Source\PSoC4/ETH.c **** /**
 865:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a command to the socket command register and wait for completion
 866:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the addressed socket for the command
 867:.\Generated_Source\PSoC4/ETH.c ****  * \param cmd the command to execute
 868:.\Generated_Source\PSoC4/ETH.c ****  */
 869:.\Generated_Source\PSoC4/ETH.c **** uint32 ETH_ExecuteSocketCommand( uint8 socket, int cmd)
 870:.\Generated_Source\PSoC4/ETH.c **** {
 2299              		.loc 1 870 0
 2300              		.cfi_startproc
 2301 0000 80B5     		push	{r7, lr}
 2302              	.LCFI115:
 2303              		.cfi_def_cfa_offset 8
 2304              		.cfi_offset 7, -8
 2305              		.cfi_offset 14, -4
 2306 0002 84B0     		sub	sp, sp, #16
 2307              	.LCFI116:
 2308              		.cfi_def_cfa_offset 24
 2309 0004 00AF     		add	r7, sp, #0
 2310              	.LCFI117:
 2311              		.cfi_def_cfa_register 7
 2312 0006 021C     		mov	r2, r0
 2313 0008 3960     		str	r1, [r7]
 2314 000a FB1D     		add	r3, r7, #7
 2315 000c 1A70     		strb	r2, [r3]
 871:.\Generated_Source\PSoC4/ETH.c **** 	uint32 timeout;
 872:.\Generated_Source\PSoC4/ETH.c **** 	timeout = 0;
 2316              		.loc 1 872 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 57


 2317 000e 0023     		mov	r3, #0
 2318 0010 FB60     		str	r3, [r7, #12]
 873:.\Generated_Source\PSoC4/ETH.c **** 	
 874:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSocketCommand(socket,cmd);
 2319              		.loc 1 874 0
 2320 0012 3B68     		ldr	r3, [r7]
 2321 0014 DBB2     		uxtb	r3, r3
 2322 0016 FA1D     		add	r2, r7, #7
 2323 0018 1278     		ldrb	r2, [r2]
 2324 001a 101C     		mov	r0, r2
 2325 001c 191C     		mov	r1, r3
 2326 001e FFF7FEFF 		bl	ETH_SetSocketCommand
 875:.\Generated_Source\PSoC4/ETH.c **** 	while ( ( ETH_GetSocketCommand(socket) ) && (timeout < 125))
 2327              		.loc 1 875 0
 2328 0022 05E0     		b	.L94
 2329              	.L96:
 876:.\Generated_Source\PSoC4/ETH.c **** 	{
 877:.\Generated_Source\PSoC4/ETH.c **** 		++timeout;
 2330              		.loc 1 877 0
 2331 0024 FB68     		ldr	r3, [r7, #12]
 2332 0026 0133     		add	r3, r3, #1
 2333 0028 FB60     		str	r3, [r7, #12]
 878:.\Generated_Source\PSoC4/ETH.c **** 		CyDelay(1);
 2334              		.loc 1 878 0
 2335 002a 0120     		mov	r0, #1
 2336 002c FFF7FEFF 		bl	CyDelay
 2337              	.L94:
 875:.\Generated_Source\PSoC4/ETH.c **** 	while ( ( ETH_GetSocketCommand(socket) ) && (timeout < 125))
 2338              		.loc 1 875 0 discriminator 1
 2339 0030 FB1D     		add	r3, r7, #7
 2340 0032 1B78     		ldrb	r3, [r3]
 2341 0034 181C     		mov	r0, r3
 2342 0036 FFF7FEFF 		bl	ETH_GetSocketCommand
 2343 003a 031C     		mov	r3, r0
 2344 003c 002B     		cmp	r3, #0
 2345 003e 02D0     		beq	.L95
 875:.\Generated_Source\PSoC4/ETH.c **** 	while ( ( ETH_GetSocketCommand(socket) ) && (timeout < 125))
 2346              		.loc 1 875 0 is_stmt 0 discriminator 2
 2347 0040 FB68     		ldr	r3, [r7, #12]
 2348 0042 7C2B     		cmp	r3, #124
 2349 0044 EED9     		bls	.L96
 2350              	.L95:
 879:.\Generated_Source\PSoC4/ETH.c **** 	}
 880:.\Generated_Source\PSoC4/ETH.c **** 	return( timeout );
 2351              		.loc 1 880 0 is_stmt 1
 2352 0046 FB68     		ldr	r3, [r7, #12]
 881:.\Generated_Source\PSoC4/ETH.c **** }
 2353              		.loc 1 881 0
 2354 0048 181C     		mov	r0, r3
 2355 004a BD46     		mov	sp, r7
 2356 004c 04B0     		add	sp, sp, #16
 2357              		@ sp needed for prologue
 2358 004e 80BD     		pop	{r7, pc}
 2359              		.cfi_endproc
 2360              	.LFE39:
 2361              		.size	ETH_ExecuteSocketCommand, .-ETH_ExecuteSocketCommand
 2362              		.section	.text.ETH_GetTxFreeSize,"ax",%progbits
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 58


 2363              		.align	2
 2364              		.global	ETH_GetTxFreeSize
 2365              		.code	16
 2366              		.thumb_func
 2367              		.type	ETH_GetTxFreeSize, %function
 2368              	ETH_GetTxFreeSize:
 2369              	.LFB40:
 882:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 883:.\Generated_Source\PSoC4/ETH.c **** /**
 884:.\Generated_Source\PSoC4/ETH.c ****  * \brief Execute a safe read fo the Tx buffer free size register
 885:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the addressed socket to read the available tx buffer
 886:.\Generated_Source\PSoC4/ETH.c ****  * \returns the number of bytes available in the transmit buffer for the socket
 887:.\Generated_Source\PSoC4/ETH.c ****  */
 888:.\Generated_Source\PSoC4/ETH.c **** uint16 ETH_GetTxFreeSize( uint8 socket )
 889:.\Generated_Source\PSoC4/ETH.c **** {
 2370              		.loc 1 889 0
 2371              		.cfi_startproc
 2372 0000 90B5     		push	{r4, r7, lr}
 2373              	.LCFI118:
 2374              		.cfi_def_cfa_offset 12
 2375              		.cfi_offset 4, -12
 2376              		.cfi_offset 7, -8
 2377              		.cfi_offset 14, -4
 2378 0002 85B0     		sub	sp, sp, #20
 2379              	.LCFI119:
 2380              		.cfi_def_cfa_offset 32
 2381 0004 00AF     		add	r7, sp, #0
 2382              	.LCFI120:
 2383              		.cfi_def_cfa_register 7
 2384 0006 021C     		mov	r2, r0
 2385 0008 FB1D     		add	r3, r7, #7
 2386 000a 1A70     		strb	r2, [r3]
 890:.\Generated_Source\PSoC4/ETH.c **** 	uint16 first, second;
 891:.\Generated_Source\PSoC4/ETH.c **** 	
 892:.\Generated_Source\PSoC4/ETH.c **** 	first = 0;
 2387              		.loc 1 892 0
 2388 000c 3B1C     		mov	r3, r7
 2389 000e 0C33     		add	r3, r3, #12
 2390 0010 0022     		mov	r2, #0
 2391 0012 1A80     		strh	r2, [r3]
 893:.\Generated_Source\PSoC4/ETH.c **** 	second = 0;
 2392              		.loc 1 893 0
 2393 0014 3B1C     		mov	r3, r7
 2394 0016 0E33     		add	r3, r3, #14
 2395 0018 0022     		mov	r2, #0
 2396 001a 1A80     		strh	r2, [r3]
 2397              	.L100:
 894:.\Generated_Source\PSoC4/ETH.c **** 	do {
 895:.\Generated_Source\PSoC4/ETH.c **** 		first = ETH_GetSocketTxFree( socket );
 2398              		.loc 1 895 0
 2399 001c 3C1C     		mov	r4, r7
 2400 001e 0C34     		add	r4, r4, #12
 2401 0020 FB1D     		add	r3, r7, #7
 2402 0022 1B78     		ldrb	r3, [r3]
 2403 0024 181C     		mov	r0, r3
 2404 0026 FFF7FEFF 		bl	ETH_GetSocketTxFree
 2405 002a 031C     		mov	r3, r0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 59


 2406 002c 2380     		strh	r3, [r4]
 896:.\Generated_Source\PSoC4/ETH.c **** 		if (first != 0) {
 2407              		.loc 1 896 0
 2408 002e 3B1C     		mov	r3, r7
 2409 0030 0C33     		add	r3, r3, #12
 2410 0032 1B88     		ldrh	r3, [r3]
 2411 0034 002B     		cmp	r3, #0
 2412 0036 08D0     		beq	.L99
 897:.\Generated_Source\PSoC4/ETH.c **** 			second = ETH_GetSocketTxFree( socket );
 2413              		.loc 1 897 0
 2414 0038 3C1C     		mov	r4, r7
 2415 003a 0E34     		add	r4, r4, #14
 2416 003c FB1D     		add	r3, r7, #7
 2417 003e 1B78     		ldrb	r3, [r3]
 2418 0040 181C     		mov	r0, r3
 2419 0042 FFF7FEFF 		bl	ETH_GetSocketTxFree
 2420 0046 031C     		mov	r3, r0
 2421 0048 2380     		strh	r3, [r4]
 2422              	.L99:
 898:.\Generated_Source\PSoC4/ETH.c **** 		}
 899:.\Generated_Source\PSoC4/ETH.c **** 	}
 900:.\Generated_Source\PSoC4/ETH.c **** 	while (first != second );
 2423              		.loc 1 900 0
 2424 004a 3A1C     		mov	r2, r7
 2425 004c 0C32     		add	r2, r2, #12
 2426 004e 3B1C     		mov	r3, r7
 2427 0050 0E33     		add	r3, r3, #14
 2428 0052 1288     		ldrh	r2, [r2]
 2429 0054 1B88     		ldrh	r3, [r3]
 2430 0056 9A42     		cmp	r2, r3
 2431 0058 E0D1     		bne	.L100
 901:.\Generated_Source\PSoC4/ETH.c **** 	
 902:.\Generated_Source\PSoC4/ETH.c **** 	return( second );
 2432              		.loc 1 902 0
 2433 005a 3B1C     		mov	r3, r7
 2434 005c 0E33     		add	r3, r3, #14
 2435 005e 1B88     		ldrh	r3, [r3]
 903:.\Generated_Source\PSoC4/ETH.c **** }
 2436              		.loc 1 903 0
 2437 0060 181C     		mov	r0, r3
 2438 0062 BD46     		mov	sp, r7
 2439 0064 05B0     		add	sp, sp, #20
 2440              		@ sp needed for prologue
 2441 0066 90BD     		pop	{r4, r7, pc}
 2442              		.cfi_endproc
 2443              	.LFE40:
 2444              		.size	ETH_GetTxFreeSize, .-ETH_GetTxFreeSize
 2445              		.section	.text.ETH_GetRxSize,"ax",%progbits
 2446              		.align	2
 2447              		.global	ETH_GetRxSize
 2448              		.code	16
 2449              		.thumb_func
 2450              		.type	ETH_GetRxSize, %function
 2451              	ETH_GetRxSize:
 2452              	.LFB41:
 904:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 905:.\Generated_Source\PSoC4/ETH.c **** /**
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 60


 906:.\Generated_Source\PSoC4/ETH.c ****  * \brief Execute a safe read of the received data size
 907:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the addressed socketfrom which the data will be read
 908:.\Generated_Source\PSoC4/ETH.c ****  * \returns the number of bytes waiting in the recieve buffer of the socket
 909:.\Generated_Source\PSoC4/ETH.c ****  */
 910:.\Generated_Source\PSoC4/ETH.c **** uint16 ETH_GetRxSize( uint8 socket )
 911:.\Generated_Source\PSoC4/ETH.c **** {
 2453              		.loc 1 911 0
 2454              		.cfi_startproc
 2455 0000 90B5     		push	{r4, r7, lr}
 2456              	.LCFI121:
 2457              		.cfi_def_cfa_offset 12
 2458              		.cfi_offset 4, -12
 2459              		.cfi_offset 7, -8
 2460              		.cfi_offset 14, -4
 2461 0002 85B0     		sub	sp, sp, #20
 2462              	.LCFI122:
 2463              		.cfi_def_cfa_offset 32
 2464 0004 00AF     		add	r7, sp, #0
 2465              	.LCFI123:
 2466              		.cfi_def_cfa_register 7
 2467 0006 021C     		mov	r2, r0
 2468 0008 FB1D     		add	r3, r7, #7
 2469 000a 1A70     		strb	r2, [r3]
 912:.\Generated_Source\PSoC4/ETH.c **** 	uint16 first, second;
 913:.\Generated_Source\PSoC4/ETH.c **** 	
 914:.\Generated_Source\PSoC4/ETH.c **** 	first = 0;
 2470              		.loc 1 914 0
 2471 000c 3B1C     		mov	r3, r7
 2472 000e 0C33     		add	r3, r3, #12
 2473 0010 0022     		mov	r2, #0
 2474 0012 1A80     		strh	r2, [r3]
 915:.\Generated_Source\PSoC4/ETH.c **** 	second = 0;
 2475              		.loc 1 915 0
 2476 0014 3B1C     		mov	r3, r7
 2477 0016 0E33     		add	r3, r3, #14
 2478 0018 0022     		mov	r2, #0
 2479 001a 1A80     		strh	r2, [r3]
 2480              	.L104:
 916:.\Generated_Source\PSoC4/ETH.c **** 	do {
 917:.\Generated_Source\PSoC4/ETH.c **** 		first = ETH_GetSocketRxSize( socket );
 2481              		.loc 1 917 0
 2482 001c 3C1C     		mov	r4, r7
 2483 001e 0C34     		add	r4, r4, #12
 2484 0020 FB1D     		add	r3, r7, #7
 2485 0022 1B78     		ldrb	r3, [r3]
 2486 0024 181C     		mov	r0, r3
 2487 0026 FFF7FEFF 		bl	ETH_GetSocketRxSize
 2488 002a 031C     		mov	r3, r0
 2489 002c 2380     		strh	r3, [r4]
 918:.\Generated_Source\PSoC4/ETH.c **** 		if (first != 0) {
 2490              		.loc 1 918 0
 2491 002e 3B1C     		mov	r3, r7
 2492 0030 0C33     		add	r3, r3, #12
 2493 0032 1B88     		ldrh	r3, [r3]
 2494 0034 002B     		cmp	r3, #0
 2495 0036 08D0     		beq	.L103
 919:.\Generated_Source\PSoC4/ETH.c **** 			second = ETH_GetSocketRxSize( socket );
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 61


 2496              		.loc 1 919 0
 2497 0038 3C1C     		mov	r4, r7
 2498 003a 0E34     		add	r4, r4, #14
 2499 003c FB1D     		add	r3, r7, #7
 2500 003e 1B78     		ldrb	r3, [r3]
 2501 0040 181C     		mov	r0, r3
 2502 0042 FFF7FEFF 		bl	ETH_GetSocketRxSize
 2503 0046 031C     		mov	r3, r0
 2504 0048 2380     		strh	r3, [r4]
 2505              	.L103:
 920:.\Generated_Source\PSoC4/ETH.c **** 		}
 921:.\Generated_Source\PSoC4/ETH.c **** 	}
 922:.\Generated_Source\PSoC4/ETH.c **** 	while (first != second );
 2506              		.loc 1 922 0
 2507 004a 3A1C     		mov	r2, r7
 2508 004c 0C32     		add	r2, r2, #12
 2509 004e 3B1C     		mov	r3, r7
 2510 0050 0E33     		add	r3, r3, #14
 2511 0052 1288     		ldrh	r2, [r2]
 2512 0054 1B88     		ldrh	r3, [r3]
 2513 0056 9A42     		cmp	r2, r3
 2514 0058 E0D1     		bne	.L104
 923:.\Generated_Source\PSoC4/ETH.c **** 	
 924:.\Generated_Source\PSoC4/ETH.c **** 	return second;
 2515              		.loc 1 924 0
 2516 005a 3B1C     		mov	r3, r7
 2517 005c 0E33     		add	r3, r3, #14
 2518 005e 1B88     		ldrh	r3, [r3]
 925:.\Generated_Source\PSoC4/ETH.c **** }
 2519              		.loc 1 925 0
 2520 0060 181C     		mov	r0, r3
 2521 0062 BD46     		mov	sp, r7
 2522 0064 05B0     		add	sp, sp, #20
 2523              		@ sp needed for prologue
 2524 0066 90BD     		pop	{r4, r7, pc}
 2525              		.cfi_endproc
 2526              	.LFE41:
 2527              		.size	ETH_GetRxSize, .-ETH_GetRxSize
 2528              		.section	.text.ETH_ProcessTxData,"ax",%progbits
 2529              		.align	2
 2530              		.global	ETH_ProcessTxData
 2531              		.code	16
 2532              		.thumb_func
 2533              		.type	ETH_ProcessTxData, %function
 2534              	ETH_ProcessTxData:
 2535              	.LFB42:
 926:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 927:.\Generated_Source\PSoC4/ETH.c **** 
 928:.\Generated_Source\PSoC4/ETH.c **** // END Socket Register access section
 929:.\Generated_Source\PSoC4/ETH.c **** #endif
 930:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 931:.\Generated_Source\PSoC4/ETH.c **** /* W5x00 Data Buffer Memory access primitives */
 932:.\Generated_Source\PSoC4/ETH.c **** #if (1)
 933:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 934:.\Generated_Source\PSoC4/ETH.c **** /**
 935:.\Generated_Source\PSoC4/ETH.c ****  * \brief Transfer data from a local data buffer to the chip Tx fifo
 936:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket buffer to which the data will be written
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 62


 937:.\Generated_Source\PSoC4/ETH.c ****  * \param offset The offest in to the socket buffer
 938:.\Generated_Source\PSoC4/ETH.c ****  * \param *buffer pointer to the local buffer to copy to the transmit fifo
 939:.\Generated_Source\PSoC4/ETH.c ****  * \param length the number of bytes to be copied to the transmit fifo
 940:.\Generated_Source\PSoC4/ETH.c ****  */
 941:.\Generated_Source\PSoC4/ETH.c **** void ETH_ProcessTxData(uint8 socket, uint16 offset, uint8* buffer, uint16 length)
 942:.\Generated_Source\PSoC4/ETH.c **** {
 2536              		.loc 1 942 0
 2537              		.cfi_startproc
 2538 0000 80B5     		push	{r7, lr}
 2539              	.LCFI124:
 2540              		.cfi_def_cfa_offset 8
 2541              		.cfi_offset 7, -8
 2542              		.cfi_offset 14, -4
 2543 0002 86B0     		sub	sp, sp, #24
 2544              	.LCFI125:
 2545              		.cfi_def_cfa_offset 32
 2546 0004 00AF     		add	r7, sp, #0
 2547              	.LCFI126:
 2548              		.cfi_def_cfa_register 7
 2549 0006 BA60     		str	r2, [r7, #8]
 2550 0008 1A1C     		mov	r2, r3
 2551 000a 3B1C     		mov	r3, r7
 2552 000c 0F33     		add	r3, r3, #15
 2553 000e 1870     		strb	r0, [r3]
 2554 0010 3B1C     		mov	r3, r7
 2555 0012 0C33     		add	r3, r3, #12
 2556 0014 1980     		strh	r1, [r3]
 2557 0016 BB1D     		add	r3, r7, #6
 2558 0018 1A80     		strh	r2, [r3]
 943:.\Generated_Source\PSoC4/ETH.c **** 	uint16 addr;
 944:.\Generated_Source\PSoC4/ETH.c **** 	uint16 base;
 945:.\Generated_Source\PSoC4/ETH.c **** 	uint16 PointerOffset;
 946:.\Generated_Source\PSoC4/ETH.c **** 	uint16 size;
 947:.\Generated_Source\PSoC4/ETH.c **** 	
 948:.\Generated_Source\PSoC4/ETH.c **** 	/*
 949:.\Generated_Source\PSoC4/ETH.c **** 	 * Read the offset pointer, and calculate the base address for the start of write
 950:.\Generated_Source\PSoC4/ETH.c **** 	 * in to the chip buffers.  Written data will be offset by the offset byte count
 951:.\Generated_Source\PSoC4/ETH.c **** 	 * specified in the parameters.
 952:.\Generated_Source\PSoC4/ETH.c **** 	 */
 953:.\Generated_Source\PSoC4/ETH.c **** 	base = ETH_GetSocketTxWritePtr(socket) + offset;
 2559              		.loc 1 953 0
 2560 001a 3B1C     		mov	r3, r7
 2561 001c 0F33     		add	r3, r3, #15
 2562 001e 1B78     		ldrb	r3, [r3]
 2563 0020 181C     		mov	r0, r3
 2564 0022 FFF7FEFF 		bl	ETH_GetSocketTxWritePtr
 2565 0026 031C     		mov	r3, r0
 2566 0028 191C     		mov	r1, r3
 2567 002a 3B1C     		mov	r3, r7
 2568 002c 1633     		add	r3, r3, #22
 2569 002e 3A1C     		mov	r2, r7
 2570 0030 0C32     		add	r2, r2, #12
 2571 0032 1288     		ldrh	r2, [r2]
 2572 0034 8A18     		add	r2, r1, r2
 2573 0036 1A80     		strh	r2, [r3]
 954:.\Generated_Source\PSoC4/ETH.c **** 	PointerOffset = (base & 0x07FF);
 2574              		.loc 1 954 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 63


 2575 0038 3B1C     		mov	r3, r7
 2576 003a 1433     		add	r3, r3, #20
 2577 003c 3A1C     		mov	r2, r7
 2578 003e 1632     		add	r2, r2, #22
 2579 0040 1288     		ldrh	r2, [r2]
 2580 0042 5205     		lsl	r2, r2, #21
 2581 0044 520D     		lsr	r2, r2, #21
 2582 0046 1A80     		strh	r2, [r3]
 955:.\Generated_Source\PSoC4/ETH.c **** 	addr = PointerOffset + ETH_SOCKET_TX_BASE[socket];
 2583              		.loc 1 955 0
 2584 0048 3B1C     		mov	r3, r7
 2585 004a 0F33     		add	r3, r3, #15
 2586 004c 1A78     		ldrb	r2, [r3]
 2587 004e 2F4B     		ldr	r3, .L109
 2588 0050 5200     		lsl	r2, r2, #1
 2589 0052 D15A     		ldrh	r1, [r2, r3]
 2590 0054 3B1C     		mov	r3, r7
 2591 0056 1233     		add	r3, r3, #18
 2592 0058 3A1C     		mov	r2, r7
 2593 005a 1432     		add	r2, r2, #20
 2594 005c 1288     		ldrh	r2, [r2]
 2595 005e 8A18     		add	r2, r1, r2
 2596 0060 1A80     		strh	r2, [r3]
 956:.\Generated_Source\PSoC4/ETH.c **** 	/* calculate the number of bytes from the pointer to the end of the buffer */
 957:.\Generated_Source\PSoC4/ETH.c **** 	size = 0x0800 - PointerOffset;
 2597              		.loc 1 957 0
 2598 0062 3B1C     		mov	r3, r7
 2599 0064 1033     		add	r3, r3, #16
 2600 0066 3A1C     		mov	r2, r7
 2601 0068 1432     		add	r2, r2, #20
 2602 006a 1288     		ldrh	r2, [r2]
 2603 006c 8021     		mov	r1, #128
 2604 006e 0901     		lsl	r1, r1, #4
 2605 0070 8A1A     		sub	r2, r1, r2
 2606 0072 1A80     		strh	r2, [r3]
 958:.\Generated_Source\PSoC4/ETH.c **** 	
 959:.\Generated_Source\PSoC4/ETH.c **** 	/*
 960:.\Generated_Source\PSoC4/ETH.c **** 	 * is there enough space to write the complete packet
 961:.\Generated_Source\PSoC4/ETH.c **** 	 * or, shoudl the data be split in to two writes.
 962:.\Generated_Source\PSoC4/ETH.c **** 	 */
 963:.\Generated_Source\PSoC4/ETH.c **** 	if ( length > size) {
 2607              		.loc 1 963 0
 2608 0074 BA1D     		add	r2, r7, #6
 2609 0076 3B1C     		mov	r3, r7
 2610 0078 1033     		add	r3, r3, #16
 2611 007a 1288     		ldrh	r2, [r2]
 2612 007c 1B88     		ldrh	r3, [r3]
 2613 007e 9A42     		cmp	r2, r3
 2614 0080 23D9     		bls	.L107
 964:.\Generated_Source\PSoC4/ETH.c **** 		/*
 965:.\Generated_Source\PSoC4/ETH.c **** 		 * There is more data to send than will fit from the pointer to the end
 966:.\Generated_Source\PSoC4/ETH.c **** 		 * of the memory, so we will write the data in two chunks.  First, write the
 967:.\Generated_Source\PSoC4/ETH.c **** 		 * data from the pointer to the end of the buffer, then write the portion
 968:.\Generated_Source\PSoC4/ETH.c **** 		 * remaining to the start (base ptr) of the socket buffer
 969:.\Generated_Source\PSoC4/ETH.c **** 		 */
 970:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipWrite(addr, buffer, size);
 2615              		.loc 1 970 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 64


 2616 0082 3B1C     		mov	r3, r7
 2617 0084 1233     		add	r3, r3, #18
 2618 0086 1988     		ldrh	r1, [r3]
 2619 0088 BA68     		ldr	r2, [r7, #8]
 2620 008a 3B1C     		mov	r3, r7
 2621 008c 1033     		add	r3, r3, #16
 2622 008e 1B88     		ldrh	r3, [r3]
 2623 0090 081C     		mov	r0, r1
 2624 0092 111C     		mov	r1, r2
 2625 0094 1A1C     		mov	r2, r3
 2626 0096 FFF7FEFF 		bl	ETH_ChipWrite
 971:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipWrite(ETH_SOCKET_TX_BASE[socket], &buffer[size], length - size);
 2627              		.loc 1 971 0
 2628 009a 3B1C     		mov	r3, r7
 2629 009c 0F33     		add	r3, r3, #15
 2630 009e 1A78     		ldrb	r2, [r3]
 2631 00a0 1A4B     		ldr	r3, .L109
 2632 00a2 5200     		lsl	r2, r2, #1
 2633 00a4 D15A     		ldrh	r1, [r2, r3]
 2634 00a6 3B1C     		mov	r3, r7
 2635 00a8 1033     		add	r3, r3, #16
 2636 00aa 1B88     		ldrh	r3, [r3]
 2637 00ac BA68     		ldr	r2, [r7, #8]
 2638 00ae D218     		add	r2, r2, r3
 2639 00b0 B81D     		add	r0, r7, #6
 2640 00b2 3B1C     		mov	r3, r7
 2641 00b4 1033     		add	r3, r3, #16
 2642 00b6 0088     		ldrh	r0, [r0]
 2643 00b8 1B88     		ldrh	r3, [r3]
 2644 00ba C31A     		sub	r3, r0, r3
 2645 00bc 9BB2     		uxth	r3, r3
 2646 00be 081C     		mov	r0, r1
 2647 00c0 111C     		mov	r1, r2
 2648 00c2 1A1C     		mov	r2, r3
 2649 00c4 FFF7FEFF 		bl	ETH_ChipWrite
 2650 00c8 0AE0     		b	.L108
 2651              	.L107:
 972:.\Generated_Source\PSoC4/ETH.c **** 	}
 973:.\Generated_Source\PSoC4/ETH.c **** 	else {
 974:.\Generated_Source\PSoC4/ETH.c **** 		/* 
 975:.\Generated_Source\PSoC4/ETH.c **** 		 * there is enough available space from the write point to the end of buffer
 976:.\Generated_Source\PSoC4/ETH.c **** 		 * to hold the whole packe of information, so just write it to the memory
 977:.\Generated_Source\PSoC4/ETH.c **** 		 */
 978:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipWrite(addr,buffer,length);
 2652              		.loc 1 978 0
 2653 00ca 3B1C     		mov	r3, r7
 2654 00cc 1233     		add	r3, r3, #18
 2655 00ce 1988     		ldrh	r1, [r3]
 2656 00d0 BA68     		ldr	r2, [r7, #8]
 2657 00d2 BB1D     		add	r3, r7, #6
 2658 00d4 1B88     		ldrh	r3, [r3]
 2659 00d6 081C     		mov	r0, r1
 2660 00d8 111C     		mov	r1, r2
 2661 00da 1A1C     		mov	r2, r3
 2662 00dc FFF7FEFF 		bl	ETH_ChipWrite
 2663              	.L108:
 979:.\Generated_Source\PSoC4/ETH.c **** 	}
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 65


 980:.\Generated_Source\PSoC4/ETH.c **** 	/* move the write pointer */
 981:.\Generated_Source\PSoC4/ETH.c **** 	base += length;
 2664              		.loc 1 981 0
 2665 00e0 3B1C     		mov	r3, r7
 2666 00e2 1633     		add	r3, r3, #22
 2667 00e4 391C     		mov	r1, r7
 2668 00e6 1631     		add	r1, r1, #22
 2669 00e8 BA1D     		add	r2, r7, #6
 2670 00ea 0988     		ldrh	r1, [r1]
 2671 00ec 1288     		ldrh	r2, [r2]
 2672 00ee 8A18     		add	r2, r1, r2
 2673 00f0 1A80     		strh	r2, [r3]
 982:.\Generated_Source\PSoC4/ETH.c **** 	/* 
 983:.\Generated_Source\PSoC4/ETH.c **** 	 * Store the new write pointer so that the device knows that there is data waiting
 984:.\Generated_Source\PSoC4/ETH.c **** 	 * to be transmitted over the link.
 985:.\Generated_Source\PSoC4/ETH.c **** 	 */
 986:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSocketTxWritePtr(socket, base);
 2674              		.loc 1 986 0
 2675 00f2 3B1C     		mov	r3, r7
 2676 00f4 0F33     		add	r3, r3, #15
 2677 00f6 1A78     		ldrb	r2, [r3]
 2678 00f8 3B1C     		mov	r3, r7
 2679 00fa 1633     		add	r3, r3, #22
 2680 00fc 1B88     		ldrh	r3, [r3]
 2681 00fe 101C     		mov	r0, r2
 2682 0100 191C     		mov	r1, r3
 2683 0102 FFF7FEFF 		bl	ETH_SetSocketTxWritePtr
 987:.\Generated_Source\PSoC4/ETH.c **** }
 2684              		.loc 1 987 0
 2685 0106 BD46     		mov	sp, r7
 2686 0108 06B0     		add	sp, sp, #24
 2687              		@ sp needed for prologue
 2688 010a 80BD     		pop	{r7, pc}
 2689              	.L110:
 2690              		.align	2
 2691              	.L109:
 2692 010c 00000000 		.word	ETH_SOCKET_TX_BASE
 2693              		.cfi_endproc
 2694              	.LFE42:
 2695              		.size	ETH_ProcessTxData, .-ETH_ProcessTxData
 2696              		.section	.text.ETH_ProcessRxData,"ax",%progbits
 2697              		.align	2
 2698              		.global	ETH_ProcessRxData
 2699              		.code	16
 2700              		.thumb_func
 2701              		.type	ETH_ProcessRxData, %function
 2702              	ETH_ProcessRxData:
 2703              	.LFB43:
 988:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 989:.\Generated_Source\PSoC4/ETH.c **** /**
 990:.\Generated_Source\PSoC4/ETH.c ****  * \brief Transfer data from the chip receive buffer to a local buffer
 991:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket buffer from which the data will be read
 992:.\Generated_Source\PSoC4/ETH.c ****  * \param offset The offest in to the socket buffer
 993:.\Generated_Source\PSoC4/ETH.c ****  * \param *buffer pointer to the local buffer to hold the receive fifo data
 994:.\Generated_Source\PSoC4/ETH.c ****  * \param length the max number of bytes to be copied to the local buffer
 995:.\Generated_Source\PSoC4/ETH.c ****  * \param flags Flag settings to control read fifo options (lookahead)
 996:.\Generated_Source\PSoC4/ETH.c ****  */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 66


 997:.\Generated_Source\PSoC4/ETH.c **** void ETH_ProcessRxData(uint8 socket, uint16 offset, uint8* buffer, uint16 length, uint8 flags)
 998:.\Generated_Source\PSoC4/ETH.c **** {
 2704              		.loc 1 998 0
 2705              		.cfi_startproc
 2706 0000 80B5     		push	{r7, lr}
 2707              	.LCFI127:
 2708              		.cfi_def_cfa_offset 8
 2709              		.cfi_offset 7, -8
 2710              		.cfi_offset 14, -4
 2711 0002 86B0     		sub	sp, sp, #24
 2712              	.LCFI128:
 2713              		.cfi_def_cfa_offset 32
 2714 0004 00AF     		add	r7, sp, #0
 2715              	.LCFI129:
 2716              		.cfi_def_cfa_register 7
 2717 0006 BA60     		str	r2, [r7, #8]
 2718 0008 1A1C     		mov	r2, r3
 2719 000a 3B1C     		mov	r3, r7
 2720 000c 0F33     		add	r3, r3, #15
 2721 000e 1870     		strb	r0, [r3]
 2722 0010 3B1C     		mov	r3, r7
 2723 0012 0C33     		add	r3, r3, #12
 2724 0014 1980     		strh	r1, [r3]
 2725 0016 BB1D     		add	r3, r7, #6
 2726 0018 1A80     		strh	r2, [r3]
 999:.\Generated_Source\PSoC4/ETH.c **** 	uint16 addr;
1000:.\Generated_Source\PSoC4/ETH.c **** 	uint16 base;
1001:.\Generated_Source\PSoC4/ETH.c **** 	uint16 PointerOffset;
1002:.\Generated_Source\PSoC4/ETH.c **** 	uint16 size;
1003:.\Generated_Source\PSoC4/ETH.c **** 	
1004:.\Generated_Source\PSoC4/ETH.c **** 	/*
1005:.\Generated_Source\PSoC4/ETH.c **** 	 * Read the offset pointer, and calculate the base address for the start of read
1006:.\Generated_Source\PSoC4/ETH.c **** 	 * in to the chip buffers.  The data read will be offset by the offset byte count
1007:.\Generated_Source\PSoC4/ETH.c **** 	 * specified in the parameters.
1008:.\Generated_Source\PSoC4/ETH.c **** 	 */
1009:.\Generated_Source\PSoC4/ETH.c **** 	base = ETH_GetSocketRxReadPtr(socket) + offset;
 2727              		.loc 1 1009 0
 2728 001a 3B1C     		mov	r3, r7
 2729 001c 0F33     		add	r3, r3, #15
 2730 001e 1B78     		ldrb	r3, [r3]
 2731 0020 181C     		mov	r0, r3
 2732 0022 FFF7FEFF 		bl	ETH_GetSocketRxReadPtr
 2733 0026 031C     		mov	r3, r0
 2734 0028 191C     		mov	r1, r3
 2735 002a 3B1C     		mov	r3, r7
 2736 002c 1633     		add	r3, r3, #22
 2737 002e 3A1C     		mov	r2, r7
 2738 0030 0C32     		add	r2, r2, #12
 2739 0032 1288     		ldrh	r2, [r2]
 2740 0034 8A18     		add	r2, r1, r2
 2741 0036 1A80     		strh	r2, [r3]
1010:.\Generated_Source\PSoC4/ETH.c **** 	PointerOffset = (base & 0x07FF);
 2742              		.loc 1 1010 0
 2743 0038 3B1C     		mov	r3, r7
 2744 003a 1433     		add	r3, r3, #20
 2745 003c 3A1C     		mov	r2, r7
 2746 003e 1632     		add	r2, r2, #22
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 67


 2747 0040 1288     		ldrh	r2, [r2]
 2748 0042 5205     		lsl	r2, r2, #21
 2749 0044 520D     		lsr	r2, r2, #21
 2750 0046 1A80     		strh	r2, [r3]
1011:.\Generated_Source\PSoC4/ETH.c **** 	addr = PointerOffset + ETH_SOCKET_RX_BASE[socket];
 2751              		.loc 1 1011 0
 2752 0048 3B1C     		mov	r3, r7
 2753 004a 0F33     		add	r3, r3, #15
 2754 004c 1A78     		ldrb	r2, [r3]
 2755 004e 324B     		ldr	r3, .L115
 2756 0050 5200     		lsl	r2, r2, #1
 2757 0052 D15A     		ldrh	r1, [r2, r3]
 2758 0054 3B1C     		mov	r3, r7
 2759 0056 1233     		add	r3, r3, #18
 2760 0058 3A1C     		mov	r2, r7
 2761 005a 1432     		add	r2, r2, #20
 2762 005c 1288     		ldrh	r2, [r2]
 2763 005e 8A18     		add	r2, r1, r2
 2764 0060 1A80     		strh	r2, [r3]
1012:.\Generated_Source\PSoC4/ETH.c **** 	/* calculate the number of bytes from the pointer to the end of the buffer */
1013:.\Generated_Source\PSoC4/ETH.c **** 	size = 0x0800 - PointerOffset;
 2765              		.loc 1 1013 0
 2766 0062 3B1C     		mov	r3, r7
 2767 0064 1033     		add	r3, r3, #16
 2768 0066 3A1C     		mov	r2, r7
 2769 0068 1432     		add	r2, r2, #20
 2770 006a 1288     		ldrh	r2, [r2]
 2771 006c 8021     		mov	r1, #128
 2772 006e 0901     		lsl	r1, r1, #4
 2773 0070 8A1A     		sub	r2, r1, r2
 2774 0072 1A80     		strh	r2, [r3]
1014:.\Generated_Source\PSoC4/ETH.c **** 	/*
1015:.\Generated_Source\PSoC4/ETH.c **** 	 * is there enough space to read the complete packet
1016:.\Generated_Source\PSoC4/ETH.c **** 	 * or, should the data be split in to two reads.
1017:.\Generated_Source\PSoC4/ETH.c **** 	 */
1018:.\Generated_Source\PSoC4/ETH.c **** 	if ( length > size) {
 2775              		.loc 1 1018 0
 2776 0074 BA1D     		add	r2, r7, #6
 2777 0076 3B1C     		mov	r3, r7
 2778 0078 1033     		add	r3, r3, #16
 2779 007a 1288     		ldrh	r2, [r2]
 2780 007c 1B88     		ldrh	r3, [r3]
 2781 007e 9A42     		cmp	r2, r3
 2782 0080 23D9     		bls	.L112
1019:.\Generated_Source\PSoC4/ETH.c **** 		/*
1020:.\Generated_Source\PSoC4/ETH.c **** 		 * There is more data to send than will fit from the pointer to the end
1021:.\Generated_Source\PSoC4/ETH.c **** 		 * of the memory, so we will write the data in two chunks.  First, write the
1022:.\Generated_Source\PSoC4/ETH.c **** 		 * data from the pointer to the end of the buffer, then write the portion
1023:.\Generated_Source\PSoC4/ETH.c **** 		 * remaining to the start (base ptr) of the socket buffer
1024:.\Generated_Source\PSoC4/ETH.c **** 		 */
1025:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipRead(addr, buffer, size);
 2783              		.loc 1 1025 0
 2784 0082 3B1C     		mov	r3, r7
 2785 0084 1233     		add	r3, r3, #18
 2786 0086 1988     		ldrh	r1, [r3]
 2787 0088 BA68     		ldr	r2, [r7, #8]
 2788 008a 3B1C     		mov	r3, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 68


 2789 008c 1033     		add	r3, r3, #16
 2790 008e 1B88     		ldrh	r3, [r3]
 2791 0090 081C     		mov	r0, r1
 2792 0092 111C     		mov	r1, r2
 2793 0094 1A1C     		mov	r2, r3
 2794 0096 FFF7FEFF 		bl	ETH_ChipRead
1026:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipRead(ETH_SOCKET_RX_BASE[socket], &buffer[size], length - size);
 2795              		.loc 1 1026 0
 2796 009a 3B1C     		mov	r3, r7
 2797 009c 0F33     		add	r3, r3, #15
 2798 009e 1A78     		ldrb	r2, [r3]
 2799 00a0 1D4B     		ldr	r3, .L115
 2800 00a2 5200     		lsl	r2, r2, #1
 2801 00a4 D15A     		ldrh	r1, [r2, r3]
 2802 00a6 3B1C     		mov	r3, r7
 2803 00a8 1033     		add	r3, r3, #16
 2804 00aa 1B88     		ldrh	r3, [r3]
 2805 00ac BA68     		ldr	r2, [r7, #8]
 2806 00ae D218     		add	r2, r2, r3
 2807 00b0 B81D     		add	r0, r7, #6
 2808 00b2 3B1C     		mov	r3, r7
 2809 00b4 1033     		add	r3, r3, #16
 2810 00b6 0088     		ldrh	r0, [r0]
 2811 00b8 1B88     		ldrh	r3, [r3]
 2812 00ba C31A     		sub	r3, r0, r3
 2813 00bc 9BB2     		uxth	r3, r3
 2814 00be 081C     		mov	r0, r1
 2815 00c0 111C     		mov	r1, r2
 2816 00c2 1A1C     		mov	r2, r3
 2817 00c4 FFF7FEFF 		bl	ETH_ChipRead
 2818 00c8 0AE0     		b	.L113
 2819              	.L112:
1027:.\Generated_Source\PSoC4/ETH.c **** 	}
1028:.\Generated_Source\PSoC4/ETH.c **** 	else {
1029:.\Generated_Source\PSoC4/ETH.c **** 		/* 
1030:.\Generated_Source\PSoC4/ETH.c **** 		 * there is enough available space from the write point to the end of buffer
1031:.\Generated_Source\PSoC4/ETH.c **** 		 * to hold the whole packe of information, so just write it to the memory
1032:.\Generated_Source\PSoC4/ETH.c **** 		 */
1033:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipRead(addr,buffer,length);
 2820              		.loc 1 1033 0
 2821 00ca 3B1C     		mov	r3, r7
 2822 00cc 1233     		add	r3, r3, #18
 2823 00ce 1988     		ldrh	r1, [r3]
 2824 00d0 BA68     		ldr	r2, [r7, #8]
 2825 00d2 BB1D     		add	r3, r7, #6
 2826 00d4 1B88     		ldrh	r3, [r3]
 2827 00d6 081C     		mov	r0, r1
 2828 00d8 111C     		mov	r1, r2
 2829 00da 1A1C     		mov	r2, r3
 2830 00dc FFF7FEFF 		bl	ETH_ChipRead
 2831              	.L113:
1034:.\Generated_Source\PSoC4/ETH.c **** 	}
1035:.\Generated_Source\PSoC4/ETH.c **** 	if ( (flags & 0x01) == 0 ) { /* V1.1: Added ==0 condition to lookahead flag check */
 2832              		.loc 1 1035 0
 2833 00e0 3B1C     		mov	r3, r7
 2834 00e2 2033     		add	r3, r3, #32
 2835 00e4 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 69


 2836 00e6 0123     		mov	r3, #1
 2837 00e8 1340     		and	r3, r2
 2838 00ea 12D1     		bne	.L111
1036:.\Generated_Source\PSoC4/ETH.c **** 		/* move the write pointer */
1037:.\Generated_Source\PSoC4/ETH.c **** 		base += length;
 2839              		.loc 1 1037 0
 2840 00ec 3B1C     		mov	r3, r7
 2841 00ee 1633     		add	r3, r3, #22
 2842 00f0 391C     		mov	r1, r7
 2843 00f2 1631     		add	r1, r1, #22
 2844 00f4 BA1D     		add	r2, r7, #6
 2845 00f6 0988     		ldrh	r1, [r1]
 2846 00f8 1288     		ldrh	r2, [r2]
 2847 00fa 8A18     		add	r2, r1, r2
 2848 00fc 1A80     		strh	r2, [r3]
1038:.\Generated_Source\PSoC4/ETH.c **** 		/* 
1039:.\Generated_Source\PSoC4/ETH.c **** 		 * Store the new write pointer so that the device knows that there is data waiting
1040:.\Generated_Source\PSoC4/ETH.c **** 		 * to be transmitted over the link.
1041:.\Generated_Source\PSoC4/ETH.c **** 		 */
1042:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketRxReadPtr(socket, base);
 2849              		.loc 1 1042 0
 2850 00fe 3B1C     		mov	r3, r7
 2851 0100 0F33     		add	r3, r3, #15
 2852 0102 1A78     		ldrb	r2, [r3]
 2853 0104 3B1C     		mov	r3, r7
 2854 0106 1633     		add	r3, r3, #22
 2855 0108 1B88     		ldrh	r3, [r3]
 2856 010a 101C     		mov	r0, r2
 2857 010c 191C     		mov	r1, r3
 2858 010e FFF7FEFF 		bl	ETH_SetSocketRxReadPtr
 2859              	.L111:
1043:.\Generated_Source\PSoC4/ETH.c **** 	}
1044:.\Generated_Source\PSoC4/ETH.c **** }
 2860              		.loc 1 1044 0
 2861 0112 BD46     		mov	sp, r7
 2862 0114 06B0     		add	sp, sp, #24
 2863              		@ sp needed for prologue
 2864 0116 80BD     		pop	{r7, pc}
 2865              	.L116:
 2866              		.align	2
 2867              	.L115:
 2868 0118 00000000 		.word	ETH_SOCKET_RX_BASE
 2869              		.cfi_endproc
 2870              	.LFE43:
 2871              		.size	ETH_ProcessRxData, .-ETH_ProcessRxData
 2872              		.section	.text.ETH_Init,"ax",%progbits
 2873              		.align	2
 2874              		.global	ETH_Init
 2875              		.code	16
 2876              		.thumb_func
 2877              		.type	ETH_Init, %function
 2878              	ETH_Init:
 2879              	.LFB44:
1045:.\Generated_Source\PSoC4/ETH.c **** #endif
1046:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
1047:.\Generated_Source\PSoC4/ETH.c **** /* Driver Initialization */
1048:.\Generated_Source\PSoC4/ETH.c **** #if (1)
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 70


1049:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1050:.\Generated_Source\PSoC4/ETH.c **** void
1051:.\Generated_Source\PSoC4/ETH.c **** ETH_Init(uint8* mac, uint32 ip, uint32 subnet, uint32 gateway)
1052:.\Generated_Source\PSoC4/ETH.c **** {
 2880              		.loc 1 1052 0
 2881              		.cfi_startproc
 2882 0000 80B5     		push	{r7, lr}
 2883              	.LCFI130:
 2884              		.cfi_def_cfa_offset 8
 2885              		.cfi_offset 7, -8
 2886              		.cfi_offset 14, -4
 2887 0002 86B0     		sub	sp, sp, #24
 2888              	.LCFI131:
 2889              		.cfi_def_cfa_offset 32
 2890 0004 00AF     		add	r7, sp, #0
 2891              	.LCFI132:
 2892              		.cfi_def_cfa_register 7
 2893 0006 F860     		str	r0, [r7, #12]
 2894 0008 B960     		str	r1, [r7, #8]
 2895 000a 7A60     		str	r2, [r7, #4]
 2896 000c 3B60     		str	r3, [r7]
1053:.\Generated_Source\PSoC4/ETH.c **** 	/*
1054:.\Generated_Source\PSoC4/ETH.c **** 	 * Initialize the device and the address configuration, then
1055:.\Generated_Source\PSoC4/ETH.c **** 	 * execute socket memory initialization for the local allocation
1056:.\Generated_Source\PSoC4/ETH.c **** 	 * table.
1057:.\Generated_Source\PSoC4/ETH.c **** 	 */
1058:.\Generated_Source\PSoC4/ETH.c **** 	int index;
1059:.\Generated_Source\PSoC4/ETH.c **** 	
1060:.\Generated_Source\PSoC4/ETH.c **** 	CyDelay( 250 ); /* Fixed Boot Delay or chip inintialization will fail */
 2897              		.loc 1 1060 0
 2898 000e FA20     		mov	r0, #250
 2899 0010 FFF7FEFF 		bl	CyDelay
1061:.\Generated_Source\PSoC4/ETH.c **** 	
1062:.\Generated_Source\PSoC4/ETH.c **** 	/* Reset the device */
1063:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetMode(0x80); /* Send Reset Command */
 2900              		.loc 1 1063 0
 2901 0014 8020     		mov	r0, #128
 2902 0016 FFF7FEFF 		bl	ETH_SetMode
1064:.\Generated_Source\PSoC4/ETH.c **** 	/* Wait for the chip initialization delay */
1065:.\Generated_Source\PSoC4/ETH.c **** 	CyDelay( 10 );
 2903              		.loc 1 1065 0
 2904 001a 0A20     		mov	r0, #10
 2905 001c FFF7FEFF 		bl	CyDelay
1066:.\Generated_Source\PSoC4/ETH.c **** 	
1067:.\Generated_Source\PSoC4/ETH.c **** 	/* Close all of the socket, and clear the memory to make them available. */
1068:.\Generated_Source\PSoC4/ETH.c **** 	for(index=0;index<ETH_MAX_SOCKET;++index) {
 2906              		.loc 1 1068 0
 2907 0020 0023     		mov	r3, #0
 2908 0022 7B61     		str	r3, [r7, #20]
 2909 0024 3BE0     		b	.L118
 2910              	.L119:
1069:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketClose( index );
 2911              		.loc 1 1069 0 discriminator 2
 2912 0026 7B69     		ldr	r3, [r7, #20]
 2913 0028 DBB2     		uxtb	r3, r3
 2914 002a 181C     		mov	r0, r3
 2915 002c FFF7FEFF 		bl	ETH_SocketClose
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 71


1070:.\Generated_Source\PSoC4/ETH.c **** 		/* Set the socket memory size */
1071:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketTxMemSize(index, ETH_MEM_2K); /* 2K each */
 2916              		.loc 1 1071 0 discriminator 2
 2917 0030 7B69     		ldr	r3, [r7, #20]
 2918 0032 DBB2     		uxtb	r3, r3
 2919 0034 181C     		mov	r0, r3
 2920 0036 0121     		mov	r1, #1
 2921 0038 FFF7FEFF 		bl	ETH_SetSocketTxMemSize
1072:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketRxMemSize(index, ETH_MEM_2K); /* 2K Each */
 2922              		.loc 1 1072 0 discriminator 2
 2923 003c 7B69     		ldr	r3, [r7, #20]
 2924 003e DBB2     		uxtb	r3, r3
 2925 0040 181C     		mov	r0, r3
 2926 0042 0121     		mov	r1, #1
 2927 0044 FFF7FEFF 		bl	ETH_SetSocketRxMemSize
1073:.\Generated_Source\PSoC4/ETH.c **** 		// initialize memory buffer pointers
1074:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketRxReadPtr( index, ETH_SOCKET_RX_BASE[index] );
 2928              		.loc 1 1074 0 discriminator 2
 2929 0048 7B69     		ldr	r3, [r7, #20]
 2930 004a DAB2     		uxtb	r2, r3
 2931 004c 234B     		ldr	r3, .L120
 2932 004e 7969     		ldr	r1, [r7, #20]
 2933 0050 4900     		lsl	r1, r1, #1
 2934 0052 CB5A     		ldrh	r3, [r1, r3]
 2935 0054 101C     		mov	r0, r2
 2936 0056 191C     		mov	r1, r3
 2937 0058 FFF7FEFF 		bl	ETH_SetSocketRxReadPtr
1075:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketRxWritePtr( index, ETH_SOCKET_RX_BASE[index] );
 2938              		.loc 1 1075 0 discriminator 2
 2939 005c 7B69     		ldr	r3, [r7, #20]
 2940 005e DAB2     		uxtb	r2, r3
 2941 0060 1E4B     		ldr	r3, .L120
 2942 0062 7969     		ldr	r1, [r7, #20]
 2943 0064 4900     		lsl	r1, r1, #1
 2944 0066 CB5A     		ldrh	r3, [r1, r3]
 2945 0068 101C     		mov	r0, r2
 2946 006a 191C     		mov	r1, r3
 2947 006c FFF7FEFF 		bl	ETH_SetSocketRxWritePtr
1076:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketTxReadPtr( index, ETH_SOCKET_TX_BASE[index] );
 2948              		.loc 1 1076 0 discriminator 2
 2949 0070 7B69     		ldr	r3, [r7, #20]
 2950 0072 DAB2     		uxtb	r2, r3
 2951 0074 1A4B     		ldr	r3, .L120+4
 2952 0076 7969     		ldr	r1, [r7, #20]
 2953 0078 4900     		lsl	r1, r1, #1
 2954 007a CB5A     		ldrh	r3, [r1, r3]
 2955 007c 101C     		mov	r0, r2
 2956 007e 191C     		mov	r1, r3
 2957 0080 FFF7FEFF 		bl	ETH_SetSocketTxReadPtr
1077:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketTxWritePtr( index, ETH_SOCKET_TX_BASE[index] );
 2958              		.loc 1 1077 0 discriminator 2
 2959 0084 7B69     		ldr	r3, [r7, #20]
 2960 0086 DAB2     		uxtb	r2, r3
 2961 0088 154B     		ldr	r3, .L120+4
 2962 008a 7969     		ldr	r1, [r7, #20]
 2963 008c 4900     		lsl	r1, r1, #1
 2964 008e CB5A     		ldrh	r3, [r1, r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 72


 2965 0090 101C     		mov	r0, r2
 2966 0092 191C     		mov	r1, r3
 2967 0094 FFF7FEFF 		bl	ETH_SetSocketTxWritePtr
1068:.\Generated_Source\PSoC4/ETH.c **** 	for(index=0;index<ETH_MAX_SOCKET;++index) {
 2968              		.loc 1 1068 0 discriminator 2
 2969 0098 7B69     		ldr	r3, [r7, #20]
 2970 009a 0133     		add	r3, r3, #1
 2971 009c 7B61     		str	r3, [r7, #20]
 2972              	.L118:
1068:.\Generated_Source\PSoC4/ETH.c **** 	for(index=0;index<ETH_MAX_SOCKET;++index) {
 2973              		.loc 1 1068 0 is_stmt 0 discriminator 1
 2974 009e 7B69     		ldr	r3, [r7, #20]
 2975 00a0 032B     		cmp	r3, #3
 2976 00a2 C0DD     		ble	.L119
1078:.\Generated_Source\PSoC4/ETH.c **** 	}
1079:.\Generated_Source\PSoC4/ETH.c **** 	/* Set device gateway address */
1080:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetGatewayAddress(gateway);
 2977              		.loc 1 1080 0 is_stmt 1
 2978 00a4 3B68     		ldr	r3, [r7]
 2979 00a6 181C     		mov	r0, r3
 2980 00a8 FFF7FEFF 		bl	ETH_SetGatewayAddress
1081:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSubnetMask( subnet );
 2981              		.loc 1 1081 0
 2982 00ac 7B68     		ldr	r3, [r7, #4]
 2983 00ae 181C     		mov	r0, r3
 2984 00b0 FFF7FEFF 		bl	ETH_SetSubnetMask
1082:.\Generated_Source\PSoC4/ETH.c **** 	/* Store the subnet mask for later use, for ERRATA fix */
1083:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SubnetMask = subnet;
 2985              		.loc 1 1083 0
 2986 00b4 0B4B     		ldr	r3, .L120+8
 2987 00b6 7A68     		ldr	r2, [r7, #4]
 2988 00b8 1A60     		str	r2, [r3]
1084:.\Generated_Source\PSoC4/ETH.c **** 	/* store the device mac */
1085:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSourceMAC( mac );
 2989              		.loc 1 1085 0
 2990 00ba FB68     		ldr	r3, [r7, #12]
 2991 00bc 181C     		mov	r0, r3
 2992 00be FFF7FEFF 		bl	ETH_SetSourceMAC
1086:.\Generated_Source\PSoC4/ETH.c **** 	/* store the IP address */
1087:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSourceIP( ip );
 2993              		.loc 1 1087 0
 2994 00c2 BB68     		ldr	r3, [r7, #8]
 2995 00c4 181C     		mov	r0, r3
 2996 00c6 FFF7FEFF 		bl	ETH_SetSourceIP
1088:.\Generated_Source\PSoC4/ETH.c **** 	/* clear pending interrupts */
1089:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetIR(0xFF);
 2997              		.loc 1 1089 0
 2998 00ca FF20     		mov	r0, #255
 2999 00cc FFF7FEFF 		bl	ETH_SetIR
1090:.\Generated_Source\PSoC4/ETH.c **** 	/* clear the subnet mask register (W5100 Errata Fix) */
1091:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSubnetMask( 0 );
 3000              		.loc 1 1091 0
 3001 00d0 0020     		mov	r0, #0
 3002 00d2 FFF7FEFF 		bl	ETH_SetSubnetMask
1092:.\Generated_Source\PSoC4/ETH.c **** }
 3003              		.loc 1 1092 0
 3004 00d6 BD46     		mov	sp, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 73


 3005 00d8 06B0     		add	sp, sp, #24
 3006              		@ sp needed for prologue
 3007 00da 80BD     		pop	{r7, pc}
 3008              	.L121:
 3009              		.align	2
 3010              	.L120:
 3011 00dc 00000000 		.word	ETH_SOCKET_RX_BASE
 3012 00e0 00000000 		.word	ETH_SOCKET_TX_BASE
 3013 00e4 00000000 		.word	ETH_SubnetMask
 3014              		.cfi_endproc
 3015              	.LFE44:
 3016              		.size	ETH_Init, .-ETH_Init
 3017              		.section	.rodata
 3018              		.align	2
 3019              	.LC6:
 3020 0010 30302D64 		.ascii	"00-de-ad-be-ef-00\000"
 3020      652D6164 
 3020      2D62652D 
 3020      65662D30 
 3020      3000
 3021 0022 0000     		.align	2
 3022              	.LC9:
 3023 0024 3139322E 		.ascii	"192.168.0.101\000"
 3023      3136382E 
 3023      302E3130 
 3023      3100
 3024 0032 0000     		.align	2
 3025              	.LC11:
 3026 0034 3235352E 		.ascii	"255.255.255.0\000"
 3026      3235352E 
 3026      3235352E 
 3026      3000
 3027 0042 0000     		.align	2
 3028              	.LC13:
 3029 0044 3139322E 		.ascii	"192.168.0.1\000"
 3029      3136382E 
 3029      302E3100 
 3030              		.section	.text.ETH_Start,"ax",%progbits
 3031              		.align	2
 3032              		.global	ETH_Start
 3033              		.code	16
 3034              		.thumb_func
 3035              		.type	ETH_Start, %function
 3036              	ETH_Start:
 3037              	.LFB45:
1093:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1094:.\Generated_Source\PSoC4/ETH.c **** void
1095:.\Generated_Source\PSoC4/ETH.c **** ETH_Start( void )
1096:.\Generated_Source\PSoC4/ETH.c **** {
 3038              		.loc 1 1096 0
 3039              		.cfi_startproc
 3040 0000 80B5     		push	{r7, lr}
 3041              	.LCFI133:
 3042              		.cfi_def_cfa_offset 8
 3043              		.cfi_offset 7, -8
 3044              		.cfi_offset 14, -4
 3045 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 74


 3046              	.LCFI134:
 3047              		.cfi_def_cfa_offset 24
 3048 0004 00AF     		add	r7, sp, #0
 3049              	.LCFI135:
 3050              		.cfi_def_cfa_register 7
1097:.\Generated_Source\PSoC4/ETH.c **** 	uint32 ip;
1098:.\Generated_Source\PSoC4/ETH.c **** 	uint32 gateway;
1099:.\Generated_Source\PSoC4/ETH.c **** 	uint32 sub;
1100:.\Generated_Source\PSoC4/ETH.c **** 	
1101:.\Generated_Source\PSoC4/ETH.c **** 	/* Check for SPI initialization */
1102:.\Generated_Source\PSoC4/ETH.c **** 	if (SPI0_initVar == 0) {
 3051              		.loc 1 1102 0
 3052 0006 1F4B     		ldr	r3, .L125
 3053 0008 1B78     		ldrb	r3, [r3]
 3054 000a 002B     		cmp	r3, #0
 3055 000c 01D1     		bne	.L123
1103:.\Generated_Source\PSoC4/ETH.c **** 		/*
1104:.\Generated_Source\PSoC4/ETH.c **** 		 * the hardware has not yet been initialized.  Before anything can be
1105:.\Generated_Source\PSoC4/ETH.c **** 		 * initialized within the driver, the external hardware must be started
1106:.\Generated_Source\PSoC4/ETH.c **** 		 */
1107:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_Start();
 3056              		.loc 1 1107 0
 3057 000e FFF7FEFF 		bl	SPI0_Start
 3058              	.L123:
1108:.\Generated_Source\PSoC4/ETH.c **** 	}
1109:.\Generated_Source\PSoC4/ETH.c **** 		
1110:.\Generated_Source\PSoC4/ETH.c **** 	/* wait for power on PLL Lock */
1111:.\Generated_Source\PSoC4/ETH.c **** 	CyDelay( 10 );
 3059              		.loc 1 1111 0
 3060 0012 0A20     		mov	r0, #10
 3061 0014 FFF7FEFF 		bl	CyDelay
1112:.\Generated_Source\PSoC4/ETH.c **** 	/* V1.2 new -- Parse MAC Address string */
1113:.\Generated_Source\PSoC4/ETH.c **** 	if ( ETH_ParseMAC("00-de-ad-be-ef-00", &ETH_MAC[0]) == CYRET_BAD_DATA) {
 3062              		.loc 1 1113 0
 3063 0018 1B4A     		ldr	r2, .L125+4
 3064 001a 1C4B     		ldr	r3, .L125+8
 3065 001c 101C     		mov	r0, r2
 3066 001e 191C     		mov	r1, r3
 3067 0020 FFF7FEFF 		bl	ETH_ParseMAC
 3068 0024 031C     		mov	r3, r0
 3069 0026 062B     		cmp	r3, #6
 3070 0028 11D1     		bne	.L124
1114:.\Generated_Source\PSoC4/ETH.c **** 		ETH_MAC[0] = 0;
 3071              		.loc 1 1114 0
 3072 002a 184B     		ldr	r3, .L125+8
 3073 002c 0022     		mov	r2, #0
 3074 002e 1A70     		strb	r2, [r3]
1115:.\Generated_Source\PSoC4/ETH.c **** 		ETH_MAC[1] = 0xDE;
 3075              		.loc 1 1115 0
 3076 0030 164B     		ldr	r3, .L125+8
 3077 0032 DE22     		mov	r2, #222
 3078 0034 5A70     		strb	r2, [r3, #1]
1116:.\Generated_Source\PSoC4/ETH.c **** 		ETH_MAC[2] = 0xAD;
 3079              		.loc 1 1116 0
 3080 0036 154B     		ldr	r3, .L125+8
 3081 0038 AD22     		mov	r2, #173
 3082 003a 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 75


1117:.\Generated_Source\PSoC4/ETH.c **** 		ETH_MAC[3] = 0xC0;
 3083              		.loc 1 1117 0
 3084 003c 134B     		ldr	r3, .L125+8
 3085 003e C022     		mov	r2, #192
 3086 0040 DA70     		strb	r2, [r3, #3]
1118:.\Generated_Source\PSoC4/ETH.c **** 		ETH_MAC[4] = 0xDE;
 3087              		.loc 1 1118 0
 3088 0042 124B     		ldr	r3, .L125+8
 3089 0044 DE22     		mov	r2, #222
 3090 0046 1A71     		strb	r2, [r3, #4]
1119:.\Generated_Source\PSoC4/ETH.c **** 		ETH_MAC[5] = 0;
 3091              		.loc 1 1119 0
 3092 0048 104B     		ldr	r3, .L125+8
 3093 004a 0022     		mov	r2, #0
 3094 004c 5A71     		strb	r2, [r3, #5]
 3095              	.L124:
1120:.\Generated_Source\PSoC4/ETH.c **** 	}
1121:.\Generated_Source\PSoC4/ETH.c **** 	/* END of V1.2 Update ------ */
1122:.\Generated_Source\PSoC4/ETH.c **** 	ip = ETH_ParseIP("192.168.0.101");
 3096              		.loc 1 1122 0
 3097 004e 104B     		ldr	r3, .L125+12
 3098 0050 181C     		mov	r0, r3
 3099 0052 FFF7FEFF 		bl	ETH_ParseIP
 3100 0056 031C     		mov	r3, r0
 3101 0058 FB60     		str	r3, [r7, #12]
1123:.\Generated_Source\PSoC4/ETH.c **** 	sub = ETH_ParseIP("255.255.255.0");
 3102              		.loc 1 1123 0
 3103 005a 0E4B     		ldr	r3, .L125+16
 3104 005c 181C     		mov	r0, r3
 3105 005e FFF7FEFF 		bl	ETH_ParseIP
 3106 0062 031C     		mov	r3, r0
 3107 0064 BB60     		str	r3, [r7, #8]
1124:.\Generated_Source\PSoC4/ETH.c **** 	gateway = ETH_ParseIP("192.168.0.1");
 3108              		.loc 1 1124 0
 3109 0066 0C4B     		ldr	r3, .L125+20
 3110 0068 181C     		mov	r0, r3
 3111 006a FFF7FEFF 		bl	ETH_ParseIP
 3112 006e 031C     		mov	r3, r0
 3113 0070 7B60     		str	r3, [r7, #4]
1125:.\Generated_Source\PSoC4/ETH.c **** 	/* Initialize the device with the default data */
1126:.\Generated_Source\PSoC4/ETH.c **** 	ETH_Init( &ETH_MAC[0], ip, sub, gateway  );
 3114              		.loc 1 1126 0
 3115 0072 0648     		ldr	r0, .L125+8
 3116 0074 F968     		ldr	r1, [r7, #12]
 3117 0076 BA68     		ldr	r2, [r7, #8]
 3118 0078 7B68     		ldr	r3, [r7, #4]
 3119 007a FFF7FEFF 		bl	ETH_Init
1127:.\Generated_Source\PSoC4/ETH.c **** }
 3120              		.loc 1 1127 0
 3121 007e BD46     		mov	sp, r7
 3122 0080 04B0     		add	sp, sp, #16
 3123              		@ sp needed for prologue
 3124 0082 80BD     		pop	{r7, pc}
 3125              	.L126:
 3126              		.align	2
 3127              	.L125:
 3128 0084 00000000 		.word	SPI0_initVar
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 76


 3129 0088 10000000 		.word	.LC6
 3130 008c 00000000 		.word	ETH_MAC
 3131 0090 24000000 		.word	.LC9
 3132 0094 34000000 		.word	.LC11
 3133 0098 44000000 		.word	.LC13
 3134              		.cfi_endproc
 3135              	.LFE45:
 3136              		.size	ETH_Start, .-ETH_Start
 3137              		.section	.text.ETH_ParseIP,"ax",%progbits
 3138              		.align	2
 3139              		.global	ETH_ParseIP
 3140              		.code	16
 3141              		.thumb_func
 3142              		.type	ETH_ParseIP, %function
 3143              	ETH_ParseIP:
 3144              	.LFB46:
1128:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1129:.\Generated_Source\PSoC4/ETH.c **** uint32
1130:.\Generated_Source\PSoC4/ETH.c **** ETH_ParseIP( const char* ipString )
1131:.\Generated_Source\PSoC4/ETH.c **** {
 3145              		.loc 1 1131 0
 3146              		.cfi_startproc
 3147 0000 90B5     		push	{r4, r7, lr}
 3148              	.LCFI136:
 3149              		.cfi_def_cfa_offset 12
 3150              		.cfi_offset 4, -12
 3151              		.cfi_offset 7, -8
 3152              		.cfi_offset 14, -4
 3153 0002 89B0     		sub	sp, sp, #36
 3154              	.LCFI137:
 3155              		.cfi_def_cfa_offset 48
 3156 0004 00AF     		add	r7, sp, #0
 3157              	.LCFI138:
 3158              		.cfi_def_cfa_register 7
 3159 0006 7860     		str	r0, [r7, #4]
1132:.\Generated_Source\PSoC4/ETH.c **** 	/*
1133:.\Generated_Source\PSoC4/ETH.c **** 	 * Parse a human readable string in to a IP address usable by the hardare
1134:.\Generated_Source\PSoC4/ETH.c **** 	 */
1135:.\Generated_Source\PSoC4/ETH.c **** 	int index;
1136:.\Generated_Source\PSoC4/ETH.c **** 	char digit[5];
1137:.\Generated_Source\PSoC4/ETH.c **** 	uint8 ip[4];
1138:.\Generated_Source\PSoC4/ETH.c **** 	int counter;
1139:.\Generated_Source\PSoC4/ETH.c **** 	int dindex;
1140:.\Generated_Source\PSoC4/ETH.c **** 	
1141:.\Generated_Source\PSoC4/ETH.c **** 	index = 0;
 3160              		.loc 1 1141 0
 3161 0008 0023     		mov	r3, #0
 3162 000a FB61     		str	r3, [r7, #28]
1142:.\Generated_Source\PSoC4/ETH.c **** 	dindex = 0;
 3163              		.loc 1 1142 0
 3164 000c 0023     		mov	r3, #0
 3165 000e 7B61     		str	r3, [r7, #20]
1143:.\Generated_Source\PSoC4/ETH.c **** 	counter = 0;
 3166              		.loc 1 1143 0
 3167 0010 0023     		mov	r3, #0
 3168 0012 BB61     		str	r3, [r7, #24]
1144:.\Generated_Source\PSoC4/ETH.c **** 	
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 77


1145:.\Generated_Source\PSoC4/ETH.c **** 	while ( (counter < 4) && ((unsigned int)index < strlen(ipString) ) ) {
 3169              		.loc 1 1145 0
 3170 0014 63E0     		b	.L128
 3171              	.L137:
1146:.\Generated_Source\PSoC4/ETH.c **** 		if ( (ipString[index] >= '0' ) && (ipString[index] <= '9') ) {
 3172              		.loc 1 1146 0
 3173 0016 FB69     		ldr	r3, [r7, #28]
 3174 0018 7A68     		ldr	r2, [r7, #4]
 3175 001a D318     		add	r3, r2, r3
 3176 001c 1B78     		ldrb	r3, [r3]
 3177 001e 2F2B     		cmp	r3, #47
 3178 0020 17D9     		bls	.L129
 3179              		.loc 1 1146 0 is_stmt 0 discriminator 1
 3180 0022 FB69     		ldr	r3, [r7, #28]
 3181 0024 7A68     		ldr	r2, [r7, #4]
 3182 0026 D318     		add	r3, r2, r3
 3183 0028 1B78     		ldrb	r3, [r3]
 3184 002a 392B     		cmp	r3, #57
 3185 002c 11D8     		bhi	.L129
1147:.\Generated_Source\PSoC4/ETH.c **** 			if (dindex > 3) return( 0xFFFFFFFF );
 3186              		.loc 1 1147 0 is_stmt 1
 3187 002e 7B69     		ldr	r3, [r7, #20]
 3188 0030 032B     		cmp	r3, #3
 3189 0032 02DD     		ble	.L130
 3190              		.loc 1 1147 0 is_stmt 0 discriminator 1
 3191 0034 0123     		mov	r3, #1
 3192 0036 5B42     		neg	r3, r3
 3193 0038 7BE0     		b	.L139
 3194              	.L130:
1148:.\Generated_Source\PSoC4/ETH.c **** 			digit[dindex++] = ipString[index];
 3195              		.loc 1 1148 0 is_stmt 1
 3196 003a FB69     		ldr	r3, [r7, #28]
 3197 003c 7A68     		ldr	r2, [r7, #4]
 3198 003e D318     		add	r3, r2, r3
 3199 0040 1A78     		ldrb	r2, [r3]
 3200 0042 391C     		mov	r1, r7
 3201 0044 0C31     		add	r1, r1, #12
 3202 0046 7B69     		ldr	r3, [r7, #20]
 3203 0048 CB18     		add	r3, r1, r3
 3204 004a 1A70     		strb	r2, [r3]
 3205 004c 7B69     		ldr	r3, [r7, #20]
 3206 004e 0133     		add	r3, r3, #1
 3207 0050 7B61     		str	r3, [r7, #20]
 3208              	.L129:
1149:.\Generated_Source\PSoC4/ETH.c **** 			
1150:.\Generated_Source\PSoC4/ETH.c **** 		}
1151:.\Generated_Source\PSoC4/ETH.c **** 		
1152:.\Generated_Source\PSoC4/ETH.c **** 		if ( (ipString[index] == '.') || (ipString[index+1] == 0) ) {
 3209              		.loc 1 1152 0
 3210 0052 FB69     		ldr	r3, [r7, #28]
 3211 0054 7A68     		ldr	r2, [r7, #4]
 3212 0056 D318     		add	r3, r2, r3
 3213 0058 1B78     		ldrb	r3, [r3]
 3214 005a 2E2B     		cmp	r3, #46
 3215 005c 06D0     		beq	.L132
 3216              		.loc 1 1152 0 is_stmt 0 discriminator 1
 3217 005e FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 78


 3218 0060 0133     		add	r3, r3, #1
 3219 0062 7A68     		ldr	r2, [r7, #4]
 3220 0064 D318     		add	r3, r2, r3
 3221 0066 1B78     		ldrb	r3, [r3]
 3222 0068 002B     		cmp	r3, #0
 3223 006a 35D1     		bne	.L133
 3224              	.L132:
1153:.\Generated_Source\PSoC4/ETH.c **** 			digit[dindex] = 0;
 3225              		.loc 1 1153 0 is_stmt 1
 3226 006c 3A1C     		mov	r2, r7
 3227 006e 0C32     		add	r2, r2, #12
 3228 0070 7B69     		ldr	r3, [r7, #20]
 3229 0072 D318     		add	r3, r2, r3
 3230 0074 0022     		mov	r2, #0
 3231 0076 1A70     		strb	r2, [r3]
1154:.\Generated_Source\PSoC4/ETH.c **** 			dindex = 0;
 3232              		.loc 1 1154 0
 3233 0078 0023     		mov	r3, #0
 3234 007a 7B61     		str	r3, [r7, #20]
1155:.\Generated_Source\PSoC4/ETH.c **** 			/* convert the value and store in the buffer */
1156:.\Generated_Source\PSoC4/ETH.c **** 			ip[counter] = 0;
 3235              		.loc 1 1156 0
 3236 007c 3A1C     		mov	r2, r7
 3237 007e 0832     		add	r2, r2, #8
 3238 0080 BB69     		ldr	r3, [r7, #24]
 3239 0082 D318     		add	r3, r2, r3
 3240 0084 0022     		mov	r2, #0
 3241 0086 1A70     		strb	r2, [r3]
1157:.\Generated_Source\PSoC4/ETH.c **** 			while (digit[dindex] != 0) {
 3242              		.loc 1 1157 0
 3243 0088 1AE0     		b	.L134
 3244              	.L135:
1158:.\Generated_Source\PSoC4/ETH.c **** 				ip[counter] = (ip[counter]*10) + (digit[dindex]-'0');
 3245              		.loc 1 1158 0
 3246 008a 3A1C     		mov	r2, r7
 3247 008c 0832     		add	r2, r2, #8
 3248 008e BB69     		ldr	r3, [r7, #24]
 3249 0090 D318     		add	r3, r2, r3
 3250 0092 1B78     		ldrb	r3, [r3]
 3251 0094 1A1C     		add	r2, r3, #0
 3252 0096 9200     		lsl	r2, r2, #2
 3253 0098 D318     		add	r3, r2, r3
 3254 009a 5B00     		lsl	r3, r3, #1
 3255 009c DAB2     		uxtb	r2, r3
 3256 009e 391C     		mov	r1, r7
 3257 00a0 0C31     		add	r1, r1, #12
 3258 00a2 7B69     		ldr	r3, [r7, #20]
 3259 00a4 CB18     		add	r3, r1, r3
 3260 00a6 1B78     		ldrb	r3, [r3]
 3261 00a8 D318     		add	r3, r2, r3
 3262 00aa DBB2     		uxtb	r3, r3
 3263 00ac 303B     		sub	r3, r3, #48
 3264 00ae DAB2     		uxtb	r2, r3
 3265 00b0 391C     		mov	r1, r7
 3266 00b2 0831     		add	r1, r1, #8
 3267 00b4 BB69     		ldr	r3, [r7, #24]
 3268 00b6 CB18     		add	r3, r1, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 79


 3269 00b8 1A70     		strb	r2, [r3]
1159:.\Generated_Source\PSoC4/ETH.c **** 				++dindex;
 3270              		.loc 1 1159 0
 3271 00ba 7B69     		ldr	r3, [r7, #20]
 3272 00bc 0133     		add	r3, r3, #1
 3273 00be 7B61     		str	r3, [r7, #20]
 3274              	.L134:
1157:.\Generated_Source\PSoC4/ETH.c **** 			while (digit[dindex] != 0) {
 3275              		.loc 1 1157 0 discriminator 1
 3276 00c0 3A1C     		mov	r2, r7
 3277 00c2 0C32     		add	r2, r2, #12
 3278 00c4 7B69     		ldr	r3, [r7, #20]
 3279 00c6 D318     		add	r3, r2, r3
 3280 00c8 1B78     		ldrb	r3, [r3]
 3281 00ca 002B     		cmp	r3, #0
 3282 00cc DDD1     		bne	.L135
1160:.\Generated_Source\PSoC4/ETH.c **** 				// ip[counter] = ...
1161:.\Generated_Source\PSoC4/ETH.c **** 			}
1162:.\Generated_Source\PSoC4/ETH.c **** 			/* reset the digit index to start accumulating digits again*/
1163:.\Generated_Source\PSoC4/ETH.c **** 			dindex = 0;
 3283              		.loc 1 1163 0
 3284 00ce 0023     		mov	r3, #0
 3285 00d0 7B61     		str	r3, [r7, #20]
1164:.\Generated_Source\PSoC4/ETH.c **** 			/* move to the next address byte */
1165:.\Generated_Source\PSoC4/ETH.c **** 			++counter;
 3286              		.loc 1 1165 0
 3287 00d2 BB69     		ldr	r3, [r7, #24]
 3288 00d4 0133     		add	r3, r3, #1
 3289 00d6 BB61     		str	r3, [r7, #24]
 3290              	.L133:
1166:.\Generated_Source\PSoC4/ETH.c **** 		}
1167:.\Generated_Source\PSoC4/ETH.c **** 		++index;
 3291              		.loc 1 1167 0
 3292 00d8 FB69     		ldr	r3, [r7, #28]
 3293 00da 0133     		add	r3, r3, #1
 3294 00dc FB61     		str	r3, [r7, #28]
 3295              	.L128:
1145:.\Generated_Source\PSoC4/ETH.c **** 	while ( (counter < 4) && ((unsigned int)index < strlen(ipString) ) ) {
 3296              		.loc 1 1145 0 discriminator 1
 3297 00de BB69     		ldr	r3, [r7, #24]
 3298 00e0 032B     		cmp	r3, #3
 3299 00e2 07DC     		bgt	.L136
1145:.\Generated_Source\PSoC4/ETH.c **** 	while ( (counter < 4) && ((unsigned int)index < strlen(ipString) ) ) {
 3300              		.loc 1 1145 0 is_stmt 0 discriminator 2
 3301 00e4 FC69     		ldr	r4, [r7, #28]
 3302 00e6 7B68     		ldr	r3, [r7, #4]
 3303 00e8 181C     		mov	r0, r3
 3304 00ea FFF7FEFF 		bl	strlen
 3305 00ee 031C     		mov	r3, r0
 3306 00f0 9C42     		cmp	r4, r3
 3307 00f2 90D3     		bcc	.L137
 3308              	.L136:
1168:.\Generated_Source\PSoC4/ETH.c **** 	}
1169:.\Generated_Source\PSoC4/ETH.c **** 	
1170:.\Generated_Source\PSoC4/ETH.c **** 	if (counter != 4) {
 3309              		.loc 1 1170 0 is_stmt 1
 3310 00f4 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 80


 3311 00f6 042B     		cmp	r3, #4
 3312 00f8 02D0     		beq	.L138
1171:.\Generated_Source\PSoC4/ETH.c **** 		return( 0xFFFFFFFF );
 3313              		.loc 1 1171 0
 3314 00fa 0123     		mov	r3, #1
 3315 00fc 5B42     		neg	r3, r3
 3316 00fe 18E0     		b	.L139
 3317              	.L138:
1172:.\Generated_Source\PSoC4/ETH.c **** 	}
1173:.\Generated_Source\PSoC4/ETH.c **** 	else {
1174:.\Generated_Source\PSoC4/ETH.c **** 		return( ETH_IPADDRESS(ip[0], ip[1], ip[2], ip[3]) );
 3318              		.loc 1 1174 0
 3319 0100 3B1C     		mov	r3, r7
 3320 0102 0833     		add	r3, r3, #8
 3321 0104 1B78     		ldrb	r3, [r3]
 3322 0106 1A1C     		mov	r2, r3
 3323 0108 3B1C     		mov	r3, r7
 3324 010a 0833     		add	r3, r3, #8
 3325 010c 5B78     		ldrb	r3, [r3, #1]
 3326 010e 1B02     		lsl	r3, r3, #8
 3327 0110 1B04     		lsl	r3, r3, #16
 3328 0112 1B0C     		lsr	r3, r3, #16
 3329 0114 D218     		add	r2, r2, r3
 3330 0116 3B1C     		mov	r3, r7
 3331 0118 0833     		add	r3, r3, #8
 3332 011a 9B78     		ldrb	r3, [r3, #2]
 3333 011c 1B04     		lsl	r3, r3, #16
 3334 011e 191C     		mov	r1, r3
 3335 0120 FF23     		mov	r3, #255
 3336 0122 1B04     		lsl	r3, r3, #16
 3337 0124 0B40     		and	r3, r1
 3338 0126 D218     		add	r2, r2, r3
 3339 0128 3B1C     		mov	r3, r7
 3340 012a 0833     		add	r3, r3, #8
 3341 012c DB78     		ldrb	r3, [r3, #3]
 3342 012e 1B06     		lsl	r3, r3, #24
 3343 0130 D318     		add	r3, r2, r3
 3344              	.L139:
1175:.\Generated_Source\PSoC4/ETH.c **** 	}
1176:.\Generated_Source\PSoC4/ETH.c **** }
 3345              		.loc 1 1176 0
 3346 0132 181C     		mov	r0, r3
 3347 0134 BD46     		mov	sp, r7
 3348 0136 09B0     		add	sp, sp, #36
 3349              		@ sp needed for prologue
 3350 0138 90BD     		pop	{r4, r7, pc}
 3351              		.cfi_endproc
 3352              	.LFE46:
 3353              		.size	ETH_ParseIP, .-ETH_ParseIP
 3354 013a C046     		.section	.text.ETH_ParseMAC,"ax",%progbits
 3355              		.align	2
 3356              		.global	ETH_ParseMAC
 3357              		.code	16
 3358              		.thumb_func
 3359              		.type	ETH_ParseMAC, %function
 3360              	ETH_ParseMAC:
 3361              	.LFB47:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 81


1177:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1178:.\Generated_Source\PSoC4/ETH.c **** /**
1179:.\Generated_Source\PSoC4/ETH.c ****  * /brief Parse a MAC Address string in to a 6-byte mac address
1180:.\Generated_Source\PSoC4/ETH.c ****  * /param *macString Pointer to the ASCII-Z String containing the MAC address
1181:.\Generated_Source\PSoC4/ETH.c ****  * /param *mac Pointer to the 6-byte array to hold the output mac addres
1182:.\Generated_Source\PSoC4/ETH.c ****  */
1183:.\Generated_Source\PSoC4/ETH.c **** cystatus ETH_ParseMAC(const char *macString, uint8 *mac)
1184:.\Generated_Source\PSoC4/ETH.c **** {
 3362              		.loc 1 1184 0
 3363              		.cfi_startproc
 3364 0000 80B5     		push	{r7, lr}
 3365              	.LCFI139:
 3366              		.cfi_def_cfa_offset 8
 3367              		.cfi_offset 7, -8
 3368              		.cfi_offset 14, -4
 3369 0002 86B0     		sub	sp, sp, #24
 3370              	.LCFI140:
 3371              		.cfi_def_cfa_offset 32
 3372 0004 00AF     		add	r7, sp, #0
 3373              	.LCFI141:
 3374              		.cfi_def_cfa_register 7
 3375 0006 7860     		str	r0, [r7, #4]
 3376 0008 3960     		str	r1, [r7]
1185:.\Generated_Source\PSoC4/ETH.c **** 	/* 
1186:.\Generated_Source\PSoC4/ETH.c **** 	 * a mac address is specified as a string of 6 hex bytes with
1187:.\Generated_Source\PSoC4/ETH.c **** 	 * dashes ('-') seperating the bytes.  An invalidly formed
1188:.\Generated_Source\PSoC4/ETH.c **** 	 * address will only process the values up the error and return BAD_DATA
1189:.\Generated_Source\PSoC4/ETH.c **** 	 * otherwise, SUCESS is returned.
1190:.\Generated_Source\PSoC4/ETH.c **** 	 */
1191:.\Generated_Source\PSoC4/ETH.c **** 	int digit;
1192:.\Generated_Source\PSoC4/ETH.c **** 	int index;
1193:.\Generated_Source\PSoC4/ETH.c **** 	cystatus result;
1194:.\Generated_Source\PSoC4/ETH.c **** 	
1195:.\Generated_Source\PSoC4/ETH.c **** 	result = CYRET_SUCCESS;
 3377              		.loc 1 1195 0
 3378 000a 0023     		mov	r3, #0
 3379 000c FB60     		str	r3, [r7, #12]
1196:.\Generated_Source\PSoC4/ETH.c **** 	index = 0;
 3380              		.loc 1 1196 0
 3381 000e 0023     		mov	r3, #0
 3382 0010 3B61     		str	r3, [r7, #16]
1197:.\Generated_Source\PSoC4/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3383              		.loc 1 1197 0
 3384 0012 0023     		mov	r3, #0
 3385 0014 7B61     		str	r3, [r7, #20]
 3386 0016 F9E0     		b	.L141
 3387              	.L167:
1198:.\Generated_Source\PSoC4/ETH.c **** 		// process the first nibble
1199:.\Generated_Source\PSoC4/ETH.c **** 		if (ETH_ISXDIGIT(macString[index]) ) {
 3388              		.loc 1 1199 0
 3389 0018 3B69     		ldr	r3, [r7, #16]
 3390 001a 7A68     		ldr	r2, [r7, #4]
 3391 001c D318     		add	r3, r2, r3
 3392 001e 1B78     		ldrb	r3, [r3]
 3393 0020 2F2B     		cmp	r3, #47
 3394 0022 05D9     		bls	.L142
 3395              		.loc 1 1199 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 82


 3396 0024 3B69     		ldr	r3, [r7, #16]
 3397 0026 7A68     		ldr	r2, [r7, #4]
 3398 0028 D318     		add	r3, r2, r3
 3399 002a 1B78     		ldrb	r3, [r3]
 3400 002c 392B     		cmp	r3, #57
 3401 002e 19D9     		bls	.L143
 3402              	.L142:
 3403              		.loc 1 1199 0 discriminator 2
 3404 0030 3B69     		ldr	r3, [r7, #16]
 3405 0032 7A68     		ldr	r2, [r7, #4]
 3406 0034 D318     		add	r3, r2, r3
 3407 0036 1B78     		ldrb	r3, [r3]
 3408 0038 602B     		cmp	r3, #96
 3409 003a 05D9     		bls	.L144
 3410              		.loc 1 1199 0 discriminator 1
 3411 003c 3B69     		ldr	r3, [r7, #16]
 3412 003e 7A68     		ldr	r2, [r7, #4]
 3413 0040 D318     		add	r3, r2, r3
 3414 0042 1B78     		ldrb	r3, [r3]
 3415 0044 662B     		cmp	r3, #102
 3416 0046 0DD9     		bls	.L143
 3417              	.L144:
 3418              		.loc 1 1199 0 discriminator 2
 3419 0048 3B69     		ldr	r3, [r7, #16]
 3420 004a 7A68     		ldr	r2, [r7, #4]
 3421 004c D318     		add	r3, r2, r3
 3422 004e 1B78     		ldrb	r3, [r3]
 3423 0050 402B     		cmp	r3, #64
 3424 0052 00D8     		bhi	.LCB3010
 3425 0054 D5E0     		b	.L145	@long jump
 3426              	.LCB3010:
 3427              		.loc 1 1199 0 discriminator 3
 3428 0056 3B69     		ldr	r3, [r7, #16]
 3429 0058 7A68     		ldr	r2, [r7, #4]
 3430 005a D318     		add	r3, r2, r3
 3431 005c 1B78     		ldrb	r3, [r3]
 3432 005e 462B     		cmp	r3, #70
 3433 0060 00D9     		bls	.LCB3016
 3434 0062 CEE0     		b	.L145	@long jump
 3435              	.LCB3016:
 3436              	.L143:
1200:.\Generated_Source\PSoC4/ETH.c **** 			mac[digit] = ETH_HEX2BIN(macString[index]);
 3437              		.loc 1 1200 0 is_stmt 1
 3438 0064 7B69     		ldr	r3, [r7, #20]
 3439 0066 3A68     		ldr	r2, [r7]
 3440 0068 D218     		add	r2, r2, r3
 3441 006a 3B69     		ldr	r3, [r7, #16]
 3442 006c 7968     		ldr	r1, [r7, #4]
 3443 006e CB18     		add	r3, r1, r3
 3444 0070 1B78     		ldrb	r3, [r3]
 3445 0072 2F2B     		cmp	r3, #47
 3446 0074 0CD9     		bls	.L146
 3447              		.loc 1 1200 0 is_stmt 0 discriminator 1
 3448 0076 3B69     		ldr	r3, [r7, #16]
 3449 0078 7968     		ldr	r1, [r7, #4]
 3450 007a CB18     		add	r3, r1, r3
 3451 007c 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 83


 3452 007e 392B     		cmp	r3, #57
 3453 0080 06D8     		bhi	.L146
 3454 0082 3B69     		ldr	r3, [r7, #16]
 3455 0084 7968     		ldr	r1, [r7, #4]
 3456 0086 CB18     		add	r3, r1, r3
 3457 0088 1B78     		ldrb	r3, [r3]
 3458 008a 303B     		sub	r3, r3, #48
 3459 008c DBB2     		uxtb	r3, r3
 3460 008e 26E0     		b	.L147
 3461              	.L146:
 3462              		.loc 1 1200 0 discriminator 2
 3463 0090 3B69     		ldr	r3, [r7, #16]
 3464 0092 7968     		ldr	r1, [r7, #4]
 3465 0094 CB18     		add	r3, r1, r3
 3466 0096 1B78     		ldrb	r3, [r3]
 3467 0098 602B     		cmp	r3, #96
 3468 009a 0CD9     		bls	.L148
 3469              		.loc 1 1200 0 discriminator 4
 3470 009c 3B69     		ldr	r3, [r7, #16]
 3471 009e 7968     		ldr	r1, [r7, #4]
 3472 00a0 CB18     		add	r3, r1, r3
 3473 00a2 1B78     		ldrb	r3, [r3]
 3474 00a4 662B     		cmp	r3, #102
 3475 00a6 06D8     		bhi	.L148
 3476              		.loc 1 1200 0 discriminator 2
 3477 00a8 3B69     		ldr	r3, [r7, #16]
 3478 00aa 7968     		ldr	r1, [r7, #4]
 3479 00ac CB18     		add	r3, r1, r3
 3480 00ae 1B78     		ldrb	r3, [r3]
 3481 00b0 573B     		sub	r3, r3, #87
 3482 00b2 DBB2     		uxtb	r3, r3
 3483 00b4 13E0     		b	.L149
 3484              	.L148:
 3485              		.loc 1 1200 0 discriminator 5
 3486 00b6 3B69     		ldr	r3, [r7, #16]
 3487 00b8 7968     		ldr	r1, [r7, #4]
 3488 00ba CB18     		add	r3, r1, r3
 3489 00bc 1B78     		ldrb	r3, [r3]
 3490 00be 402B     		cmp	r3, #64
 3491 00c0 0CD9     		bls	.L150
 3492              		.loc 1 1200 0 discriminator 7
 3493 00c2 3B69     		ldr	r3, [r7, #16]
 3494 00c4 7968     		ldr	r1, [r7, #4]
 3495 00c6 CB18     		add	r3, r1, r3
 3496 00c8 1B78     		ldrb	r3, [r3]
 3497 00ca 462B     		cmp	r3, #70
 3498 00cc 06D8     		bhi	.L150
 3499              		.loc 1 1200 0 discriminator 3
 3500 00ce 3B69     		ldr	r3, [r7, #16]
 3501 00d0 7968     		ldr	r1, [r7, #4]
 3502 00d2 CB18     		add	r3, r1, r3
 3503 00d4 1B78     		ldrb	r3, [r3]
 3504 00d6 373B     		sub	r3, r3, #55
 3505 00d8 DBB2     		uxtb	r3, r3
 3506 00da 00E0     		b	.L151
 3507              	.L150:
 3508              		.loc 1 1200 0 discriminator 8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 84


 3509 00dc 0023     		mov	r3, #0
 3510              	.L151:
 3511              	.L149:
 3512              	.L147:
 3513              		.loc 1 1200 0 discriminator 3
 3514 00de 1370     		strb	r3, [r2]
1201:.\Generated_Source\PSoC4/ETH.c **** 			++index;
 3515              		.loc 1 1201 0 is_stmt 1 discriminator 3
 3516 00e0 3B69     		ldr	r3, [r7, #16]
 3517 00e2 0133     		add	r3, r3, #1
 3518 00e4 3B61     		str	r3, [r7, #16]
1202:.\Generated_Source\PSoC4/ETH.c **** 			mac[digit] <<= 4;
 3519              		.loc 1 1202 0 discriminator 3
 3520 00e6 7B69     		ldr	r3, [r7, #20]
 3521 00e8 3A68     		ldr	r2, [r7]
 3522 00ea D318     		add	r3, r2, r3
 3523 00ec 7A69     		ldr	r2, [r7, #20]
 3524 00ee 3968     		ldr	r1, [r7]
 3525 00f0 8A18     		add	r2, r1, r2
 3526 00f2 1278     		ldrb	r2, [r2]
 3527 00f4 1201     		lsl	r2, r2, #4
 3528 00f6 D2B2     		uxtb	r2, r2
 3529 00f8 1A70     		strb	r2, [r3]
1203:.\Generated_Source\PSoC4/ETH.c **** 			if (ETH_ISXDIGIT(macString[index])) {
 3530              		.loc 1 1203 0 discriminator 3
 3531 00fa 3B69     		ldr	r3, [r7, #16]
 3532 00fc 7A68     		ldr	r2, [r7, #4]
 3533 00fe D318     		add	r3, r2, r3
 3534 0100 1B78     		ldrb	r3, [r3]
 3535 0102 2F2B     		cmp	r3, #47
 3536 0104 05D9     		bls	.L152
 3537              		.loc 1 1203 0 is_stmt 0 discriminator 1
 3538 0106 3B69     		ldr	r3, [r7, #16]
 3539 0108 7A68     		ldr	r2, [r7, #4]
 3540 010a D318     		add	r3, r2, r3
 3541 010c 1B78     		ldrb	r3, [r3]
 3542 010e 392B     		cmp	r3, #57
 3543 0110 17D9     		bls	.L153
 3544              	.L152:
 3545              		.loc 1 1203 0 discriminator 2
 3546 0112 3B69     		ldr	r3, [r7, #16]
 3547 0114 7A68     		ldr	r2, [r7, #4]
 3548 0116 D318     		add	r3, r2, r3
 3549 0118 1B78     		ldrb	r3, [r3]
 3550 011a 602B     		cmp	r3, #96
 3551 011c 05D9     		bls	.L154
 3552              		.loc 1 1203 0 discriminator 1
 3553 011e 3B69     		ldr	r3, [r7, #16]
 3554 0120 7A68     		ldr	r2, [r7, #4]
 3555 0122 D318     		add	r3, r2, r3
 3556 0124 1B78     		ldrb	r3, [r3]
 3557 0126 662B     		cmp	r3, #102
 3558 0128 0BD9     		bls	.L153
 3559              	.L154:
 3560              		.loc 1 1203 0 discriminator 2
 3561 012a 3B69     		ldr	r3, [r7, #16]
 3562 012c 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 85


 3563 012e D318     		add	r3, r2, r3
 3564 0130 1B78     		ldrb	r3, [r3]
 3565 0132 402B     		cmp	r3, #64
 3566 0134 61D9     		bls	.L155
 3567              		.loc 1 1203 0 discriminator 3
 3568 0136 3B69     		ldr	r3, [r7, #16]
 3569 0138 7A68     		ldr	r2, [r7, #4]
 3570 013a D318     		add	r3, r2, r3
 3571 013c 1B78     		ldrb	r3, [r3]
 3572 013e 462B     		cmp	r3, #70
 3573 0140 5BD8     		bhi	.L155
 3574              	.L153:
1204:.\Generated_Source\PSoC4/ETH.c **** 				mac[digit] += ETH_HEX2BIN(macString[index]);
 3575              		.loc 1 1204 0 is_stmt 1
 3576 0142 7B69     		ldr	r3, [r7, #20]
 3577 0144 3A68     		ldr	r2, [r7]
 3578 0146 D218     		add	r2, r2, r3
 3579 0148 7B69     		ldr	r3, [r7, #20]
 3580 014a 3968     		ldr	r1, [r7]
 3581 014c CB18     		add	r3, r1, r3
 3582 014e 1978     		ldrb	r1, [r3]
 3583 0150 3B69     		ldr	r3, [r7, #16]
 3584 0152 7868     		ldr	r0, [r7, #4]
 3585 0154 C318     		add	r3, r0, r3
 3586 0156 1B78     		ldrb	r3, [r3]
 3587 0158 2F2B     		cmp	r3, #47
 3588 015a 0CD9     		bls	.L156
 3589              		.loc 1 1204 0 is_stmt 0 discriminator 1
 3590 015c 3B69     		ldr	r3, [r7, #16]
 3591 015e 7868     		ldr	r0, [r7, #4]
 3592 0160 C318     		add	r3, r0, r3
 3593 0162 1B78     		ldrb	r3, [r3]
 3594 0164 392B     		cmp	r3, #57
 3595 0166 06D8     		bhi	.L156
 3596 0168 3B69     		ldr	r3, [r7, #16]
 3597 016a 7868     		ldr	r0, [r7, #4]
 3598 016c C318     		add	r3, r0, r3
 3599 016e 1B78     		ldrb	r3, [r3]
 3600 0170 303B     		sub	r3, r3, #48
 3601 0172 DBB2     		uxtb	r3, r3
 3602 0174 26E0     		b	.L157
 3603              	.L156:
 3604              		.loc 1 1204 0 discriminator 2
 3605 0176 3B69     		ldr	r3, [r7, #16]
 3606 0178 7868     		ldr	r0, [r7, #4]
 3607 017a C318     		add	r3, r0, r3
 3608 017c 1B78     		ldrb	r3, [r3]
 3609 017e 602B     		cmp	r3, #96
 3610 0180 0CD9     		bls	.L158
 3611              		.loc 1 1204 0 discriminator 4
 3612 0182 3B69     		ldr	r3, [r7, #16]
 3613 0184 7868     		ldr	r0, [r7, #4]
 3614 0186 C318     		add	r3, r0, r3
 3615 0188 1B78     		ldrb	r3, [r3]
 3616 018a 662B     		cmp	r3, #102
 3617 018c 06D8     		bhi	.L158
 3618              		.loc 1 1204 0 discriminator 2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 86


 3619 018e 3B69     		ldr	r3, [r7, #16]
 3620 0190 7868     		ldr	r0, [r7, #4]
 3621 0192 C318     		add	r3, r0, r3
 3622 0194 1B78     		ldrb	r3, [r3]
 3623 0196 573B     		sub	r3, r3, #87
 3624 0198 DBB2     		uxtb	r3, r3
 3625 019a 13E0     		b	.L159
 3626              	.L158:
 3627              		.loc 1 1204 0 discriminator 5
 3628 019c 3B69     		ldr	r3, [r7, #16]
 3629 019e 7868     		ldr	r0, [r7, #4]
 3630 01a0 C318     		add	r3, r0, r3
 3631 01a2 1B78     		ldrb	r3, [r3]
 3632 01a4 402B     		cmp	r3, #64
 3633 01a6 0CD9     		bls	.L160
 3634              		.loc 1 1204 0 discriminator 7
 3635 01a8 3B69     		ldr	r3, [r7, #16]
 3636 01aa 7868     		ldr	r0, [r7, #4]
 3637 01ac C318     		add	r3, r0, r3
 3638 01ae 1B78     		ldrb	r3, [r3]
 3639 01b0 462B     		cmp	r3, #70
 3640 01b2 06D8     		bhi	.L160
 3641              		.loc 1 1204 0 discriminator 3
 3642 01b4 3B69     		ldr	r3, [r7, #16]
 3643 01b6 7868     		ldr	r0, [r7, #4]
 3644 01b8 C318     		add	r3, r0, r3
 3645 01ba 1B78     		ldrb	r3, [r3]
 3646 01bc 373B     		sub	r3, r3, #55
 3647 01be DBB2     		uxtb	r3, r3
 3648 01c0 00E0     		b	.L161
 3649              	.L160:
 3650              		.loc 1 1204 0 discriminator 8
 3651 01c2 0023     		mov	r3, #0
 3652              	.L161:
 3653              	.L159:
 3654              	.L157:
 3655              		.loc 1 1204 0 discriminator 3
 3656 01c4 CB18     		add	r3, r1, r3
 3657 01c6 DBB2     		uxtb	r3, r3
 3658 01c8 1370     		strb	r3, [r2]
1205:.\Generated_Source\PSoC4/ETH.c **** 				++index;
 3659              		.loc 1 1205 0 is_stmt 1 discriminator 3
 3660 01ca 3B69     		ldr	r3, [r7, #16]
 3661 01cc 0133     		add	r3, r3, #1
 3662 01ce 3B61     		str	r3, [r7, #16]
1206:.\Generated_Source\PSoC4/ETH.c **** 				/*
1207:.\Generated_Source\PSoC4/ETH.c **** 				 * now for digits other than digit 5 (the last one) look for
1208:.\Generated_Source\PSoC4/ETH.c **** 				 * the dash seperator.  If there is no dash, return bad data
1209:.\Generated_Source\PSoC4/ETH.c **** 				 */
1210:.\Generated_Source\PSoC4/ETH.c **** 				if (digit<5) {
 3663              		.loc 1 1210 0 discriminator 3
 3664 01d0 7B69     		ldr	r3, [r7, #20]
 3665 01d2 042B     		cmp	r3, #4
 3666 01d4 14DC     		bgt	.L164
1211:.\Generated_Source\PSoC4/ETH.c **** 					if( (macString[index]!='-') && (macString[index]!= ':') ){
 3667              		.loc 1 1211 0
 3668 01d6 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 87


 3669 01d8 7A68     		ldr	r2, [r7, #4]
 3670 01da D318     		add	r3, r2, r3
 3671 01dc 1B78     		ldrb	r3, [r3]
 3672 01de 2D2B     		cmp	r3, #45
 3673 01e0 07D0     		beq	.L163
 3674              		.loc 1 1211 0 is_stmt 0 discriminator 1
 3675 01e2 3B69     		ldr	r3, [r7, #16]
 3676 01e4 7A68     		ldr	r2, [r7, #4]
 3677 01e6 D318     		add	r3, r2, r3
 3678 01e8 1B78     		ldrb	r3, [r3]
 3679 01ea 3A2B     		cmp	r3, #58
 3680 01ec 01D0     		beq	.L163
1212:.\Generated_Source\PSoC4/ETH.c **** 						result = CYRET_BAD_DATA;
 3681              		.loc 1 1212 0 is_stmt 1
 3682 01ee 0623     		mov	r3, #6
 3683 01f0 FB60     		str	r3, [r7, #12]
 3684              	.L163:
1213:.\Generated_Source\PSoC4/ETH.c **** 					}
1214:.\Generated_Source\PSoC4/ETH.c **** 					++index; // move conversion pointer to the next value
 3685              		.loc 1 1214 0
 3686 01f2 3B69     		ldr	r3, [r7, #16]
 3687 01f4 0133     		add	r3, r3, #1
 3688 01f6 3B61     		str	r3, [r7, #16]
1210:.\Generated_Source\PSoC4/ETH.c **** 				if (digit<5) {
 3689              		.loc 1 1210 0
 3690 01f8 02E0     		b	.L164
 3691              	.L155:
1215:.\Generated_Source\PSoC4/ETH.c **** 				}
1216:.\Generated_Source\PSoC4/ETH.c **** 			}
1217:.\Generated_Source\PSoC4/ETH.c **** 			else {
1218:.\Generated_Source\PSoC4/ETH.c **** 				result = CYRET_BAD_DATA;
 3692              		.loc 1 1218 0
 3693 01fa 0623     		mov	r3, #6
 3694 01fc FB60     		str	r3, [r7, #12]
1203:.\Generated_Source\PSoC4/ETH.c **** 			if (ETH_ISXDIGIT(macString[index])) {
 3695              		.loc 1 1203 0
 3696 01fe 02E0     		b	.L165
 3697              	.L164:
 3698 0200 01E0     		b	.L165
 3699              	.L145:
1219:.\Generated_Source\PSoC4/ETH.c **** 			}
1220:.\Generated_Source\PSoC4/ETH.c **** 		}
1221:.\Generated_Source\PSoC4/ETH.c **** 		else {
1222:.\Generated_Source\PSoC4/ETH.c **** 			result = CYRET_BAD_DATA;
 3700              		.loc 1 1222 0
 3701 0202 0623     		mov	r3, #6
 3702 0204 FB60     		str	r3, [r7, #12]
 3703              	.L165:
1197:.\Generated_Source\PSoC4/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3704              		.loc 1 1197 0
 3705 0206 7B69     		ldr	r3, [r7, #20]
 3706 0208 0133     		add	r3, r3, #1
 3707 020a 7B61     		str	r3, [r7, #20]
 3708              	.L141:
1197:.\Generated_Source\PSoC4/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3709              		.loc 1 1197 0 is_stmt 0 discriminator 1
 3710 020c 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 88


 3711 020e 052B     		cmp	r3, #5
 3712 0210 09DC     		bgt	.L166
1197:.\Generated_Source\PSoC4/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3713              		.loc 1 1197 0 discriminator 2
 3714 0212 FB68     		ldr	r3, [r7, #12]
 3715 0214 002B     		cmp	r3, #0
 3716 0216 06D1     		bne	.L166
1197:.\Generated_Source\PSoC4/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3717              		.loc 1 1197 0 discriminator 1
 3718 0218 3B69     		ldr	r3, [r7, #16]
 3719 021a 7A68     		ldr	r2, [r7, #4]
 3720 021c D318     		add	r3, r2, r3
 3721 021e 1B78     		ldrb	r3, [r3]
 3722 0220 002B     		cmp	r3, #0
 3723 0222 00D0     		beq	.LCB3289
 3724 0224 F8E6     		b	.L167	@long jump
 3725              	.LCB3289:
 3726              	.L166:
1223:.\Generated_Source\PSoC4/ETH.c **** 		}
1224:.\Generated_Source\PSoC4/ETH.c **** 	}
1225:.\Generated_Source\PSoC4/ETH.c **** 	return( result );
 3727              		.loc 1 1225 0 is_stmt 1
 3728 0226 FB68     		ldr	r3, [r7, #12]
1226:.\Generated_Source\PSoC4/ETH.c **** }
 3729              		.loc 1 1226 0
 3730 0228 181C     		mov	r0, r3
 3731 022a BD46     		mov	sp, r7
 3732 022c 06B0     		add	sp, sp, #24
 3733              		@ sp needed for prologue
 3734 022e 80BD     		pop	{r7, pc}
 3735              		.cfi_endproc
 3736              	.LFE47:
 3737              		.size	ETH_ParseMAC, .-ETH_ParseMAC
 3738              		.section	.text.ETH_StringMAC,"ax",%progbits
 3739              		.align	2
 3740              		.global	ETH_StringMAC
 3741              		.code	16
 3742              		.thumb_func
 3743              		.type	ETH_StringMAC, %function
 3744              	ETH_StringMAC:
 3745              	.LFB48:
1227:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1228:.\Generated_Source\PSoC4/ETH.c **** void ETH_StringMAC(uint8 *mac, char *macString)
1229:.\Generated_Source\PSoC4/ETH.c **** {
 3746              		.loc 1 1229 0
 3747              		.cfi_startproc
 3748 0000 80B5     		push	{r7, lr}
 3749              	.LCFI142:
 3750              		.cfi_def_cfa_offset 8
 3751              		.cfi_offset 7, -8
 3752              		.cfi_offset 14, -4
 3753 0002 84B0     		sub	sp, sp, #16
 3754              	.LCFI143:
 3755              		.cfi_def_cfa_offset 24
 3756 0004 00AF     		add	r7, sp, #0
 3757              	.LCFI144:
 3758              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 89


 3759 0006 7860     		str	r0, [r7, #4]
 3760 0008 3960     		str	r1, [r7]
1230:.\Generated_Source\PSoC4/ETH.c **** 	int digit;
1231:.\Generated_Source\PSoC4/ETH.c **** 	int index;
1232:.\Generated_Source\PSoC4/ETH.c **** 	
1233:.\Generated_Source\PSoC4/ETH.c **** 	/*
1234:.\Generated_Source\PSoC4/ETH.c **** 	 * Convert the MAC address specified in to a string
1235:.\Generated_Source\PSoC4/ETH.c **** 	 */
1236:.\Generated_Source\PSoC4/ETH.c **** 	index = 0;
 3761              		.loc 1 1236 0
 3762 000a 0023     		mov	r3, #0
 3763 000c BB60     		str	r3, [r7, #8]
1237:.\Generated_Source\PSoC4/ETH.c **** 	for(digit=0;digit<6;++digit) {
 3764              		.loc 1 1237 0
 3765 000e 0023     		mov	r3, #0
 3766 0010 FB60     		str	r3, [r7, #12]
 3767 0012 59E0     		b	.L170
 3768              	.L177:
1238:.\Generated_Source\PSoC4/ETH.c **** 		// convert the first nibble
1239:.\Generated_Source\PSoC4/ETH.c **** 		macString[index++] = ETH_BIN2HEX(((mac[digit]>>4)&0x0F));
 3769              		.loc 1 1239 0
 3770 0014 BB68     		ldr	r3, [r7, #8]
 3771 0016 3A68     		ldr	r2, [r7]
 3772 0018 D218     		add	r2, r2, r3
 3773 001a FB68     		ldr	r3, [r7, #12]
 3774 001c 7968     		ldr	r1, [r7, #4]
 3775 001e CB18     		add	r3, r1, r3
 3776 0020 1B78     		ldrb	r3, [r3]
 3777 0022 1B09     		lsr	r3, r3, #4
 3778 0024 DBB2     		uxtb	r3, r3
 3779 0026 191C     		mov	r1, r3
 3780 0028 0F23     		mov	r3, #15
 3781 002a 0B40     		and	r3, r1
 3782 002c 092B     		cmp	r3, #9
 3783 002e 08DD     		ble	.L171
 3784              		.loc 1 1239 0 is_stmt 0 discriminator 1
 3785 0030 FB68     		ldr	r3, [r7, #12]
 3786 0032 7968     		ldr	r1, [r7, #4]
 3787 0034 CB18     		add	r3, r1, r3
 3788 0036 1B78     		ldrb	r3, [r3]
 3789 0038 1B09     		lsr	r3, r3, #4
 3790 003a DBB2     		uxtb	r3, r3
 3791 003c 3733     		add	r3, r3, #55
 3792 003e DBB2     		uxtb	r3, r3
 3793 0040 07E0     		b	.L172
 3794              	.L171:
 3795              		.loc 1 1239 0 discriminator 2
 3796 0042 FB68     		ldr	r3, [r7, #12]
 3797 0044 7968     		ldr	r1, [r7, #4]
 3798 0046 CB18     		add	r3, r1, r3
 3799 0048 1B78     		ldrb	r3, [r3]
 3800 004a 1B09     		lsr	r3, r3, #4
 3801 004c DBB2     		uxtb	r3, r3
 3802 004e 3033     		add	r3, r3, #48
 3803 0050 DBB2     		uxtb	r3, r3
 3804              	.L172:
 3805              		.loc 1 1239 0 discriminator 3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 90


 3806 0052 1370     		strb	r3, [r2]
 3807 0054 BB68     		ldr	r3, [r7, #8]
 3808 0056 0133     		add	r3, r3, #1
 3809 0058 BB60     		str	r3, [r7, #8]
1240:.\Generated_Source\PSoC4/ETH.c **** 		macString[index++] = ETH_BIN2HEX((mac[digit]&0x0F));
 3810              		.loc 1 1240 0 is_stmt 1 discriminator 3
 3811 005a BB68     		ldr	r3, [r7, #8]
 3812 005c 3A68     		ldr	r2, [r7]
 3813 005e D218     		add	r2, r2, r3
 3814 0060 FB68     		ldr	r3, [r7, #12]
 3815 0062 7968     		ldr	r1, [r7, #4]
 3816 0064 CB18     		add	r3, r1, r3
 3817 0066 1B78     		ldrb	r3, [r3]
 3818 0068 191C     		mov	r1, r3
 3819 006a 0F23     		mov	r3, #15
 3820 006c 0B40     		and	r3, r1
 3821 006e 092B     		cmp	r3, #9
 3822 0070 09DD     		ble	.L173
 3823              		.loc 1 1240 0 is_stmt 0 discriminator 1
 3824 0072 FB68     		ldr	r3, [r7, #12]
 3825 0074 7968     		ldr	r1, [r7, #4]
 3826 0076 CB18     		add	r3, r1, r3
 3827 0078 1978     		ldrb	r1, [r3]
 3828 007a 0F23     		mov	r3, #15
 3829 007c 0B40     		and	r3, r1
 3830 007e DBB2     		uxtb	r3, r3
 3831 0080 3733     		add	r3, r3, #55
 3832 0082 DBB2     		uxtb	r3, r3
 3833 0084 08E0     		b	.L174
 3834              	.L173:
 3835              		.loc 1 1240 0 discriminator 2
 3836 0086 FB68     		ldr	r3, [r7, #12]
 3837 0088 7968     		ldr	r1, [r7, #4]
 3838 008a CB18     		add	r3, r1, r3
 3839 008c 1978     		ldrb	r1, [r3]
 3840 008e 0F23     		mov	r3, #15
 3841 0090 0B40     		and	r3, r1
 3842 0092 DBB2     		uxtb	r3, r3
 3843 0094 3033     		add	r3, r3, #48
 3844 0096 DBB2     		uxtb	r3, r3
 3845              	.L174:
 3846              		.loc 1 1240 0 discriminator 3
 3847 0098 1370     		strb	r3, [r2]
 3848 009a BB68     		ldr	r3, [r7, #8]
 3849 009c 0133     		add	r3, r3, #1
 3850 009e BB60     		str	r3, [r7, #8]
1241:.\Generated_Source\PSoC4/ETH.c **** 		if (digit<5) {
 3851              		.loc 1 1241 0 is_stmt 1 discriminator 3
 3852 00a0 FB68     		ldr	r3, [r7, #12]
 3853 00a2 042B     		cmp	r3, #4
 3854 00a4 08DC     		bgt	.L175
1242:.\Generated_Source\PSoC4/ETH.c **** 			macString[index++] = '-';
 3855              		.loc 1 1242 0
 3856 00a6 BB68     		ldr	r3, [r7, #8]
 3857 00a8 3A68     		ldr	r2, [r7]
 3858 00aa D318     		add	r3, r2, r3
 3859 00ac 2D22     		mov	r2, #45
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 91


 3860 00ae 1A70     		strb	r2, [r3]
 3861 00b0 BB68     		ldr	r3, [r7, #8]
 3862 00b2 0133     		add	r3, r3, #1
 3863 00b4 BB60     		str	r3, [r7, #8]
 3864 00b6 04E0     		b	.L176
 3865              	.L175:
1243:.\Generated_Source\PSoC4/ETH.c **** 		}
1244:.\Generated_Source\PSoC4/ETH.c **** 		else {
1245:.\Generated_Source\PSoC4/ETH.c **** 			macString[index] = 0;
 3866              		.loc 1 1245 0
 3867 00b8 BB68     		ldr	r3, [r7, #8]
 3868 00ba 3A68     		ldr	r2, [r7]
 3869 00bc D318     		add	r3, r2, r3
 3870 00be 0022     		mov	r2, #0
 3871 00c0 1A70     		strb	r2, [r3]
 3872              	.L176:
1237:.\Generated_Source\PSoC4/ETH.c **** 	for(digit=0;digit<6;++digit) {
 3873              		.loc 1 1237 0
 3874 00c2 FB68     		ldr	r3, [r7, #12]
 3875 00c4 0133     		add	r3, r3, #1
 3876 00c6 FB60     		str	r3, [r7, #12]
 3877              	.L170:
1237:.\Generated_Source\PSoC4/ETH.c **** 	for(digit=0;digit<6;++digit) {
 3878              		.loc 1 1237 0 is_stmt 0 discriminator 1
 3879 00c8 FB68     		ldr	r3, [r7, #12]
 3880 00ca 052B     		cmp	r3, #5
 3881 00cc A2DD     		ble	.L177
1246:.\Generated_Source\PSoC4/ETH.c **** 		}
1247:.\Generated_Source\PSoC4/ETH.c **** 	}
1248:.\Generated_Source\PSoC4/ETH.c **** }
 3882              		.loc 1 1248 0 is_stmt 1
 3883 00ce BD46     		mov	sp, r7
 3884 00d0 04B0     		add	sp, sp, #16
 3885              		@ sp needed for prologue
 3886 00d2 80BD     		pop	{r7, pc}
 3887              		.cfi_endproc
 3888              	.LFE48:
 3889              		.size	ETH_StringMAC, .-ETH_StringMAC
 3890              		.global	__aeabi_idiv
 3891              		.section	.text.ETH_StringIP,"ax",%progbits
 3892              		.align	2
 3893              		.global	ETH_StringIP
 3894              		.code	16
 3895              		.thumb_func
 3896              		.type	ETH_StringIP, %function
 3897              	ETH_StringIP:
 3898              	.LFB49:
1249:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1250:.\Generated_Source\PSoC4/ETH.c **** void ETH_StringIP( uint32 ip, char *ipString )
1251:.\Generated_Source\PSoC4/ETH.c **** {
 3899              		.loc 1 1251 0
 3900              		.cfi_startproc
 3901 0000 80B5     		push	{r7, lr}
 3902              	.LCFI145:
 3903              		.cfi_def_cfa_offset 8
 3904              		.cfi_offset 7, -8
 3905              		.cfi_offset 14, -4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 92


 3906 0002 88B0     		sub	sp, sp, #32
 3907              	.LCFI146:
 3908              		.cfi_def_cfa_offset 40
 3909 0004 00AF     		add	r7, sp, #0
 3910              	.LCFI147:
 3911              		.cfi_def_cfa_register 7
 3912 0006 7860     		str	r0, [r7, #4]
 3913 0008 3960     		str	r1, [r7]
1252:.\Generated_Source\PSoC4/ETH.c **** 	uint8 *ipBytes;
1253:.\Generated_Source\PSoC4/ETH.c **** 	int index;
1254:.\Generated_Source\PSoC4/ETH.c **** 	int digit;
1255:.\Generated_Source\PSoC4/ETH.c **** 	int work, temp;
1256:.\Generated_Source\PSoC4/ETH.c **** 	
1257:.\Generated_Source\PSoC4/ETH.c **** 	ipBytes = (uint8*)&ip;
 3914              		.loc 1 1257 0
 3915 000a 3B1D     		add	r3, r7, #4
 3916 000c 3B61     		str	r3, [r7, #16]
1258:.\Generated_Source\PSoC4/ETH.c **** 	index = 0;
 3917              		.loc 1 1258 0
 3918 000e 0023     		mov	r3, #0
 3919 0010 FB61     		str	r3, [r7, #28]
1259:.\Generated_Source\PSoC4/ETH.c **** 	for(digit=0;digit<4;++digit) {
 3920              		.loc 1 1259 0
 3921 0012 0023     		mov	r3, #0
 3922 0014 BB61     		str	r3, [r7, #24]
 3923 0016 5BE0     		b	.L179
 3924              	.L184:
1260:.\Generated_Source\PSoC4/ETH.c **** 		work = ipBytes[digit];
 3925              		.loc 1 1260 0
 3926 0018 BB69     		ldr	r3, [r7, #24]
 3927 001a 3A69     		ldr	r2, [r7, #16]
 3928 001c D318     		add	r3, r2, r3
 3929 001e 1B78     		ldrb	r3, [r3]
 3930 0020 7B61     		str	r3, [r7, #20]
1261:.\Generated_Source\PSoC4/ETH.c **** 		if (work >= 100) {
 3931              		.loc 1 1261 0
 3932 0022 7B69     		ldr	r3, [r7, #20]
 3933 0024 632B     		cmp	r3, #99
 3934 0026 18DD     		ble	.L180
1262:.\Generated_Source\PSoC4/ETH.c **** 			temp = work/100;
 3935              		.loc 1 1262 0
 3936 0028 7B69     		ldr	r3, [r7, #20]
 3937 002a 181C     		mov	r0, r3
 3938 002c 6421     		mov	r1, #100
 3939 002e FFF7FEFF 		bl	__aeabi_idiv
 3940 0032 031C     		mov	r3, r0
 3941 0034 FB60     		str	r3, [r7, #12]
1263:.\Generated_Source\PSoC4/ETH.c **** 			work -= (temp*100);
 3942              		.loc 1 1263 0
 3943 0036 FB68     		ldr	r3, [r7, #12]
 3944 0038 6422     		mov	r2, #100
 3945 003a 5242     		neg	r2, r2
 3946 003c 5343     		mul	r3, r2
 3947 003e 7A69     		ldr	r2, [r7, #20]
 3948 0040 D318     		add	r3, r2, r3
 3949 0042 7B61     		str	r3, [r7, #20]
1264:.\Generated_Source\PSoC4/ETH.c **** 			ipString[index++] = '0' + temp;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 93


 3950              		.loc 1 1264 0
 3951 0044 FB69     		ldr	r3, [r7, #28]
 3952 0046 3A68     		ldr	r2, [r7]
 3953 0048 D318     		add	r3, r2, r3
 3954 004a FA68     		ldr	r2, [r7, #12]
 3955 004c D2B2     		uxtb	r2, r2
 3956 004e 3032     		add	r2, r2, #48
 3957 0050 D2B2     		uxtb	r2, r2
 3958 0052 1A70     		strb	r2, [r3]
 3959 0054 FB69     		ldr	r3, [r7, #28]
 3960 0056 0133     		add	r3, r3, #1
 3961 0058 FB61     		str	r3, [r7, #28]
 3962              	.L180:
1265:.\Generated_Source\PSoC4/ETH.c **** 		}
1266:.\Generated_Source\PSoC4/ETH.c **** 		if (work >= 10) {
 3963              		.loc 1 1266 0
 3964 005a 7B69     		ldr	r3, [r7, #20]
 3965 005c 092B     		cmp	r3, #9
 3966 005e 18DD     		ble	.L181
1267:.\Generated_Source\PSoC4/ETH.c **** 			temp = work /10;
 3967              		.loc 1 1267 0
 3968 0060 7B69     		ldr	r3, [r7, #20]
 3969 0062 181C     		mov	r0, r3
 3970 0064 0A21     		mov	r1, #10
 3971 0066 FFF7FEFF 		bl	__aeabi_idiv
 3972 006a 031C     		mov	r3, r0
 3973 006c FB60     		str	r3, [r7, #12]
1268:.\Generated_Source\PSoC4/ETH.c **** 			work -= (temp*10);
 3974              		.loc 1 1268 0
 3975 006e FB68     		ldr	r3, [r7, #12]
 3976 0070 0A22     		mov	r2, #10
 3977 0072 5242     		neg	r2, r2
 3978 0074 5343     		mul	r3, r2
 3979 0076 7A69     		ldr	r2, [r7, #20]
 3980 0078 D318     		add	r3, r2, r3
 3981 007a 7B61     		str	r3, [r7, #20]
1269:.\Generated_Source\PSoC4/ETH.c **** 			ipString[index++] = '0'+temp;
 3982              		.loc 1 1269 0
 3983 007c FB69     		ldr	r3, [r7, #28]
 3984 007e 3A68     		ldr	r2, [r7]
 3985 0080 D318     		add	r3, r2, r3
 3986 0082 FA68     		ldr	r2, [r7, #12]
 3987 0084 D2B2     		uxtb	r2, r2
 3988 0086 3032     		add	r2, r2, #48
 3989 0088 D2B2     		uxtb	r2, r2
 3990 008a 1A70     		strb	r2, [r3]
 3991 008c FB69     		ldr	r3, [r7, #28]
 3992 008e 0133     		add	r3, r3, #1
 3993 0090 FB61     		str	r3, [r7, #28]
 3994              	.L181:
1270:.\Generated_Source\PSoC4/ETH.c **** 		}
1271:.\Generated_Source\PSoC4/ETH.c **** 		ipString[index++] = '0'+work;
 3995              		.loc 1 1271 0
 3996 0092 FB69     		ldr	r3, [r7, #28]
 3997 0094 3A68     		ldr	r2, [r7]
 3998 0096 D318     		add	r3, r2, r3
 3999 0098 7A69     		ldr	r2, [r7, #20]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 94


 4000 009a D2B2     		uxtb	r2, r2
 4001 009c 3032     		add	r2, r2, #48
 4002 009e D2B2     		uxtb	r2, r2
 4003 00a0 1A70     		strb	r2, [r3]
 4004 00a2 FB69     		ldr	r3, [r7, #28]
 4005 00a4 0133     		add	r3, r3, #1
 4006 00a6 FB61     		str	r3, [r7, #28]
1272:.\Generated_Source\PSoC4/ETH.c **** 		if (digit <3) {
 4007              		.loc 1 1272 0
 4008 00a8 BB69     		ldr	r3, [r7, #24]
 4009 00aa 022B     		cmp	r3, #2
 4010 00ac 08DC     		bgt	.L182
1273:.\Generated_Source\PSoC4/ETH.c **** 			ipString[index++] = '.';
 4011              		.loc 1 1273 0
 4012 00ae FB69     		ldr	r3, [r7, #28]
 4013 00b0 3A68     		ldr	r2, [r7]
 4014 00b2 D318     		add	r3, r2, r3
 4015 00b4 2E22     		mov	r2, #46
 4016 00b6 1A70     		strb	r2, [r3]
 4017 00b8 FB69     		ldr	r3, [r7, #28]
 4018 00ba 0133     		add	r3, r3, #1
 4019 00bc FB61     		str	r3, [r7, #28]
 4020 00be 04E0     		b	.L183
 4021              	.L182:
1274:.\Generated_Source\PSoC4/ETH.c **** 		}
1275:.\Generated_Source\PSoC4/ETH.c **** 		else {
1276:.\Generated_Source\PSoC4/ETH.c **** 			ipString[index] = 0;
 4022              		.loc 1 1276 0
 4023 00c0 FB69     		ldr	r3, [r7, #28]
 4024 00c2 3A68     		ldr	r2, [r7]
 4025 00c4 D318     		add	r3, r2, r3
 4026 00c6 0022     		mov	r2, #0
 4027 00c8 1A70     		strb	r2, [r3]
 4028              	.L183:
1259:.\Generated_Source\PSoC4/ETH.c **** 	for(digit=0;digit<4;++digit) {
 4029              		.loc 1 1259 0
 4030 00ca BB69     		ldr	r3, [r7, #24]
 4031 00cc 0133     		add	r3, r3, #1
 4032 00ce BB61     		str	r3, [r7, #24]
 4033              	.L179:
1259:.\Generated_Source\PSoC4/ETH.c **** 	for(digit=0;digit<4;++digit) {
 4034              		.loc 1 1259 0 is_stmt 0 discriminator 1
 4035 00d0 BB69     		ldr	r3, [r7, #24]
 4036 00d2 032B     		cmp	r3, #3
 4037 00d4 A0DD     		ble	.L184
1277:.\Generated_Source\PSoC4/ETH.c **** 		}
1278:.\Generated_Source\PSoC4/ETH.c **** 	}
1279:.\Generated_Source\PSoC4/ETH.c **** }
 4038              		.loc 1 1279 0 is_stmt 1
 4039 00d6 BD46     		mov	sp, r7
 4040 00d8 08B0     		add	sp, sp, #32
 4041              		@ sp needed for prologue
 4042 00da 80BD     		pop	{r7, pc}
 4043              		.cfi_endproc
 4044              	.LFE49:
 4045              		.size	ETH_StringIP, .-ETH_StringIP
 4046              		.section	.text.ETH_SetIP,"ax",%progbits
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 95


 4047              		.align	2
 4048              		.global	ETH_SetIP
 4049              		.code	16
 4050              		.thumb_func
 4051              		.type	ETH_SetIP, %function
 4052              	ETH_SetIP:
 4053              	.LFB50:
1280:.\Generated_Source\PSoC4/ETH.c **** 
1281:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1282:.\Generated_Source\PSoC4/ETH.c **** uint8
1283:.\Generated_Source\PSoC4/ETH.c **** ETH_SetIP( uint32 ip )
1284:.\Generated_Source\PSoC4/ETH.c **** {
 4054              		.loc 1 1284 0
 4055              		.cfi_startproc
 4056 0000 80B5     		push	{r7, lr}
 4057              	.LCFI148:
 4058              		.cfi_def_cfa_offset 8
 4059              		.cfi_offset 7, -8
 4060              		.cfi_offset 14, -4
 4061 0002 84B0     		sub	sp, sp, #16
 4062              	.LCFI149:
 4063              		.cfi_def_cfa_offset 24
 4064 0004 00AF     		add	r7, sp, #0
 4065              	.LCFI150:
 4066              		.cfi_def_cfa_register 7
 4067 0006 7860     		str	r0, [r7, #4]
1285:.\Generated_Source\PSoC4/ETH.c **** 	uint8 ok = 0;
 4068              		.loc 1 1285 0
 4069 0008 3B1C     		mov	r3, r7
 4070 000a 0F33     		add	r3, r3, #15
 4071 000c 0022     		mov	r2, #0
 4072 000e 1A70     		strb	r2, [r3]
1286:.\Generated_Source\PSoC4/ETH.c **** 	
1287:.\Generated_Source\PSoC4/ETH.c **** 	if ( ( ip != 0) && (ip != 0xFFFFFFFF) ) {
 4073              		.loc 1 1287 0
 4074 0010 7B68     		ldr	r3, [r7, #4]
 4075 0012 002B     		cmp	r3, #0
 4076 0014 0AD0     		beq	.L186
 4077              		.loc 1 1287 0 is_stmt 0 discriminator 1
 4078 0016 7B68     		ldr	r3, [r7, #4]
 4079 0018 0133     		add	r3, r3, #1
 4080 001a 07D0     		beq	.L186
1288:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSourceIP( ip );
 4081              		.loc 1 1288 0 is_stmt 1
 4082 001c 7B68     		ldr	r3, [r7, #4]
 4083 001e 181C     		mov	r0, r3
 4084 0020 FFF7FEFF 		bl	ETH_SetSourceIP
1289:.\Generated_Source\PSoC4/ETH.c **** 		ok = 0xFF;
 4085              		.loc 1 1289 0
 4086 0024 3B1C     		mov	r3, r7
 4087 0026 0F33     		add	r3, r3, #15
 4088 0028 FF22     		mov	r2, #255
 4089 002a 1A70     		strb	r2, [r3]
 4090              	.L186:
1290:.\Generated_Source\PSoC4/ETH.c **** 	}
1291:.\Generated_Source\PSoC4/ETH.c **** 	
1292:.\Generated_Source\PSoC4/ETH.c **** 	return ok;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 96


 4091              		.loc 1 1292 0
 4092 002c 3B1C     		mov	r3, r7
 4093 002e 0F33     		add	r3, r3, #15
 4094 0030 1B78     		ldrb	r3, [r3]
1293:.\Generated_Source\PSoC4/ETH.c **** }
 4095              		.loc 1 1293 0
 4096 0032 181C     		mov	r0, r3
 4097 0034 BD46     		mov	sp, r7
 4098 0036 04B0     		add	sp, sp, #16
 4099              		@ sp needed for prologue
 4100 0038 80BD     		pop	{r7, pc}
 4101              		.cfi_endproc
 4102              	.LFE50:
 4103              		.size	ETH_SetIP, .-ETH_SetIP
 4104 003a C046     		.section	.text.ETH_GetIP,"ax",%progbits
 4105              		.align	2
 4106              		.global	ETH_GetIP
 4107              		.code	16
 4108              		.thumb_func
 4109              		.type	ETH_GetIP, %function
 4110              	ETH_GetIP:
 4111              	.LFB51:
1294:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1295:.\Generated_Source\PSoC4/ETH.c **** uint32
1296:.\Generated_Source\PSoC4/ETH.c **** ETH_GetIP( void )
1297:.\Generated_Source\PSoC4/ETH.c **** {
 4112              		.loc 1 1297 0
 4113              		.cfi_startproc
 4114 0000 80B5     		push	{r7, lr}
 4115              	.LCFI151:
 4116              		.cfi_def_cfa_offset 8
 4117              		.cfi_offset 7, -8
 4118              		.cfi_offset 14, -4
 4119 0002 00AF     		add	r7, sp, #0
 4120              	.LCFI152:
 4121              		.cfi_def_cfa_register 7
1298:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_GetSourceIP();
 4122              		.loc 1 1298 0
 4123 0004 FFF7FEFF 		bl	ETH_GetSourceIP
 4124 0008 031C     		mov	r3, r0
1299:.\Generated_Source\PSoC4/ETH.c **** }
 4125              		.loc 1 1299 0
 4126 000a 181C     		mov	r0, r3
 4127 000c BD46     		mov	sp, r7
 4128              		@ sp needed for prologue
 4129 000e 80BD     		pop	{r7, pc}
 4130              		.cfi_endproc
 4131              	.LFE51:
 4132              		.size	ETH_GetIP, .-ETH_GetIP
 4133              		.section	.text.ETH_SetMAC,"ax",%progbits
 4134              		.align	2
 4135              		.global	ETH_SetMAC
 4136              		.code	16
 4137              		.thumb_func
 4138              		.type	ETH_SetMAC, %function
 4139              	ETH_SetMAC:
 4140              	.LFB52:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 97


1300:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1301:.\Generated_Source\PSoC4/ETH.c **** void
1302:.\Generated_Source\PSoC4/ETH.c **** ETH_SetMAC( uint8* mac )
1303:.\Generated_Source\PSoC4/ETH.c **** {
 4141              		.loc 1 1303 0
 4142              		.cfi_startproc
 4143 0000 80B5     		push	{r7, lr}
 4144              	.LCFI153:
 4145              		.cfi_def_cfa_offset 8
 4146              		.cfi_offset 7, -8
 4147              		.cfi_offset 14, -4
 4148 0002 82B0     		sub	sp, sp, #8
 4149              	.LCFI154:
 4150              		.cfi_def_cfa_offset 16
 4151 0004 00AF     		add	r7, sp, #0
 4152              	.LCFI155:
 4153              		.cfi_def_cfa_register 7
 4154 0006 7860     		str	r0, [r7, #4]
1304:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSourceMAC( mac );
 4155              		.loc 1 1304 0
 4156 0008 7B68     		ldr	r3, [r7, #4]
 4157 000a 181C     		mov	r0, r3
 4158 000c FFF7FEFF 		bl	ETH_SetSourceMAC
1305:.\Generated_Source\PSoC4/ETH.c **** }
 4159              		.loc 1 1305 0
 4160 0010 BD46     		mov	sp, r7
 4161 0012 02B0     		add	sp, sp, #8
 4162              		@ sp needed for prologue
 4163 0014 80BD     		pop	{r7, pc}
 4164              		.cfi_endproc
 4165              	.LFE52:
 4166              		.size	ETH_SetMAC, .-ETH_SetMAC
 4167 0016 C046     		.section	.text.ETH_GetMAC,"ax",%progbits
 4168              		.align	2
 4169              		.global	ETH_GetMAC
 4170              		.code	16
 4171              		.thumb_func
 4172              		.type	ETH_GetMAC, %function
 4173              	ETH_GetMAC:
 4174              	.LFB53:
1306:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1307:.\Generated_Source\PSoC4/ETH.c **** void
1308:.\Generated_Source\PSoC4/ETH.c **** ETH_GetMAC( uint8* mac )
1309:.\Generated_Source\PSoC4/ETH.c **** {
 4175              		.loc 1 1309 0
 4176              		.cfi_startproc
 4177 0000 80B5     		push	{r7, lr}
 4178              	.LCFI156:
 4179              		.cfi_def_cfa_offset 8
 4180              		.cfi_offset 7, -8
 4181              		.cfi_offset 14, -4
 4182 0002 82B0     		sub	sp, sp, #8
 4183              	.LCFI157:
 4184              		.cfi_def_cfa_offset 16
 4185 0004 00AF     		add	r7, sp, #0
 4186              	.LCFI158:
 4187              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 98


 4188 0006 7860     		str	r0, [r7, #4]
1310:.\Generated_Source\PSoC4/ETH.c **** 	ETH_GetSourceMAC( mac );
 4189              		.loc 1 1310 0
 4190 0008 7B68     		ldr	r3, [r7, #4]
 4191 000a 181C     		mov	r0, r3
 4192 000c FFF7FEFF 		bl	ETH_GetSourceMAC
1311:.\Generated_Source\PSoC4/ETH.c **** }
 4193              		.loc 1 1311 0
 4194 0010 BD46     		mov	sp, r7
 4195 0012 02B0     		add	sp, sp, #8
 4196              		@ sp needed for prologue
 4197 0014 80BD     		pop	{r7, pc}
 4198              		.cfi_endproc
 4199              	.LFE53:
 4200              		.size	ETH_GetMAC, .-ETH_GetMAC
 4201 0016 C046     		.section	.text.ETH_SocketOpen,"ax",%progbits
 4202              		.align	2
 4203              		.global	ETH_SocketOpen
 4204              		.code	16
 4205              		.thumb_func
 4206              		.type	ETH_SocketOpen, %function
 4207              	ETH_SocketOpen:
 4208              	.LFB54:
1312:.\Generated_Source\PSoC4/ETH.c **** #endif
1313:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
1314:.\Generated_Source\PSoC4/ETH.c **** /* Socket Controls */
1315:.\Generated_Source\PSoC4/ETH.c **** #if (1)
1316:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1317:.\Generated_Source\PSoC4/ETH.c **** uint8
1318:.\Generated_Source\PSoC4/ETH.c **** ETH_SocketOpen( uint8 Protocol, uint16 port, uint8 flags )
1319:.\Generated_Source\PSoC4/ETH.c **** {
 4209              		.loc 1 1319 0
 4210              		.cfi_startproc
 4211 0000 80B5     		push	{r7, lr}
 4212              	.LCFI159:
 4213              		.cfi_def_cfa_offset 8
 4214              		.cfi_offset 7, -8
 4215              		.cfi_offset 14, -4
 4216 0002 84B0     		sub	sp, sp, #16
 4217              	.LCFI160:
 4218              		.cfi_def_cfa_offset 24
 4219 0004 00AF     		add	r7, sp, #0
 4220              	.LCFI161:
 4221              		.cfi_def_cfa_register 7
 4222 0006 FB1D     		add	r3, r7, #7
 4223 0008 1870     		strb	r0, [r3]
 4224 000a 3B1D     		add	r3, r7, #4
 4225 000c 1980     		strh	r1, [r3]
 4226 000e BB1D     		add	r3, r7, #6
 4227 0010 1A70     		strb	r2, [r3]
1320:.\Generated_Source\PSoC4/ETH.c **** 	uint8 socket;
1321:.\Generated_Source\PSoC4/ETH.c **** 	int index;
1322:.\Generated_Source\PSoC4/ETH.c **** 	
1323:.\Generated_Source\PSoC4/ETH.c **** 	/*
1324:.\Generated_Source\PSoC4/ETH.c **** 	 * This function will look for the first available socket for allocation
1325:.\Generated_Source\PSoC4/ETH.c **** 	 * using the defined protocol.  The socket configuration will then be
1326:.\Generated_Source\PSoC4/ETH.c **** 	 * initialized and saved in the allocation table. If the requested socket
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 99


1327:.\Generated_Source\PSoC4/ETH.c **** 	 * can not be initialized, 0xFF is returned
1328:.\Generated_Source\PSoC4/ETH.c **** 	 */
1329:.\Generated_Source\PSoC4/ETH.c **** 	socket = 0xFF;
 4228              		.loc 1 1329 0
 4229 0012 3B1C     		mov	r3, r7
 4230 0014 0F33     		add	r3, r3, #15
 4231 0016 FF22     		mov	r2, #255
 4232 0018 1A70     		strb	r2, [r3]
1330:.\Generated_Source\PSoC4/ETH.c **** 	/* find the first available socket to open, and how much memory is available */
1331:.\Generated_Source\PSoC4/ETH.c **** 	for( index = 0;index<ETH_MAX_SOCKET;++index) {
 4233              		.loc 1 1331 0
 4234 001a 0023     		mov	r3, #0
 4235 001c BB60     		str	r3, [r7, #8]
 4236 001e 18E0     		b	.L193
 4237              	.L196:
1332:.\Generated_Source\PSoC4/ETH.c **** 		if ( (socket == 0xFF) && (ETH_SocketConfig[index].Protocol == 0) ) {
 4238              		.loc 1 1332 0
 4239 0020 3B1C     		mov	r3, r7
 4240 0022 0F33     		add	r3, r3, #15
 4241 0024 1B78     		ldrb	r3, [r3]
 4242 0026 FF2B     		cmp	r3, #255
 4243 0028 10D1     		bne	.L194
 4244              		.loc 1 1332 0 is_stmt 0 discriminator 1
 4245 002a 4E4B     		ldr	r3, .L199
 4246 002c BA68     		ldr	r2, [r7, #8]
 4247 002e D200     		lsl	r2, r2, #3
 4248 0030 D35C     		ldrb	r3, [r2, r3]
 4249 0032 002B     		cmp	r3, #0
 4250 0034 0AD1     		bne	.L194
1333:.\Generated_Source\PSoC4/ETH.c **** 			/*
1334:.\Generated_Source\PSoC4/ETH.c **** 			 * Since the W5100 does not support MAC mode commucications, check to see
1335:.\Generated_Source\PSoC4/ETH.c **** 			 * if the socket that is free was socket 0.  If the mac protocol was
1336:.\Generated_Source\PSoC4/ETH.c **** 			 * selected, ignore socket 0
1337:.\Generated_Source\PSoC4/ETH.c **** 			 */
1338:.\Generated_Source\PSoC4/ETH.c **** 			if ( (Protocol != ETH_PROTO_MAC) || (index != 0) ) {
 4251              		.loc 1 1338 0 is_stmt 1
 4252 0036 FB1D     		add	r3, r7, #7
 4253 0038 1B78     		ldrb	r3, [r3]
 4254 003a 042B     		cmp	r3, #4
 4255 003c 02D1     		bne	.L195
 4256              		.loc 1 1338 0 is_stmt 0 discriminator 1
 4257 003e BB68     		ldr	r3, [r7, #8]
 4258 0040 002B     		cmp	r3, #0
 4259 0042 03D0     		beq	.L194
 4260              	.L195:
1339:.\Generated_Source\PSoC4/ETH.c **** 				/* store this socket number for allocation */
1340:.\Generated_Source\PSoC4/ETH.c **** 				socket = index;
 4261              		.loc 1 1340 0 is_stmt 1
 4262 0044 3B1C     		mov	r3, r7
 4263 0046 0F33     		add	r3, r3, #15
 4264 0048 BA68     		ldr	r2, [r7, #8]
 4265 004a 1A70     		strb	r2, [r3]
 4266              	.L194:
1331:.\Generated_Source\PSoC4/ETH.c **** 	for( index = 0;index<ETH_MAX_SOCKET;++index) {
 4267              		.loc 1 1331 0
 4268 004c BB68     		ldr	r3, [r7, #8]
 4269 004e 0133     		add	r3, r3, #1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 100


 4270 0050 BB60     		str	r3, [r7, #8]
 4271              	.L193:
1331:.\Generated_Source\PSoC4/ETH.c **** 	for( index = 0;index<ETH_MAX_SOCKET;++index) {
 4272              		.loc 1 1331 0 is_stmt 0 discriminator 1
 4273 0052 BB68     		ldr	r3, [r7, #8]
 4274 0054 032B     		cmp	r3, #3
 4275 0056 E3DD     		ble	.L196
1341:.\Generated_Source\PSoC4/ETH.c **** 			}
1342:.\Generated_Source\PSoC4/ETH.c **** 		}
1343:.\Generated_Source\PSoC4/ETH.c **** 	}
1344:.\Generated_Source\PSoC4/ETH.c **** 	if (socket != 0xFF ) {
 4276              		.loc 1 1344 0 is_stmt 1
 4277 0058 3B1C     		mov	r3, r7
 4278 005a 0F33     		add	r3, r3, #15
 4279 005c 1B78     		ldrb	r3, [r3]
 4280 005e FF2B     		cmp	r3, #255
 4281 0060 78D0     		beq	.L197
1345:.\Generated_Source\PSoC4/ETH.c **** 		/* Store the socket information in the allocation table */
1346:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketConfig[socket].Protocol = Protocol;
 4282              		.loc 1 1346 0
 4283 0062 3B1C     		mov	r3, r7
 4284 0064 0F33     		add	r3, r3, #15
 4285 0066 1A78     		ldrb	r2, [r3]
 4286 0068 3E4B     		ldr	r3, .L199
 4287 006a D200     		lsl	r2, r2, #3
 4288 006c F91D     		add	r1, r7, #7
 4289 006e 0978     		ldrb	r1, [r1]
 4290 0070 D154     		strb	r1, [r2, r3]
1347:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketConfig[socket].SocketFlags = flags;
 4291              		.loc 1 1347 0
 4292 0072 3B1C     		mov	r3, r7
 4293 0074 0F33     		add	r3, r3, #15
 4294 0076 1B78     		ldrb	r3, [r3]
 4295 0078 3A49     		ldr	r1, .L199
 4296 007a DB00     		lsl	r3, r3, #3
 4297 007c BA1D     		add	r2, r7, #6
 4298 007e CB18     		add	r3, r1, r3
 4299 0080 1278     		ldrb	r2, [r2]
 4300 0082 5A70     		strb	r2, [r3, #1]
1348:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketConfig[socket].SourcePort = port;
 4301              		.loc 1 1348 0
 4302 0084 3B1C     		mov	r3, r7
 4303 0086 0F33     		add	r3, r3, #15
 4304 0088 1B78     		ldrb	r3, [r3]
 4305 008a 3649     		ldr	r1, .L199
 4306 008c DB00     		lsl	r3, r3, #3
 4307 008e 3A1D     		add	r2, r7, #4
 4308 0090 CB18     		add	r3, r1, r3
 4309 0092 1288     		ldrh	r2, [r2]
 4310 0094 5A80     		strh	r2, [r3, #2]
1349:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketConfig[socket].ServerFlag = 0;
 4311              		.loc 1 1349 0
 4312 0096 3B1C     		mov	r3, r7
 4313 0098 0F33     		add	r3, r3, #15
 4314 009a 1B78     		ldrb	r3, [r3]
 4315 009c 314A     		ldr	r2, .L199
 4316 009e DB00     		lsl	r3, r3, #3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 101


 4317 00a0 D318     		add	r3, r2, r3
 4318 00a2 0022     		mov	r2, #0
 4319 00a4 1A71     		strb	r2, [r3, #4]
1350:.\Generated_Source\PSoC4/ETH.c **** 
1351:.\Generated_Source\PSoC4/ETH.c **** 		/* Set the socket memory size */
1352:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketTxMemSize(socket, ETH_MEM_2K); /* 2K each */
 4320              		.loc 1 1352 0
 4321 00a6 3B1C     		mov	r3, r7
 4322 00a8 0F33     		add	r3, r3, #15
 4323 00aa 1B78     		ldrb	r3, [r3]
 4324 00ac 181C     		mov	r0, r3
 4325 00ae 0121     		mov	r1, #1
 4326 00b0 FFF7FEFF 		bl	ETH_SetSocketTxMemSize
1353:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketRxMemSize(socket, ETH_MEM_2K); /* 2K Each */
 4327              		.loc 1 1353 0
 4328 00b4 3B1C     		mov	r3, r7
 4329 00b6 0F33     		add	r3, r3, #15
 4330 00b8 1B78     		ldrb	r3, [r3]
 4331 00ba 181C     		mov	r0, r3
 4332 00bc 0121     		mov	r1, #1
 4333 00be FFF7FEFF 		bl	ETH_SetSocketRxMemSize
1354:.\Generated_Source\PSoC4/ETH.c **** 		/* Initialize the socket memeory pointers */
1355:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketRxReadPtr( socket, ETH_SOCKET_RX_BASE[index] );
 4334              		.loc 1 1355 0
 4335 00c2 294B     		ldr	r3, .L199+4
 4336 00c4 BA68     		ldr	r2, [r7, #8]
 4337 00c6 5200     		lsl	r2, r2, #1
 4338 00c8 D35A     		ldrh	r3, [r2, r3]
 4339 00ca 3A1C     		mov	r2, r7
 4340 00cc 0F32     		add	r2, r2, #15
 4341 00ce 1278     		ldrb	r2, [r2]
 4342 00d0 101C     		mov	r0, r2
 4343 00d2 191C     		mov	r1, r3
 4344 00d4 FFF7FEFF 		bl	ETH_SetSocketRxReadPtr
1356:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketRxWritePtr( socket, ETH_SOCKET_RX_BASE[index] );
 4345              		.loc 1 1356 0
 4346 00d8 234B     		ldr	r3, .L199+4
 4347 00da BA68     		ldr	r2, [r7, #8]
 4348 00dc 5200     		lsl	r2, r2, #1
 4349 00de D35A     		ldrh	r3, [r2, r3]
 4350 00e0 3A1C     		mov	r2, r7
 4351 00e2 0F32     		add	r2, r2, #15
 4352 00e4 1278     		ldrb	r2, [r2]
 4353 00e6 101C     		mov	r0, r2
 4354 00e8 191C     		mov	r1, r3
 4355 00ea FFF7FEFF 		bl	ETH_SetSocketRxWritePtr
1357:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketTxReadPtr( socket, ETH_SOCKET_TX_BASE[index] );
 4356              		.loc 1 1357 0
 4357 00ee 1F4B     		ldr	r3, .L199+8
 4358 00f0 BA68     		ldr	r2, [r7, #8]
 4359 00f2 5200     		lsl	r2, r2, #1
 4360 00f4 D35A     		ldrh	r3, [r2, r3]
 4361 00f6 3A1C     		mov	r2, r7
 4362 00f8 0F32     		add	r2, r2, #15
 4363 00fa 1278     		ldrb	r2, [r2]
 4364 00fc 101C     		mov	r0, r2
 4365 00fe 191C     		mov	r1, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 102


 4366 0100 FFF7FEFF 		bl	ETH_SetSocketTxReadPtr
1358:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketTxWritePtr( socket, ETH_SOCKET_TX_BASE[index] );
 4367              		.loc 1 1358 0
 4368 0104 194B     		ldr	r3, .L199+8
 4369 0106 BA68     		ldr	r2, [r7, #8]
 4370 0108 5200     		lsl	r2, r2, #1
 4371 010a D35A     		ldrh	r3, [r2, r3]
 4372 010c 3A1C     		mov	r2, r7
 4373 010e 0F32     		add	r2, r2, #15
 4374 0110 1278     		ldrb	r2, [r2]
 4375 0112 101C     		mov	r0, r2
 4376 0114 191C     		mov	r1, r3
 4377 0116 FFF7FEFF 		bl	ETH_SetSocketTxWritePtr
1359:.\Generated_Source\PSoC4/ETH.c **** 
1360:.\Generated_Source\PSoC4/ETH.c **** 		/* Send the socket open with the correct protocol information */
1361:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketSourcePort( socket, port );
 4378              		.loc 1 1361 0
 4379 011a 3B1C     		mov	r3, r7
 4380 011c 0F33     		add	r3, r3, #15
 4381 011e 1A78     		ldrb	r2, [r3]
 4382 0120 3B1D     		add	r3, r7, #4
 4383 0122 1B88     		ldrh	r3, [r3]
 4384 0124 101C     		mov	r0, r2
 4385 0126 191C     		mov	r1, r3
 4386 0128 FFF7FEFF 		bl	ETH_SetSocketSourcePort
1362:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketMode( socket, Protocol | flags );
 4387              		.loc 1 1362 0
 4388 012c FA1D     		add	r2, r7, #7
 4389 012e BB1D     		add	r3, r7, #6
 4390 0130 1278     		ldrb	r2, [r2]
 4391 0132 1B78     		ldrb	r3, [r3]
 4392 0134 1343     		orr	r3, r2
 4393 0136 DBB2     		uxtb	r3, r3
 4394 0138 3A1C     		mov	r2, r7
 4395 013a 0F32     		add	r2, r2, #15
 4396 013c 1278     		ldrb	r2, [r2]
 4397 013e 101C     		mov	r0, r2
 4398 0140 191C     		mov	r1, r3
 4399 0142 FFF7FEFF 		bl	ETH_SetSocketMode
1363:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 1 );
 4400              		.loc 1 1363 0
 4401 0146 3B1C     		mov	r3, r7
 4402 0148 0F33     		add	r3, r3, #15
 4403 014a 1B78     		ldrb	r3, [r3]
 4404 014c 181C     		mov	r0, r3
 4405 014e 0121     		mov	r1, #1
 4406 0150 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
 4407              	.L197:
1364:.\Generated_Source\PSoC4/ETH.c **** 		
1365:.\Generated_Source\PSoC4/ETH.c **** 	}
1366:.\Generated_Source\PSoC4/ETH.c **** 	return socket;
 4408              		.loc 1 1366 0
 4409 0154 3B1C     		mov	r3, r7
 4410 0156 0F33     		add	r3, r3, #15
 4411 0158 1B78     		ldrb	r3, [r3]
1367:.\Generated_Source\PSoC4/ETH.c **** }
 4412              		.loc 1 1367 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 103


 4413 015a 181C     		mov	r0, r3
 4414 015c BD46     		mov	sp, r7
 4415 015e 04B0     		add	sp, sp, #16
 4416              		@ sp needed for prologue
 4417 0160 80BD     		pop	{r7, pc}
 4418              	.L200:
 4419 0162 C046     		.align	2
 4420              	.L199:
 4421 0164 00000000 		.word	ETH_SocketConfig
 4422 0168 00000000 		.word	ETH_SOCKET_RX_BASE
 4423 016c 00000000 		.word	ETH_SOCKET_TX_BASE
 4424              		.cfi_endproc
 4425              	.LFE54:
 4426              		.size	ETH_SocketOpen, .-ETH_SocketOpen
 4427              		.section	.text.ETH_SocketClose,"ax",%progbits
 4428              		.align	2
 4429              		.global	ETH_SocketClose
 4430              		.code	16
 4431              		.thumb_func
 4432              		.type	ETH_SocketClose, %function
 4433              	ETH_SocketClose:
 4434              	.LFB55:
1368:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1369:.\Generated_Source\PSoC4/ETH.c **** void
1370:.\Generated_Source\PSoC4/ETH.c **** ETH_SocketClose( uint8 socket )
1371:.\Generated_Source\PSoC4/ETH.c **** {
 4435              		.loc 1 1371 0
 4436              		.cfi_startproc
 4437 0000 80B5     		push	{r7, lr}
 4438              	.LCFI162:
 4439              		.cfi_def_cfa_offset 8
 4440              		.cfi_offset 7, -8
 4441              		.cfi_offset 14, -4
 4442 0002 82B0     		sub	sp, sp, #8
 4443              	.LCFI163:
 4444              		.cfi_def_cfa_offset 16
 4445 0004 00AF     		add	r7, sp, #0
 4446              	.LCFI164:
 4447              		.cfi_def_cfa_register 7
 4448 0006 021C     		mov	r2, r0
 4449 0008 FB1D     		add	r3, r7, #7
 4450 000a 1A70     		strb	r2, [r3]
1372:.\Generated_Source\PSoC4/ETH.c **** 	/*
1373:.\Generated_Source\PSoC4/ETH.c **** 	 * Set the socket allocation to empty, and issue the close command
1374:.\Generated_Source\PSoC4/ETH.c **** 	 * to the socket
1375:.\Generated_Source\PSoC4/ETH.c **** 	 */
1376:.\Generated_Source\PSoC4/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 4451              		.loc 1 1376 0
 4452 000c FB1D     		add	r3, r7, #7
 4453 000e 1B78     		ldrb	r3, [r3]
 4454 0010 032B     		cmp	r3, #3
 4455 0012 18D8     		bhi	.L201
1377:.\Generated_Source\PSoC4/ETH.c **** 		/* clear the socket memory allocations */
1378:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketConfig[socket].Protocol = 0;
 4456              		.loc 1 1378 0
 4457 0014 FB1D     		add	r3, r7, #7
 4458 0016 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 104


 4459 0018 0C4B     		ldr	r3, .L203
 4460 001a D200     		lsl	r2, r2, #3
 4461 001c 0021     		mov	r1, #0
 4462 001e D154     		strb	r1, [r2, r3]
1379:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketConfig[socket].SocketFlags = 0;
 4463              		.loc 1 1379 0
 4464 0020 FB1D     		add	r3, r7, #7
 4465 0022 1B78     		ldrb	r3, [r3]
 4466 0024 094A     		ldr	r2, .L203
 4467 0026 DB00     		lsl	r3, r3, #3
 4468 0028 D318     		add	r3, r2, r3
 4469 002a 0022     		mov	r2, #0
 4470 002c 5A70     		strb	r2, [r3, #1]
1380:.\Generated_Source\PSoC4/ETH.c **** 		/* close the socket */
1381:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x10 );
 4471              		.loc 1 1381 0
 4472 002e FB1D     		add	r3, r7, #7
 4473 0030 1B78     		ldrb	r3, [r3]
 4474 0032 181C     		mov	r0, r3
 4475 0034 1021     		mov	r1, #16
 4476 0036 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1382:.\Generated_Source\PSoC4/ETH.c **** 		/* Clear pending Interrupts */
1383:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketIR( socket, 0xFF);
 4477              		.loc 1 1383 0
 4478 003a FB1D     		add	r3, r7, #7
 4479 003c 1B78     		ldrb	r3, [r3]
 4480 003e 181C     		mov	r0, r3
 4481 0040 FF21     		mov	r1, #255
 4482 0042 FFF7FEFF 		bl	ETH_SetSocketIR
 4483              	.L201:
1384:.\Generated_Source\PSoC4/ETH.c **** 	}
1385:.\Generated_Source\PSoC4/ETH.c **** }
 4484              		.loc 1 1385 0
 4485 0046 BD46     		mov	sp, r7
 4486 0048 02B0     		add	sp, sp, #8
 4487              		@ sp needed for prologue
 4488 004a 80BD     		pop	{r7, pc}
 4489              	.L204:
 4490              		.align	2
 4491              	.L203:
 4492 004c 00000000 		.word	ETH_SocketConfig
 4493              		.cfi_endproc
 4494              	.LFE55:
 4495              		.size	ETH_SocketClose, .-ETH_SocketClose
 4496              		.section	.text.ETH_SocketProcessConnections,"ax",%progbits
 4497              		.align	2
 4498              		.global	ETH_SocketProcessConnections
 4499              		.code	16
 4500              		.thumb_func
 4501              		.type	ETH_SocketProcessConnections, %function
 4502              	ETH_SocketProcessConnections:
 4503              	.LFB56:
1386:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1387:.\Generated_Source\PSoC4/ETH.c **** uint8
1388:.\Generated_Source\PSoC4/ETH.c **** ETH_SocketProcessConnections( uint8 socket )
1389:.\Generated_Source\PSoC4/ETH.c **** {
 4504              		.loc 1 1389 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 105


 4505              		.cfi_startproc
 4506 0000 90B5     		push	{r4, r7, lr}
 4507              	.LCFI165:
 4508              		.cfi_def_cfa_offset 12
 4509              		.cfi_offset 4, -12
 4510              		.cfi_offset 7, -8
 4511              		.cfi_offset 14, -4
 4512 0002 85B0     		sub	sp, sp, #20
 4513              	.LCFI166:
 4514              		.cfi_def_cfa_offset 32
 4515 0004 00AF     		add	r7, sp, #0
 4516              	.LCFI167:
 4517              		.cfi_def_cfa_register 7
 4518 0006 021C     		mov	r2, r0
 4519 0008 FB1D     		add	r3, r7, #7
 4520 000a 1A70     		strb	r2, [r3]
1390:.\Generated_Source\PSoC4/ETH.c **** 	uint8 status;
1391:.\Generated_Source\PSoC4/ETH.c **** 	
1392:.\Generated_Source\PSoC4/ETH.c **** 	status = ETH_GetSocketStatus(socket);
 4521              		.loc 1 1392 0
 4522 000c 3C1C     		mov	r4, r7
 4523 000e 0F34     		add	r4, r4, #15
 4524 0010 FB1D     		add	r3, r7, #7
 4525 0012 1B78     		ldrb	r3, [r3]
 4526 0014 181C     		mov	r0, r3
 4527 0016 FFF7FEFF 		bl	ETH_GetSocketStatus
 4528 001a 031C     		mov	r3, r0
 4529 001c 2370     		strb	r3, [r4]
1393:.\Generated_Source\PSoC4/ETH.c **** 	/* has a connection termination been requested by remote system */
1394:.\Generated_Source\PSoC4/ETH.c **** 	if (status == 0x1C) {
 4530              		.loc 1 1394 0
 4531 001e 3B1C     		mov	r3, r7
 4532 0020 0F33     		add	r3, r3, #15
 4533 0022 1B78     		ldrb	r3, [r3]
 4534 0024 1C2B     		cmp	r3, #28
 4535 0026 04D1     		bne	.L206
1395:.\Generated_Source\PSoC4/ETH.c **** 		/* Close the socket on this end */
1396:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketClose(socket);
 4536              		.loc 1 1396 0
 4537 0028 FB1D     		add	r3, r7, #7
 4538 002a 1B78     		ldrb	r3, [r3]
 4539 002c 181C     		mov	r0, r3
 4540 002e FFF7FEFF 		bl	ETH_SocketClose
 4541              	.L206:
1397:.\Generated_Source\PSoC4/ETH.c **** 	}
1398:.\Generated_Source\PSoC4/ETH.c **** 	return (ETH_GetSocketStatus(socket) == 0x00);
 4542              		.loc 1 1398 0
 4543 0032 FB1D     		add	r3, r7, #7
 4544 0034 1B78     		ldrb	r3, [r3]
 4545 0036 181C     		mov	r0, r3
 4546 0038 FFF7FEFF 		bl	ETH_GetSocketStatus
 4547 003c 031C     		mov	r3, r0
 4548 003e 5A42     		neg	r2, r3
 4549 0040 5341     		adc	r3, r3, r2
 4550 0042 DBB2     		uxtb	r3, r3
1399:.\Generated_Source\PSoC4/ETH.c **** }
 4551              		.loc 1 1399 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 106


 4552 0044 181C     		mov	r0, r3
 4553 0046 BD46     		mov	sp, r7
 4554 0048 05B0     		add	sp, sp, #20
 4555              		@ sp needed for prologue
 4556 004a 90BD     		pop	{r4, r7, pc}
 4557              		.cfi_endproc
 4558              	.LFE56:
 4559              		.size	ETH_SocketProcessConnections, .-ETH_SocketProcessConnections
 4560              		.section	.text.ETH_SocketEstablished,"ax",%progbits
 4561              		.align	2
 4562              		.global	ETH_SocketEstablished
 4563              		.code	16
 4564              		.thumb_func
 4565              		.type	ETH_SocketEstablished, %function
 4566              	ETH_SocketEstablished:
 4567              	.LFB57:
1400:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1401:.\Generated_Source\PSoC4/ETH.c **** uint8
1402:.\Generated_Source\PSoC4/ETH.c **** ETH_SocketEstablished( uint8 socket )
1403:.\Generated_Source\PSoC4/ETH.c **** {
 4568              		.loc 1 1403 0
 4569              		.cfi_startproc
 4570 0000 90B5     		push	{r4, r7, lr}
 4571              	.LCFI168:
 4572              		.cfi_def_cfa_offset 12
 4573              		.cfi_offset 4, -12
 4574              		.cfi_offset 7, -8
 4575              		.cfi_offset 14, -4
 4576 0002 85B0     		sub	sp, sp, #20
 4577              	.LCFI169:
 4578              		.cfi_def_cfa_offset 32
 4579 0004 00AF     		add	r7, sp, #0
 4580              	.LCFI170:
 4581              		.cfi_def_cfa_register 7
 4582 0006 021C     		mov	r2, r0
 4583 0008 FB1D     		add	r3, r7, #7
 4584 000a 1A70     		strb	r2, [r3]
1404:.\Generated_Source\PSoC4/ETH.c **** 	uint8 result;
1405:.\Generated_Source\PSoC4/ETH.c **** 	
1406:.\Generated_Source\PSoC4/ETH.c **** 	result = 0;
 4585              		.loc 1 1406 0
 4586 000c 3B1C     		mov	r3, r7
 4587 000e 0F33     		add	r3, r3, #15
 4588 0010 0022     		mov	r2, #0
 4589 0012 1A70     		strb	r2, [r3]
1407:.\Generated_Source\PSoC4/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 4590              		.loc 1 1407 0
 4591 0014 FB1D     		add	r3, r7, #7
 4592 0016 1B78     		ldrb	r3, [r3]
 4593 0018 032B     		cmp	r3, #3
 4594 001a 08D8     		bhi	.L209
1408:.\Generated_Source\PSoC4/ETH.c **** 		result = ETH_GetSocketStatus( socket );
 4595              		.loc 1 1408 0
 4596 001c 3C1C     		mov	r4, r7
 4597 001e 0F34     		add	r4, r4, #15
 4598 0020 FB1D     		add	r3, r7, #7
 4599 0022 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 107


 4600 0024 181C     		mov	r0, r3
 4601 0026 FFF7FEFF 		bl	ETH_GetSocketStatus
 4602 002a 031C     		mov	r3, r0
 4603 002c 2370     		strb	r3, [r4]
 4604              	.L209:
1409:.\Generated_Source\PSoC4/ETH.c **** 	}
1410:.\Generated_Source\PSoC4/ETH.c **** 	return( result == 0x17);
 4605              		.loc 1 1410 0
 4606 002e 3B1C     		mov	r3, r7
 4607 0030 0F33     		add	r3, r3, #15
 4608 0032 1B78     		ldrb	r3, [r3]
 4609 0034 173B     		sub	r3, r3, #23
 4610 0036 5A42     		neg	r2, r3
 4611 0038 5341     		adc	r3, r3, r2
 4612 003a DBB2     		uxtb	r3, r3
1411:.\Generated_Source\PSoC4/ETH.c **** }
 4613              		.loc 1 1411 0
 4614 003c 181C     		mov	r0, r3
 4615 003e BD46     		mov	sp, r7
 4616 0040 05B0     		add	sp, sp, #20
 4617              		@ sp needed for prologue
 4618 0042 90BD     		pop	{r4, r7, pc}
 4619              		.cfi_endproc
 4620              	.LFE57:
 4621              		.size	ETH_SocketEstablished, .-ETH_SocketEstablished
 4622              		.section	.text.ETH_SocketSend,"ax",%progbits
 4623              		.align	2
 4624              		.global	ETH_SocketSend
 4625              		.code	16
 4626              		.thumb_func
 4627              		.type	ETH_SocketSend, %function
 4628              	ETH_SocketSend:
 4629              	.LFB58:
1412:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1413:.\Generated_Source\PSoC4/ETH.c **** /**
1414:.\Generated_Source\PSoC4/ETH.c ****  * \brief Transmit a SEND operation over a socket
1415:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket to which the send command will be sent
1416:.\Generated_Source\PSoC4/ETH.c ****  */
1417:.\Generated_Source\PSoC4/ETH.c **** void
1418:.\Generated_Source\PSoC4/ETH.c **** ETH_SocketSend(uint8 socket )
1419:.\Generated_Source\PSoC4/ETH.c **** {
 4630              		.loc 1 1419 0
 4631              		.cfi_startproc
 4632 0000 90B5     		push	{r4, r7, lr}
 4633              	.LCFI171:
 4634              		.cfi_def_cfa_offset 12
 4635              		.cfi_offset 4, -12
 4636              		.cfi_offset 7, -8
 4637              		.cfi_offset 14, -4
 4638 0002 85B0     		sub	sp, sp, #20
 4639              	.LCFI172:
 4640              		.cfi_def_cfa_offset 32
 4641 0004 00AF     		add	r7, sp, #0
 4642              	.LCFI173:
 4643              		.cfi_def_cfa_register 7
 4644 0006 021C     		mov	r2, r0
 4645 0008 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 108


 4646 000a 1A70     		strb	r2, [r3]
1420:.\Generated_Source\PSoC4/ETH.c **** 	uint8 ir;
1421:.\Generated_Source\PSoC4/ETH.c **** 	
1422:.\Generated_Source\PSoC4/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 4647              		.loc 1 1422 0
 4648 000c FB1D     		add	r3, r7, #7
 4649 000e 1B78     		ldrb	r3, [r3]
 4650 0010 032B     		cmp	r3, #3
 4651 0012 35D8     		bhi	.L211
1423:.\Generated_Source\PSoC4/ETH.c **** 		/* initialize the subnet mask register : ERRATA FIX */
1424:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSubnetMask( ETH_SubnetMask );
 4652              		.loc 1 1424 0
 4653 0014 1C4B     		ldr	r3, .L216
 4654 0016 1B68     		ldr	r3, [r3]
 4655 0018 181C     		mov	r0, r3
 4656 001a FFF7FEFF 		bl	ETH_SetSubnetMask
1425:.\Generated_Source\PSoC4/ETH.c **** 		/* Issue the SEND command */
1426:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x20 );
 4657              		.loc 1 1426 0
 4658 001e FB1D     		add	r3, r7, #7
 4659 0020 1B78     		ldrb	r3, [r3]
 4660 0022 181C     		mov	r0, r3
 4661 0024 2021     		mov	r1, #32
 4662 0026 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1427:.\Generated_Source\PSoC4/ETH.c **** 		/* wait for the SEND to complete, or for a timeout */
1428:.\Generated_Source\PSoC4/ETH.c **** 		ir = ETH_GetSocketIR( socket );
 4663              		.loc 1 1428 0
 4664 002a 3C1C     		mov	r4, r7
 4665 002c 0F34     		add	r4, r4, #15
 4666 002e FB1D     		add	r3, r7, #7
 4667 0030 1B78     		ldrb	r3, [r3]
 4668 0032 181C     		mov	r0, r3
 4669 0034 FFF7FEFF 		bl	ETH_GetSocketIR
 4670 0038 031C     		mov	r3, r0
 4671 003a 2370     		strb	r3, [r4]
1429:.\Generated_Source\PSoC4/ETH.c **** 		/* while SEND is not done, and the socket hasnot timed out or been dsconnected */
1430:.\Generated_Source\PSoC4/ETH.c **** 		while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4672              		.loc 1 1430 0
 4673 003c 0BE0     		b	.L213
 4674              	.L215:
1431:.\Generated_Source\PSoC4/ETH.c **** 			CyDelay(1);
 4675              		.loc 1 1431 0
 4676 003e 0120     		mov	r0, #1
 4677 0040 FFF7FEFF 		bl	CyDelay
1432:.\Generated_Source\PSoC4/ETH.c **** 			ir = ETH_GetSocketIR( socket );
 4678              		.loc 1 1432 0
 4679 0044 3C1C     		mov	r4, r7
 4680 0046 0F34     		add	r4, r4, #15
 4681 0048 FB1D     		add	r3, r7, #7
 4682 004a 1B78     		ldrb	r3, [r3]
 4683 004c 181C     		mov	r0, r3
 4684 004e FFF7FEFF 		bl	ETH_GetSocketIR
 4685 0052 031C     		mov	r3, r0
 4686 0054 2370     		strb	r3, [r4]
 4687              	.L213:
1430:.\Generated_Source\PSoC4/ETH.c **** 		while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4688              		.loc 1 1430 0 discriminator 1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 109


 4689 0056 3B1C     		mov	r3, r7
 4690 0058 0F33     		add	r3, r3, #15
 4691 005a 1A78     		ldrb	r2, [r3]
 4692 005c 1023     		mov	r3, #16
 4693 005e 1340     		and	r3, r2
 4694 0060 05D1     		bne	.L214
1430:.\Generated_Source\PSoC4/ETH.c **** 		while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4695              		.loc 1 1430 0 is_stmt 0 discriminator 2
 4696 0062 3B1C     		mov	r3, r7
 4697 0064 0F33     		add	r3, r3, #15
 4698 0066 1A78     		ldrb	r2, [r3]
 4699 0068 0A23     		mov	r3, #10
 4700 006a 1340     		and	r3, r2
 4701 006c E7D0     		beq	.L215
 4702              	.L214:
1433:.\Generated_Source\PSoC4/ETH.c **** 			
1434:.\Generated_Source\PSoC4/ETH.c **** 		}
1435:.\Generated_Source\PSoC4/ETH.c **** 		/* clear the SEND_OK flag from the register */
1436:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketIR( socket, 0x10 );
 4703              		.loc 1 1436 0 is_stmt 1
 4704 006e FB1D     		add	r3, r7, #7
 4705 0070 1B78     		ldrb	r3, [r3]
 4706 0072 181C     		mov	r0, r3
 4707 0074 1021     		mov	r1, #16
 4708 0076 FFF7FEFF 		bl	ETH_SetSocketIR
1437:.\Generated_Source\PSoC4/ETH.c **** 		/* reset the subnet mask : ERRATA FIX */
1438:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSubnetMask( 0 );
 4709              		.loc 1 1438 0
 4710 007a 0020     		mov	r0, #0
 4711 007c FFF7FEFF 		bl	ETH_SetSubnetMask
 4712              	.L211:
1439:.\Generated_Source\PSoC4/ETH.c **** 	}
1440:.\Generated_Source\PSoC4/ETH.c **** }
 4713              		.loc 1 1440 0
 4714 0080 BD46     		mov	sp, r7
 4715 0082 05B0     		add	sp, sp, #20
 4716              		@ sp needed for prologue
 4717 0084 90BD     		pop	{r4, r7, pc}
 4718              	.L217:
 4719 0086 C046     		.align	2
 4720              	.L216:
 4721 0088 00000000 		.word	ETH_SubnetMask
 4722              		.cfi_endproc
 4723              	.LFE58:
 4724              		.size	ETH_SocketSend, .-ETH_SocketSend
 4725              		.section	.text.ETH_SocketSendMac,"ax",%progbits
 4726              		.align	2
 4727              		.global	ETH_SocketSendMac
 4728              		.code	16
 4729              		.thumb_func
 4730              		.type	ETH_SocketSendMac, %function
 4731              	ETH_SocketSendMac:
 4732              	.LFB59:
1441:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1442:.\Generated_Source\PSoC4/ETH.c **** /**
1443:.\Generated_Source\PSoC4/ETH.c ****  * \brief Execute a SEND without an ARP.
1444:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket to which the SEND will be executed.
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 110


1445:.\Generated_Source\PSoC4/ETH.c ****  */
1446:.\Generated_Source\PSoC4/ETH.c **** void
1447:.\Generated_Source\PSoC4/ETH.c **** ETH_SocketSendMac(uint8 socket )
1448:.\Generated_Source\PSoC4/ETH.c **** {
 4733              		.loc 1 1448 0
 4734              		.cfi_startproc
 4735 0000 90B5     		push	{r4, r7, lr}
 4736              	.LCFI174:
 4737              		.cfi_def_cfa_offset 12
 4738              		.cfi_offset 4, -12
 4739              		.cfi_offset 7, -8
 4740              		.cfi_offset 14, -4
 4741 0002 85B0     		sub	sp, sp, #20
 4742              	.LCFI175:
 4743              		.cfi_def_cfa_offset 32
 4744 0004 00AF     		add	r7, sp, #0
 4745              	.LCFI176:
 4746              		.cfi_def_cfa_register 7
 4747 0006 021C     		mov	r2, r0
 4748 0008 FB1D     		add	r3, r7, #7
 4749 000a 1A70     		strb	r2, [r3]
1449:.\Generated_Source\PSoC4/ETH.c **** 	uint8 ir;
1450:.\Generated_Source\PSoC4/ETH.c **** 	
1451:.\Generated_Source\PSoC4/ETH.c **** 	/* initialize the subnet mask register : ERRATA FIX */
1452:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSubnetMask( ETH_SubnetMask );
 4750              		.loc 1 1452 0
 4751 000c 1C4B     		ldr	r3, .L222
 4752 000e 1B68     		ldr	r3, [r3]
 4753 0010 181C     		mov	r0, r3
 4754 0012 FFF7FEFF 		bl	ETH_SetSubnetMask
1453:.\Generated_Source\PSoC4/ETH.c **** 	/* Issue the SEND command */
1454:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ExecuteSocketCommand( socket, 0x21 );
 4755              		.loc 1 1454 0
 4756 0016 FB1D     		add	r3, r7, #7
 4757 0018 1B78     		ldrb	r3, [r3]
 4758 001a 181C     		mov	r0, r3
 4759 001c 2121     		mov	r1, #33
 4760 001e FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1455:.\Generated_Source\PSoC4/ETH.c **** 	/* wait for the SEND to complete, or for a timeout */
1456:.\Generated_Source\PSoC4/ETH.c **** 	ir = ETH_GetSocketIR( socket );
 4761              		.loc 1 1456 0
 4762 0022 3C1C     		mov	r4, r7
 4763 0024 0F34     		add	r4, r4, #15
 4764 0026 FB1D     		add	r3, r7, #7
 4765 0028 1B78     		ldrb	r3, [r3]
 4766 002a 181C     		mov	r0, r3
 4767 002c FFF7FEFF 		bl	ETH_GetSocketIR
 4768 0030 031C     		mov	r3, r0
 4769 0032 2370     		strb	r3, [r4]
1457:.\Generated_Source\PSoC4/ETH.c **** 	/* while SEND is not done, and the socket hasnot timed out or been dsconnected */
1458:.\Generated_Source\PSoC4/ETH.c **** 	while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4770              		.loc 1 1458 0
 4771 0034 0BE0     		b	.L219
 4772              	.L221:
1459:.\Generated_Source\PSoC4/ETH.c **** 		CyDelay(1);
 4773              		.loc 1 1459 0
 4774 0036 0120     		mov	r0, #1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 111


 4775 0038 FFF7FEFF 		bl	CyDelay
1460:.\Generated_Source\PSoC4/ETH.c **** 		ir = ETH_GetSocketIR( socket );
 4776              		.loc 1 1460 0
 4777 003c 3C1C     		mov	r4, r7
 4778 003e 0F34     		add	r4, r4, #15
 4779 0040 FB1D     		add	r3, r7, #7
 4780 0042 1B78     		ldrb	r3, [r3]
 4781 0044 181C     		mov	r0, r3
 4782 0046 FFF7FEFF 		bl	ETH_GetSocketIR
 4783 004a 031C     		mov	r3, r0
 4784 004c 2370     		strb	r3, [r4]
 4785              	.L219:
1458:.\Generated_Source\PSoC4/ETH.c **** 	while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4786              		.loc 1 1458 0 discriminator 1
 4787 004e 3B1C     		mov	r3, r7
 4788 0050 0F33     		add	r3, r3, #15
 4789 0052 1A78     		ldrb	r2, [r3]
 4790 0054 1023     		mov	r3, #16
 4791 0056 1340     		and	r3, r2
 4792 0058 05D1     		bne	.L220
1458:.\Generated_Source\PSoC4/ETH.c **** 	while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4793              		.loc 1 1458 0 is_stmt 0 discriminator 2
 4794 005a 3B1C     		mov	r3, r7
 4795 005c 0F33     		add	r3, r3, #15
 4796 005e 1A78     		ldrb	r2, [r3]
 4797 0060 0A23     		mov	r3, #10
 4798 0062 1340     		and	r3, r2
 4799 0064 E7D0     		beq	.L221
 4800              	.L220:
1461:.\Generated_Source\PSoC4/ETH.c **** 		
1462:.\Generated_Source\PSoC4/ETH.c **** 	}
1463:.\Generated_Source\PSoC4/ETH.c **** 	/* clear the SEND_OK flag from the register */
1464:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSocketIR( socket, 0x10 );
 4801              		.loc 1 1464 0 is_stmt 1
 4802 0066 FB1D     		add	r3, r7, #7
 4803 0068 1B78     		ldrb	r3, [r3]
 4804 006a 181C     		mov	r0, r3
 4805 006c 1021     		mov	r1, #16
 4806 006e FFF7FEFF 		bl	ETH_SetSocketIR
1465:.\Generated_Source\PSoC4/ETH.c **** 	/* reset the subnet mask : ERRATA FIX */
1466:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSubnetMask( 0 );
 4807              		.loc 1 1466 0
 4808 0072 0020     		mov	r0, #0
 4809 0074 FFF7FEFF 		bl	ETH_SetSubnetMask
1467:.\Generated_Source\PSoC4/ETH.c **** }
 4810              		.loc 1 1467 0
 4811 0078 BD46     		mov	sp, r7
 4812 007a 05B0     		add	sp, sp, #20
 4813              		@ sp needed for prologue
 4814 007c 90BD     		pop	{r4, r7, pc}
 4815              	.L223:
 4816 007e C046     		.align	2
 4817              	.L222:
 4818 0080 00000000 		.word	ETH_SubnetMask
 4819              		.cfi_endproc
 4820              	.LFE59:
 4821              		.size	ETH_SocketSendMac, .-ETH_SocketSendMac
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 112


 4822              		.section	.text.ETH_SocketRxDataWaiting,"ax",%progbits
 4823              		.align	2
 4824              		.global	ETH_SocketRxDataWaiting
 4825              		.code	16
 4826              		.thumb_func
 4827              		.type	ETH_SocketRxDataWaiting, %function
 4828              	ETH_SocketRxDataWaiting:
 4829              	.LFB60:
1468:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1469:.\Generated_Source\PSoC4/ETH.c **** uint16
1470:.\Generated_Source\PSoC4/ETH.c **** ETH_SocketRxDataWaiting( uint8 socket )
1471:.\Generated_Source\PSoC4/ETH.c **** {
 4830              		.loc 1 1471 0
 4831              		.cfi_startproc
 4832 0000 80B5     		push	{r7, lr}
 4833              	.LCFI177:
 4834              		.cfi_def_cfa_offset 8
 4835              		.cfi_offset 7, -8
 4836              		.cfi_offset 14, -4
 4837 0002 82B0     		sub	sp, sp, #8
 4838              	.LCFI178:
 4839              		.cfi_def_cfa_offset 16
 4840 0004 00AF     		add	r7, sp, #0
 4841              	.LCFI179:
 4842              		.cfi_def_cfa_register 7
 4843 0006 021C     		mov	r2, r0
 4844 0008 FB1D     		add	r3, r7, #7
 4845 000a 1A70     		strb	r2, [r3]
1472:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_GetRxSize( socket );
 4846              		.loc 1 1472 0
 4847 000c FB1D     		add	r3, r7, #7
 4848 000e 1B78     		ldrb	r3, [r3]
 4849 0010 181C     		mov	r0, r3
 4850 0012 FFF7FEFF 		bl	ETH_GetRxSize
 4851 0016 031C     		mov	r3, r0
1473:.\Generated_Source\PSoC4/ETH.c **** }
 4852              		.loc 1 1473 0
 4853 0018 181C     		mov	r0, r3
 4854 001a BD46     		mov	sp, r7
 4855 001c 02B0     		add	sp, sp, #8
 4856              		@ sp needed for prologue
 4857 001e 80BD     		pop	{r7, pc}
 4858              		.cfi_endproc
 4859              	.LFE60:
 4860              		.size	ETH_SocketRxDataWaiting, .-ETH_SocketRxDataWaiting
 4861              		.section	.text.ETH_TcpOpen,"ax",%progbits
 4862              		.align	2
 4863              		.global	ETH_TcpOpen
 4864              		.code	16
 4865              		.thumb_func
 4866              		.type	ETH_TcpOpen, %function
 4867              	ETH_TcpOpen:
 4868              	.LFB61:
1474:.\Generated_Source\PSoC4/ETH.c **** #endif
1475:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
1476:.\Generated_Source\PSoC4/ETH.c **** /* TCP/IP */
1477:.\Generated_Source\PSoC4/ETH.c **** #if (1)
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 113


1478:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1479:.\Generated_Source\PSoC4/ETH.c **** uint8
1480:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpOpen(uint16 port)
1481:.\Generated_Source\PSoC4/ETH.c **** {
 4869              		.loc 1 1481 0
 4870              		.cfi_startproc
 4871 0000 80B5     		push	{r7, lr}
 4872              	.LCFI180:
 4873              		.cfi_def_cfa_offset 8
 4874              		.cfi_offset 7, -8
 4875              		.cfi_offset 14, -4
 4876 0002 82B0     		sub	sp, sp, #8
 4877              	.LCFI181:
 4878              		.cfi_def_cfa_offset 16
 4879 0004 00AF     		add	r7, sp, #0
 4880              	.LCFI182:
 4881              		.cfi_def_cfa_register 7
 4882 0006 021C     		mov	r2, r0
 4883 0008 BB1D     		add	r3, r7, #6
 4884 000a 1A80     		strh	r2, [r3]
1482:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_SocketOpen(ETH_PROTO_TCP, port, 0);
 4885              		.loc 1 1482 0
 4886 000c BB1D     		add	r3, r7, #6
 4887 000e 1B88     		ldrh	r3, [r3]
 4888 0010 0120     		mov	r0, #1
 4889 0012 191C     		mov	r1, r3
 4890 0014 0022     		mov	r2, #0
 4891 0016 FFF7FEFF 		bl	ETH_SocketOpen
 4892 001a 031C     		mov	r3, r0
1483:.\Generated_Source\PSoC4/ETH.c **** }
 4893              		.loc 1 1483 0
 4894 001c 181C     		mov	r0, r3
 4895 001e BD46     		mov	sp, r7
 4896 0020 02B0     		add	sp, sp, #8
 4897              		@ sp needed for prologue
 4898 0022 80BD     		pop	{r7, pc}
 4899              		.cfi_endproc
 4900              	.LFE61:
 4901              		.size	ETH_TcpOpen, .-ETH_TcpOpen
 4902              		.section	.text.ETH_TcpStartServer,"ax",%progbits
 4903              		.align	2
 4904              		.global	ETH_TcpStartServer
 4905              		.code	16
 4906              		.thumb_func
 4907              		.type	ETH_TcpStartServer, %function
 4908              	ETH_TcpStartServer:
 4909              	.LFB62:
1484:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1485:.\Generated_Source\PSoC4/ETH.c **** void
1486:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpStartServer( uint8 socket )
1487:.\Generated_Source\PSoC4/ETH.c **** {
 4910              		.loc 1 1487 0
 4911              		.cfi_startproc
 4912 0000 80B5     		push	{r7, lr}
 4913              	.LCFI183:
 4914              		.cfi_def_cfa_offset 8
 4915              		.cfi_offset 7, -8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 114


 4916              		.cfi_offset 14, -4
 4917 0002 82B0     		sub	sp, sp, #8
 4918              	.LCFI184:
 4919              		.cfi_def_cfa_offset 16
 4920 0004 00AF     		add	r7, sp, #0
 4921              	.LCFI185:
 4922              		.cfi_def_cfa_register 7
 4923 0006 021C     		mov	r2, r0
 4924 0008 FB1D     		add	r3, r7, #7
 4925 000a 1A70     		strb	r2, [r3]
1488:.\Generated_Source\PSoC4/ETH.c **** 	/*
1489:.\Generated_Source\PSoC4/ETH.c **** 	 * Start a open socket listening for a connection
1490:.\Generated_Source\PSoC4/ETH.c **** 	 */
1491:.\Generated_Source\PSoC4/ETH.c **** 	/* was this a valid socket? */
1492:.\Generated_Source\PSoC4/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 4926              		.loc 1 1492 0
 4927 000c FB1D     		add	r3, r7, #7
 4928 000e 1B78     		ldrb	r3, [r3]
 4929 0010 032B     		cmp	r3, #3
 4930 0012 05D8     		bhi	.L228
1493:.\Generated_Source\PSoC4/ETH.c **** 		/* Execute the listen command */
1494:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x02 );
 4931              		.loc 1 1494 0
 4932 0014 FB1D     		add	r3, r7, #7
 4933 0016 1B78     		ldrb	r3, [r3]
 4934 0018 181C     		mov	r0, r3
 4935 001a 0221     		mov	r1, #2
 4936 001c FFF7FEFF 		bl	ETH_ExecuteSocketCommand
 4937              	.L228:
1495:.\Generated_Source\PSoC4/ETH.c **** 	}
1496:.\Generated_Source\PSoC4/ETH.c **** }
 4938              		.loc 1 1496 0
 4939 0020 BD46     		mov	sp, r7
 4940 0022 02B0     		add	sp, sp, #8
 4941              		@ sp needed for prologue
 4942 0024 80BD     		pop	{r7, pc}
 4943              		.cfi_endproc
 4944              	.LFE62:
 4945              		.size	ETH_TcpStartServer, .-ETH_TcpStartServer
 4946 0026 C046     		.section	.text.ETH_TcpStartServerWait,"ax",%progbits
 4947              		.align	2
 4948              		.global	ETH_TcpStartServerWait
 4949              		.code	16
 4950              		.thumb_func
 4951              		.type	ETH_TcpStartServerWait, %function
 4952              	ETH_TcpStartServerWait:
 4953              	.LFB63:
1497:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1498:.\Generated_Source\PSoC4/ETH.c **** void
1499:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpStartServerWait( uint8 socket )
1500:.\Generated_Source\PSoC4/ETH.c **** {
 4954              		.loc 1 1500 0
 4955              		.cfi_startproc
 4956 0000 90B5     		push	{r4, r7, lr}
 4957              	.LCFI186:
 4958              		.cfi_def_cfa_offset 12
 4959              		.cfi_offset 4, -12
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 115


 4960              		.cfi_offset 7, -8
 4961              		.cfi_offset 14, -4
 4962 0002 85B0     		sub	sp, sp, #20
 4963              	.LCFI187:
 4964              		.cfi_def_cfa_offset 32
 4965 0004 00AF     		add	r7, sp, #0
 4966              	.LCFI188:
 4967              		.cfi_def_cfa_register 7
 4968 0006 021C     		mov	r2, r0
 4969 0008 FB1D     		add	r3, r7, #7
 4970 000a 1A70     		strb	r2, [r3]
1501:.\Generated_Source\PSoC4/ETH.c **** 	uint8 status;
1502:.\Generated_Source\PSoC4/ETH.c **** 	
1503:.\Generated_Source\PSoC4/ETH.c **** 	/*
1504:.\Generated_Source\PSoC4/ETH.c **** 	 * Bug Patch: Exit Waiting for server when an invalid socket is passed
1505:.\Generated_Source\PSoC4/ETH.c **** 	 */
1506:.\Generated_Source\PSoC4/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return;
 4971              		.loc 1 1506 0
 4972 000c FB1D     		add	r3, r7, #7
 4973 000e 1B78     		ldrb	r3, [r3]
 4974 0010 032B     		cmp	r3, #3
 4975 0012 2AD8     		bhi	.L235
 4976              	.L231:
1507:.\Generated_Source\PSoC4/ETH.c **** 	ETH_TcpStartServer(socket);
 4977              		.loc 1 1507 0
 4978 0014 FB1D     		add	r3, r7, #7
 4979 0016 1B78     		ldrb	r3, [r3]
 4980 0018 181C     		mov	r0, r3
 4981 001a FFF7FEFF 		bl	ETH_TcpStartServer
1508:.\Generated_Source\PSoC4/ETH.c **** 	/* wait for socket establishment */
1509:.\Generated_Source\PSoC4/ETH.c **** 	/* Update Patch: Loop calls process connections to exit on a closed socket */
1510:.\Generated_Source\PSoC4/ETH.c **** 	status = ETH_GetSocketStatus(socket);
 4982              		.loc 1 1510 0
 4983 001e 3C1C     		mov	r4, r7
 4984 0020 0F34     		add	r4, r4, #15
 4985 0022 FB1D     		add	r3, r7, #7
 4986 0024 1B78     		ldrb	r3, [r3]
 4987 0026 181C     		mov	r0, r3
 4988 0028 FFF7FEFF 		bl	ETH_GetSocketStatus
 4989 002c 031C     		mov	r3, r0
 4990 002e 2370     		strb	r3, [r4]
1511:.\Generated_Source\PSoC4/ETH.c **** 	while ( (status != 0x17 ) && (status != 0 ) ) {
 4991              		.loc 1 1511 0
 4992 0030 10E0     		b	.L233
 4993              	.L234:
1512:.\Generated_Source\PSoC4/ETH.c **** 		CyDelay(1);
 4994              		.loc 1 1512 0
 4995 0032 0120     		mov	r0, #1
 4996 0034 FFF7FEFF 		bl	CyDelay
1513:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketProcessConnections( socket );
 4997              		.loc 1 1513 0
 4998 0038 FB1D     		add	r3, r7, #7
 4999 003a 1B78     		ldrb	r3, [r3]
 5000 003c 181C     		mov	r0, r3
 5001 003e FFF7FEFF 		bl	ETH_SocketProcessConnections
1514:.\Generated_Source\PSoC4/ETH.c **** 		status = ETH_GetSocketStatus( socket );
 5002              		.loc 1 1514 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 116


 5003 0042 3C1C     		mov	r4, r7
 5004 0044 0F34     		add	r4, r4, #15
 5005 0046 FB1D     		add	r3, r7, #7
 5006 0048 1B78     		ldrb	r3, [r3]
 5007 004a 181C     		mov	r0, r3
 5008 004c FFF7FEFF 		bl	ETH_GetSocketStatus
 5009 0050 031C     		mov	r3, r0
 5010 0052 2370     		strb	r3, [r4]
 5011              	.L233:
1511:.\Generated_Source\PSoC4/ETH.c **** 	while ( (status != 0x17 ) && (status != 0 ) ) {
 5012              		.loc 1 1511 0 discriminator 1
 5013 0054 3B1C     		mov	r3, r7
 5014 0056 0F33     		add	r3, r3, #15
 5015 0058 1B78     		ldrb	r3, [r3]
 5016 005a 172B     		cmp	r3, #23
 5017 005c 06D0     		beq	.L230
1511:.\Generated_Source\PSoC4/ETH.c **** 	while ( (status != 0x17 ) && (status != 0 ) ) {
 5018              		.loc 1 1511 0 is_stmt 0 discriminator 2
 5019 005e 3B1C     		mov	r3, r7
 5020 0060 0F33     		add	r3, r3, #15
 5021 0062 1B78     		ldrb	r3, [r3]
 5022 0064 002B     		cmp	r3, #0
 5023 0066 E4D1     		bne	.L234
 5024 0068 00E0     		b	.L230
 5025              	.L235:
1506:.\Generated_Source\PSoC4/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return;
 5026              		.loc 1 1506 0 is_stmt 1
 5027 006a C046     		mov	r8, r8
 5028              	.L230:
1515:.\Generated_Source\PSoC4/ETH.c **** 	}
1516:.\Generated_Source\PSoC4/ETH.c **** }
 5029              		.loc 1 1516 0
 5030 006c BD46     		mov	sp, r7
 5031 006e 05B0     		add	sp, sp, #20
 5032              		@ sp needed for prologue
 5033 0070 90BD     		pop	{r4, r7, pc}
 5034              		.cfi_endproc
 5035              	.LFE63:
 5036              		.size	ETH_TcpStartServerWait, .-ETH_TcpStartServerWait
 5037 0072 C046     		.section	.text.ETH_TcpConnect,"ax",%progbits
 5038              		.align	2
 5039              		.global	ETH_TcpConnect
 5040              		.code	16
 5041              		.thumb_func
 5042              		.type	ETH_TcpConnect, %function
 5043              	ETH_TcpConnect:
 5044              	.LFB64:
1517:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1518:.\Generated_Source\PSoC4/ETH.c **** void
1519:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpConnect( uint8 socket, uint32 ip, uint16 port )
1520:.\Generated_Source\PSoC4/ETH.c **** {
 5045              		.loc 1 1520 0
 5046              		.cfi_startproc
 5047 0000 90B5     		push	{r4, r7, lr}
 5048              	.LCFI189:
 5049              		.cfi_def_cfa_offset 12
 5050              		.cfi_offset 4, -12
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 117


 5051              		.cfi_offset 7, -8
 5052              		.cfi_offset 14, -4
 5053 0002 85B0     		sub	sp, sp, #20
 5054              	.LCFI190:
 5055              		.cfi_def_cfa_offset 32
 5056 0004 00AF     		add	r7, sp, #0
 5057              	.LCFI191:
 5058              		.cfi_def_cfa_register 7
 5059 0006 3960     		str	r1, [r7]
 5060 0008 FB1D     		add	r3, r7, #7
 5061 000a 011C     		add	r1, r0, #0
 5062 000c 1970     		strb	r1, [r3]
 5063 000e 3B1D     		add	r3, r7, #4
 5064 0010 1A80     		strh	r2, [r3]
1521:.\Generated_Source\PSoC4/ETH.c **** 	uint32 timeout;
1522:.\Generated_Source\PSoC4/ETH.c **** 	uint8 ir;
1523:.\Generated_Source\PSoC4/ETH.c **** 	
1524:.\Generated_Source\PSoC4/ETH.c **** 	/* Exit when passed a closed or invalid socket */
1525:.\Generated_Source\PSoC4/ETH.c **** 	if ( socket >= ETH_MAX_SOCKET) return;
 5065              		.loc 1 1525 0
 5066 0012 FB1D     		add	r3, r7, #7
 5067 0014 1B78     		ldrb	r3, [r3]
 5068 0016 032B     		cmp	r3, #3
 5069 0018 47D8     		bhi	.L242
 5070              	.L237:
1526:.\Generated_Source\PSoC4/ETH.c **** 	/* Check for a valid IP address */
1527:.\Generated_Source\PSoC4/ETH.c **** 	if ( (ip != 0xFFFFFFFF) && (ip != 0) ) {
 5071              		.loc 1 1527 0
 5072 001a 3B68     		ldr	r3, [r7]
 5073 001c 0133     		add	r3, r3, #1
 5074 001e 45D0     		beq	.L236
 5075              		.loc 1 1527 0 is_stmt 0 discriminator 1
 5076 0020 3B68     		ldr	r3, [r7]
 5077 0022 002B     		cmp	r3, #0
 5078 0024 42D0     		beq	.L236
1528:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketDestIP( socket, ip );
 5079              		.loc 1 1528 0 is_stmt 1
 5080 0026 FB1D     		add	r3, r7, #7
 5081 0028 1A78     		ldrb	r2, [r3]
 5082 002a 3B68     		ldr	r3, [r7]
 5083 002c 101C     		mov	r0, r2
 5084 002e 191C     		mov	r1, r3
 5085 0030 FFF7FEFF 		bl	ETH_SetSocketDestIP
1529:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketDestPort( socket, port );
 5086              		.loc 1 1529 0
 5087 0034 FB1D     		add	r3, r7, #7
 5088 0036 1A78     		ldrb	r2, [r3]
 5089 0038 3B1D     		add	r3, r7, #4
 5090 003a 1B88     		ldrh	r3, [r3]
 5091 003c 101C     		mov	r0, r2
 5092 003e 191C     		mov	r1, r3
 5093 0040 FFF7FEFF 		bl	ETH_SetSocketDestPort
1530:.\Generated_Source\PSoC4/ETH.c **** 		/* set socket subnet mask */
1531:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSubnetMask( ETH_SubnetMask );
 5094              		.loc 1 1531 0
 5095 0044 1B4B     		ldr	r3, .L243
 5096 0046 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 118


 5097 0048 181C     		mov	r0, r3
 5098 004a FFF7FEFF 		bl	ETH_SetSubnetMask
1532:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x04);
 5099              		.loc 1 1532 0
 5100 004e FB1D     		add	r3, r7, #7
 5101 0050 1B78     		ldrb	r3, [r3]
 5102 0052 181C     		mov	r0, r3
 5103 0054 0421     		mov	r1, #4
 5104 0056 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1533:.\Generated_Source\PSoC4/ETH.c **** 		/* wait for the socket connection to the remote host is established */
1534:.\Generated_Source\PSoC4/ETH.c **** 		while ( (!ETH_SocketEstablished(socket))  && (timeout < 3000) ) {
 5105              		.loc 1 1534 0
 5106 005a 16E0     		b	.L239
 5107              	.L241:
1535:.\Generated_Source\PSoC4/ETH.c **** 			CyDelay(1);
 5108              		.loc 1 1535 0
 5109 005c 0120     		mov	r0, #1
 5110 005e FFF7FEFF 		bl	CyDelay
1536:.\Generated_Source\PSoC4/ETH.c **** 			++timeout;
 5111              		.loc 1 1536 0
 5112 0062 FB68     		ldr	r3, [r7, #12]
 5113 0064 0133     		add	r3, r3, #1
 5114 0066 FB60     		str	r3, [r7, #12]
1537:.\Generated_Source\PSoC4/ETH.c **** 			ir = ETH_GetSocketIR( socket );
 5115              		.loc 1 1537 0
 5116 0068 3C1C     		mov	r4, r7
 5117 006a 0B34     		add	r4, r4, #11
 5118 006c FB1D     		add	r3, r7, #7
 5119 006e 1B78     		ldrb	r3, [r3]
 5120 0070 181C     		mov	r0, r3
 5121 0072 FFF7FEFF 		bl	ETH_GetSocketIR
 5122 0076 031C     		mov	r3, r0
 5123 0078 2370     		strb	r3, [r4]
1538:.\Generated_Source\PSoC4/ETH.c **** 			if ( (ir & 0x08) != 0 ) {
 5124              		.loc 1 1538 0
 5125 007a 3B1C     		mov	r3, r7
 5126 007c 0B33     		add	r3, r3, #11
 5127 007e 1A78     		ldrb	r2, [r3]
 5128 0080 0823     		mov	r3, #8
 5129 0082 1340     		and	r3, r2
 5130 0084 01D0     		beq	.L239
1539:.\Generated_Source\PSoC4/ETH.c **** 				/* internal chip timeout occured */
1540:.\Generated_Source\PSoC4/ETH.c **** 				timeout = 3000;
 5131              		.loc 1 1540 0
 5132 0086 0C4B     		ldr	r3, .L243+4
 5133 0088 FB60     		str	r3, [r7, #12]
 5134              	.L239:
1534:.\Generated_Source\PSoC4/ETH.c **** 		while ( (!ETH_SocketEstablished(socket))  && (timeout < 3000) ) {
 5135              		.loc 1 1534 0 discriminator 1
 5136 008a FB1D     		add	r3, r7, #7
 5137 008c 1B78     		ldrb	r3, [r3]
 5138 008e 181C     		mov	r0, r3
 5139 0090 FFF7FEFF 		bl	ETH_SocketEstablished
 5140 0094 031C     		mov	r3, r0
 5141 0096 002B     		cmp	r3, #0
 5142 0098 03D1     		bne	.L240
1534:.\Generated_Source\PSoC4/ETH.c **** 		while ( (!ETH_SocketEstablished(socket))  && (timeout < 3000) ) {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 119


 5143              		.loc 1 1534 0 is_stmt 0 discriminator 2
 5144 009a FA68     		ldr	r2, [r7, #12]
 5145 009c 074B     		ldr	r3, .L243+8
 5146 009e 9A42     		cmp	r2, r3
 5147 00a0 DCD9     		bls	.L241
 5148              	.L240:
1541:.\Generated_Source\PSoC4/ETH.c **** 			}
1542:.\Generated_Source\PSoC4/ETH.c **** 		}
1543:.\Generated_Source\PSoC4/ETH.c **** 		/* clear the Subnet mask register */
1544:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSubnetMask(0);
 5149              		.loc 1 1544 0 is_stmt 1
 5150 00a2 0020     		mov	r0, #0
 5151 00a4 FFF7FEFF 		bl	ETH_SetSubnetMask
 5152 00a8 00E0     		b	.L236
 5153              	.L242:
1525:.\Generated_Source\PSoC4/ETH.c **** 	if ( socket >= ETH_MAX_SOCKET) return;
 5154              		.loc 1 1525 0
 5155 00aa C046     		mov	r8, r8
 5156              	.L236:
1545:.\Generated_Source\PSoC4/ETH.c **** 	}
1546:.\Generated_Source\PSoC4/ETH.c **** }
 5157              		.loc 1 1546 0
 5158 00ac BD46     		mov	sp, r7
 5159 00ae 05B0     		add	sp, sp, #20
 5160              		@ sp needed for prologue
 5161 00b0 90BD     		pop	{r4, r7, pc}
 5162              	.L244:
 5163 00b2 C046     		.align	2
 5164              	.L243:
 5165 00b4 00000000 		.word	ETH_SubnetMask
 5166 00b8 B80B0000 		.word	3000
 5167 00bc B70B0000 		.word	2999
 5168              		.cfi_endproc
 5169              	.LFE64:
 5170              		.size	ETH_TcpConnect, .-ETH_TcpConnect
 5171              		.section	.text.ETH_TcpConnected,"ax",%progbits
 5172              		.align	2
 5173              		.global	ETH_TcpConnected
 5174              		.code	16
 5175              		.thumb_func
 5176              		.type	ETH_TcpConnected, %function
 5177              	ETH_TcpConnected:
 5178              	.LFB65:
1547:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1548:.\Generated_Source\PSoC4/ETH.c **** uint8
1549:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpConnected( uint8 socket )
1550:.\Generated_Source\PSoC4/ETH.c **** { return ETH_SocketEstablished(socket); }
 5179              		.loc 1 1550 0
 5180              		.cfi_startproc
 5181 0000 80B5     		push	{r7, lr}
 5182              	.LCFI192:
 5183              		.cfi_def_cfa_offset 8
 5184              		.cfi_offset 7, -8
 5185              		.cfi_offset 14, -4
 5186 0002 82B0     		sub	sp, sp, #8
 5187              	.LCFI193:
 5188              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 120


 5189 0004 00AF     		add	r7, sp, #0
 5190              	.LCFI194:
 5191              		.cfi_def_cfa_register 7
 5192 0006 021C     		mov	r2, r0
 5193 0008 FB1D     		add	r3, r7, #7
 5194 000a 1A70     		strb	r2, [r3]
 5195              		.loc 1 1550 0
 5196 000c FB1D     		add	r3, r7, #7
 5197 000e 1B78     		ldrb	r3, [r3]
 5198 0010 181C     		mov	r0, r3
 5199 0012 FFF7FEFF 		bl	ETH_SocketEstablished
 5200 0016 031C     		mov	r3, r0
 5201 0018 181C     		mov	r0, r3
 5202 001a BD46     		mov	sp, r7
 5203 001c 02B0     		add	sp, sp, #8
 5204              		@ sp needed for prologue
 5205 001e 80BD     		pop	{r7, pc}
 5206              		.cfi_endproc
 5207              	.LFE65:
 5208              		.size	ETH_TcpConnected, .-ETH_TcpConnected
 5209              		.section	.text.ETH_TcpDisconnect,"ax",%progbits
 5210              		.align	2
 5211              		.global	ETH_TcpDisconnect
 5212              		.code	16
 5213              		.thumb_func
 5214              		.type	ETH_TcpDisconnect, %function
 5215              	ETH_TcpDisconnect:
 5216              	.LFB66:
1551:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1552:.\Generated_Source\PSoC4/ETH.c **** void
1553:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpDisconnect( uint8 socket )
1554:.\Generated_Source\PSoC4/ETH.c **** {
 5217              		.loc 1 1554 0
 5218              		.cfi_startproc
 5219 0000 80B5     		push	{r7, lr}
 5220              	.LCFI195:
 5221              		.cfi_def_cfa_offset 8
 5222              		.cfi_offset 7, -8
 5223              		.cfi_offset 14, -4
 5224 0002 82B0     		sub	sp, sp, #8
 5225              	.LCFI196:
 5226              		.cfi_def_cfa_offset 16
 5227 0004 00AF     		add	r7, sp, #0
 5228              	.LCFI197:
 5229              		.cfi_def_cfa_register 7
 5230 0006 021C     		mov	r2, r0
 5231 0008 FB1D     		add	r3, r7, #7
 5232 000a 1A70     		strb	r2, [r3]
1555:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ExecuteSocketCommand(socket, 0x08);
 5233              		.loc 1 1555 0
 5234 000c FB1D     		add	r3, r7, #7
 5235 000e 1B78     		ldrb	r3, [r3]
 5236 0010 181C     		mov	r0, r3
 5237 0012 0821     		mov	r1, #8
 5238 0014 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1556:.\Generated_Source\PSoC4/ETH.c **** }
 5239              		.loc 1 1556 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 121


 5240 0018 BD46     		mov	sp, r7
 5241 001a 02B0     		add	sp, sp, #8
 5242              		@ sp needed for prologue
 5243 001c 80BD     		pop	{r7, pc}
 5244              		.cfi_endproc
 5245              	.LFE66:
 5246              		.size	ETH_TcpDisconnect, .-ETH_TcpDisconnect
 5247 001e C046     		.section	.text.ETH_TcpSend,"ax",%progbits
 5248              		.align	2
 5249              		.global	ETH_TcpSend
 5250              		.code	16
 5251              		.thumb_func
 5252              		.type	ETH_TcpSend, %function
 5253              	ETH_TcpSend:
 5254              	.LFB67:
1557:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1558:.\Generated_Source\PSoC4/ETH.c **** uint16
1559:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpSend(uint8 socket, uint8* buffer, uint16 len)
1560:.\Generated_Source\PSoC4/ETH.c **** {
 5255              		.loc 1 1560 0
 5256              		.cfi_startproc
 5257 0000 90B5     		push	{r4, r7, lr}
 5258              	.LCFI198:
 5259              		.cfi_def_cfa_offset 12
 5260              		.cfi_offset 4, -12
 5261              		.cfi_offset 7, -8
 5262              		.cfi_offset 14, -4
 5263 0002 85B0     		sub	sp, sp, #20
 5264              	.LCFI199:
 5265              		.cfi_def_cfa_offset 32
 5266 0004 00AF     		add	r7, sp, #0
 5267              	.LCFI200:
 5268              		.cfi_def_cfa_register 7
 5269 0006 3960     		str	r1, [r7]
 5270 0008 FB1D     		add	r3, r7, #7
 5271 000a 011C     		add	r1, r0, #0
 5272 000c 1970     		strb	r1, [r3]
 5273 000e 3B1D     		add	r3, r7, #4
 5274 0010 1A80     		strh	r2, [r3]
1561:.\Generated_Source\PSoC4/ETH.c **** 	uint16 TxSize;
1562:.\Generated_Source\PSoC4/ETH.c **** 	uint16 FreeSpace;
1563:.\Generated_Source\PSoC4/ETH.c **** 	uint8 status;
1564:.\Generated_Source\PSoC4/ETH.c **** 	
1565:.\Generated_Source\PSoC4/ETH.c **** 	/* Update Patch: Exit immediately with 0 data tx on bad socket */
1566:.\Generated_Source\PSoC4/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 5275              		.loc 1 1566 0
 5276 0012 FB1D     		add	r3, r7, #7
 5277 0014 1B78     		ldrb	r3, [r3]
 5278 0016 032B     		cmp	r3, #3
 5279 0018 01D9     		bls	.L249
 5280              		.loc 1 1566 0 is_stmt 0 discriminator 1
 5281 001a 0023     		mov	r3, #0
 5282 001c 64E0     		b	.L250
 5283              	.L249:
1567:.\Generated_Source\PSoC4/ETH.c **** 	TxSize =  (len > 0x0800) ? 0x0800 : len;
 5284              		.loc 1 1567 0 is_stmt 1
 5285 001e 3A1C     		mov	r2, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 122


 5286 0020 0E32     		add	r2, r2, #14
 5287 0022 3B1D     		add	r3, r7, #4
 5288 0024 1B88     		ldrh	r3, [r3]
 5289 0026 98B2     		uxth	r0, r3
 5290 0028 8021     		mov	r1, #128
 5291 002a 0901     		lsl	r1, r1, #4
 5292 002c 8842     		cmp	r0, r1
 5293 002e 01D9     		bls	.L251
 5294 0030 8023     		mov	r3, #128
 5295 0032 1B01     		lsl	r3, r3, #4
 5296              	.L251:
 5297 0034 1380     		strh	r3, [r2]
1568:.\Generated_Source\PSoC4/ETH.c **** 	/* check the connection status, and protocol of the socket */
1569:.\Generated_Source\PSoC4/ETH.c **** 	status = ETH_GetSocketStatus(socket);
 5298              		.loc 1 1569 0
 5299 0036 3C1C     		mov	r4, r7
 5300 0038 0B34     		add	r4, r4, #11
 5301 003a FB1D     		add	r3, r7, #7
 5302 003c 1B78     		ldrb	r3, [r3]
 5303 003e 181C     		mov	r0, r3
 5304 0040 FFF7FEFF 		bl	ETH_GetSocketStatus
 5305 0044 031C     		mov	r3, r0
 5306 0046 2370     		strb	r3, [r4]
1570:.\Generated_Source\PSoC4/ETH.c **** 	if ( ( status == 0x17) && (ETH_SocketConfig[socket].Protocol == ETH_PROTO_TCP) ) {
 5307              		.loc 1 1570 0
 5308 0048 3B1C     		mov	r3, r7
 5309 004a 0B33     		add	r3, r3, #11
 5310 004c 1B78     		ldrb	r3, [r3]
 5311 004e 172B     		cmp	r3, #23
 5312 0050 43D1     		bne	.L252
 5313              		.loc 1 1570 0 is_stmt 0 discriminator 1
 5314 0052 FB1D     		add	r3, r7, #7
 5315 0054 1A78     		ldrb	r2, [r3]
 5316 0056 264B     		ldr	r3, .L257
 5317 0058 D200     		lsl	r2, r2, #3
 5318 005a D35C     		ldrb	r3, [r2, r3]
 5319 005c 012B     		cmp	r3, #1
 5320 005e 3CD1     		bne	.L252
1571:.\Generated_Source\PSoC4/ETH.c **** 		/* 
1572:.\Generated_Source\PSoC4/ETH.c **** 		 * The socket was open with the correct protocol and is connected to
1573:.\Generated_Source\PSoC4/ETH.c **** 		 * a valid remote system. In order to send the requested packet data,
1574:.\Generated_Source\PSoC4/ETH.c **** 		 * first, we must wait for the available buffer memory to be free
1575:.\Generated_Source\PSoC4/ETH.c **** 		 * in the transmit buffer fifo.
1576:.\Generated_Source\PSoC4/ETH.c **** 		 */
1577:.\Generated_Source\PSoC4/ETH.c **** 		FreeSpace = 0;
 5321              		.loc 1 1577 0 is_stmt 1
 5322 0060 3B1C     		mov	r3, r7
 5323 0062 0C33     		add	r3, r3, #12
 5324 0064 0022     		mov	r2, #0
 5325 0066 1A80     		strh	r2, [r3]
1578:.\Generated_Source\PSoC4/ETH.c **** 		status = 0x17;
 5326              		.loc 1 1578 0
 5327 0068 3B1C     		mov	r3, r7
 5328 006a 0B33     		add	r3, r3, #11
 5329 006c 1722     		mov	r2, #23
 5330 006e 1A70     		strb	r2, [r3]
1579:.\Generated_Source\PSoC4/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 123


 5331              		.loc 1 1579 0
 5332 0070 11E0     		b	.L253
 5333              	.L255:
1580:.\Generated_Source\PSoC4/ETH.c **** 			FreeSpace = ETH_GetTxFreeSize( socket );
 5334              		.loc 1 1580 0
 5335 0072 3C1C     		mov	r4, r7
 5336 0074 0C34     		add	r4, r4, #12
 5337 0076 FB1D     		add	r3, r7, #7
 5338 0078 1B78     		ldrb	r3, [r3]
 5339 007a 181C     		mov	r0, r3
 5340 007c FFF7FEFF 		bl	ETH_GetTxFreeSize
 5341 0080 031C     		mov	r3, r0
 5342 0082 2380     		strh	r3, [r4]
1581:.\Generated_Source\PSoC4/ETH.c **** 			status = ETH_GetSocketStatus( socket );
 5343              		.loc 1 1581 0
 5344 0084 3C1C     		mov	r4, r7
 5345 0086 0B34     		add	r4, r4, #11
 5346 0088 FB1D     		add	r3, r7, #7
 5347 008a 1B78     		ldrb	r3, [r3]
 5348 008c 181C     		mov	r0, r3
 5349 008e FFF7FEFF 		bl	ETH_GetSocketStatus
 5350 0092 031C     		mov	r3, r0
 5351 0094 2370     		strb	r3, [r4]
 5352              	.L253:
1579:.\Generated_Source\PSoC4/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
 5353              		.loc 1 1579 0 discriminator 1
 5354 0096 3A1C     		mov	r2, r7
 5355 0098 0C32     		add	r2, r2, #12
 5356 009a 3B1C     		mov	r3, r7
 5357 009c 0E33     		add	r3, r3, #14
 5358 009e 1288     		ldrh	r2, [r2]
 5359 00a0 1B88     		ldrh	r3, [r3]
 5360 00a2 9A42     		cmp	r2, r3
 5361 00a4 09D2     		bcs	.L254
1579:.\Generated_Source\PSoC4/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
 5362              		.loc 1 1579 0 is_stmt 0 discriminator 2
 5363 00a6 3B1C     		mov	r3, r7
 5364 00a8 0B33     		add	r3, r3, #11
 5365 00aa 1B78     		ldrb	r3, [r3]
 5366 00ac 172B     		cmp	r3, #23
 5367 00ae 04D1     		bne	.L254
1579:.\Generated_Source\PSoC4/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
 5368              		.loc 1 1579 0 discriminator 1
 5369 00b0 3B1C     		mov	r3, r7
 5370 00b2 0B33     		add	r3, r3, #11
 5371 00b4 1B78     		ldrb	r3, [r3]
 5372 00b6 1C2B     		cmp	r3, #28
 5373 00b8 DBD1     		bne	.L255
 5374              	.L254:
1582:.\Generated_Source\PSoC4/ETH.c **** 		}
1583:.\Generated_Source\PSoC4/ETH.c **** 		/*
1584:.\Generated_Source\PSoC4/ETH.c **** 		 * Write the data buffer to the chip Tx Buffer, then issue
1585:.\Generated_Source\PSoC4/ETH.c **** 		 * the chip SEND command
1586:.\Generated_Source\PSoC4/ETH.c **** 		 */
1587:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ProcessTxData(socket, 0, buffer, TxSize);
 5375              		.loc 1 1587 0 is_stmt 1
 5376 00ba FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 124


 5377 00bc 1978     		ldrb	r1, [r3]
 5378 00be 3A68     		ldr	r2, [r7]
 5379 00c0 3B1C     		mov	r3, r7
 5380 00c2 0E33     		add	r3, r3, #14
 5381 00c4 1B88     		ldrh	r3, [r3]
 5382 00c6 081C     		mov	r0, r1
 5383 00c8 0021     		mov	r1, #0
 5384 00ca FFF7FEFF 		bl	ETH_ProcessTxData
1588:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketSend( socket );
 5385              		.loc 1 1588 0
 5386 00ce FB1D     		add	r3, r7, #7
 5387 00d0 1B78     		ldrb	r3, [r3]
 5388 00d2 181C     		mov	r0, r3
 5389 00d4 FFF7FEFF 		bl	ETH_SocketSend
 5390 00d8 03E0     		b	.L256
 5391              	.L252:
1589:.\Generated_Source\PSoC4/ETH.c **** 	}
1590:.\Generated_Source\PSoC4/ETH.c **** 	else {
1591:.\Generated_Source\PSoC4/ETH.c **** 		/*
1592:.\Generated_Source\PSoC4/ETH.c **** 		 * the socket was not establised, or there was an error, so clear
1593:.\Generated_Source\PSoC4/ETH.c **** 		 * the TxSize to signal that no data has bee sent
1594:.\Generated_Source\PSoC4/ETH.c **** 		 */
1595:.\Generated_Source\PSoC4/ETH.c **** 		TxSize = 0;
 5392              		.loc 1 1595 0
 5393 00da 3B1C     		mov	r3, r7
 5394 00dc 0E33     		add	r3, r3, #14
 5395 00de 0022     		mov	r2, #0
 5396 00e0 1A80     		strh	r2, [r3]
 5397              	.L256:
1596:.\Generated_Source\PSoC4/ETH.c **** 	}
1597:.\Generated_Source\PSoC4/ETH.c **** 	return TxSize;
 5398              		.loc 1 1597 0
 5399 00e2 3B1C     		mov	r3, r7
 5400 00e4 0E33     		add	r3, r3, #14
 5401 00e6 1B88     		ldrh	r3, [r3]
 5402              	.L250:
1598:.\Generated_Source\PSoC4/ETH.c **** }
 5403              		.loc 1 1598 0
 5404 00e8 181C     		mov	r0, r3
 5405 00ea BD46     		mov	sp, r7
 5406 00ec 05B0     		add	sp, sp, #20
 5407              		@ sp needed for prologue
 5408 00ee 90BD     		pop	{r4, r7, pc}
 5409              	.L258:
 5410              		.align	2
 5411              	.L257:
 5412 00f0 00000000 		.word	ETH_SocketConfig
 5413              		.cfi_endproc
 5414              	.LFE67:
 5415              		.size	ETH_TcpSend, .-ETH_TcpSend
 5416              		.section	.text.ETH_TcpReceive,"ax",%progbits
 5417              		.align	2
 5418              		.global	ETH_TcpReceive
 5419              		.code	16
 5420              		.thumb_func
 5421              		.type	ETH_TcpReceive, %function
 5422              	ETH_TcpReceive:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 125


 5423              	.LFB68:
1599:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1600:.\Generated_Source\PSoC4/ETH.c **** uint16
1601:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpReceive( uint8 socket, uint8* buffer, uint16 length )
1602:.\Generated_Source\PSoC4/ETH.c **** {
 5424              		.loc 1 1602 0
 5425              		.cfi_startproc
 5426 0000 90B5     		push	{r4, r7, lr}
 5427              	.LCFI201:
 5428              		.cfi_def_cfa_offset 12
 5429              		.cfi_offset 4, -12
 5430              		.cfi_offset 7, -8
 5431              		.cfi_offset 14, -4
 5432 0002 87B0     		sub	sp, sp, #28
 5433              	.LCFI202:
 5434              		.cfi_def_cfa_offset 40
 5435 0004 02AF     		add	r7, sp, #8
 5436              	.LCFI203:
 5437              		.cfi_def_cfa 7, 32
 5438 0006 3960     		str	r1, [r7]
 5439 0008 FB1D     		add	r3, r7, #7
 5440 000a 011C     		add	r1, r0, #0
 5441 000c 1970     		strb	r1, [r3]
 5442 000e 3B1D     		add	r3, r7, #4
 5443 0010 1A80     		strh	r2, [r3]
1603:.\Generated_Source\PSoC4/ETH.c **** 	uint16 RxSize;
1604:.\Generated_Source\PSoC4/ETH.c **** 
1605:.\Generated_Source\PSoC4/ETH.c **** 	/*
1606:.\Generated_Source\PSoC4/ETH.c **** 	 * Revision Update:
1607:.\Generated_Source\PSoC4/ETH.c **** 	 * Removed dead code, added exit when there is an invlaid socket specified
1608:.\Generated_Source\PSoC4/ETH.c **** 	 */
1609:.\Generated_Source\PSoC4/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 5444              		.loc 1 1609 0
 5445 0012 FB1D     		add	r3, r7, #7
 5446 0014 1B78     		ldrb	r3, [r3]
 5447 0016 032B     		cmp	r3, #3
 5448 0018 01D9     		bls	.L260
 5449              		.loc 1 1609 0 is_stmt 0 discriminator 1
 5450 001a 0023     		mov	r3, #0
 5451 001c 2FE0     		b	.L261
 5452              	.L260:
1610:.\Generated_Source\PSoC4/ETH.c **** 	/*
1611:.\Generated_Source\PSoC4/ETH.c **** 	 * read the number of waiting bytes in the buffer memory
1612:.\Generated_Source\PSoC4/ETH.c **** 	 * but, clip the length of data read to the requested
1613:.\Generated_Source\PSoC4/ETH.c **** 	 * length of data.
1614:.\Generated_Source\PSoC4/ETH.c **** 	 */
1615:.\Generated_Source\PSoC4/ETH.c **** 	RxSize = ETH_GetRxSize( socket );
 5453              		.loc 1 1615 0 is_stmt 1
 5454 001e 3C1C     		mov	r4, r7
 5455 0020 0E34     		add	r4, r4, #14
 5456 0022 FB1D     		add	r3, r7, #7
 5457 0024 1B78     		ldrb	r3, [r3]
 5458 0026 181C     		mov	r0, r3
 5459 0028 FFF7FEFF 		bl	ETH_GetRxSize
 5460 002c 031C     		mov	r3, r0
 5461 002e 2380     		strh	r3, [r4]
1616:.\Generated_Source\PSoC4/ETH.c **** 	RxSize = (RxSize > length) ? length : RxSize;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 126


 5462              		.loc 1 1616 0
 5463 0030 391C     		mov	r1, r7
 5464 0032 0E31     		add	r1, r1, #14
 5465 0034 3B1C     		mov	r3, r7
 5466 0036 0E33     		add	r3, r3, #14
 5467 0038 3A1D     		add	r2, r7, #4
 5468 003a 1288     		ldrh	r2, [r2]
 5469 003c 1B88     		ldrh	r3, [r3]
 5470 003e 9CB2     		uxth	r4, r3
 5471 0040 90B2     		uxth	r0, r2
 5472 0042 8442     		cmp	r4, r0
 5473 0044 00D9     		bls	.L262
 5474 0046 131C     		add	r3, r2, #0
 5475              	.L262:
 5476 0048 0B80     		strh	r3, [r1]
1617:.\Generated_Source\PSoC4/ETH.c **** 	/* If there was waiting data, read it from the buffer */
1618:.\Generated_Source\PSoC4/ETH.c **** 	if (RxSize > 0) {
 5477              		.loc 1 1618 0
 5478 004a 3B1C     		mov	r3, r7
 5479 004c 0E33     		add	r3, r3, #14
 5480 004e 1B88     		ldrh	r3, [r3]
 5481 0050 002B     		cmp	r3, #0
 5482 0052 11D0     		beq	.L263
1619:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ProcessRxData( socket, 0, buffer, RxSize, 0);
 5483              		.loc 1 1619 0
 5484 0054 FB1D     		add	r3, r7, #7
 5485 0056 1978     		ldrb	r1, [r3]
 5486 0058 3A68     		ldr	r2, [r7]
 5487 005a 3B1C     		mov	r3, r7
 5488 005c 0E33     		add	r3, r3, #14
 5489 005e 1B88     		ldrh	r3, [r3]
 5490 0060 0020     		mov	r0, #0
 5491 0062 0090     		str	r0, [sp]
 5492 0064 081C     		mov	r0, r1
 5493 0066 0021     		mov	r1, #0
 5494 0068 FFF7FEFF 		bl	ETH_ProcessRxData
1620:.\Generated_Source\PSoC4/ETH.c **** 		/* 
1621:.\Generated_Source\PSoC4/ETH.c **** 		 * after reading the buffer data, send the receive command
1622:.\Generated_Source\PSoC4/ETH.c **** 		 * to the socket so that the W5100 completes the read
1623:.\Generated_Source\PSoC4/ETH.c **** 		 */
1624:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ExecuteSocketCommand(socket, 0x40);
 5495              		.loc 1 1624 0
 5496 006c FB1D     		add	r3, r7, #7
 5497 006e 1B78     		ldrb	r3, [r3]
 5498 0070 181C     		mov	r0, r3
 5499 0072 4021     		mov	r1, #64
 5500 0074 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
 5501              	.L263:
1625:.\Generated_Source\PSoC4/ETH.c **** 	}
1626:.\Generated_Source\PSoC4/ETH.c **** 	
1627:.\Generated_Source\PSoC4/ETH.c **** 	/* return the number of read bytes from the buffer memory */
1628:.\Generated_Source\PSoC4/ETH.c **** 	return RxSize;
 5502              		.loc 1 1628 0
 5503 0078 3B1C     		mov	r3, r7
 5504 007a 0E33     		add	r3, r3, #14
 5505 007c 1B88     		ldrh	r3, [r3]
 5506              	.L261:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 127


1629:.\Generated_Source\PSoC4/ETH.c **** }
 5507              		.loc 1 1629 0
 5508 007e 181C     		mov	r0, r3
 5509 0080 BD46     		mov	sp, r7
 5510 0082 05B0     		add	sp, sp, #20
 5511              		@ sp needed for prologue
 5512 0084 90BD     		pop	{r4, r7, pc}
 5513              		.cfi_endproc
 5514              	.LFE68:
 5515              		.size	ETH_TcpReceive, .-ETH_TcpReceive
 5516 0086 C046     		.section	.text.ETH_TcpPrint,"ax",%progbits
 5517              		.align	2
 5518              		.global	ETH_TcpPrint
 5519              		.code	16
 5520              		.thumb_func
 5521              		.type	ETH_TcpPrint, %function
 5522              	ETH_TcpPrint:
 5523              	.LFB69:
1630:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1631:.\Generated_Source\PSoC4/ETH.c **** void
1632:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpPrint( uint8 socket, const char* str )
1633:.\Generated_Source\PSoC4/ETH.c **** {
 5524              		.loc 1 1633 0
 5525              		.cfi_startproc
 5526 0000 80B5     		push	{r7, lr}
 5527              	.LCFI204:
 5528              		.cfi_def_cfa_offset 8
 5529              		.cfi_offset 7, -8
 5530              		.cfi_offset 14, -4
 5531 0002 82B0     		sub	sp, sp, #8
 5532              	.LCFI205:
 5533              		.cfi_def_cfa_offset 16
 5534 0004 00AF     		add	r7, sp, #0
 5535              	.LCFI206:
 5536              		.cfi_def_cfa_register 7
 5537 0006 021C     		mov	r2, r0
 5538 0008 3960     		str	r1, [r7]
 5539 000a FB1D     		add	r3, r7, #7
 5540 000c 1A70     		strb	r2, [r3]
1634:.\Generated_Source\PSoC4/ETH.c **** 	ETH_TcpSend(socket, (uint8*)str, strlen(str));
 5541              		.loc 1 1634 0
 5542 000e 3B68     		ldr	r3, [r7]
 5543 0010 181C     		mov	r0, r3
 5544 0012 FFF7FEFF 		bl	strlen
 5545 0016 031C     		mov	r3, r0
 5546 0018 9BB2     		uxth	r3, r3
 5547 001a FA1D     		add	r2, r7, #7
 5548 001c 1178     		ldrb	r1, [r2]
 5549 001e 3A68     		ldr	r2, [r7]
 5550 0020 081C     		mov	r0, r1
 5551 0022 111C     		mov	r1, r2
 5552 0024 1A1C     		mov	r2, r3
 5553 0026 FFF7FEFF 		bl	ETH_TcpSend
1635:.\Generated_Source\PSoC4/ETH.c **** }
 5554              		.loc 1 1635 0
 5555 002a BD46     		mov	sp, r7
 5556 002c 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 128


 5557              		@ sp needed for prologue
 5558 002e 80BD     		pop	{r7, pc}
 5559              		.cfi_endproc
 5560              	.LFE69:
 5561              		.size	ETH_TcpPrint, .-ETH_TcpPrint
 5562              		.section	.text.ETH_UdpOpen,"ax",%progbits
 5563              		.align	2
 5564              		.global	ETH_UdpOpen
 5565              		.code	16
 5566              		.thumb_func
 5567              		.type	ETH_UdpOpen, %function
 5568              	ETH_UdpOpen:
 5569              	.LFB70:
1636:.\Generated_Source\PSoC4/ETH.c **** #endif
1637:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
1638:.\Generated_Source\PSoC4/ETH.c **** /* UDP */
1639:.\Generated_Source\PSoC4/ETH.c **** #if (1)
1640:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1641:.\Generated_Source\PSoC4/ETH.c **** uint8
1642:.\Generated_Source\PSoC4/ETH.c **** ETH_UdpOpen(uint16 port)
1643:.\Generated_Source\PSoC4/ETH.c **** {
 5570              		.loc 1 1643 0
 5571              		.cfi_startproc
 5572 0000 80B5     		push	{r7, lr}
 5573              	.LCFI207:
 5574              		.cfi_def_cfa_offset 8
 5575              		.cfi_offset 7, -8
 5576              		.cfi_offset 14, -4
 5577 0002 82B0     		sub	sp, sp, #8
 5578              	.LCFI208:
 5579              		.cfi_def_cfa_offset 16
 5580 0004 00AF     		add	r7, sp, #0
 5581              	.LCFI209:
 5582              		.cfi_def_cfa_register 7
 5583 0006 021C     		mov	r2, r0
 5584 0008 BB1D     		add	r3, r7, #6
 5585 000a 1A80     		strh	r2, [r3]
1644:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_SocketOpen(ETH_PROTO_UDP, port, 0);
 5586              		.loc 1 1644 0
 5587 000c BB1D     		add	r3, r7, #6
 5588 000e 1B88     		ldrh	r3, [r3]
 5589 0010 0220     		mov	r0, #2
 5590 0012 191C     		mov	r1, r3
 5591 0014 0022     		mov	r2, #0
 5592 0016 FFF7FEFF 		bl	ETH_SocketOpen
 5593 001a 031C     		mov	r3, r0
1645:.\Generated_Source\PSoC4/ETH.c **** }
 5594              		.loc 1 1645 0
 5595 001c 181C     		mov	r0, r3
 5596 001e BD46     		mov	sp, r7
 5597 0020 02B0     		add	sp, sp, #8
 5598              		@ sp needed for prologue
 5599 0022 80BD     		pop	{r7, pc}
 5600              		.cfi_endproc
 5601              	.LFE70:
 5602              		.size	ETH_UdpOpen, .-ETH_UdpOpen
 5603              		.section	.text.ETH_UdpSend,"ax",%progbits
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 129


 5604              		.align	2
 5605              		.global	ETH_UdpSend
 5606              		.code	16
 5607              		.thumb_func
 5608              		.type	ETH_UdpSend, %function
 5609              	ETH_UdpSend:
 5610              	.LFB71:
1646:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */	
1647:.\Generated_Source\PSoC4/ETH.c **** uint16
1648:.\Generated_Source\PSoC4/ETH.c **** ETH_UdpSend(uint8 socket, uint32 ip, uint16 port, uint8* buffer, uint16 length)
1649:.\Generated_Source\PSoC4/ETH.c **** {
 5611              		.loc 1 1649 0
 5612              		.cfi_startproc
 5613 0000 80B5     		push	{r7, lr}
 5614              	.LCFI210:
 5615              		.cfi_def_cfa_offset 8
 5616              		.cfi_offset 7, -8
 5617              		.cfi_offset 14, -4
 5618 0002 86B0     		sub	sp, sp, #24
 5619              	.LCFI211:
 5620              		.cfi_def_cfa_offset 32
 5621 0004 00AF     		add	r7, sp, #0
 5622              	.LCFI212:
 5623              		.cfi_def_cfa_register 7
 5624 0006 B960     		str	r1, [r7, #8]
 5625 0008 7B60     		str	r3, [r7, #4]
 5626 000a 3B1C     		mov	r3, r7
 5627 000c 0F33     		add	r3, r3, #15
 5628 000e 011C     		add	r1, r0, #0
 5629 0010 1970     		strb	r1, [r3]
 5630 0012 3B1C     		mov	r3, r7
 5631 0014 0C33     		add	r3, r3, #12
 5632 0016 1A80     		strh	r2, [r3]
1650:.\Generated_Source\PSoC4/ETH.c **** 	uint16 TxSize;
1651:.\Generated_Source\PSoC4/ETH.c **** 	
1652:.\Generated_Source\PSoC4/ETH.c **** 	/*
1653:.\Generated_Source\PSoC4/ETH.c **** 	 * 2.0 Patch: retun immediately upon the detection of a socket that is not open
1654:.\Generated_Source\PSoC4/ETH.c **** 	 */
1655:.\Generated_Source\PSoC4/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 5633              		.loc 1 1655 0
 5634 0018 3B1C     		mov	r3, r7
 5635 001a 0F33     		add	r3, r3, #15
 5636 001c 1B78     		ldrb	r3, [r3]
 5637 001e 032B     		cmp	r3, #3
 5638 0020 01D9     		bls	.L268
 5639              		.loc 1 1655 0 is_stmt 0 discriminator 1
 5640 0022 0023     		mov	r3, #0
 5641 0024 46E0     		b	.L269
 5642              	.L268:
1656:.\Generated_Source\PSoC4/ETH.c **** 	/*
1657:.\Generated_Source\PSoC4/ETH.c **** 	 * Transmit a buffer of data to a specified remote system using UDP.
1658:.\Generated_Source\PSoC4/ETH.c **** 	 */
1659:.\Generated_Source\PSoC4/ETH.c **** 	if (ETH_GetSocketStatus(socket) == 0x17) {
 5643              		.loc 1 1659 0 is_stmt 1
 5644 0026 3B1C     		mov	r3, r7
 5645 0028 0F33     		add	r3, r3, #15
 5646 002a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 130


 5647 002c 181C     		mov	r0, r3
 5648 002e FFF7FEFF 		bl	ETH_GetSocketStatus
 5649 0032 031C     		mov	r3, r0
 5650 0034 172B     		cmp	r3, #23
 5651 0036 3AD1     		bne	.L270
1660:.\Generated_Source\PSoC4/ETH.c **** 		/*
1661:.\Generated_Source\PSoC4/ETH.c **** 		 * The socket has been established, so wait for available
1662:.\Generated_Source\PSoC4/ETH.c **** 		 * room in the transmit buffer of the socket, but, trim the
1663:.\Generated_Source\PSoC4/ETH.c **** 		 * transmitted data length to no more than the available
1664:.\Generated_Source\PSoC4/ETH.c **** 		 * buffer size in the device. (2K)
1665:.\Generated_Source\PSoC4/ETH.c **** 		 */
1666:.\Generated_Source\PSoC4/ETH.c **** 		TxSize = (length > 0x0800) ? 0x0800 : length;
 5652              		.loc 1 1666 0
 5653 0038 3A1C     		mov	r2, r7
 5654 003a 1632     		add	r2, r2, #22
 5655 003c 3B1C     		mov	r3, r7
 5656 003e 2033     		add	r3, r3, #32
 5657 0040 1B88     		ldrh	r3, [r3]
 5658 0042 98B2     		uxth	r0, r3
 5659 0044 8021     		mov	r1, #128
 5660 0046 0901     		lsl	r1, r1, #4
 5661 0048 8842     		cmp	r0, r1
 5662 004a 01D9     		bls	.L271
 5663 004c 8023     		mov	r3, #128
 5664 004e 1B01     		lsl	r3, r3, #4
 5665              	.L271:
 5666 0050 1380     		strh	r3, [r2]
1667:.\Generated_Source\PSoC4/ETH.c **** 		if ( (ip != 0) && (ip != 0xFFFFFFFF) ) {
 5667              		.loc 1 1667 0
 5668 0052 BB68     		ldr	r3, [r7, #8]
 5669 0054 002B     		cmp	r3, #0
 5670 0056 26D0     		beq	.L272
 5671              		.loc 1 1667 0 is_stmt 0 discriminator 1
 5672 0058 BB68     		ldr	r3, [r7, #8]
 5673 005a 0133     		add	r3, r3, #1
 5674 005c 23D0     		beq	.L272
1668:.\Generated_Source\PSoC4/ETH.c **** 			/*
1669:.\Generated_Source\PSoC4/ETH.c **** 			 * Store the destination IP and port in the chip
1670:.\Generated_Source\PSoC4/ETH.c **** 			 * socket registers.
1671:.\Generated_Source\PSoC4/ETH.c **** 			 */
1672:.\Generated_Source\PSoC4/ETH.c **** 			ETH_SetSocketDestIP( socket, ip );
 5675              		.loc 1 1672 0 is_stmt 1
 5676 005e 3B1C     		mov	r3, r7
 5677 0060 0F33     		add	r3, r3, #15
 5678 0062 1A78     		ldrb	r2, [r3]
 5679 0064 BB68     		ldr	r3, [r7, #8]
 5680 0066 101C     		mov	r0, r2
 5681 0068 191C     		mov	r1, r3
 5682 006a FFF7FEFF 		bl	ETH_SetSocketDestIP
1673:.\Generated_Source\PSoC4/ETH.c **** 			ETH_SetSocketDestPort( socket, port );
 5683              		.loc 1 1673 0
 5684 006e 3B1C     		mov	r3, r7
 5685 0070 0F33     		add	r3, r3, #15
 5686 0072 1A78     		ldrb	r2, [r3]
 5687 0074 3B1C     		mov	r3, r7
 5688 0076 0C33     		add	r3, r3, #12
 5689 0078 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 131


 5690 007a 101C     		mov	r0, r2
 5691 007c 191C     		mov	r1, r3
 5692 007e FFF7FEFF 		bl	ETH_SetSocketDestPort
1674:.\Generated_Source\PSoC4/ETH.c **** 			/*
1675:.\Generated_Source\PSoC4/ETH.c **** 			 * process the transmission buffer, and write it in to
1676:.\Generated_Source\PSoC4/ETH.c **** 			 * the chip buffer memory.
1677:.\Generated_Source\PSoC4/ETH.c **** 			 */
1678:.\Generated_Source\PSoC4/ETH.c **** 			ETH_ProcessTxData(socket,0,buffer,TxSize);
 5693              		.loc 1 1678 0
 5694 0082 3B1C     		mov	r3, r7
 5695 0084 0F33     		add	r3, r3, #15
 5696 0086 1978     		ldrb	r1, [r3]
 5697 0088 7A68     		ldr	r2, [r7, #4]
 5698 008a 3B1C     		mov	r3, r7
 5699 008c 1633     		add	r3, r3, #22
 5700 008e 1B88     		ldrh	r3, [r3]
 5701 0090 081C     		mov	r0, r1
 5702 0092 0021     		mov	r1, #0
 5703 0094 FFF7FEFF 		bl	ETH_ProcessTxData
1679:.\Generated_Source\PSoC4/ETH.c **** 			/*
1680:.\Generated_Source\PSoC4/ETH.c **** 			 * Issue the send command to transmit the buffer.
1681:.\Generated_Source\PSoC4/ETH.c **** 			 */
1682:.\Generated_Source\PSoC4/ETH.c **** 			ETH_SocketSend( socket ); 
 5704              		.loc 1 1682 0
 5705 0098 3B1C     		mov	r3, r7
 5706 009a 0F33     		add	r3, r3, #15
 5707 009c 1B78     		ldrb	r3, [r3]
 5708 009e 181C     		mov	r0, r3
 5709 00a0 FFF7FEFF 		bl	ETH_SocketSend
 5710 00a4 03E0     		b	.L270
 5711              	.L272:
1683:.\Generated_Source\PSoC4/ETH.c **** 		}
1684:.\Generated_Source\PSoC4/ETH.c **** 		else {
1685:.\Generated_Source\PSoC4/ETH.c **** 			/* an invalid IP address was issued, so return that no data was sent. */
1686:.\Generated_Source\PSoC4/ETH.c **** 			TxSize = 0;
 5712              		.loc 1 1686 0
 5713 00a6 3B1C     		mov	r3, r7
 5714 00a8 1633     		add	r3, r3, #22
 5715 00aa 0022     		mov	r2, #0
 5716 00ac 1A80     		strh	r2, [r3]
 5717              	.L270:
1687:.\Generated_Source\PSoC4/ETH.c **** 		}
1688:.\Generated_Source\PSoC4/ETH.c **** 	}
1689:.\Generated_Source\PSoC4/ETH.c **** 	return TxSize;
 5718              		.loc 1 1689 0
 5719 00ae 3B1C     		mov	r3, r7
 5720 00b0 1633     		add	r3, r3, #22
 5721 00b2 1B88     		ldrh	r3, [r3]
 5722              	.L269:
1690:.\Generated_Source\PSoC4/ETH.c **** }
 5723              		.loc 1 1690 0
 5724 00b4 181C     		mov	r0, r3
 5725 00b6 BD46     		mov	sp, r7
 5726 00b8 06B0     		add	sp, sp, #24
 5727              		@ sp needed for prologue
 5728 00ba 80BD     		pop	{r7, pc}
 5729              		.cfi_endproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 132


 5730              	.LFE71:
 5731              		.size	ETH_UdpSend, .-ETH_UdpSend
 5732              		.section	.text.ETH_UdpReceive,"ax",%progbits
 5733              		.align	2
 5734              		.global	ETH_UdpReceive
 5735              		.code	16
 5736              		.thumb_func
 5737              		.type	ETH_UdpReceive, %function
 5738              	ETH_UdpReceive:
 5739              	.LFB72:
1691:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1692:.\Generated_Source\PSoC4/ETH.c **** uint16
1693:.\Generated_Source\PSoC4/ETH.c **** ETH_UdpReceive(uint8 socket, uint32 *ip, uint16 *port, uint8* buffer, uint16 length)
1694:.\Generated_Source\PSoC4/ETH.c **** {
 5740              		.loc 1 1694 0
 5741              		.cfi_startproc
 5742 0000 90B5     		push	{r4, r7, lr}
 5743              	.LCFI213:
 5744              		.cfi_def_cfa_offset 12
 5745              		.cfi_offset 4, -12
 5746              		.cfi_offset 7, -8
 5747              		.cfi_offset 14, -4
 5748 0002 8BB0     		sub	sp, sp, #44
 5749              	.LCFI214:
 5750              		.cfi_def_cfa_offset 56
 5751 0004 02AF     		add	r7, sp, #8
 5752              	.LCFI215:
 5753              		.cfi_def_cfa 7, 48
 5754 0006 B960     		str	r1, [r7, #8]
 5755 0008 7A60     		str	r2, [r7, #4]
 5756 000a 3B60     		str	r3, [r7]
 5757 000c 3B1C     		mov	r3, r7
 5758 000e 0F33     		add	r3, r3, #15
 5759 0010 021C     		add	r2, r0, #0
 5760 0012 1A70     		strb	r2, [r3]
1695:.\Generated_Source\PSoC4/ETH.c **** 	uint16 RxSize;
1696:.\Generated_Source\PSoC4/ETH.c **** 	uint16 PacketSize;
1697:.\Generated_Source\PSoC4/ETH.c **** 	uint8  PacketHeader[8];
1698:.\Generated_Source\PSoC4/ETH.c **** 	
1699:.\Generated_Source\PSoC4/ETH.c **** 	/*
1700:.\Generated_Source\PSoC4/ETH.c **** 	 * 2.0 Patch: retun immediately upon the detection of a socket that is not open
1701:.\Generated_Source\PSoC4/ETH.c **** 	 */
1702:.\Generated_Source\PSoC4/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 5761              		.loc 1 1702 0
 5762 0014 3B1C     		mov	r3, r7
 5763 0016 0F33     		add	r3, r3, #15
 5764 0018 1B78     		ldrb	r3, [r3]
 5765 001a 032B     		cmp	r3, #3
 5766 001c 01D9     		bls	.L274
 5767              		.loc 1 1702 0 is_stmt 0 discriminator 1
 5768 001e 0023     		mov	r3, #0
 5769 0020 94E0     		b	.L280
 5770              	.L274:
1703:.\Generated_Source\PSoC4/ETH.c **** 	/*
1704:.\Generated_Source\PSoC4/ETH.c **** 	 * read the number of waiting bytes in the buffer memory
1705:.\Generated_Source\PSoC4/ETH.c **** 	 * but, clip the length of data read to the requested
1706:.\Generated_Source\PSoC4/ETH.c **** 	 * length of data.
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 133


1707:.\Generated_Source\PSoC4/ETH.c **** 	 */
1708:.\Generated_Source\PSoC4/ETH.c **** 	RxSize = ETH_GetRxSize( socket );
 5771              		.loc 1 1708 0 is_stmt 1
 5772 0022 3C1C     		mov	r4, r7
 5773 0024 1E34     		add	r4, r4, #30
 5774 0026 3B1C     		mov	r3, r7
 5775 0028 0F33     		add	r3, r3, #15
 5776 002a 1B78     		ldrb	r3, [r3]
 5777 002c 181C     		mov	r0, r3
 5778 002e FFF7FEFF 		bl	ETH_GetRxSize
 5779 0032 031C     		mov	r3, r0
 5780 0034 2380     		strh	r3, [r4]
1709:.\Generated_Source\PSoC4/ETH.c **** 	RxSize = (RxSize > length+8) ? length : RxSize;
 5781              		.loc 1 1709 0
 5782 0036 3B1C     		mov	r3, r7
 5783 0038 1E33     		add	r3, r3, #30
 5784 003a 1A88     		ldrh	r2, [r3]
 5785 003c 3B1C     		mov	r3, r7
 5786 003e 3033     		add	r3, r3, #48
 5787 0040 1B88     		ldrh	r3, [r3]
 5788 0042 0833     		add	r3, r3, #8
 5789 0044 9A42     		cmp	r2, r3
 5790 0046 03DD     		ble	.L276
 5791              		.loc 1 1709 0 is_stmt 0 discriminator 1
 5792 0048 3B1C     		mov	r3, r7
 5793 004a 3033     		add	r3, r3, #48
 5794 004c 1B88     		ldrh	r3, [r3]
 5795 004e 02E0     		b	.L277
 5796              	.L276:
 5797              		.loc 1 1709 0 discriminator 2
 5798 0050 3B1C     		mov	r3, r7
 5799 0052 1E33     		add	r3, r3, #30
 5800 0054 1B88     		ldrh	r3, [r3]
 5801              	.L277:
 5802              		.loc 1 1709 0 discriminator 3
 5803 0056 3A1C     		mov	r2, r7
 5804 0058 1E32     		add	r2, r2, #30
 5805 005a 1380     		strh	r3, [r2]
1710:.\Generated_Source\PSoC4/ETH.c **** 	/* If there was waiting data, read it from the buffer */
1711:.\Generated_Source\PSoC4/ETH.c **** 	if (RxSize > 0) {
 5806              		.loc 1 1711 0 is_stmt 1 discriminator 3
 5807 005c 3B1C     		mov	r3, r7
 5808 005e 1E33     		add	r3, r3, #30
 5809 0060 1B88     		ldrh	r3, [r3]
 5810 0062 002B     		cmp	r3, #0
 5811 0064 6FD0     		beq	.L278
1712:.\Generated_Source\PSoC4/ETH.c **** 		/*
1713:.\Generated_Source\PSoC4/ETH.c **** 		 * the UDP packet is stored in the buffer memory as an 8-byte
1714:.\Generated_Source\PSoC4/ETH.c **** 		 * packet header followed by the packet data.
1715:.\Generated_Source\PSoC4/ETH.c **** 		*/
1716:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ProcessRxData( socket, 0, &PacketHeader[0], 8, 0);
 5812              		.loc 1 1716 0
 5813 0066 3B1C     		mov	r3, r7
 5814 0068 0F33     		add	r3, r3, #15
 5815 006a 1A78     		ldrb	r2, [r3]
 5816 006c 3B1C     		mov	r3, r7
 5817 006e 1433     		add	r3, r3, #20
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 134


 5818 0070 0021     		mov	r1, #0
 5819 0072 0091     		str	r1, [sp]
 5820 0074 101C     		mov	r0, r2
 5821 0076 0021     		mov	r1, #0
 5822 0078 1A1C     		mov	r2, r3
 5823 007a 0823     		mov	r3, #8
 5824 007c FFF7FEFF 		bl	ETH_ProcessRxData
1717:.\Generated_Source\PSoC4/ETH.c **** 		/*
1718:.\Generated_Source\PSoC4/ETH.c **** 		 * The packet header contains the 4-byte IP address followed by the
1719:.\Generated_Source\PSoC4/ETH.c **** 		 * 2-byte port number and the 2-byte packet data length
1720:.\Generated_Source\PSoC4/ETH.c **** 		 */
1721:.\Generated_Source\PSoC4/ETH.c **** 		*ip = ETH_IPADDRESS(PacketHeader[0], PacketHeader[1], PacketHeader[2], PacketHeader[3]);
 5825              		.loc 1 1721 0
 5826 0080 3B1C     		mov	r3, r7
 5827 0082 1433     		add	r3, r3, #20
 5828 0084 1B78     		ldrb	r3, [r3]
 5829 0086 1A1C     		mov	r2, r3
 5830 0088 3B1C     		mov	r3, r7
 5831 008a 1433     		add	r3, r3, #20
 5832 008c 5B78     		ldrb	r3, [r3, #1]
 5833 008e 1B02     		lsl	r3, r3, #8
 5834 0090 1B04     		lsl	r3, r3, #16
 5835 0092 1B0C     		lsr	r3, r3, #16
 5836 0094 D218     		add	r2, r2, r3
 5837 0096 3B1C     		mov	r3, r7
 5838 0098 1433     		add	r3, r3, #20
 5839 009a 9B78     		ldrb	r3, [r3, #2]
 5840 009c 1B04     		lsl	r3, r3, #16
 5841 009e 191C     		mov	r1, r3
 5842 00a0 FF23     		mov	r3, #255
 5843 00a2 1B04     		lsl	r3, r3, #16
 5844 00a4 0B40     		and	r3, r1
 5845 00a6 D218     		add	r2, r2, r3
 5846 00a8 3B1C     		mov	r3, r7
 5847 00aa 1433     		add	r3, r3, #20
 5848 00ac DB78     		ldrb	r3, [r3, #3]
 5849 00ae 1B06     		lsl	r3, r3, #24
 5850 00b0 D218     		add	r2, r2, r3
 5851 00b2 BB68     		ldr	r3, [r7, #8]
 5852 00b4 1A60     		str	r2, [r3]
1722:.\Generated_Source\PSoC4/ETH.c **** 		*port = (uint16)((PacketHeader[4]<<8)&0xFF00) | (PacketHeader[5]&0x00FF);
 5853              		.loc 1 1722 0
 5854 00b6 3B1C     		mov	r3, r7
 5855 00b8 1433     		add	r3, r3, #20
 5856 00ba 1B79     		ldrb	r3, [r3, #4]
 5857 00bc 1B02     		lsl	r3, r3, #8
 5858 00be 9BB2     		uxth	r3, r3
 5859 00c0 FF22     		mov	r2, #255
 5860 00c2 9343     		bic	r3, r2
 5861 00c4 9AB2     		uxth	r2, r3
 5862 00c6 3B1C     		mov	r3, r7
 5863 00c8 1433     		add	r3, r3, #20
 5864 00ca 5B79     		ldrb	r3, [r3, #5]
 5865 00cc 1343     		orr	r3, r2
 5866 00ce 9BB2     		uxth	r3, r3
 5867 00d0 9AB2     		uxth	r2, r3
 5868 00d2 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 135


 5869 00d4 1A80     		strh	r2, [r3]
1723:.\Generated_Source\PSoC4/ETH.c **** 		PacketSize = (uint16)((PacketHeader[6]<<8)&0xFF00) | (PacketHeader[7]&0x00FF);
 5870              		.loc 1 1723 0
 5871 00d6 3B1C     		mov	r3, r7
 5872 00d8 1433     		add	r3, r3, #20
 5873 00da 9B79     		ldrb	r3, [r3, #6]
 5874 00dc 1B02     		lsl	r3, r3, #8
 5875 00de 9BB2     		uxth	r3, r3
 5876 00e0 FF22     		mov	r2, #255
 5877 00e2 9343     		bic	r3, r2
 5878 00e4 9AB2     		uxth	r2, r3
 5879 00e6 3B1C     		mov	r3, r7
 5880 00e8 1433     		add	r3, r3, #20
 5881 00ea DB79     		ldrb	r3, [r3, #7]
 5882 00ec 1343     		orr	r3, r2
 5883 00ee 9AB2     		uxth	r2, r3
 5884 00f0 3B1C     		mov	r3, r7
 5885 00f2 1C33     		add	r3, r3, #28
 5886 00f4 1A80     		strh	r2, [r3]
1724:.\Generated_Source\PSoC4/ETH.c **** 		/*
1725:.\Generated_Source\PSoC4/ETH.c **** 		 * Check to make sure that the packet data has been received completely
1726:.\Generated_Source\PSoC4/ETH.c **** 		 */
1727:.\Generated_Source\PSoC4/ETH.c **** 		if (RxSize >= (PacketSize+8) ) {
 5887              		.loc 1 1727 0
 5888 00f6 3B1C     		mov	r3, r7
 5889 00f8 1E33     		add	r3, r3, #30
 5890 00fa 1A88     		ldrh	r2, [r3]
 5891 00fc 3B1C     		mov	r3, r7
 5892 00fe 1C33     		add	r3, r3, #28
 5893 0100 1B88     		ldrh	r3, [r3]
 5894 0102 0833     		add	r3, r3, #8
 5895 0104 9A42     		cmp	r2, r3
 5896 0106 1ADB     		blt	.L279
1728:.\Generated_Source\PSoC4/ETH.c **** 		
1729:.\Generated_Source\PSoC4/ETH.c **** 			ETH_ProcessRxData( socket, 8, buffer, PacketSize, 0);
 5897              		.loc 1 1729 0
 5898 0108 3B1C     		mov	r3, r7
 5899 010a 0F33     		add	r3, r3, #15
 5900 010c 1978     		ldrb	r1, [r3]
 5901 010e 3A68     		ldr	r2, [r7]
 5902 0110 3B1C     		mov	r3, r7
 5903 0112 1C33     		add	r3, r3, #28
 5904 0114 1B88     		ldrh	r3, [r3]
 5905 0116 0020     		mov	r0, #0
 5906 0118 0090     		str	r0, [sp]
 5907 011a 081C     		mov	r0, r1
 5908 011c 0821     		mov	r1, #8
 5909 011e FFF7FEFF 		bl	ETH_ProcessRxData
1730:.\Generated_Source\PSoC4/ETH.c **** 			/* 
1731:.\Generated_Source\PSoC4/ETH.c **** 			 * after reading the buffer data, send the receive command
1732:.\Generated_Source\PSoC4/ETH.c **** 			 * to the socket so that the W5100 completes the read
1733:.\Generated_Source\PSoC4/ETH.c **** 			 */
1734:.\Generated_Source\PSoC4/ETH.c **** 			ETH_ExecuteSocketCommand(socket, 0x40);
 5910              		.loc 1 1734 0
 5911 0122 3B1C     		mov	r3, r7
 5912 0124 0F33     		add	r3, r3, #15
 5913 0126 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 136


 5914 0128 181C     		mov	r0, r3
 5915 012a 4021     		mov	r1, #64
 5916 012c FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1735:.\Generated_Source\PSoC4/ETH.c **** 			RxSize = PacketSize;
 5917              		.loc 1 1735 0
 5918 0130 3B1C     		mov	r3, r7
 5919 0132 1E33     		add	r3, r3, #30
 5920 0134 3A1C     		mov	r2, r7
 5921 0136 1C32     		add	r2, r2, #28
 5922 0138 1288     		ldrh	r2, [r2]
 5923 013a 1A80     		strh	r2, [r3]
 5924 013c 03E0     		b	.L278
 5925              	.L279:
1736:.\Generated_Source\PSoC4/ETH.c **** 		}
1737:.\Generated_Source\PSoC4/ETH.c **** 		else {
1738:.\Generated_Source\PSoC4/ETH.c **** 			RxSize = 8;
 5926              		.loc 1 1738 0
 5927 013e 3B1C     		mov	r3, r7
 5928 0140 1E33     		add	r3, r3, #30
 5929 0142 0822     		mov	r2, #8
 5930 0144 1A80     		strh	r2, [r3]
 5931              	.L278:
1739:.\Generated_Source\PSoC4/ETH.c **** 		}
1740:.\Generated_Source\PSoC4/ETH.c **** 	}
1741:.\Generated_Source\PSoC4/ETH.c **** 	
1742:.\Generated_Source\PSoC4/ETH.c **** 	/* return the number of read bytes from the buffer memory */
1743:.\Generated_Source\PSoC4/ETH.c **** 	return RxSize;
 5932              		.loc 1 1743 0
 5933 0146 3B1C     		mov	r3, r7
 5934 0148 1E33     		add	r3, r3, #30
 5935 014a 1B88     		ldrh	r3, [r3]
 5936              	.L280:
1744:.\Generated_Source\PSoC4/ETH.c **** }
 5937              		.loc 1 1744 0
 5938 014c 181C     		mov	r0, r3
 5939 014e BD46     		mov	sp, r7
 5940 0150 09B0     		add	sp, sp, #36
 5941              		@ sp needed for prologue
 5942 0152 90BD     		pop	{r4, r7, pc}
 5943              		.cfi_endproc
 5944              	.LFE72:
 5945              		.size	ETH_UdpReceive, .-ETH_UdpReceive
 5946              		.text
 5947              	.Letext0:
 5948              		.file 2 "./Generated_Source/PSoC4/cytypes.h"
 5949              		.section	.debug_info,"",%progbits
 5950              	.Ldebug_info0:
 5951 0000 5D150000 		.4byte	0x155d
 5952 0004 0200     		.2byte	0x2
 5953 0006 00000000 		.4byte	.Ldebug_abbrev0
 5954 000a 04       		.byte	0x4
 5955 000b 01       		.uleb128 0x1
 5956 000c 26050000 		.4byte	.LASF144
 5957 0010 01       		.byte	0x1
 5958 0011 66040000 		.4byte	.LASF145
 5959 0015 F6050000 		.4byte	.LASF146
 5960 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 137


 5961 001d 00000000 		.4byte	0
 5962 0021 00000000 		.4byte	0
 5963 0025 00000000 		.4byte	.Ldebug_line0
 5964 0029 02       		.uleb128 0x2
 5965 002a 01       		.byte	0x1
 5966 002b 06       		.byte	0x6
 5967 002c 60010000 		.4byte	.LASF0
 5968 0030 02       		.uleb128 0x2
 5969 0031 01       		.byte	0x1
 5970 0032 08       		.byte	0x8
 5971 0033 74050000 		.4byte	.LASF1
 5972 0037 02       		.uleb128 0x2
 5973 0038 02       		.byte	0x2
 5974 0039 05       		.byte	0x5
 5975 003a A1050000 		.4byte	.LASF2
 5976 003e 02       		.uleb128 0x2
 5977 003f 02       		.byte	0x2
 5978 0040 07       		.byte	0x7
 5979 0041 6D030000 		.4byte	.LASF3
 5980 0045 02       		.uleb128 0x2
 5981 0046 04       		.byte	0x4
 5982 0047 05       		.byte	0x5
 5983 0048 F0010000 		.4byte	.LASF4
 5984 004c 02       		.uleb128 0x2
 5985 004d 04       		.byte	0x4
 5986 004e 07       		.byte	0x7
 5987 004f 47030000 		.4byte	.LASF5
 5988 0053 02       		.uleb128 0x2
 5989 0054 08       		.byte	0x8
 5990 0055 05       		.byte	0x5
 5991 0056 52010000 		.4byte	.LASF6
 5992 005a 02       		.uleb128 0x2
 5993 005b 08       		.byte	0x8
 5994 005c 07       		.byte	0x7
 5995 005d D5000000 		.4byte	.LASF7
 5996 0061 03       		.uleb128 0x3
 5997 0062 04       		.byte	0x4
 5998 0063 05       		.byte	0x5
 5999 0064 696E7400 		.ascii	"int\000"
 6000 0068 02       		.uleb128 0x2
 6001 0069 04       		.byte	0x4
 6002 006a 07       		.byte	0x7
 6003 006b F4020000 		.4byte	.LASF8
 6004 006f 04       		.uleb128 0x4
 6005 0070 06020000 		.4byte	.LASF9
 6006 0074 02       		.byte	0x2
 6007 0075 5B       		.byte	0x5b
 6008 0076 30000000 		.4byte	0x30
 6009 007a 04       		.uleb128 0x4
 6010 007b 26000000 		.4byte	.LASF10
 6011 007f 02       		.byte	0x2
 6012 0080 5C       		.byte	0x5c
 6013 0081 3E000000 		.4byte	0x3e
 6014 0085 04       		.uleb128 0x4
 6015 0086 80020000 		.4byte	.LASF11
 6016 008a 02       		.byte	0x2
 6017 008b 5D       		.byte	0x5d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 138


 6018 008c 4C000000 		.4byte	0x4c
 6019 0090 02       		.uleb128 0x2
 6020 0091 04       		.byte	0x4
 6021 0092 04       		.byte	0x4
 6022 0093 EB040000 		.4byte	.LASF12
 6023 0097 02       		.uleb128 0x2
 6024 0098 08       		.byte	0x8
 6025 0099 04       		.byte	0x4
 6026 009a 2A020000 		.4byte	.LASF13
 6027 009e 02       		.uleb128 0x2
 6028 009f 01       		.byte	0x1
 6029 00a0 08       		.byte	0x8
 6030 00a1 D1060000 		.4byte	.LASF14
 6031 00a5 04       		.uleb128 0x4
 6032 00a6 00080000 		.4byte	.LASF15
 6033 00aa 02       		.byte	0x2
 6034 00ab E8       		.byte	0xe8
 6035 00ac 4C000000 		.4byte	0x4c
 6036 00b0 02       		.uleb128 0x2
 6037 00b1 04       		.byte	0x4
 6038 00b2 07       		.byte	0x7
 6039 00b3 8C040000 		.4byte	.LASF16
 6040 00b7 05       		.uleb128 0x5
 6041 00b8 04       		.byte	0x4
 6042 00b9 9E000000 		.4byte	0x9e
 6043 00bd 05       		.uleb128 0x5
 6044 00be 04       		.byte	0x4
 6045 00bf C3000000 		.4byte	0xc3
 6046 00c3 06       		.uleb128 0x6
 6047 00c4 9E000000 		.4byte	0x9e
 6048 00c8 07       		.uleb128 0x7
 6049 00c9 08       		.byte	0x8
 6050 00ca 01       		.byte	0x1
 6051 00cb 32       		.byte	0x32
 6052 00cc 25010000 		.4byte	0x125
 6053 00d0 08       		.uleb128 0x8
 6054 00d1 FF000000 		.4byte	.LASF17
 6055 00d5 01       		.byte	0x1
 6056 00d6 34       		.byte	0x34
 6057 00d7 6F000000 		.4byte	0x6f
 6058 00db 02       		.byte	0x2
 6059 00dc 23       		.byte	0x23
 6060 00dd 00       		.uleb128 0
 6061 00de 08       		.uleb128 0x8
 6062 00df B6040000 		.4byte	.LASF18
 6063 00e3 01       		.byte	0x1
 6064 00e4 35       		.byte	0x35
 6065 00e5 6F000000 		.4byte	0x6f
 6066 00e9 02       		.byte	0x2
 6067 00ea 23       		.byte	0x23
 6068 00eb 01       		.uleb128 0x1
 6069 00ec 08       		.uleb128 0x8
 6070 00ed 86010000 		.4byte	.LASF19
 6071 00f1 01       		.byte	0x1
 6072 00f2 36       		.byte	0x36
 6073 00f3 7A000000 		.4byte	0x7a
 6074 00f7 02       		.byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 139


 6075 00f8 23       		.byte	0x23
 6076 00f9 02       		.uleb128 0x2
 6077 00fa 08       		.uleb128 0x8
 6078 00fb 89060000 		.4byte	.LASF20
 6079 00ff 01       		.byte	0x1
 6080 0100 37       		.byte	0x37
 6081 0101 6F000000 		.4byte	0x6f
 6082 0105 02       		.byte	0x2
 6083 0106 23       		.byte	0x23
 6084 0107 04       		.uleb128 0x4
 6085 0108 08       		.uleb128 0x8
 6086 0109 95040000 		.4byte	.LASF21
 6087 010d 01       		.byte	0x1
 6088 010e 38       		.byte	0x38
 6089 010f 6F000000 		.4byte	0x6f
 6090 0113 02       		.byte	0x2
 6091 0114 23       		.byte	0x23
 6092 0115 05       		.uleb128 0x5
 6093 0116 08       		.uleb128 0x8
 6094 0117 01070000 		.4byte	.LASF22
 6095 011b 01       		.byte	0x1
 6096 011c 39       		.byte	0x39
 6097 011d 6F000000 		.4byte	0x6f
 6098 0121 02       		.byte	0x2
 6099 0122 23       		.byte	0x23
 6100 0123 06       		.uleb128 0x6
 6101 0124 00       		.byte	0
 6102 0125 04       		.uleb128 0x4
 6103 0126 A2000000 		.4byte	.LASF23
 6104 012a 01       		.byte	0x1
 6105 012b 3A       		.byte	0x3a
 6106 012c C8000000 		.4byte	0xc8
 6107 0130 09       		.uleb128 0x9
 6108 0131 01       		.byte	0x1
 6109 0132 DB060000 		.4byte	.LASF24
 6110 0136 01       		.byte	0x1
 6111 0137 79       		.byte	0x79
 6112 0138 01       		.byte	0x1
 6113 0139 00000000 		.4byte	.LFB0
 6114 013d 0E000000 		.4byte	.LFE0
 6115 0141 00000000 		.4byte	.LLST0
 6116 0145 01       		.byte	0x1
 6117 0146 09       		.uleb128 0x9
 6118 0147 01       		.byte	0x1
 6119 0148 2E080000 		.4byte	.LASF25
 6120 014c 01       		.byte	0x1
 6121 014d 96       		.byte	0x96
 6122 014e 01       		.byte	0x1
 6123 014f 00000000 		.4byte	.LFB1
 6124 0153 0E000000 		.4byte	.LFE1
 6125 0157 2C000000 		.4byte	.LLST1
 6126 015b 01       		.byte	0x1
 6127 015c 0A       		.uleb128 0xa
 6128 015d 01       		.byte	0x1
 6129 015e EC000000 		.4byte	.LASF31
 6130 0162 01       		.byte	0x1
 6131 0163 BA       		.byte	0xba
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 140


 6132 0164 01       		.byte	0x1
 6133 0165 00000000 		.4byte	.LFB2
 6134 0169 18010000 		.4byte	.LFE2
 6135 016d 58000000 		.4byte	.LLST2
 6136 0171 01       		.byte	0x1
 6137 0172 D9010000 		.4byte	0x1d9
 6138 0176 0B       		.uleb128 0xb
 6139 0177 FA000000 		.4byte	.LASF26
 6140 017b 01       		.byte	0x1
 6141 017c BA       		.byte	0xba
 6142 017d 7A000000 		.4byte	0x7a
 6143 0181 02       		.byte	0x2
 6144 0182 91       		.byte	0x91
 6145 0183 66       		.sleb128 -26
 6146 0184 0C       		.uleb128 0xc
 6147 0185 64617400 		.ascii	"dat\000"
 6148 0189 01       		.byte	0x1
 6149 018a BA       		.byte	0xba
 6150 018b D9010000 		.4byte	0x1d9
 6151 018f 02       		.byte	0x2
 6152 0190 91       		.byte	0x91
 6153 0191 60       		.sleb128 -32
 6154 0192 0B       		.uleb128 0xb
 6155 0193 CA060000 		.4byte	.LASF27
 6156 0197 01       		.byte	0x1
 6157 0198 BA       		.byte	0xba
 6158 0199 7A000000 		.4byte	0x7a
 6159 019d 02       		.byte	0x2
 6160 019e 91       		.byte	0x91
 6161 019f 64       		.sleb128 -28
 6162 01a0 0D       		.uleb128 0xd
 6163 01a1 00020000 		.4byte	.LASF28
 6164 01a5 01       		.byte	0x1
 6165 01a6 BC       		.byte	0xbc
 6166 01a7 7A000000 		.4byte	0x7a
 6167 01ab 02       		.byte	0x2
 6168 01ac 91       		.byte	0x91
 6169 01ad 6E       		.sleb128 -18
 6170 01ae 0D       		.uleb128 0xd
 6171 01af D9010000 		.4byte	.LASF29
 6172 01b3 01       		.byte	0x1
 6173 01b4 BD       		.byte	0xbd
 6174 01b5 7A000000 		.4byte	0x7a
 6175 01b9 02       		.byte	0x2
 6176 01ba 91       		.byte	0x91
 6177 01bb 6C       		.sleb128 -20
 6178 01bc 0E       		.uleb128 0xe
 6179 01bd 61647200 		.ascii	"adr\000"
 6180 01c1 01       		.byte	0x1
 6181 01c2 BE       		.byte	0xbe
 6182 01c3 7A000000 		.4byte	0x7a
 6183 01c7 02       		.byte	0x2
 6184 01c8 91       		.byte	0x91
 6185 01c9 6A       		.sleb128 -22
 6186 01ca 0D       		.uleb128 0xd
 6187 01cb 2D000000 		.4byte	.LASF30
 6188 01cf 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 141


 6189 01d0 BF       		.byte	0xbf
 6190 01d1 6F000000 		.4byte	0x6f
 6191 01d5 02       		.byte	0x2
 6192 01d6 91       		.byte	0x91
 6193 01d7 69       		.sleb128 -23
 6194 01d8 00       		.byte	0
 6195 01d9 05       		.uleb128 0x5
 6196 01da 04       		.byte	0x4
 6197 01db 6F000000 		.4byte	0x6f
 6198 01df 0F       		.uleb128 0xf
 6199 01e0 01       		.byte	0x1
 6200 01e1 91030000 		.4byte	.LASF32
 6201 01e5 01       		.byte	0x1
 6202 01e6 0F01     		.2byte	0x10f
 6203 01e8 01       		.byte	0x1
 6204 01e9 00000000 		.4byte	.LFB3
 6205 01ed 62010000 		.4byte	.LFE3
 6206 01f1 90000000 		.4byte	.LLST3
 6207 01f5 01       		.byte	0x1
 6208 01f6 91020000 		.4byte	0x291
 6209 01fa 10       		.uleb128 0x10
 6210 01fb FA000000 		.4byte	.LASF26
 6211 01ff 01       		.byte	0x1
 6212 0200 0F01     		.2byte	0x10f
 6213 0202 7A000000 		.4byte	0x7a
 6214 0206 02       		.byte	0x2
 6215 0207 91       		.byte	0x91
 6216 0208 5E       		.sleb128 -34
 6217 0209 11       		.uleb128 0x11
 6218 020a 64617400 		.ascii	"dat\000"
 6219 020e 01       		.byte	0x1
 6220 020f 0F01     		.2byte	0x10f
 6221 0211 D9010000 		.4byte	0x1d9
 6222 0215 02       		.byte	0x2
 6223 0216 91       		.byte	0x91
 6224 0217 58       		.sleb128 -40
 6225 0218 10       		.uleb128 0x10
 6226 0219 CA060000 		.4byte	.LASF27
 6227 021d 01       		.byte	0x1
 6228 021e 0F01     		.2byte	0x10f
 6229 0220 7A000000 		.4byte	0x7a
 6230 0224 02       		.byte	0x2
 6231 0225 91       		.byte	0x91
 6232 0226 5C       		.sleb128 -36
 6233 0227 12       		.uleb128 0x12
 6234 0228 09080000 		.4byte	.LASF33
 6235 022c 01       		.byte	0x1
 6236 022d 1101     		.2byte	0x111
 6237 022f 7A000000 		.4byte	0x7a
 6238 0233 02       		.byte	0x2
 6239 0234 91       		.byte	0x91
 6240 0235 6E       		.sleb128 -18
 6241 0236 12       		.uleb128 0x12
 6242 0237 A2040000 		.4byte	.LASF34
 6243 023b 01       		.byte	0x1
 6244 023c 1201     		.2byte	0x112
 6245 023e 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 142


 6246 0242 02       		.byte	0x2
 6247 0243 91       		.byte	0x91
 6248 0244 6C       		.sleb128 -20
 6249 0245 12       		.uleb128 0x12
 6250 0246 28080000 		.4byte	.LASF35
 6251 024a 01       		.byte	0x1
 6252 024b 1301     		.2byte	0x113
 6253 024d 7A000000 		.4byte	0x7a
 6254 0251 02       		.byte	0x2
 6255 0252 91       		.byte	0x91
 6256 0253 64       		.sleb128 -28
 6257 0254 12       		.uleb128 0x12
 6258 0255 1B040000 		.4byte	.LASF36
 6259 0259 01       		.byte	0x1
 6260 025a 1401     		.2byte	0x114
 6261 025c 7A000000 		.4byte	0x7a
 6262 0260 02       		.byte	0x2
 6263 0261 91       		.byte	0x91
 6264 0262 6A       		.sleb128 -22
 6265 0263 12       		.uleb128 0x12
 6266 0264 C2070000 		.4byte	.LASF37
 6267 0268 01       		.byte	0x1
 6268 0269 1501     		.2byte	0x115
 6269 026b 6F000000 		.4byte	0x6f
 6270 026f 02       		.byte	0x2
 6271 0270 91       		.byte	0x91
 6272 0271 69       		.sleb128 -23
 6273 0272 12       		.uleb128 0x12
 6274 0273 7E010000 		.4byte	.LASF38
 6275 0277 01       		.byte	0x1
 6276 0278 1601     		.2byte	0x116
 6277 027a 7A000000 		.4byte	0x7a
 6278 027e 02       		.byte	0x2
 6279 027f 91       		.byte	0x91
 6280 0280 66       		.sleb128 -26
 6281 0281 13       		.uleb128 0x13
 6282 0282 72786200 		.ascii	"rxb\000"
 6283 0286 01       		.byte	0x1
 6284 0287 1701     		.2byte	0x117
 6285 0289 6F000000 		.4byte	0x6f
 6286 028d 02       		.byte	0x2
 6287 028e 91       		.byte	0x91
 6288 028f 63       		.sleb128 -29
 6289 0290 00       		.byte	0
 6290 0291 0F       		.uleb128 0xf
 6291 0292 01       		.byte	0x1
 6292 0293 62070000 		.4byte	.LASF39
 6293 0297 01       		.byte	0x1
 6294 0298 AC01     		.2byte	0x1ac
 6295 029a 01       		.byte	0x1
 6296 029b 00000000 		.4byte	.LFB4
 6297 029f 48000000 		.4byte	.LFE4
 6298 02a3 C8000000 		.4byte	.LLST4
 6299 02a7 01       		.byte	0x1
 6300 02a8 DA020000 		.4byte	0x2da
 6301 02ac 10       		.uleb128 0x10
 6302 02ad FA000000 		.4byte	.LASF26
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 143


 6303 02b1 01       		.byte	0x1
 6304 02b2 AC01     		.2byte	0x1ac
 6305 02b4 7A000000 		.4byte	0x7a
 6306 02b8 02       		.byte	0x2
 6307 02b9 91       		.byte	0x91
 6308 02ba 6E       		.sleb128 -18
 6309 02bb 11       		.uleb128 0x11
 6310 02bc 76616C00 		.ascii	"val\000"
 6311 02c0 01       		.byte	0x1
 6312 02c1 AC01     		.2byte	0x1ac
 6313 02c3 7A000000 		.4byte	0x7a
 6314 02c7 02       		.byte	0x2
 6315 02c8 91       		.byte	0x91
 6316 02c9 6C       		.sleb128 -20
 6317 02ca 12       		.uleb128 0x12
 6318 02cb 85040000 		.4byte	.LASF40
 6319 02cf 01       		.byte	0x1
 6320 02d0 AE01     		.2byte	0x1ae
 6321 02d2 7A000000 		.4byte	0x7a
 6322 02d6 02       		.byte	0x2
 6323 02d7 91       		.byte	0x91
 6324 02d8 76       		.sleb128 -10
 6325 02d9 00       		.byte	0
 6326 02da 14       		.uleb128 0x14
 6327 02db 01       		.byte	0x1
 6328 02dc 13030000 		.4byte	.LASF44
 6329 02e0 01       		.byte	0x1
 6330 02e1 BD01     		.2byte	0x1bd
 6331 02e3 01       		.byte	0x1
 6332 02e4 7A000000 		.4byte	0x7a
 6333 02e8 00000000 		.4byte	.LFB5
 6334 02ec 4E000000 		.4byte	.LFE5
 6335 02f0 00010000 		.4byte	.LLST5
 6336 02f4 01       		.byte	0x1
 6337 02f5 18030000 		.4byte	0x318
 6338 02f9 10       		.uleb128 0x10
 6339 02fa FA000000 		.4byte	.LASF26
 6340 02fe 01       		.byte	0x1
 6341 02ff BD01     		.2byte	0x1bd
 6342 0301 7A000000 		.4byte	0x7a
 6343 0305 02       		.byte	0x2
 6344 0306 91       		.byte	0x91
 6345 0307 6E       		.sleb128 -18
 6346 0308 13       		.uleb128 0x13
 6347 0309 76616C00 		.ascii	"val\000"
 6348 030d 01       		.byte	0x1
 6349 030e BF01     		.2byte	0x1bf
 6350 0310 7A000000 		.4byte	0x7a
 6351 0314 02       		.byte	0x2
 6352 0315 91       		.byte	0x91
 6353 0316 76       		.sleb128 -10
 6354 0317 00       		.byte	0
 6355 0318 0F       		.uleb128 0xf
 6356 0319 01       		.byte	0x1
 6357 031a 35070000 		.4byte	.LASF41
 6358 031e 01       		.byte	0x1
 6359 031f D401     		.2byte	0x1d4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 144


 6360 0321 01       		.byte	0x1
 6361 0322 00000000 		.4byte	.LFB6
 6362 0326 1A000000 		.4byte	.LFE6
 6363 032a 38010000 		.4byte	.LLST6
 6364 032e 01       		.byte	0x1
 6365 032f 43030000 		.4byte	0x343
 6366 0333 11       		.uleb128 0x11
 6367 0334 6D616300 		.ascii	"mac\000"
 6368 0338 01       		.byte	0x1
 6369 0339 D401     		.2byte	0x1d4
 6370 033b D9010000 		.4byte	0x1d9
 6371 033f 02       		.byte	0x2
 6372 0340 91       		.byte	0x91
 6373 0341 74       		.sleb128 -12
 6374 0342 00       		.byte	0
 6375 0343 0F       		.uleb128 0xf
 6376 0344 01       		.byte	0x1
 6377 0345 32000000 		.4byte	.LASF42
 6378 0349 01       		.byte	0x1
 6379 034a DD01     		.2byte	0x1dd
 6380 034c 01       		.byte	0x1
 6381 034d 00000000 		.4byte	.LFB7
 6382 0351 1A000000 		.4byte	.LFE7
 6383 0355 70010000 		.4byte	.LLST7
 6384 0359 01       		.byte	0x1
 6385 035a 6E030000 		.4byte	0x36e
 6386 035e 11       		.uleb128 0x11
 6387 035f 6D616300 		.ascii	"mac\000"
 6388 0363 01       		.byte	0x1
 6389 0364 DD01     		.2byte	0x1dd
 6390 0366 D9010000 		.4byte	0x1d9
 6391 036a 02       		.byte	0x2
 6392 036b 91       		.byte	0x91
 6393 036c 74       		.sleb128 -12
 6394 036d 00       		.byte	0
 6395 036e 0F       		.uleb128 0xf
 6396 036f 01       		.byte	0x1
 6397 0370 80070000 		.4byte	.LASF43
 6398 0374 01       		.byte	0x1
 6399 0375 E601     		.2byte	0x1e6
 6400 0377 01       		.byte	0x1
 6401 0378 00000000 		.4byte	.LFB8
 6402 037c 1A000000 		.4byte	.LFE8
 6403 0380 A8010000 		.4byte	.LLST8
 6404 0384 01       		.byte	0x1
 6405 0385 98030000 		.4byte	0x398
 6406 0389 11       		.uleb128 0x11
 6407 038a 697000   		.ascii	"ip\000"
 6408 038d 01       		.byte	0x1
 6409 038e E601     		.2byte	0x1e6
 6410 0390 85000000 		.4byte	0x85
 6411 0394 02       		.byte	0x2
 6412 0395 91       		.byte	0x91
 6413 0396 74       		.sleb128 -12
 6414 0397 00       		.byte	0
 6415 0398 14       		.uleb128 0x14
 6416 0399 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 145


 6417 039a E0050000 		.4byte	.LASF45
 6418 039e 01       		.byte	0x1
 6419 039f EF01     		.2byte	0x1ef
 6420 03a1 01       		.byte	0x1
 6421 03a2 85000000 		.4byte	0x85
 6422 03a6 00000000 		.4byte	.LFB9
 6423 03aa 22000000 		.4byte	.LFE9
 6424 03ae E0010000 		.4byte	.LLST9
 6425 03b2 01       		.byte	0x1
 6426 03b3 C6030000 		.4byte	0x3c6
 6427 03b7 13       		.uleb128 0x13
 6428 03b8 697000   		.ascii	"ip\000"
 6429 03bb 01       		.byte	0x1
 6430 03bc F101     		.2byte	0x1f1
 6431 03be 85000000 		.4byte	0x85
 6432 03c2 02       		.byte	0x2
 6433 03c3 91       		.byte	0x91
 6434 03c4 74       		.sleb128 -12
 6435 03c5 00       		.byte	0
 6436 03c6 0F       		.uleb128 0xf
 6437 03c7 01       		.byte	0x1
 6438 03c8 AF010000 		.4byte	.LASF46
 6439 03cc 01       		.byte	0x1
 6440 03cd FC01     		.2byte	0x1fc
 6441 03cf 01       		.byte	0x1
 6442 03d0 00000000 		.4byte	.LFB10
 6443 03d4 1A000000 		.4byte	.LFE10
 6444 03d8 18020000 		.4byte	.LLST10
 6445 03dc 01       		.byte	0x1
 6446 03dd F0030000 		.4byte	0x3f0
 6447 03e1 11       		.uleb128 0x11
 6448 03e2 697000   		.ascii	"ip\000"
 6449 03e5 01       		.byte	0x1
 6450 03e6 FC01     		.2byte	0x1fc
 6451 03e8 85000000 		.4byte	0x85
 6452 03ec 02       		.byte	0x2
 6453 03ed 91       		.byte	0x91
 6454 03ee 74       		.sleb128 -12
 6455 03ef 00       		.byte	0
 6456 03f0 14       		.uleb128 0x14
 6457 03f1 01       		.byte	0x1
 6458 03f2 14000000 		.4byte	.LASF47
 6459 03f6 01       		.byte	0x1
 6460 03f7 0502     		.2byte	0x205
 6461 03f9 01       		.byte	0x1
 6462 03fa 85000000 		.4byte	0x85
 6463 03fe 00000000 		.4byte	.LFB11
 6464 0402 22000000 		.4byte	.LFE11
 6465 0406 50020000 		.4byte	.LLST11
 6466 040a 01       		.byte	0x1
 6467 040b 1E040000 		.4byte	0x41e
 6468 040f 13       		.uleb128 0x13
 6469 0410 697000   		.ascii	"ip\000"
 6470 0413 01       		.byte	0x1
 6471 0414 0702     		.2byte	0x207
 6472 0416 85000000 		.4byte	0x85
 6473 041a 02       		.byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 146


 6474 041b 91       		.byte	0x91
 6475 041c 74       		.sleb128 -12
 6476 041d 00       		.byte	0
 6477 041e 0F       		.uleb128 0xf
 6478 041f 01       		.byte	0x1
 6479 0420 AD000000 		.4byte	.LASF48
 6480 0424 01       		.byte	0x1
 6481 0425 1002     		.2byte	0x210
 6482 0427 01       		.byte	0x1
 6483 0428 00000000 		.4byte	.LFB12
 6484 042c 1A000000 		.4byte	.LFE12
 6485 0430 88020000 		.4byte	.LLST12
 6486 0434 01       		.byte	0x1
 6487 0435 48040000 		.4byte	0x448
 6488 0439 11       		.uleb128 0x11
 6489 043a 697000   		.ascii	"ip\000"
 6490 043d 01       		.byte	0x1
 6491 043e 1002     		.2byte	0x210
 6492 0440 85000000 		.4byte	0x85
 6493 0444 02       		.byte	0x2
 6494 0445 91       		.byte	0x91
 6495 0446 74       		.sleb128 -12
 6496 0447 00       		.byte	0
 6497 0448 14       		.uleb128 0x14
 6498 0449 01       		.byte	0x1
 6499 044a 56040000 		.4byte	.LASF49
 6500 044e 01       		.byte	0x1
 6501 044f 1902     		.2byte	0x219
 6502 0451 01       		.byte	0x1
 6503 0452 85000000 		.4byte	0x85
 6504 0456 00000000 		.4byte	.LFB13
 6505 045a 22000000 		.4byte	.LFE13
 6506 045e C0020000 		.4byte	.LLST13
 6507 0462 01       		.byte	0x1
 6508 0463 76040000 		.4byte	0x476
 6509 0467 13       		.uleb128 0x13
 6510 0468 697000   		.ascii	"ip\000"
 6511 046b 01       		.byte	0x1
 6512 046c 1B02     		.2byte	0x21b
 6513 046e 85000000 		.4byte	0x85
 6514 0472 02       		.byte	0x2
 6515 0473 91       		.byte	0x91
 6516 0474 74       		.sleb128 -12
 6517 0475 00       		.byte	0
 6518 0476 0F       		.uleb128 0xf
 6519 0477 01       		.byte	0x1
 6520 0478 E8020000 		.4byte	.LASF50
 6521 047c 01       		.byte	0x1
 6522 047d 2402     		.2byte	0x224
 6523 047f 01       		.byte	0x1
 6524 0480 00000000 		.4byte	.LFB14
 6525 0484 1E000000 		.4byte	.LFE14
 6526 0488 F8020000 		.4byte	.LLST14
 6527 048c 01       		.byte	0x1
 6528 048d A1040000 		.4byte	0x4a1
 6529 0491 10       		.uleb128 0x10
 6530 0492 D6060000 		.4byte	.LASF51
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 147


 6531 0496 01       		.byte	0x1
 6532 0497 2402     		.2byte	0x224
 6533 0499 6F000000 		.4byte	0x6f
 6534 049d 02       		.byte	0x2
 6535 049e 91       		.byte	0x91
 6536 049f 77       		.sleb128 -9
 6537 04a0 00       		.byte	0
 6538 04a1 14       		.uleb128 0x14
 6539 04a2 01       		.byte	0x1
 6540 04a3 96070000 		.4byte	.LASF52
 6541 04a7 01       		.byte	0x1
 6542 04a8 2D02     		.2byte	0x22d
 6543 04aa 01       		.byte	0x1
 6544 04ab 6F000000 		.4byte	0x6f
 6545 04af 00000000 		.4byte	.LFB15
 6546 04b3 1E000000 		.4byte	.LFE15
 6547 04b7 30030000 		.4byte	.LLST15
 6548 04bb 01       		.byte	0x1
 6549 04bc D0040000 		.4byte	0x4d0
 6550 04c0 12       		.uleb128 0x12
 6551 04c1 D6060000 		.4byte	.LASF51
 6552 04c5 01       		.byte	0x1
 6553 04c6 2F02     		.2byte	0x22f
 6554 04c8 6F000000 		.4byte	0x6f
 6555 04cc 02       		.byte	0x2
 6556 04cd 91       		.byte	0x91
 6557 04ce 77       		.sleb128 -9
 6558 04cf 00       		.byte	0
 6559 04d0 0F       		.uleb128 0xf
 6560 04d1 01       		.byte	0x1
 6561 04d2 AC070000 		.4byte	.LASF53
 6562 04d6 01       		.byte	0x1
 6563 04d7 3802     		.2byte	0x238
 6564 04d9 01       		.byte	0x1
 6565 04da 00000000 		.4byte	.LFB16
 6566 04de 1E000000 		.4byte	.LFE16
 6567 04e2 68030000 		.4byte	.LLST16
 6568 04e6 01       		.byte	0x1
 6569 04e7 FA040000 		.4byte	0x4fa
 6570 04eb 11       		.uleb128 0x11
 6571 04ec 697200   		.ascii	"ir\000"
 6572 04ef 01       		.byte	0x1
 6573 04f0 3802     		.2byte	0x238
 6574 04f2 6F000000 		.4byte	0x6f
 6575 04f6 02       		.byte	0x2
 6576 04f7 91       		.byte	0x91
 6577 04f8 77       		.sleb128 -9
 6578 04f9 00       		.byte	0
 6579 04fa 0F       		.uleb128 0xf
 6580 04fb 01       		.byte	0x1
 6581 04fc 5E000000 		.4byte	.LASF54
 6582 0500 01       		.byte	0x1
 6583 0501 4102     		.2byte	0x241
 6584 0503 01       		.byte	0x1
 6585 0504 00000000 		.4byte	.LFB17
 6586 0508 82000000 		.4byte	.LFE17
 6587 050c A0030000 		.4byte	.LLST17
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 148


 6588 0510 01       		.byte	0x1
 6589 0511 42050000 		.4byte	0x542
 6590 0515 10       		.uleb128 0x10
 6591 0516 57000000 		.4byte	.LASF55
 6592 051a 01       		.byte	0x1
 6593 051b 4102     		.2byte	0x241
 6594 051d 6F000000 		.4byte	0x6f
 6595 0521 02       		.byte	0x2
 6596 0522 91       		.byte	0x91
 6597 0523 6F       		.sleb128 -17
 6598 0524 10       		.uleb128 0x10
 6599 0525 68030000 		.4byte	.LASF56
 6600 0529 01       		.byte	0x1
 6601 052a 4102     		.2byte	0x241
 6602 052c 6F000000 		.4byte	0x6f
 6603 0530 02       		.byte	0x2
 6604 0531 91       		.byte	0x91
 6605 0532 6E       		.sleb128 -18
 6606 0533 13       		.uleb128 0x13
 6607 0534 737A00   		.ascii	"sz\000"
 6608 0537 01       		.byte	0x1
 6609 0538 4302     		.2byte	0x243
 6610 053a 6F000000 		.4byte	0x6f
 6611 053e 02       		.byte	0x2
 6612 053f 91       		.byte	0x91
 6613 0540 77       		.sleb128 -9
 6614 0541 00       		.byte	0
 6615 0542 14       		.uleb128 0x14
 6616 0543 01       		.byte	0x1
 6617 0544 C7020000 		.4byte	.LASF57
 6618 0548 01       		.byte	0x1
 6619 0549 5C02     		.2byte	0x25c
 6620 054b 01       		.byte	0x1
 6621 054c 6F000000 		.4byte	0x6f
 6622 0550 00000000 		.4byte	.LFB18
 6623 0554 52000000 		.4byte	.LFE18
 6624 0558 D8030000 		.4byte	.LLST18
 6625 055c 01       		.byte	0x1
 6626 055d 7F050000 		.4byte	0x57f
 6627 0561 10       		.uleb128 0x10
 6628 0562 57000000 		.4byte	.LASF55
 6629 0566 01       		.byte	0x1
 6630 0567 5C02     		.2byte	0x25c
 6631 0569 6F000000 		.4byte	0x6f
 6632 056d 02       		.byte	0x2
 6633 056e 91       		.byte	0x91
 6634 056f 6F       		.sleb128 -17
 6635 0570 13       		.uleb128 0x13
 6636 0571 737A00   		.ascii	"sz\000"
 6637 0574 01       		.byte	0x1
 6638 0575 5E02     		.2byte	0x25e
 6639 0577 6F000000 		.4byte	0x6f
 6640 057b 02       		.byte	0x2
 6641 057c 91       		.byte	0x91
 6642 057d 77       		.sleb128 -9
 6643 057e 00       		.byte	0
 6644 057f 0F       		.uleb128 0xf
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 149


 6645 0580 01       		.byte	0x1
 6646 0581 22030000 		.4byte	.LASF58
 6647 0585 01       		.byte	0x1
 6648 0586 6E02     		.2byte	0x26e
 6649 0588 01       		.byte	0x1
 6650 0589 00000000 		.4byte	.LFB19
 6651 058d 82000000 		.4byte	.LFE19
 6652 0591 10040000 		.4byte	.LLST19
 6653 0595 01       		.byte	0x1
 6654 0596 C7050000 		.4byte	0x5c7
 6655 059a 10       		.uleb128 0x10
 6656 059b 57000000 		.4byte	.LASF55
 6657 059f 01       		.byte	0x1
 6658 05a0 6E02     		.2byte	0x26e
 6659 05a2 6F000000 		.4byte	0x6f
 6660 05a6 02       		.byte	0x2
 6661 05a7 91       		.byte	0x91
 6662 05a8 6F       		.sleb128 -17
 6663 05a9 10       		.uleb128 0x10
 6664 05aa 68030000 		.4byte	.LASF56
 6665 05ae 01       		.byte	0x1
 6666 05af 6E02     		.2byte	0x26e
 6667 05b1 6F000000 		.4byte	0x6f
 6668 05b5 02       		.byte	0x2
 6669 05b6 91       		.byte	0x91
 6670 05b7 6E       		.sleb128 -18
 6671 05b8 13       		.uleb128 0x13
 6672 05b9 737A00   		.ascii	"sz\000"
 6673 05bc 01       		.byte	0x1
 6674 05bd 7002     		.2byte	0x270
 6675 05bf 6F000000 		.4byte	0x6f
 6676 05c3 02       		.byte	0x2
 6677 05c4 91       		.byte	0x91
 6678 05c5 77       		.sleb128 -9
 6679 05c6 00       		.byte	0
 6680 05c7 14       		.uleb128 0x14
 6681 05c8 01       		.byte	0x1
 6682 05c9 06050000 		.4byte	.LASF59
 6683 05cd 01       		.byte	0x1
 6684 05ce 8802     		.2byte	0x288
 6685 05d0 01       		.byte	0x1
 6686 05d1 6F000000 		.4byte	0x6f
 6687 05d5 00000000 		.4byte	.LFB20
 6688 05d9 52000000 		.4byte	.LFE20
 6689 05dd 48040000 		.4byte	.LLST20
 6690 05e1 01       		.byte	0x1
 6691 05e2 04060000 		.4byte	0x604
 6692 05e6 10       		.uleb128 0x10
 6693 05e7 57000000 		.4byte	.LASF55
 6694 05eb 01       		.byte	0x1
 6695 05ec 8802     		.2byte	0x288
 6696 05ee 6F000000 		.4byte	0x6f
 6697 05f2 02       		.byte	0x2
 6698 05f3 91       		.byte	0x91
 6699 05f4 6F       		.sleb128 -17
 6700 05f5 13       		.uleb128 0x13
 6701 05f6 737A00   		.ascii	"sz\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 150


 6702 05f9 01       		.byte	0x1
 6703 05fa 8A02     		.2byte	0x28a
 6704 05fc 6F000000 		.4byte	0x6f
 6705 0600 02       		.byte	0x2
 6706 0601 91       		.byte	0x91
 6707 0602 77       		.sleb128 -9
 6708 0603 00       		.byte	0
 6709 0604 0F       		.uleb128 0xf
 6710 0605 01       		.byte	0x1
 6711 0606 EE070000 		.4byte	.LASF60
 6712 060a 01       		.byte	0x1
 6713 060b A202     		.2byte	0x2a2
 6714 060d 01       		.byte	0x1
 6715 060e 00000000 		.4byte	.LFB21
 6716 0612 36000000 		.4byte	.LFE21
 6717 0616 80040000 		.4byte	.LLST21
 6718 061a 01       		.byte	0x1
 6719 061b 3E060000 		.4byte	0x63e
 6720 061f 10       		.uleb128 0x10
 6721 0620 57000000 		.4byte	.LASF55
 6722 0624 01       		.byte	0x1
 6723 0625 A202     		.2byte	0x2a2
 6724 0627 6F000000 		.4byte	0x6f
 6725 062b 02       		.byte	0x2
 6726 062c 91       		.byte	0x91
 6727 062d 77       		.sleb128 -9
 6728 062e 10       		.uleb128 0x10
 6729 062f D6060000 		.4byte	.LASF51
 6730 0633 01       		.byte	0x1
 6731 0634 A202     		.2byte	0x2a2
 6732 0636 6F000000 		.4byte	0x6f
 6733 063a 02       		.byte	0x2
 6734 063b 91       		.byte	0x91
 6735 063c 76       		.sleb128 -10
 6736 063d 00       		.byte	0
 6737 063e 0F       		.uleb128 0xf
 6738 063f 01       		.byte	0x1
 6739 0640 54020000 		.4byte	.LASF61
 6740 0644 01       		.byte	0x1
 6741 0645 AC02     		.2byte	0x2ac
 6742 0647 01       		.byte	0x1
 6743 0648 00000000 		.4byte	.LFB22
 6744 064c 38000000 		.4byte	.LFE22
 6745 0650 B8040000 		.4byte	.LLST22
 6746 0654 01       		.byte	0x1
 6747 0655 78060000 		.4byte	0x678
 6748 0659 10       		.uleb128 0x10
 6749 065a 57000000 		.4byte	.LASF55
 6750 065e 01       		.byte	0x1
 6751 065f AC02     		.2byte	0x2ac
 6752 0661 6F000000 		.4byte	0x6f
 6753 0665 02       		.byte	0x2
 6754 0666 91       		.byte	0x91
 6755 0667 77       		.sleb128 -9
 6756 0668 11       		.uleb128 0x11
 6757 0669 636D6400 		.ascii	"cmd\000"
 6758 066d 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 151


 6759 066e AC02     		.2byte	0x2ac
 6760 0670 6F000000 		.4byte	0x6f
 6761 0674 02       		.byte	0x2
 6762 0675 91       		.byte	0x91
 6763 0676 76       		.sleb128 -10
 6764 0677 00       		.byte	0
 6765 0678 14       		.uleb128 0x14
 6766 0679 01       		.byte	0x1
 6767 067a 0E070000 		.4byte	.LASF62
 6768 067e 01       		.byte	0x1
 6769 067f B602     		.2byte	0x2b6
 6770 0681 01       		.byte	0x1
 6771 0682 6F000000 		.4byte	0x6f
 6772 0686 00000000 		.4byte	.LFB23
 6773 068a 44000000 		.4byte	.LFE23
 6774 068e F0040000 		.4byte	.LLST23
 6775 0692 01       		.byte	0x1
 6776 0693 B6060000 		.4byte	0x6b6
 6777 0697 10       		.uleb128 0x10
 6778 0698 57000000 		.4byte	.LASF55
 6779 069c 01       		.byte	0x1
 6780 069d B602     		.2byte	0x2b6
 6781 069f 6F000000 		.4byte	0x6f
 6782 06a3 02       		.byte	0x2
 6783 06a4 91       		.byte	0x91
 6784 06a5 6F       		.sleb128 -17
 6785 06a6 13       		.uleb128 0x13
 6786 06a7 636D6400 		.ascii	"cmd\000"
 6787 06ab 01       		.byte	0x1
 6788 06ac B802     		.2byte	0x2b8
 6789 06ae 6F000000 		.4byte	0x6f
 6790 06b2 02       		.byte	0x2
 6791 06b3 91       		.byte	0x91
 6792 06b4 77       		.sleb128 -9
 6793 06b5 00       		.byte	0
 6794 06b6 0F       		.uleb128 0xf
 6795 06b7 01       		.byte	0x1
 6796 06b8 70060000 		.4byte	.LASF63
 6797 06bc 01       		.byte	0x1
 6798 06bd C202     		.2byte	0x2c2
 6799 06bf 01       		.byte	0x1
 6800 06c0 00000000 		.4byte	.LFB24
 6801 06c4 38000000 		.4byte	.LFE24
 6802 06c8 28050000 		.4byte	.LLST24
 6803 06cc 01       		.byte	0x1
 6804 06cd EF060000 		.4byte	0x6ef
 6805 06d1 10       		.uleb128 0x10
 6806 06d2 57000000 		.4byte	.LASF55
 6807 06d6 01       		.byte	0x1
 6808 06d7 C202     		.2byte	0x2c2
 6809 06d9 6F000000 		.4byte	0x6f
 6810 06dd 02       		.byte	0x2
 6811 06de 91       		.byte	0x91
 6812 06df 77       		.sleb128 -9
 6813 06e0 11       		.uleb128 0x11
 6814 06e1 697200   		.ascii	"ir\000"
 6815 06e4 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 152


 6816 06e5 C202     		.2byte	0x2c2
 6817 06e7 6F000000 		.4byte	0x6f
 6818 06eb 02       		.byte	0x2
 6819 06ec 91       		.byte	0x91
 6820 06ed 76       		.sleb128 -10
 6821 06ee 00       		.byte	0
 6822 06ef 14       		.uleb128 0x14
 6823 06f0 01       		.byte	0x1
 6824 06f1 4D070000 		.4byte	.LASF64
 6825 06f5 01       		.byte	0x1
 6826 06f6 CC02     		.2byte	0x2cc
 6827 06f8 01       		.byte	0x1
 6828 06f9 6F000000 		.4byte	0x6f
 6829 06fd 00000000 		.4byte	.LFB25
 6830 0701 44000000 		.4byte	.LFE25
 6831 0705 60050000 		.4byte	.LLST25
 6832 0709 01       		.byte	0x1
 6833 070a 2C070000 		.4byte	0x72c
 6834 070e 10       		.uleb128 0x10
 6835 070f 57000000 		.4byte	.LASF55
 6836 0713 01       		.byte	0x1
 6837 0714 CC02     		.2byte	0x2cc
 6838 0716 6F000000 		.4byte	0x6f
 6839 071a 02       		.byte	0x2
 6840 071b 91       		.byte	0x91
 6841 071c 6F       		.sleb128 -17
 6842 071d 13       		.uleb128 0x13
 6843 071e 697200   		.ascii	"ir\000"
 6844 0721 01       		.byte	0x1
 6845 0722 CE02     		.2byte	0x2ce
 6846 0724 6F000000 		.4byte	0x6f
 6847 0728 02       		.byte	0x2
 6848 0729 91       		.byte	0x91
 6849 072a 77       		.sleb128 -9
 6850 072b 00       		.byte	0
 6851 072c 14       		.uleb128 0x14
 6852 072d 01       		.byte	0x1
 6853 072e 36010000 		.4byte	.LASF65
 6854 0732 01       		.byte	0x1
 6855 0733 D802     		.2byte	0x2d8
 6856 0735 01       		.byte	0x1
 6857 0736 6F000000 		.4byte	0x6f
 6858 073a 00000000 		.4byte	.LFB26
 6859 073e 44000000 		.4byte	.LFE26
 6860 0742 98050000 		.4byte	.LLST26
 6861 0746 01       		.byte	0x1
 6862 0747 6A070000 		.4byte	0x76a
 6863 074b 10       		.uleb128 0x10
 6864 074c 57000000 		.4byte	.LASF55
 6865 0750 01       		.byte	0x1
 6866 0751 D802     		.2byte	0x2d8
 6867 0753 6F000000 		.4byte	0x6f
 6868 0757 02       		.byte	0x2
 6869 0758 91       		.byte	0x91
 6870 0759 6F       		.sleb128 -17
 6871 075a 12       		.uleb128 0x12
 6872 075b C7070000 		.4byte	.LASF66
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 153


 6873 075f 01       		.byte	0x1
 6874 0760 DA02     		.2byte	0x2da
 6875 0762 6F000000 		.4byte	0x6f
 6876 0766 02       		.byte	0x2
 6877 0767 91       		.byte	0x91
 6878 0768 77       		.sleb128 -9
 6879 0769 00       		.byte	0
 6880 076a 0F       		.uleb128 0xf
 6881 076b 01       		.byte	0x1
 6882 076c 89050000 		.4byte	.LASF67
 6883 0770 01       		.byte	0x1
 6884 0771 E402     		.2byte	0x2e4
 6885 0773 01       		.byte	0x1
 6886 0774 00000000 		.4byte	.LFB27
 6887 0778 38000000 		.4byte	.LFE27
 6888 077c D0050000 		.4byte	.LLST27
 6889 0780 01       		.byte	0x1
 6890 0781 A4070000 		.4byte	0x7a4
 6891 0785 10       		.uleb128 0x10
 6892 0786 57000000 		.4byte	.LASF55
 6893 078a 01       		.byte	0x1
 6894 078b E402     		.2byte	0x2e4
 6895 078d 6F000000 		.4byte	0x6f
 6896 0791 02       		.byte	0x2
 6897 0792 91       		.byte	0x91
 6898 0793 77       		.sleb128 -9
 6899 0794 10       		.uleb128 0x10
 6900 0795 BD020000 		.4byte	.LASF68
 6901 0799 01       		.byte	0x1
 6902 079a E402     		.2byte	0x2e4
 6903 079c 7A000000 		.4byte	0x7a
 6904 07a0 02       		.byte	0x2
 6905 07a1 91       		.byte	0x91
 6906 07a2 74       		.sleb128 -12
 6907 07a3 00       		.byte	0
 6908 07a4 0F       		.uleb128 0xf
 6909 07a5 01       		.byte	0x1
 6910 07a6 9B020000 		.4byte	.LASF69
 6911 07aa 01       		.byte	0x1
 6912 07ab EE02     		.2byte	0x2ee
 6913 07ad 01       		.byte	0x1
 6914 07ae 00000000 		.4byte	.LFB28
 6915 07b2 34000000 		.4byte	.LFE28
 6916 07b6 08060000 		.4byte	.LLST28
 6917 07ba 01       		.byte	0x1
 6918 07bb DE070000 		.4byte	0x7de
 6919 07bf 10       		.uleb128 0x10
 6920 07c0 57000000 		.4byte	.LASF55
 6921 07c4 01       		.byte	0x1
 6922 07c5 EE02     		.2byte	0x2ee
 6923 07c7 6F000000 		.4byte	0x6f
 6924 07cb 02       		.byte	0x2
 6925 07cc 91       		.byte	0x91
 6926 07cd 77       		.sleb128 -9
 6927 07ce 11       		.uleb128 0x11
 6928 07cf 6D616300 		.ascii	"mac\000"
 6929 07d3 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 154


 6930 07d4 EE02     		.2byte	0x2ee
 6931 07d6 D9010000 		.4byte	0x1d9
 6932 07da 02       		.byte	0x2
 6933 07db 91       		.byte	0x91
 6934 07dc 70       		.sleb128 -16
 6935 07dd 00       		.byte	0
 6936 07de 0F       		.uleb128 0xf
 6937 07df 01       		.byte	0x1
 6938 07e0 00000000 		.4byte	.LASF70
 6939 07e4 01       		.byte	0x1
 6940 07e5 F802     		.2byte	0x2f8
 6941 07e7 01       		.byte	0x1
 6942 07e8 00000000 		.4byte	.LFB29
 6943 07ec 34000000 		.4byte	.LFE29
 6944 07f0 40060000 		.4byte	.LLST29
 6945 07f4 01       		.byte	0x1
 6946 07f5 17080000 		.4byte	0x817
 6947 07f9 10       		.uleb128 0x10
 6948 07fa 57000000 		.4byte	.LASF55
 6949 07fe 01       		.byte	0x1
 6950 07ff F802     		.2byte	0x2f8
 6951 0801 6F000000 		.4byte	0x6f
 6952 0805 02       		.byte	0x2
 6953 0806 91       		.byte	0x91
 6954 0807 77       		.sleb128 -9
 6955 0808 11       		.uleb128 0x11
 6956 0809 697000   		.ascii	"ip\000"
 6957 080c 01       		.byte	0x1
 6958 080d F802     		.2byte	0x2f8
 6959 080f 85000000 		.4byte	0x85
 6960 0813 02       		.byte	0x2
 6961 0814 91       		.byte	0x91
 6962 0815 70       		.sleb128 -16
 6963 0816 00       		.byte	0
 6964 0817 0F       		.uleb128 0xf
 6965 0818 01       		.byte	0x1
 6966 0819 46080000 		.4byte	.LASF71
 6967 081d 01       		.byte	0x1
 6968 081e 0203     		.2byte	0x302
 6969 0820 01       		.byte	0x1
 6970 0821 00000000 		.4byte	.LFB30
 6971 0825 36000000 		.4byte	.LFE30
 6972 0829 78060000 		.4byte	.LLST30
 6973 082d 01       		.byte	0x1
 6974 082e 51080000 		.4byte	0x851
 6975 0832 10       		.uleb128 0x10
 6976 0833 57000000 		.4byte	.LASF55
 6977 0837 01       		.byte	0x1
 6978 0838 0203     		.2byte	0x302
 6979 083a 6F000000 		.4byte	0x6f
 6980 083e 02       		.byte	0x2
 6981 083f 91       		.byte	0x91
 6982 0840 77       		.sleb128 -9
 6983 0841 10       		.uleb128 0x10
 6984 0842 BD020000 		.4byte	.LASF68
 6985 0846 01       		.byte	0x1
 6986 0847 0203     		.2byte	0x302
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 155


 6987 0849 7A000000 		.4byte	0x7a
 6988 084d 02       		.byte	0x2
 6989 084e 91       		.byte	0x91
 6990 084f 74       		.sleb128 -12
 6991 0850 00       		.byte	0
 6992 0851 14       		.uleb128 0x14
 6993 0852 01       		.byte	0x1
 6994 0853 87020000 		.4byte	.LASF72
 6995 0857 01       		.byte	0x1
 6996 0858 0C03     		.2byte	0x30c
 6997 085a 01       		.byte	0x1
 6998 085b 7A000000 		.4byte	0x7a
 6999 085f 00000000 		.4byte	.LFB31
 7000 0863 2E000000 		.4byte	.LFE31
 7001 0867 B0060000 		.4byte	.LLST31
 7002 086b 01       		.byte	0x1
 7003 086c 80080000 		.4byte	0x880
 7004 0870 10       		.uleb128 0x10
 7005 0871 57000000 		.4byte	.LASF55
 7006 0875 01       		.byte	0x1
 7007 0876 0C03     		.2byte	0x30c
 7008 0878 6F000000 		.4byte	0x6f
 7009 087c 02       		.byte	0x2
 7010 087d 91       		.byte	0x91
 7011 087e 77       		.sleb128 -9
 7012 087f 00       		.byte	0
 7013 0880 0F       		.uleb128 0xf
 7014 0881 01       		.byte	0x1
 7015 0882 C1010000 		.4byte	.LASF73
 7016 0886 01       		.byte	0x1
 7017 0887 1603     		.2byte	0x316
 7018 0889 01       		.byte	0x1
 7019 088a 00000000 		.4byte	.LFB32
 7020 088e 38000000 		.4byte	.LFE32
 7021 0892 E8060000 		.4byte	.LLST32
 7022 0896 01       		.byte	0x1
 7023 0897 BA080000 		.4byte	0x8ba
 7024 089b 10       		.uleb128 0x10
 7025 089c 57000000 		.4byte	.LASF55
 7026 08a0 01       		.byte	0x1
 7027 08a1 1603     		.2byte	0x316
 7028 08a3 6F000000 		.4byte	0x6f
 7029 08a7 02       		.byte	0x2
 7030 08a8 91       		.byte	0x91
 7031 08a9 77       		.sleb128 -9
 7032 08aa 11       		.uleb128 0x11
 7033 08ab 70747200 		.ascii	"ptr\000"
 7034 08af 01       		.byte	0x1
 7035 08b0 1603     		.2byte	0x316
 7036 08b2 7A000000 		.4byte	0x7a
 7037 08b6 02       		.byte	0x2
 7038 08b7 91       		.byte	0x91
 7039 08b8 74       		.sleb128 -12
 7040 08b9 00       		.byte	0
 7041 08ba 14       		.uleb128 0x14
 7042 08bb 01       		.byte	0x1
 7043 08bc 3E040000 		.4byte	.LASF74
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 156


 7044 08c0 01       		.byte	0x1
 7045 08c1 2003     		.2byte	0x320
 7046 08c3 01       		.byte	0x1
 7047 08c4 7A000000 		.4byte	0x7a
 7048 08c8 00000000 		.4byte	.LFB33
 7049 08cc 30000000 		.4byte	.LFE33
 7050 08d0 20070000 		.4byte	.LLST33
 7051 08d4 01       		.byte	0x1
 7052 08d5 E9080000 		.4byte	0x8e9
 7053 08d9 10       		.uleb128 0x10
 7054 08da 57000000 		.4byte	.LASF55
 7055 08de 01       		.byte	0x1
 7056 08df 2003     		.2byte	0x320
 7057 08e1 6F000000 		.4byte	0x6f
 7058 08e5 02       		.byte	0x2
 7059 08e6 91       		.byte	0x91
 7060 08e7 77       		.sleb128 -9
 7061 08e8 00       		.byte	0
 7062 08e9 14       		.uleb128 0x14
 7063 08ea 01       		.byte	0x1
 7064 08eb CC050000 		.4byte	.LASF75
 7065 08ef 01       		.byte	0x1
 7066 08f0 2A03     		.2byte	0x32a
 7067 08f2 01       		.byte	0x1
 7068 08f3 7A000000 		.4byte	0x7a
 7069 08f7 00000000 		.4byte	.LFB34
 7070 08fb 30000000 		.4byte	.LFE34
 7071 08ff 58070000 		.4byte	.LLST34
 7072 0903 01       		.byte	0x1
 7073 0904 18090000 		.4byte	0x918
 7074 0908 10       		.uleb128 0x10
 7075 0909 57000000 		.4byte	.LASF55
 7076 090d 01       		.byte	0x1
 7077 090e 2A03     		.2byte	0x32a
 7078 0910 6F000000 		.4byte	0x6f
 7079 0914 02       		.byte	0x2
 7080 0915 91       		.byte	0x91
 7081 0916 77       		.sleb128 -9
 7082 0917 00       		.byte	0
 7083 0918 0F       		.uleb128 0xf
 7084 0919 01       		.byte	0x1
 7085 091a 11080000 		.4byte	.LASF76
 7086 091e 01       		.byte	0x1
 7087 091f 3403     		.2byte	0x334
 7088 0921 01       		.byte	0x1
 7089 0922 00000000 		.4byte	.LFB35
 7090 0926 36000000 		.4byte	.LFE35
 7091 092a 90070000 		.4byte	.LLST35
 7092 092e 01       		.byte	0x1
 7093 092f 52090000 		.4byte	0x952
 7094 0933 10       		.uleb128 0x10
 7095 0934 57000000 		.4byte	.LASF55
 7096 0938 01       		.byte	0x1
 7097 0939 3403     		.2byte	0x334
 7098 093b 6F000000 		.4byte	0x6f
 7099 093f 02       		.byte	0x2
 7100 0940 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 157


 7101 0941 77       		.sleb128 -9
 7102 0942 11       		.uleb128 0x11
 7103 0943 70747200 		.ascii	"ptr\000"
 7104 0947 01       		.byte	0x1
 7105 0948 3403     		.2byte	0x334
 7106 094a 7A000000 		.4byte	0x7a
 7107 094e 02       		.byte	0x2
 7108 094f 91       		.byte	0x91
 7109 0950 74       		.sleb128 -12
 7110 0951 00       		.byte	0
 7111 0952 14       		.uleb128 0x14
 7112 0953 01       		.byte	0x1
 7113 0954 0C020000 		.4byte	.LASF77
 7114 0958 01       		.byte	0x1
 7115 0959 3E03     		.2byte	0x33e
 7116 095b 01       		.byte	0x1
 7117 095c 7A000000 		.4byte	0x7a
 7118 0960 00000000 		.4byte	.LFB36
 7119 0964 2E000000 		.4byte	.LFE36
 7120 0968 C8070000 		.4byte	.LLST36
 7121 096c 01       		.byte	0x1
 7122 096d 81090000 		.4byte	0x981
 7123 0971 10       		.uleb128 0x10
 7124 0972 57000000 		.4byte	.LASF55
 7125 0976 01       		.byte	0x1
 7126 0977 3E03     		.2byte	0x33e
 7127 0979 6F000000 		.4byte	0x6f
 7128 097d 02       		.byte	0x2
 7129 097e 91       		.byte	0x91
 7130 097f 77       		.sleb128 -9
 7131 0980 00       		.byte	0
 7132 0981 15       		.uleb128 0x15
 7133 0982 01       		.byte	0x1
 7134 0983 97010000 		.4byte	.LASF78
 7135 0987 01       		.byte	0x1
 7136 0988 4803     		.2byte	0x348
 7137 098a 01       		.byte	0x1
 7138 098b 00000000 		.4byte	.LFB37
 7139 098f 18000000 		.4byte	.LFE37
 7140 0993 00080000 		.4byte	.LLST37
 7141 0997 01       		.byte	0x1
 7142 0998 BB090000 		.4byte	0x9bb
 7143 099c 10       		.uleb128 0x10
 7144 099d 57000000 		.4byte	.LASF55
 7145 09a1 01       		.byte	0x1
 7146 09a2 4803     		.2byte	0x348
 7147 09a4 6F000000 		.4byte	0x6f
 7148 09a8 02       		.byte	0x2
 7149 09a9 91       		.byte	0x91
 7150 09aa 77       		.sleb128 -9
 7151 09ab 11       		.uleb128 0x11
 7152 09ac 70747200 		.ascii	"ptr\000"
 7153 09b0 01       		.byte	0x1
 7154 09b1 4803     		.2byte	0x348
 7155 09b3 7A000000 		.4byte	0x7a
 7156 09b7 02       		.byte	0x2
 7157 09b8 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 158


 7158 09b9 74       		.sleb128 -12
 7159 09ba 00       		.byte	0
 7160 09bb 0F       		.uleb128 0xf
 7161 09bc 01       		.byte	0x1
 7162 09bd 3D020000 		.4byte	.LASF79
 7163 09c1 01       		.byte	0x1
 7164 09c2 5B03     		.2byte	0x35b
 7165 09c4 01       		.byte	0x1
 7166 09c5 00000000 		.4byte	.LFB38
 7167 09c9 38000000 		.4byte	.LFE38
 7168 09cd 38080000 		.4byte	.LLST38
 7169 09d1 01       		.byte	0x1
 7170 09d2 F5090000 		.4byte	0x9f5
 7171 09d6 10       		.uleb128 0x10
 7172 09d7 57000000 		.4byte	.LASF55
 7173 09db 01       		.byte	0x1
 7174 09dc 5B03     		.2byte	0x35b
 7175 09de 6F000000 		.4byte	0x6f
 7176 09e2 02       		.byte	0x2
 7177 09e3 91       		.byte	0x91
 7178 09e4 77       		.sleb128 -9
 7179 09e5 11       		.uleb128 0x11
 7180 09e6 70747200 		.ascii	"ptr\000"
 7181 09ea 01       		.byte	0x1
 7182 09eb 5B03     		.2byte	0x35b
 7183 09ed 7A000000 		.4byte	0x7a
 7184 09f1 02       		.byte	0x2
 7185 09f2 91       		.byte	0x91
 7186 09f3 74       		.sleb128 -12
 7187 09f4 00       		.byte	0
 7188 09f5 14       		.uleb128 0x14
 7189 09f6 01       		.byte	0x1
 7190 09f7 AB050000 		.4byte	.LASF80
 7191 09fb 01       		.byte	0x1
 7192 09fc 6503     		.2byte	0x365
 7193 09fe 01       		.byte	0x1
 7194 09ff 85000000 		.4byte	0x85
 7195 0a03 00000000 		.4byte	.LFB39
 7196 0a07 50000000 		.4byte	.LFE39
 7197 0a0b 70080000 		.4byte	.LLST39
 7198 0a0f 01       		.byte	0x1
 7199 0a10 420A0000 		.4byte	0xa42
 7200 0a14 10       		.uleb128 0x10
 7201 0a15 57000000 		.4byte	.LASF55
 7202 0a19 01       		.byte	0x1
 7203 0a1a 6503     		.2byte	0x365
 7204 0a1c 6F000000 		.4byte	0x6f
 7205 0a20 02       		.byte	0x2
 7206 0a21 91       		.byte	0x91
 7207 0a22 6F       		.sleb128 -17
 7208 0a23 11       		.uleb128 0x11
 7209 0a24 636D6400 		.ascii	"cmd\000"
 7210 0a28 01       		.byte	0x1
 7211 0a29 6503     		.2byte	0x365
 7212 0a2b 61000000 		.4byte	0x61
 7213 0a2f 02       		.byte	0x2
 7214 0a30 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 159


 7215 0a31 68       		.sleb128 -24
 7216 0a32 12       		.uleb128 0x12
 7217 0a33 59030000 		.4byte	.LASF81
 7218 0a37 01       		.byte	0x1
 7219 0a38 6703     		.2byte	0x367
 7220 0a3a 85000000 		.4byte	0x85
 7221 0a3e 02       		.byte	0x2
 7222 0a3f 91       		.byte	0x91
 7223 0a40 74       		.sleb128 -12
 7224 0a41 00       		.byte	0
 7225 0a42 14       		.uleb128 0x14
 7226 0a43 01       		.byte	0x1
 7227 0a44 09040000 		.4byte	.LASF82
 7228 0a48 01       		.byte	0x1
 7229 0a49 7803     		.2byte	0x378
 7230 0a4b 01       		.byte	0x1
 7231 0a4c 7A000000 		.4byte	0x7a
 7232 0a50 00000000 		.4byte	.LFB40
 7233 0a54 68000000 		.4byte	.LFE40
 7234 0a58 A8080000 		.4byte	.LLST40
 7235 0a5c 01       		.byte	0x1
 7236 0a5d 8F0A0000 		.4byte	0xa8f
 7237 0a61 10       		.uleb128 0x10
 7238 0a62 57000000 		.4byte	.LASF55
 7239 0a66 01       		.byte	0x1
 7240 0a67 7803     		.2byte	0x378
 7241 0a69 6F000000 		.4byte	0x6f
 7242 0a6d 02       		.byte	0x2
 7243 0a6e 91       		.byte	0x91
 7244 0a6f 67       		.sleb128 -25
 7245 0a70 12       		.uleb128 0x12
 7246 0a71 C4060000 		.4byte	.LASF83
 7247 0a75 01       		.byte	0x1
 7248 0a76 7A03     		.2byte	0x37a
 7249 0a78 7A000000 		.4byte	0x7a
 7250 0a7c 02       		.byte	0x2
 7251 0a7d 91       		.byte	0x91
 7252 0a7e 6C       		.sleb128 -20
 7253 0a7f 12       		.uleb128 0x12
 7254 0a80 82050000 		.4byte	.LASF84
 7255 0a84 01       		.byte	0x1
 7256 0a85 7A03     		.2byte	0x37a
 7257 0a87 7A000000 		.4byte	0x7a
 7258 0a8b 02       		.byte	0x2
 7259 0a8c 91       		.byte	0x91
 7260 0a8d 6E       		.sleb128 -18
 7261 0a8e 00       		.byte	0
 7262 0a8f 14       		.uleb128 0x14
 7263 0a90 01       		.byte	0x1
 7264 0a91 72070000 		.4byte	.LASF85
 7265 0a95 01       		.byte	0x1
 7266 0a96 8E03     		.2byte	0x38e
 7267 0a98 01       		.byte	0x1
 7268 0a99 7A000000 		.4byte	0x7a
 7269 0a9d 00000000 		.4byte	.LFB41
 7270 0aa1 68000000 		.4byte	.LFE41
 7271 0aa5 E0080000 		.4byte	.LLST41
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 160


 7272 0aa9 01       		.byte	0x1
 7273 0aaa DC0A0000 		.4byte	0xadc
 7274 0aae 10       		.uleb128 0x10
 7275 0aaf 57000000 		.4byte	.LASF55
 7276 0ab3 01       		.byte	0x1
 7277 0ab4 8E03     		.2byte	0x38e
 7278 0ab6 6F000000 		.4byte	0x6f
 7279 0aba 02       		.byte	0x2
 7280 0abb 91       		.byte	0x91
 7281 0abc 67       		.sleb128 -25
 7282 0abd 12       		.uleb128 0x12
 7283 0abe C4060000 		.4byte	.LASF83
 7284 0ac2 01       		.byte	0x1
 7285 0ac3 9003     		.2byte	0x390
 7286 0ac5 7A000000 		.4byte	0x7a
 7287 0ac9 02       		.byte	0x2
 7288 0aca 91       		.byte	0x91
 7289 0acb 6C       		.sleb128 -20
 7290 0acc 12       		.uleb128 0x12
 7291 0acd 82050000 		.4byte	.LASF84
 7292 0ad1 01       		.byte	0x1
 7293 0ad2 9003     		.2byte	0x390
 7294 0ad4 7A000000 		.4byte	0x7a
 7295 0ad8 02       		.byte	0x2
 7296 0ad9 91       		.byte	0x91
 7297 0ada 6E       		.sleb128 -18
 7298 0adb 00       		.byte	0
 7299 0adc 0F       		.uleb128 0xf
 7300 0add 01       		.byte	0x1
 7301 0ade 6C010000 		.4byte	.LASF86
 7302 0ae2 01       		.byte	0x1
 7303 0ae3 AD03     		.2byte	0x3ad
 7304 0ae5 01       		.byte	0x1
 7305 0ae6 00000000 		.4byte	.LFB42
 7306 0aea 10010000 		.4byte	.LFE42
 7307 0aee 18090000 		.4byte	.LLST42
 7308 0af2 01       		.byte	0x1
 7309 0af3 700B0000 		.4byte	0xb70
 7310 0af7 10       		.uleb128 0x10
 7311 0af8 57000000 		.4byte	.LASF55
 7312 0afc 01       		.byte	0x1
 7313 0afd AD03     		.2byte	0x3ad
 7314 0aff 6F000000 		.4byte	0x6f
 7315 0b03 02       		.byte	0x2
 7316 0b04 91       		.byte	0x91
 7317 0b05 6F       		.sleb128 -17
 7318 0b06 10       		.uleb128 0x10
 7319 0b07 23020000 		.4byte	.LASF87
 7320 0b0b 01       		.byte	0x1
 7321 0b0c AD03     		.2byte	0x3ad
 7322 0b0e 7A000000 		.4byte	0x7a
 7323 0b12 02       		.byte	0x2
 7324 0b13 91       		.byte	0x91
 7325 0b14 6C       		.sleb128 -20
 7326 0b15 10       		.uleb128 0x10
 7327 0b16 46070000 		.4byte	.LASF88
 7328 0b1a 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 161


 7329 0b1b AD03     		.2byte	0x3ad
 7330 0b1d D9010000 		.4byte	0x1d9
 7331 0b21 02       		.byte	0x2
 7332 0b22 91       		.byte	0x91
 7333 0b23 68       		.sleb128 -24
 7334 0b24 10       		.uleb128 0x10
 7335 0b25 CA060000 		.4byte	.LASF27
 7336 0b29 01       		.byte	0x1
 7337 0b2a AD03     		.2byte	0x3ad
 7338 0b2c 7A000000 		.4byte	0x7a
 7339 0b30 02       		.byte	0x2
 7340 0b31 91       		.byte	0x91
 7341 0b32 66       		.sleb128 -26
 7342 0b33 12       		.uleb128 0x12
 7343 0b34 FA000000 		.4byte	.LASF26
 7344 0b38 01       		.byte	0x1
 7345 0b39 AF03     		.2byte	0x3af
 7346 0b3b 7A000000 		.4byte	0x7a
 7347 0b3f 02       		.byte	0x2
 7348 0b40 91       		.byte	0x91
 7349 0b41 72       		.sleb128 -14
 7350 0b42 12       		.uleb128 0x12
 7351 0b43 6F050000 		.4byte	.LASF89
 7352 0b47 01       		.byte	0x1
 7353 0b48 B003     		.2byte	0x3b0
 7354 0b4a 7A000000 		.4byte	0x7a
 7355 0b4e 02       		.byte	0x2
 7356 0b4f 91       		.byte	0x91
 7357 0b50 76       		.sleb128 -10
 7358 0b51 12       		.uleb128 0x12
 7359 0b52 39030000 		.4byte	.LASF90
 7360 0b56 01       		.byte	0x1
 7361 0b57 B103     		.2byte	0x3b1
 7362 0b59 7A000000 		.4byte	0x7a
 7363 0b5d 02       		.byte	0x2
 7364 0b5e 91       		.byte	0x91
 7365 0b5f 74       		.sleb128 -12
 7366 0b60 12       		.uleb128 0x12
 7367 0b61 68030000 		.4byte	.LASF56
 7368 0b65 01       		.byte	0x1
 7369 0b66 B203     		.2byte	0x3b2
 7370 0b68 7A000000 		.4byte	0x7a
 7371 0b6c 02       		.byte	0x2
 7372 0b6d 91       		.byte	0x91
 7373 0b6e 70       		.sleb128 -16
 7374 0b6f 00       		.byte	0
 7375 0b70 0F       		.uleb128 0xf
 7376 0b71 01       		.byte	0x1
 7377 0b72 01030000 		.4byte	.LASF91
 7378 0b76 01       		.byte	0x1
 7379 0b77 E503     		.2byte	0x3e5
 7380 0b79 01       		.byte	0x1
 7381 0b7a 00000000 		.4byte	.LFB43
 7382 0b7e 1C010000 		.4byte	.LFE43
 7383 0b82 50090000 		.4byte	.LLST43
 7384 0b86 01       		.byte	0x1
 7385 0b87 130C0000 		.4byte	0xc13
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 162


 7386 0b8b 10       		.uleb128 0x10
 7387 0b8c 57000000 		.4byte	.LASF55
 7388 0b90 01       		.byte	0x1
 7389 0b91 E503     		.2byte	0x3e5
 7390 0b93 6F000000 		.4byte	0x6f
 7391 0b97 02       		.byte	0x2
 7392 0b98 91       		.byte	0x91
 7393 0b99 6F       		.sleb128 -17
 7394 0b9a 10       		.uleb128 0x10
 7395 0b9b 23020000 		.4byte	.LASF87
 7396 0b9f 01       		.byte	0x1
 7397 0ba0 E503     		.2byte	0x3e5
 7398 0ba2 7A000000 		.4byte	0x7a
 7399 0ba6 02       		.byte	0x2
 7400 0ba7 91       		.byte	0x91
 7401 0ba8 6C       		.sleb128 -20
 7402 0ba9 10       		.uleb128 0x10
 7403 0baa 46070000 		.4byte	.LASF88
 7404 0bae 01       		.byte	0x1
 7405 0baf E503     		.2byte	0x3e5
 7406 0bb1 D9010000 		.4byte	0x1d9
 7407 0bb5 02       		.byte	0x2
 7408 0bb6 91       		.byte	0x91
 7409 0bb7 68       		.sleb128 -24
 7410 0bb8 10       		.uleb128 0x10
 7411 0bb9 CA060000 		.4byte	.LASF27
 7412 0bbd 01       		.byte	0x1
 7413 0bbe E503     		.2byte	0x3e5
 7414 0bc0 7A000000 		.4byte	0x7a
 7415 0bc4 02       		.byte	0x2
 7416 0bc5 91       		.byte	0x91
 7417 0bc6 66       		.sleb128 -26
 7418 0bc7 10       		.uleb128 0x10
 7419 0bc8 D9070000 		.4byte	.LASF92
 7420 0bcc 01       		.byte	0x1
 7421 0bcd E503     		.2byte	0x3e5
 7422 0bcf 6F000000 		.4byte	0x6f
 7423 0bd3 02       		.byte	0x2
 7424 0bd4 91       		.byte	0x91
 7425 0bd5 00       		.sleb128 0
 7426 0bd6 12       		.uleb128 0x12
 7427 0bd7 FA000000 		.4byte	.LASF26
 7428 0bdb 01       		.byte	0x1
 7429 0bdc E703     		.2byte	0x3e7
 7430 0bde 7A000000 		.4byte	0x7a
 7431 0be2 02       		.byte	0x2
 7432 0be3 91       		.byte	0x91
 7433 0be4 72       		.sleb128 -14
 7434 0be5 12       		.uleb128 0x12
 7435 0be6 6F050000 		.4byte	.LASF89
 7436 0bea 01       		.byte	0x1
 7437 0beb E803     		.2byte	0x3e8
 7438 0bed 7A000000 		.4byte	0x7a
 7439 0bf1 02       		.byte	0x2
 7440 0bf2 91       		.byte	0x91
 7441 0bf3 76       		.sleb128 -10
 7442 0bf4 12       		.uleb128 0x12
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 163


 7443 0bf5 39030000 		.4byte	.LASF90
 7444 0bf9 01       		.byte	0x1
 7445 0bfa E903     		.2byte	0x3e9
 7446 0bfc 7A000000 		.4byte	0x7a
 7447 0c00 02       		.byte	0x2
 7448 0c01 91       		.byte	0x91
 7449 0c02 74       		.sleb128 -12
 7450 0c03 12       		.uleb128 0x12
 7451 0c04 68030000 		.4byte	.LASF56
 7452 0c08 01       		.byte	0x1
 7453 0c09 EA03     		.2byte	0x3ea
 7454 0c0b 7A000000 		.4byte	0x7a
 7455 0c0f 02       		.byte	0x2
 7456 0c10 91       		.byte	0x91
 7457 0c11 70       		.sleb128 -16
 7458 0c12 00       		.byte	0
 7459 0c13 0F       		.uleb128 0xf
 7460 0c14 01       		.byte	0x1
 7461 0c15 1D050000 		.4byte	.LASF93
 7462 0c19 01       		.byte	0x1
 7463 0c1a 1B04     		.2byte	0x41b
 7464 0c1c 01       		.byte	0x1
 7465 0c1d 00000000 		.4byte	.LFB44
 7466 0c21 E8000000 		.4byte	.LFE44
 7467 0c25 88090000 		.4byte	.LLST44
 7468 0c29 01       		.byte	0x1
 7469 0c2a 790C0000 		.4byte	0xc79
 7470 0c2e 11       		.uleb128 0x11
 7471 0c2f 6D616300 		.ascii	"mac\000"
 7472 0c33 01       		.byte	0x1
 7473 0c34 1B04     		.2byte	0x41b
 7474 0c36 D9010000 		.4byte	0x1d9
 7475 0c3a 02       		.byte	0x2
 7476 0c3b 91       		.byte	0x91
 7477 0c3c 6C       		.sleb128 -20
 7478 0c3d 11       		.uleb128 0x11
 7479 0c3e 697000   		.ascii	"ip\000"
 7480 0c41 01       		.byte	0x1
 7481 0c42 1B04     		.2byte	0x41b
 7482 0c44 85000000 		.4byte	0x85
 7483 0c48 02       		.byte	0x2
 7484 0c49 91       		.byte	0x91
 7485 0c4a 68       		.sleb128 -24
 7486 0c4b 10       		.uleb128 0x10
 7487 0c4c 61030000 		.4byte	.LASF94
 7488 0c50 01       		.byte	0x1
 7489 0c51 1B04     		.2byte	0x41b
 7490 0c53 85000000 		.4byte	0x85
 7491 0c57 02       		.byte	0x2
 7492 0c58 91       		.byte	0x91
 7493 0c59 64       		.sleb128 -28
 7494 0c5a 10       		.uleb128 0x10
 7495 0c5b 21010000 		.4byte	.LASF95
 7496 0c5f 01       		.byte	0x1
 7497 0c60 1B04     		.2byte	0x41b
 7498 0c62 85000000 		.4byte	0x85
 7499 0c66 02       		.byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 164


 7500 0c67 91       		.byte	0x91
 7501 0c68 60       		.sleb128 -32
 7502 0c69 12       		.uleb128 0x12
 7503 0c6a CF000000 		.4byte	.LASF96
 7504 0c6e 01       		.byte	0x1
 7505 0c6f 2204     		.2byte	0x422
 7506 0c71 61000000 		.4byte	0x61
 7507 0c75 02       		.byte	0x2
 7508 0c76 91       		.byte	0x91
 7509 0c77 74       		.sleb128 -12
 7510 0c78 00       		.byte	0
 7511 0c79 0F       		.uleb128 0xf
 7512 0c7a 01       		.byte	0x1
 7513 0c7b 08010000 		.4byte	.LASF97
 7514 0c7f 01       		.byte	0x1
 7515 0c80 4704     		.2byte	0x447
 7516 0c82 01       		.byte	0x1
 7517 0c83 00000000 		.4byte	.LFB45
 7518 0c87 9C000000 		.4byte	.LFE45
 7519 0c8b C0090000 		.4byte	.LLST45
 7520 0c8f 01       		.byte	0x1
 7521 0c90 C10C0000 		.4byte	0xcc1
 7522 0c94 13       		.uleb128 0x13
 7523 0c95 697000   		.ascii	"ip\000"
 7524 0c98 01       		.byte	0x1
 7525 0c99 4904     		.2byte	0x449
 7526 0c9b 85000000 		.4byte	0x85
 7527 0c9f 02       		.byte	0x2
 7528 0ca0 91       		.byte	0x91
 7529 0ca1 74       		.sleb128 -12
 7530 0ca2 12       		.uleb128 0x12
 7531 0ca3 21010000 		.4byte	.LASF95
 7532 0ca7 01       		.byte	0x1
 7533 0ca8 4A04     		.2byte	0x44a
 7534 0caa 85000000 		.4byte	0x85
 7535 0cae 02       		.byte	0x2
 7536 0caf 91       		.byte	0x91
 7537 0cb0 6C       		.sleb128 -20
 7538 0cb1 13       		.uleb128 0x13
 7539 0cb2 73756200 		.ascii	"sub\000"
 7540 0cb6 01       		.byte	0x1
 7541 0cb7 4B04     		.2byte	0x44b
 7542 0cb9 85000000 		.4byte	0x85
 7543 0cbd 02       		.byte	0x2
 7544 0cbe 91       		.byte	0x91
 7545 0cbf 70       		.sleb128 -16
 7546 0cc0 00       		.byte	0
 7547 0cc1 14       		.uleb128 0x14
 7548 0cc2 01       		.byte	0x1
 7549 0cc3 23040000 		.4byte	.LASF98
 7550 0cc7 01       		.byte	0x1
 7551 0cc8 6A04     		.2byte	0x46a
 7552 0cca 01       		.byte	0x1
 7553 0ccb 85000000 		.4byte	0x85
 7554 0ccf 00000000 		.4byte	.LFB46
 7555 0cd3 3A010000 		.4byte	.LFE46
 7556 0cd7 F8090000 		.4byte	.LLST46
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 165


 7557 0cdb 01       		.byte	0x1
 7558 0cdc 3A0D0000 		.4byte	0xd3a
 7559 0ce0 10       		.uleb128 0x10
 7560 0ce1 80060000 		.4byte	.LASF99
 7561 0ce5 01       		.byte	0x1
 7562 0ce6 6A04     		.2byte	0x46a
 7563 0ce8 BD000000 		.4byte	0xbd
 7564 0cec 02       		.byte	0x2
 7565 0ced 91       		.byte	0x91
 7566 0cee 54       		.sleb128 -44
 7567 0cef 12       		.uleb128 0x12
 7568 0cf0 CF000000 		.4byte	.LASF96
 7569 0cf4 01       		.byte	0x1
 7570 0cf5 6F04     		.2byte	0x46f
 7571 0cf7 61000000 		.4byte	0x61
 7572 0cfb 02       		.byte	0x2
 7573 0cfc 91       		.byte	0x91
 7574 0cfd 6C       		.sleb128 -20
 7575 0cfe 12       		.uleb128 0x12
 7576 0cff 91010000 		.4byte	.LASF100
 7577 0d03 01       		.byte	0x1
 7578 0d04 7004     		.2byte	0x470
 7579 0d06 3A0D0000 		.4byte	0xd3a
 7580 0d0a 02       		.byte	0x2
 7581 0d0b 91       		.byte	0x91
 7582 0d0c 5C       		.sleb128 -36
 7583 0d0d 13       		.uleb128 0x13
 7584 0d0e 697000   		.ascii	"ip\000"
 7585 0d11 01       		.byte	0x1
 7586 0d12 7104     		.2byte	0x471
 7587 0d14 4A0D0000 		.4byte	0xd4a
 7588 0d18 02       		.byte	0x2
 7589 0d19 91       		.byte	0x91
 7590 0d1a 58       		.sleb128 -40
 7591 0d1b 12       		.uleb128 0x12
 7592 0d1c C4050000 		.4byte	.LASF101
 7593 0d20 01       		.byte	0x1
 7594 0d21 7204     		.2byte	0x472
 7595 0d23 61000000 		.4byte	0x61
 7596 0d27 02       		.byte	0x2
 7597 0d28 91       		.byte	0x91
 7598 0d29 68       		.sleb128 -24
 7599 0d2a 12       		.uleb128 0x12
 7600 0d2b F9010000 		.4byte	.LASF102
 7601 0d2f 01       		.byte	0x1
 7602 0d30 7304     		.2byte	0x473
 7603 0d32 61000000 		.4byte	0x61
 7604 0d36 02       		.byte	0x2
 7605 0d37 91       		.byte	0x91
 7606 0d38 64       		.sleb128 -28
 7607 0d39 00       		.byte	0
 7608 0d3a 16       		.uleb128 0x16
 7609 0d3b 9E000000 		.4byte	0x9e
 7610 0d3f 4A0D0000 		.4byte	0xd4a
 7611 0d43 17       		.uleb128 0x17
 7612 0d44 B0000000 		.4byte	0xb0
 7613 0d48 04       		.byte	0x4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 166


 7614 0d49 00       		.byte	0
 7615 0d4a 16       		.uleb128 0x16
 7616 0d4b 6F000000 		.4byte	0x6f
 7617 0d4f 5A0D0000 		.4byte	0xd5a
 7618 0d53 17       		.uleb128 0x17
 7619 0d54 B0000000 		.4byte	0xb0
 7620 0d58 03       		.byte	0x3
 7621 0d59 00       		.byte	0
 7622 0d5a 18       		.uleb128 0x18
 7623 0d5b 01       		.byte	0x1
 7624 0d5c 43000000 		.4byte	.LASF103
 7625 0d60 01       		.byte	0x1
 7626 0d61 9F04     		.2byte	0x49f
 7627 0d63 01       		.byte	0x1
 7628 0d64 A5000000 		.4byte	0xa5
 7629 0d68 00000000 		.4byte	.LFB47
 7630 0d6c 30020000 		.4byte	.LFE47
 7631 0d70 300A0000 		.4byte	.LLST47
 7632 0d74 01       		.byte	0x1
 7633 0d75 C50D0000 		.4byte	0xdc5
 7634 0d79 10       		.uleb128 0x10
 7635 0d7a 69020000 		.4byte	.LASF104
 7636 0d7e 01       		.byte	0x1
 7637 0d7f 9F04     		.2byte	0x49f
 7638 0d81 BD000000 		.4byte	0xbd
 7639 0d85 02       		.byte	0x2
 7640 0d86 91       		.byte	0x91
 7641 0d87 64       		.sleb128 -28
 7642 0d88 11       		.uleb128 0x11
 7643 0d89 6D616300 		.ascii	"mac\000"
 7644 0d8d 01       		.byte	0x1
 7645 0d8e 9F04     		.2byte	0x49f
 7646 0d90 D9010000 		.4byte	0x1d9
 7647 0d94 02       		.byte	0x2
 7648 0d95 91       		.byte	0x91
 7649 0d96 60       		.sleb128 -32
 7650 0d97 12       		.uleb128 0x12
 7651 0d98 91010000 		.4byte	.LASF100
 7652 0d9c 01       		.byte	0x1
 7653 0d9d A704     		.2byte	0x4a7
 7654 0d9f 61000000 		.4byte	0x61
 7655 0da3 02       		.byte	0x2
 7656 0da4 91       		.byte	0x91
 7657 0da5 74       		.sleb128 -12
 7658 0da6 12       		.uleb128 0x12
 7659 0da7 CF000000 		.4byte	.LASF96
 7660 0dab 01       		.byte	0x1
 7661 0dac A804     		.2byte	0x4a8
 7662 0dae 61000000 		.4byte	0x61
 7663 0db2 02       		.byte	0x2
 7664 0db3 91       		.byte	0x91
 7665 0db4 70       		.sleb128 -16
 7666 0db5 12       		.uleb128 0x12
 7667 0db6 3F080000 		.4byte	.LASF105
 7668 0dba 01       		.byte	0x1
 7669 0dbb A904     		.2byte	0x4a9
 7670 0dbd A5000000 		.4byte	0xa5
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 167


 7671 0dc1 02       		.byte	0x2
 7672 0dc2 91       		.byte	0x91
 7673 0dc3 6C       		.sleb128 -20
 7674 0dc4 00       		.byte	0
 7675 0dc5 15       		.uleb128 0x15
 7676 0dc6 01       		.byte	0x1
 7677 0dc7 DD040000 		.4byte	.LASF106
 7678 0dcb 01       		.byte	0x1
 7679 0dcc CC04     		.2byte	0x4cc
 7680 0dce 01       		.byte	0x1
 7681 0dcf 00000000 		.4byte	.LFB48
 7682 0dd3 D4000000 		.4byte	.LFE48
 7683 0dd7 680A0000 		.4byte	.LLST48
 7684 0ddb 01       		.byte	0x1
 7685 0ddc 1D0E0000 		.4byte	0xe1d
 7686 0de0 11       		.uleb128 0x11
 7687 0de1 6D616300 		.ascii	"mac\000"
 7688 0de5 01       		.byte	0x1
 7689 0de6 CC04     		.2byte	0x4cc
 7690 0de8 D9010000 		.4byte	0x1d9
 7691 0dec 02       		.byte	0x2
 7692 0ded 91       		.byte	0x91
 7693 0dee 6C       		.sleb128 -20
 7694 0def 10       		.uleb128 0x10
 7695 0df0 69020000 		.4byte	.LASF104
 7696 0df4 01       		.byte	0x1
 7697 0df5 CC04     		.2byte	0x4cc
 7698 0df7 B7000000 		.4byte	0xb7
 7699 0dfb 02       		.byte	0x2
 7700 0dfc 91       		.byte	0x91
 7701 0dfd 68       		.sleb128 -24
 7702 0dfe 12       		.uleb128 0x12
 7703 0dff 91010000 		.4byte	.LASF100
 7704 0e03 01       		.byte	0x1
 7705 0e04 CE04     		.2byte	0x4ce
 7706 0e06 61000000 		.4byte	0x61
 7707 0e0a 02       		.byte	0x2
 7708 0e0b 91       		.byte	0x91
 7709 0e0c 74       		.sleb128 -12
 7710 0e0d 12       		.uleb128 0x12
 7711 0e0e CF000000 		.4byte	.LASF96
 7712 0e12 01       		.byte	0x1
 7713 0e13 CF04     		.2byte	0x4cf
 7714 0e15 61000000 		.4byte	0x61
 7715 0e19 02       		.byte	0x2
 7716 0e1a 91       		.byte	0x91
 7717 0e1b 70       		.sleb128 -16
 7718 0e1c 00       		.byte	0
 7719 0e1d 0F       		.uleb128 0xf
 7720 0e1e 01       		.byte	0x1
 7721 0e1f F1040000 		.4byte	.LASF107
 7722 0e23 01       		.byte	0x1
 7723 0e24 E204     		.2byte	0x4e2
 7724 0e26 01       		.byte	0x1
 7725 0e27 00000000 		.4byte	.LFB49
 7726 0e2b DC000000 		.4byte	.LFE49
 7727 0e2f A00A0000 		.4byte	.LLST49
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 168


 7728 0e33 01       		.byte	0x1
 7729 0e34 A10E0000 		.4byte	0xea1
 7730 0e38 11       		.uleb128 0x11
 7731 0e39 697000   		.ascii	"ip\000"
 7732 0e3c 01       		.byte	0x1
 7733 0e3d E204     		.2byte	0x4e2
 7734 0e3f 85000000 		.4byte	0x85
 7735 0e43 02       		.byte	0x2
 7736 0e44 91       		.byte	0x91
 7737 0e45 5C       		.sleb128 -36
 7738 0e46 10       		.uleb128 0x10
 7739 0e47 80060000 		.4byte	.LASF99
 7740 0e4b 01       		.byte	0x1
 7741 0e4c E204     		.2byte	0x4e2
 7742 0e4e B7000000 		.4byte	0xb7
 7743 0e52 02       		.byte	0x2
 7744 0e53 91       		.byte	0x91
 7745 0e54 58       		.sleb128 -40
 7746 0e55 12       		.uleb128 0x12
 7747 0e56 FE040000 		.4byte	.LASF108
 7748 0e5a 01       		.byte	0x1
 7749 0e5b E404     		.2byte	0x4e4
 7750 0e5d D9010000 		.4byte	0x1d9
 7751 0e61 02       		.byte	0x2
 7752 0e62 91       		.byte	0x91
 7753 0e63 68       		.sleb128 -24
 7754 0e64 12       		.uleb128 0x12
 7755 0e65 CF000000 		.4byte	.LASF96
 7756 0e69 01       		.byte	0x1
 7757 0e6a E504     		.2byte	0x4e5
 7758 0e6c 61000000 		.4byte	0x61
 7759 0e70 02       		.byte	0x2
 7760 0e71 91       		.byte	0x91
 7761 0e72 74       		.sleb128 -12
 7762 0e73 12       		.uleb128 0x12
 7763 0e74 91010000 		.4byte	.LASF100
 7764 0e78 01       		.byte	0x1
 7765 0e79 E604     		.2byte	0x4e6
 7766 0e7b 61000000 		.4byte	0x61
 7767 0e7f 02       		.byte	0x2
 7768 0e80 91       		.byte	0x91
 7769 0e81 70       		.sleb128 -16
 7770 0e82 12       		.uleb128 0x12
 7771 0e83 5D070000 		.4byte	.LASF109
 7772 0e87 01       		.byte	0x1
 7773 0e88 E704     		.2byte	0x4e7
 7774 0e8a 61000000 		.4byte	0x61
 7775 0e8e 02       		.byte	0x2
 7776 0e8f 91       		.byte	0x91
 7777 0e90 6C       		.sleb128 -20
 7778 0e91 12       		.uleb128 0x12
 7779 0e92 C2020000 		.4byte	.LASF110
 7780 0e96 01       		.byte	0x1
 7781 0e97 E704     		.2byte	0x4e7
 7782 0e99 61000000 		.4byte	0x61
 7783 0e9d 02       		.byte	0x2
 7784 0e9e 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 169


 7785 0e9f 64       		.sleb128 -28
 7786 0ea0 00       		.byte	0
 7787 0ea1 14       		.uleb128 0x14
 7788 0ea2 01       		.byte	0x1
 7789 0ea3 A2070000 		.4byte	.LASF111
 7790 0ea7 01       		.byte	0x1
 7791 0ea8 0305     		.2byte	0x503
 7792 0eaa 01       		.byte	0x1
 7793 0eab 6F000000 		.4byte	0x6f
 7794 0eaf 00000000 		.4byte	.LFB50
 7795 0eb3 3A000000 		.4byte	.LFE50
 7796 0eb7 D80A0000 		.4byte	.LLST50
 7797 0ebb 01       		.byte	0x1
 7798 0ebc DD0E0000 		.4byte	0xedd
 7799 0ec0 11       		.uleb128 0x11
 7800 0ec1 697000   		.ascii	"ip\000"
 7801 0ec4 01       		.byte	0x1
 7802 0ec5 0305     		.2byte	0x503
 7803 0ec7 85000000 		.4byte	0x85
 7804 0ecb 02       		.byte	0x2
 7805 0ecc 91       		.byte	0x91
 7806 0ecd 6C       		.sleb128 -20
 7807 0ece 13       		.uleb128 0x13
 7808 0ecf 6F6B00   		.ascii	"ok\000"
 7809 0ed2 01       		.byte	0x1
 7810 0ed3 0505     		.2byte	0x505
 7811 0ed5 6F000000 		.4byte	0x6f
 7812 0ed9 02       		.byte	0x2
 7813 0eda 91       		.byte	0x91
 7814 0edb 77       		.sleb128 -9
 7815 0edc 00       		.byte	0
 7816 0edd 19       		.uleb128 0x19
 7817 0ede 01       		.byte	0x1
 7818 0edf DE020000 		.4byte	.LASF147
 7819 0ee3 01       		.byte	0x1
 7820 0ee4 1005     		.2byte	0x510
 7821 0ee6 01       		.byte	0x1
 7822 0ee7 85000000 		.4byte	0x85
 7823 0eeb 00000000 		.4byte	.LFB51
 7824 0eef 10000000 		.4byte	.LFE51
 7825 0ef3 100B0000 		.4byte	.LLST51
 7826 0ef7 01       		.byte	0x1
 7827 0ef8 0F       		.uleb128 0xf
 7828 0ef9 01       		.byte	0x1
 7829 0efa D2040000 		.4byte	.LASF112
 7830 0efe 01       		.byte	0x1
 7831 0eff 1605     		.2byte	0x516
 7832 0f01 01       		.byte	0x1
 7833 0f02 00000000 		.4byte	.LFB52
 7834 0f06 16000000 		.4byte	.LFE52
 7835 0f0a 3C0B0000 		.4byte	.LLST52
 7836 0f0e 01       		.byte	0x1
 7837 0f0f 230F0000 		.4byte	0xf23
 7838 0f13 11       		.uleb128 0x11
 7839 0f14 6D616300 		.ascii	"mac\000"
 7840 0f18 01       		.byte	0x1
 7841 0f19 1605     		.2byte	0x516
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 170


 7842 0f1b D9010000 		.4byte	0x1d9
 7843 0f1f 02       		.byte	0x2
 7844 0f20 91       		.byte	0x91
 7845 0f21 74       		.sleb128 -12
 7846 0f22 00       		.byte	0
 7847 0f23 0F       		.uleb128 0xf
 7848 0f24 01       		.byte	0x1
 7849 0f25 CE070000 		.4byte	.LASF113
 7850 0f29 01       		.byte	0x1
 7851 0f2a 1C05     		.2byte	0x51c
 7852 0f2c 01       		.byte	0x1
 7853 0f2d 00000000 		.4byte	.LFB53
 7854 0f31 16000000 		.4byte	.LFE53
 7855 0f35 740B0000 		.4byte	.LLST53
 7856 0f39 01       		.byte	0x1
 7857 0f3a 4E0F0000 		.4byte	0xf4e
 7858 0f3e 11       		.uleb128 0x11
 7859 0f3f 6D616300 		.ascii	"mac\000"
 7860 0f43 01       		.byte	0x1
 7861 0f44 1C05     		.2byte	0x51c
 7862 0f46 D9010000 		.4byte	0x1d9
 7863 0f4a 02       		.byte	0x2
 7864 0f4b 91       		.byte	0x91
 7865 0f4c 74       		.sleb128 -12
 7866 0f4d 00       		.byte	0
 7867 0f4e 14       		.uleb128 0x14
 7868 0f4f 01       		.byte	0x1
 7869 0f50 A8030000 		.4byte	.LASF114
 7870 0f54 01       		.byte	0x1
 7871 0f55 2605     		.2byte	0x526
 7872 0f57 01       		.byte	0x1
 7873 0f58 6F000000 		.4byte	0x6f
 7874 0f5c 00000000 		.4byte	.LFB54
 7875 0f60 70010000 		.4byte	.LFE54
 7876 0f64 AC0B0000 		.4byte	.LLST54
 7877 0f68 01       		.byte	0x1
 7878 0f69 B90F0000 		.4byte	0xfb9
 7879 0f6d 10       		.uleb128 0x10
 7880 0f6e FF000000 		.4byte	.LASF17
 7881 0f72 01       		.byte	0x1
 7882 0f73 2605     		.2byte	0x526
 7883 0f75 6F000000 		.4byte	0x6f
 7884 0f79 02       		.byte	0x2
 7885 0f7a 91       		.byte	0x91
 7886 0f7b 6F       		.sleb128 -17
 7887 0f7c 10       		.uleb128 0x10
 7888 0f7d BD020000 		.4byte	.LASF68
 7889 0f81 01       		.byte	0x1
 7890 0f82 2605     		.2byte	0x526
 7891 0f84 7A000000 		.4byte	0x7a
 7892 0f88 02       		.byte	0x2
 7893 0f89 91       		.byte	0x91
 7894 0f8a 6C       		.sleb128 -20
 7895 0f8b 10       		.uleb128 0x10
 7896 0f8c D9070000 		.4byte	.LASF92
 7897 0f90 01       		.byte	0x1
 7898 0f91 2605     		.2byte	0x526
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 171


 7899 0f93 6F000000 		.4byte	0x6f
 7900 0f97 02       		.byte	0x2
 7901 0f98 91       		.byte	0x91
 7902 0f99 6E       		.sleb128 -18
 7903 0f9a 12       		.uleb128 0x12
 7904 0f9b 57000000 		.4byte	.LASF55
 7905 0f9f 01       		.byte	0x1
 7906 0fa0 2805     		.2byte	0x528
 7907 0fa2 6F000000 		.4byte	0x6f
 7908 0fa6 02       		.byte	0x2
 7909 0fa7 91       		.byte	0x91
 7910 0fa8 77       		.sleb128 -9
 7911 0fa9 12       		.uleb128 0x12
 7912 0faa CF000000 		.4byte	.LASF96
 7913 0fae 01       		.byte	0x1
 7914 0faf 2905     		.2byte	0x529
 7915 0fb1 61000000 		.4byte	0x61
 7916 0fb5 02       		.byte	0x2
 7917 0fb6 91       		.byte	0x91
 7918 0fb7 70       		.sleb128 -16
 7919 0fb8 00       		.byte	0
 7920 0fb9 0F       		.uleb128 0xf
 7921 0fba 01       		.byte	0x1
 7922 0fbb C2040000 		.4byte	.LASF115
 7923 0fbf 01       		.byte	0x1
 7924 0fc0 5A05     		.2byte	0x55a
 7925 0fc2 01       		.byte	0x1
 7926 0fc3 00000000 		.4byte	.LFB55
 7927 0fc7 50000000 		.4byte	.LFE55
 7928 0fcb E40B0000 		.4byte	.LLST55
 7929 0fcf 01       		.byte	0x1
 7930 0fd0 E40F0000 		.4byte	0xfe4
 7931 0fd4 10       		.uleb128 0x10
 7932 0fd5 57000000 		.4byte	.LASF55
 7933 0fd9 01       		.byte	0x1
 7934 0fda 5A05     		.2byte	0x55a
 7935 0fdc 6F000000 		.4byte	0x6f
 7936 0fe0 02       		.byte	0x2
 7937 0fe1 91       		.byte	0x91
 7938 0fe2 77       		.sleb128 -9
 7939 0fe3 00       		.byte	0
 7940 0fe4 14       		.uleb128 0x14
 7941 0fe5 01       		.byte	0x1
 7942 0fe6 94060000 		.4byte	.LASF116
 7943 0fea 01       		.byte	0x1
 7944 0feb 6C05     		.2byte	0x56c
 7945 0fed 01       		.byte	0x1
 7946 0fee 6F000000 		.4byte	0x6f
 7947 0ff2 00000000 		.4byte	.LFB56
 7948 0ff6 4C000000 		.4byte	.LFE56
 7949 0ffa 1C0C0000 		.4byte	.LLST56
 7950 0ffe 01       		.byte	0x1
 7951 0fff 22100000 		.4byte	0x1022
 7952 1003 10       		.uleb128 0x10
 7953 1004 57000000 		.4byte	.LASF55
 7954 1008 01       		.byte	0x1
 7955 1009 6C05     		.2byte	0x56c
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 172


 7956 100b 6F000000 		.4byte	0x6f
 7957 100f 02       		.byte	0x2
 7958 1010 91       		.byte	0x91
 7959 1011 67       		.sleb128 -25
 7960 1012 12       		.uleb128 0x12
 7961 1013 C7070000 		.4byte	.LASF66
 7962 1017 01       		.byte	0x1
 7963 1018 6E05     		.2byte	0x56e
 7964 101a 6F000000 		.4byte	0x6f
 7965 101e 02       		.byte	0x2
 7966 101f 91       		.byte	0x91
 7967 1020 6F       		.sleb128 -17
 7968 1021 00       		.byte	0
 7969 1022 14       		.uleb128 0x14
 7970 1023 01       		.byte	0x1
 7971 1024 BE030000 		.4byte	.LASF117
 7972 1028 01       		.byte	0x1
 7973 1029 7A05     		.2byte	0x57a
 7974 102b 01       		.byte	0x1
 7975 102c 6F000000 		.4byte	0x6f
 7976 1030 00000000 		.4byte	.LFB57
 7977 1034 44000000 		.4byte	.LFE57
 7978 1038 540C0000 		.4byte	.LLST57
 7979 103c 01       		.byte	0x1
 7980 103d 60100000 		.4byte	0x1060
 7981 1041 10       		.uleb128 0x10
 7982 1042 57000000 		.4byte	.LASF55
 7983 1046 01       		.byte	0x1
 7984 1047 7A05     		.2byte	0x57a
 7985 1049 6F000000 		.4byte	0x6f
 7986 104d 02       		.byte	0x2
 7987 104e 91       		.byte	0x91
 7988 104f 67       		.sleb128 -25
 7989 1050 12       		.uleb128 0x12
 7990 1051 3F080000 		.4byte	.LASF105
 7991 1055 01       		.byte	0x1
 7992 1056 7C05     		.2byte	0x57c
 7993 1058 6F000000 		.4byte	0x6f
 7994 105c 02       		.byte	0x2
 7995 105d 91       		.byte	0x91
 7996 105e 6F       		.sleb128 -17
 7997 105f 00       		.byte	0
 7998 1060 0F       		.uleb128 0xf
 7999 1061 01       		.byte	0x1
 8000 1062 12010000 		.4byte	.LASF118
 8001 1066 01       		.byte	0x1
 8002 1067 8A05     		.2byte	0x58a
 8003 1069 01       		.byte	0x1
 8004 106a 00000000 		.4byte	.LFB58
 8005 106e 8C000000 		.4byte	.LFE58
 8006 1072 8C0C0000 		.4byte	.LLST58
 8007 1076 01       		.byte	0x1
 8008 1077 99100000 		.4byte	0x1099
 8009 107b 10       		.uleb128 0x10
 8010 107c 57000000 		.4byte	.LASF55
 8011 1080 01       		.byte	0x1
 8012 1081 8A05     		.2byte	0x58a
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 173


 8013 1083 6F000000 		.4byte	0x6f
 8014 1087 02       		.byte	0x2
 8015 1088 91       		.byte	0x91
 8016 1089 67       		.sleb128 -25
 8017 108a 13       		.uleb128 0x13
 8018 108b 697200   		.ascii	"ir\000"
 8019 108e 01       		.byte	0x1
 8020 108f 8C05     		.2byte	0x58c
 8021 1091 6F000000 		.4byte	0x6f
 8022 1095 02       		.byte	0x2
 8023 1096 91       		.byte	0x91
 8024 1097 6F       		.sleb128 -17
 8025 1098 00       		.byte	0
 8026 1099 0F       		.uleb128 0xf
 8027 109a 01       		.byte	0x1
 8028 109b 23070000 		.4byte	.LASF119
 8029 109f 01       		.byte	0x1
 8030 10a0 A705     		.2byte	0x5a7
 8031 10a2 01       		.byte	0x1
 8032 10a3 00000000 		.4byte	.LFB59
 8033 10a7 84000000 		.4byte	.LFE59
 8034 10ab C40C0000 		.4byte	.LLST59
 8035 10af 01       		.byte	0x1
 8036 10b0 D2100000 		.4byte	0x10d2
 8037 10b4 10       		.uleb128 0x10
 8038 10b5 57000000 		.4byte	.LASF55
 8039 10b9 01       		.byte	0x1
 8040 10ba A705     		.2byte	0x5a7
 8041 10bc 6F000000 		.4byte	0x6f
 8042 10c0 02       		.byte	0x2
 8043 10c1 91       		.byte	0x91
 8044 10c2 67       		.sleb128 -25
 8045 10c3 13       		.uleb128 0x13
 8046 10c4 697200   		.ascii	"ir\000"
 8047 10c7 01       		.byte	0x1
 8048 10c8 A905     		.2byte	0x5a9
 8049 10ca 6F000000 		.4byte	0x6f
 8050 10ce 02       		.byte	0x2
 8051 10cf 91       		.byte	0x91
 8052 10d0 6F       		.sleb128 -17
 8053 10d1 00       		.byte	0
 8054 10d2 14       		.uleb128 0x14
 8055 10d3 01       		.byte	0x1
 8056 10d4 F1030000 		.4byte	.LASF120
 8057 10d8 01       		.byte	0x1
 8058 10d9 BE05     		.2byte	0x5be
 8059 10db 01       		.byte	0x1
 8060 10dc 7A000000 		.4byte	0x7a
 8061 10e0 00000000 		.4byte	.LFB60
 8062 10e4 20000000 		.4byte	.LFE60
 8063 10e8 FC0C0000 		.4byte	.LLST60
 8064 10ec 01       		.byte	0x1
 8065 10ed 01110000 		.4byte	0x1101
 8066 10f1 10       		.uleb128 0x10
 8067 10f2 57000000 		.4byte	.LASF55
 8068 10f6 01       		.byte	0x1
 8069 10f7 BE05     		.2byte	0x5be
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 174


 8070 10f9 6F000000 		.4byte	0x6f
 8071 10fd 02       		.byte	0x2
 8072 10fe 91       		.byte	0x91
 8073 10ff 77       		.sleb128 -9
 8074 1100 00       		.byte	0
 8075 1101 14       		.uleb128 0x14
 8076 1102 01       		.byte	0x1
 8077 1103 AA040000 		.4byte	.LASF121
 8078 1107 01       		.byte	0x1
 8079 1108 C805     		.2byte	0x5c8
 8080 110a 01       		.byte	0x1
 8081 110b 6F000000 		.4byte	0x6f
 8082 110f 00000000 		.4byte	.LFB61
 8083 1113 24000000 		.4byte	.LFE61
 8084 1117 340D0000 		.4byte	.LLST61
 8085 111b 01       		.byte	0x1
 8086 111c 30110000 		.4byte	0x1130
 8087 1120 10       		.uleb128 0x10
 8088 1121 BD020000 		.4byte	.LASF68
 8089 1125 01       		.byte	0x1
 8090 1126 C805     		.2byte	0x5c8
 8091 1128 7A000000 		.4byte	0x7a
 8092 112c 02       		.byte	0x2
 8093 112d 91       		.byte	0x91
 8094 112e 76       		.sleb128 -10
 8095 112f 00       		.byte	0
 8096 1130 0F       		.uleb128 0xf
 8097 1131 01       		.byte	0x1
 8098 1132 84000000 		.4byte	.LASF122
 8099 1136 01       		.byte	0x1
 8100 1137 CE05     		.2byte	0x5ce
 8101 1139 01       		.byte	0x1
 8102 113a 00000000 		.4byte	.LFB62
 8103 113e 26000000 		.4byte	.LFE62
 8104 1142 6C0D0000 		.4byte	.LLST62
 8105 1146 01       		.byte	0x1
 8106 1147 5B110000 		.4byte	0x115b
 8107 114b 10       		.uleb128 0x10
 8108 114c 57000000 		.4byte	.LASF55
 8109 1150 01       		.byte	0x1
 8110 1151 CE05     		.2byte	0x5ce
 8111 1153 6F000000 		.4byte	0x6f
 8112 1157 02       		.byte	0x2
 8113 1158 91       		.byte	0x91
 8114 1159 77       		.sleb128 -9
 8115 115a 00       		.byte	0
 8116 115b 0F       		.uleb128 0xf
 8117 115c 01       		.byte	0x1
 8118 115d EA060000 		.4byte	.LASF123
 8119 1161 01       		.byte	0x1
 8120 1162 DB05     		.2byte	0x5db
 8121 1164 01       		.byte	0x1
 8122 1165 00000000 		.4byte	.LFB63
 8123 1169 72000000 		.4byte	.LFE63
 8124 116d A40D0000 		.4byte	.LLST63
 8125 1171 01       		.byte	0x1
 8126 1172 95110000 		.4byte	0x1195
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 175


 8127 1176 10       		.uleb128 0x10
 8128 1177 57000000 		.4byte	.LASF55
 8129 117b 01       		.byte	0x1
 8130 117c DB05     		.2byte	0x5db
 8131 117e 6F000000 		.4byte	0x6f
 8132 1182 02       		.byte	0x2
 8133 1183 91       		.byte	0x91
 8134 1184 67       		.sleb128 -25
 8135 1185 12       		.uleb128 0x12
 8136 1186 C7070000 		.4byte	.LASF66
 8137 118a 01       		.byte	0x1
 8138 118b DD05     		.2byte	0x5dd
 8139 118d 6F000000 		.4byte	0x6f
 8140 1191 02       		.byte	0x2
 8141 1192 91       		.byte	0x91
 8142 1193 6F       		.sleb128 -17
 8143 1194 00       		.byte	0
 8144 1195 0F       		.uleb128 0xf
 8145 1196 01       		.byte	0x1
 8146 1197 2F040000 		.4byte	.LASF124
 8147 119b 01       		.byte	0x1
 8148 119c EF05     		.2byte	0x5ef
 8149 119e 01       		.byte	0x1
 8150 119f 00000000 		.4byte	.LFB64
 8151 11a3 C0000000 		.4byte	.LFE64
 8152 11a7 DC0D0000 		.4byte	.LLST64
 8153 11ab 01       		.byte	0x1
 8154 11ac FA110000 		.4byte	0x11fa
 8155 11b0 10       		.uleb128 0x10
 8156 11b1 57000000 		.4byte	.LASF55
 8157 11b5 01       		.byte	0x1
 8158 11b6 EF05     		.2byte	0x5ef
 8159 11b8 6F000000 		.4byte	0x6f
 8160 11bc 02       		.byte	0x2
 8161 11bd 91       		.byte	0x91
 8162 11be 67       		.sleb128 -25
 8163 11bf 11       		.uleb128 0x11
 8164 11c0 697000   		.ascii	"ip\000"
 8165 11c3 01       		.byte	0x1
 8166 11c4 EF05     		.2byte	0x5ef
 8167 11c6 85000000 		.4byte	0x85
 8168 11ca 02       		.byte	0x2
 8169 11cb 91       		.byte	0x91
 8170 11cc 60       		.sleb128 -32
 8171 11cd 10       		.uleb128 0x10
 8172 11ce BD020000 		.4byte	.LASF68
 8173 11d2 01       		.byte	0x1
 8174 11d3 EF05     		.2byte	0x5ef
 8175 11d5 7A000000 		.4byte	0x7a
 8176 11d9 02       		.byte	0x2
 8177 11da 91       		.byte	0x91
 8178 11db 64       		.sleb128 -28
 8179 11dc 12       		.uleb128 0x12
 8180 11dd 59030000 		.4byte	.LASF81
 8181 11e1 01       		.byte	0x1
 8182 11e2 F105     		.2byte	0x5f1
 8183 11e4 85000000 		.4byte	0x85
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 176


 8184 11e8 02       		.byte	0x2
 8185 11e9 91       		.byte	0x91
 8186 11ea 6C       		.sleb128 -20
 8187 11eb 13       		.uleb128 0x13
 8188 11ec 697200   		.ascii	"ir\000"
 8189 11ef 01       		.byte	0x1
 8190 11f0 F205     		.2byte	0x5f2
 8191 11f2 6F000000 		.4byte	0x6f
 8192 11f6 02       		.byte	0x2
 8193 11f7 91       		.byte	0x91
 8194 11f8 6B       		.sleb128 -21
 8195 11f9 00       		.byte	0
 8196 11fa 14       		.uleb128 0x14
 8197 11fb 01       		.byte	0x1
 8198 11fc 80030000 		.4byte	.LASF125
 8199 1200 01       		.byte	0x1
 8200 1201 0D06     		.2byte	0x60d
 8201 1203 01       		.byte	0x1
 8202 1204 6F000000 		.4byte	0x6f
 8203 1208 00000000 		.4byte	.LFB65
 8204 120c 20000000 		.4byte	.LFE65
 8205 1210 140E0000 		.4byte	.LLST65
 8206 1214 01       		.byte	0x1
 8207 1215 29120000 		.4byte	0x1229
 8208 1219 10       		.uleb128 0x10
 8209 121a 57000000 		.4byte	.LASF55
 8210 121e 01       		.byte	0x1
 8211 121f 0D06     		.2byte	0x60d
 8212 1221 6F000000 		.4byte	0x6f
 8213 1225 02       		.byte	0x2
 8214 1226 91       		.byte	0x91
 8215 1227 77       		.sleb128 -9
 8216 1228 00       		.byte	0
 8217 1229 0F       		.uleb128 0xf
 8218 122a 01       		.byte	0x1
 8219 122b BD000000 		.4byte	.LASF126
 8220 122f 01       		.byte	0x1
 8221 1230 1106     		.2byte	0x611
 8222 1232 01       		.byte	0x1
 8223 1233 00000000 		.4byte	.LFB66
 8224 1237 1E000000 		.4byte	.LFE66
 8225 123b 4C0E0000 		.4byte	.LLST66
 8226 123f 01       		.byte	0x1
 8227 1240 54120000 		.4byte	0x1254
 8228 1244 10       		.uleb128 0x10
 8229 1245 57000000 		.4byte	.LASF55
 8230 1249 01       		.byte	0x1
 8231 124a 1106     		.2byte	0x611
 8232 124c 6F000000 		.4byte	0x6f
 8233 1250 02       		.byte	0x2
 8234 1251 91       		.byte	0x91
 8235 1252 77       		.sleb128 -9
 8236 1253 00       		.byte	0
 8237 1254 14       		.uleb128 0x14
 8238 1255 01       		.byte	0x1
 8239 1256 31020000 		.4byte	.LASF127
 8240 125a 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 177


 8241 125b 1706     		.2byte	0x617
 8242 125d 01       		.byte	0x1
 8243 125e 7A000000 		.4byte	0x7a
 8244 1262 00000000 		.4byte	.LFB67
 8245 1266 F4000000 		.4byte	.LFE67
 8246 126a 840E0000 		.4byte	.LLST67
 8247 126e 01       		.byte	0x1
 8248 126f CE120000 		.4byte	0x12ce
 8249 1273 10       		.uleb128 0x10
 8250 1274 57000000 		.4byte	.LASF55
 8251 1278 01       		.byte	0x1
 8252 1279 1706     		.2byte	0x617
 8253 127b 6F000000 		.4byte	0x6f
 8254 127f 02       		.byte	0x2
 8255 1280 91       		.byte	0x91
 8256 1281 67       		.sleb128 -25
 8257 1282 10       		.uleb128 0x10
 8258 1283 46070000 		.4byte	.LASF88
 8259 1287 01       		.byte	0x1
 8260 1288 1706     		.2byte	0x617
 8261 128a D9010000 		.4byte	0x1d9
 8262 128e 02       		.byte	0x2
 8263 128f 91       		.byte	0x91
 8264 1290 60       		.sleb128 -32
 8265 1291 11       		.uleb128 0x11
 8266 1292 6C656E00 		.ascii	"len\000"
 8267 1296 01       		.byte	0x1
 8268 1297 1706     		.2byte	0x617
 8269 1299 7A000000 		.4byte	0x7a
 8270 129d 02       		.byte	0x2
 8271 129e 91       		.byte	0x91
 8272 129f 64       		.sleb128 -28
 8273 12a0 12       		.uleb128 0x12
 8274 12a1 50000000 		.4byte	.LASF128
 8275 12a5 01       		.byte	0x1
 8276 12a6 1906     		.2byte	0x619
 8277 12a8 7A000000 		.4byte	0x7a
 8278 12ac 02       		.byte	0x2
 8279 12ad 91       		.byte	0x91
 8280 12ae 6E       		.sleb128 -18
 8281 12af 12       		.uleb128 0x12
 8282 12b0 9E030000 		.4byte	.LASF129
 8283 12b4 01       		.byte	0x1
 8284 12b5 1A06     		.2byte	0x61a
 8285 12b7 7A000000 		.4byte	0x7a
 8286 12bb 02       		.byte	0x2
 8287 12bc 91       		.byte	0x91
 8288 12bd 6C       		.sleb128 -20
 8289 12be 12       		.uleb128 0x12
 8290 12bf C7070000 		.4byte	.LASF66
 8291 12c3 01       		.byte	0x1
 8292 12c4 1B06     		.2byte	0x61b
 8293 12c6 6F000000 		.4byte	0x6f
 8294 12ca 02       		.byte	0x2
 8295 12cb 91       		.byte	0x91
 8296 12cc 6B       		.sleb128 -21
 8297 12cd 00       		.byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 178


 8298 12ce 14       		.uleb128 0x14
 8299 12cf 01       		.byte	0x1
 8300 12d0 E1010000 		.4byte	.LASF130
 8301 12d4 01       		.byte	0x1
 8302 12d5 4106     		.2byte	0x641
 8303 12d7 01       		.byte	0x1
 8304 12d8 7A000000 		.4byte	0x7a
 8305 12dc 00000000 		.4byte	.LFB68
 8306 12e0 86000000 		.4byte	.LFE68
 8307 12e4 BC0E0000 		.4byte	.LLST68
 8308 12e8 01       		.byte	0x1
 8309 12e9 2A130000 		.4byte	0x132a
 8310 12ed 10       		.uleb128 0x10
 8311 12ee 57000000 		.4byte	.LASF55
 8312 12f2 01       		.byte	0x1
 8313 12f3 4106     		.2byte	0x641
 8314 12f5 6F000000 		.4byte	0x6f
 8315 12f9 02       		.byte	0x2
 8316 12fa 91       		.byte	0x91
 8317 12fb 67       		.sleb128 -25
 8318 12fc 10       		.uleb128 0x10
 8319 12fd 46070000 		.4byte	.LASF88
 8320 1301 01       		.byte	0x1
 8321 1302 4106     		.2byte	0x641
 8322 1304 D9010000 		.4byte	0x1d9
 8323 1308 02       		.byte	0x2
 8324 1309 91       		.byte	0x91
 8325 130a 60       		.sleb128 -32
 8326 130b 10       		.uleb128 0x10
 8327 130c CA060000 		.4byte	.LASF27
 8328 1310 01       		.byte	0x1
 8329 1311 4106     		.2byte	0x641
 8330 1313 7A000000 		.4byte	0x7a
 8331 1317 02       		.byte	0x2
 8332 1318 91       		.byte	0x91
 8333 1319 64       		.sleb128 -28
 8334 131a 12       		.uleb128 0x12
 8335 131b B7030000 		.4byte	.LASF131
 8336 131f 01       		.byte	0x1
 8337 1320 4306     		.2byte	0x643
 8338 1322 7A000000 		.4byte	0x7a
 8339 1326 02       		.byte	0x2
 8340 1327 91       		.byte	0x91
 8341 1328 6E       		.sleb128 -18
 8342 1329 00       		.byte	0
 8343 132a 0F       		.uleb128 0xf
 8344 132b 01       		.byte	0x1
 8345 132c 29010000 		.4byte	.LASF132
 8346 1330 01       		.byte	0x1
 8347 1331 6006     		.2byte	0x660
 8348 1333 01       		.byte	0x1
 8349 1334 00000000 		.4byte	.LFB69
 8350 1338 30000000 		.4byte	.LFE69
 8351 133c F40E0000 		.4byte	.LLST69
 8352 1340 01       		.byte	0x1
 8353 1341 64130000 		.4byte	0x1364
 8354 1345 10       		.uleb128 0x10
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 179


 8355 1346 57000000 		.4byte	.LASF55
 8356 134a 01       		.byte	0x1
 8357 134b 6006     		.2byte	0x660
 8358 134d 6F000000 		.4byte	0x6f
 8359 1351 02       		.byte	0x2
 8360 1352 91       		.byte	0x91
 8361 1353 77       		.sleb128 -9
 8362 1354 11       		.uleb128 0x11
 8363 1355 73747200 		.ascii	"str\000"
 8364 1359 01       		.byte	0x1
 8365 135a 6006     		.2byte	0x660
 8366 135c BD000000 		.4byte	0xbd
 8367 1360 02       		.byte	0x2
 8368 1361 91       		.byte	0x91
 8369 1362 70       		.sleb128 -16
 8370 1363 00       		.byte	0
 8371 1364 14       		.uleb128 0x14
 8372 1365 01       		.byte	0x1
 8373 1366 D4030000 		.4byte	.LASF133
 8374 136a 01       		.byte	0x1
 8375 136b 6A06     		.2byte	0x66a
 8376 136d 01       		.byte	0x1
 8377 136e 6F000000 		.4byte	0x6f
 8378 1372 00000000 		.4byte	.LFB70
 8379 1376 24000000 		.4byte	.LFE70
 8380 137a 2C0F0000 		.4byte	.LLST70
 8381 137e 01       		.byte	0x1
 8382 137f 93130000 		.4byte	0x1393
 8383 1383 10       		.uleb128 0x10
 8384 1384 BD020000 		.4byte	.LASF68
 8385 1388 01       		.byte	0x1
 8386 1389 6A06     		.2byte	0x66a
 8387 138b 7A000000 		.4byte	0x7a
 8388 138f 02       		.byte	0x2
 8389 1390 91       		.byte	0x91
 8390 1391 76       		.sleb128 -10
 8391 1392 00       		.byte	0
 8392 1393 14       		.uleb128 0x14
 8393 1394 01       		.byte	0x1
 8394 1395 B6070000 		.4byte	.LASF134
 8395 1399 01       		.byte	0x1
 8396 139a 7006     		.2byte	0x670
 8397 139c 01       		.byte	0x1
 8398 139d 7A000000 		.4byte	0x7a
 8399 13a1 00000000 		.4byte	.LFB71
 8400 13a5 BC000000 		.4byte	.LFE71
 8401 13a9 640F0000 		.4byte	.LLST71
 8402 13ad 01       		.byte	0x1
 8403 13ae 0C140000 		.4byte	0x140c
 8404 13b2 10       		.uleb128 0x10
 8405 13b3 57000000 		.4byte	.LASF55
 8406 13b7 01       		.byte	0x1
 8407 13b8 7006     		.2byte	0x670
 8408 13ba 6F000000 		.4byte	0x6f
 8409 13be 02       		.byte	0x2
 8410 13bf 91       		.byte	0x91
 8411 13c0 6F       		.sleb128 -17
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 180


 8412 13c1 11       		.uleb128 0x11
 8413 13c2 697000   		.ascii	"ip\000"
 8414 13c5 01       		.byte	0x1
 8415 13c6 7006     		.2byte	0x670
 8416 13c8 85000000 		.4byte	0x85
 8417 13cc 02       		.byte	0x2
 8418 13cd 91       		.byte	0x91
 8419 13ce 68       		.sleb128 -24
 8420 13cf 10       		.uleb128 0x10
 8421 13d0 BD020000 		.4byte	.LASF68
 8422 13d4 01       		.byte	0x1
 8423 13d5 7006     		.2byte	0x670
 8424 13d7 7A000000 		.4byte	0x7a
 8425 13db 02       		.byte	0x2
 8426 13dc 91       		.byte	0x91
 8427 13dd 6C       		.sleb128 -20
 8428 13de 10       		.uleb128 0x10
 8429 13df 46070000 		.4byte	.LASF88
 8430 13e3 01       		.byte	0x1
 8431 13e4 7006     		.2byte	0x670
 8432 13e6 D9010000 		.4byte	0x1d9
 8433 13ea 02       		.byte	0x2
 8434 13eb 91       		.byte	0x91
 8435 13ec 64       		.sleb128 -28
 8436 13ed 10       		.uleb128 0x10
 8437 13ee CA060000 		.4byte	.LASF27
 8438 13f2 01       		.byte	0x1
 8439 13f3 7006     		.2byte	0x670
 8440 13f5 7A000000 		.4byte	0x7a
 8441 13f9 02       		.byte	0x2
 8442 13fa 91       		.byte	0x91
 8443 13fb 00       		.sleb128 0
 8444 13fc 12       		.uleb128 0x12
 8445 13fd 50000000 		.4byte	.LASF128
 8446 1401 01       		.byte	0x1
 8447 1402 7206     		.2byte	0x672
 8448 1404 7A000000 		.4byte	0x7a
 8449 1408 02       		.byte	0x2
 8450 1409 91       		.byte	0x91
 8451 140a 76       		.sleb128 -10
 8452 140b 00       		.byte	0
 8453 140c 14       		.uleb128 0x14
 8454 140d 01       		.byte	0x1
 8455 140e 75000000 		.4byte	.LASF135
 8456 1412 01       		.byte	0x1
 8457 1413 9D06     		.2byte	0x69d
 8458 1415 01       		.byte	0x1
 8459 1416 7A000000 		.4byte	0x7a
 8460 141a 00000000 		.4byte	.LFB72
 8461 141e 54010000 		.4byte	.LFE72
 8462 1422 9C0F0000 		.4byte	.LLST72
 8463 1426 01       		.byte	0x1
 8464 1427 A3140000 		.4byte	0x14a3
 8465 142b 10       		.uleb128 0x10
 8466 142c 57000000 		.4byte	.LASF55
 8467 1430 01       		.byte	0x1
 8468 1431 9D06     		.2byte	0x69d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 181


 8469 1433 6F000000 		.4byte	0x6f
 8470 1437 02       		.byte	0x2
 8471 1438 91       		.byte	0x91
 8472 1439 5F       		.sleb128 -33
 8473 143a 11       		.uleb128 0x11
 8474 143b 697000   		.ascii	"ip\000"
 8475 143e 01       		.byte	0x1
 8476 143f 9D06     		.2byte	0x69d
 8477 1441 A3140000 		.4byte	0x14a3
 8478 1445 02       		.byte	0x2
 8479 1446 91       		.byte	0x91
 8480 1447 58       		.sleb128 -40
 8481 1448 10       		.uleb128 0x10
 8482 1449 BD020000 		.4byte	.LASF68
 8483 144d 01       		.byte	0x1
 8484 144e 9D06     		.2byte	0x69d
 8485 1450 A9140000 		.4byte	0x14a9
 8486 1454 02       		.byte	0x2
 8487 1455 91       		.byte	0x91
 8488 1456 54       		.sleb128 -44
 8489 1457 10       		.uleb128 0x10
 8490 1458 46070000 		.4byte	.LASF88
 8491 145c 01       		.byte	0x1
 8492 145d 9D06     		.2byte	0x69d
 8493 145f D9010000 		.4byte	0x1d9
 8494 1463 02       		.byte	0x2
 8495 1464 91       		.byte	0x91
 8496 1465 50       		.sleb128 -48
 8497 1466 10       		.uleb128 0x10
 8498 1467 CA060000 		.4byte	.LASF27
 8499 146b 01       		.byte	0x1
 8500 146c 9D06     		.2byte	0x69d
 8501 146e 7A000000 		.4byte	0x7a
 8502 1472 02       		.byte	0x2
 8503 1473 91       		.byte	0x91
 8504 1474 00       		.sleb128 0
 8505 1475 12       		.uleb128 0x12
 8506 1476 B7030000 		.4byte	.LASF131
 8507 147a 01       		.byte	0x1
 8508 147b 9F06     		.2byte	0x69f
 8509 147d 7A000000 		.4byte	0x7a
 8510 1481 02       		.byte	0x2
 8511 1482 91       		.byte	0x91
 8512 1483 6E       		.sleb128 -18
 8513 1484 12       		.uleb128 0x12
 8514 1485 97000000 		.4byte	.LASF136
 8515 1489 01       		.byte	0x1
 8516 148a A006     		.2byte	0x6a0
 8517 148c 7A000000 		.4byte	0x7a
 8518 1490 02       		.byte	0x2
 8519 1491 91       		.byte	0x91
 8520 1492 6C       		.sleb128 -20
 8521 1493 12       		.uleb128 0x12
 8522 1494 B0020000 		.4byte	.LASF137
 8523 1498 01       		.byte	0x1
 8524 1499 A106     		.2byte	0x6a1
 8525 149b AF140000 		.4byte	0x14af
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 182


 8526 149f 02       		.byte	0x2
 8527 14a0 91       		.byte	0x91
 8528 14a1 64       		.sleb128 -28
 8529 14a2 00       		.byte	0
 8530 14a3 05       		.uleb128 0x5
 8531 14a4 04       		.byte	0x4
 8532 14a5 85000000 		.4byte	0x85
 8533 14a9 05       		.uleb128 0x5
 8534 14aa 04       		.byte	0x4
 8535 14ab 7A000000 		.4byte	0x7a
 8536 14af 16       		.uleb128 0x16
 8537 14b0 6F000000 		.4byte	0x6f
 8538 14b4 BF140000 		.4byte	0x14bf
 8539 14b8 17       		.uleb128 0x17
 8540 14b9 B0000000 		.4byte	0xb0
 8541 14bd 07       		.byte	0x7
 8542 14be 00       		.byte	0
 8543 14bf 1A       		.uleb128 0x1a
 8544 14c0 73020000 		.4byte	.LASF138
 8545 14c4 01       		.byte	0x1
 8546 14c5 30       		.byte	0x30
 8547 14c6 6F000000 		.4byte	0x6f
 8548 14ca 01       		.byte	0x1
 8549 14cb 01       		.byte	0x1
 8550 14cc 16       		.uleb128 0x16
 8551 14cd 7A000000 		.4byte	0x7a
 8552 14d1 DC140000 		.4byte	0x14dc
 8553 14d5 17       		.uleb128 0x17
 8554 14d6 B0000000 		.4byte	0xb0
 8555 14da 03       		.byte	0x3
 8556 14db 00       		.byte	0
 8557 14dc 1B       		.uleb128 0x1b
 8558 14dd B1060000 		.4byte	.LASF139
 8559 14e1 01       		.byte	0x1
 8560 14e2 3D       		.byte	0x3d
 8561 14e3 EE140000 		.4byte	0x14ee
 8562 14e7 01       		.byte	0x1
 8563 14e8 05       		.byte	0x5
 8564 14e9 03       		.byte	0x3
 8565 14ea 00000000 		.4byte	ETH_SOCKET_TX_BASE
 8566 14ee 06       		.uleb128 0x6
 8567 14ef CC140000 		.4byte	0x14cc
 8568 14f3 1B       		.uleb128 0x1b
 8569 14f4 5D060000 		.4byte	.LASF140
 8570 14f8 01       		.byte	0x1
 8571 14f9 3E       		.byte	0x3e
 8572 14fa 05150000 		.4byte	0x1505
 8573 14fe 01       		.byte	0x1
 8574 14ff 05       		.byte	0x5
 8575 1500 03       		.byte	0x3
 8576 1501 00000000 		.4byte	ETH_SOCKET_RX_BASE
 8577 1505 06       		.uleb128 0x6
 8578 1506 CC140000 		.4byte	0x14cc
 8579 150a 16       		.uleb128 0x16
 8580 150b 25010000 		.4byte	0x125
 8581 150f 1A150000 		.4byte	0x151a
 8582 1513 17       		.uleb128 0x17
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 183


 8583 1514 B0000000 		.4byte	0xb0
 8584 1518 03       		.byte	0x3
 8585 1519 00       		.byte	0
 8586 151a 1B       		.uleb128 0x1b
 8587 151b E0030000 		.4byte	.LASF141
 8588 151f 01       		.byte	0x1
 8589 1520 5B       		.byte	0x5b
 8590 1521 0A150000 		.4byte	0x150a
 8591 1525 01       		.byte	0x1
 8592 1526 05       		.byte	0x5
 8593 1527 03       		.byte	0x3
 8594 1528 00000000 		.4byte	ETH_SocketConfig
 8595 152c 1B       		.uleb128 0x1b
 8596 152d DF070000 		.4byte	.LASF142
 8597 1531 01       		.byte	0x1
 8598 1532 5C       		.byte	0x5c
 8599 1533 85000000 		.4byte	0x85
 8600 1537 01       		.byte	0x1
 8601 1538 05       		.byte	0x5
 8602 1539 03       		.byte	0x3
 8603 153a 00000000 		.4byte	ETH_SubnetMask
 8604 153e 16       		.uleb128 0x16
 8605 153f 6F000000 		.4byte	0x6f
 8606 1543 4E150000 		.4byte	0x154e
 8607 1547 17       		.uleb128 0x17
 8608 1548 B0000000 		.4byte	0xb0
 8609 154c 05       		.byte	0x5
 8610 154d 00       		.byte	0
 8611 154e 1B       		.uleb128 0x1b
 8612 154f 4A010000 		.4byte	.LASF143
 8613 1553 01       		.byte	0x1
 8614 1554 5E       		.byte	0x5e
 8615 1555 3E150000 		.4byte	0x153e
 8616 1559 01       		.byte	0x1
 8617 155a 05       		.byte	0x5
 8618 155b 03       		.byte	0x3
 8619 155c 00000000 		.4byte	ETH_MAC
 8620 1560 00       		.byte	0
 8621              		.section	.debug_abbrev,"",%progbits
 8622              	.Ldebug_abbrev0:
 8623 0000 01       		.uleb128 0x1
 8624 0001 11       		.uleb128 0x11
 8625 0002 01       		.byte	0x1
 8626 0003 25       		.uleb128 0x25
 8627 0004 0E       		.uleb128 0xe
 8628 0005 13       		.uleb128 0x13
 8629 0006 0B       		.uleb128 0xb
 8630 0007 03       		.uleb128 0x3
 8631 0008 0E       		.uleb128 0xe
 8632 0009 1B       		.uleb128 0x1b
 8633 000a 0E       		.uleb128 0xe
 8634 000b 55       		.uleb128 0x55
 8635 000c 06       		.uleb128 0x6
 8636 000d 11       		.uleb128 0x11
 8637 000e 01       		.uleb128 0x1
 8638 000f 52       		.uleb128 0x52
 8639 0010 01       		.uleb128 0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 184


 8640 0011 10       		.uleb128 0x10
 8641 0012 06       		.uleb128 0x6
 8642 0013 00       		.byte	0
 8643 0014 00       		.byte	0
 8644 0015 02       		.uleb128 0x2
 8645 0016 24       		.uleb128 0x24
 8646 0017 00       		.byte	0
 8647 0018 0B       		.uleb128 0xb
 8648 0019 0B       		.uleb128 0xb
 8649 001a 3E       		.uleb128 0x3e
 8650 001b 0B       		.uleb128 0xb
 8651 001c 03       		.uleb128 0x3
 8652 001d 0E       		.uleb128 0xe
 8653 001e 00       		.byte	0
 8654 001f 00       		.byte	0
 8655 0020 03       		.uleb128 0x3
 8656 0021 24       		.uleb128 0x24
 8657 0022 00       		.byte	0
 8658 0023 0B       		.uleb128 0xb
 8659 0024 0B       		.uleb128 0xb
 8660 0025 3E       		.uleb128 0x3e
 8661 0026 0B       		.uleb128 0xb
 8662 0027 03       		.uleb128 0x3
 8663 0028 08       		.uleb128 0x8
 8664 0029 00       		.byte	0
 8665 002a 00       		.byte	0
 8666 002b 04       		.uleb128 0x4
 8667 002c 16       		.uleb128 0x16
 8668 002d 00       		.byte	0
 8669 002e 03       		.uleb128 0x3
 8670 002f 0E       		.uleb128 0xe
 8671 0030 3A       		.uleb128 0x3a
 8672 0031 0B       		.uleb128 0xb
 8673 0032 3B       		.uleb128 0x3b
 8674 0033 0B       		.uleb128 0xb
 8675 0034 49       		.uleb128 0x49
 8676 0035 13       		.uleb128 0x13
 8677 0036 00       		.byte	0
 8678 0037 00       		.byte	0
 8679 0038 05       		.uleb128 0x5
 8680 0039 0F       		.uleb128 0xf
 8681 003a 00       		.byte	0
 8682 003b 0B       		.uleb128 0xb
 8683 003c 0B       		.uleb128 0xb
 8684 003d 49       		.uleb128 0x49
 8685 003e 13       		.uleb128 0x13
 8686 003f 00       		.byte	0
 8687 0040 00       		.byte	0
 8688 0041 06       		.uleb128 0x6
 8689 0042 26       		.uleb128 0x26
 8690 0043 00       		.byte	0
 8691 0044 49       		.uleb128 0x49
 8692 0045 13       		.uleb128 0x13
 8693 0046 00       		.byte	0
 8694 0047 00       		.byte	0
 8695 0048 07       		.uleb128 0x7
 8696 0049 13       		.uleb128 0x13
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 185


 8697 004a 01       		.byte	0x1
 8698 004b 0B       		.uleb128 0xb
 8699 004c 0B       		.uleb128 0xb
 8700 004d 3A       		.uleb128 0x3a
 8701 004e 0B       		.uleb128 0xb
 8702 004f 3B       		.uleb128 0x3b
 8703 0050 0B       		.uleb128 0xb
 8704 0051 01       		.uleb128 0x1
 8705 0052 13       		.uleb128 0x13
 8706 0053 00       		.byte	0
 8707 0054 00       		.byte	0
 8708 0055 08       		.uleb128 0x8
 8709 0056 0D       		.uleb128 0xd
 8710 0057 00       		.byte	0
 8711 0058 03       		.uleb128 0x3
 8712 0059 0E       		.uleb128 0xe
 8713 005a 3A       		.uleb128 0x3a
 8714 005b 0B       		.uleb128 0xb
 8715 005c 3B       		.uleb128 0x3b
 8716 005d 0B       		.uleb128 0xb
 8717 005e 49       		.uleb128 0x49
 8718 005f 13       		.uleb128 0x13
 8719 0060 38       		.uleb128 0x38
 8720 0061 0A       		.uleb128 0xa
 8721 0062 00       		.byte	0
 8722 0063 00       		.byte	0
 8723 0064 09       		.uleb128 0x9
 8724 0065 2E       		.uleb128 0x2e
 8725 0066 00       		.byte	0
 8726 0067 3F       		.uleb128 0x3f
 8727 0068 0C       		.uleb128 0xc
 8728 0069 03       		.uleb128 0x3
 8729 006a 0E       		.uleb128 0xe
 8730 006b 3A       		.uleb128 0x3a
 8731 006c 0B       		.uleb128 0xb
 8732 006d 3B       		.uleb128 0x3b
 8733 006e 0B       		.uleb128 0xb
 8734 006f 27       		.uleb128 0x27
 8735 0070 0C       		.uleb128 0xc
 8736 0071 11       		.uleb128 0x11
 8737 0072 01       		.uleb128 0x1
 8738 0073 12       		.uleb128 0x12
 8739 0074 01       		.uleb128 0x1
 8740 0075 40       		.uleb128 0x40
 8741 0076 06       		.uleb128 0x6
 8742 0077 9642     		.uleb128 0x2116
 8743 0079 0C       		.uleb128 0xc
 8744 007a 00       		.byte	0
 8745 007b 00       		.byte	0
 8746 007c 0A       		.uleb128 0xa
 8747 007d 2E       		.uleb128 0x2e
 8748 007e 01       		.byte	0x1
 8749 007f 3F       		.uleb128 0x3f
 8750 0080 0C       		.uleb128 0xc
 8751 0081 03       		.uleb128 0x3
 8752 0082 0E       		.uleb128 0xe
 8753 0083 3A       		.uleb128 0x3a
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 186


 8754 0084 0B       		.uleb128 0xb
 8755 0085 3B       		.uleb128 0x3b
 8756 0086 0B       		.uleb128 0xb
 8757 0087 27       		.uleb128 0x27
 8758 0088 0C       		.uleb128 0xc
 8759 0089 11       		.uleb128 0x11
 8760 008a 01       		.uleb128 0x1
 8761 008b 12       		.uleb128 0x12
 8762 008c 01       		.uleb128 0x1
 8763 008d 40       		.uleb128 0x40
 8764 008e 06       		.uleb128 0x6
 8765 008f 9642     		.uleb128 0x2116
 8766 0091 0C       		.uleb128 0xc
 8767 0092 01       		.uleb128 0x1
 8768 0093 13       		.uleb128 0x13
 8769 0094 00       		.byte	0
 8770 0095 00       		.byte	0
 8771 0096 0B       		.uleb128 0xb
 8772 0097 05       		.uleb128 0x5
 8773 0098 00       		.byte	0
 8774 0099 03       		.uleb128 0x3
 8775 009a 0E       		.uleb128 0xe
 8776 009b 3A       		.uleb128 0x3a
 8777 009c 0B       		.uleb128 0xb
 8778 009d 3B       		.uleb128 0x3b
 8779 009e 0B       		.uleb128 0xb
 8780 009f 49       		.uleb128 0x49
 8781 00a0 13       		.uleb128 0x13
 8782 00a1 02       		.uleb128 0x2
 8783 00a2 0A       		.uleb128 0xa
 8784 00a3 00       		.byte	0
 8785 00a4 00       		.byte	0
 8786 00a5 0C       		.uleb128 0xc
 8787 00a6 05       		.uleb128 0x5
 8788 00a7 00       		.byte	0
 8789 00a8 03       		.uleb128 0x3
 8790 00a9 08       		.uleb128 0x8
 8791 00aa 3A       		.uleb128 0x3a
 8792 00ab 0B       		.uleb128 0xb
 8793 00ac 3B       		.uleb128 0x3b
 8794 00ad 0B       		.uleb128 0xb
 8795 00ae 49       		.uleb128 0x49
 8796 00af 13       		.uleb128 0x13
 8797 00b0 02       		.uleb128 0x2
 8798 00b1 0A       		.uleb128 0xa
 8799 00b2 00       		.byte	0
 8800 00b3 00       		.byte	0
 8801 00b4 0D       		.uleb128 0xd
 8802 00b5 34       		.uleb128 0x34
 8803 00b6 00       		.byte	0
 8804 00b7 03       		.uleb128 0x3
 8805 00b8 0E       		.uleb128 0xe
 8806 00b9 3A       		.uleb128 0x3a
 8807 00ba 0B       		.uleb128 0xb
 8808 00bb 3B       		.uleb128 0x3b
 8809 00bc 0B       		.uleb128 0xb
 8810 00bd 49       		.uleb128 0x49
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 187


 8811 00be 13       		.uleb128 0x13
 8812 00bf 02       		.uleb128 0x2
 8813 00c0 0A       		.uleb128 0xa
 8814 00c1 00       		.byte	0
 8815 00c2 00       		.byte	0
 8816 00c3 0E       		.uleb128 0xe
 8817 00c4 34       		.uleb128 0x34
 8818 00c5 00       		.byte	0
 8819 00c6 03       		.uleb128 0x3
 8820 00c7 08       		.uleb128 0x8
 8821 00c8 3A       		.uleb128 0x3a
 8822 00c9 0B       		.uleb128 0xb
 8823 00ca 3B       		.uleb128 0x3b
 8824 00cb 0B       		.uleb128 0xb
 8825 00cc 49       		.uleb128 0x49
 8826 00cd 13       		.uleb128 0x13
 8827 00ce 02       		.uleb128 0x2
 8828 00cf 0A       		.uleb128 0xa
 8829 00d0 00       		.byte	0
 8830 00d1 00       		.byte	0
 8831 00d2 0F       		.uleb128 0xf
 8832 00d3 2E       		.uleb128 0x2e
 8833 00d4 01       		.byte	0x1
 8834 00d5 3F       		.uleb128 0x3f
 8835 00d6 0C       		.uleb128 0xc
 8836 00d7 03       		.uleb128 0x3
 8837 00d8 0E       		.uleb128 0xe
 8838 00d9 3A       		.uleb128 0x3a
 8839 00da 0B       		.uleb128 0xb
 8840 00db 3B       		.uleb128 0x3b
 8841 00dc 05       		.uleb128 0x5
 8842 00dd 27       		.uleb128 0x27
 8843 00de 0C       		.uleb128 0xc
 8844 00df 11       		.uleb128 0x11
 8845 00e0 01       		.uleb128 0x1
 8846 00e1 12       		.uleb128 0x12
 8847 00e2 01       		.uleb128 0x1
 8848 00e3 40       		.uleb128 0x40
 8849 00e4 06       		.uleb128 0x6
 8850 00e5 9642     		.uleb128 0x2116
 8851 00e7 0C       		.uleb128 0xc
 8852 00e8 01       		.uleb128 0x1
 8853 00e9 13       		.uleb128 0x13
 8854 00ea 00       		.byte	0
 8855 00eb 00       		.byte	0
 8856 00ec 10       		.uleb128 0x10
 8857 00ed 05       		.uleb128 0x5
 8858 00ee 00       		.byte	0
 8859 00ef 03       		.uleb128 0x3
 8860 00f0 0E       		.uleb128 0xe
 8861 00f1 3A       		.uleb128 0x3a
 8862 00f2 0B       		.uleb128 0xb
 8863 00f3 3B       		.uleb128 0x3b
 8864 00f4 05       		.uleb128 0x5
 8865 00f5 49       		.uleb128 0x49
 8866 00f6 13       		.uleb128 0x13
 8867 00f7 02       		.uleb128 0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 188


 8868 00f8 0A       		.uleb128 0xa
 8869 00f9 00       		.byte	0
 8870 00fa 00       		.byte	0
 8871 00fb 11       		.uleb128 0x11
 8872 00fc 05       		.uleb128 0x5
 8873 00fd 00       		.byte	0
 8874 00fe 03       		.uleb128 0x3
 8875 00ff 08       		.uleb128 0x8
 8876 0100 3A       		.uleb128 0x3a
 8877 0101 0B       		.uleb128 0xb
 8878 0102 3B       		.uleb128 0x3b
 8879 0103 05       		.uleb128 0x5
 8880 0104 49       		.uleb128 0x49
 8881 0105 13       		.uleb128 0x13
 8882 0106 02       		.uleb128 0x2
 8883 0107 0A       		.uleb128 0xa
 8884 0108 00       		.byte	0
 8885 0109 00       		.byte	0
 8886 010a 12       		.uleb128 0x12
 8887 010b 34       		.uleb128 0x34
 8888 010c 00       		.byte	0
 8889 010d 03       		.uleb128 0x3
 8890 010e 0E       		.uleb128 0xe
 8891 010f 3A       		.uleb128 0x3a
 8892 0110 0B       		.uleb128 0xb
 8893 0111 3B       		.uleb128 0x3b
 8894 0112 05       		.uleb128 0x5
 8895 0113 49       		.uleb128 0x49
 8896 0114 13       		.uleb128 0x13
 8897 0115 02       		.uleb128 0x2
 8898 0116 0A       		.uleb128 0xa
 8899 0117 00       		.byte	0
 8900 0118 00       		.byte	0
 8901 0119 13       		.uleb128 0x13
 8902 011a 34       		.uleb128 0x34
 8903 011b 00       		.byte	0
 8904 011c 03       		.uleb128 0x3
 8905 011d 08       		.uleb128 0x8
 8906 011e 3A       		.uleb128 0x3a
 8907 011f 0B       		.uleb128 0xb
 8908 0120 3B       		.uleb128 0x3b
 8909 0121 05       		.uleb128 0x5
 8910 0122 49       		.uleb128 0x49
 8911 0123 13       		.uleb128 0x13
 8912 0124 02       		.uleb128 0x2
 8913 0125 0A       		.uleb128 0xa
 8914 0126 00       		.byte	0
 8915 0127 00       		.byte	0
 8916 0128 14       		.uleb128 0x14
 8917 0129 2E       		.uleb128 0x2e
 8918 012a 01       		.byte	0x1
 8919 012b 3F       		.uleb128 0x3f
 8920 012c 0C       		.uleb128 0xc
 8921 012d 03       		.uleb128 0x3
 8922 012e 0E       		.uleb128 0xe
 8923 012f 3A       		.uleb128 0x3a
 8924 0130 0B       		.uleb128 0xb
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 189


 8925 0131 3B       		.uleb128 0x3b
 8926 0132 05       		.uleb128 0x5
 8927 0133 27       		.uleb128 0x27
 8928 0134 0C       		.uleb128 0xc
 8929 0135 49       		.uleb128 0x49
 8930 0136 13       		.uleb128 0x13
 8931 0137 11       		.uleb128 0x11
 8932 0138 01       		.uleb128 0x1
 8933 0139 12       		.uleb128 0x12
 8934 013a 01       		.uleb128 0x1
 8935 013b 40       		.uleb128 0x40
 8936 013c 06       		.uleb128 0x6
 8937 013d 9642     		.uleb128 0x2116
 8938 013f 0C       		.uleb128 0xc
 8939 0140 01       		.uleb128 0x1
 8940 0141 13       		.uleb128 0x13
 8941 0142 00       		.byte	0
 8942 0143 00       		.byte	0
 8943 0144 15       		.uleb128 0x15
 8944 0145 2E       		.uleb128 0x2e
 8945 0146 01       		.byte	0x1
 8946 0147 3F       		.uleb128 0x3f
 8947 0148 0C       		.uleb128 0xc
 8948 0149 03       		.uleb128 0x3
 8949 014a 0E       		.uleb128 0xe
 8950 014b 3A       		.uleb128 0x3a
 8951 014c 0B       		.uleb128 0xb
 8952 014d 3B       		.uleb128 0x3b
 8953 014e 05       		.uleb128 0x5
 8954 014f 27       		.uleb128 0x27
 8955 0150 0C       		.uleb128 0xc
 8956 0151 11       		.uleb128 0x11
 8957 0152 01       		.uleb128 0x1
 8958 0153 12       		.uleb128 0x12
 8959 0154 01       		.uleb128 0x1
 8960 0155 40       		.uleb128 0x40
 8961 0156 06       		.uleb128 0x6
 8962 0157 9742     		.uleb128 0x2117
 8963 0159 0C       		.uleb128 0xc
 8964 015a 01       		.uleb128 0x1
 8965 015b 13       		.uleb128 0x13
 8966 015c 00       		.byte	0
 8967 015d 00       		.byte	0
 8968 015e 16       		.uleb128 0x16
 8969 015f 01       		.uleb128 0x1
 8970 0160 01       		.byte	0x1
 8971 0161 49       		.uleb128 0x49
 8972 0162 13       		.uleb128 0x13
 8973 0163 01       		.uleb128 0x1
 8974 0164 13       		.uleb128 0x13
 8975 0165 00       		.byte	0
 8976 0166 00       		.byte	0
 8977 0167 17       		.uleb128 0x17
 8978 0168 21       		.uleb128 0x21
 8979 0169 00       		.byte	0
 8980 016a 49       		.uleb128 0x49
 8981 016b 13       		.uleb128 0x13
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 190


 8982 016c 2F       		.uleb128 0x2f
 8983 016d 0B       		.uleb128 0xb
 8984 016e 00       		.byte	0
 8985 016f 00       		.byte	0
 8986 0170 18       		.uleb128 0x18
 8987 0171 2E       		.uleb128 0x2e
 8988 0172 01       		.byte	0x1
 8989 0173 3F       		.uleb128 0x3f
 8990 0174 0C       		.uleb128 0xc
 8991 0175 03       		.uleb128 0x3
 8992 0176 0E       		.uleb128 0xe
 8993 0177 3A       		.uleb128 0x3a
 8994 0178 0B       		.uleb128 0xb
 8995 0179 3B       		.uleb128 0x3b
 8996 017a 05       		.uleb128 0x5
 8997 017b 27       		.uleb128 0x27
 8998 017c 0C       		.uleb128 0xc
 8999 017d 49       		.uleb128 0x49
 9000 017e 13       		.uleb128 0x13
 9001 017f 11       		.uleb128 0x11
 9002 0180 01       		.uleb128 0x1
 9003 0181 12       		.uleb128 0x12
 9004 0182 01       		.uleb128 0x1
 9005 0183 40       		.uleb128 0x40
 9006 0184 06       		.uleb128 0x6
 9007 0185 9742     		.uleb128 0x2117
 9008 0187 0C       		.uleb128 0xc
 9009 0188 01       		.uleb128 0x1
 9010 0189 13       		.uleb128 0x13
 9011 018a 00       		.byte	0
 9012 018b 00       		.byte	0
 9013 018c 19       		.uleb128 0x19
 9014 018d 2E       		.uleb128 0x2e
 9015 018e 00       		.byte	0
 9016 018f 3F       		.uleb128 0x3f
 9017 0190 0C       		.uleb128 0xc
 9018 0191 03       		.uleb128 0x3
 9019 0192 0E       		.uleb128 0xe
 9020 0193 3A       		.uleb128 0x3a
 9021 0194 0B       		.uleb128 0xb
 9022 0195 3B       		.uleb128 0x3b
 9023 0196 05       		.uleb128 0x5
 9024 0197 27       		.uleb128 0x27
 9025 0198 0C       		.uleb128 0xc
 9026 0199 49       		.uleb128 0x49
 9027 019a 13       		.uleb128 0x13
 9028 019b 11       		.uleb128 0x11
 9029 019c 01       		.uleb128 0x1
 9030 019d 12       		.uleb128 0x12
 9031 019e 01       		.uleb128 0x1
 9032 019f 40       		.uleb128 0x40
 9033 01a0 06       		.uleb128 0x6
 9034 01a1 9642     		.uleb128 0x2116
 9035 01a3 0C       		.uleb128 0xc
 9036 01a4 00       		.byte	0
 9037 01a5 00       		.byte	0
 9038 01a6 1A       		.uleb128 0x1a
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 191


 9039 01a7 34       		.uleb128 0x34
 9040 01a8 00       		.byte	0
 9041 01a9 03       		.uleb128 0x3
 9042 01aa 0E       		.uleb128 0xe
 9043 01ab 3A       		.uleb128 0x3a
 9044 01ac 0B       		.uleb128 0xb
 9045 01ad 3B       		.uleb128 0x3b
 9046 01ae 0B       		.uleb128 0xb
 9047 01af 49       		.uleb128 0x49
 9048 01b0 13       		.uleb128 0x13
 9049 01b1 3F       		.uleb128 0x3f
 9050 01b2 0C       		.uleb128 0xc
 9051 01b3 3C       		.uleb128 0x3c
 9052 01b4 0C       		.uleb128 0xc
 9053 01b5 00       		.byte	0
 9054 01b6 00       		.byte	0
 9055 01b7 1B       		.uleb128 0x1b
 9056 01b8 34       		.uleb128 0x34
 9057 01b9 00       		.byte	0
 9058 01ba 03       		.uleb128 0x3
 9059 01bb 0E       		.uleb128 0xe
 9060 01bc 3A       		.uleb128 0x3a
 9061 01bd 0B       		.uleb128 0xb
 9062 01be 3B       		.uleb128 0x3b
 9063 01bf 0B       		.uleb128 0xb
 9064 01c0 49       		.uleb128 0x49
 9065 01c1 13       		.uleb128 0x13
 9066 01c2 3F       		.uleb128 0x3f
 9067 01c3 0C       		.uleb128 0xc
 9068 01c4 02       		.uleb128 0x2
 9069 01c5 0A       		.uleb128 0xa
 9070 01c6 00       		.byte	0
 9071 01c7 00       		.byte	0
 9072 01c8 00       		.byte	0
 9073              		.section	.debug_loc,"",%progbits
 9074              	.Ldebug_loc0:
 9075              	.LLST0:
 9076 0000 00000000 		.4byte	.LFB0
 9077 0004 02000000 		.4byte	.LCFI0
 9078 0008 0200     		.2byte	0x2
 9079 000a 7D       		.byte	0x7d
 9080 000b 00       		.sleb128 0
 9081 000c 02000000 		.4byte	.LCFI0
 9082 0010 04000000 		.4byte	.LCFI1
 9083 0014 0200     		.2byte	0x2
 9084 0016 7D       		.byte	0x7d
 9085 0017 08       		.sleb128 8
 9086 0018 04000000 		.4byte	.LCFI1
 9087 001c 0E000000 		.4byte	.LFE0
 9088 0020 0200     		.2byte	0x2
 9089 0022 77       		.byte	0x77
 9090 0023 08       		.sleb128 8
 9091 0024 00000000 		.4byte	0
 9092 0028 00000000 		.4byte	0
 9093              	.LLST1:
 9094 002c 00000000 		.4byte	.LFB1
 9095 0030 02000000 		.4byte	.LCFI2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 192


 9096 0034 0200     		.2byte	0x2
 9097 0036 7D       		.byte	0x7d
 9098 0037 00       		.sleb128 0
 9099 0038 02000000 		.4byte	.LCFI2
 9100 003c 04000000 		.4byte	.LCFI3
 9101 0040 0200     		.2byte	0x2
 9102 0042 7D       		.byte	0x7d
 9103 0043 08       		.sleb128 8
 9104 0044 04000000 		.4byte	.LCFI3
 9105 0048 0E000000 		.4byte	.LFE1
 9106 004c 0200     		.2byte	0x2
 9107 004e 77       		.byte	0x77
 9108 004f 08       		.sleb128 8
 9109 0050 00000000 		.4byte	0
 9110 0054 00000000 		.4byte	0
 9111              	.LLST2:
 9112 0058 00000000 		.4byte	.LFB2
 9113 005c 02000000 		.4byte	.LCFI4
 9114 0060 0200     		.2byte	0x2
 9115 0062 7D       		.byte	0x7d
 9116 0063 00       		.sleb128 0
 9117 0064 02000000 		.4byte	.LCFI4
 9118 0068 04000000 		.4byte	.LCFI5
 9119 006c 0200     		.2byte	0x2
 9120 006e 7D       		.byte	0x7d
 9121 006f 0C       		.sleb128 12
 9122 0070 04000000 		.4byte	.LCFI5
 9123 0074 06000000 		.4byte	.LCFI6
 9124 0078 0200     		.2byte	0x2
 9125 007a 7D       		.byte	0x7d
 9126 007b 20       		.sleb128 32
 9127 007c 06000000 		.4byte	.LCFI6
 9128 0080 18010000 		.4byte	.LFE2
 9129 0084 0200     		.2byte	0x2
 9130 0086 77       		.byte	0x77
 9131 0087 20       		.sleb128 32
 9132 0088 00000000 		.4byte	0
 9133 008c 00000000 		.4byte	0
 9134              	.LLST3:
 9135 0090 00000000 		.4byte	.LFB3
 9136 0094 02000000 		.4byte	.LCFI7
 9137 0098 0200     		.2byte	0x2
 9138 009a 7D       		.byte	0x7d
 9139 009b 00       		.sleb128 0
 9140 009c 02000000 		.4byte	.LCFI7
 9141 00a0 04000000 		.4byte	.LCFI8
 9142 00a4 0200     		.2byte	0x2
 9143 00a6 7D       		.byte	0x7d
 9144 00a7 0C       		.sleb128 12
 9145 00a8 04000000 		.4byte	.LCFI8
 9146 00ac 06000000 		.4byte	.LCFI9
 9147 00b0 0200     		.2byte	0x2
 9148 00b2 7D       		.byte	0x7d
 9149 00b3 28       		.sleb128 40
 9150 00b4 06000000 		.4byte	.LCFI9
 9151 00b8 62010000 		.4byte	.LFE3
 9152 00bc 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 193


 9153 00be 77       		.byte	0x77
 9154 00bf 28       		.sleb128 40
 9155 00c0 00000000 		.4byte	0
 9156 00c4 00000000 		.4byte	0
 9157              	.LLST4:
 9158 00c8 00000000 		.4byte	.LFB4
 9159 00cc 02000000 		.4byte	.LCFI10
 9160 00d0 0200     		.2byte	0x2
 9161 00d2 7D       		.byte	0x7d
 9162 00d3 00       		.sleb128 0
 9163 00d4 02000000 		.4byte	.LCFI10
 9164 00d8 04000000 		.4byte	.LCFI11
 9165 00dc 0200     		.2byte	0x2
 9166 00de 7D       		.byte	0x7d
 9167 00df 08       		.sleb128 8
 9168 00e0 04000000 		.4byte	.LCFI11
 9169 00e4 06000000 		.4byte	.LCFI12
 9170 00e8 0200     		.2byte	0x2
 9171 00ea 7D       		.byte	0x7d
 9172 00eb 18       		.sleb128 24
 9173 00ec 06000000 		.4byte	.LCFI12
 9174 00f0 48000000 		.4byte	.LFE4
 9175 00f4 0200     		.2byte	0x2
 9176 00f6 77       		.byte	0x77
 9177 00f7 18       		.sleb128 24
 9178 00f8 00000000 		.4byte	0
 9179 00fc 00000000 		.4byte	0
 9180              	.LLST5:
 9181 0100 00000000 		.4byte	.LFB5
 9182 0104 02000000 		.4byte	.LCFI13
 9183 0108 0200     		.2byte	0x2
 9184 010a 7D       		.byte	0x7d
 9185 010b 00       		.sleb128 0
 9186 010c 02000000 		.4byte	.LCFI13
 9187 0110 04000000 		.4byte	.LCFI14
 9188 0114 0200     		.2byte	0x2
 9189 0116 7D       		.byte	0x7d
 9190 0117 08       		.sleb128 8
 9191 0118 04000000 		.4byte	.LCFI14
 9192 011c 06000000 		.4byte	.LCFI15
 9193 0120 0200     		.2byte	0x2
 9194 0122 7D       		.byte	0x7d
 9195 0123 18       		.sleb128 24
 9196 0124 06000000 		.4byte	.LCFI15
 9197 0128 4E000000 		.4byte	.LFE5
 9198 012c 0200     		.2byte	0x2
 9199 012e 77       		.byte	0x77
 9200 012f 18       		.sleb128 24
 9201 0130 00000000 		.4byte	0
 9202 0134 00000000 		.4byte	0
 9203              	.LLST6:
 9204 0138 00000000 		.4byte	.LFB6
 9205 013c 02000000 		.4byte	.LCFI16
 9206 0140 0200     		.2byte	0x2
 9207 0142 7D       		.byte	0x7d
 9208 0143 00       		.sleb128 0
 9209 0144 02000000 		.4byte	.LCFI16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 194


 9210 0148 04000000 		.4byte	.LCFI17
 9211 014c 0200     		.2byte	0x2
 9212 014e 7D       		.byte	0x7d
 9213 014f 08       		.sleb128 8
 9214 0150 04000000 		.4byte	.LCFI17
 9215 0154 06000000 		.4byte	.LCFI18
 9216 0158 0200     		.2byte	0x2
 9217 015a 7D       		.byte	0x7d
 9218 015b 10       		.sleb128 16
 9219 015c 06000000 		.4byte	.LCFI18
 9220 0160 1A000000 		.4byte	.LFE6
 9221 0164 0200     		.2byte	0x2
 9222 0166 77       		.byte	0x77
 9223 0167 10       		.sleb128 16
 9224 0168 00000000 		.4byte	0
 9225 016c 00000000 		.4byte	0
 9226              	.LLST7:
 9227 0170 00000000 		.4byte	.LFB7
 9228 0174 02000000 		.4byte	.LCFI19
 9229 0178 0200     		.2byte	0x2
 9230 017a 7D       		.byte	0x7d
 9231 017b 00       		.sleb128 0
 9232 017c 02000000 		.4byte	.LCFI19
 9233 0180 04000000 		.4byte	.LCFI20
 9234 0184 0200     		.2byte	0x2
 9235 0186 7D       		.byte	0x7d
 9236 0187 08       		.sleb128 8
 9237 0188 04000000 		.4byte	.LCFI20
 9238 018c 06000000 		.4byte	.LCFI21
 9239 0190 0200     		.2byte	0x2
 9240 0192 7D       		.byte	0x7d
 9241 0193 10       		.sleb128 16
 9242 0194 06000000 		.4byte	.LCFI21
 9243 0198 1A000000 		.4byte	.LFE7
 9244 019c 0200     		.2byte	0x2
 9245 019e 77       		.byte	0x77
 9246 019f 10       		.sleb128 16
 9247 01a0 00000000 		.4byte	0
 9248 01a4 00000000 		.4byte	0
 9249              	.LLST8:
 9250 01a8 00000000 		.4byte	.LFB8
 9251 01ac 02000000 		.4byte	.LCFI22
 9252 01b0 0200     		.2byte	0x2
 9253 01b2 7D       		.byte	0x7d
 9254 01b3 00       		.sleb128 0
 9255 01b4 02000000 		.4byte	.LCFI22
 9256 01b8 04000000 		.4byte	.LCFI23
 9257 01bc 0200     		.2byte	0x2
 9258 01be 7D       		.byte	0x7d
 9259 01bf 08       		.sleb128 8
 9260 01c0 04000000 		.4byte	.LCFI23
 9261 01c4 06000000 		.4byte	.LCFI24
 9262 01c8 0200     		.2byte	0x2
 9263 01ca 7D       		.byte	0x7d
 9264 01cb 10       		.sleb128 16
 9265 01cc 06000000 		.4byte	.LCFI24
 9266 01d0 1A000000 		.4byte	.LFE8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 195


 9267 01d4 0200     		.2byte	0x2
 9268 01d6 77       		.byte	0x77
 9269 01d7 10       		.sleb128 16
 9270 01d8 00000000 		.4byte	0
 9271 01dc 00000000 		.4byte	0
 9272              	.LLST9:
 9273 01e0 00000000 		.4byte	.LFB9
 9274 01e4 02000000 		.4byte	.LCFI25
 9275 01e8 0200     		.2byte	0x2
 9276 01ea 7D       		.byte	0x7d
 9277 01eb 00       		.sleb128 0
 9278 01ec 02000000 		.4byte	.LCFI25
 9279 01f0 04000000 		.4byte	.LCFI26
 9280 01f4 0200     		.2byte	0x2
 9281 01f6 7D       		.byte	0x7d
 9282 01f7 08       		.sleb128 8
 9283 01f8 04000000 		.4byte	.LCFI26
 9284 01fc 06000000 		.4byte	.LCFI27
 9285 0200 0200     		.2byte	0x2
 9286 0202 7D       		.byte	0x7d
 9287 0203 10       		.sleb128 16
 9288 0204 06000000 		.4byte	.LCFI27
 9289 0208 22000000 		.4byte	.LFE9
 9290 020c 0200     		.2byte	0x2
 9291 020e 77       		.byte	0x77
 9292 020f 10       		.sleb128 16
 9293 0210 00000000 		.4byte	0
 9294 0214 00000000 		.4byte	0
 9295              	.LLST10:
 9296 0218 00000000 		.4byte	.LFB10
 9297 021c 02000000 		.4byte	.LCFI28
 9298 0220 0200     		.2byte	0x2
 9299 0222 7D       		.byte	0x7d
 9300 0223 00       		.sleb128 0
 9301 0224 02000000 		.4byte	.LCFI28
 9302 0228 04000000 		.4byte	.LCFI29
 9303 022c 0200     		.2byte	0x2
 9304 022e 7D       		.byte	0x7d
 9305 022f 08       		.sleb128 8
 9306 0230 04000000 		.4byte	.LCFI29
 9307 0234 06000000 		.4byte	.LCFI30
 9308 0238 0200     		.2byte	0x2
 9309 023a 7D       		.byte	0x7d
 9310 023b 10       		.sleb128 16
 9311 023c 06000000 		.4byte	.LCFI30
 9312 0240 1A000000 		.4byte	.LFE10
 9313 0244 0200     		.2byte	0x2
 9314 0246 77       		.byte	0x77
 9315 0247 10       		.sleb128 16
 9316 0248 00000000 		.4byte	0
 9317 024c 00000000 		.4byte	0
 9318              	.LLST11:
 9319 0250 00000000 		.4byte	.LFB11
 9320 0254 02000000 		.4byte	.LCFI31
 9321 0258 0200     		.2byte	0x2
 9322 025a 7D       		.byte	0x7d
 9323 025b 00       		.sleb128 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 196


 9324 025c 02000000 		.4byte	.LCFI31
 9325 0260 04000000 		.4byte	.LCFI32
 9326 0264 0200     		.2byte	0x2
 9327 0266 7D       		.byte	0x7d
 9328 0267 08       		.sleb128 8
 9329 0268 04000000 		.4byte	.LCFI32
 9330 026c 06000000 		.4byte	.LCFI33
 9331 0270 0200     		.2byte	0x2
 9332 0272 7D       		.byte	0x7d
 9333 0273 10       		.sleb128 16
 9334 0274 06000000 		.4byte	.LCFI33
 9335 0278 22000000 		.4byte	.LFE11
 9336 027c 0200     		.2byte	0x2
 9337 027e 77       		.byte	0x77
 9338 027f 10       		.sleb128 16
 9339 0280 00000000 		.4byte	0
 9340 0284 00000000 		.4byte	0
 9341              	.LLST12:
 9342 0288 00000000 		.4byte	.LFB12
 9343 028c 02000000 		.4byte	.LCFI34
 9344 0290 0200     		.2byte	0x2
 9345 0292 7D       		.byte	0x7d
 9346 0293 00       		.sleb128 0
 9347 0294 02000000 		.4byte	.LCFI34
 9348 0298 04000000 		.4byte	.LCFI35
 9349 029c 0200     		.2byte	0x2
 9350 029e 7D       		.byte	0x7d
 9351 029f 08       		.sleb128 8
 9352 02a0 04000000 		.4byte	.LCFI35
 9353 02a4 06000000 		.4byte	.LCFI36
 9354 02a8 0200     		.2byte	0x2
 9355 02aa 7D       		.byte	0x7d
 9356 02ab 10       		.sleb128 16
 9357 02ac 06000000 		.4byte	.LCFI36
 9358 02b0 1A000000 		.4byte	.LFE12
 9359 02b4 0200     		.2byte	0x2
 9360 02b6 77       		.byte	0x77
 9361 02b7 10       		.sleb128 16
 9362 02b8 00000000 		.4byte	0
 9363 02bc 00000000 		.4byte	0
 9364              	.LLST13:
 9365 02c0 00000000 		.4byte	.LFB13
 9366 02c4 02000000 		.4byte	.LCFI37
 9367 02c8 0200     		.2byte	0x2
 9368 02ca 7D       		.byte	0x7d
 9369 02cb 00       		.sleb128 0
 9370 02cc 02000000 		.4byte	.LCFI37
 9371 02d0 04000000 		.4byte	.LCFI38
 9372 02d4 0200     		.2byte	0x2
 9373 02d6 7D       		.byte	0x7d
 9374 02d7 08       		.sleb128 8
 9375 02d8 04000000 		.4byte	.LCFI38
 9376 02dc 06000000 		.4byte	.LCFI39
 9377 02e0 0200     		.2byte	0x2
 9378 02e2 7D       		.byte	0x7d
 9379 02e3 10       		.sleb128 16
 9380 02e4 06000000 		.4byte	.LCFI39
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 197


 9381 02e8 22000000 		.4byte	.LFE13
 9382 02ec 0200     		.2byte	0x2
 9383 02ee 77       		.byte	0x77
 9384 02ef 10       		.sleb128 16
 9385 02f0 00000000 		.4byte	0
 9386 02f4 00000000 		.4byte	0
 9387              	.LLST14:
 9388 02f8 00000000 		.4byte	.LFB14
 9389 02fc 02000000 		.4byte	.LCFI40
 9390 0300 0200     		.2byte	0x2
 9391 0302 7D       		.byte	0x7d
 9392 0303 00       		.sleb128 0
 9393 0304 02000000 		.4byte	.LCFI40
 9394 0308 04000000 		.4byte	.LCFI41
 9395 030c 0200     		.2byte	0x2
 9396 030e 7D       		.byte	0x7d
 9397 030f 08       		.sleb128 8
 9398 0310 04000000 		.4byte	.LCFI41
 9399 0314 06000000 		.4byte	.LCFI42
 9400 0318 0200     		.2byte	0x2
 9401 031a 7D       		.byte	0x7d
 9402 031b 10       		.sleb128 16
 9403 031c 06000000 		.4byte	.LCFI42
 9404 0320 1E000000 		.4byte	.LFE14
 9405 0324 0200     		.2byte	0x2
 9406 0326 77       		.byte	0x77
 9407 0327 10       		.sleb128 16
 9408 0328 00000000 		.4byte	0
 9409 032c 00000000 		.4byte	0
 9410              	.LLST15:
 9411 0330 00000000 		.4byte	.LFB15
 9412 0334 02000000 		.4byte	.LCFI43
 9413 0338 0200     		.2byte	0x2
 9414 033a 7D       		.byte	0x7d
 9415 033b 00       		.sleb128 0
 9416 033c 02000000 		.4byte	.LCFI43
 9417 0340 04000000 		.4byte	.LCFI44
 9418 0344 0200     		.2byte	0x2
 9419 0346 7D       		.byte	0x7d
 9420 0347 08       		.sleb128 8
 9421 0348 04000000 		.4byte	.LCFI44
 9422 034c 06000000 		.4byte	.LCFI45
 9423 0350 0200     		.2byte	0x2
 9424 0352 7D       		.byte	0x7d
 9425 0353 10       		.sleb128 16
 9426 0354 06000000 		.4byte	.LCFI45
 9427 0358 1E000000 		.4byte	.LFE15
 9428 035c 0200     		.2byte	0x2
 9429 035e 77       		.byte	0x77
 9430 035f 10       		.sleb128 16
 9431 0360 00000000 		.4byte	0
 9432 0364 00000000 		.4byte	0
 9433              	.LLST16:
 9434 0368 00000000 		.4byte	.LFB16
 9435 036c 02000000 		.4byte	.LCFI46
 9436 0370 0200     		.2byte	0x2
 9437 0372 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 198


 9438 0373 00       		.sleb128 0
 9439 0374 02000000 		.4byte	.LCFI46
 9440 0378 04000000 		.4byte	.LCFI47
 9441 037c 0200     		.2byte	0x2
 9442 037e 7D       		.byte	0x7d
 9443 037f 08       		.sleb128 8
 9444 0380 04000000 		.4byte	.LCFI47
 9445 0384 06000000 		.4byte	.LCFI48
 9446 0388 0200     		.2byte	0x2
 9447 038a 7D       		.byte	0x7d
 9448 038b 10       		.sleb128 16
 9449 038c 06000000 		.4byte	.LCFI48
 9450 0390 1E000000 		.4byte	.LFE16
 9451 0394 0200     		.2byte	0x2
 9452 0396 77       		.byte	0x77
 9453 0397 10       		.sleb128 16
 9454 0398 00000000 		.4byte	0
 9455 039c 00000000 		.4byte	0
 9456              	.LLST17:
 9457 03a0 00000000 		.4byte	.LFB17
 9458 03a4 02000000 		.4byte	.LCFI49
 9459 03a8 0200     		.2byte	0x2
 9460 03aa 7D       		.byte	0x7d
 9461 03ab 00       		.sleb128 0
 9462 03ac 02000000 		.4byte	.LCFI49
 9463 03b0 04000000 		.4byte	.LCFI50
 9464 03b4 0200     		.2byte	0x2
 9465 03b6 7D       		.byte	0x7d
 9466 03b7 08       		.sleb128 8
 9467 03b8 04000000 		.4byte	.LCFI50
 9468 03bc 06000000 		.4byte	.LCFI51
 9469 03c0 0200     		.2byte	0x2
 9470 03c2 7D       		.byte	0x7d
 9471 03c3 18       		.sleb128 24
 9472 03c4 06000000 		.4byte	.LCFI51
 9473 03c8 82000000 		.4byte	.LFE17
 9474 03cc 0200     		.2byte	0x2
 9475 03ce 77       		.byte	0x77
 9476 03cf 18       		.sleb128 24
 9477 03d0 00000000 		.4byte	0
 9478 03d4 00000000 		.4byte	0
 9479              	.LLST18:
 9480 03d8 00000000 		.4byte	.LFB18
 9481 03dc 02000000 		.4byte	.LCFI52
 9482 03e0 0200     		.2byte	0x2
 9483 03e2 7D       		.byte	0x7d
 9484 03e3 00       		.sleb128 0
 9485 03e4 02000000 		.4byte	.LCFI52
 9486 03e8 04000000 		.4byte	.LCFI53
 9487 03ec 0200     		.2byte	0x2
 9488 03ee 7D       		.byte	0x7d
 9489 03ef 08       		.sleb128 8
 9490 03f0 04000000 		.4byte	.LCFI53
 9491 03f4 06000000 		.4byte	.LCFI54
 9492 03f8 0200     		.2byte	0x2
 9493 03fa 7D       		.byte	0x7d
 9494 03fb 18       		.sleb128 24
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 199


 9495 03fc 06000000 		.4byte	.LCFI54
 9496 0400 52000000 		.4byte	.LFE18
 9497 0404 0200     		.2byte	0x2
 9498 0406 77       		.byte	0x77
 9499 0407 18       		.sleb128 24
 9500 0408 00000000 		.4byte	0
 9501 040c 00000000 		.4byte	0
 9502              	.LLST19:
 9503 0410 00000000 		.4byte	.LFB19
 9504 0414 02000000 		.4byte	.LCFI55
 9505 0418 0200     		.2byte	0x2
 9506 041a 7D       		.byte	0x7d
 9507 041b 00       		.sleb128 0
 9508 041c 02000000 		.4byte	.LCFI55
 9509 0420 04000000 		.4byte	.LCFI56
 9510 0424 0200     		.2byte	0x2
 9511 0426 7D       		.byte	0x7d
 9512 0427 08       		.sleb128 8
 9513 0428 04000000 		.4byte	.LCFI56
 9514 042c 06000000 		.4byte	.LCFI57
 9515 0430 0200     		.2byte	0x2
 9516 0432 7D       		.byte	0x7d
 9517 0433 18       		.sleb128 24
 9518 0434 06000000 		.4byte	.LCFI57
 9519 0438 82000000 		.4byte	.LFE19
 9520 043c 0200     		.2byte	0x2
 9521 043e 77       		.byte	0x77
 9522 043f 18       		.sleb128 24
 9523 0440 00000000 		.4byte	0
 9524 0444 00000000 		.4byte	0
 9525              	.LLST20:
 9526 0448 00000000 		.4byte	.LFB20
 9527 044c 02000000 		.4byte	.LCFI58
 9528 0450 0200     		.2byte	0x2
 9529 0452 7D       		.byte	0x7d
 9530 0453 00       		.sleb128 0
 9531 0454 02000000 		.4byte	.LCFI58
 9532 0458 04000000 		.4byte	.LCFI59
 9533 045c 0200     		.2byte	0x2
 9534 045e 7D       		.byte	0x7d
 9535 045f 08       		.sleb128 8
 9536 0460 04000000 		.4byte	.LCFI59
 9537 0464 06000000 		.4byte	.LCFI60
 9538 0468 0200     		.2byte	0x2
 9539 046a 7D       		.byte	0x7d
 9540 046b 18       		.sleb128 24
 9541 046c 06000000 		.4byte	.LCFI60
 9542 0470 52000000 		.4byte	.LFE20
 9543 0474 0200     		.2byte	0x2
 9544 0476 77       		.byte	0x77
 9545 0477 18       		.sleb128 24
 9546 0478 00000000 		.4byte	0
 9547 047c 00000000 		.4byte	0
 9548              	.LLST21:
 9549 0480 00000000 		.4byte	.LFB21
 9550 0484 02000000 		.4byte	.LCFI61
 9551 0488 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 200


 9552 048a 7D       		.byte	0x7d
 9553 048b 00       		.sleb128 0
 9554 048c 02000000 		.4byte	.LCFI61
 9555 0490 04000000 		.4byte	.LCFI62
 9556 0494 0200     		.2byte	0x2
 9557 0496 7D       		.byte	0x7d
 9558 0497 08       		.sleb128 8
 9559 0498 04000000 		.4byte	.LCFI62
 9560 049c 06000000 		.4byte	.LCFI63
 9561 04a0 0200     		.2byte	0x2
 9562 04a2 7D       		.byte	0x7d
 9563 04a3 10       		.sleb128 16
 9564 04a4 06000000 		.4byte	.LCFI63
 9565 04a8 36000000 		.4byte	.LFE21
 9566 04ac 0200     		.2byte	0x2
 9567 04ae 77       		.byte	0x77
 9568 04af 10       		.sleb128 16
 9569 04b0 00000000 		.4byte	0
 9570 04b4 00000000 		.4byte	0
 9571              	.LLST22:
 9572 04b8 00000000 		.4byte	.LFB22
 9573 04bc 02000000 		.4byte	.LCFI64
 9574 04c0 0200     		.2byte	0x2
 9575 04c2 7D       		.byte	0x7d
 9576 04c3 00       		.sleb128 0
 9577 04c4 02000000 		.4byte	.LCFI64
 9578 04c8 04000000 		.4byte	.LCFI65
 9579 04cc 0200     		.2byte	0x2
 9580 04ce 7D       		.byte	0x7d
 9581 04cf 08       		.sleb128 8
 9582 04d0 04000000 		.4byte	.LCFI65
 9583 04d4 06000000 		.4byte	.LCFI66
 9584 04d8 0200     		.2byte	0x2
 9585 04da 7D       		.byte	0x7d
 9586 04db 10       		.sleb128 16
 9587 04dc 06000000 		.4byte	.LCFI66
 9588 04e0 38000000 		.4byte	.LFE22
 9589 04e4 0200     		.2byte	0x2
 9590 04e6 77       		.byte	0x77
 9591 04e7 10       		.sleb128 16
 9592 04e8 00000000 		.4byte	0
 9593 04ec 00000000 		.4byte	0
 9594              	.LLST23:
 9595 04f0 00000000 		.4byte	.LFB23
 9596 04f4 02000000 		.4byte	.LCFI67
 9597 04f8 0200     		.2byte	0x2
 9598 04fa 7D       		.byte	0x7d
 9599 04fb 00       		.sleb128 0
 9600 04fc 02000000 		.4byte	.LCFI67
 9601 0500 04000000 		.4byte	.LCFI68
 9602 0504 0200     		.2byte	0x2
 9603 0506 7D       		.byte	0x7d
 9604 0507 08       		.sleb128 8
 9605 0508 04000000 		.4byte	.LCFI68
 9606 050c 06000000 		.4byte	.LCFI69
 9607 0510 0200     		.2byte	0x2
 9608 0512 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 201


 9609 0513 18       		.sleb128 24
 9610 0514 06000000 		.4byte	.LCFI69
 9611 0518 44000000 		.4byte	.LFE23
 9612 051c 0200     		.2byte	0x2
 9613 051e 77       		.byte	0x77
 9614 051f 18       		.sleb128 24
 9615 0520 00000000 		.4byte	0
 9616 0524 00000000 		.4byte	0
 9617              	.LLST24:
 9618 0528 00000000 		.4byte	.LFB24
 9619 052c 02000000 		.4byte	.LCFI70
 9620 0530 0200     		.2byte	0x2
 9621 0532 7D       		.byte	0x7d
 9622 0533 00       		.sleb128 0
 9623 0534 02000000 		.4byte	.LCFI70
 9624 0538 04000000 		.4byte	.LCFI71
 9625 053c 0200     		.2byte	0x2
 9626 053e 7D       		.byte	0x7d
 9627 053f 08       		.sleb128 8
 9628 0540 04000000 		.4byte	.LCFI71
 9629 0544 06000000 		.4byte	.LCFI72
 9630 0548 0200     		.2byte	0x2
 9631 054a 7D       		.byte	0x7d
 9632 054b 10       		.sleb128 16
 9633 054c 06000000 		.4byte	.LCFI72
 9634 0550 38000000 		.4byte	.LFE24
 9635 0554 0200     		.2byte	0x2
 9636 0556 77       		.byte	0x77
 9637 0557 10       		.sleb128 16
 9638 0558 00000000 		.4byte	0
 9639 055c 00000000 		.4byte	0
 9640              	.LLST25:
 9641 0560 00000000 		.4byte	.LFB25
 9642 0564 02000000 		.4byte	.LCFI73
 9643 0568 0200     		.2byte	0x2
 9644 056a 7D       		.byte	0x7d
 9645 056b 00       		.sleb128 0
 9646 056c 02000000 		.4byte	.LCFI73
 9647 0570 04000000 		.4byte	.LCFI74
 9648 0574 0200     		.2byte	0x2
 9649 0576 7D       		.byte	0x7d
 9650 0577 08       		.sleb128 8
 9651 0578 04000000 		.4byte	.LCFI74
 9652 057c 06000000 		.4byte	.LCFI75
 9653 0580 0200     		.2byte	0x2
 9654 0582 7D       		.byte	0x7d
 9655 0583 18       		.sleb128 24
 9656 0584 06000000 		.4byte	.LCFI75
 9657 0588 44000000 		.4byte	.LFE25
 9658 058c 0200     		.2byte	0x2
 9659 058e 77       		.byte	0x77
 9660 058f 18       		.sleb128 24
 9661 0590 00000000 		.4byte	0
 9662 0594 00000000 		.4byte	0
 9663              	.LLST26:
 9664 0598 00000000 		.4byte	.LFB26
 9665 059c 02000000 		.4byte	.LCFI76
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 202


 9666 05a0 0200     		.2byte	0x2
 9667 05a2 7D       		.byte	0x7d
 9668 05a3 00       		.sleb128 0
 9669 05a4 02000000 		.4byte	.LCFI76
 9670 05a8 04000000 		.4byte	.LCFI77
 9671 05ac 0200     		.2byte	0x2
 9672 05ae 7D       		.byte	0x7d
 9673 05af 08       		.sleb128 8
 9674 05b0 04000000 		.4byte	.LCFI77
 9675 05b4 06000000 		.4byte	.LCFI78
 9676 05b8 0200     		.2byte	0x2
 9677 05ba 7D       		.byte	0x7d
 9678 05bb 18       		.sleb128 24
 9679 05bc 06000000 		.4byte	.LCFI78
 9680 05c0 44000000 		.4byte	.LFE26
 9681 05c4 0200     		.2byte	0x2
 9682 05c6 77       		.byte	0x77
 9683 05c7 18       		.sleb128 24
 9684 05c8 00000000 		.4byte	0
 9685 05cc 00000000 		.4byte	0
 9686              	.LLST27:
 9687 05d0 00000000 		.4byte	.LFB27
 9688 05d4 02000000 		.4byte	.LCFI79
 9689 05d8 0200     		.2byte	0x2
 9690 05da 7D       		.byte	0x7d
 9691 05db 00       		.sleb128 0
 9692 05dc 02000000 		.4byte	.LCFI79
 9693 05e0 04000000 		.4byte	.LCFI80
 9694 05e4 0200     		.2byte	0x2
 9695 05e6 7D       		.byte	0x7d
 9696 05e7 08       		.sleb128 8
 9697 05e8 04000000 		.4byte	.LCFI80
 9698 05ec 06000000 		.4byte	.LCFI81
 9699 05f0 0200     		.2byte	0x2
 9700 05f2 7D       		.byte	0x7d
 9701 05f3 10       		.sleb128 16
 9702 05f4 06000000 		.4byte	.LCFI81
 9703 05f8 38000000 		.4byte	.LFE27
 9704 05fc 0200     		.2byte	0x2
 9705 05fe 77       		.byte	0x77
 9706 05ff 10       		.sleb128 16
 9707 0600 00000000 		.4byte	0
 9708 0604 00000000 		.4byte	0
 9709              	.LLST28:
 9710 0608 00000000 		.4byte	.LFB28
 9711 060c 02000000 		.4byte	.LCFI82
 9712 0610 0200     		.2byte	0x2
 9713 0612 7D       		.byte	0x7d
 9714 0613 00       		.sleb128 0
 9715 0614 02000000 		.4byte	.LCFI82
 9716 0618 04000000 		.4byte	.LCFI83
 9717 061c 0200     		.2byte	0x2
 9718 061e 7D       		.byte	0x7d
 9719 061f 08       		.sleb128 8
 9720 0620 04000000 		.4byte	.LCFI83
 9721 0624 06000000 		.4byte	.LCFI84
 9722 0628 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 203


 9723 062a 7D       		.byte	0x7d
 9724 062b 10       		.sleb128 16
 9725 062c 06000000 		.4byte	.LCFI84
 9726 0630 34000000 		.4byte	.LFE28
 9727 0634 0200     		.2byte	0x2
 9728 0636 77       		.byte	0x77
 9729 0637 10       		.sleb128 16
 9730 0638 00000000 		.4byte	0
 9731 063c 00000000 		.4byte	0
 9732              	.LLST29:
 9733 0640 00000000 		.4byte	.LFB29
 9734 0644 02000000 		.4byte	.LCFI85
 9735 0648 0200     		.2byte	0x2
 9736 064a 7D       		.byte	0x7d
 9737 064b 00       		.sleb128 0
 9738 064c 02000000 		.4byte	.LCFI85
 9739 0650 04000000 		.4byte	.LCFI86
 9740 0654 0200     		.2byte	0x2
 9741 0656 7D       		.byte	0x7d
 9742 0657 08       		.sleb128 8
 9743 0658 04000000 		.4byte	.LCFI86
 9744 065c 06000000 		.4byte	.LCFI87
 9745 0660 0200     		.2byte	0x2
 9746 0662 7D       		.byte	0x7d
 9747 0663 10       		.sleb128 16
 9748 0664 06000000 		.4byte	.LCFI87
 9749 0668 34000000 		.4byte	.LFE29
 9750 066c 0200     		.2byte	0x2
 9751 066e 77       		.byte	0x77
 9752 066f 10       		.sleb128 16
 9753 0670 00000000 		.4byte	0
 9754 0674 00000000 		.4byte	0
 9755              	.LLST30:
 9756 0678 00000000 		.4byte	.LFB30
 9757 067c 02000000 		.4byte	.LCFI88
 9758 0680 0200     		.2byte	0x2
 9759 0682 7D       		.byte	0x7d
 9760 0683 00       		.sleb128 0
 9761 0684 02000000 		.4byte	.LCFI88
 9762 0688 04000000 		.4byte	.LCFI89
 9763 068c 0200     		.2byte	0x2
 9764 068e 7D       		.byte	0x7d
 9765 068f 08       		.sleb128 8
 9766 0690 04000000 		.4byte	.LCFI89
 9767 0694 06000000 		.4byte	.LCFI90
 9768 0698 0200     		.2byte	0x2
 9769 069a 7D       		.byte	0x7d
 9770 069b 10       		.sleb128 16
 9771 069c 06000000 		.4byte	.LCFI90
 9772 06a0 36000000 		.4byte	.LFE30
 9773 06a4 0200     		.2byte	0x2
 9774 06a6 77       		.byte	0x77
 9775 06a7 10       		.sleb128 16
 9776 06a8 00000000 		.4byte	0
 9777 06ac 00000000 		.4byte	0
 9778              	.LLST31:
 9779 06b0 00000000 		.4byte	.LFB31
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 204


 9780 06b4 02000000 		.4byte	.LCFI91
 9781 06b8 0200     		.2byte	0x2
 9782 06ba 7D       		.byte	0x7d
 9783 06bb 00       		.sleb128 0
 9784 06bc 02000000 		.4byte	.LCFI91
 9785 06c0 04000000 		.4byte	.LCFI92
 9786 06c4 0200     		.2byte	0x2
 9787 06c6 7D       		.byte	0x7d
 9788 06c7 08       		.sleb128 8
 9789 06c8 04000000 		.4byte	.LCFI92
 9790 06cc 06000000 		.4byte	.LCFI93
 9791 06d0 0200     		.2byte	0x2
 9792 06d2 7D       		.byte	0x7d
 9793 06d3 10       		.sleb128 16
 9794 06d4 06000000 		.4byte	.LCFI93
 9795 06d8 2E000000 		.4byte	.LFE31
 9796 06dc 0200     		.2byte	0x2
 9797 06de 77       		.byte	0x77
 9798 06df 10       		.sleb128 16
 9799 06e0 00000000 		.4byte	0
 9800 06e4 00000000 		.4byte	0
 9801              	.LLST32:
 9802 06e8 00000000 		.4byte	.LFB32
 9803 06ec 02000000 		.4byte	.LCFI94
 9804 06f0 0200     		.2byte	0x2
 9805 06f2 7D       		.byte	0x7d
 9806 06f3 00       		.sleb128 0
 9807 06f4 02000000 		.4byte	.LCFI94
 9808 06f8 04000000 		.4byte	.LCFI95
 9809 06fc 0200     		.2byte	0x2
 9810 06fe 7D       		.byte	0x7d
 9811 06ff 08       		.sleb128 8
 9812 0700 04000000 		.4byte	.LCFI95
 9813 0704 06000000 		.4byte	.LCFI96
 9814 0708 0200     		.2byte	0x2
 9815 070a 7D       		.byte	0x7d
 9816 070b 10       		.sleb128 16
 9817 070c 06000000 		.4byte	.LCFI96
 9818 0710 38000000 		.4byte	.LFE32
 9819 0714 0200     		.2byte	0x2
 9820 0716 77       		.byte	0x77
 9821 0717 10       		.sleb128 16
 9822 0718 00000000 		.4byte	0
 9823 071c 00000000 		.4byte	0
 9824              	.LLST33:
 9825 0720 00000000 		.4byte	.LFB33
 9826 0724 02000000 		.4byte	.LCFI97
 9827 0728 0200     		.2byte	0x2
 9828 072a 7D       		.byte	0x7d
 9829 072b 00       		.sleb128 0
 9830 072c 02000000 		.4byte	.LCFI97
 9831 0730 04000000 		.4byte	.LCFI98
 9832 0734 0200     		.2byte	0x2
 9833 0736 7D       		.byte	0x7d
 9834 0737 08       		.sleb128 8
 9835 0738 04000000 		.4byte	.LCFI98
 9836 073c 06000000 		.4byte	.LCFI99
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 205


 9837 0740 0200     		.2byte	0x2
 9838 0742 7D       		.byte	0x7d
 9839 0743 10       		.sleb128 16
 9840 0744 06000000 		.4byte	.LCFI99
 9841 0748 30000000 		.4byte	.LFE33
 9842 074c 0200     		.2byte	0x2
 9843 074e 77       		.byte	0x77
 9844 074f 10       		.sleb128 16
 9845 0750 00000000 		.4byte	0
 9846 0754 00000000 		.4byte	0
 9847              	.LLST34:
 9848 0758 00000000 		.4byte	.LFB34
 9849 075c 02000000 		.4byte	.LCFI100
 9850 0760 0200     		.2byte	0x2
 9851 0762 7D       		.byte	0x7d
 9852 0763 00       		.sleb128 0
 9853 0764 02000000 		.4byte	.LCFI100
 9854 0768 04000000 		.4byte	.LCFI101
 9855 076c 0200     		.2byte	0x2
 9856 076e 7D       		.byte	0x7d
 9857 076f 08       		.sleb128 8
 9858 0770 04000000 		.4byte	.LCFI101
 9859 0774 06000000 		.4byte	.LCFI102
 9860 0778 0200     		.2byte	0x2
 9861 077a 7D       		.byte	0x7d
 9862 077b 10       		.sleb128 16
 9863 077c 06000000 		.4byte	.LCFI102
 9864 0780 30000000 		.4byte	.LFE34
 9865 0784 0200     		.2byte	0x2
 9866 0786 77       		.byte	0x77
 9867 0787 10       		.sleb128 16
 9868 0788 00000000 		.4byte	0
 9869 078c 00000000 		.4byte	0
 9870              	.LLST35:
 9871 0790 00000000 		.4byte	.LFB35
 9872 0794 02000000 		.4byte	.LCFI103
 9873 0798 0200     		.2byte	0x2
 9874 079a 7D       		.byte	0x7d
 9875 079b 00       		.sleb128 0
 9876 079c 02000000 		.4byte	.LCFI103
 9877 07a0 04000000 		.4byte	.LCFI104
 9878 07a4 0200     		.2byte	0x2
 9879 07a6 7D       		.byte	0x7d
 9880 07a7 08       		.sleb128 8
 9881 07a8 04000000 		.4byte	.LCFI104
 9882 07ac 06000000 		.4byte	.LCFI105
 9883 07b0 0200     		.2byte	0x2
 9884 07b2 7D       		.byte	0x7d
 9885 07b3 10       		.sleb128 16
 9886 07b4 06000000 		.4byte	.LCFI105
 9887 07b8 36000000 		.4byte	.LFE35
 9888 07bc 0200     		.2byte	0x2
 9889 07be 77       		.byte	0x77
 9890 07bf 10       		.sleb128 16
 9891 07c0 00000000 		.4byte	0
 9892 07c4 00000000 		.4byte	0
 9893              	.LLST36:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 206


 9894 07c8 00000000 		.4byte	.LFB36
 9895 07cc 02000000 		.4byte	.LCFI106
 9896 07d0 0200     		.2byte	0x2
 9897 07d2 7D       		.byte	0x7d
 9898 07d3 00       		.sleb128 0
 9899 07d4 02000000 		.4byte	.LCFI106
 9900 07d8 04000000 		.4byte	.LCFI107
 9901 07dc 0200     		.2byte	0x2
 9902 07de 7D       		.byte	0x7d
 9903 07df 08       		.sleb128 8
 9904 07e0 04000000 		.4byte	.LCFI107
 9905 07e4 06000000 		.4byte	.LCFI108
 9906 07e8 0200     		.2byte	0x2
 9907 07ea 7D       		.byte	0x7d
 9908 07eb 10       		.sleb128 16
 9909 07ec 06000000 		.4byte	.LCFI108
 9910 07f0 2E000000 		.4byte	.LFE36
 9911 07f4 0200     		.2byte	0x2
 9912 07f6 77       		.byte	0x77
 9913 07f7 10       		.sleb128 16
 9914 07f8 00000000 		.4byte	0
 9915 07fc 00000000 		.4byte	0
 9916              	.LLST37:
 9917 0800 00000000 		.4byte	.LFB37
 9918 0804 02000000 		.4byte	.LCFI109
 9919 0808 0200     		.2byte	0x2
 9920 080a 7D       		.byte	0x7d
 9921 080b 00       		.sleb128 0
 9922 080c 02000000 		.4byte	.LCFI109
 9923 0810 04000000 		.4byte	.LCFI110
 9924 0814 0200     		.2byte	0x2
 9925 0816 7D       		.byte	0x7d
 9926 0817 08       		.sleb128 8
 9927 0818 04000000 		.4byte	.LCFI110
 9928 081c 06000000 		.4byte	.LCFI111
 9929 0820 0200     		.2byte	0x2
 9930 0822 7D       		.byte	0x7d
 9931 0823 10       		.sleb128 16
 9932 0824 06000000 		.4byte	.LCFI111
 9933 0828 18000000 		.4byte	.LFE37
 9934 082c 0200     		.2byte	0x2
 9935 082e 77       		.byte	0x77
 9936 082f 10       		.sleb128 16
 9937 0830 00000000 		.4byte	0
 9938 0834 00000000 		.4byte	0
 9939              	.LLST38:
 9940 0838 00000000 		.4byte	.LFB38
 9941 083c 02000000 		.4byte	.LCFI112
 9942 0840 0200     		.2byte	0x2
 9943 0842 7D       		.byte	0x7d
 9944 0843 00       		.sleb128 0
 9945 0844 02000000 		.4byte	.LCFI112
 9946 0848 04000000 		.4byte	.LCFI113
 9947 084c 0200     		.2byte	0x2
 9948 084e 7D       		.byte	0x7d
 9949 084f 08       		.sleb128 8
 9950 0850 04000000 		.4byte	.LCFI113
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 207


 9951 0854 06000000 		.4byte	.LCFI114
 9952 0858 0200     		.2byte	0x2
 9953 085a 7D       		.byte	0x7d
 9954 085b 10       		.sleb128 16
 9955 085c 06000000 		.4byte	.LCFI114
 9956 0860 38000000 		.4byte	.LFE38
 9957 0864 0200     		.2byte	0x2
 9958 0866 77       		.byte	0x77
 9959 0867 10       		.sleb128 16
 9960 0868 00000000 		.4byte	0
 9961 086c 00000000 		.4byte	0
 9962              	.LLST39:
 9963 0870 00000000 		.4byte	.LFB39
 9964 0874 02000000 		.4byte	.LCFI115
 9965 0878 0200     		.2byte	0x2
 9966 087a 7D       		.byte	0x7d
 9967 087b 00       		.sleb128 0
 9968 087c 02000000 		.4byte	.LCFI115
 9969 0880 04000000 		.4byte	.LCFI116
 9970 0884 0200     		.2byte	0x2
 9971 0886 7D       		.byte	0x7d
 9972 0887 08       		.sleb128 8
 9973 0888 04000000 		.4byte	.LCFI116
 9974 088c 06000000 		.4byte	.LCFI117
 9975 0890 0200     		.2byte	0x2
 9976 0892 7D       		.byte	0x7d
 9977 0893 18       		.sleb128 24
 9978 0894 06000000 		.4byte	.LCFI117
 9979 0898 50000000 		.4byte	.LFE39
 9980 089c 0200     		.2byte	0x2
 9981 089e 77       		.byte	0x77
 9982 089f 18       		.sleb128 24
 9983 08a0 00000000 		.4byte	0
 9984 08a4 00000000 		.4byte	0
 9985              	.LLST40:
 9986 08a8 00000000 		.4byte	.LFB40
 9987 08ac 02000000 		.4byte	.LCFI118
 9988 08b0 0200     		.2byte	0x2
 9989 08b2 7D       		.byte	0x7d
 9990 08b3 00       		.sleb128 0
 9991 08b4 02000000 		.4byte	.LCFI118
 9992 08b8 04000000 		.4byte	.LCFI119
 9993 08bc 0200     		.2byte	0x2
 9994 08be 7D       		.byte	0x7d
 9995 08bf 0C       		.sleb128 12
 9996 08c0 04000000 		.4byte	.LCFI119
 9997 08c4 06000000 		.4byte	.LCFI120
 9998 08c8 0200     		.2byte	0x2
 9999 08ca 7D       		.byte	0x7d
 10000 08cb 20       		.sleb128 32
 10001 08cc 06000000 		.4byte	.LCFI120
 10002 08d0 68000000 		.4byte	.LFE40
 10003 08d4 0200     		.2byte	0x2
 10004 08d6 77       		.byte	0x77
 10005 08d7 20       		.sleb128 32
 10006 08d8 00000000 		.4byte	0
 10007 08dc 00000000 		.4byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 208


 10008              	.LLST41:
 10009 08e0 00000000 		.4byte	.LFB41
 10010 08e4 02000000 		.4byte	.LCFI121
 10011 08e8 0200     		.2byte	0x2
 10012 08ea 7D       		.byte	0x7d
 10013 08eb 00       		.sleb128 0
 10014 08ec 02000000 		.4byte	.LCFI121
 10015 08f0 04000000 		.4byte	.LCFI122
 10016 08f4 0200     		.2byte	0x2
 10017 08f6 7D       		.byte	0x7d
 10018 08f7 0C       		.sleb128 12
 10019 08f8 04000000 		.4byte	.LCFI122
 10020 08fc 06000000 		.4byte	.LCFI123
 10021 0900 0200     		.2byte	0x2
 10022 0902 7D       		.byte	0x7d
 10023 0903 20       		.sleb128 32
 10024 0904 06000000 		.4byte	.LCFI123
 10025 0908 68000000 		.4byte	.LFE41
 10026 090c 0200     		.2byte	0x2
 10027 090e 77       		.byte	0x77
 10028 090f 20       		.sleb128 32
 10029 0910 00000000 		.4byte	0
 10030 0914 00000000 		.4byte	0
 10031              	.LLST42:
 10032 0918 00000000 		.4byte	.LFB42
 10033 091c 02000000 		.4byte	.LCFI124
 10034 0920 0200     		.2byte	0x2
 10035 0922 7D       		.byte	0x7d
 10036 0923 00       		.sleb128 0
 10037 0924 02000000 		.4byte	.LCFI124
 10038 0928 04000000 		.4byte	.LCFI125
 10039 092c 0200     		.2byte	0x2
 10040 092e 7D       		.byte	0x7d
 10041 092f 08       		.sleb128 8
 10042 0930 04000000 		.4byte	.LCFI125
 10043 0934 06000000 		.4byte	.LCFI126
 10044 0938 0200     		.2byte	0x2
 10045 093a 7D       		.byte	0x7d
 10046 093b 20       		.sleb128 32
 10047 093c 06000000 		.4byte	.LCFI126
 10048 0940 10010000 		.4byte	.LFE42
 10049 0944 0200     		.2byte	0x2
 10050 0946 77       		.byte	0x77
 10051 0947 20       		.sleb128 32
 10052 0948 00000000 		.4byte	0
 10053 094c 00000000 		.4byte	0
 10054              	.LLST43:
 10055 0950 00000000 		.4byte	.LFB43
 10056 0954 02000000 		.4byte	.LCFI127
 10057 0958 0200     		.2byte	0x2
 10058 095a 7D       		.byte	0x7d
 10059 095b 00       		.sleb128 0
 10060 095c 02000000 		.4byte	.LCFI127
 10061 0960 04000000 		.4byte	.LCFI128
 10062 0964 0200     		.2byte	0x2
 10063 0966 7D       		.byte	0x7d
 10064 0967 08       		.sleb128 8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 209


 10065 0968 04000000 		.4byte	.LCFI128
 10066 096c 06000000 		.4byte	.LCFI129
 10067 0970 0200     		.2byte	0x2
 10068 0972 7D       		.byte	0x7d
 10069 0973 20       		.sleb128 32
 10070 0974 06000000 		.4byte	.LCFI129
 10071 0978 1C010000 		.4byte	.LFE43
 10072 097c 0200     		.2byte	0x2
 10073 097e 77       		.byte	0x77
 10074 097f 20       		.sleb128 32
 10075 0980 00000000 		.4byte	0
 10076 0984 00000000 		.4byte	0
 10077              	.LLST44:
 10078 0988 00000000 		.4byte	.LFB44
 10079 098c 02000000 		.4byte	.LCFI130
 10080 0990 0200     		.2byte	0x2
 10081 0992 7D       		.byte	0x7d
 10082 0993 00       		.sleb128 0
 10083 0994 02000000 		.4byte	.LCFI130
 10084 0998 04000000 		.4byte	.LCFI131
 10085 099c 0200     		.2byte	0x2
 10086 099e 7D       		.byte	0x7d
 10087 099f 08       		.sleb128 8
 10088 09a0 04000000 		.4byte	.LCFI131
 10089 09a4 06000000 		.4byte	.LCFI132
 10090 09a8 0200     		.2byte	0x2
 10091 09aa 7D       		.byte	0x7d
 10092 09ab 20       		.sleb128 32
 10093 09ac 06000000 		.4byte	.LCFI132
 10094 09b0 E8000000 		.4byte	.LFE44
 10095 09b4 0200     		.2byte	0x2
 10096 09b6 77       		.byte	0x77
 10097 09b7 20       		.sleb128 32
 10098 09b8 00000000 		.4byte	0
 10099 09bc 00000000 		.4byte	0
 10100              	.LLST45:
 10101 09c0 00000000 		.4byte	.LFB45
 10102 09c4 02000000 		.4byte	.LCFI133
 10103 09c8 0200     		.2byte	0x2
 10104 09ca 7D       		.byte	0x7d
 10105 09cb 00       		.sleb128 0
 10106 09cc 02000000 		.4byte	.LCFI133
 10107 09d0 04000000 		.4byte	.LCFI134
 10108 09d4 0200     		.2byte	0x2
 10109 09d6 7D       		.byte	0x7d
 10110 09d7 08       		.sleb128 8
 10111 09d8 04000000 		.4byte	.LCFI134
 10112 09dc 06000000 		.4byte	.LCFI135
 10113 09e0 0200     		.2byte	0x2
 10114 09e2 7D       		.byte	0x7d
 10115 09e3 18       		.sleb128 24
 10116 09e4 06000000 		.4byte	.LCFI135
 10117 09e8 9C000000 		.4byte	.LFE45
 10118 09ec 0200     		.2byte	0x2
 10119 09ee 77       		.byte	0x77
 10120 09ef 18       		.sleb128 24
 10121 09f0 00000000 		.4byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 210


 10122 09f4 00000000 		.4byte	0
 10123              	.LLST46:
 10124 09f8 00000000 		.4byte	.LFB46
 10125 09fc 02000000 		.4byte	.LCFI136
 10126 0a00 0200     		.2byte	0x2
 10127 0a02 7D       		.byte	0x7d
 10128 0a03 00       		.sleb128 0
 10129 0a04 02000000 		.4byte	.LCFI136
 10130 0a08 04000000 		.4byte	.LCFI137
 10131 0a0c 0200     		.2byte	0x2
 10132 0a0e 7D       		.byte	0x7d
 10133 0a0f 0C       		.sleb128 12
 10134 0a10 04000000 		.4byte	.LCFI137
 10135 0a14 06000000 		.4byte	.LCFI138
 10136 0a18 0200     		.2byte	0x2
 10137 0a1a 7D       		.byte	0x7d
 10138 0a1b 30       		.sleb128 48
 10139 0a1c 06000000 		.4byte	.LCFI138
 10140 0a20 3A010000 		.4byte	.LFE46
 10141 0a24 0200     		.2byte	0x2
 10142 0a26 77       		.byte	0x77
 10143 0a27 30       		.sleb128 48
 10144 0a28 00000000 		.4byte	0
 10145 0a2c 00000000 		.4byte	0
 10146              	.LLST47:
 10147 0a30 00000000 		.4byte	.LFB47
 10148 0a34 02000000 		.4byte	.LCFI139
 10149 0a38 0200     		.2byte	0x2
 10150 0a3a 7D       		.byte	0x7d
 10151 0a3b 00       		.sleb128 0
 10152 0a3c 02000000 		.4byte	.LCFI139
 10153 0a40 04000000 		.4byte	.LCFI140
 10154 0a44 0200     		.2byte	0x2
 10155 0a46 7D       		.byte	0x7d
 10156 0a47 08       		.sleb128 8
 10157 0a48 04000000 		.4byte	.LCFI140
 10158 0a4c 06000000 		.4byte	.LCFI141
 10159 0a50 0200     		.2byte	0x2
 10160 0a52 7D       		.byte	0x7d
 10161 0a53 20       		.sleb128 32
 10162 0a54 06000000 		.4byte	.LCFI141
 10163 0a58 30020000 		.4byte	.LFE47
 10164 0a5c 0200     		.2byte	0x2
 10165 0a5e 77       		.byte	0x77
 10166 0a5f 20       		.sleb128 32
 10167 0a60 00000000 		.4byte	0
 10168 0a64 00000000 		.4byte	0
 10169              	.LLST48:
 10170 0a68 00000000 		.4byte	.LFB48
 10171 0a6c 02000000 		.4byte	.LCFI142
 10172 0a70 0200     		.2byte	0x2
 10173 0a72 7D       		.byte	0x7d
 10174 0a73 00       		.sleb128 0
 10175 0a74 02000000 		.4byte	.LCFI142
 10176 0a78 04000000 		.4byte	.LCFI143
 10177 0a7c 0200     		.2byte	0x2
 10178 0a7e 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 211


 10179 0a7f 08       		.sleb128 8
 10180 0a80 04000000 		.4byte	.LCFI143
 10181 0a84 06000000 		.4byte	.LCFI144
 10182 0a88 0200     		.2byte	0x2
 10183 0a8a 7D       		.byte	0x7d
 10184 0a8b 18       		.sleb128 24
 10185 0a8c 06000000 		.4byte	.LCFI144
 10186 0a90 D4000000 		.4byte	.LFE48
 10187 0a94 0200     		.2byte	0x2
 10188 0a96 77       		.byte	0x77
 10189 0a97 18       		.sleb128 24
 10190 0a98 00000000 		.4byte	0
 10191 0a9c 00000000 		.4byte	0
 10192              	.LLST49:
 10193 0aa0 00000000 		.4byte	.LFB49
 10194 0aa4 02000000 		.4byte	.LCFI145
 10195 0aa8 0200     		.2byte	0x2
 10196 0aaa 7D       		.byte	0x7d
 10197 0aab 00       		.sleb128 0
 10198 0aac 02000000 		.4byte	.LCFI145
 10199 0ab0 04000000 		.4byte	.LCFI146
 10200 0ab4 0200     		.2byte	0x2
 10201 0ab6 7D       		.byte	0x7d
 10202 0ab7 08       		.sleb128 8
 10203 0ab8 04000000 		.4byte	.LCFI146
 10204 0abc 06000000 		.4byte	.LCFI147
 10205 0ac0 0200     		.2byte	0x2
 10206 0ac2 7D       		.byte	0x7d
 10207 0ac3 28       		.sleb128 40
 10208 0ac4 06000000 		.4byte	.LCFI147
 10209 0ac8 DC000000 		.4byte	.LFE49
 10210 0acc 0200     		.2byte	0x2
 10211 0ace 77       		.byte	0x77
 10212 0acf 28       		.sleb128 40
 10213 0ad0 00000000 		.4byte	0
 10214 0ad4 00000000 		.4byte	0
 10215              	.LLST50:
 10216 0ad8 00000000 		.4byte	.LFB50
 10217 0adc 02000000 		.4byte	.LCFI148
 10218 0ae0 0200     		.2byte	0x2
 10219 0ae2 7D       		.byte	0x7d
 10220 0ae3 00       		.sleb128 0
 10221 0ae4 02000000 		.4byte	.LCFI148
 10222 0ae8 04000000 		.4byte	.LCFI149
 10223 0aec 0200     		.2byte	0x2
 10224 0aee 7D       		.byte	0x7d
 10225 0aef 08       		.sleb128 8
 10226 0af0 04000000 		.4byte	.LCFI149
 10227 0af4 06000000 		.4byte	.LCFI150
 10228 0af8 0200     		.2byte	0x2
 10229 0afa 7D       		.byte	0x7d
 10230 0afb 18       		.sleb128 24
 10231 0afc 06000000 		.4byte	.LCFI150
 10232 0b00 3A000000 		.4byte	.LFE50
 10233 0b04 0200     		.2byte	0x2
 10234 0b06 77       		.byte	0x77
 10235 0b07 18       		.sleb128 24
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 212


 10236 0b08 00000000 		.4byte	0
 10237 0b0c 00000000 		.4byte	0
 10238              	.LLST51:
 10239 0b10 00000000 		.4byte	.LFB51
 10240 0b14 02000000 		.4byte	.LCFI151
 10241 0b18 0200     		.2byte	0x2
 10242 0b1a 7D       		.byte	0x7d
 10243 0b1b 00       		.sleb128 0
 10244 0b1c 02000000 		.4byte	.LCFI151
 10245 0b20 04000000 		.4byte	.LCFI152
 10246 0b24 0200     		.2byte	0x2
 10247 0b26 7D       		.byte	0x7d
 10248 0b27 08       		.sleb128 8
 10249 0b28 04000000 		.4byte	.LCFI152
 10250 0b2c 10000000 		.4byte	.LFE51
 10251 0b30 0200     		.2byte	0x2
 10252 0b32 77       		.byte	0x77
 10253 0b33 08       		.sleb128 8
 10254 0b34 00000000 		.4byte	0
 10255 0b38 00000000 		.4byte	0
 10256              	.LLST52:
 10257 0b3c 00000000 		.4byte	.LFB52
 10258 0b40 02000000 		.4byte	.LCFI153
 10259 0b44 0200     		.2byte	0x2
 10260 0b46 7D       		.byte	0x7d
 10261 0b47 00       		.sleb128 0
 10262 0b48 02000000 		.4byte	.LCFI153
 10263 0b4c 04000000 		.4byte	.LCFI154
 10264 0b50 0200     		.2byte	0x2
 10265 0b52 7D       		.byte	0x7d
 10266 0b53 08       		.sleb128 8
 10267 0b54 04000000 		.4byte	.LCFI154
 10268 0b58 06000000 		.4byte	.LCFI155
 10269 0b5c 0200     		.2byte	0x2
 10270 0b5e 7D       		.byte	0x7d
 10271 0b5f 10       		.sleb128 16
 10272 0b60 06000000 		.4byte	.LCFI155
 10273 0b64 16000000 		.4byte	.LFE52
 10274 0b68 0200     		.2byte	0x2
 10275 0b6a 77       		.byte	0x77
 10276 0b6b 10       		.sleb128 16
 10277 0b6c 00000000 		.4byte	0
 10278 0b70 00000000 		.4byte	0
 10279              	.LLST53:
 10280 0b74 00000000 		.4byte	.LFB53
 10281 0b78 02000000 		.4byte	.LCFI156
 10282 0b7c 0200     		.2byte	0x2
 10283 0b7e 7D       		.byte	0x7d
 10284 0b7f 00       		.sleb128 0
 10285 0b80 02000000 		.4byte	.LCFI156
 10286 0b84 04000000 		.4byte	.LCFI157
 10287 0b88 0200     		.2byte	0x2
 10288 0b8a 7D       		.byte	0x7d
 10289 0b8b 08       		.sleb128 8
 10290 0b8c 04000000 		.4byte	.LCFI157
 10291 0b90 06000000 		.4byte	.LCFI158
 10292 0b94 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 213


 10293 0b96 7D       		.byte	0x7d
 10294 0b97 10       		.sleb128 16
 10295 0b98 06000000 		.4byte	.LCFI158
 10296 0b9c 16000000 		.4byte	.LFE53
 10297 0ba0 0200     		.2byte	0x2
 10298 0ba2 77       		.byte	0x77
 10299 0ba3 10       		.sleb128 16
 10300 0ba4 00000000 		.4byte	0
 10301 0ba8 00000000 		.4byte	0
 10302              	.LLST54:
 10303 0bac 00000000 		.4byte	.LFB54
 10304 0bb0 02000000 		.4byte	.LCFI159
 10305 0bb4 0200     		.2byte	0x2
 10306 0bb6 7D       		.byte	0x7d
 10307 0bb7 00       		.sleb128 0
 10308 0bb8 02000000 		.4byte	.LCFI159
 10309 0bbc 04000000 		.4byte	.LCFI160
 10310 0bc0 0200     		.2byte	0x2
 10311 0bc2 7D       		.byte	0x7d
 10312 0bc3 08       		.sleb128 8
 10313 0bc4 04000000 		.4byte	.LCFI160
 10314 0bc8 06000000 		.4byte	.LCFI161
 10315 0bcc 0200     		.2byte	0x2
 10316 0bce 7D       		.byte	0x7d
 10317 0bcf 18       		.sleb128 24
 10318 0bd0 06000000 		.4byte	.LCFI161
 10319 0bd4 70010000 		.4byte	.LFE54
 10320 0bd8 0200     		.2byte	0x2
 10321 0bda 77       		.byte	0x77
 10322 0bdb 18       		.sleb128 24
 10323 0bdc 00000000 		.4byte	0
 10324 0be0 00000000 		.4byte	0
 10325              	.LLST55:
 10326 0be4 00000000 		.4byte	.LFB55
 10327 0be8 02000000 		.4byte	.LCFI162
 10328 0bec 0200     		.2byte	0x2
 10329 0bee 7D       		.byte	0x7d
 10330 0bef 00       		.sleb128 0
 10331 0bf0 02000000 		.4byte	.LCFI162
 10332 0bf4 04000000 		.4byte	.LCFI163
 10333 0bf8 0200     		.2byte	0x2
 10334 0bfa 7D       		.byte	0x7d
 10335 0bfb 08       		.sleb128 8
 10336 0bfc 04000000 		.4byte	.LCFI163
 10337 0c00 06000000 		.4byte	.LCFI164
 10338 0c04 0200     		.2byte	0x2
 10339 0c06 7D       		.byte	0x7d
 10340 0c07 10       		.sleb128 16
 10341 0c08 06000000 		.4byte	.LCFI164
 10342 0c0c 50000000 		.4byte	.LFE55
 10343 0c10 0200     		.2byte	0x2
 10344 0c12 77       		.byte	0x77
 10345 0c13 10       		.sleb128 16
 10346 0c14 00000000 		.4byte	0
 10347 0c18 00000000 		.4byte	0
 10348              	.LLST56:
 10349 0c1c 00000000 		.4byte	.LFB56
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 214


 10350 0c20 02000000 		.4byte	.LCFI165
 10351 0c24 0200     		.2byte	0x2
 10352 0c26 7D       		.byte	0x7d
 10353 0c27 00       		.sleb128 0
 10354 0c28 02000000 		.4byte	.LCFI165
 10355 0c2c 04000000 		.4byte	.LCFI166
 10356 0c30 0200     		.2byte	0x2
 10357 0c32 7D       		.byte	0x7d
 10358 0c33 0C       		.sleb128 12
 10359 0c34 04000000 		.4byte	.LCFI166
 10360 0c38 06000000 		.4byte	.LCFI167
 10361 0c3c 0200     		.2byte	0x2
 10362 0c3e 7D       		.byte	0x7d
 10363 0c3f 20       		.sleb128 32
 10364 0c40 06000000 		.4byte	.LCFI167
 10365 0c44 4C000000 		.4byte	.LFE56
 10366 0c48 0200     		.2byte	0x2
 10367 0c4a 77       		.byte	0x77
 10368 0c4b 20       		.sleb128 32
 10369 0c4c 00000000 		.4byte	0
 10370 0c50 00000000 		.4byte	0
 10371              	.LLST57:
 10372 0c54 00000000 		.4byte	.LFB57
 10373 0c58 02000000 		.4byte	.LCFI168
 10374 0c5c 0200     		.2byte	0x2
 10375 0c5e 7D       		.byte	0x7d
 10376 0c5f 00       		.sleb128 0
 10377 0c60 02000000 		.4byte	.LCFI168
 10378 0c64 04000000 		.4byte	.LCFI169
 10379 0c68 0200     		.2byte	0x2
 10380 0c6a 7D       		.byte	0x7d
 10381 0c6b 0C       		.sleb128 12
 10382 0c6c 04000000 		.4byte	.LCFI169
 10383 0c70 06000000 		.4byte	.LCFI170
 10384 0c74 0200     		.2byte	0x2
 10385 0c76 7D       		.byte	0x7d
 10386 0c77 20       		.sleb128 32
 10387 0c78 06000000 		.4byte	.LCFI170
 10388 0c7c 44000000 		.4byte	.LFE57
 10389 0c80 0200     		.2byte	0x2
 10390 0c82 77       		.byte	0x77
 10391 0c83 20       		.sleb128 32
 10392 0c84 00000000 		.4byte	0
 10393 0c88 00000000 		.4byte	0
 10394              	.LLST58:
 10395 0c8c 00000000 		.4byte	.LFB58
 10396 0c90 02000000 		.4byte	.LCFI171
 10397 0c94 0200     		.2byte	0x2
 10398 0c96 7D       		.byte	0x7d
 10399 0c97 00       		.sleb128 0
 10400 0c98 02000000 		.4byte	.LCFI171
 10401 0c9c 04000000 		.4byte	.LCFI172
 10402 0ca0 0200     		.2byte	0x2
 10403 0ca2 7D       		.byte	0x7d
 10404 0ca3 0C       		.sleb128 12
 10405 0ca4 04000000 		.4byte	.LCFI172
 10406 0ca8 06000000 		.4byte	.LCFI173
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 215


 10407 0cac 0200     		.2byte	0x2
 10408 0cae 7D       		.byte	0x7d
 10409 0caf 20       		.sleb128 32
 10410 0cb0 06000000 		.4byte	.LCFI173
 10411 0cb4 8C000000 		.4byte	.LFE58
 10412 0cb8 0200     		.2byte	0x2
 10413 0cba 77       		.byte	0x77
 10414 0cbb 20       		.sleb128 32
 10415 0cbc 00000000 		.4byte	0
 10416 0cc0 00000000 		.4byte	0
 10417              	.LLST59:
 10418 0cc4 00000000 		.4byte	.LFB59
 10419 0cc8 02000000 		.4byte	.LCFI174
 10420 0ccc 0200     		.2byte	0x2
 10421 0cce 7D       		.byte	0x7d
 10422 0ccf 00       		.sleb128 0
 10423 0cd0 02000000 		.4byte	.LCFI174
 10424 0cd4 04000000 		.4byte	.LCFI175
 10425 0cd8 0200     		.2byte	0x2
 10426 0cda 7D       		.byte	0x7d
 10427 0cdb 0C       		.sleb128 12
 10428 0cdc 04000000 		.4byte	.LCFI175
 10429 0ce0 06000000 		.4byte	.LCFI176
 10430 0ce4 0200     		.2byte	0x2
 10431 0ce6 7D       		.byte	0x7d
 10432 0ce7 20       		.sleb128 32
 10433 0ce8 06000000 		.4byte	.LCFI176
 10434 0cec 84000000 		.4byte	.LFE59
 10435 0cf0 0200     		.2byte	0x2
 10436 0cf2 77       		.byte	0x77
 10437 0cf3 20       		.sleb128 32
 10438 0cf4 00000000 		.4byte	0
 10439 0cf8 00000000 		.4byte	0
 10440              	.LLST60:
 10441 0cfc 00000000 		.4byte	.LFB60
 10442 0d00 02000000 		.4byte	.LCFI177
 10443 0d04 0200     		.2byte	0x2
 10444 0d06 7D       		.byte	0x7d
 10445 0d07 00       		.sleb128 0
 10446 0d08 02000000 		.4byte	.LCFI177
 10447 0d0c 04000000 		.4byte	.LCFI178
 10448 0d10 0200     		.2byte	0x2
 10449 0d12 7D       		.byte	0x7d
 10450 0d13 08       		.sleb128 8
 10451 0d14 04000000 		.4byte	.LCFI178
 10452 0d18 06000000 		.4byte	.LCFI179
 10453 0d1c 0200     		.2byte	0x2
 10454 0d1e 7D       		.byte	0x7d
 10455 0d1f 10       		.sleb128 16
 10456 0d20 06000000 		.4byte	.LCFI179
 10457 0d24 20000000 		.4byte	.LFE60
 10458 0d28 0200     		.2byte	0x2
 10459 0d2a 77       		.byte	0x77
 10460 0d2b 10       		.sleb128 16
 10461 0d2c 00000000 		.4byte	0
 10462 0d30 00000000 		.4byte	0
 10463              	.LLST61:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 216


 10464 0d34 00000000 		.4byte	.LFB61
 10465 0d38 02000000 		.4byte	.LCFI180
 10466 0d3c 0200     		.2byte	0x2
 10467 0d3e 7D       		.byte	0x7d
 10468 0d3f 00       		.sleb128 0
 10469 0d40 02000000 		.4byte	.LCFI180
 10470 0d44 04000000 		.4byte	.LCFI181
 10471 0d48 0200     		.2byte	0x2
 10472 0d4a 7D       		.byte	0x7d
 10473 0d4b 08       		.sleb128 8
 10474 0d4c 04000000 		.4byte	.LCFI181
 10475 0d50 06000000 		.4byte	.LCFI182
 10476 0d54 0200     		.2byte	0x2
 10477 0d56 7D       		.byte	0x7d
 10478 0d57 10       		.sleb128 16
 10479 0d58 06000000 		.4byte	.LCFI182
 10480 0d5c 24000000 		.4byte	.LFE61
 10481 0d60 0200     		.2byte	0x2
 10482 0d62 77       		.byte	0x77
 10483 0d63 10       		.sleb128 16
 10484 0d64 00000000 		.4byte	0
 10485 0d68 00000000 		.4byte	0
 10486              	.LLST62:
 10487 0d6c 00000000 		.4byte	.LFB62
 10488 0d70 02000000 		.4byte	.LCFI183
 10489 0d74 0200     		.2byte	0x2
 10490 0d76 7D       		.byte	0x7d
 10491 0d77 00       		.sleb128 0
 10492 0d78 02000000 		.4byte	.LCFI183
 10493 0d7c 04000000 		.4byte	.LCFI184
 10494 0d80 0200     		.2byte	0x2
 10495 0d82 7D       		.byte	0x7d
 10496 0d83 08       		.sleb128 8
 10497 0d84 04000000 		.4byte	.LCFI184
 10498 0d88 06000000 		.4byte	.LCFI185
 10499 0d8c 0200     		.2byte	0x2
 10500 0d8e 7D       		.byte	0x7d
 10501 0d8f 10       		.sleb128 16
 10502 0d90 06000000 		.4byte	.LCFI185
 10503 0d94 26000000 		.4byte	.LFE62
 10504 0d98 0200     		.2byte	0x2
 10505 0d9a 77       		.byte	0x77
 10506 0d9b 10       		.sleb128 16
 10507 0d9c 00000000 		.4byte	0
 10508 0da0 00000000 		.4byte	0
 10509              	.LLST63:
 10510 0da4 00000000 		.4byte	.LFB63
 10511 0da8 02000000 		.4byte	.LCFI186
 10512 0dac 0200     		.2byte	0x2
 10513 0dae 7D       		.byte	0x7d
 10514 0daf 00       		.sleb128 0
 10515 0db0 02000000 		.4byte	.LCFI186
 10516 0db4 04000000 		.4byte	.LCFI187
 10517 0db8 0200     		.2byte	0x2
 10518 0dba 7D       		.byte	0x7d
 10519 0dbb 0C       		.sleb128 12
 10520 0dbc 04000000 		.4byte	.LCFI187
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 217


 10521 0dc0 06000000 		.4byte	.LCFI188
 10522 0dc4 0200     		.2byte	0x2
 10523 0dc6 7D       		.byte	0x7d
 10524 0dc7 20       		.sleb128 32
 10525 0dc8 06000000 		.4byte	.LCFI188
 10526 0dcc 72000000 		.4byte	.LFE63
 10527 0dd0 0200     		.2byte	0x2
 10528 0dd2 77       		.byte	0x77
 10529 0dd3 20       		.sleb128 32
 10530 0dd4 00000000 		.4byte	0
 10531 0dd8 00000000 		.4byte	0
 10532              	.LLST64:
 10533 0ddc 00000000 		.4byte	.LFB64
 10534 0de0 02000000 		.4byte	.LCFI189
 10535 0de4 0200     		.2byte	0x2
 10536 0de6 7D       		.byte	0x7d
 10537 0de7 00       		.sleb128 0
 10538 0de8 02000000 		.4byte	.LCFI189
 10539 0dec 04000000 		.4byte	.LCFI190
 10540 0df0 0200     		.2byte	0x2
 10541 0df2 7D       		.byte	0x7d
 10542 0df3 0C       		.sleb128 12
 10543 0df4 04000000 		.4byte	.LCFI190
 10544 0df8 06000000 		.4byte	.LCFI191
 10545 0dfc 0200     		.2byte	0x2
 10546 0dfe 7D       		.byte	0x7d
 10547 0dff 20       		.sleb128 32
 10548 0e00 06000000 		.4byte	.LCFI191
 10549 0e04 C0000000 		.4byte	.LFE64
 10550 0e08 0200     		.2byte	0x2
 10551 0e0a 77       		.byte	0x77
 10552 0e0b 20       		.sleb128 32
 10553 0e0c 00000000 		.4byte	0
 10554 0e10 00000000 		.4byte	0
 10555              	.LLST65:
 10556 0e14 00000000 		.4byte	.LFB65
 10557 0e18 02000000 		.4byte	.LCFI192
 10558 0e1c 0200     		.2byte	0x2
 10559 0e1e 7D       		.byte	0x7d
 10560 0e1f 00       		.sleb128 0
 10561 0e20 02000000 		.4byte	.LCFI192
 10562 0e24 04000000 		.4byte	.LCFI193
 10563 0e28 0200     		.2byte	0x2
 10564 0e2a 7D       		.byte	0x7d
 10565 0e2b 08       		.sleb128 8
 10566 0e2c 04000000 		.4byte	.LCFI193
 10567 0e30 06000000 		.4byte	.LCFI194
 10568 0e34 0200     		.2byte	0x2
 10569 0e36 7D       		.byte	0x7d
 10570 0e37 10       		.sleb128 16
 10571 0e38 06000000 		.4byte	.LCFI194
 10572 0e3c 20000000 		.4byte	.LFE65
 10573 0e40 0200     		.2byte	0x2
 10574 0e42 77       		.byte	0x77
 10575 0e43 10       		.sleb128 16
 10576 0e44 00000000 		.4byte	0
 10577 0e48 00000000 		.4byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 218


 10578              	.LLST66:
 10579 0e4c 00000000 		.4byte	.LFB66
 10580 0e50 02000000 		.4byte	.LCFI195
 10581 0e54 0200     		.2byte	0x2
 10582 0e56 7D       		.byte	0x7d
 10583 0e57 00       		.sleb128 0
 10584 0e58 02000000 		.4byte	.LCFI195
 10585 0e5c 04000000 		.4byte	.LCFI196
 10586 0e60 0200     		.2byte	0x2
 10587 0e62 7D       		.byte	0x7d
 10588 0e63 08       		.sleb128 8
 10589 0e64 04000000 		.4byte	.LCFI196
 10590 0e68 06000000 		.4byte	.LCFI197
 10591 0e6c 0200     		.2byte	0x2
 10592 0e6e 7D       		.byte	0x7d
 10593 0e6f 10       		.sleb128 16
 10594 0e70 06000000 		.4byte	.LCFI197
 10595 0e74 1E000000 		.4byte	.LFE66
 10596 0e78 0200     		.2byte	0x2
 10597 0e7a 77       		.byte	0x77
 10598 0e7b 10       		.sleb128 16
 10599 0e7c 00000000 		.4byte	0
 10600 0e80 00000000 		.4byte	0
 10601              	.LLST67:
 10602 0e84 00000000 		.4byte	.LFB67
 10603 0e88 02000000 		.4byte	.LCFI198
 10604 0e8c 0200     		.2byte	0x2
 10605 0e8e 7D       		.byte	0x7d
 10606 0e8f 00       		.sleb128 0
 10607 0e90 02000000 		.4byte	.LCFI198
 10608 0e94 04000000 		.4byte	.LCFI199
 10609 0e98 0200     		.2byte	0x2
 10610 0e9a 7D       		.byte	0x7d
 10611 0e9b 0C       		.sleb128 12
 10612 0e9c 04000000 		.4byte	.LCFI199
 10613 0ea0 06000000 		.4byte	.LCFI200
 10614 0ea4 0200     		.2byte	0x2
 10615 0ea6 7D       		.byte	0x7d
 10616 0ea7 20       		.sleb128 32
 10617 0ea8 06000000 		.4byte	.LCFI200
 10618 0eac F4000000 		.4byte	.LFE67
 10619 0eb0 0200     		.2byte	0x2
 10620 0eb2 77       		.byte	0x77
 10621 0eb3 20       		.sleb128 32
 10622 0eb4 00000000 		.4byte	0
 10623 0eb8 00000000 		.4byte	0
 10624              	.LLST68:
 10625 0ebc 00000000 		.4byte	.LFB68
 10626 0ec0 02000000 		.4byte	.LCFI201
 10627 0ec4 0200     		.2byte	0x2
 10628 0ec6 7D       		.byte	0x7d
 10629 0ec7 00       		.sleb128 0
 10630 0ec8 02000000 		.4byte	.LCFI201
 10631 0ecc 04000000 		.4byte	.LCFI202
 10632 0ed0 0200     		.2byte	0x2
 10633 0ed2 7D       		.byte	0x7d
 10634 0ed3 0C       		.sleb128 12
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 219


 10635 0ed4 04000000 		.4byte	.LCFI202
 10636 0ed8 06000000 		.4byte	.LCFI203
 10637 0edc 0200     		.2byte	0x2
 10638 0ede 7D       		.byte	0x7d
 10639 0edf 28       		.sleb128 40
 10640 0ee0 06000000 		.4byte	.LCFI203
 10641 0ee4 86000000 		.4byte	.LFE68
 10642 0ee8 0200     		.2byte	0x2
 10643 0eea 77       		.byte	0x77
 10644 0eeb 20       		.sleb128 32
 10645 0eec 00000000 		.4byte	0
 10646 0ef0 00000000 		.4byte	0
 10647              	.LLST69:
 10648 0ef4 00000000 		.4byte	.LFB69
 10649 0ef8 02000000 		.4byte	.LCFI204
 10650 0efc 0200     		.2byte	0x2
 10651 0efe 7D       		.byte	0x7d
 10652 0eff 00       		.sleb128 0
 10653 0f00 02000000 		.4byte	.LCFI204
 10654 0f04 04000000 		.4byte	.LCFI205
 10655 0f08 0200     		.2byte	0x2
 10656 0f0a 7D       		.byte	0x7d
 10657 0f0b 08       		.sleb128 8
 10658 0f0c 04000000 		.4byte	.LCFI205
 10659 0f10 06000000 		.4byte	.LCFI206
 10660 0f14 0200     		.2byte	0x2
 10661 0f16 7D       		.byte	0x7d
 10662 0f17 10       		.sleb128 16
 10663 0f18 06000000 		.4byte	.LCFI206
 10664 0f1c 30000000 		.4byte	.LFE69
 10665 0f20 0200     		.2byte	0x2
 10666 0f22 77       		.byte	0x77
 10667 0f23 10       		.sleb128 16
 10668 0f24 00000000 		.4byte	0
 10669 0f28 00000000 		.4byte	0
 10670              	.LLST70:
 10671 0f2c 00000000 		.4byte	.LFB70
 10672 0f30 02000000 		.4byte	.LCFI207
 10673 0f34 0200     		.2byte	0x2
 10674 0f36 7D       		.byte	0x7d
 10675 0f37 00       		.sleb128 0
 10676 0f38 02000000 		.4byte	.LCFI207
 10677 0f3c 04000000 		.4byte	.LCFI208
 10678 0f40 0200     		.2byte	0x2
 10679 0f42 7D       		.byte	0x7d
 10680 0f43 08       		.sleb128 8
 10681 0f44 04000000 		.4byte	.LCFI208
 10682 0f48 06000000 		.4byte	.LCFI209
 10683 0f4c 0200     		.2byte	0x2
 10684 0f4e 7D       		.byte	0x7d
 10685 0f4f 10       		.sleb128 16
 10686 0f50 06000000 		.4byte	.LCFI209
 10687 0f54 24000000 		.4byte	.LFE70
 10688 0f58 0200     		.2byte	0x2
 10689 0f5a 77       		.byte	0x77
 10690 0f5b 10       		.sleb128 16
 10691 0f5c 00000000 		.4byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 220


 10692 0f60 00000000 		.4byte	0
 10693              	.LLST71:
 10694 0f64 00000000 		.4byte	.LFB71
 10695 0f68 02000000 		.4byte	.LCFI210
 10696 0f6c 0200     		.2byte	0x2
 10697 0f6e 7D       		.byte	0x7d
 10698 0f6f 00       		.sleb128 0
 10699 0f70 02000000 		.4byte	.LCFI210
 10700 0f74 04000000 		.4byte	.LCFI211
 10701 0f78 0200     		.2byte	0x2
 10702 0f7a 7D       		.byte	0x7d
 10703 0f7b 08       		.sleb128 8
 10704 0f7c 04000000 		.4byte	.LCFI211
 10705 0f80 06000000 		.4byte	.LCFI212
 10706 0f84 0200     		.2byte	0x2
 10707 0f86 7D       		.byte	0x7d
 10708 0f87 20       		.sleb128 32
 10709 0f88 06000000 		.4byte	.LCFI212
 10710 0f8c BC000000 		.4byte	.LFE71
 10711 0f90 0200     		.2byte	0x2
 10712 0f92 77       		.byte	0x77
 10713 0f93 20       		.sleb128 32
 10714 0f94 00000000 		.4byte	0
 10715 0f98 00000000 		.4byte	0
 10716              	.LLST72:
 10717 0f9c 00000000 		.4byte	.LFB72
 10718 0fa0 02000000 		.4byte	.LCFI213
 10719 0fa4 0200     		.2byte	0x2
 10720 0fa6 7D       		.byte	0x7d
 10721 0fa7 00       		.sleb128 0
 10722 0fa8 02000000 		.4byte	.LCFI213
 10723 0fac 04000000 		.4byte	.LCFI214
 10724 0fb0 0200     		.2byte	0x2
 10725 0fb2 7D       		.byte	0x7d
 10726 0fb3 0C       		.sleb128 12
 10727 0fb4 04000000 		.4byte	.LCFI214
 10728 0fb8 06000000 		.4byte	.LCFI215
 10729 0fbc 0200     		.2byte	0x2
 10730 0fbe 7D       		.byte	0x7d
 10731 0fbf 38       		.sleb128 56
 10732 0fc0 06000000 		.4byte	.LCFI215
 10733 0fc4 54010000 		.4byte	.LFE72
 10734 0fc8 0200     		.2byte	0x2
 10735 0fca 77       		.byte	0x77
 10736 0fcb 30       		.sleb128 48
 10737 0fcc 00000000 		.4byte	0
 10738 0fd0 00000000 		.4byte	0
 10739              		.section	.debug_aranges,"",%progbits
 10740 0000 5C020000 		.4byte	0x25c
 10741 0004 0200     		.2byte	0x2
 10742 0006 00000000 		.4byte	.Ldebug_info0
 10743 000a 04       		.byte	0x4
 10744 000b 00       		.byte	0
 10745 000c 0000     		.2byte	0
 10746 000e 0000     		.2byte	0
 10747 0010 00000000 		.4byte	.LFB0
 10748 0014 0E000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 221


 10749 0018 00000000 		.4byte	.LFB1
 10750 001c 0E000000 		.4byte	.LFE1-.LFB1
 10751 0020 00000000 		.4byte	.LFB2
 10752 0024 18010000 		.4byte	.LFE2-.LFB2
 10753 0028 00000000 		.4byte	.LFB3
 10754 002c 62010000 		.4byte	.LFE3-.LFB3
 10755 0030 00000000 		.4byte	.LFB4
 10756 0034 48000000 		.4byte	.LFE4-.LFB4
 10757 0038 00000000 		.4byte	.LFB5
 10758 003c 4E000000 		.4byte	.LFE5-.LFB5
 10759 0040 00000000 		.4byte	.LFB6
 10760 0044 1A000000 		.4byte	.LFE6-.LFB6
 10761 0048 00000000 		.4byte	.LFB7
 10762 004c 1A000000 		.4byte	.LFE7-.LFB7
 10763 0050 00000000 		.4byte	.LFB8
 10764 0054 1A000000 		.4byte	.LFE8-.LFB8
 10765 0058 00000000 		.4byte	.LFB9
 10766 005c 22000000 		.4byte	.LFE9-.LFB9
 10767 0060 00000000 		.4byte	.LFB10
 10768 0064 1A000000 		.4byte	.LFE10-.LFB10
 10769 0068 00000000 		.4byte	.LFB11
 10770 006c 22000000 		.4byte	.LFE11-.LFB11
 10771 0070 00000000 		.4byte	.LFB12
 10772 0074 1A000000 		.4byte	.LFE12-.LFB12
 10773 0078 00000000 		.4byte	.LFB13
 10774 007c 22000000 		.4byte	.LFE13-.LFB13
 10775 0080 00000000 		.4byte	.LFB14
 10776 0084 1E000000 		.4byte	.LFE14-.LFB14
 10777 0088 00000000 		.4byte	.LFB15
 10778 008c 1E000000 		.4byte	.LFE15-.LFB15
 10779 0090 00000000 		.4byte	.LFB16
 10780 0094 1E000000 		.4byte	.LFE16-.LFB16
 10781 0098 00000000 		.4byte	.LFB17
 10782 009c 82000000 		.4byte	.LFE17-.LFB17
 10783 00a0 00000000 		.4byte	.LFB18
 10784 00a4 52000000 		.4byte	.LFE18-.LFB18
 10785 00a8 00000000 		.4byte	.LFB19
 10786 00ac 82000000 		.4byte	.LFE19-.LFB19
 10787 00b0 00000000 		.4byte	.LFB20
 10788 00b4 52000000 		.4byte	.LFE20-.LFB20
 10789 00b8 00000000 		.4byte	.LFB21
 10790 00bc 36000000 		.4byte	.LFE21-.LFB21
 10791 00c0 00000000 		.4byte	.LFB22
 10792 00c4 38000000 		.4byte	.LFE22-.LFB22
 10793 00c8 00000000 		.4byte	.LFB23
 10794 00cc 44000000 		.4byte	.LFE23-.LFB23
 10795 00d0 00000000 		.4byte	.LFB24
 10796 00d4 38000000 		.4byte	.LFE24-.LFB24
 10797 00d8 00000000 		.4byte	.LFB25
 10798 00dc 44000000 		.4byte	.LFE25-.LFB25
 10799 00e0 00000000 		.4byte	.LFB26
 10800 00e4 44000000 		.4byte	.LFE26-.LFB26
 10801 00e8 00000000 		.4byte	.LFB27
 10802 00ec 38000000 		.4byte	.LFE27-.LFB27
 10803 00f0 00000000 		.4byte	.LFB28
 10804 00f4 34000000 		.4byte	.LFE28-.LFB28
 10805 00f8 00000000 		.4byte	.LFB29
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 222


 10806 00fc 34000000 		.4byte	.LFE29-.LFB29
 10807 0100 00000000 		.4byte	.LFB30
 10808 0104 36000000 		.4byte	.LFE30-.LFB30
 10809 0108 00000000 		.4byte	.LFB31
 10810 010c 2E000000 		.4byte	.LFE31-.LFB31
 10811 0110 00000000 		.4byte	.LFB32
 10812 0114 38000000 		.4byte	.LFE32-.LFB32
 10813 0118 00000000 		.4byte	.LFB33
 10814 011c 30000000 		.4byte	.LFE33-.LFB33
 10815 0120 00000000 		.4byte	.LFB34
 10816 0124 30000000 		.4byte	.LFE34-.LFB34
 10817 0128 00000000 		.4byte	.LFB35
 10818 012c 36000000 		.4byte	.LFE35-.LFB35
 10819 0130 00000000 		.4byte	.LFB36
 10820 0134 2E000000 		.4byte	.LFE36-.LFB36
 10821 0138 00000000 		.4byte	.LFB37
 10822 013c 18000000 		.4byte	.LFE37-.LFB37
 10823 0140 00000000 		.4byte	.LFB38
 10824 0144 38000000 		.4byte	.LFE38-.LFB38
 10825 0148 00000000 		.4byte	.LFB39
 10826 014c 50000000 		.4byte	.LFE39-.LFB39
 10827 0150 00000000 		.4byte	.LFB40
 10828 0154 68000000 		.4byte	.LFE40-.LFB40
 10829 0158 00000000 		.4byte	.LFB41
 10830 015c 68000000 		.4byte	.LFE41-.LFB41
 10831 0160 00000000 		.4byte	.LFB42
 10832 0164 10010000 		.4byte	.LFE42-.LFB42
 10833 0168 00000000 		.4byte	.LFB43
 10834 016c 1C010000 		.4byte	.LFE43-.LFB43
 10835 0170 00000000 		.4byte	.LFB44
 10836 0174 E8000000 		.4byte	.LFE44-.LFB44
 10837 0178 00000000 		.4byte	.LFB45
 10838 017c 9C000000 		.4byte	.LFE45-.LFB45
 10839 0180 00000000 		.4byte	.LFB46
 10840 0184 3A010000 		.4byte	.LFE46-.LFB46
 10841 0188 00000000 		.4byte	.LFB47
 10842 018c 30020000 		.4byte	.LFE47-.LFB47
 10843 0190 00000000 		.4byte	.LFB48
 10844 0194 D4000000 		.4byte	.LFE48-.LFB48
 10845 0198 00000000 		.4byte	.LFB49
 10846 019c DC000000 		.4byte	.LFE49-.LFB49
 10847 01a0 00000000 		.4byte	.LFB50
 10848 01a4 3A000000 		.4byte	.LFE50-.LFB50
 10849 01a8 00000000 		.4byte	.LFB51
 10850 01ac 10000000 		.4byte	.LFE51-.LFB51
 10851 01b0 00000000 		.4byte	.LFB52
 10852 01b4 16000000 		.4byte	.LFE52-.LFB52
 10853 01b8 00000000 		.4byte	.LFB53
 10854 01bc 16000000 		.4byte	.LFE53-.LFB53
 10855 01c0 00000000 		.4byte	.LFB54
 10856 01c4 70010000 		.4byte	.LFE54-.LFB54
 10857 01c8 00000000 		.4byte	.LFB55
 10858 01cc 50000000 		.4byte	.LFE55-.LFB55
 10859 01d0 00000000 		.4byte	.LFB56
 10860 01d4 4C000000 		.4byte	.LFE56-.LFB56
 10861 01d8 00000000 		.4byte	.LFB57
 10862 01dc 44000000 		.4byte	.LFE57-.LFB57
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 223


 10863 01e0 00000000 		.4byte	.LFB58
 10864 01e4 8C000000 		.4byte	.LFE58-.LFB58
 10865 01e8 00000000 		.4byte	.LFB59
 10866 01ec 84000000 		.4byte	.LFE59-.LFB59
 10867 01f0 00000000 		.4byte	.LFB60
 10868 01f4 20000000 		.4byte	.LFE60-.LFB60
 10869 01f8 00000000 		.4byte	.LFB61
 10870 01fc 24000000 		.4byte	.LFE61-.LFB61
 10871 0200 00000000 		.4byte	.LFB62
 10872 0204 26000000 		.4byte	.LFE62-.LFB62
 10873 0208 00000000 		.4byte	.LFB63
 10874 020c 72000000 		.4byte	.LFE63-.LFB63
 10875 0210 00000000 		.4byte	.LFB64
 10876 0214 C0000000 		.4byte	.LFE64-.LFB64
 10877 0218 00000000 		.4byte	.LFB65
 10878 021c 20000000 		.4byte	.LFE65-.LFB65
 10879 0220 00000000 		.4byte	.LFB66
 10880 0224 1E000000 		.4byte	.LFE66-.LFB66
 10881 0228 00000000 		.4byte	.LFB67
 10882 022c F4000000 		.4byte	.LFE67-.LFB67
 10883 0230 00000000 		.4byte	.LFB68
 10884 0234 86000000 		.4byte	.LFE68-.LFB68
 10885 0238 00000000 		.4byte	.LFB69
 10886 023c 30000000 		.4byte	.LFE69-.LFB69
 10887 0240 00000000 		.4byte	.LFB70
 10888 0244 24000000 		.4byte	.LFE70-.LFB70
 10889 0248 00000000 		.4byte	.LFB71
 10890 024c BC000000 		.4byte	.LFE71-.LFB71
 10891 0250 00000000 		.4byte	.LFB72
 10892 0254 54010000 		.4byte	.LFE72-.LFB72
 10893 0258 00000000 		.4byte	0
 10894 025c 00000000 		.4byte	0
 10895              		.section	.debug_ranges,"",%progbits
 10896              	.Ldebug_ranges0:
 10897 0000 00000000 		.4byte	.LFB0
 10898 0004 0E000000 		.4byte	.LFE0
 10899 0008 00000000 		.4byte	.LFB1
 10900 000c 0E000000 		.4byte	.LFE1
 10901 0010 00000000 		.4byte	.LFB2
 10902 0014 18010000 		.4byte	.LFE2
 10903 0018 00000000 		.4byte	.LFB3
 10904 001c 62010000 		.4byte	.LFE3
 10905 0020 00000000 		.4byte	.LFB4
 10906 0024 48000000 		.4byte	.LFE4
 10907 0028 00000000 		.4byte	.LFB5
 10908 002c 4E000000 		.4byte	.LFE5
 10909 0030 00000000 		.4byte	.LFB6
 10910 0034 1A000000 		.4byte	.LFE6
 10911 0038 00000000 		.4byte	.LFB7
 10912 003c 1A000000 		.4byte	.LFE7
 10913 0040 00000000 		.4byte	.LFB8
 10914 0044 1A000000 		.4byte	.LFE8
 10915 0048 00000000 		.4byte	.LFB9
 10916 004c 22000000 		.4byte	.LFE9
 10917 0050 00000000 		.4byte	.LFB10
 10918 0054 1A000000 		.4byte	.LFE10
 10919 0058 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 224


 10920 005c 22000000 		.4byte	.LFE11
 10921 0060 00000000 		.4byte	.LFB12
 10922 0064 1A000000 		.4byte	.LFE12
 10923 0068 00000000 		.4byte	.LFB13
 10924 006c 22000000 		.4byte	.LFE13
 10925 0070 00000000 		.4byte	.LFB14
 10926 0074 1E000000 		.4byte	.LFE14
 10927 0078 00000000 		.4byte	.LFB15
 10928 007c 1E000000 		.4byte	.LFE15
 10929 0080 00000000 		.4byte	.LFB16
 10930 0084 1E000000 		.4byte	.LFE16
 10931 0088 00000000 		.4byte	.LFB17
 10932 008c 82000000 		.4byte	.LFE17
 10933 0090 00000000 		.4byte	.LFB18
 10934 0094 52000000 		.4byte	.LFE18
 10935 0098 00000000 		.4byte	.LFB19
 10936 009c 82000000 		.4byte	.LFE19
 10937 00a0 00000000 		.4byte	.LFB20
 10938 00a4 52000000 		.4byte	.LFE20
 10939 00a8 00000000 		.4byte	.LFB21
 10940 00ac 36000000 		.4byte	.LFE21
 10941 00b0 00000000 		.4byte	.LFB22
 10942 00b4 38000000 		.4byte	.LFE22
 10943 00b8 00000000 		.4byte	.LFB23
 10944 00bc 44000000 		.4byte	.LFE23
 10945 00c0 00000000 		.4byte	.LFB24
 10946 00c4 38000000 		.4byte	.LFE24
 10947 00c8 00000000 		.4byte	.LFB25
 10948 00cc 44000000 		.4byte	.LFE25
 10949 00d0 00000000 		.4byte	.LFB26
 10950 00d4 44000000 		.4byte	.LFE26
 10951 00d8 00000000 		.4byte	.LFB27
 10952 00dc 38000000 		.4byte	.LFE27
 10953 00e0 00000000 		.4byte	.LFB28
 10954 00e4 34000000 		.4byte	.LFE28
 10955 00e8 00000000 		.4byte	.LFB29
 10956 00ec 34000000 		.4byte	.LFE29
 10957 00f0 00000000 		.4byte	.LFB30
 10958 00f4 36000000 		.4byte	.LFE30
 10959 00f8 00000000 		.4byte	.LFB31
 10960 00fc 2E000000 		.4byte	.LFE31
 10961 0100 00000000 		.4byte	.LFB32
 10962 0104 38000000 		.4byte	.LFE32
 10963 0108 00000000 		.4byte	.LFB33
 10964 010c 30000000 		.4byte	.LFE33
 10965 0110 00000000 		.4byte	.LFB34
 10966 0114 30000000 		.4byte	.LFE34
 10967 0118 00000000 		.4byte	.LFB35
 10968 011c 36000000 		.4byte	.LFE35
 10969 0120 00000000 		.4byte	.LFB36
 10970 0124 2E000000 		.4byte	.LFE36
 10971 0128 00000000 		.4byte	.LFB37
 10972 012c 18000000 		.4byte	.LFE37
 10973 0130 00000000 		.4byte	.LFB38
 10974 0134 38000000 		.4byte	.LFE38
 10975 0138 00000000 		.4byte	.LFB39
 10976 013c 50000000 		.4byte	.LFE39
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 225


 10977 0140 00000000 		.4byte	.LFB40
 10978 0144 68000000 		.4byte	.LFE40
 10979 0148 00000000 		.4byte	.LFB41
 10980 014c 68000000 		.4byte	.LFE41
 10981 0150 00000000 		.4byte	.LFB42
 10982 0154 10010000 		.4byte	.LFE42
 10983 0158 00000000 		.4byte	.LFB43
 10984 015c 1C010000 		.4byte	.LFE43
 10985 0160 00000000 		.4byte	.LFB44
 10986 0164 E8000000 		.4byte	.LFE44
 10987 0168 00000000 		.4byte	.LFB45
 10988 016c 9C000000 		.4byte	.LFE45
 10989 0170 00000000 		.4byte	.LFB46
 10990 0174 3A010000 		.4byte	.LFE46
 10991 0178 00000000 		.4byte	.LFB47
 10992 017c 30020000 		.4byte	.LFE47
 10993 0180 00000000 		.4byte	.LFB48
 10994 0184 D4000000 		.4byte	.LFE48
 10995 0188 00000000 		.4byte	.LFB49
 10996 018c DC000000 		.4byte	.LFE49
 10997 0190 00000000 		.4byte	.LFB50
 10998 0194 3A000000 		.4byte	.LFE50
 10999 0198 00000000 		.4byte	.LFB51
 11000 019c 10000000 		.4byte	.LFE51
 11001 01a0 00000000 		.4byte	.LFB52
 11002 01a4 16000000 		.4byte	.LFE52
 11003 01a8 00000000 		.4byte	.LFB53
 11004 01ac 16000000 		.4byte	.LFE53
 11005 01b0 00000000 		.4byte	.LFB54
 11006 01b4 70010000 		.4byte	.LFE54
 11007 01b8 00000000 		.4byte	.LFB55
 11008 01bc 50000000 		.4byte	.LFE55
 11009 01c0 00000000 		.4byte	.LFB56
 11010 01c4 4C000000 		.4byte	.LFE56
 11011 01c8 00000000 		.4byte	.LFB57
 11012 01cc 44000000 		.4byte	.LFE57
 11013 01d0 00000000 		.4byte	.LFB58
 11014 01d4 8C000000 		.4byte	.LFE58
 11015 01d8 00000000 		.4byte	.LFB59
 11016 01dc 84000000 		.4byte	.LFE59
 11017 01e0 00000000 		.4byte	.LFB60
 11018 01e4 20000000 		.4byte	.LFE60
 11019 01e8 00000000 		.4byte	.LFB61
 11020 01ec 24000000 		.4byte	.LFE61
 11021 01f0 00000000 		.4byte	.LFB62
 11022 01f4 26000000 		.4byte	.LFE62
 11023 01f8 00000000 		.4byte	.LFB63
 11024 01fc 72000000 		.4byte	.LFE63
 11025 0200 00000000 		.4byte	.LFB64
 11026 0204 C0000000 		.4byte	.LFE64
 11027 0208 00000000 		.4byte	.LFB65
 11028 020c 20000000 		.4byte	.LFE65
 11029 0210 00000000 		.4byte	.LFB66
 11030 0214 1E000000 		.4byte	.LFE66
 11031 0218 00000000 		.4byte	.LFB67
 11032 021c F4000000 		.4byte	.LFE67
 11033 0220 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 226


 11034 0224 86000000 		.4byte	.LFE68
 11035 0228 00000000 		.4byte	.LFB69
 11036 022c 30000000 		.4byte	.LFE69
 11037 0230 00000000 		.4byte	.LFB70
 11038 0234 24000000 		.4byte	.LFE70
 11039 0238 00000000 		.4byte	.LFB71
 11040 023c BC000000 		.4byte	.LFE71
 11041 0240 00000000 		.4byte	.LFB72
 11042 0244 54010000 		.4byte	.LFE72
 11043 0248 00000000 		.4byte	0
 11044 024c 00000000 		.4byte	0
 11045              		.section	.debug_line,"",%progbits
 11046              	.Ldebug_line0:
 11047 0000 00090000 		.section	.debug_str,"MS",%progbits,1
 11047      02004200 
 11047      00000201 
 11047      FB0E0D00 
 11047      01010101 
 11048              	.LASF70:
 11049 0000 4554485F 		.ascii	"ETH_SetSocketDestIP\000"
 11049      53657453 
 11049      6F636B65 
 11049      74446573 
 11049      74495000 
 11050              	.LASF47:
 11051 0014 4554485F 		.ascii	"ETH_GetSubnetMask\000"
 11051      47657453 
 11051      75626E65 
 11051      744D6173 
 11051      6B00
 11052              	.LASF10:
 11053 0026 75696E74 		.ascii	"uint16\000"
 11053      313600
 11054              	.LASF30:
 11055 002d 63726974 		.ascii	"crit\000"
 11055      00
 11056              	.LASF42:
 11057 0032 4554485F 		.ascii	"ETH_GetSourceMAC\000"
 11057      47657453 
 11057      6F757263 
 11057      654D4143 
 11057      00
 11058              	.LASF103:
 11059 0043 4554485F 		.ascii	"ETH_ParseMAC\000"
 11059      50617273 
 11059      654D4143 
 11059      00
 11060              	.LASF128:
 11061 0050 54785369 		.ascii	"TxSize\000"
 11061      7A6500
 11062              	.LASF55:
 11063 0057 736F636B 		.ascii	"socket\000"
 11063      657400
 11064              	.LASF54:
 11065 005e 4554485F 		.ascii	"ETH_SetSocketRxMemSize\000"
 11065      53657453 
 11065      6F636B65 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 227


 11065      7452784D 
 11065      656D5369 
 11066              	.LASF135:
 11067 0075 4554485F 		.ascii	"ETH_UdpReceive\000"
 11067      55647052 
 11067      65636569 
 11067      766500
 11068              	.LASF122:
 11069 0084 4554485F 		.ascii	"ETH_TcpStartServer\000"
 11069      54637053 
 11069      74617274 
 11069      53657276 
 11069      657200
 11070              	.LASF136:
 11071 0097 5061636B 		.ascii	"PacketSize\000"
 11071      65745369 
 11071      7A6500
 11072              	.LASF23:
 11073 00a2 4554485F 		.ascii	"ETH_SOCKET\000"
 11073      534F434B 
 11073      455400
 11074              	.LASF48:
 11075 00ad 4554485F 		.ascii	"ETH_SetSourceIP\000"
 11075      53657453 
 11075      6F757263 
 11075      65495000 
 11076              	.LASF126:
 11077 00bd 4554485F 		.ascii	"ETH_TcpDisconnect\000"
 11077      54637044 
 11077      6973636F 
 11077      6E6E6563 
 11077      7400
 11078              	.LASF96:
 11079 00cf 696E6465 		.ascii	"index\000"
 11079      7800
 11080              	.LASF7:
 11081 00d5 6C6F6E67 		.ascii	"long long unsigned int\000"
 11081      206C6F6E 
 11081      6720756E 
 11081      7369676E 
 11081      65642069 
 11082              	.LASF31:
 11083 00ec 4554485F 		.ascii	"ETH_ChipWrite\000"
 11083      43686970 
 11083      57726974 
 11083      6500
 11084              	.LASF26:
 11085 00fa 61646472 		.ascii	"addr\000"
 11085      00
 11086              	.LASF17:
 11087 00ff 50726F74 		.ascii	"Protocol\000"
 11087      6F636F6C 
 11087      00
 11088              	.LASF97:
 11089 0108 4554485F 		.ascii	"ETH_Start\000"
 11089      53746172 
 11089      7400
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 228


 11090              	.LASF118:
 11091 0112 4554485F 		.ascii	"ETH_SocketSend\000"
 11091      536F636B 
 11091      65745365 
 11091      6E6400
 11092              	.LASF95:
 11093 0121 67617465 		.ascii	"gateway\000"
 11093      77617900 
 11094              	.LASF132:
 11095 0129 4554485F 		.ascii	"ETH_TcpPrint\000"
 11095      54637050 
 11095      72696E74 
 11095      00
 11096              	.LASF65:
 11097 0136 4554485F 		.ascii	"ETH_GetSocketStatus\000"
 11097      47657453 
 11097      6F636B65 
 11097      74537461 
 11097      74757300 
 11098              	.LASF143:
 11099 014a 4554485F 		.ascii	"ETH_MAC\000"
 11099      4D414300 
 11100              	.LASF6:
 11101 0152 6C6F6E67 		.ascii	"long long int\000"
 11101      206C6F6E 
 11101      6720696E 
 11101      7400
 11102              	.LASF0:
 11103 0160 7369676E 		.ascii	"signed char\000"
 11103      65642063 
 11103      68617200 
 11104              	.LASF86:
 11105 016c 4554485F 		.ascii	"ETH_ProcessTxData\000"
 11105      50726F63 
 11105      65737354 
 11105      78446174 
 11105      6100
 11106              	.LASF38:
 11107 017e 7278436F 		.ascii	"rxCount\000"
 11107      756E7400 
 11108              	.LASF19:
 11109 0186 536F7572 		.ascii	"SourcePort\000"
 11109      6365506F 
 11109      727400
 11110              	.LASF100:
 11111 0191 64696769 		.ascii	"digit\000"
 11111      7400
 11112              	.LASF78:
 11113 0197 4554485F 		.ascii	"ETH_SetSocketRxWritePtr\000"
 11113      53657453 
 11113      6F636B65 
 11113      74527857 
 11113      72697465 
 11114              	.LASF46:
 11115 01af 4554485F 		.ascii	"ETH_SetSubnetMask\000"
 11115      53657453 
 11115      75626E65 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 229


 11115      744D6173 
 11115      6B00
 11116              	.LASF73:
 11117 01c1 4554485F 		.ascii	"ETH_SetSocketTxWritePtr\000"
 11117      53657453 
 11117      6F636B65 
 11117      74547857 
 11117      72697465 
 11118              	.LASF29:
 11119 01d9 7478436F 		.ascii	"txCount\000"
 11119      756E7400 
 11120              	.LASF130:
 11121 01e1 4554485F 		.ascii	"ETH_TcpReceive\000"
 11121      54637052 
 11121      65636569 
 11121      766500
 11122              	.LASF4:
 11123 01f0 6C6F6E67 		.ascii	"long int\000"
 11123      20696E74 
 11123      00
 11124              	.LASF102:
 11125 01f9 64696E64 		.ascii	"dindex\000"
 11125      657800
 11126              	.LASF28:
 11127 0200 74784C65 		.ascii	"txLen\000"
 11127      6E00
 11128              	.LASF9:
 11129 0206 75696E74 		.ascii	"uint8\000"
 11129      3800
 11130              	.LASF77:
 11131 020c 4554485F 		.ascii	"ETH_GetSocketRxReadPtr\000"
 11131      47657453 
 11131      6F636B65 
 11131      74527852 
 11131      65616450 
 11132              	.LASF87:
 11133 0223 6F666673 		.ascii	"offset\000"
 11133      657400
 11134              	.LASF13:
 11135 022a 646F7562 		.ascii	"double\000"
 11135      6C6500
 11136              	.LASF127:
 11137 0231 4554485F 		.ascii	"ETH_TcpSend\000"
 11137      54637053 
 11137      656E6400 
 11138              	.LASF79:
 11139 023d 4554485F 		.ascii	"ETH_SetSocketTxReadPtr\000"
 11139      53657453 
 11139      6F636B65 
 11139      74547852 
 11139      65616450 
 11140              	.LASF61:
 11141 0254 4554485F 		.ascii	"ETH_SetSocketCommand\000"
 11141      53657453 
 11141      6F636B65 
 11141      74436F6D 
 11141      6D616E64 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 230


 11142              	.LASF104:
 11143 0269 6D616353 		.ascii	"macString\000"
 11143      7472696E 
 11143      6700
 11144              	.LASF138:
 11145 0273 53504930 		.ascii	"SPI0_initVar\000"
 11145      5F696E69 
 11145      74566172 
 11145      00
 11146              	.LASF11:
 11147 0280 75696E74 		.ascii	"uint32\000"
 11147      333200
 11148              	.LASF72:
 11149 0287 4554485F 		.ascii	"ETH_GetSocketTxFree\000"
 11149      47657453 
 11149      6F636B65 
 11149      74547846 
 11149      72656500 
 11150              	.LASF69:
 11151 029b 4554485F 		.ascii	"ETH_SetSocketDestMAC\000"
 11151      53657453 
 11151      6F636B65 
 11151      74446573 
 11151      744D4143 
 11152              	.LASF137:
 11153 02b0 5061636B 		.ascii	"PacketHeader\000"
 11153      65744865 
 11153      61646572 
 11153      00
 11154              	.LASF68:
 11155 02bd 706F7274 		.ascii	"port\000"
 11155      00
 11156              	.LASF110:
 11157 02c2 74656D70 		.ascii	"temp\000"
 11157      00
 11158              	.LASF57:
 11159 02c7 4554485F 		.ascii	"ETH_GetSocketRxMemSize\000"
 11159      47657453 
 11159      6F636B65 
 11159      7452784D 
 11159      656D5369 
 11160              	.LASF147:
 11161 02de 4554485F 		.ascii	"ETH_GetIP\000"
 11161      47657449 
 11161      5000
 11162              	.LASF50:
 11163 02e8 4554485F 		.ascii	"ETH_SetMode\000"
 11163      5365744D 
 11163      6F646500 
 11164              	.LASF8:
 11165 02f4 756E7369 		.ascii	"unsigned int\000"
 11165      676E6564 
 11165      20696E74 
 11165      00
 11166              	.LASF91:
 11167 0301 4554485F 		.ascii	"ETH_ProcessRxData\000"
 11167      50726F63 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 231


 11167      65737352 
 11167      78446174 
 11167      6100
 11168              	.LASF44:
 11169 0313 4554485F 		.ascii	"ETH_ChipRead16\000"
 11169      43686970 
 11169      52656164 
 11169      313600
 11170              	.LASF58:
 11171 0322 4554485F 		.ascii	"ETH_SetSocketTxMemSize\000"
 11171      53657453 
 11171      6F636B65 
 11171      7454784D 
 11171      656D5369 
 11172              	.LASF90:
 11173 0339 506F696E 		.ascii	"PointerOffset\000"
 11173      7465724F 
 11173      66667365 
 11173      7400
 11174              	.LASF5:
 11175 0347 6C6F6E67 		.ascii	"long unsigned int\000"
 11175      20756E73 
 11175      69676E65 
 11175      6420696E 
 11175      7400
 11176              	.LASF81:
 11177 0359 74696D65 		.ascii	"timeout\000"
 11177      6F757400 
 11178              	.LASF94:
 11179 0361 7375626E 		.ascii	"subnet\000"
 11179      657400
 11180              	.LASF56:
 11181 0368 73697A65 		.ascii	"size\000"
 11181      00
 11182              	.LASF3:
 11183 036d 73686F72 		.ascii	"short unsigned int\000"
 11183      7420756E 
 11183      7369676E 
 11183      65642069 
 11183      6E7400
 11184              	.LASF125:
 11185 0380 4554485F 		.ascii	"ETH_TcpConnected\000"
 11185      54637043 
 11185      6F6E6E65 
 11185      63746564 
 11185      00
 11186              	.LASF32:
 11187 0391 4554485F 		.ascii	"ETH_ChipRead\000"
 11187      43686970 
 11187      52656164 
 11187      00
 11188              	.LASF129:
 11189 039e 46726565 		.ascii	"FreeSpace\000"
 11189      53706163 
 11189      6500
 11190              	.LASF114:
 11191 03a8 4554485F 		.ascii	"ETH_SocketOpen\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 232


 11191      536F636B 
 11191      65744F70 
 11191      656E00
 11192              	.LASF131:
 11193 03b7 52785369 		.ascii	"RxSize\000"
 11193      7A6500
 11194              	.LASF117:
 11195 03be 4554485F 		.ascii	"ETH_SocketEstablished\000"
 11195      536F636B 
 11195      65744573 
 11195      7461626C 
 11195      69736865 
 11196              	.LASF133:
 11197 03d4 4554485F 		.ascii	"ETH_UdpOpen\000"
 11197      5564704F 
 11197      70656E00 
 11198              	.LASF141:
 11199 03e0 4554485F 		.ascii	"ETH_SocketConfig\000"
 11199      536F636B 
 11199      6574436F 
 11199      6E666967 
 11199      00
 11200              	.LASF120:
 11201 03f1 4554485F 		.ascii	"ETH_SocketRxDataWaiting\000"
 11201      536F636B 
 11201      65745278 
 11201      44617461 
 11201      57616974 
 11202              	.LASF82:
 11203 0409 4554485F 		.ascii	"ETH_GetTxFreeSize\000"
 11203      47657454 
 11203      78467265 
 11203      6553697A 
 11203      6500
 11204              	.LASF36:
 11205 041b 74784279 		.ascii	"txBytes\000"
 11205      74657300 
 11206              	.LASF98:
 11207 0423 4554485F 		.ascii	"ETH_ParseIP\000"
 11207      50617273 
 11207      65495000 
 11208              	.LASF124:
 11209 042f 4554485F 		.ascii	"ETH_TcpConnect\000"
 11209      54637043 
 11209      6F6E6E65 
 11209      637400
 11210              	.LASF74:
 11211 043e 4554485F 		.ascii	"ETH_GetSocketTxWritePtr\000"
 11211      47657453 
 11211      6F636B65 
 11211      74547857 
 11211      72697465 
 11212              	.LASF49:
 11213 0456 4554485F 		.ascii	"ETH_GetSourceIP\000"
 11213      47657453 
 11213      6F757263 
 11213      65495000 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 233


 11214              	.LASF145:
 11215 0466 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ETH.c\000"
 11215      6E657261 
 11215      7465645F 
 11215      536F7572 
 11215      63655C50 
 11216              	.LASF40:
 11217 0485 62696756 		.ascii	"bigVal\000"
 11217      616C00
 11218              	.LASF16:
 11219 048c 73697A65 		.ascii	"sizetype\000"
 11219      74797065 
 11219      00
 11220              	.LASF21:
 11221 0495 54784275 		.ascii	"TxBufferSize\000"
 11221      66666572 
 11221      53697A65 
 11221      00
 11222              	.LASF34:
 11223 04a2 61646472 		.ascii	"address\000"
 11223      65737300 
 11224              	.LASF121:
 11225 04aa 4554485F 		.ascii	"ETH_TcpOpen\000"
 11225      5463704F 
 11225      70656E00 
 11226              	.LASF18:
 11227 04b6 536F636B 		.ascii	"SocketFlags\000"
 11227      6574466C 
 11227      61677300 
 11228              	.LASF115:
 11229 04c2 4554485F 		.ascii	"ETH_SocketClose\000"
 11229      536F636B 
 11229      6574436C 
 11229      6F736500 
 11230              	.LASF112:
 11231 04d2 4554485F 		.ascii	"ETH_SetMAC\000"
 11231      5365744D 
 11231      414300
 11232              	.LASF106:
 11233 04dd 4554485F 		.ascii	"ETH_StringMAC\000"
 11233      53747269 
 11233      6E674D41 
 11233      4300
 11234              	.LASF12:
 11235 04eb 666C6F61 		.ascii	"float\000"
 11235      7400
 11236              	.LASF107:
 11237 04f1 4554485F 		.ascii	"ETH_StringIP\000"
 11237      53747269 
 11237      6E674950 
 11237      00
 11238              	.LASF108:
 11239 04fe 69704279 		.ascii	"ipBytes\000"
 11239      74657300 
 11240              	.LASF59:
 11241 0506 4554485F 		.ascii	"ETH_GetSocketTxMemSize\000"
 11241      47657453 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 234


 11241      6F636B65 
 11241      7454784D 
 11241      656D5369 
 11242              	.LASF93:
 11243 051d 4554485F 		.ascii	"ETH_Init\000"
 11243      496E6974 
 11243      00
 11244              	.LASF144:
 11245 0526 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 11245      4320342E 
 11245      372E3320 
 11245      32303133 
 11245      30333132 
 11246 0559 616E6368 		.ascii	"anch revision 196615]\000"
 11246      20726576 
 11246      6973696F 
 11246      6E203139 
 11246      36363135 
 11247              	.LASF89:
 11248 056f 62617365 		.ascii	"base\000"
 11248      00
 11249              	.LASF1:
 11250 0574 756E7369 		.ascii	"unsigned char\000"
 11250      676E6564 
 11250      20636861 
 11250      7200
 11251              	.LASF84:
 11252 0582 7365636F 		.ascii	"second\000"
 11252      6E6400
 11253              	.LASF67:
 11254 0589 4554485F 		.ascii	"ETH_SetSocketSourcePort\000"
 11254      53657453 
 11254      6F636B65 
 11254      74536F75 
 11254      72636550 
 11255              	.LASF2:
 11256 05a1 73686F72 		.ascii	"short int\000"
 11256      7420696E 
 11256      7400
 11257              	.LASF80:
 11258 05ab 4554485F 		.ascii	"ETH_ExecuteSocketCommand\000"
 11258      45786563 
 11258      75746553 
 11258      6F636B65 
 11258      74436F6D 
 11259              	.LASF101:
 11260 05c4 636F756E 		.ascii	"counter\000"
 11260      74657200 
 11261              	.LASF75:
 11262 05cc 4554485F 		.ascii	"ETH_GetSocketRxSize\000"
 11262      47657453 
 11262      6F636B65 
 11262      74527853 
 11262      697A6500 
 11263              	.LASF45:
 11264 05e0 4554485F 		.ascii	"ETH_GetGatewayAddress\000"
 11264      47657447 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 235


 11264      61746577 
 11264      61794164 
 11264      64726573 
 11265              	.LASF146:
 11266 05f6 433A5C55 		.ascii	"C:\\Users\\chuck.erhardt\\Documents\\GitHub\\PSoC-W"
 11266      73657273 
 11266      5C636875 
 11266      636B2E65 
 11266      72686172 
 11267 0624 35313030 		.ascii	"5100-Driver\\PSoCPioneer+ArduinoShield_SPIM_Example"
 11267      2D447269 
 11267      7665725C 
 11267      50536F43 
 11267      50696F6E 
 11268 0656 2E637964 		.ascii	".cydsn\000"
 11268      736E00
 11269              	.LASF140:
 11270 065d 4554485F 		.ascii	"ETH_SOCKET_RX_BASE\000"
 11270      534F434B 
 11270      45545F52 
 11270      585F4241 
 11270      534500
 11271              	.LASF63:
 11272 0670 4554485F 		.ascii	"ETH_SetSocketIR\000"
 11272      53657453 
 11272      6F636B65 
 11272      74495200 
 11273              	.LASF99:
 11274 0680 69705374 		.ascii	"ipString\000"
 11274      72696E67 
 11274      00
 11275              	.LASF20:
 11276 0689 53657276 		.ascii	"ServerFlag\000"
 11276      6572466C 
 11276      616700
 11277              	.LASF116:
 11278 0694 4554485F 		.ascii	"ETH_SocketProcessConnections\000"
 11278      536F636B 
 11278      65745072 
 11278      6F636573 
 11278      73436F6E 
 11279              	.LASF139:
 11280 06b1 4554485F 		.ascii	"ETH_SOCKET_TX_BASE\000"
 11280      534F434B 
 11280      45545F54 
 11280      585F4241 
 11280      534500
 11281              	.LASF83:
 11282 06c4 66697273 		.ascii	"first\000"
 11282      7400
 11283              	.LASF27:
 11284 06ca 6C656E67 		.ascii	"length\000"
 11284      746800
 11285              	.LASF14:
 11286 06d1 63686172 		.ascii	"char\000"
 11286      00
 11287              	.LASF51:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 236


 11288 06d6 6D6F6465 		.ascii	"mode\000"
 11288      00
 11289              	.LASF24:
 11290 06db 4554485F 		.ascii	"ETH_ChipSelect\000"
 11290      43686970 
 11290      53656C65 
 11290      637400
 11291              	.LASF123:
 11292 06ea 4554485F 		.ascii	"ETH_TcpStartServerWait\000"
 11292      54637053 
 11292      74617274 
 11292      53657276 
 11292      65725761 
 11293              	.LASF22:
 11294 0701 52784275 		.ascii	"RxBufferSize\000"
 11294      66666572 
 11294      53697A65 
 11294      00
 11295              	.LASF62:
 11296 070e 4554485F 		.ascii	"ETH_GetSocketCommand\000"
 11296      47657453 
 11296      6F636B65 
 11296      74436F6D 
 11296      6D616E64 
 11297              	.LASF119:
 11298 0723 4554485F 		.ascii	"ETH_SocketSendMac\000"
 11298      536F636B 
 11298      65745365 
 11298      6E644D61 
 11298      6300
 11299              	.LASF41:
 11300 0735 4554485F 		.ascii	"ETH_SetSourceMAC\000"
 11300      53657453 
 11300      6F757263 
 11300      654D4143 
 11300      00
 11301              	.LASF88:
 11302 0746 62756666 		.ascii	"buffer\000"
 11302      657200
 11303              	.LASF64:
 11304 074d 4554485F 		.ascii	"ETH_GetSocketIR\000"
 11304      47657453 
 11304      6F636B65 
 11304      74495200 
 11305              	.LASF109:
 11306 075d 776F726B 		.ascii	"work\000"
 11306      00
 11307              	.LASF39:
 11308 0762 4554485F 		.ascii	"ETH_ChipWrite16\000"
 11308      43686970 
 11308      57726974 
 11308      65313600 
 11309              	.LASF85:
 11310 0772 4554485F 		.ascii	"ETH_GetRxSize\000"
 11310      47657452 
 11310      7853697A 
 11310      6500
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 237


 11311              	.LASF43:
 11312 0780 4554485F 		.ascii	"ETH_SetGatewayAddress\000"
 11312      53657447 
 11312      61746577 
 11312      61794164 
 11312      64726573 
 11313              	.LASF52:
 11314 0796 4554485F 		.ascii	"ETH_GetMode\000"
 11314      4765744D 
 11314      6F646500 
 11315              	.LASF111:
 11316 07a2 4554485F 		.ascii	"ETH_SetIP\000"
 11316      53657449 
 11316      5000
 11317              	.LASF53:
 11318 07ac 4554485F 		.ascii	"ETH_SetIR\000"
 11318      53657449 
 11318      5200
 11319              	.LASF134:
 11320 07b6 4554485F 		.ascii	"ETH_UdpSend\000"
 11320      55647053 
 11320      656E6400 
 11321              	.LASF37:
 11322 07c2 64756D70 		.ascii	"dump\000"
 11322      00
 11323              	.LASF66:
 11324 07c7 73746174 		.ascii	"status\000"
 11324      757300
 11325              	.LASF113:
 11326 07ce 4554485F 		.ascii	"ETH_GetMAC\000"
 11326      4765744D 
 11326      414300
 11327              	.LASF92:
 11328 07d9 666C6167 		.ascii	"flags\000"
 11328      7300
 11329              	.LASF142:
 11330 07df 4554485F 		.ascii	"ETH_SubnetMask\000"
 11330      5375626E 
 11330      65744D61 
 11330      736B00
 11331              	.LASF60:
 11332 07ee 4554485F 		.ascii	"ETH_SetSocketMode\000"
 11332      53657453 
 11332      6F636B65 
 11332      744D6F64 
 11332      6500
 11333              	.LASF15:
 11334 0800 63797374 		.ascii	"cystatus\000"
 11334      61747573 
 11334      00
 11335              	.LASF33:
 11336 0809 7278496E 		.ascii	"rxIndex\000"
 11336      64657800 
 11337              	.LASF76:
 11338 0811 4554485F 		.ascii	"ETH_SetSocketRxReadPtr\000"
 11338      53657453 
 11338      6F636B65 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccSVmyDA.s 			page 238


 11338      74527852 
 11338      65616450 
 11339              	.LASF35:
 11340 0828 72784C65 		.ascii	"rxLen\000"
 11340      6E00
 11341              	.LASF25:
 11342 082e 4554485F 		.ascii	"ETH_ChipDeSelect\000"
 11342      43686970 
 11342      44655365 
 11342      6C656374 
 11342      00
 11343              	.LASF105:
 11344 083f 72657375 		.ascii	"result\000"
 11344      6C7400
 11345              	.LASF71:
 11346 0846 4554485F 		.ascii	"ETH_SetSocketDestPort\000"
 11346      53657453 
 11346      6F636B65 
 11346      74446573 
 11346      74506F72 
 11347              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
