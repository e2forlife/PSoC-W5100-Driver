ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ETH.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ETH_SOCKET_TX_BASE
  18              		.section	.rodata
  19              		.align	2
  20              		.type	ETH_SOCKET_TX_BASE, %object
  21              		.size	ETH_SOCKET_TX_BASE, 8
  22              	ETH_SOCKET_TX_BASE:
  23 0000 0040     		.short	16384
  24 0002 0048     		.short	18432
  25 0004 0050     		.short	20480
  26 0006 0058     		.short	22528
  27              		.global	ETH_SOCKET_RX_BASE
  28              		.align	2
  29              		.type	ETH_SOCKET_RX_BASE, %object
  30              		.size	ETH_SOCKET_RX_BASE, 8
  31              	ETH_SOCKET_RX_BASE:
  32 0008 0060     		.short	24576
  33 000a 0068     		.short	26624
  34 000c 0070     		.short	28672
  35 000e 0078     		.short	30720
  36              		.comm	ETH_SocketConfig,32,4
  37              		.comm	ETH_SubnetMask,4,4
  38              		.comm	ETH_MAC,6,4
  39              		.section	.text.ETH_ChipSelect,"ax",%progbits
  40              		.align	2
  41              		.global	ETH_ChipSelect
  42              		.code	16
  43              		.thumb_func
  44              		.type	ETH_ChipSelect, %function
  45              	ETH_ChipSelect:
  46              	.LFB0:
  47              		.file 1 ".\\Generated_Source\\PSoC4\\ETH.c"
   1:.\Generated_Source\PSoC4/ETH.c **** /**
   2:.\Generated_Source\PSoC4/ETH.c ****  * \addtogroup w5x00
   3:.\Generated_Source\PSoC4/ETH.c ****  * @{
   4:.\Generated_Source\PSoC4/ETH.c ****  */
   5:.\Generated_Source\PSoC4/ETH.c **** 
   6:.\Generated_Source\PSoC4/ETH.c **** /**
   7:.\Generated_Source\PSoC4/ETH.c ****  * \file Driver implementation for interfacing with the W5x00 device
   8:.\Generated_Source\PSoC4/ETH.c ****  * \author Chuck Erhardt (chuck@e2forlife.com)
   9:.\Generated_Source\PSoC4/ETH.c ****  *
  10:.\Generated_Source\PSoC4/ETH.c ****  * This file contains the main driver implementation for control
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 2


  11:.\Generated_Source\PSoC4/ETH.c ****  * of the W5x00 device.
  12:.\Generated_Source\PSoC4/ETH.c **** */
  13:.\Generated_Source\PSoC4/ETH.c **** 
  14:.\Generated_Source\PSoC4/ETH.c **** /*
  15:.\Generated_Source\PSoC4/ETH.c ****  * Change Log:
  16:.\Generated_Source\PSoC4/ETH.c ****  * 
  17:.\Generated_Source\PSoC4/ETH.c ****  * V1.1
  18:.\Generated_Source\PSoC4/ETH.c ****  * - Modified the SPI access function to remove hard wait for READ_WRITE_DELAY  <CE>
  19:.\Generated_Source\PSoC4/ETH.c ****  * - Removed READ_WRITE_DELAY Parameter <CE>
  20:.\Generated_Source\PSoC4/ETH.c ****  * - Added validator to SS_NUM parameter to ensure that the value is the range 0-3 <CE>
  21:.\Generated_Source\PSoC4/ETH.c ****  * - Removed "inline" keywords from interal register access function to promote
  22:.\Generated_Source\PSoC4/ETH.c ****  *   compatibility with Keil PSoC3 compilers that don't support them. <CE>
  23:.\Generated_Source\PSoC4/ETH.c ****  * - Fixed bug in _ProcessRxData() that caused the read pointer not to be updated without
  24:.\Generated_Source\PSoC4/ETH.c ****  *   the lookahead flag being set. <CE>
  25:.\Generated_Source\PSoC4/ETH.c ****  * V1.2
  26:.\Generated_Source\PSoC4/ETH.c ****  * - Added _STS_SPI_IDLE flag to _SpiDone conditions to prevent deadlocking that
  27:.\Generated_Source\PSoC4/ETH.c ****  *   was occuring during the first read or write using the SPI device (SPIM moded) <CE>
  28:.\Generated_Source\PSoC4/ETH.c ****  * - Removed the check for SOCKET_ESTABLISHED at the start of the TcpReceive
  29:.\Generated_Source\PSoC4/ETH.c ****  *   function to allow for reading received socket data after the socket was dropped
  30:.\Generated_Source\PSoC4/ETH.c ****  *   by the remote server.  It was brought to my attention that this occurs when
  31:.\Generated_Source\PSoC4/ETH.c ****  *   operating with client connection to HTTP servers. <CE>
  32:.\Generated_Source\PSoC4/ETH.c ****  * - Added a MAC address parser and MAC to String Converter. <CE>
  33:.\Generated_Source\PSoC4/ETH.c ****  */
  34:.\Generated_Source\PSoC4/ETH.c **** 
  35:.\Generated_Source\PSoC4/ETH.c **** /* Cypress library includes */
  36:.\Generated_Source\PSoC4/ETH.c **** #include <cytypes.h>
  37:.\Generated_Source\PSoC4/ETH.c **** #include <cylib.h>
  38:.\Generated_Source\PSoC4/ETH.c **** 
  39:.\Generated_Source\PSoC4/ETH.c **** /*  include functions and types for the driver */
  40:.\Generated_Source\PSoC4/ETH.c **** #include "ETH.h"
  41:.\Generated_Source\PSoC4/ETH.c **** /* Include register address constants */
  42:.\Generated_Source\PSoC4/ETH.c **** #include "ETH_reg51.h"
  43:.\Generated_Source\PSoC4/ETH.c **** 
  44:.\Generated_Source\PSoC4/ETH.c **** /* include the serial interface functions */
  45:.\Generated_Source\PSoC4/ETH.c **** #include <SPI0.h>
  46:.\Generated_Source\PSoC4/ETH.c **** #include <SSCR.h>
  47:.\Generated_Source\PSoC4/ETH.c **** 
  48:.\Generated_Source\PSoC4/ETH.c **** extern uint8 SPI0_initVar;
  49:.\Generated_Source\PSoC4/ETH.c **** 
  50:.\Generated_Source\PSoC4/ETH.c **** typedef struct
  51:.\Generated_Source\PSoC4/ETH.c **** {
  52:.\Generated_Source\PSoC4/ETH.c **** 	uint8  Protocol;
  53:.\Generated_Source\PSoC4/ETH.c **** 	uint8  SocketFlags;
  54:.\Generated_Source\PSoC4/ETH.c **** 	uint16 SourcePort;
  55:.\Generated_Source\PSoC4/ETH.c **** 	uint8  ServerFlag;
  56:.\Generated_Source\PSoC4/ETH.c **** 	uint8  TxBufferSize;
  57:.\Generated_Source\PSoC4/ETH.c **** 	uint8  RxBufferSize;
  58:.\Generated_Source\PSoC4/ETH.c **** } ETH_SOCKET;
  59:.\Generated_Source\PSoC4/ETH.c **** 
  60:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 1) // W5100 Specific
  61:.\Generated_Source\PSoC4/ETH.c **** const uint16 ETH_SOCKET_TX_BASE[4] = { 0x4000, 0x4800, 0x5000, 0x5800 };
  62:.\Generated_Source\PSoC4/ETH.c **** const uint16 ETH_SOCKET_RX_BASE[4] = { 0x6000, 0x6800, 0x7000, 0x7800 };
  63:.\Generated_Source\PSoC4/ETH.c **** 
  64:.\Generated_Source\PSoC4/ETH.c **** #define ETH_MAX_SOCKET   ( 4 )
  65:.\Generated_Source\PSoC4/ETH.c **** #define ETH_BURST_MAX    ( 1 )
  66:.\Generated_Source\PSoC4/ETH.c **** 
  67:.\Generated_Source\PSoC4/ETH.c **** /**
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 3


  68:.\Generated_Source\PSoC4/ETH.c ****  * \def ETH_SOCKET REG(s,r)
  69:.\Generated_Source\PSoC4/ETH.c ****  * \brief Convert the socket number to a base address within the W5100
  70:.\Generated_Source\PSoC4/ETH.c ****  */
  71:.\Generated_Source\PSoC4/ETH.c **** #define ETH_SOCKET_REG(s,r)           ( ((s<<8)+0x0400) + r )
  72:.\Generated_Source\PSoC4/ETH.c **** 
  73:.\Generated_Source\PSoC4/ETH.c **** #elif (1 == 2) // W5200 Specific
  74:.\Generated_Source\PSoC4/ETH.c **** 	
  75:.\Generated_Source\PSoC4/ETH.c **** const uint16 ETH_SOCKET_TX_BASE[8] = { 0x8000, 0x8800, 0x9000, 0x9800, 0xA000, 0xA800, 0xB000, 0xB8
  76:.\Generated_Source\PSoC4/ETH.c **** const uint16 ETH_SOCKET_RX_BASE[8] = { 0xC000, 0xC800, 0xD000, 0xD800, 0xE000, 0xE800, 0xF000, 0xF8
  77:.\Generated_Source\PSoC4/ETH.c **** 
  78:.\Generated_Source\PSoC4/ETH.c **** #define ETH_MAX_SOCKET   ( 8 )
  79:.\Generated_Source\PSoC4/ETH.c **** #define ETH_BURST_MAX    ( 0x7FFF )
  80:.\Generated_Source\PSoC4/ETH.c **** 
  81:.\Generated_Source\PSoC4/ETH.c **** /**
  82:.\Generated_Source\PSoC4/ETH.c ****  * \def ETH_SOCKET REG(s,r)
  83:.\Generated_Source\PSoC4/ETH.c ****  * \brief Convert the socket number and register to a base address within the W5200
  84:.\Generated_Source\PSoC4/ETH.c ****  */
  85:.\Generated_Source\PSoC4/ETH.c **** #define ETH_SOCKET_REG(s,r)           ( ((s<<8)+0x4000) + r )
  86:.\Generated_Source\PSoC4/ETH.c **** 
  87:.\Generated_Source\PSoC4/ETH.c **** #else
  88:.\Generated_Source\PSoC4/ETH.c **** 	#error "W5x00 components other than W5100 and W5200 are not currently supported"
  89:.\Generated_Source\PSoC4/ETH.c **** #endif
  90:.\Generated_Source\PSoC4/ETH.c **** 
  91:.\Generated_Source\PSoC4/ETH.c **** ETH_SOCKET ETH_SocketConfig[ETH_MAX_SOCKET];
  92:.\Generated_Source\PSoC4/ETH.c **** uint32 ETH_SubnetMask;
  93:.\Generated_Source\PSoC4/ETH.c **** 
  94:.\Generated_Source\PSoC4/ETH.c **** uint8 ETH_MAC[6]; /* V1.2: removed = {00-de-ad-be-ef-00}; */
  95:.\Generated_Source\PSoC4/ETH.c **** 
  96:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
  97:.\Generated_Source\PSoC4/ETH.c **** /* V1.2 HEX digit conversion tools for MAC Address parsing */
  98:.\Generated_Source\PSoC4/ETH.c **** #define ETH_ISXDIGIT(x) \
  99:.\Generated_Source\PSoC4/ETH.c **** ( ((x>='0')&&(x<='9'))||((x>='a')&&(x<='f'))||((x>='A')&&(x<='F')) )
 100:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 101:.\Generated_Source\PSoC4/ETH.c **** #define ETH_HEX2BIN(x) \
 102:.\Generated_Source\PSoC4/ETH.c **** ( ((x>='0')&&(x<='9'))? (x-'0') : \
 103:.\Generated_Source\PSoC4/ETH.c ****   ((x>='a')&&(x<='f'))? ((x-'a')+10) : \
 104:.\Generated_Source\PSoC4/ETH.c ****   ((x>='A')&&(x<='F'))? ((x-'A')+10) : 0 )
 105:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 106:.\Generated_Source\PSoC4/ETH.c **** #define ETH_BIN2HEX(x) \
 107:.\Generated_Source\PSoC4/ETH.c **** ( (x>9)? ((x-10)+'A') : (x + '0'))
 108:.\Generated_Source\PSoC4/ETH.c **** /* END V1.2 defines */
 109:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 110:.\Generated_Source\PSoC4/ETH.c **** 
 111:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 112:.\Generated_Source\PSoC4/ETH.c **** /**
 113:.\Generated_Source\PSoC4/ETH.c ****  * \brief Select the active SCB chip select connected to the W51
 114:.\Generated_Source\PSoC4/ETH.c ****  *
 115:.\Generated_Source\PSoC4/ETH.c ****  * this fucntion will set the active SS line within the SCB to select and
 116:.\Generated_Source\PSoC4/ETH.c ****  * communicate with the W5100 device.
 117:.\Generated_Source\PSoC4/ETH.c ****  * \note this functions requires that the device chip select is originating
 118:.\Generated_Source\PSoC4/ETH.c ****  *  from the SPI device.
 119:.\Generated_Source\PSoC4/ETH.c ****  */
 120:.\Generated_Source\PSoC4/ETH.c **** void
 121:.\Generated_Source\PSoC4/ETH.c **** ETH_ChipSelect( void )
 122:.\Generated_Source\PSoC4/ETH.c **** {
  48              		.loc 1 122 0
  49              		.cfi_startproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 4


  50 0000 80B5     		push	{r7, lr}
  51              	.LCFI0:
  52              		.cfi_def_cfa_offset 8
  53              		.cfi_offset 7, -8
  54              		.cfi_offset 14, -4
  55 0002 00AF     		add	r7, sp, #0
  56              	.LCFI1:
  57              		.cfi_def_cfa_register 7
 123:.\Generated_Source\PSoC4/ETH.c **** 	/*
 124:.\Generated_Source\PSoC4/ETH.c **** 	 * User code for setting the chip select enable.  This is called once
 125:.\Generated_Source\PSoC4/ETH.c **** 	 * at the beginning of each tranfer to/from the W5100, so we recommend
 126:.\Generated_Source\PSoC4/ETH.c **** 	 * either doing nothing (SPIM SS straight out), or to switch the demux
 127:.\Generated_Source\PSoC4/ETH.c **** 	 * component to select the correct output for the SS routing.  This
 128:.\Generated_Source\PSoC4/ETH.c **** 	 * should probably not drive a pin directly since there is no return
 129:.\Generated_Source\PSoC4/ETH.c **** 	 * call from the driver that would allow an enable/disable type of
 130:.\Generated_Source\PSoC4/ETH.c **** 	 * implementation for CSN control.
 131:.\Generated_Source\PSoC4/ETH.c **** 	 */
 132:.\Generated_Source\PSoC4/ETH.c **** 	SSCR_Write( ~(1<<0) );
  58              		.loc 1 132 0
  59 0004 FE20     		mov	r0, #254
  60 0006 FFF7FEFF 		bl	SSCR_Write
 133:.\Generated_Source\PSoC4/ETH.c **** 	/* `#START CHIP_SELECT_GENERATION` */
 134:.\Generated_Source\PSoC4/ETH.c **** 
 135:.\Generated_Source\PSoC4/ETH.c **** 	/* `#END` */
 136:.\Generated_Source\PSoC4/ETH.c **** }
  61              		.loc 1 136 0
  62 000a BD46     		mov	sp, r7
  63              		@ sp needed for prologue
  64 000c 80BD     		pop	{r7, pc}
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	ETH_ChipSelect, .-ETH_ChipSelect
  68 000e C046     		.section	.text.ETH_ChipDeSelect,"ax",%progbits
  69              		.align	2
  70              		.global	ETH_ChipDeSelect
  71              		.code	16
  72              		.thumb_func
  73              		.type	ETH_ChipDeSelect, %function
  74              	ETH_ChipDeSelect:
  75              	.LFB1:
 137:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 138:.\Generated_Source\PSoC4/ETH.c **** /**
 139:.\Generated_Source\PSoC4/ETH.c ****  * \brief Called at the end of a transfer to deselect the device
 140:.\Generated_Source\PSoC4/ETH.c ****  *
 141:.\Generated_Source\PSoC4/ETH.c ****  * This function is called by the chip access functions from the core
 142:.\Generated_Source\PSoC4/ETH.c ****  * interface code to de-select the device after the read/write operation
 143:.\Generated_Source\PSoC4/ETH.c ****  * has been completed. This was changed from the "old way" of doing things
 144:.\Generated_Source\PSoC4/ETH.c ****  * using the hardware SS pin because the FIFO will empty too quickly
 145:.\Generated_Source\PSoC4/ETH.c ****  * causing interruptions in the transfer during burst writes at high
 146:.\Generated_Source\PSoC4/ETH.c ****  * speed. This allows bursting without having to have a huge software
 147:.\Generated_Source\PSoC4/ETH.c ****  * FIFO and using DMA to keep the buffer loaded.
 148:.\Generated_Source\PSoC4/ETH.c ****  */
 149:.\Generated_Source\PSoC4/ETH.c **** void
 150:.\Generated_Source\PSoC4/ETH.c **** ETH_ChipDeSelect( void )
 151:.\Generated_Source\PSoC4/ETH.c **** {
  76              		.loc 1 151 0
  77              		.cfi_startproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 5


  78 0000 80B5     		push	{r7, lr}
  79              	.LCFI2:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 00AF     		add	r7, sp, #0
  84              	.LCFI3:
  85              		.cfi_def_cfa_register 7
 152:.\Generated_Source\PSoC4/ETH.c **** 	SSCR_Write(0xFF);
  86              		.loc 1 152 0
  87 0004 FF20     		mov	r0, #255
  88 0006 FFF7FEFF 		bl	SSCR_Write
 153:.\Generated_Source\PSoC4/ETH.c **** }
  89              		.loc 1 153 0
  90 000a BD46     		mov	sp, r7
  91              		@ sp needed for prologue
  92 000c 80BD     		pop	{r7, pc}
  93              		.cfi_endproc
  94              	.LFE1:
  95              		.size	ETH_ChipDeSelect, .-ETH_ChipDeSelect
  96 000e C046     		.section	.text.ETH_ChipWrite,"ax",%progbits
  97              		.align	2
  98              		.global	ETH_ChipWrite
  99              		.code	16
 100              		.thumb_func
 101              		.type	ETH_ChipWrite, %function
 102              	ETH_ChipWrite:
 103              	.LFB2:
 154:.\Generated_Source\PSoC4/ETH.c **** 
 155:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 156:.\Generated_Source\PSoC4/ETH.c **** /* Generic SPI Functions */
 157:.\Generated_Source\PSoC4/ETH.c **** /*
 158:.\Generated_Source\PSoC4/ETH.c ****  * NOTE: when using the SPIM, there must be a buffer length of at least 4
 159:.\Generated_Source\PSoC4/ETH.c ****  * bytes to allow the transfer/receive cycle for each read/write operation
 160:.\Generated_Source\PSoC4/ETH.c ****  * to be contained within the FIFO buffer.
 161:.\Generated_Source\PSoC4/ETH.c ****  */
 162:.\Generated_Source\PSoC4/ETH.c **** #if !defined(CY_SCB_SPI0_H)
 163:.\Generated_Source\PSoC4/ETH.c **** 	/* SPIM Code */
 164:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */	
 165:.\Generated_Source\PSoC4/ETH.c **** /* V1.1 : Macro definition for the SpiDone flag. */
 166:.\Generated_Source\PSoC4/ETH.c **** /*  
 167:.\Generated_Source\PSoC4/ETH.c **** 	V1.2 : Added SPI_IDLE flag to the condition for done to eliminate
 168:.\Generated_Source\PSoC4/ETH.c **** 	deadlocking when IDLE but not done.  This seems to occur during the
 169:.\Generated_Source\PSoC4/ETH.c **** 	initial write/read to/from the SPI port.
 170:.\Generated_Source\PSoC4/ETH.c **** */
 171:.\Generated_Source\PSoC4/ETH.c **** /**
 172:.\Generated_Source\PSoC4/ETH.c ****  * \brief Macro to determine the state of the spi done
 173:.\Generated_Source\PSoC4/ETH.c ****  * This macro reads the status register of the transmitter and masks off the doen bit.
 174:.\Generated_Source\PSoC4/ETH.c ****  */
 175:.\Generated_Source\PSoC4/ETH.c **** #define ETH_SpiDone     (SPI0_ReadTxStatus() & (SPI0_STS_SPI_DONE | SPI0_STS_SPI_IDLE))
 176:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 177:.\Generated_Source\PSoC4/ETH.c **** /**
 178:.\Generated_Source\PSoC4/ETH.c ****  * \brief write Data to the W5100 at the specified address
 179:.\Generated_Source\PSoC4/ETH.c ****  * \param addr Address of register or memory buffer
 180:.\Generated_Source\PSoC4/ETH.c ****  * \param dat Data to write to the device
 181:.\Generated_Source\PSoC4/ETH.c ****  *
 182:.\Generated_Source\PSoC4/ETH.c ****  * This function will send the WRITE opcode, address and data to the W5100
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 6


 183:.\Generated_Source\PSoC4/ETH.c ****  * in order to write the data to the specified register.
 184:.\Generated_Source\PSoC4/ETH.c ****  */
 185:.\Generated_Source\PSoC4/ETH.c **** void 
 186:.\Generated_Source\PSoC4/ETH.c **** ETH_ChipWrite(uint16 addr, uint8 *dat, uint16 length)
 187:.\Generated_Source\PSoC4/ETH.c **** {
 104              		.loc 1 187 0
 105              		.cfi_startproc
 106 0000 90B5     		push	{r4, r7, lr}
 107              	.LCFI4:
 108              		.cfi_def_cfa_offset 12
 109              		.cfi_offset 4, -12
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 85B0     		sub	sp, sp, #20
 113              	.LCFI5:
 114              		.cfi_def_cfa_offset 32
 115 0004 00AF     		add	r7, sp, #0
 116              	.LCFI6:
 117              		.cfi_def_cfa_register 7
 118 0006 3960     		str	r1, [r7]
 119 0008 BB1D     		add	r3, r7, #6
 120 000a 011C     		add	r1, r0, #0
 121 000c 1980     		strh	r1, [r3]
 122 000e 3B1D     		add	r3, r7, #4
 123 0010 1A80     		strh	r2, [r3]
 188:.\Generated_Source\PSoC4/ETH.c **** 	uint16 txLen;
 189:.\Generated_Source\PSoC4/ETH.c **** 	uint16 txCount;
 190:.\Generated_Source\PSoC4/ETH.c **** 	uint16 adr;
 191:.\Generated_Source\PSoC4/ETH.c **** 	uint8 crit;
 192:.\Generated_Source\PSoC4/ETH.c **** 	
 193:.\Generated_Source\PSoC4/ETH.c **** 	/* V1.1: Wait for SPI operation to complete */
 194:.\Generated_Source\PSoC4/ETH.c **** 	while( ETH_SpiDone == 0) {
 124              		.loc 1 194 0
 125 0012 02E0     		b	.L4
 126              	.L5:
 195:.\Generated_Source\PSoC4/ETH.c **** 		CyDelayUs(1);
 127              		.loc 1 195 0
 128 0014 0120     		mov	r0, #1
 129 0016 FFF7FEFF 		bl	CyDelayUs
 130              	.L4:
 194:.\Generated_Source\PSoC4/ETH.c **** 	while( ETH_SpiDone == 0) {
 131              		.loc 1 194 0 discriminator 1
 132 001a FFF7FEFF 		bl	SPI0_ReadTxStatus
 133 001e 031C     		mov	r3, r0
 134 0020 1A1C     		mov	r2, r3
 135 0022 1123     		mov	r3, #17
 136 0024 1340     		and	r3, r2
 137 0026 F5D0     		beq	.L5
 196:.\Generated_Source\PSoC4/ETH.c **** 	}
 197:.\Generated_Source\PSoC4/ETH.c **** 	/* V1.1: End change */
 198:.\Generated_Source\PSoC4/ETH.c **** 	
 199:.\Generated_Source\PSoC4/ETH.c **** 	crit = CyEnterCriticalSection();
 138              		.loc 1 199 0
 139 0028 3C1C     		mov	r4, r7
 140 002a 0934     		add	r4, r4, #9
 141 002c FFF7FEFF 		bl	CyEnterCriticalSection
 142 0030 031C     		mov	r3, r0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 7


 143 0032 2370     		strb	r3, [r4]
 200:.\Generated_Source\PSoC4/ETH.c **** 	
 201:.\Generated_Source\PSoC4/ETH.c **** 	adr = addr;
 144              		.loc 1 201 0
 145 0034 3B1C     		mov	r3, r7
 146 0036 0A33     		add	r3, r3, #10
 147 0038 BA1D     		add	r2, r7, #6
 148 003a 1288     		ldrh	r2, [r2]
 149 003c 1A80     		strh	r2, [r3]
 202:.\Generated_Source\PSoC4/ETH.c **** 	txLen = 0;
 150              		.loc 1 202 0
 151 003e 3B1C     		mov	r3, r7
 152 0040 0E33     		add	r3, r3, #14
 153 0042 0022     		mov	r2, #0
 154 0044 1A80     		strh	r2, [r3]
 203:.\Generated_Source\PSoC4/ETH.c **** 	txCount = 0;
 155              		.loc 1 203 0
 156 0046 3B1C     		mov	r3, r7
 157 0048 0C33     		add	r3, r3, #12
 158 004a 0022     		mov	r2, #0
 159 004c 1A80     		strh	r2, [r3]
 160              	.L10:
 204:.\Generated_Source\PSoC4/ETH.c **** 	do {
 205:.\Generated_Source\PSoC4/ETH.c **** 		/* Using internal device SS generation */
 206:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipSelect();
 161              		.loc 1 206 0
 162 004e FFF7FEFF 		bl	ETH_ChipSelect
 207:.\Generated_Source\PSoC4/ETH.c **** 		/*
 208:.\Generated_Source\PSoC4/ETH.c **** 		 * The first thing to do is to clear the Rx Buffer of any lingering
 209:.\Generated_Source\PSoC4/ETH.c **** 		 * data left from other transfers.  Then send the data per the W5100
 210:.\Generated_Source\PSoC4/ETH.c **** 		 * datasheet p.62
 211:.\Generated_Source\PSoC4/ETH.c **** 		 */
 212:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_ClearRxBuffer();
 163              		.loc 1 212 0
 164 0052 FFF7FEFF 		bl	SPI0_ClearRxBuffer
 213:.\Generated_Source\PSoC4/ETH.c **** 		/* Begin transfer of data to device */
 214:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 1)
 215:.\Generated_Source\PSoC4/ETH.c **** 		/*
 216:.\Generated_Source\PSoC4/ETH.c **** 	     * The W5100 uses an opcode followed by the register/buffer
 217:.\Generated_Source\PSoC4/ETH.c **** 	     * address for each data element transfered.
 218:.\Generated_Source\PSoC4/ETH.c **** 	     */
 219:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData(ETH_WRITE_OP);
 165              		.loc 1 219 0
 166 0056 F020     		mov	r0, #240
 167 0058 FFF7FEFF 		bl	SPI0_WriteTxData
 220:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData((adr>>8)&0x00FF);
 168              		.loc 1 220 0
 169 005c 3B1C     		mov	r3, r7
 170 005e 0A33     		add	r3, r3, #10
 171 0060 1B88     		ldrh	r3, [r3]
 172 0062 1B0A     		lsr	r3, r3, #8
 173 0064 9BB2     		uxth	r3, r3
 174 0066 DBB2     		uxtb	r3, r3
 175 0068 181C     		mov	r0, r3
 176 006a FFF7FEFF 		bl	SPI0_WriteTxData
 221:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData(adr&0x00FF);
 177              		.loc 1 221 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 8


 178 006e 3B1C     		mov	r3, r7
 179 0070 0A33     		add	r3, r3, #10
 180 0072 1B88     		ldrh	r3, [r3]
 181 0074 DBB2     		uxtb	r3, r3
 182 0076 181C     		mov	r0, r3
 183 0078 FFF7FEFF 		bl	SPI0_WriteTxData
 222:.\Generated_Source\PSoC4/ETH.c **** 		txLen = 1;
 184              		.loc 1 222 0
 185 007c 3B1C     		mov	r3, r7
 186 007e 0E33     		add	r3, r3, #14
 187 0080 0122     		mov	r2, #1
 188 0082 1A80     		strh	r2, [r3]
 189              	.L11:
 223:.\Generated_Source\PSoC4/ETH.c **** #elif (1 == 2)
 224:.\Generated_Source\PSoC4/ETH.c **** 	    /*
 225:.\Generated_Source\PSoC4/ETH.c **** 	     * The Header block for the W5200 uses the address, plus
 226:.\Generated_Source\PSoC4/ETH.c **** 	     * a length word which contains a read/write bit.  Setting
 227:.\Generated_Source\PSoC4/ETH.c **** 	     * the bit to a 1 (0x80) will enable write mode
 228:.\Generated_Source\PSoC4/ETH.c **** 	     */
 229:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( (adr>>8) & 0x00FF);
 230:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( adr & 0x00FF );
 231:.\Generated_Source\PSoC4/ETH.c **** 		txLen = (lenght > ETH_BURST_MAX)? ETH_BURST_MAX : length;
 232:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( 0x80 | ((txLen>>8)&0x007F) );
 233:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( txLen & 0x00FF );
 234:.\Generated_Source\PSoC4/ETH.c **** #endif
 235:.\Generated_Source\PSoC4/ETH.c **** 		/*
 236:.\Generated_Source\PSoC4/ETH.c ****          * send the sequence of bytes to the device following the 
 237:.\Generated_Source\PSoC4/ETH.c ****          * header data transfer.  This will wait for the FIFO to  have
 238:.\Generated_Source\PSoC4/ETH.c ****          * available memory prior to writing the data to the part.
 239:.\Generated_Source\PSoC4/ETH.c ****          * at the end of the block the loop exits and ends the operation
 240:.\Generated_Source\PSoC4/ETH.c ****          * by setting the chip select high.
 241:.\Generated_Source\PSoC4/ETH.c ****          */
 242:.\Generated_Source\PSoC4/ETH.c **** 		// Transmit data block
 243:.\Generated_Source\PSoC4/ETH.c **** 		do {
 244:.\Generated_Source\PSoC4/ETH.c **** 			while ( (SPI0_ReadTxStatus() & SPI0_STS_TX_FIFO_NOT_FULL) == 0);
 190              		.loc 1 244 0
 191 0084 C046     		mov	r8, r8
 192              	.L6:
 193              		.loc 1 244 0 is_stmt 0 discriminator 1
 194 0086 FFF7FEFF 		bl	SPI0_ReadTxStatus
 195 008a 031C     		mov	r3, r0
 196 008c 1A1C     		mov	r2, r3
 197 008e 0423     		mov	r3, #4
 198 0090 1340     		and	r3, r2
 199 0092 F8D0     		beq	.L6
 245:.\Generated_Source\PSoC4/ETH.c **** 			SPI0_WriteTxData(dat[txCount++]);
 200              		.loc 1 245 0 is_stmt 1
 201 0094 3B1C     		mov	r3, r7
 202 0096 0C33     		add	r3, r3, #12
 203 0098 1B88     		ldrh	r3, [r3]
 204 009a 3A68     		ldr	r2, [r7]
 205 009c D318     		add	r3, r2, r3
 206 009e 1B78     		ldrb	r3, [r3]
 207 00a0 3A1C     		mov	r2, r7
 208 00a2 0C32     		add	r2, r2, #12
 209 00a4 391C     		mov	r1, r7
 210 00a6 0C31     		add	r1, r1, #12
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 9


 211 00a8 0988     		ldrh	r1, [r1]
 212 00aa 0131     		add	r1, r1, #1
 213 00ac 1180     		strh	r1, [r2]
 214 00ae 181C     		mov	r0, r3
 215 00b0 FFF7FEFF 		bl	SPI0_WriteTxData
 246:.\Generated_Source\PSoC4/ETH.c **** 			--length;
 216              		.loc 1 246 0
 217 00b4 3B1D     		add	r3, r7, #4
 218 00b6 3A1D     		add	r2, r7, #4
 219 00b8 1288     		ldrh	r2, [r2]
 220 00ba 013A     		sub	r2, r2, #1
 221 00bc 1A80     		strh	r2, [r3]
 247:.\Generated_Source\PSoC4/ETH.c **** 			--txLen;
 222              		.loc 1 247 0
 223 00be 3B1C     		mov	r3, r7
 224 00c0 0E33     		add	r3, r3, #14
 225 00c2 3A1C     		mov	r2, r7
 226 00c4 0E32     		add	r2, r2, #14
 227 00c6 1288     		ldrh	r2, [r2]
 228 00c8 013A     		sub	r2, r2, #1
 229 00ca 1A80     		strh	r2, [r3]
 248:.\Generated_Source\PSoC4/ETH.c **** 			++adr;
 230              		.loc 1 248 0
 231 00cc 3B1C     		mov	r3, r7
 232 00ce 0A33     		add	r3, r3, #10
 233 00d0 3A1C     		mov	r2, r7
 234 00d2 0A32     		add	r2, r2, #10
 235 00d4 1288     		ldrh	r2, [r2]
 236 00d6 0132     		add	r2, r2, #1
 237 00d8 1A80     		strh	r2, [r3]
 249:.\Generated_Source\PSoC4/ETH.c **** 		} while ( txLen > 0 );
 238              		.loc 1 249 0
 239 00da 3B1C     		mov	r3, r7
 240 00dc 0E33     		add	r3, r3, #14
 241 00de 1B88     		ldrh	r3, [r3]
 242 00e0 002B     		cmp	r3, #0
 243 00e2 CFD1     		bne	.L11
 250:.\Generated_Source\PSoC4/ETH.c **** 
 251:.\Generated_Source\PSoC4/ETH.c **** 		while( ETH_SpiDone == 0) {
 244              		.loc 1 251 0
 245 00e4 02E0     		b	.L8
 246              	.L9:
 252:.\Generated_Source\PSoC4/ETH.c **** 			CyDelayUs(1);
 247              		.loc 1 252 0
 248 00e6 0120     		mov	r0, #1
 249 00e8 FFF7FEFF 		bl	CyDelayUs
 250              	.L8:
 251:.\Generated_Source\PSoC4/ETH.c **** 		while( ETH_SpiDone == 0) {
 251              		.loc 1 251 0 discriminator 1
 252 00ec FFF7FEFF 		bl	SPI0_ReadTxStatus
 253 00f0 031C     		mov	r3, r0
 254 00f2 1A1C     		mov	r2, r3
 255 00f4 1123     		mov	r3, #17
 256 00f6 1340     		and	r3, r2
 257 00f8 F5D0     		beq	.L9
 253:.\Generated_Source\PSoC4/ETH.c **** 		}
 254:.\Generated_Source\PSoC4/ETH.c **** 		// End operation
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 10


 255:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipDeSelect();
 258              		.loc 1 255 0
 259 00fa FFF7FEFF 		bl	ETH_ChipDeSelect
 256:.\Generated_Source\PSoC4/ETH.c **** 	} while (length > 0);
 260              		.loc 1 256 0
 261 00fe 3B1D     		add	r3, r7, #4
 262 0100 1B88     		ldrh	r3, [r3]
 263 0102 002B     		cmp	r3, #0
 264 0104 A3D1     		bne	.L10
 257:.\Generated_Source\PSoC4/ETH.c **** 	
 258:.\Generated_Source\PSoC4/ETH.c **** 	CyExitCriticalSection( crit );
 265              		.loc 1 258 0
 266 0106 3B1C     		mov	r3, r7
 267 0108 0933     		add	r3, r3, #9
 268 010a 1B78     		ldrb	r3, [r3]
 269 010c 181C     		mov	r0, r3
 270 010e FFF7FEFF 		bl	CyExitCriticalSection
 259:.\Generated_Source\PSoC4/ETH.c **** }
 271              		.loc 1 259 0
 272 0112 BD46     		mov	sp, r7
 273 0114 05B0     		add	sp, sp, #20
 274              		@ sp needed for prologue
 275 0116 90BD     		pop	{r4, r7, pc}
 276              		.cfi_endproc
 277              	.LFE2:
 278              		.size	ETH_ChipWrite, .-ETH_ChipWrite
 279              		.section	.text.ETH_ChipRead,"ax",%progbits
 280              		.align	2
 281              		.global	ETH_ChipRead
 282              		.code	16
 283              		.thumb_func
 284              		.type	ETH_ChipRead, %function
 285              	ETH_ChipRead:
 286              	.LFB3:
 260:.\Generated_Source\PSoC4/ETH.c **** 
 261:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 262:.\Generated_Source\PSoC4/ETH.c **** /**
 263:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read data from the W5100 at the spsecified address
 264:.\Generated_Source\PSoC4/ETH.c ****  * \param addr Address from which to read
 265:.\Generated_Source\PSoC4/ETH.c ****  * \returns the data read from the address
 266:.\Generated_Source\PSoC4/ETH.c ****  *
 267:.\Generated_Source\PSoC4/ETH.c ****  * this fucntion will access a W5100 memory location and read the contents
 268:.\Generated_Source\PSoC4/ETH.c ****  * using the serial protocol specified on P.61 of the datasheet.
 269:.\Generated_Source\PSoC4/ETH.c ****  */
 270:.\Generated_Source\PSoC4/ETH.c **** void
 271:.\Generated_Source\PSoC4/ETH.c **** ETH_ChipRead(uint16 addr, uint8 *dat, uint16 length)
 272:.\Generated_Source\PSoC4/ETH.c **** {
 287              		.loc 1 272 0
 288              		.cfi_startproc
 289 0000 90B5     		push	{r4, r7, lr}
 290              	.LCFI7:
 291              		.cfi_def_cfa_offset 12
 292              		.cfi_offset 4, -12
 293              		.cfi_offset 7, -8
 294              		.cfi_offset 14, -4
 295 0002 87B0     		sub	sp, sp, #28
 296              	.LCFI8:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 11


 297              		.cfi_def_cfa_offset 40
 298 0004 00AF     		add	r7, sp, #0
 299              	.LCFI9:
 300              		.cfi_def_cfa_register 7
 301 0006 3960     		str	r1, [r7]
 302 0008 BB1D     		add	r3, r7, #6
 303 000a 011C     		add	r1, r0, #0
 304 000c 1980     		strh	r1, [r3]
 305 000e 3B1D     		add	r3, r7, #4
 306 0010 1A80     		strh	r2, [r3]
 273:.\Generated_Source\PSoC4/ETH.c **** 	uint16 rxIndex;
 274:.\Generated_Source\PSoC4/ETH.c **** 	uint16 address;
 275:.\Generated_Source\PSoC4/ETH.c **** 	uint16 rxLen;
 276:.\Generated_Source\PSoC4/ETH.c **** 	uint16 txBytes;
 277:.\Generated_Source\PSoC4/ETH.c **** 	uint8 dump; // the number of bytes to ignore from the data stream readback
 278:.\Generated_Source\PSoC4/ETH.c **** 	uint16 rxCount;
 279:.\Generated_Source\PSoC4/ETH.c **** 	
 280:.\Generated_Source\PSoC4/ETH.c **** 	/* V1.1: Wait for SPI operation to complete */
 281:.\Generated_Source\PSoC4/ETH.c **** 	while( ETH_SpiDone == 0) {
 307              		.loc 1 281 0
 308 0012 02E0     		b	.L13
 309              	.L14:
 282:.\Generated_Source\PSoC4/ETH.c **** 		CyDelayUs(1);
 310              		.loc 1 282 0
 311 0014 0120     		mov	r0, #1
 312 0016 FFF7FEFF 		bl	CyDelayUs
 313              	.L13:
 281:.\Generated_Source\PSoC4/ETH.c **** 	while( ETH_SpiDone == 0) {
 314              		.loc 1 281 0 discriminator 1
 315 001a FFF7FEFF 		bl	SPI0_ReadTxStatus
 316 001e 031C     		mov	r3, r0
 317 0020 1A1C     		mov	r2, r3
 318 0022 1123     		mov	r3, #17
 319 0024 1340     		and	r3, r2
 320 0026 F5D0     		beq	.L14
 283:.\Generated_Source\PSoC4/ETH.c **** 	}
 284:.\Generated_Source\PSoC4/ETH.c **** 	/* V1.1: End change */
 285:.\Generated_Source\PSoC4/ETH.c **** 
 286:.\Generated_Source\PSoC4/ETH.c **** 	address = addr; // assign base pointer address
 321              		.loc 1 286 0
 322 0028 3B1C     		mov	r3, r7
 323 002a 1433     		add	r3, r3, #20
 324 002c BA1D     		add	r2, r7, #6
 325 002e 1288     		ldrh	r2, [r2]
 326 0030 1A80     		strh	r2, [r3]
 287:.\Generated_Source\PSoC4/ETH.c **** 	rxIndex = 0;    // default the starting index for the receive to zero
 327              		.loc 1 287 0
 328 0032 3B1C     		mov	r3, r7
 329 0034 1633     		add	r3, r3, #22
 330 0036 0022     		mov	r2, #0
 331 0038 1A80     		strh	r2, [r3]
 332              	.L20:
 288:.\Generated_Source\PSoC4/ETH.c **** 	do {
 289:.\Generated_Source\PSoC4/ETH.c **** 		/* Write the chip select instance to select the device */
 290:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipSelect();
 333              		.loc 1 290 0
 334 003a FFF7FEFF 		bl	ETH_ChipSelect
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 12


 291:.\Generated_Source\PSoC4/ETH.c **** 		/*
 292:.\Generated_Source\PSoC4/ETH.c **** 		 * First, clear the Rx Buffer of any waiting data.  Then begin the
 293:.\Generated_Source\PSoC4/ETH.c **** 		 * read operation by sending the op code, followed byte the address
 294:.\Generated_Source\PSoC4/ETH.c **** 		 * from which the read will be executed, then send a dummy byte
 295:.\Generated_Source\PSoC4/ETH.c **** 		 * of zeros to read the data from the device.
 296:.\Generated_Source\PSoC4/ETH.c **** 		 */
 297:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_ClearRxBuffer();
 335              		.loc 1 297 0
 336 003e FFF7FEFF 		bl	SPI0_ClearRxBuffer
 298:.\Generated_Source\PSoC4/ETH.c **** 		/* Send the device header */
 299:.\Generated_Source\PSoC4/ETH.c **** 		rxCount = 0; // initialize the bytes received to none
 337              		.loc 1 299 0
 338 0042 3B1C     		mov	r3, r7
 339 0044 0E33     		add	r3, r3, #14
 340 0046 0022     		mov	r2, #0
 341 0048 1A80     		strh	r2, [r3]
 300:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 1 )
 301:.\Generated_Source\PSoC4/ETH.c **** 		/*
 302:.\Generated_Source\PSoC4/ETH.c **** 		 * W1100 interface code
 303:.\Generated_Source\PSoC4/ETH.c **** 		 * --------------------
 304:.\Generated_Source\PSoC4/ETH.c **** 		 * The W5100 only supports 1 byte transfers (no burst mode), so
 305:.\Generated_Source\PSoC4/ETH.c **** 		 * peg the receive length as 1 byte, and issue a number of commands
 306:.\Generated_Source\PSoC4/ETH.c **** 		 * in sequence to simulate a burst read.
 307:.\Generated_Source\PSoC4/ETH.c **** 		 */
 308:.\Generated_Source\PSoC4/ETH.c **** 		rxLen = 1;  // The W5100 is limited to 1 byte of data transmitted
 342              		.loc 1 308 0
 343 004a 3B1C     		mov	r3, r7
 344 004c 0C33     		add	r3, r3, #12
 345 004e 0122     		mov	r2, #1
 346 0050 1A80     		strh	r2, [r3]
 309:.\Generated_Source\PSoC4/ETH.c **** 		dump = 3;   // The W5100 has a 3-byte packet header
 347              		.loc 1 309 0
 348 0052 3B1C     		mov	r3, r7
 349 0054 1133     		add	r3, r3, #17
 350 0056 0322     		mov	r2, #3
 351 0058 1A70     		strb	r2, [r3]
 310:.\Generated_Source\PSoC4/ETH.c **** 		txBytes = 1; // Send only one byte afte rthe header then end the transfer
 352              		.loc 1 310 0
 353 005a 3B1C     		mov	r3, r7
 354 005c 1233     		add	r3, r3, #18
 355 005e 0122     		mov	r2, #1
 356 0060 1A80     		strh	r2, [r3]
 311:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData(ETH_READ_OP);
 357              		.loc 1 311 0
 358 0062 0F20     		mov	r0, #15
 359 0064 FFF7FEFF 		bl	SPI0_WriteTxData
 312:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData(address>>8);
 360              		.loc 1 312 0
 361 0068 3B1C     		mov	r3, r7
 362 006a 1433     		add	r3, r3, #20
 363 006c 1B88     		ldrh	r3, [r3]
 364 006e 1B0A     		lsr	r3, r3, #8
 365 0070 9BB2     		uxth	r3, r3
 366 0072 DBB2     		uxtb	r3, r3
 367 0074 181C     		mov	r0, r3
 368 0076 FFF7FEFF 		bl	SPI0_WriteTxData
 313:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData(address&0x00FF);
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 13


 369              		.loc 1 313 0
 370 007a 3B1C     		mov	r3, r7
 371 007c 1433     		add	r3, r3, #20
 372 007e 1B88     		ldrh	r3, [r3]
 373 0080 DBB2     		uxtb	r3, r3
 374 0082 181C     		mov	r0, r3
 375 0084 FFF7FEFF 		bl	SPI0_WriteTxData
 314:.\Generated_Source\PSoC4/ETH.c **** 		
 315:.\Generated_Source\PSoC4/ETH.c **** #elif (1 == 2)
 316:.\Generated_Source\PSoC4/ETH.c **** 		/*
 317:.\Generated_Source\PSoC4/ETH.c **** 		 * W5200 Interface Header
 318:.\Generated_Source\PSoC4/ETH.c **** 		 * ----------------------
 319:.\Generated_Source\PSoC4/ETH.c **** 		 * The W5200 protocol expects an address followed by a read
 320:.\Generated_Source\PSoC4/ETH.c **** 		 * byte count for the header of the protocol, so, this will
 321:.\Generated_Source\PSoC4/ETH.c **** 		 * issue reads up to the max burst length
 322:.\Generated_Source\PSoC4/ETH.c **** 		 */
 323:.\Generated_Source\PSoC4/ETH.c **** 		dump = 4; /*  The W5200 has a definded data length and a header of 4 bytes */
 324:.\Generated_Source\PSoC4/ETH.c **** 		rxLen = (length < ETH_BURST_MAX) ? length : ETH_BURST_MAX;
 325:.\Generated_Source\PSoC4/ETH.c **** 		/* 
 326:.\Generated_Source\PSoC4/ETH.c **** 		 * Set the number of bytes to transmit before
 327:.\Generated_Source\PSoC4/ETH.c **** 		 * ending the packet to the calculated value
 328:.\Generated_Source\PSoC4/ETH.c **** 		 */
 329:.\Generated_Source\PSoC4/ETH.c **** 		txBytes = rxLen; 
 330:.\Generated_Source\PSoC4/ETH.c **** 		/* Send the packet header */
 331:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( address>>8);
 332:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( address & 0x00FF );
 333:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( 0x7F & (rxLen>>8) );
 334:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_WriteTxData( rxLen&0x00FF );
 335:.\Generated_Source\PSoC4/ETH.c **** #endif
 336:.\Generated_Source\PSoC4/ETH.c **** 
 337:.\Generated_Source\PSoC4/ETH.c **** 		while (rxCount < rxLen) {
 376              		.loc 1 337 0
 377 0088 69E0     		b	.L15
 378              	.L19:
 338:.\Generated_Source\PSoC4/ETH.c **** 			/*
 339:.\Generated_Source\PSoC4/ETH.c **** 			 * Read the data from the buffer.  The hadred data responses
 340:.\Generated_Source\PSoC4/ETH.c **** 			 * are going to be sitting inthe buffer, so dump them
 341:.\Generated_Source\PSoC4/ETH.c **** 			 * and just receive the data bock
 342:.\Generated_Source\PSoC4/ETH.c **** 			 */
 343:.\Generated_Source\PSoC4/ETH.c **** 			dat[rxIndex] = SPI0_ReadRxData();
 379              		.loc 1 343 0
 380 008a 3B1C     		mov	r3, r7
 381 008c 1633     		add	r3, r3, #22
 382 008e 1B88     		ldrh	r3, [r3]
 383 0090 3A68     		ldr	r2, [r7]
 384 0092 D418     		add	r4, r2, r3
 385 0094 FFF7FEFF 		bl	SPI0_ReadRxData
 386 0098 031C     		mov	r3, r0
 387 009a 2370     		strb	r3, [r4]
 344:.\Generated_Source\PSoC4/ETH.c **** 			if (dump > 0) {
 388              		.loc 1 344 0
 389 009c 3B1C     		mov	r3, r7
 390 009e 1133     		add	r3, r3, #17
 391 00a0 1B78     		ldrb	r3, [r3]
 392 00a2 002B     		cmp	r3, #0
 393 00a4 07D0     		beq	.L16
 345:.\Generated_Source\PSoC4/ETH.c **** 				--dump;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 14


 394              		.loc 1 345 0
 395 00a6 3B1C     		mov	r3, r7
 396 00a8 1133     		add	r3, r3, #17
 397 00aa 3A1C     		mov	r2, r7
 398 00ac 1132     		add	r2, r2, #17
 399 00ae 1278     		ldrb	r2, [r2]
 400 00b0 013A     		sub	r2, r2, #1
 401 00b2 1A70     		strb	r2, [r3]
 402 00b4 0DE0     		b	.L17
 403              	.L16:
 346:.\Generated_Source\PSoC4/ETH.c **** 			}
 347:.\Generated_Source\PSoC4/ETH.c **** 			else {
 348:.\Generated_Source\PSoC4/ETH.c **** 				++rxCount;
 404              		.loc 1 348 0
 405 00b6 3B1C     		mov	r3, r7
 406 00b8 0E33     		add	r3, r3, #14
 407 00ba 3A1C     		mov	r2, r7
 408 00bc 0E32     		add	r2, r2, #14
 409 00be 1288     		ldrh	r2, [r2]
 410 00c0 0132     		add	r2, r2, #1
 411 00c2 1A80     		strh	r2, [r3]
 349:.\Generated_Source\PSoC4/ETH.c **** 				++rxIndex;
 412              		.loc 1 349 0
 413 00c4 3B1C     		mov	r3, r7
 414 00c6 1633     		add	r3, r3, #22
 415 00c8 3A1C     		mov	r2, r7
 416 00ca 1632     		add	r2, r2, #22
 417 00cc 1288     		ldrh	r2, [r2]
 418 00ce 0132     		add	r2, r2, #1
 419 00d0 1A80     		strh	r2, [r3]
 420              	.L17:
 350:.\Generated_Source\PSoC4/ETH.c **** 			}
 351:.\Generated_Source\PSoC4/ETH.c **** 			/*
 352:.\Generated_Source\PSoC4/ETH.c **** 			 * Since the header is clogging the buffer (and it is inefficient
 353:.\Generated_Source\PSoC4/ETH.c **** 			 * to just clear the header before executing the reads), this loop
 354:.\Generated_Source\PSoC4/ETH.c **** 			 * will transmit the data completely the header size before
 355:.\Generated_Source\PSoC4/ETH.c **** 			 * the data has been read, so, send the data when the rxLength
 356:.\Generated_Source\PSoC4/ETH.c **** 			 * is not zero.
 357:.\Generated_Source\PSoC4/ETH.c **** 			 */
 358:.\Generated_Source\PSoC4/ETH.c **** 			if (txBytes > 0 ) {
 421              		.loc 1 358 0
 422 00d2 3B1C     		mov	r3, r7
 423 00d4 1233     		add	r3, r3, #18
 424 00d6 1B88     		ldrh	r3, [r3]
 425 00d8 002B     		cmp	r3, #0
 426 00da 16D0     		beq	.L18
 359:.\Generated_Source\PSoC4/ETH.c **** 				SPI0_WriteTxData( 0 );
 427              		.loc 1 359 0
 428 00dc 0020     		mov	r0, #0
 429 00de FFF7FEFF 		bl	SPI0_WriteTxData
 360:.\Generated_Source\PSoC4/ETH.c **** 				++address;
 430              		.loc 1 360 0
 431 00e2 3B1C     		mov	r3, r7
 432 00e4 1433     		add	r3, r3, #20
 433 00e6 3A1C     		mov	r2, r7
 434 00e8 1432     		add	r2, r2, #20
 435 00ea 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 15


 436 00ec 0132     		add	r2, r2, #1
 437 00ee 1A80     		strh	r2, [r3]
 361:.\Generated_Source\PSoC4/ETH.c **** 				--length;
 438              		.loc 1 361 0
 439 00f0 3B1D     		add	r3, r7, #4
 440 00f2 3A1D     		add	r2, r7, #4
 441 00f4 1288     		ldrh	r2, [r2]
 442 00f6 013A     		sub	r2, r2, #1
 443 00f8 1A80     		strh	r2, [r3]
 362:.\Generated_Source\PSoC4/ETH.c **** 				--txBytes;
 444              		.loc 1 362 0
 445 00fa 3B1C     		mov	r3, r7
 446 00fc 1233     		add	r3, r3, #18
 447 00fe 3A1C     		mov	r2, r7
 448 0100 1232     		add	r2, r2, #18
 449 0102 1288     		ldrh	r2, [r2]
 450 0104 013A     		sub	r2, r2, #1
 451 0106 1A80     		strh	r2, [r3]
 452 0108 29E0     		b	.L15
 453              	.L18:
 363:.\Generated_Source\PSoC4/ETH.c **** 			}
 364:.\Generated_Source\PSoC4/ETH.c **** 			else {
 365:.\Generated_Source\PSoC4/ETH.c **** 				if (ETH_SpiDone != 0) {
 454              		.loc 1 365 0
 455 010a FFF7FEFF 		bl	SPI0_ReadTxStatus
 456 010e 031C     		mov	r3, r0
 457 0110 1A1C     		mov	r2, r3
 458 0112 1123     		mov	r3, #17
 459 0114 1340     		and	r3, r2
 460 0116 3A1D     		add	r2, r7, #4
 461 0118 391D     		add	r1, r7, #4
 462 011a 0988     		ldrh	r1, [r1]
 463 011c 1180     		strh	r1, [r2]
 464 011e 3A1C     		mov	r2, r7
 465 0120 1432     		add	r2, r2, #20
 466 0122 391C     		mov	r1, r7
 467 0124 1431     		add	r1, r1, #20
 468 0126 0988     		ldrh	r1, [r1]
 469 0128 1180     		strh	r1, [r2]
 470 012a 3A1C     		mov	r2, r7
 471 012c 1232     		add	r2, r2, #18
 472 012e 391C     		mov	r1, r7
 473 0130 1231     		add	r1, r1, #18
 474 0132 0988     		ldrh	r1, [r1]
 475 0134 1180     		strh	r1, [r2]
 476 0136 002B     		cmp	r3, #0
 477 0138 11D0     		beq	.L15
 366:.\Generated_Source\PSoC4/ETH.c **** 					ETH_ChipDeSelect();
 478              		.loc 1 366 0
 479 013a FFF7FEFF 		bl	ETH_ChipDeSelect
 480 013e 3B1D     		add	r3, r7, #4
 481 0140 3A1D     		add	r2, r7, #4
 482 0142 1288     		ldrh	r2, [r2]
 483 0144 1A80     		strh	r2, [r3]
 484 0146 3B1C     		mov	r3, r7
 485 0148 1433     		add	r3, r3, #20
 486 014a 3A1C     		mov	r2, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 16


 487 014c 1432     		add	r2, r2, #20
 488 014e 1288     		ldrh	r2, [r2]
 489 0150 1A80     		strh	r2, [r3]
 490 0152 3B1C     		mov	r3, r7
 491 0154 1233     		add	r3, r3, #18
 492 0156 3A1C     		mov	r2, r7
 493 0158 1232     		add	r2, r2, #18
 494 015a 1288     		ldrh	r2, [r2]
 495 015c 1A80     		strh	r2, [r3]
 496              	.L15:
 337:.\Generated_Source\PSoC4/ETH.c **** 		while (rxCount < rxLen) {
 497              		.loc 1 337 0 discriminator 1
 498 015e 3A1C     		mov	r2, r7
 499 0160 0E32     		add	r2, r2, #14
 500 0162 3B1C     		mov	r3, r7
 501 0164 0C33     		add	r3, r3, #12
 502 0166 1288     		ldrh	r2, [r2]
 503 0168 1B88     		ldrh	r3, [r3]
 504 016a 9A42     		cmp	r2, r3
 505 016c 00D2     		bcs	.LCB412
 506 016e 8CE7     		b	.L19	@long jump
 507              	.LCB412:
 367:.\Generated_Source\PSoC4/ETH.c **** 				}
 368:.\Generated_Source\PSoC4/ETH.c **** 			}
 369:.\Generated_Source\PSoC4/ETH.c **** 		}
 370:.\Generated_Source\PSoC4/ETH.c **** 	}
 371:.\Generated_Source\PSoC4/ETH.c **** 	while ( length > 0);
 508              		.loc 1 371 0
 509 0170 3B1D     		add	r3, r7, #4
 510 0172 1B88     		ldrh	r3, [r3]
 511 0174 002B     		cmp	r3, #0
 512 0176 00D0     		beq	.LCB416
 513 0178 5FE7     		b	.L20	@long jump
 514              	.LCB416:
 372:.\Generated_Source\PSoC4/ETH.c **** 	/* Turn off chip select, and set the buffer */
 373:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipDeSelect();
 515              		.loc 1 373 0
 516 017a FFF7FEFF 		bl	ETH_ChipDeSelect
 374:.\Generated_Source\PSoC4/ETH.c **** }
 517              		.loc 1 374 0
 518 017e BD46     		mov	sp, r7
 519 0180 07B0     		add	sp, sp, #28
 520              		@ sp needed for prologue
 521 0182 90BD     		pop	{r4, r7, pc}
 522              		.cfi_endproc
 523              	.LFE3:
 524              		.size	ETH_ChipRead, .-ETH_ChipRead
 525              		.section	.text.ETH_ChipWrite16,"ax",%progbits
 526              		.align	2
 527              		.global	ETH_ChipWrite16
 528              		.code	16
 529              		.thumb_func
 530              		.type	ETH_ChipWrite16, %function
 531              	ETH_ChipWrite16:
 532              	.LFB4:
 375:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 376:.\Generated_Source\PSoC4/ETH.c **** /* SCB Specific Functions */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 17


 377:.\Generated_Source\PSoC4/ETH.c **** #else
 378:.\Generated_Source\PSoC4/ETH.c **** /* include SPI function header for the SCB */
 379:.\Generated_Source\PSoC4/ETH.c **** #include <SPI0_SPI_UART.h>
 380:.\Generated_Source\PSoC4/ETH.c **** 
 381:.\Generated_Source\PSoC4/ETH.c **** /* V1.1 : Include the header for the select pin used. */
 382:.\Generated_Source\PSoC4/ETH.c **** #define ETH_SpiDone    ((SPI0_SpiUartGetTxBufferSize()==0)?1:0)
 383:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 384:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 385:.\Generated_Source\PSoC4/ETH.c **** /**
 386:.\Generated_Source\PSoC4/ETH.c ****  * \brief write Data to the W5100 at the specified address
 387:.\Generated_Source\PSoC4/ETH.c ****  * \param addr Address of register or memory buffer
 388:.\Generated_Source\PSoC4/ETH.c ****  * \param dat Data to write to the device
 389:.\Generated_Source\PSoC4/ETH.c ****  *
 390:.\Generated_Source\PSoC4/ETH.c ****  * This function will send the WRITE opcode, address and data to the W5100
 391:.\Generated_Source\PSoC4/ETH.c ****  * in order to write the data to the specified register.
 392:.\Generated_Source\PSoC4/ETH.c ****  */
 393:.\Generated_Source\PSoC4/ETH.c **** void
 394:.\Generated_Source\PSoC4/ETH.c **** ETH_ChipWrite(uint16 addr, uint8 *dat, uint16 length)
 395:.\Generated_Source\PSoC4/ETH.c **** {
 396:.\Generated_Source\PSoC4/ETH.c **** 	/* TBD */
 397:.\Generated_Source\PSoC4/ETH.c **** }
 398:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 399:.\Generated_Source\PSoC4/ETH.c **** /**
 400:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read data from the W5100 at the spsecified address
 401:.\Generated_Source\PSoC4/ETH.c ****  * \param addr Address from which to read
 402:.\Generated_Source\PSoC4/ETH.c ****  * \returns the data read from the address
 403:.\Generated_Source\PSoC4/ETH.c ****  *
 404:.\Generated_Source\PSoC4/ETH.c ****  * this fucntion will access a W5100 memory location and read the contents
 405:.\Generated_Source\PSoC4/ETH.c ****  * using the serial protocol specified on P.61 of the datasheet.
 406:.\Generated_Source\PSoC4/ETH.c ****  */
 407:.\Generated_Source\PSoC4/ETH.c **** void
 408:.\Generated_Source\PSoC4/ETH.c **** ETH_ChipRead(uint16 addr, uint8 *dat, uint16 length)
 409:.\Generated_Source\PSoC4/ETH.c **** {
 410:.\Generated_Source\PSoC4/ETH.c **** 	/* TBD */
 411:.\Generated_Source\PSoC4/ETH.c **** }
 412:.\Generated_Source\PSoC4/ETH.c **** 
 413:.\Generated_Source\PSoC4/ETH.c **** #endif
 414:.\Generated_Source\PSoC4/ETH.c **** 
 415:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 416:.\Generated_Source\PSoC4/ETH.c **** /* W5x00 Access Primitaves */
 417:.\Generated_Source\PSoC4/ETH.c **** #if (1)
 418:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 419:.\Generated_Source\PSoC4/ETH.c **** /**
 420:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a 16-bit word to the device
 421:.\Generated_Source\PSoC4/ETH.c ****  * \param addr the starting address to which the data will be written
 422:.\Generated_Source\PSoC4/ETH.c ****  * \param val the 16-bit value to write
 423:.\Generated_Source\PSoC4/ETH.c ****  */
 424:.\Generated_Source\PSoC4/ETH.c **** void ETH_ChipWrite16( uint16 addr, uint16 val )
 425:.\Generated_Source\PSoC4/ETH.c **** {
 533              		.loc 1 425 0
 534              		.cfi_startproc
 535 0000 80B5     		push	{r7, lr}
 536              	.LCFI10:
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 18


 541              	.LCFI11:
 542              		.cfi_def_cfa_offset 24
 543 0004 00AF     		add	r7, sp, #0
 544              	.LCFI12:
 545              		.cfi_def_cfa_register 7
 546 0006 0A1C     		mov	r2, r1
 547 0008 BB1D     		add	r3, r7, #6
 548 000a 011C     		add	r1, r0, #0
 549 000c 1980     		strh	r1, [r3]
 550 000e 3B1D     		add	r3, r7, #4
 551 0010 1A80     		strh	r2, [r3]
 426:.\Generated_Source\PSoC4/ETH.c **** 	uint16 bigVal;
 427:.\Generated_Source\PSoC4/ETH.c **** 	
 428:.\Generated_Source\PSoC4/ETH.c **** #if !( CY_PSOC3 ) 
 429:.\Generated_Source\PSoC4/ETH.c **** 	bigVal = CYSWAP_ENDIAN16( val );
 552              		.loc 1 429 0
 553 0012 3B1D     		add	r3, r7, #4
 554 0014 1B88     		ldrh	r3, [r3]
 555 0016 1B02     		lsl	r3, r3, #8
 556 0018 9AB2     		uxth	r2, r3
 557 001a 3B1D     		add	r3, r7, #4
 558 001c 1B88     		ldrh	r3, [r3]
 559 001e 1B0A     		lsr	r3, r3, #8
 560 0020 9BB2     		uxth	r3, r3
 561 0022 9BB2     		uxth	r3, r3
 562 0024 1343     		orr	r3, r2
 563 0026 9BB2     		uxth	r3, r3
 564 0028 9AB2     		uxth	r2, r3
 565 002a 3B1C     		mov	r3, r7
 566 002c 0E33     		add	r3, r3, #14
 567 002e 1A80     		strh	r2, [r3]
 430:.\Generated_Source\PSoC4/ETH.c **** #else
 431:.\Generated_Source\PSoC4/ETH.c **** 	bigValu = val;
 432:.\Generated_Source\PSoC4/ETH.c **** #endif
 433:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite( addr, (uint8*)&bigVal, 2 );
 568              		.loc 1 433 0
 569 0030 BB1D     		add	r3, r7, #6
 570 0032 1A88     		ldrh	r2, [r3]
 571 0034 3B1C     		mov	r3, r7
 572 0036 0E33     		add	r3, r3, #14
 573 0038 101C     		mov	r0, r2
 574 003a 191C     		mov	r1, r3
 575 003c 0222     		mov	r2, #2
 576 003e FFF7FEFF 		bl	ETH_ChipWrite
 434:.\Generated_Source\PSoC4/ETH.c **** }
 577              		.loc 1 434 0
 578 0042 BD46     		mov	sp, r7
 579 0044 04B0     		add	sp, sp, #16
 580              		@ sp needed for prologue
 581 0046 80BD     		pop	{r7, pc}
 582              		.cfi_endproc
 583              	.LFE4:
 584              		.size	ETH_ChipWrite16, .-ETH_ChipWrite16
 585              		.section	.text.ETH_ChipRead16,"ax",%progbits
 586              		.align	2
 587              		.global	ETH_ChipRead16
 588              		.code	16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 19


 589              		.thumb_func
 590              		.type	ETH_ChipRead16, %function
 591              	ETH_ChipRead16:
 592              	.LFB5:
 435:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 436:.\Generated_Source\PSoC4/ETH.c **** /**
 437:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a 16-bit value from the device
 438:.\Generated_Source\PSoC4/ETH.c ****  * \param addr The starting address from which data will be read
 439:.\Generated_Source\PSoC4/ETH.c ****  * \returns the 16-bit value read from the memory.
 440:.\Generated_Source\PSoC4/ETH.c ****  */
 441:.\Generated_Source\PSoC4/ETH.c **** uint16 ETH_ChipRead16( uint16 addr )
 442:.\Generated_Source\PSoC4/ETH.c **** {
 593              		.loc 1 442 0
 594              		.cfi_startproc
 595 0000 80B5     		push	{r7, lr}
 596              	.LCFI13:
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 7, -8
 599              		.cfi_offset 14, -4
 600 0002 84B0     		sub	sp, sp, #16
 601              	.LCFI14:
 602              		.cfi_def_cfa_offset 24
 603 0004 00AF     		add	r7, sp, #0
 604              	.LCFI15:
 605              		.cfi_def_cfa_register 7
 606 0006 021C     		mov	r2, r0
 607 0008 BB1D     		add	r3, r7, #6
 608 000a 1A80     		strh	r2, [r3]
 443:.\Generated_Source\PSoC4/ETH.c **** 	uint16 val;
 444:.\Generated_Source\PSoC4/ETH.c **** 	
 445:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead(addr, (uint8*)&val, 2);
 609              		.loc 1 445 0
 610 000c BB1D     		add	r3, r7, #6
 611 000e 1A88     		ldrh	r2, [r3]
 612 0010 3B1C     		mov	r3, r7
 613 0012 0E33     		add	r3, r3, #14
 614 0014 101C     		mov	r0, r2
 615 0016 191C     		mov	r1, r3
 616 0018 0222     		mov	r2, #2
 617 001a FFF7FEFF 		bl	ETH_ChipRead
 446:.\Generated_Source\PSoC4/ETH.c **** #if !( CY_PSOC3 )
 447:.\Generated_Source\PSoC4/ETH.c **** 	val = CYSWAP_ENDIAN16( val );
 618              		.loc 1 447 0
 619 001e 3B1C     		mov	r3, r7
 620 0020 0E33     		add	r3, r3, #14
 621 0022 1B88     		ldrh	r3, [r3]
 622 0024 1B02     		lsl	r3, r3, #8
 623 0026 9AB2     		uxth	r2, r3
 624 0028 3B1C     		mov	r3, r7
 625 002a 0E33     		add	r3, r3, #14
 626 002c 1B88     		ldrh	r3, [r3]
 627 002e 1B0A     		lsr	r3, r3, #8
 628 0030 9BB2     		uxth	r3, r3
 629 0032 9BB2     		uxth	r3, r3
 630 0034 1343     		orr	r3, r2
 631 0036 9BB2     		uxth	r3, r3
 632 0038 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 20


 633 003a 3B1C     		mov	r3, r7
 634 003c 0E33     		add	r3, r3, #14
 635 003e 1A80     		strh	r2, [r3]
 448:.\Generated_Source\PSoC4/ETH.c **** #endif
 449:.\Generated_Source\PSoC4/ETH.c **** 	
 450:.\Generated_Source\PSoC4/ETH.c **** 	return( val );
 636              		.loc 1 450 0
 637 0040 3B1C     		mov	r3, r7
 638 0042 0E33     		add	r3, r3, #14
 639 0044 1B88     		ldrh	r3, [r3]
 451:.\Generated_Source\PSoC4/ETH.c **** }
 640              		.loc 1 451 0
 641 0046 181C     		mov	r0, r3
 642 0048 BD46     		mov	sp, r7
 643 004a 04B0     		add	sp, sp, #16
 644              		@ sp needed for prologue
 645 004c 80BD     		pop	{r7, pc}
 646              		.cfi_endproc
 647              	.LFE5:
 648              		.size	ETH_ChipRead16, .-ETH_ChipRead16
 649 004e C046     		.section	.text.ETH_SetSourceMAC,"ax",%progbits
 650              		.align	2
 651              		.global	ETH_SetSourceMAC
 652              		.code	16
 653              		.thumb_func
 654              		.type	ETH_SetSourceMAC, %function
 655              	ETH_SetSourceMAC:
 656              	.LFB6:
 452:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 453:.\Generated_Source\PSoC4/ETH.c **** /* END SECTION */
 454:.\Generated_Source\PSoC4/ETH.c **** #endif
 455:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 456:.\Generated_Source\PSoC4/ETH.c **** /* Chip Register access */
 457:.\Generated_Source\PSoC4/ETH.c **** #if (1)
 458:.\Generated_Source\PSoC4/ETH.c **** // Common Registers
 459:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 460:.\Generated_Source\PSoC4/ETH.c **** /**
 461:.\Generated_Source\PSoC4/ETH.c ****  * \brief Set teh chip mac address to teh specified address
 462:.\Generated_Source\PSoC4/ETH.c ****  * \param *mac pointer to the array holding the MAC address
 463:.\Generated_Source\PSoC4/ETH.c ****  */
 464:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSourceMAC( uint8 *mac )
 465:.\Generated_Source\PSoC4/ETH.c **** {
 657              		.loc 1 465 0
 658              		.cfi_startproc
 659 0000 80B5     		push	{r7, lr}
 660              	.LCFI16:
 661              		.cfi_def_cfa_offset 8
 662              		.cfi_offset 7, -8
 663              		.cfi_offset 14, -4
 664 0002 82B0     		sub	sp, sp, #8
 665              	.LCFI17:
 666              		.cfi_def_cfa_offset 16
 667 0004 00AF     		add	r7, sp, #0
 668              	.LCFI18:
 669              		.cfi_def_cfa_register 7
 670 0006 7860     		str	r0, [r7, #4]
 466:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite(ETH_REG_SHAR, mac,6 );
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 21


 671              		.loc 1 466 0
 672 0008 7B68     		ldr	r3, [r7, #4]
 673 000a 0920     		mov	r0, #9
 674 000c 191C     		mov	r1, r3
 675 000e 0622     		mov	r2, #6
 676 0010 FFF7FEFF 		bl	ETH_ChipWrite
 467:.\Generated_Source\PSoC4/ETH.c **** }
 677              		.loc 1 467 0
 678 0014 BD46     		mov	sp, r7
 679 0016 02B0     		add	sp, sp, #8
 680              		@ sp needed for prologue
 681 0018 80BD     		pop	{r7, pc}
 682              		.cfi_endproc
 683              	.LFE6:
 684              		.size	ETH_SetSourceMAC, .-ETH_SetSourceMAC
 685 001a C046     		.section	.text.ETH_GetSourceMAC,"ax",%progbits
 686              		.align	2
 687              		.global	ETH_GetSourceMAC
 688              		.code	16
 689              		.thumb_func
 690              		.type	ETH_GetSourceMAC, %function
 691              	ETH_GetSourceMAC:
 692              	.LFB7:
 468:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 469:.\Generated_Source\PSoC4/ETH.c **** /**
 470:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read the chip source MAC address from the MAC registers
 471:.\Generated_Source\PSoC4/ETH.c ****  * \param *mac pointer to the address of the buffer to hold the read MAC address
 472:.\Generated_Source\PSoC4/ETH.c ****  */
 473:.\Generated_Source\PSoC4/ETH.c **** void ETH_GetSourceMAC( uint8 *mac )
 474:.\Generated_Source\PSoC4/ETH.c **** {
 693              		.loc 1 474 0
 694              		.cfi_startproc
 695 0000 80B5     		push	{r7, lr}
 696              	.LCFI19:
 697              		.cfi_def_cfa_offset 8
 698              		.cfi_offset 7, -8
 699              		.cfi_offset 14, -4
 700 0002 82B0     		sub	sp, sp, #8
 701              	.LCFI20:
 702              		.cfi_def_cfa_offset 16
 703 0004 00AF     		add	r7, sp, #0
 704              	.LCFI21:
 705              		.cfi_def_cfa_register 7
 706 0006 7860     		str	r0, [r7, #4]
 475:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead(ETH_REG_SHAR,mac,6);
 707              		.loc 1 475 0
 708 0008 7B68     		ldr	r3, [r7, #4]
 709 000a 0920     		mov	r0, #9
 710 000c 191C     		mov	r1, r3
 711 000e 0622     		mov	r2, #6
 712 0010 FFF7FEFF 		bl	ETH_ChipRead
 476:.\Generated_Source\PSoC4/ETH.c **** }
 713              		.loc 1 476 0
 714 0014 BD46     		mov	sp, r7
 715 0016 02B0     		add	sp, sp, #8
 716              		@ sp needed for prologue
 717 0018 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 22


 718              		.cfi_endproc
 719              	.LFE7:
 720              		.size	ETH_GetSourceMAC, .-ETH_GetSourceMAC
 721 001a C046     		.section	.text.ETH_SetGatewayAddress,"ax",%progbits
 722              		.align	2
 723              		.global	ETH_SetGatewayAddress
 724              		.code	16
 725              		.thumb_func
 726              		.type	ETH_SetGatewayAddress, %function
 727              	ETH_SetGatewayAddress:
 728              	.LFB8:
 477:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 478:.\Generated_Source\PSoC4/ETH.c **** /**
 479:.\Generated_Source\PSoC4/ETH.c ****  * \brief Set the IPv4 address of the network gateway
 480:.\Generated_Source\PSoC4/ETH.c ****  * \param ip IP address of the gateway
 481:.\Generated_Source\PSoC4/ETH.c ****  */
 482:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetGatewayAddress(uint32 ip)
 483:.\Generated_Source\PSoC4/ETH.c **** {
 729              		.loc 1 483 0
 730              		.cfi_startproc
 731 0000 80B5     		push	{r7, lr}
 732              	.LCFI22:
 733              		.cfi_def_cfa_offset 8
 734              		.cfi_offset 7, -8
 735              		.cfi_offset 14, -4
 736 0002 82B0     		sub	sp, sp, #8
 737              	.LCFI23:
 738              		.cfi_def_cfa_offset 16
 739 0004 00AF     		add	r7, sp, #0
 740              	.LCFI24:
 741              		.cfi_def_cfa_register 7
 742 0006 7860     		str	r0, [r7, #4]
 484:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite(ETH_REG_GAR, (uint8*)&(ip),4);
 743              		.loc 1 484 0
 744 0008 3B1D     		add	r3, r7, #4
 745 000a 0120     		mov	r0, #1
 746 000c 191C     		mov	r1, r3
 747 000e 0422     		mov	r2, #4
 748 0010 FFF7FEFF 		bl	ETH_ChipWrite
 485:.\Generated_Source\PSoC4/ETH.c **** }
 749              		.loc 1 485 0
 750 0014 BD46     		mov	sp, r7
 751 0016 02B0     		add	sp, sp, #8
 752              		@ sp needed for prologue
 753 0018 80BD     		pop	{r7, pc}
 754              		.cfi_endproc
 755              	.LFE8:
 756              		.size	ETH_SetGatewayAddress, .-ETH_SetGatewayAddress
 757 001a C046     		.section	.text.ETH_GetGatewayAddress,"ax",%progbits
 758              		.align	2
 759              		.global	ETH_GetGatewayAddress
 760              		.code	16
 761              		.thumb_func
 762              		.type	ETH_GetGatewayAddress, %function
 763              	ETH_GetGatewayAddress:
 764              	.LFB9:
 486:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 23


 487:.\Generated_Source\PSoC4/ETH.c **** /**
 488:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read the gateway address from the device
 489:.\Generated_Source\PSoC4/ETH.c ****  * \returns the IP address of the gateway
 490:.\Generated_Source\PSoC4/ETH.c ****  */
 491:.\Generated_Source\PSoC4/ETH.c **** uint32 ETH_GetGatewayAddress( void )
 492:.\Generated_Source\PSoC4/ETH.c **** {
 765              		.loc 1 492 0
 766              		.cfi_startproc
 767 0000 80B5     		push	{r7, lr}
 768              	.LCFI25:
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 7, -8
 771              		.cfi_offset 14, -4
 772 0002 82B0     		sub	sp, sp, #8
 773              	.LCFI26:
 774              		.cfi_def_cfa_offset 16
 775 0004 00AF     		add	r7, sp, #0
 776              	.LCFI27:
 777              		.cfi_def_cfa_register 7
 493:.\Generated_Source\PSoC4/ETH.c **** 	uint32 ip = 0xFFFFFFFF;
 778              		.loc 1 493 0
 779 0006 0123     		mov	r3, #1
 780 0008 5B42     		neg	r3, r3
 781 000a 7B60     		str	r3, [r7, #4]
 494:.\Generated_Source\PSoC4/ETH.c **** 	
 495:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead( ETH_REG_GAR, (uint8*)(ip), 4);
 782              		.loc 1 495 0
 783 000c 7B68     		ldr	r3, [r7, #4]
 784 000e 0120     		mov	r0, #1
 785 0010 191C     		mov	r1, r3
 786 0012 0422     		mov	r2, #4
 787 0014 FFF7FEFF 		bl	ETH_ChipRead
 496:.\Generated_Source\PSoC4/ETH.c **** 	
 497:.\Generated_Source\PSoC4/ETH.c **** 	return ip;
 788              		.loc 1 497 0
 789 0018 7B68     		ldr	r3, [r7, #4]
 498:.\Generated_Source\PSoC4/ETH.c **** }
 790              		.loc 1 498 0
 791 001a 181C     		mov	r0, r3
 792 001c BD46     		mov	sp, r7
 793 001e 02B0     		add	sp, sp, #8
 794              		@ sp needed for prologue
 795 0020 80BD     		pop	{r7, pc}
 796              		.cfi_endproc
 797              	.LFE9:
 798              		.size	ETH_GetGatewayAddress, .-ETH_GetGatewayAddress
 799 0022 C046     		.section	.text.ETH_SetSubnetMask,"ax",%progbits
 800              		.align	2
 801              		.global	ETH_SetSubnetMask
 802              		.code	16
 803              		.thumb_func
 804              		.type	ETH_SetSubnetMask, %function
 805              	ETH_SetSubnetMask:
 806              	.LFB10:
 499:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 500:.\Generated_Source\PSoC4/ETH.c **** /**
 501:.\Generated_Source\PSoC4/ETH.c ****  * \brief set the subnet mask of the ethernet device
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 24


 502:.\Generated_Source\PSoC4/ETH.c ****  * \param the subnet mask (IPv4)
 503:.\Generated_Source\PSoC4/ETH.c ****  */
 504:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSubnetMask( uint32 ip )
 505:.\Generated_Source\PSoC4/ETH.c **** {
 807              		.loc 1 505 0
 808              		.cfi_startproc
 809 0000 80B5     		push	{r7, lr}
 810              	.LCFI28:
 811              		.cfi_def_cfa_offset 8
 812              		.cfi_offset 7, -8
 813              		.cfi_offset 14, -4
 814 0002 82B0     		sub	sp, sp, #8
 815              	.LCFI29:
 816              		.cfi_def_cfa_offset 16
 817 0004 00AF     		add	r7, sp, #0
 818              	.LCFI30:
 819              		.cfi_def_cfa_register 7
 820 0006 7860     		str	r0, [r7, #4]
 506:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite(ETH_REG_SUBR, (uint8*)&(ip), 4);
 821              		.loc 1 506 0
 822 0008 3B1D     		add	r3, r7, #4
 823 000a 0520     		mov	r0, #5
 824 000c 191C     		mov	r1, r3
 825 000e 0422     		mov	r2, #4
 826 0010 FFF7FEFF 		bl	ETH_ChipWrite
 507:.\Generated_Source\PSoC4/ETH.c **** }
 827              		.loc 1 507 0
 828 0014 BD46     		mov	sp, r7
 829 0016 02B0     		add	sp, sp, #8
 830              		@ sp needed for prologue
 831 0018 80BD     		pop	{r7, pc}
 832              		.cfi_endproc
 833              	.LFE10:
 834              		.size	ETH_SetSubnetMask, .-ETH_SetSubnetMask
 835 001a C046     		.section	.text.ETH_GetSubnetMask,"ax",%progbits
 836              		.align	2
 837              		.global	ETH_GetSubnetMask
 838              		.code	16
 839              		.thumb_func
 840              		.type	ETH_GetSubnetMask, %function
 841              	ETH_GetSubnetMask:
 842              	.LFB11:
 508:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 509:.\Generated_Source\PSoC4/ETH.c **** /**
 510:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read the subnet mask from the device
 511:.\Generated_Source\PSoC4/ETH.c ****  * \returns the subnet mask that was read from the device.
 512:.\Generated_Source\PSoC4/ETH.c ****  */
 513:.\Generated_Source\PSoC4/ETH.c **** uint32 ETH_GetSubnetMask( void )
 514:.\Generated_Source\PSoC4/ETH.c **** {
 843              		.loc 1 514 0
 844              		.cfi_startproc
 845 0000 80B5     		push	{r7, lr}
 846              	.LCFI31:
 847              		.cfi_def_cfa_offset 8
 848              		.cfi_offset 7, -8
 849              		.cfi_offset 14, -4
 850 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 25


 851              	.LCFI32:
 852              		.cfi_def_cfa_offset 16
 853 0004 00AF     		add	r7, sp, #0
 854              	.LCFI33:
 855              		.cfi_def_cfa_register 7
 515:.\Generated_Source\PSoC4/ETH.c **** 	uint32 ip = 0xFFFFFFFF;
 856              		.loc 1 515 0
 857 0006 0123     		mov	r3, #1
 858 0008 5B42     		neg	r3, r3
 859 000a 7B60     		str	r3, [r7, #4]
 516:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead(ETH_REG_SUBR, (uint8*)(ip), 4);
 860              		.loc 1 516 0
 861 000c 7B68     		ldr	r3, [r7, #4]
 862 000e 0520     		mov	r0, #5
 863 0010 191C     		mov	r1, r3
 864 0012 0422     		mov	r2, #4
 865 0014 FFF7FEFF 		bl	ETH_ChipRead
 517:.\Generated_Source\PSoC4/ETH.c **** 	return ip;
 866              		.loc 1 517 0
 867 0018 7B68     		ldr	r3, [r7, #4]
 518:.\Generated_Source\PSoC4/ETH.c **** }
 868              		.loc 1 518 0
 869 001a 181C     		mov	r0, r3
 870 001c BD46     		mov	sp, r7
 871 001e 02B0     		add	sp, sp, #8
 872              		@ sp needed for prologue
 873 0020 80BD     		pop	{r7, pc}
 874              		.cfi_endproc
 875              	.LFE11:
 876              		.size	ETH_GetSubnetMask, .-ETH_GetSubnetMask
 877 0022 C046     		.section	.text.ETH_SetSourceIP,"ax",%progbits
 878              		.align	2
 879              		.global	ETH_SetSourceIP
 880              		.code	16
 881              		.thumb_func
 882              		.type	ETH_SetSourceIP, %function
 883              	ETH_SetSourceIP:
 884              	.LFB12:
 519:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 520:.\Generated_Source\PSoC4/ETH.c **** /**
 521:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write the device source IPv4 address
 522:.\Generated_Source\PSoC4/ETH.c ****  * \param ip the ip address to set as the chip IP address
 523:.\Generated_Source\PSoC4/ETH.c ****  */
 524:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSourceIP(uint32 ip )
 525:.\Generated_Source\PSoC4/ETH.c **** {
 885              		.loc 1 525 0
 886              		.cfi_startproc
 887 0000 80B5     		push	{r7, lr}
 888              	.LCFI34:
 889              		.cfi_def_cfa_offset 8
 890              		.cfi_offset 7, -8
 891              		.cfi_offset 14, -4
 892 0002 82B0     		sub	sp, sp, #8
 893              	.LCFI35:
 894              		.cfi_def_cfa_offset 16
 895 0004 00AF     		add	r7, sp, #0
 896              	.LCFI36:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 26


 897              		.cfi_def_cfa_register 7
 898 0006 7860     		str	r0, [r7, #4]
 526:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite( ETH_REG_SIPR, (uint8*)&(ip), 4 );
 899              		.loc 1 526 0
 900 0008 3B1D     		add	r3, r7, #4
 901 000a 0F20     		mov	r0, #15
 902 000c 191C     		mov	r1, r3
 903 000e 0422     		mov	r2, #4
 904 0010 FFF7FEFF 		bl	ETH_ChipWrite
 527:.\Generated_Source\PSoC4/ETH.c **** }
 905              		.loc 1 527 0
 906 0014 BD46     		mov	sp, r7
 907 0016 02B0     		add	sp, sp, #8
 908              		@ sp needed for prologue
 909 0018 80BD     		pop	{r7, pc}
 910              		.cfi_endproc
 911              	.LFE12:
 912              		.size	ETH_SetSourceIP, .-ETH_SetSourceIP
 913 001a C046     		.section	.text.ETH_GetSourceIP,"ax",%progbits
 914              		.align	2
 915              		.global	ETH_GetSourceIP
 916              		.code	16
 917              		.thumb_func
 918              		.type	ETH_GetSourceIP, %function
 919              	ETH_GetSourceIP:
 920              	.LFB13:
 528:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 529:.\Generated_Source\PSoC4/ETH.c **** /**
 530:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read the device's programmed IP address
 531:.\Generated_Source\PSoC4/ETH.c ****  * \returns The IPv4 address to which the device is set.
 532:.\Generated_Source\PSoC4/ETH.c ****  */
 533:.\Generated_Source\PSoC4/ETH.c **** uint32 ETH_GetSourceIP( void )
 534:.\Generated_Source\PSoC4/ETH.c **** {
 921              		.loc 1 534 0
 922              		.cfi_startproc
 923 0000 80B5     		push	{r7, lr}
 924              	.LCFI37:
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 7, -8
 927              		.cfi_offset 14, -4
 928 0002 82B0     		sub	sp, sp, #8
 929              	.LCFI38:
 930              		.cfi_def_cfa_offset 16
 931 0004 00AF     		add	r7, sp, #0
 932              	.LCFI39:
 933              		.cfi_def_cfa_register 7
 535:.\Generated_Source\PSoC4/ETH.c **** 	uint32 ip = 0xFFFFFFFF;
 934              		.loc 1 535 0
 935 0006 0123     		mov	r3, #1
 936 0008 5B42     		neg	r3, r3
 937 000a 7B60     		str	r3, [r7, #4]
 536:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead( ETH_REG_SIPR, (uint8*)(ip), 4 );
 938              		.loc 1 536 0
 939 000c 7B68     		ldr	r3, [r7, #4]
 940 000e 0F20     		mov	r0, #15
 941 0010 191C     		mov	r1, r3
 942 0012 0422     		mov	r2, #4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 27


 943 0014 FFF7FEFF 		bl	ETH_ChipRead
 537:.\Generated_Source\PSoC4/ETH.c **** 	return ip;
 944              		.loc 1 537 0
 945 0018 7B68     		ldr	r3, [r7, #4]
 538:.\Generated_Source\PSoC4/ETH.c **** }
 946              		.loc 1 538 0
 947 001a 181C     		mov	r0, r3
 948 001c BD46     		mov	sp, r7
 949 001e 02B0     		add	sp, sp, #8
 950              		@ sp needed for prologue
 951 0020 80BD     		pop	{r7, pc}
 952              		.cfi_endproc
 953              	.LFE13:
 954              		.size	ETH_GetSourceIP, .-ETH_GetSourceIP
 955 0022 C046     		.section	.text.ETH_SetMode,"ax",%progbits
 956              		.align	2
 957              		.global	ETH_SetMode
 958              		.code	16
 959              		.thumb_func
 960              		.type	ETH_SetMode, %function
 961              	ETH_SetMode:
 962              	.LFB14:
 539:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 540:.\Generated_Source\PSoC4/ETH.c **** /**
 541:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the device internal MODE register
 542:.\Generated_Source\PSoC4/ETH.c ****  * \param mode the value to be written to the mode register.
 543:.\Generated_Source\PSoC4/ETH.c ****  */
 544:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetMode( uint8 mode )
 545:.\Generated_Source\PSoC4/ETH.c **** {
 963              		.loc 1 545 0
 964              		.cfi_startproc
 965 0000 80B5     		push	{r7, lr}
 966              	.LCFI40:
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 7, -8
 969              		.cfi_offset 14, -4
 970 0002 82B0     		sub	sp, sp, #8
 971              	.LCFI41:
 972              		.cfi_def_cfa_offset 16
 973 0004 00AF     		add	r7, sp, #0
 974              	.LCFI42:
 975              		.cfi_def_cfa_register 7
 976 0006 021C     		mov	r2, r0
 977 0008 FB1D     		add	r3, r7, #7
 978 000a 1A70     		strb	r2, [r3]
 546:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite(ETH_REG_MODE, (uint8*)&(mode), 1);
 979              		.loc 1 546 0
 980 000c FB1D     		add	r3, r7, #7
 981 000e 0020     		mov	r0, #0
 982 0010 191C     		mov	r1, r3
 983 0012 0122     		mov	r2, #1
 984 0014 FFF7FEFF 		bl	ETH_ChipWrite
 547:.\Generated_Source\PSoC4/ETH.c **** }
 985              		.loc 1 547 0
 986 0018 BD46     		mov	sp, r7
 987 001a 02B0     		add	sp, sp, #8
 988              		@ sp needed for prologue
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 28


 989 001c 80BD     		pop	{r7, pc}
 990              		.cfi_endproc
 991              	.LFE14:
 992              		.size	ETH_SetMode, .-ETH_SetMode
 993 001e C046     		.section	.text.ETH_GetMode,"ax",%progbits
 994              		.align	2
 995              		.global	ETH_GetMode
 996              		.code	16
 997              		.thumb_func
 998              		.type	ETH_GetMode, %function
 999              	ETH_GetMode:
 1000              	.LFB15:
 548:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 549:.\Generated_Source\PSoC4/ETH.c **** /**
 550:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read the present contents of the device internal mode register
 551:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value of the mode register
 552:.\Generated_Source\PSoC4/ETH.c ****  */
 553:.\Generated_Source\PSoC4/ETH.c **** uint8 ETH_GetMode( void )
 554:.\Generated_Source\PSoC4/ETH.c **** {
 1001              		.loc 1 554 0
 1002              		.cfi_startproc
 1003 0000 80B5     		push	{r7, lr}
 1004              	.LCFI43:
 1005              		.cfi_def_cfa_offset 8
 1006              		.cfi_offset 7, -8
 1007              		.cfi_offset 14, -4
 1008 0002 82B0     		sub	sp, sp, #8
 1009              	.LCFI44:
 1010              		.cfi_def_cfa_offset 16
 1011 0004 00AF     		add	r7, sp, #0
 1012              	.LCFI45:
 1013              		.cfi_def_cfa_register 7
 555:.\Generated_Source\PSoC4/ETH.c **** 	uint8 mode;
 556:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead(ETH_REG_MODE, (uint8*)&(mode),1);
 1014              		.loc 1 556 0
 1015 0006 FB1D     		add	r3, r7, #7
 1016 0008 0020     		mov	r0, #0
 1017 000a 191C     		mov	r1, r3
 1018 000c 0122     		mov	r2, #1
 1019 000e FFF7FEFF 		bl	ETH_ChipRead
 557:.\Generated_Source\PSoC4/ETH.c **** 	return mode;
 1020              		.loc 1 557 0
 1021 0012 FB1D     		add	r3, r7, #7
 1022 0014 1B78     		ldrb	r3, [r3]
 558:.\Generated_Source\PSoC4/ETH.c **** }
 1023              		.loc 1 558 0
 1024 0016 181C     		mov	r0, r3
 1025 0018 BD46     		mov	sp, r7
 1026 001a 02B0     		add	sp, sp, #8
 1027              		@ sp needed for prologue
 1028 001c 80BD     		pop	{r7, pc}
 1029              		.cfi_endproc
 1030              	.LFE15:
 1031              		.size	ETH_GetMode, .-ETH_GetMode
 1032 001e C046     		.section	.text.ETH_SetIR,"ax",%progbits
 1033              		.align	2
 1034              		.global	ETH_SetIR
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 29


 1035              		.code	16
 1036              		.thumb_func
 1037              		.type	ETH_SetIR, %function
 1038              	ETH_SetIR:
 1039              	.LFB16:
 559:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 560:.\Generated_Source\PSoC4/ETH.c **** /**
 561:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write the value of the interrupt register
 562:.\Generated_Source\PSoC4/ETH.c ****  * \param ir the value to be written to the interrupt register
 563:.\Generated_Source\PSoC4/ETH.c ****  */
 564:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetIR(uint8 ir )
 565:.\Generated_Source\PSoC4/ETH.c **** {
 1040              		.loc 1 565 0
 1041              		.cfi_startproc
 1042 0000 80B5     		push	{r7, lr}
 1043              	.LCFI46:
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 7, -8
 1046              		.cfi_offset 14, -4
 1047 0002 82B0     		sub	sp, sp, #8
 1048              	.LCFI47:
 1049              		.cfi_def_cfa_offset 16
 1050 0004 00AF     		add	r7, sp, #0
 1051              	.LCFI48:
 1052              		.cfi_def_cfa_register 7
 1053 0006 021C     		mov	r2, r0
 1054 0008 FB1D     		add	r3, r7, #7
 1055 000a 1A70     		strb	r2, [r3]
 566:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite(ETH_REG_IR,(uint8*)&(ir), 1);
 1056              		.loc 1 566 0
 1057 000c FB1D     		add	r3, r7, #7
 1058 000e 1520     		mov	r0, #21
 1059 0010 191C     		mov	r1, r3
 1060 0012 0122     		mov	r2, #1
 1061 0014 FFF7FEFF 		bl	ETH_ChipWrite
 567:.\Generated_Source\PSoC4/ETH.c **** }
 1062              		.loc 1 567 0
 1063 0018 BD46     		mov	sp, r7
 1064 001a 02B0     		add	sp, sp, #8
 1065              		@ sp needed for prologue
 1066 001c 80BD     		pop	{r7, pc}
 1067              		.cfi_endproc
 1068              	.LFE16:
 1069              		.size	ETH_SetIR, .-ETH_SetIR
 1070 001e C046     		.section	.text.ETH_SetSocketRxMemSize,"ax",%progbits
 1071              		.align	2
 1072              		.global	ETH_SetSocketRxMemSize
 1073              		.code	16
 1074              		.thumb_func
 1075              		.type	ETH_SetSocketRxMemSize, %function
 1076              	ETH_SetSocketRxMemSize:
 1077              	.LFB17:
 568:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 569:.\Generated_Source\PSoC4/ETH.c **** /**
 570:.\Generated_Source\PSoC4/ETH.c ****  * \brief write a value to the Rx mem size register
 571:.\Generated_Source\PSoC4/ETH.c ****  * \param size the value to be written to the register
 572:.\Generated_Source\PSoC4/ETH.c ****  */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 30


 573:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketRxMemSize( uint8 socket, uint8 size ) 
 574:.\Generated_Source\PSoC4/ETH.c **** {
 1078              		.loc 1 574 0
 1079              		.cfi_startproc
 1080 0000 80B5     		push	{r7, lr}
 1081              	.LCFI49:
 1082              		.cfi_def_cfa_offset 8
 1083              		.cfi_offset 7, -8
 1084              		.cfi_offset 14, -4
 1085 0002 84B0     		sub	sp, sp, #16
 1086              	.LCFI50:
 1087              		.cfi_def_cfa_offset 24
 1088 0004 00AF     		add	r7, sp, #0
 1089              	.LCFI51:
 1090              		.cfi_def_cfa_register 7
 1091 0006 0A1C     		mov	r2, r1
 1092 0008 FB1D     		add	r3, r7, #7
 1093 000a 011C     		add	r1, r0, #0
 1094 000c 1970     		strb	r1, [r3]
 1095 000e BB1D     		add	r3, r7, #6
 1096 0010 1A70     		strb	r2, [r3]
 575:.\Generated_Source\PSoC4/ETH.c **** 	uint8 sz;
 576:.\Generated_Source\PSoC4/ETH.c **** 	
 577:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 1)
 578:.\Generated_Source\PSoC4/ETH.c **** 	/*
 579:.\Generated_Source\PSoC4/ETH.c **** 	 * The W5100 uses memory allocations within one register for all sockets.
 580:.\Generated_Source\PSoC4/ETH.c **** 	 * the options are set by a 2 bit code for 1, 2, 4, or 8 K
 581:.\Generated_Source\PSoC4/ETH.c **** 	 */
 582:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipRead( ETH_REG_RMSR, &sz, 1);
 1097              		.loc 1 582 0
 1098 0012 3B1C     		mov	r3, r7
 1099 0014 0F33     		add	r3, r3, #15
 1100 0016 1A20     		mov	r0, #26
 1101 0018 191C     		mov	r1, r3
 1102 001a 0122     		mov	r2, #1
 1103 001c FFF7FEFF 		bl	ETH_ChipRead
 583:.\Generated_Source\PSoC4/ETH.c **** 		sz = sz & (~(3<<(socket<<1)));
 1104              		.loc 1 583 0
 1105 0020 FB1D     		add	r3, r7, #7
 1106 0022 1B78     		ldrb	r3, [r3]
 1107 0024 5B00     		lsl	r3, r3, #1
 1108 0026 0322     		mov	r2, #3
 1109 0028 111C     		mov	r1, r2
 1110 002a 9940     		lsl	r1, r1, r3
 1111 002c 0B1C     		mov	r3, r1
 1112 002e DBB2     		uxtb	r3, r3
 1113 0030 DB43     		mvn	r3, r3
 1114 0032 DBB2     		uxtb	r3, r3
 1115 0034 3A1C     		mov	r2, r7
 1116 0036 0F32     		add	r2, r2, #15
 1117 0038 1278     		ldrb	r2, [r2]
 1118 003a D2B2     		uxtb	r2, r2
 1119 003c 1340     		and	r3, r2
 1120 003e DBB2     		uxtb	r3, r3
 1121 0040 DAB2     		uxtb	r2, r3
 1122 0042 3B1C     		mov	r3, r7
 1123 0044 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 31


 1124 0046 1A70     		strb	r2, [r3]
 584:.\Generated_Source\PSoC4/ETH.c **** 		sz = sz | (size<<(socket<<1));
 1125              		.loc 1 584 0
 1126 0048 BB1D     		add	r3, r7, #6
 1127 004a 1A78     		ldrb	r2, [r3]
 1128 004c FB1D     		add	r3, r7, #7
 1129 004e 1B78     		ldrb	r3, [r3]
 1130 0050 5B00     		lsl	r3, r3, #1
 1131 0052 111C     		mov	r1, r2
 1132 0054 9940     		lsl	r1, r1, r3
 1133 0056 0B1C     		mov	r3, r1
 1134 0058 DAB2     		uxtb	r2, r3
 1135 005a 3B1C     		mov	r3, r7
 1136 005c 0F33     		add	r3, r3, #15
 1137 005e 1B78     		ldrb	r3, [r3]
 1138 0060 DBB2     		uxtb	r3, r3
 1139 0062 1343     		orr	r3, r2
 1140 0064 DBB2     		uxtb	r3, r3
 1141 0066 DAB2     		uxtb	r2, r3
 1142 0068 3B1C     		mov	r3, r7
 1143 006a 0F33     		add	r3, r3, #15
 1144 006c 1A70     		strb	r2, [r3]
 585:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipWrite( ETH_REG_RMSR, &sz, 1);
 1145              		.loc 1 585 0
 1146 006e 3B1C     		mov	r3, r7
 1147 0070 0F33     		add	r3, r3, #15
 1148 0072 1A20     		mov	r0, #26
 1149 0074 191C     		mov	r1, r3
 1150 0076 0122     		mov	r2, #1
 1151 0078 FFF7FEFF 		bl	ETH_ChipWrite
 586:.\Generated_Source\PSoC4/ETH.c **** #elif (1 == 2)
 587:.\Generated_Source\PSoC4/ETH.c **** 	/*
 588:.\Generated_Source\PSoC4/ETH.c **** 	 * The W5200 interface uses memory size registers located within the socket
 589:.\Generated_Source\PSoC4/ETH.c **** 	 * register memory maps.
 590:.\Generated_Source\PSoC4/ETH.c **** 	 */
 591:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite( ETH_SOCKET_REG(socket,ETH_SOCK_RXMEM), &size, 1);
 592:.\Generated_Source\PSoC4/ETH.c **** #endif
 593:.\Generated_Source\PSoC4/ETH.c **** }
 1152              		.loc 1 593 0
 1153 007c BD46     		mov	sp, r7
 1154 007e 04B0     		add	sp, sp, #16
 1155              		@ sp needed for prologue
 1156 0080 80BD     		pop	{r7, pc}
 1157              		.cfi_endproc
 1158              	.LFE17:
 1159              		.size	ETH_SetSocketRxMemSize, .-ETH_SetSocketRxMemSize
 1160 0082 C046     		.section	.text.ETH_GetSocketRxMemSize,"ax",%progbits
 1161              		.align	2
 1162              		.global	ETH_GetSocketRxMemSize
 1163              		.code	16
 1164              		.thumb_func
 1165              		.type	ETH_GetSocketRxMemSize, %function
 1166              	ETH_GetSocketRxMemSize:
 1167              	.LFB18:
 594:.\Generated_Source\PSoC4/ETH.c **** 
 595:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 596:.\Generated_Source\PSoC4/ETH.c **** /**
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 32


 597:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read the contents of hte rx mem size register
 598:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from teh register
 599:.\Generated_Source\PSoC4/ETH.c ****  */
 600:.\Generated_Source\PSoC4/ETH.c **** uint8 ETH_GetSocketRxMemSize( uint8 socket )
 601:.\Generated_Source\PSoC4/ETH.c **** {
 1168              		.loc 1 601 0
 1169              		.cfi_startproc
 1170 0000 80B5     		push	{r7, lr}
 1171              	.LCFI52:
 1172              		.cfi_def_cfa_offset 8
 1173              		.cfi_offset 7, -8
 1174              		.cfi_offset 14, -4
 1175 0002 84B0     		sub	sp, sp, #16
 1176              	.LCFI53:
 1177              		.cfi_def_cfa_offset 24
 1178 0004 00AF     		add	r7, sp, #0
 1179              	.LCFI54:
 1180              		.cfi_def_cfa_register 7
 1181 0006 021C     		mov	r2, r0
 1182 0008 FB1D     		add	r3, r7, #7
 1183 000a 1A70     		strb	r2, [r3]
 602:.\Generated_Source\PSoC4/ETH.c **** 	uint8 sz;
 603:.\Generated_Source\PSoC4/ETH.c **** 	
 604:.\Generated_Source\PSoC4/ETH.c **** 	sz = 0xFF;
 1184              		.loc 1 604 0
 1185 000c 3B1C     		mov	r3, r7
 1186 000e 0F33     		add	r3, r3, #15
 1187 0010 FF22     		mov	r2, #255
 1188 0012 1A70     		strb	r2, [r3]
 605:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 1)
 606:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead(ETH_REG_RMSR, &sz, 1);
 1189              		.loc 1 606 0
 1190 0014 3B1C     		mov	r3, r7
 1191 0016 0F33     		add	r3, r3, #15
 1192 0018 1A20     		mov	r0, #26
 1193 001a 191C     		mov	r1, r3
 1194 001c 0122     		mov	r2, #1
 1195 001e FFF7FEFF 		bl	ETH_ChipRead
 607:.\Generated_Source\PSoC4/ETH.c **** 	sz = (sz >> (socket<<1)) & 0x03;
 1196              		.loc 1 607 0
 1197 0022 3B1C     		mov	r3, r7
 1198 0024 0F33     		add	r3, r3, #15
 1199 0026 1B78     		ldrb	r3, [r3]
 1200 0028 1A1C     		mov	r2, r3
 1201 002a FB1D     		add	r3, r7, #7
 1202 002c 1B78     		ldrb	r3, [r3]
 1203 002e 5B00     		lsl	r3, r3, #1
 1204 0030 111C     		mov	r1, r2
 1205 0032 1941     		asr	r1, r1, r3
 1206 0034 0B1C     		mov	r3, r1
 1207 0036 DAB2     		uxtb	r2, r3
 1208 0038 0323     		mov	r3, #3
 1209 003a 1340     		and	r3, r2
 1210 003c DAB2     		uxtb	r2, r3
 1211 003e 3B1C     		mov	r3, r7
 1212 0040 0F33     		add	r3, r3, #15
 1213 0042 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 33


 608:.\Generated_Source\PSoC4/ETH.c **** #elif (1 == 2)
 609:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead( ETH_SOCKET_REG(socket,ETH_SOCK_RXMEM), &sz, 1);
 610:.\Generated_Source\PSoC4/ETH.c **** #endif
 611:.\Generated_Source\PSoC4/ETH.c **** 	return sz;
 1214              		.loc 1 611 0
 1215 0044 3B1C     		mov	r3, r7
 1216 0046 0F33     		add	r3, r3, #15
 1217 0048 1B78     		ldrb	r3, [r3]
 612:.\Generated_Source\PSoC4/ETH.c **** }
 1218              		.loc 1 612 0
 1219 004a 181C     		mov	r0, r3
 1220 004c BD46     		mov	sp, r7
 1221 004e 04B0     		add	sp, sp, #16
 1222              		@ sp needed for prologue
 1223 0050 80BD     		pop	{r7, pc}
 1224              		.cfi_endproc
 1225              	.LFE18:
 1226              		.size	ETH_GetSocketRxMemSize, .-ETH_GetSocketRxMemSize
 1227 0052 C046     		.section	.text.ETH_SetSocketTxMemSize,"ax",%progbits
 1228              		.align	2
 1229              		.global	ETH_SetSocketTxMemSize
 1230              		.code	16
 1231              		.thumb_func
 1232              		.type	ETH_SetSocketTxMemSize, %function
 1233              	ETH_SetSocketTxMemSize:
 1234              	.LFB19:
 613:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 614:.\Generated_Source\PSoC4/ETH.c **** /**
 615:.\Generated_Source\PSoC4/ETH.c ****  * \brief write a value to the tx mem size register
 616:.\Generated_Source\PSoC4/ETH.c ****  * \param size The value to be written to the register
 617:.\Generated_Source\PSoC4/ETH.c ****  */
 618:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketTxMemSize( uint8 socket, uint8 size )
 619:.\Generated_Source\PSoC4/ETH.c **** {
 1235              		.loc 1 619 0
 1236              		.cfi_startproc
 1237 0000 80B5     		push	{r7, lr}
 1238              	.LCFI55:
 1239              		.cfi_def_cfa_offset 8
 1240              		.cfi_offset 7, -8
 1241              		.cfi_offset 14, -4
 1242 0002 84B0     		sub	sp, sp, #16
 1243              	.LCFI56:
 1244              		.cfi_def_cfa_offset 24
 1245 0004 00AF     		add	r7, sp, #0
 1246              	.LCFI57:
 1247              		.cfi_def_cfa_register 7
 1248 0006 0A1C     		mov	r2, r1
 1249 0008 FB1D     		add	r3, r7, #7
 1250 000a 011C     		add	r1, r0, #0
 1251 000c 1970     		strb	r1, [r3]
 1252 000e BB1D     		add	r3, r7, #6
 1253 0010 1A70     		strb	r2, [r3]
 620:.\Generated_Source\PSoC4/ETH.c **** 	uint8 sz;
 621:.\Generated_Source\PSoC4/ETH.c **** 	
 622:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 1)
 623:.\Generated_Source\PSoC4/ETH.c **** 	/*
 624:.\Generated_Source\PSoC4/ETH.c **** 	 * The W5100 uses memory allocations within one register for all sockets.
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 34


 625:.\Generated_Source\PSoC4/ETH.c **** 	 * the options are set by a 2 bit code for 1, 2, 4, or 8 K
 626:.\Generated_Source\PSoC4/ETH.c **** 	 */
 627:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipRead( ETH_REG_TXSR, &sz, 1);
 1254              		.loc 1 627 0
 1255 0012 3B1C     		mov	r3, r7
 1256 0014 0F33     		add	r3, r3, #15
 1257 0016 1B20     		mov	r0, #27
 1258 0018 191C     		mov	r1, r3
 1259 001a 0122     		mov	r2, #1
 1260 001c FFF7FEFF 		bl	ETH_ChipRead
 628:.\Generated_Source\PSoC4/ETH.c **** 		sz = sz & (~(3<<(socket<<1)));
 1261              		.loc 1 628 0
 1262 0020 FB1D     		add	r3, r7, #7
 1263 0022 1B78     		ldrb	r3, [r3]
 1264 0024 5B00     		lsl	r3, r3, #1
 1265 0026 0322     		mov	r2, #3
 1266 0028 111C     		mov	r1, r2
 1267 002a 9940     		lsl	r1, r1, r3
 1268 002c 0B1C     		mov	r3, r1
 1269 002e DBB2     		uxtb	r3, r3
 1270 0030 DB43     		mvn	r3, r3
 1271 0032 DBB2     		uxtb	r3, r3
 1272 0034 3A1C     		mov	r2, r7
 1273 0036 0F32     		add	r2, r2, #15
 1274 0038 1278     		ldrb	r2, [r2]
 1275 003a D2B2     		uxtb	r2, r2
 1276 003c 1340     		and	r3, r2
 1277 003e DBB2     		uxtb	r3, r3
 1278 0040 DAB2     		uxtb	r2, r3
 1279 0042 3B1C     		mov	r3, r7
 1280 0044 0F33     		add	r3, r3, #15
 1281 0046 1A70     		strb	r2, [r3]
 629:.\Generated_Source\PSoC4/ETH.c **** 		sz = sz | (size<<(socket<<1));
 1282              		.loc 1 629 0
 1283 0048 BB1D     		add	r3, r7, #6
 1284 004a 1A78     		ldrb	r2, [r3]
 1285 004c FB1D     		add	r3, r7, #7
 1286 004e 1B78     		ldrb	r3, [r3]
 1287 0050 5B00     		lsl	r3, r3, #1
 1288 0052 111C     		mov	r1, r2
 1289 0054 9940     		lsl	r1, r1, r3
 1290 0056 0B1C     		mov	r3, r1
 1291 0058 DAB2     		uxtb	r2, r3
 1292 005a 3B1C     		mov	r3, r7
 1293 005c 0F33     		add	r3, r3, #15
 1294 005e 1B78     		ldrb	r3, [r3]
 1295 0060 DBB2     		uxtb	r3, r3
 1296 0062 1343     		orr	r3, r2
 1297 0064 DBB2     		uxtb	r3, r3
 1298 0066 DAB2     		uxtb	r2, r3
 1299 0068 3B1C     		mov	r3, r7
 1300 006a 0F33     		add	r3, r3, #15
 1301 006c 1A70     		strb	r2, [r3]
 630:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipWrite( ETH_REG_TXSR, &sz, 1);
 1302              		.loc 1 630 0
 1303 006e 3B1C     		mov	r3, r7
 1304 0070 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 35


 1305 0072 1B20     		mov	r0, #27
 1306 0074 191C     		mov	r1, r3
 1307 0076 0122     		mov	r2, #1
 1308 0078 FFF7FEFF 		bl	ETH_ChipWrite
 631:.\Generated_Source\PSoC4/ETH.c **** #elif (1 == 2)
 632:.\Generated_Source\PSoC4/ETH.c **** 	/*
 633:.\Generated_Source\PSoC4/ETH.c **** 	 * The W5200 interface uses memory size registers located within the socket
 634:.\Generated_Source\PSoC4/ETH.c **** 	 * register memory maps.
 635:.\Generated_Source\PSoC4/ETH.c **** 	 */
 636:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite( ETH_SOCKET_REG(socket,ETH_SOCK_TXMEM), &size, 1);
 637:.\Generated_Source\PSoC4/ETH.c **** #endif
 638:.\Generated_Source\PSoC4/ETH.c **** }
 1309              		.loc 1 638 0
 1310 007c BD46     		mov	sp, r7
 1311 007e 04B0     		add	sp, sp, #16
 1312              		@ sp needed for prologue
 1313 0080 80BD     		pop	{r7, pc}
 1314              		.cfi_endproc
 1315              	.LFE19:
 1316              		.size	ETH_SetSocketTxMemSize, .-ETH_SetSocketTxMemSize
 1317 0082 C046     		.section	.text.ETH_GetSocketTxMemSize,"ax",%progbits
 1318              		.align	2
 1319              		.global	ETH_GetSocketTxMemSize
 1320              		.code	16
 1321              		.thumb_func
 1322              		.type	ETH_GetSocketTxMemSize, %function
 1323              	ETH_GetSocketTxMemSize:
 1324              	.LFB20:
 639:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 640:.\Generated_Source\PSoC4/ETH.c **** /**
 641:.\Generated_Source\PSoC4/ETH.c ****  * \brief read the contents of the tx mem size register
 642:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 643:.\Generated_Source\PSoC4/ETH.c ****  */
 644:.\Generated_Source\PSoC4/ETH.c **** uint8 ETH_GetSocketTxMemSize( uint8 socket )
 645:.\Generated_Source\PSoC4/ETH.c **** {
 1325              		.loc 1 645 0
 1326              		.cfi_startproc
 1327 0000 80B5     		push	{r7, lr}
 1328              	.LCFI58:
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 7, -8
 1331              		.cfi_offset 14, -4
 1332 0002 84B0     		sub	sp, sp, #16
 1333              	.LCFI59:
 1334              		.cfi_def_cfa_offset 24
 1335 0004 00AF     		add	r7, sp, #0
 1336              	.LCFI60:
 1337              		.cfi_def_cfa_register 7
 1338 0006 021C     		mov	r2, r0
 1339 0008 FB1D     		add	r3, r7, #7
 1340 000a 1A70     		strb	r2, [r3]
 646:.\Generated_Source\PSoC4/ETH.c **** 	uint8 sz;
 647:.\Generated_Source\PSoC4/ETH.c **** 	
 648:.\Generated_Source\PSoC4/ETH.c **** 	sz = 0xFF;
 1341              		.loc 1 648 0
 1342 000c 3B1C     		mov	r3, r7
 1343 000e 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 36


 1344 0010 FF22     		mov	r2, #255
 1345 0012 1A70     		strb	r2, [r3]
 649:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 1)
 650:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead(ETH_REG_TXSR, &sz, 1);
 1346              		.loc 1 650 0
 1347 0014 3B1C     		mov	r3, r7
 1348 0016 0F33     		add	r3, r3, #15
 1349 0018 1B20     		mov	r0, #27
 1350 001a 191C     		mov	r1, r3
 1351 001c 0122     		mov	r2, #1
 1352 001e FFF7FEFF 		bl	ETH_ChipRead
 651:.\Generated_Source\PSoC4/ETH.c **** 	sz = (sz >> (socket<<1)) & 0x03;
 1353              		.loc 1 651 0
 1354 0022 3B1C     		mov	r3, r7
 1355 0024 0F33     		add	r3, r3, #15
 1356 0026 1B78     		ldrb	r3, [r3]
 1357 0028 1A1C     		mov	r2, r3
 1358 002a FB1D     		add	r3, r7, #7
 1359 002c 1B78     		ldrb	r3, [r3]
 1360 002e 5B00     		lsl	r3, r3, #1
 1361 0030 111C     		mov	r1, r2
 1362 0032 1941     		asr	r1, r1, r3
 1363 0034 0B1C     		mov	r3, r1
 1364 0036 DAB2     		uxtb	r2, r3
 1365 0038 0323     		mov	r3, #3
 1366 003a 1340     		and	r3, r2
 1367 003c DAB2     		uxtb	r2, r3
 1368 003e 3B1C     		mov	r3, r7
 1369 0040 0F33     		add	r3, r3, #15
 1370 0042 1A70     		strb	r2, [r3]
 652:.\Generated_Source\PSoC4/ETH.c **** #elif (1 == 2)
 653:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead( ETH_SOCKET_REG(socket,ETH_SOCK_TXMEM), &sz, 1);
 654:.\Generated_Source\PSoC4/ETH.c **** #endif
 655:.\Generated_Source\PSoC4/ETH.c **** 	return sz;
 1371              		.loc 1 655 0
 1372 0044 3B1C     		mov	r3, r7
 1373 0046 0F33     		add	r3, r3, #15
 1374 0048 1B78     		ldrb	r3, [r3]
 656:.\Generated_Source\PSoC4/ETH.c **** }
 1375              		.loc 1 656 0
 1376 004a 181C     		mov	r0, r3
 1377 004c BD46     		mov	sp, r7
 1378 004e 04B0     		add	sp, sp, #16
 1379              		@ sp needed for prologue
 1380 0050 80BD     		pop	{r7, pc}
 1381              		.cfi_endproc
 1382              	.LFE20:
 1383              		.size	ETH_GetSocketTxMemSize, .-ETH_GetSocketTxMemSize
 1384 0052 C046     		.section	.text.ETH_SetSocketMode,"ax",%progbits
 1385              		.align	2
 1386              		.global	ETH_SetSocketMode
 1387              		.code	16
 1388              		.thumb_func
 1389              		.type	ETH_SetSocketMode, %function
 1390              	ETH_SetSocketMode:
 1391              	.LFB21:
 657:.\Generated_Source\PSoC4/ETH.c **** 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 37


 658:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 659:.\Generated_Source\PSoC4/ETH.c **** /* End Section */
 660:.\Generated_Source\PSoC4/ETH.c **** #endif
 661:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 662:.\Generated_Source\PSoC4/ETH.c **** /* Socket Registers */
 663:.\Generated_Source\PSoC4/ETH.c **** #if (1)
 664:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 665:.\Generated_Source\PSoC4/ETH.c **** /**
 666:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket mode register
 667:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 668:.\Generated_Source\PSoC4/ETH.c ****  * \param mode the value to be written to the register
 669:.\Generated_Source\PSoC4/ETH.c ****  */
 670:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketMode(uint8 socket, uint8 mode)
 671:.\Generated_Source\PSoC4/ETH.c **** {
 1392              		.loc 1 671 0
 1393              		.cfi_startproc
 1394 0000 80B5     		push	{r7, lr}
 1395              	.LCFI61:
 1396              		.cfi_def_cfa_offset 8
 1397              		.cfi_offset 7, -8
 1398              		.cfi_offset 14, -4
 1399 0002 82B0     		sub	sp, sp, #8
 1400              	.LCFI62:
 1401              		.cfi_def_cfa_offset 16
 1402 0004 00AF     		add	r7, sp, #0
 1403              	.LCFI63:
 1404              		.cfi_def_cfa_register 7
 1405 0006 0A1C     		mov	r2, r1
 1406 0008 FB1D     		add	r3, r7, #7
 1407 000a 011C     		add	r1, r0, #0
 1408 000c 1970     		strb	r1, [r3]
 1409 000e BB1D     		add	r3, r7, #6
 1410 0010 1A70     		strb	r2, [r3]
 672:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite((ETH_SOCKET_REG(socket, ETH_SOCK_MR)),(uint8*)&(mode), 1);
 1411              		.loc 1 672 0
 1412 0012 FB1D     		add	r3, r7, #7
 1413 0014 1B78     		ldrb	r3, [r3]
 1414 0016 9BB2     		uxth	r3, r3
 1415 0018 1B02     		lsl	r3, r3, #8
 1416 001a 9BB2     		uxth	r3, r3
 1417 001c 8022     		mov	r2, #128
 1418 001e D200     		lsl	r2, r2, #3
 1419 0020 9B18     		add	r3, r3, r2
 1420 0022 9AB2     		uxth	r2, r3
 1421 0024 BB1D     		add	r3, r7, #6
 1422 0026 101C     		mov	r0, r2
 1423 0028 191C     		mov	r1, r3
 1424 002a 0122     		mov	r2, #1
 1425 002c FFF7FEFF 		bl	ETH_ChipWrite
 673:.\Generated_Source\PSoC4/ETH.c **** }
 1426              		.loc 1 673 0
 1427 0030 BD46     		mov	sp, r7
 1428 0032 02B0     		add	sp, sp, #8
 1429              		@ sp needed for prologue
 1430 0034 80BD     		pop	{r7, pc}
 1431              		.cfi_endproc
 1432              	.LFE21:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 38


 1433              		.size	ETH_SetSocketMode, .-ETH_SetSocketMode
 1434 0036 C046     		.section	.text.ETH_SetSocketCommand,"ax",%progbits
 1435              		.align	2
 1436              		.global	ETH_SetSocketCommand
 1437              		.code	16
 1438              		.thumb_func
 1439              		.type	ETH_SetSocketCommand, %function
 1440              	ETH_SetSocketCommand:
 1441              	.LFB22:
 674:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 675:.\Generated_Source\PSoC4/ETH.c **** /**
 676:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket command register
 677:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 678:.\Generated_Source\PSoC4/ETH.c ****  * \param cmd the value to be written to the register
 679:.\Generated_Source\PSoC4/ETH.c ****  */
 680:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketCommand(uint8 socket, uint8 cmd)
 681:.\Generated_Source\PSoC4/ETH.c **** {
 1442              		.loc 1 681 0
 1443              		.cfi_startproc
 1444 0000 80B5     		push	{r7, lr}
 1445              	.LCFI64:
 1446              		.cfi_def_cfa_offset 8
 1447              		.cfi_offset 7, -8
 1448              		.cfi_offset 14, -4
 1449 0002 82B0     		sub	sp, sp, #8
 1450              	.LCFI65:
 1451              		.cfi_def_cfa_offset 16
 1452 0004 00AF     		add	r7, sp, #0
 1453              	.LCFI66:
 1454              		.cfi_def_cfa_register 7
 1455 0006 0A1C     		mov	r2, r1
 1456 0008 FB1D     		add	r3, r7, #7
 1457 000a 011C     		add	r1, r0, #0
 1458 000c 1970     		strb	r1, [r3]
 1459 000e BB1D     		add	r3, r7, #6
 1460 0010 1A70     		strb	r2, [r3]
 682:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite( (ETH_SOCKET_REG(socket, ETH_SOCK_CR)),(uint8*)&(cmd),1);
 1461              		.loc 1 682 0
 1462 0012 FB1D     		add	r3, r7, #7
 1463 0014 1B78     		ldrb	r3, [r3]
 1464 0016 9BB2     		uxth	r3, r3
 1465 0018 1B02     		lsl	r3, r3, #8
 1466 001a 9BB2     		uxth	r3, r3
 1467 001c 054A     		ldr	r2, .L47
 1468 001e 9B18     		add	r3, r3, r2
 1469 0020 9AB2     		uxth	r2, r3
 1470 0022 BB1D     		add	r3, r7, #6
 1471 0024 101C     		mov	r0, r2
 1472 0026 191C     		mov	r1, r3
 1473 0028 0122     		mov	r2, #1
 1474 002a FFF7FEFF 		bl	ETH_ChipWrite
 683:.\Generated_Source\PSoC4/ETH.c **** }
 1475              		.loc 1 683 0
 1476 002e BD46     		mov	sp, r7
 1477 0030 02B0     		add	sp, sp, #8
 1478              		@ sp needed for prologue
 1479 0032 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 39


 1480              	.L48:
 1481              		.align	2
 1482              	.L47:
 1483 0034 01040000 		.word	1025
 1484              		.cfi_endproc
 1485              	.LFE22:
 1486              		.size	ETH_SetSocketCommand, .-ETH_SetSocketCommand
 1487              		.section	.text.ETH_GetSocketCommand,"ax",%progbits
 1488              		.align	2
 1489              		.global	ETH_GetSocketCommand
 1490              		.code	16
 1491              		.thumb_func
 1492              		.type	ETH_GetSocketCommand, %function
 1493              	ETH_GetSocketCommand:
 1494              	.LFB23:
 684:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 685:.\Generated_Source\PSoC4/ETH.c **** /**
 686:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a value from the socket command register
 687:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 688:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 689:.\Generated_Source\PSoC4/ETH.c ****  */
 690:.\Generated_Source\PSoC4/ETH.c **** uint8 ETH_GetSocketCommand(uint8 socket )
 691:.\Generated_Source\PSoC4/ETH.c **** {
 1495              		.loc 1 691 0
 1496              		.cfi_startproc
 1497 0000 80B5     		push	{r7, lr}
 1498              	.LCFI67:
 1499              		.cfi_def_cfa_offset 8
 1500              		.cfi_offset 7, -8
 1501              		.cfi_offset 14, -4
 1502 0002 84B0     		sub	sp, sp, #16
 1503              	.LCFI68:
 1504              		.cfi_def_cfa_offset 24
 1505 0004 00AF     		add	r7, sp, #0
 1506              	.LCFI69:
 1507              		.cfi_def_cfa_register 7
 1508 0006 021C     		mov	r2, r0
 1509 0008 FB1D     		add	r3, r7, #7
 1510 000a 1A70     		strb	r2, [r3]
 692:.\Generated_Source\PSoC4/ETH.c **** 	uint8 cmd = 0xFF;
 1511              		.loc 1 692 0
 1512 000c 3B1C     		mov	r3, r7
 1513 000e 0F33     		add	r3, r3, #15
 1514 0010 FF22     		mov	r2, #255
 1515 0012 1A70     		strb	r2, [r3]
 693:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead( (ETH_SOCKET_REG(socket, ETH_SOCK_CR)),(uint8*)(&cmd),1);
 1516              		.loc 1 693 0
 1517 0014 FB1D     		add	r3, r7, #7
 1518 0016 1B78     		ldrb	r3, [r3]
 1519 0018 9BB2     		uxth	r3, r3
 1520 001a 1B02     		lsl	r3, r3, #8
 1521 001c 9BB2     		uxth	r3, r3
 1522 001e 084A     		ldr	r2, .L51
 1523 0020 9B18     		add	r3, r3, r2
 1524 0022 9AB2     		uxth	r2, r3
 1525 0024 3B1C     		mov	r3, r7
 1526 0026 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 40


 1527 0028 101C     		mov	r0, r2
 1528 002a 191C     		mov	r1, r3
 1529 002c 0122     		mov	r2, #1
 1530 002e FFF7FEFF 		bl	ETH_ChipRead
 694:.\Generated_Source\PSoC4/ETH.c **** 	return cmd;
 1531              		.loc 1 694 0
 1532 0032 3B1C     		mov	r3, r7
 1533 0034 0F33     		add	r3, r3, #15
 1534 0036 1B78     		ldrb	r3, [r3]
 695:.\Generated_Source\PSoC4/ETH.c **** }
 1535              		.loc 1 695 0
 1536 0038 181C     		mov	r0, r3
 1537 003a BD46     		mov	sp, r7
 1538 003c 04B0     		add	sp, sp, #16
 1539              		@ sp needed for prologue
 1540 003e 80BD     		pop	{r7, pc}
 1541              	.L52:
 1542              		.align	2
 1543              	.L51:
 1544 0040 01040000 		.word	1025
 1545              		.cfi_endproc
 1546              	.LFE23:
 1547              		.size	ETH_GetSocketCommand, .-ETH_GetSocketCommand
 1548              		.section	.text.ETH_SetSocketIR,"ax",%progbits
 1549              		.align	2
 1550              		.global	ETH_SetSocketIR
 1551              		.code	16
 1552              		.thumb_func
 1553              		.type	ETH_SetSocketIR, %function
 1554              	ETH_SetSocketIR:
 1555              	.LFB24:
 696:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 697:.\Generated_Source\PSoC4/ETH.c **** /**
 698:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket interrupt register
 699:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 700:.\Generated_Source\PSoC4/ETH.c ****  * \param ir the value to be written to the register
 701:.\Generated_Source\PSoC4/ETH.c ****  */
 702:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketIR(uint8 socket, uint8 ir)
 703:.\Generated_Source\PSoC4/ETH.c **** {
 1556              		.loc 1 703 0
 1557              		.cfi_startproc
 1558 0000 80B5     		push	{r7, lr}
 1559              	.LCFI70:
 1560              		.cfi_def_cfa_offset 8
 1561              		.cfi_offset 7, -8
 1562              		.cfi_offset 14, -4
 1563 0002 82B0     		sub	sp, sp, #8
 1564              	.LCFI71:
 1565              		.cfi_def_cfa_offset 16
 1566 0004 00AF     		add	r7, sp, #0
 1567              	.LCFI72:
 1568              		.cfi_def_cfa_register 7
 1569 0006 0A1C     		mov	r2, r1
 1570 0008 FB1D     		add	r3, r7, #7
 1571 000a 011C     		add	r1, r0, #0
 1572 000c 1970     		strb	r1, [r3]
 1573 000e BB1D     		add	r3, r7, #6
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 41


 1574 0010 1A70     		strb	r2, [r3]
 704:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite( (ETH_SOCKET_REG(socket, ETH_SOCK_IR)), (uint8*)&(ir), 1);
 1575              		.loc 1 704 0
 1576 0012 FB1D     		add	r3, r7, #7
 1577 0014 1B78     		ldrb	r3, [r3]
 1578 0016 9BB2     		uxth	r3, r3
 1579 0018 1B02     		lsl	r3, r3, #8
 1580 001a 9BB2     		uxth	r3, r3
 1581 001c 054A     		ldr	r2, .L54
 1582 001e 9B18     		add	r3, r3, r2
 1583 0020 9AB2     		uxth	r2, r3
 1584 0022 BB1D     		add	r3, r7, #6
 1585 0024 101C     		mov	r0, r2
 1586 0026 191C     		mov	r1, r3
 1587 0028 0122     		mov	r2, #1
 1588 002a FFF7FEFF 		bl	ETH_ChipWrite
 705:.\Generated_Source\PSoC4/ETH.c **** }
 1589              		.loc 1 705 0
 1590 002e BD46     		mov	sp, r7
 1591 0030 02B0     		add	sp, sp, #8
 1592              		@ sp needed for prologue
 1593 0032 80BD     		pop	{r7, pc}
 1594              	.L55:
 1595              		.align	2
 1596              	.L54:
 1597 0034 02040000 		.word	1026
 1598              		.cfi_endproc
 1599              	.LFE24:
 1600              		.size	ETH_SetSocketIR, .-ETH_SetSocketIR
 1601              		.section	.text.ETH_GetSocketIR,"ax",%progbits
 1602              		.align	2
 1603              		.global	ETH_GetSocketIR
 1604              		.code	16
 1605              		.thumb_func
 1606              		.type	ETH_GetSocketIR, %function
 1607              	ETH_GetSocketIR:
 1608              	.LFB25:
 706:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 707:.\Generated_Source\PSoC4/ETH.c **** /**
 708:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a value from the socket interrupt register
 709:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 710:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 711:.\Generated_Source\PSoC4/ETH.c ****  */
 712:.\Generated_Source\PSoC4/ETH.c **** uint8 ETH_GetSocketIR(uint8 socket)
 713:.\Generated_Source\PSoC4/ETH.c **** {	
 1609              		.loc 1 713 0
 1610              		.cfi_startproc
 1611 0000 80B5     		push	{r7, lr}
 1612              	.LCFI73:
 1613              		.cfi_def_cfa_offset 8
 1614              		.cfi_offset 7, -8
 1615              		.cfi_offset 14, -4
 1616 0002 84B0     		sub	sp, sp, #16
 1617              	.LCFI74:
 1618              		.cfi_def_cfa_offset 24
 1619 0004 00AF     		add	r7, sp, #0
 1620              	.LCFI75:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 42


 1621              		.cfi_def_cfa_register 7
 1622 0006 021C     		mov	r2, r0
 1623 0008 FB1D     		add	r3, r7, #7
 1624 000a 1A70     		strb	r2, [r3]
 714:.\Generated_Source\PSoC4/ETH.c **** 	uint8 ir = 0xFF;
 1625              		.loc 1 714 0
 1626 000c 3B1C     		mov	r3, r7
 1627 000e 0F33     		add	r3, r3, #15
 1628 0010 FF22     		mov	r2, #255
 1629 0012 1A70     		strb	r2, [r3]
 715:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead((ETH_SOCKET_REG(socket, ETH_SOCK_IR)), (uint8*)&(ir), 1);
 1630              		.loc 1 715 0
 1631 0014 FB1D     		add	r3, r7, #7
 1632 0016 1B78     		ldrb	r3, [r3]
 1633 0018 9BB2     		uxth	r3, r3
 1634 001a 1B02     		lsl	r3, r3, #8
 1635 001c 9BB2     		uxth	r3, r3
 1636 001e 084A     		ldr	r2, .L58
 1637 0020 9B18     		add	r3, r3, r2
 1638 0022 9AB2     		uxth	r2, r3
 1639 0024 3B1C     		mov	r3, r7
 1640 0026 0F33     		add	r3, r3, #15
 1641 0028 101C     		mov	r0, r2
 1642 002a 191C     		mov	r1, r3
 1643 002c 0122     		mov	r2, #1
 1644 002e FFF7FEFF 		bl	ETH_ChipRead
 716:.\Generated_Source\PSoC4/ETH.c **** 	return ir;
 1645              		.loc 1 716 0
 1646 0032 3B1C     		mov	r3, r7
 1647 0034 0F33     		add	r3, r3, #15
 1648 0036 1B78     		ldrb	r3, [r3]
 717:.\Generated_Source\PSoC4/ETH.c **** }
 1649              		.loc 1 717 0
 1650 0038 181C     		mov	r0, r3
 1651 003a BD46     		mov	sp, r7
 1652 003c 04B0     		add	sp, sp, #16
 1653              		@ sp needed for prologue
 1654 003e 80BD     		pop	{r7, pc}
 1655              	.L59:
 1656              		.align	2
 1657              	.L58:
 1658 0040 02040000 		.word	1026
 1659              		.cfi_endproc
 1660              	.LFE25:
 1661              		.size	ETH_GetSocketIR, .-ETH_GetSocketIR
 1662              		.section	.text.ETH_GetSocketStatus,"ax",%progbits
 1663              		.align	2
 1664              		.global	ETH_GetSocketStatus
 1665              		.code	16
 1666              		.thumb_func
 1667              		.type	ETH_GetSocketStatus, %function
 1668              	ETH_GetSocketStatus:
 1669              	.LFB26:
 718:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 719:.\Generated_Source\PSoC4/ETH.c **** /**
 720:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a value from the socket status register
 721:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 43


 722:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 723:.\Generated_Source\PSoC4/ETH.c ****  */
 724:.\Generated_Source\PSoC4/ETH.c **** uint8 ETH_GetSocketStatus(uint8 socket)
 725:.\Generated_Source\PSoC4/ETH.c **** { 
 1670              		.loc 1 725 0
 1671              		.cfi_startproc
 1672 0000 80B5     		push	{r7, lr}
 1673              	.LCFI76:
 1674              		.cfi_def_cfa_offset 8
 1675              		.cfi_offset 7, -8
 1676              		.cfi_offset 14, -4
 1677 0002 84B0     		sub	sp, sp, #16
 1678              	.LCFI77:
 1679              		.cfi_def_cfa_offset 24
 1680 0004 00AF     		add	r7, sp, #0
 1681              	.LCFI78:
 1682              		.cfi_def_cfa_register 7
 1683 0006 021C     		mov	r2, r0
 1684 0008 FB1D     		add	r3, r7, #7
 1685 000a 1A70     		strb	r2, [r3]
 726:.\Generated_Source\PSoC4/ETH.c **** 	uint8 status = 0xFF;
 1686              		.loc 1 726 0
 1687 000c 3B1C     		mov	r3, r7
 1688 000e 0F33     		add	r3, r3, #15
 1689 0010 FF22     		mov	r2, #255
 1690 0012 1A70     		strb	r2, [r3]
 727:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipRead(ETH_SOCKET_REG(socket, ETH_SOCK_SR), &status, 1);
 1691              		.loc 1 727 0
 1692 0014 FB1D     		add	r3, r7, #7
 1693 0016 1B78     		ldrb	r3, [r3]
 1694 0018 9BB2     		uxth	r3, r3
 1695 001a 1B02     		lsl	r3, r3, #8
 1696 001c 9BB2     		uxth	r3, r3
 1697 001e 084A     		ldr	r2, .L62
 1698 0020 9B18     		add	r3, r3, r2
 1699 0022 9AB2     		uxth	r2, r3
 1700 0024 3B1C     		mov	r3, r7
 1701 0026 0F33     		add	r3, r3, #15
 1702 0028 101C     		mov	r0, r2
 1703 002a 191C     		mov	r1, r3
 1704 002c 0122     		mov	r2, #1
 1705 002e FFF7FEFF 		bl	ETH_ChipRead
 728:.\Generated_Source\PSoC4/ETH.c **** 	return status;
 1706              		.loc 1 728 0
 1707 0032 3B1C     		mov	r3, r7
 1708 0034 0F33     		add	r3, r3, #15
 1709 0036 1B78     		ldrb	r3, [r3]
 729:.\Generated_Source\PSoC4/ETH.c **** }
 1710              		.loc 1 729 0
 1711 0038 181C     		mov	r0, r3
 1712 003a BD46     		mov	sp, r7
 1713 003c 04B0     		add	sp, sp, #16
 1714              		@ sp needed for prologue
 1715 003e 80BD     		pop	{r7, pc}
 1716              	.L63:
 1717              		.align	2
 1718              	.L62:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 44


 1719 0040 03040000 		.word	1027
 1720              		.cfi_endproc
 1721              	.LFE26:
 1722              		.size	ETH_GetSocketStatus, .-ETH_GetSocketStatus
 1723              		.section	.text.ETH_SetSocketSourcePort,"ax",%progbits
 1724              		.align	2
 1725              		.global	ETH_SetSocketSourcePort
 1726              		.code	16
 1727              		.thumb_func
 1728              		.type	ETH_SetSocketSourcePort, %function
 1729              	ETH_SetSocketSourcePort:
 1730              	.LFB27:
 730:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 731:.\Generated_Source\PSoC4/ETH.c **** /**
 732:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket source port register
 733:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 734:.\Generated_Source\PSoC4/ETH.c ****  * \param port the value to be written to the register
 735:.\Generated_Source\PSoC4/ETH.c ****  */
 736:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketSourcePort(uint8 socket, uint16 port)
 737:.\Generated_Source\PSoC4/ETH.c **** {
 1731              		.loc 1 737 0
 1732              		.cfi_startproc
 1733 0000 80B5     		push	{r7, lr}
 1734              	.LCFI79:
 1735              		.cfi_def_cfa_offset 8
 1736              		.cfi_offset 7, -8
 1737              		.cfi_offset 14, -4
 1738 0002 82B0     		sub	sp, sp, #8
 1739              	.LCFI80:
 1740              		.cfi_def_cfa_offset 16
 1741 0004 00AF     		add	r7, sp, #0
 1742              	.LCFI81:
 1743              		.cfi_def_cfa_register 7
 1744 0006 0A1C     		mov	r2, r1
 1745 0008 FB1D     		add	r3, r7, #7
 1746 000a 011C     		add	r1, r0, #0
 1747 000c 1970     		strb	r1, [r3]
 1748 000e 3B1D     		add	r3, r7, #4
 1749 0010 1A80     		strh	r2, [r3]
 738:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite16(ETH_SOCKET_REG(socket, ETH_SOCK_PORT),port);
 1750              		.loc 1 738 0
 1751 0012 FB1D     		add	r3, r7, #7
 1752 0014 1B78     		ldrb	r3, [r3]
 1753 0016 9BB2     		uxth	r3, r3
 1754 0018 1B02     		lsl	r3, r3, #8
 1755 001a 9BB2     		uxth	r3, r3
 1756 001c 054A     		ldr	r2, .L65
 1757 001e 9B18     		add	r3, r3, r2
 1758 0020 9AB2     		uxth	r2, r3
 1759 0022 3B1D     		add	r3, r7, #4
 1760 0024 1B88     		ldrh	r3, [r3]
 1761 0026 101C     		mov	r0, r2
 1762 0028 191C     		mov	r1, r3
 1763 002a FFF7FEFF 		bl	ETH_ChipWrite16
 739:.\Generated_Source\PSoC4/ETH.c **** }
 1764              		.loc 1 739 0
 1765 002e BD46     		mov	sp, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 45


 1766 0030 02B0     		add	sp, sp, #8
 1767              		@ sp needed for prologue
 1768 0032 80BD     		pop	{r7, pc}
 1769              	.L66:
 1770              		.align	2
 1771              	.L65:
 1772 0034 04040000 		.word	1028
 1773              		.cfi_endproc
 1774              	.LFE27:
 1775              		.size	ETH_SetSocketSourcePort, .-ETH_SetSocketSourcePort
 1776              		.section	.text.ETH_SetSocketDestMAC,"ax",%progbits
 1777              		.align	2
 1778              		.global	ETH_SetSocketDestMAC
 1779              		.code	16
 1780              		.thumb_func
 1781              		.type	ETH_SetSocketDestMAC, %function
 1782              	ETH_SetSocketDestMAC:
 1783              	.LFB28:
 740:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 741:.\Generated_Source\PSoC4/ETH.c **** /**
 742:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket Destination hardware address register
 743:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 744:.\Generated_Source\PSoC4/ETH.c ****  * \param *mac poitner to the array holding the values to be written to the register
 745:.\Generated_Source\PSoC4/ETH.c ****  */
 746:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketDestMAC(uint8 socket, uint8* mac)
 747:.\Generated_Source\PSoC4/ETH.c **** { 
 1784              		.loc 1 747 0
 1785              		.cfi_startproc
 1786 0000 80B5     		push	{r7, lr}
 1787              	.LCFI82:
 1788              		.cfi_def_cfa_offset 8
 1789              		.cfi_offset 7, -8
 1790              		.cfi_offset 14, -4
 1791 0002 82B0     		sub	sp, sp, #8
 1792              	.LCFI83:
 1793              		.cfi_def_cfa_offset 16
 1794 0004 00AF     		add	r7, sp, #0
 1795              	.LCFI84:
 1796              		.cfi_def_cfa_register 7
 1797 0006 021C     		mov	r2, r0
 1798 0008 3960     		str	r1, [r7]
 1799 000a FB1D     		add	r3, r7, #7
 1800 000c 1A70     		strb	r2, [r3]
 748:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite( ETH_SOCKET_REG(socket, ETH_SOCK_DHAR), &mac[0], 6);
 1801              		.loc 1 748 0
 1802 000e FB1D     		add	r3, r7, #7
 1803 0010 1B78     		ldrb	r3, [r3]
 1804 0012 9BB2     		uxth	r3, r3
 1805 0014 1B02     		lsl	r3, r3, #8
 1806 0016 9BB2     		uxth	r3, r3
 1807 0018 054A     		ldr	r2, .L68
 1808 001a 9B18     		add	r3, r3, r2
 1809 001c 9AB2     		uxth	r2, r3
 1810 001e 3B68     		ldr	r3, [r7]
 1811 0020 101C     		mov	r0, r2
 1812 0022 191C     		mov	r1, r3
 1813 0024 0622     		mov	r2, #6
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 46


 1814 0026 FFF7FEFF 		bl	ETH_ChipWrite
 749:.\Generated_Source\PSoC4/ETH.c **** }
 1815              		.loc 1 749 0
 1816 002a BD46     		mov	sp, r7
 1817 002c 02B0     		add	sp, sp, #8
 1818              		@ sp needed for prologue
 1819 002e 80BD     		pop	{r7, pc}
 1820              	.L69:
 1821              		.align	2
 1822              	.L68:
 1823 0030 06040000 		.word	1030
 1824              		.cfi_endproc
 1825              	.LFE28:
 1826              		.size	ETH_SetSocketDestMAC, .-ETH_SetSocketDestMAC
 1827              		.section	.text.ETH_SetSocketDestIP,"ax",%progbits
 1828              		.align	2
 1829              		.global	ETH_SetSocketDestIP
 1830              		.code	16
 1831              		.thumb_func
 1832              		.type	ETH_SetSocketDestIP, %function
 1833              	ETH_SetSocketDestIP:
 1834              	.LFB29:
 750:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 751:.\Generated_Source\PSoC4/ETH.c **** /**
 752:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket Destination IP address register
 753:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 754:.\Generated_Source\PSoC4/ETH.c ****  * \param ip the value to be written to the register
 755:.\Generated_Source\PSoC4/ETH.c ****  */
 756:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketDestIP(uint8 socket, uint32 ip)
 757:.\Generated_Source\PSoC4/ETH.c **** { 
 1835              		.loc 1 757 0
 1836              		.cfi_startproc
 1837 0000 80B5     		push	{r7, lr}
 1838              	.LCFI85:
 1839              		.cfi_def_cfa_offset 8
 1840              		.cfi_offset 7, -8
 1841              		.cfi_offset 14, -4
 1842 0002 82B0     		sub	sp, sp, #8
 1843              	.LCFI86:
 1844              		.cfi_def_cfa_offset 16
 1845 0004 00AF     		add	r7, sp, #0
 1846              	.LCFI87:
 1847              		.cfi_def_cfa_register 7
 1848 0006 021C     		mov	r2, r0
 1849 0008 3960     		str	r1, [r7]
 1850 000a FB1D     		add	r3, r7, #7
 1851 000c 1A70     		strb	r2, [r3]
 758:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite(ETH_SOCKET_REG(socket, ETH_SOCK_DIPR), (uint8*)&ip, 4);
 1852              		.loc 1 758 0
 1853 000e FB1D     		add	r3, r7, #7
 1854 0010 1B78     		ldrb	r3, [r3]
 1855 0012 9BB2     		uxth	r3, r3
 1856 0014 1B02     		lsl	r3, r3, #8
 1857 0016 9BB2     		uxth	r3, r3
 1858 0018 054A     		ldr	r2, .L71
 1859 001a 9B18     		add	r3, r3, r2
 1860 001c 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 47


 1861 001e 3B1C     		mov	r3, r7
 1862 0020 101C     		mov	r0, r2
 1863 0022 191C     		mov	r1, r3
 1864 0024 0422     		mov	r2, #4
 1865 0026 FFF7FEFF 		bl	ETH_ChipWrite
 759:.\Generated_Source\PSoC4/ETH.c **** }
 1866              		.loc 1 759 0
 1867 002a BD46     		mov	sp, r7
 1868 002c 02B0     		add	sp, sp, #8
 1869              		@ sp needed for prologue
 1870 002e 80BD     		pop	{r7, pc}
 1871              	.L72:
 1872              		.align	2
 1873              	.L71:
 1874 0030 0C040000 		.word	1036
 1875              		.cfi_endproc
 1876              	.LFE29:
 1877              		.size	ETH_SetSocketDestIP, .-ETH_SetSocketDestIP
 1878              		.section	.text.ETH_SetSocketDestPort,"ax",%progbits
 1879              		.align	2
 1880              		.global	ETH_SetSocketDestPort
 1881              		.code	16
 1882              		.thumb_func
 1883              		.type	ETH_SetSocketDestPort, %function
 1884              	ETH_SetSocketDestPort:
 1885              	.LFB30:
 760:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 761:.\Generated_Source\PSoC4/ETH.c **** /**
 762:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket destination port register
 763:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 764:.\Generated_Source\PSoC4/ETH.c ****  * \param port the value to be written to the register
 765:.\Generated_Source\PSoC4/ETH.c ****  */
 766:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketDestPort(uint8 socket, uint16 port)
 767:.\Generated_Source\PSoC4/ETH.c **** { 
 1886              		.loc 1 767 0
 1887              		.cfi_startproc
 1888 0000 80B5     		push	{r7, lr}
 1889              	.LCFI88:
 1890              		.cfi_def_cfa_offset 8
 1891              		.cfi_offset 7, -8
 1892              		.cfi_offset 14, -4
 1893 0002 82B0     		sub	sp, sp, #8
 1894              	.LCFI89:
 1895              		.cfi_def_cfa_offset 16
 1896 0004 00AF     		add	r7, sp, #0
 1897              	.LCFI90:
 1898              		.cfi_def_cfa_register 7
 1899 0006 0A1C     		mov	r2, r1
 1900 0008 FB1D     		add	r3, r7, #7
 1901 000a 011C     		add	r1, r0, #0
 1902 000c 1970     		strb	r1, [r3]
 1903 000e 3B1D     		add	r3, r7, #4
 1904 0010 1A80     		strh	r2, [r3]
 768:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite16( ETH_SOCKET_REG(socket, ETH_SOCK_DPORT), port);
 1905              		.loc 1 768 0
 1906 0012 FB1D     		add	r3, r7, #7
 1907 0014 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 48


 1908 0016 9BB2     		uxth	r3, r3
 1909 0018 1B02     		lsl	r3, r3, #8
 1910 001a 9BB2     		uxth	r3, r3
 1911 001c 8222     		mov	r2, #130
 1912 001e D200     		lsl	r2, r2, #3
 1913 0020 9B18     		add	r3, r3, r2
 1914 0022 9AB2     		uxth	r2, r3
 1915 0024 3B1D     		add	r3, r7, #4
 1916 0026 1B88     		ldrh	r3, [r3]
 1917 0028 101C     		mov	r0, r2
 1918 002a 191C     		mov	r1, r3
 1919 002c FFF7FEFF 		bl	ETH_ChipWrite16
 769:.\Generated_Source\PSoC4/ETH.c **** }
 1920              		.loc 1 769 0
 1921 0030 BD46     		mov	sp, r7
 1922 0032 02B0     		add	sp, sp, #8
 1923              		@ sp needed for prologue
 1924 0034 80BD     		pop	{r7, pc}
 1925              		.cfi_endproc
 1926              	.LFE30:
 1927              		.size	ETH_SetSocketDestPort, .-ETH_SetSocketDestPort
 1928 0036 C046     		.section	.text.ETH_GetSocketTxFree,"ax",%progbits
 1929              		.align	2
 1930              		.global	ETH_GetSocketTxFree
 1931              		.code	16
 1932              		.thumb_func
 1933              		.type	ETH_GetSocketTxFree, %function
 1934              	ETH_GetSocketTxFree:
 1935              	.LFB31:
 770:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 771:.\Generated_Source\PSoC4/ETH.c **** /**
 772:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a value from the socket Tx free size register
 773:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 774:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 775:.\Generated_Source\PSoC4/ETH.c ****  */
 776:.\Generated_Source\PSoC4/ETH.c **** uint16 ETH_GetSocketTxFree(uint8 socket)
 777:.\Generated_Source\PSoC4/ETH.c **** { 
 1936              		.loc 1 777 0
 1937              		.cfi_startproc
 1938 0000 80B5     		push	{r7, lr}
 1939              	.LCFI91:
 1940              		.cfi_def_cfa_offset 8
 1941              		.cfi_offset 7, -8
 1942              		.cfi_offset 14, -4
 1943 0002 82B0     		sub	sp, sp, #8
 1944              	.LCFI92:
 1945              		.cfi_def_cfa_offset 16
 1946 0004 00AF     		add	r7, sp, #0
 1947              	.LCFI93:
 1948              		.cfi_def_cfa_register 7
 1949 0006 021C     		mov	r2, r0
 1950 0008 FB1D     		add	r3, r7, #7
 1951 000a 1A70     		strb	r2, [r3]
 778:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_TXFSR));
 1952              		.loc 1 778 0
 1953 000c FB1D     		add	r3, r7, #7
 1954 000e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 49


 1955 0010 9BB2     		uxth	r3, r3
 1956 0012 1B02     		lsl	r3, r3, #8
 1957 0014 9BB2     		uxth	r3, r3
 1958 0016 8422     		mov	r2, #132
 1959 0018 D200     		lsl	r2, r2, #3
 1960 001a 9B18     		add	r3, r3, r2
 1961 001c 9BB2     		uxth	r3, r3
 1962 001e 181C     		mov	r0, r3
 1963 0020 FFF7FEFF 		bl	ETH_ChipRead16
 1964 0024 031C     		mov	r3, r0
 779:.\Generated_Source\PSoC4/ETH.c **** }
 1965              		.loc 1 779 0
 1966 0026 181C     		mov	r0, r3
 1967 0028 BD46     		mov	sp, r7
 1968 002a 02B0     		add	sp, sp, #8
 1969              		@ sp needed for prologue
 1970 002c 80BD     		pop	{r7, pc}
 1971              		.cfi_endproc
 1972              	.LFE31:
 1973              		.size	ETH_GetSocketTxFree, .-ETH_GetSocketTxFree
 1974 002e C046     		.section	.text.ETH_SetSocketTxWritePtr,"ax",%progbits
 1975              		.align	2
 1976              		.global	ETH_SetSocketTxWritePtr
 1977              		.code	16
 1978              		.thumb_func
 1979              		.type	ETH_SetSocketTxWritePtr, %function
 1980              	ETH_SetSocketTxWritePtr:
 1981              	.LFB32:
 780:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 781:.\Generated_Source\PSoC4/ETH.c **** /**
 782:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket tx write pointer register
 783:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 784:.\Generated_Source\PSoC4/ETH.c ****  * \param ptr the value to be written to the register
 785:.\Generated_Source\PSoC4/ETH.c ****  */
 786:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketTxWritePtr(uint8 socket, uint16 ptr)
 787:.\Generated_Source\PSoC4/ETH.c **** { 
 1982              		.loc 1 787 0
 1983              		.cfi_startproc
 1984 0000 80B5     		push	{r7, lr}
 1985              	.LCFI94:
 1986              		.cfi_def_cfa_offset 8
 1987              		.cfi_offset 7, -8
 1988              		.cfi_offset 14, -4
 1989 0002 82B0     		sub	sp, sp, #8
 1990              	.LCFI95:
 1991              		.cfi_def_cfa_offset 16
 1992 0004 00AF     		add	r7, sp, #0
 1993              	.LCFI96:
 1994              		.cfi_def_cfa_register 7
 1995 0006 0A1C     		mov	r2, r1
 1996 0008 FB1D     		add	r3, r7, #7
 1997 000a 011C     		add	r1, r0, #0
 1998 000c 1970     		strb	r1, [r3]
 1999 000e 3B1D     		add	r3, r7, #4
 2000 0010 1A80     		strh	r2, [r3]
 788:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite16(ETH_SOCKET_REG(socket, ETH_SOCK_TXWR),ptr);
 2001              		.loc 1 788 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 50


 2002 0012 FB1D     		add	r3, r7, #7
 2003 0014 1B78     		ldrb	r3, [r3]
 2004 0016 9BB2     		uxth	r3, r3
 2005 0018 1B02     		lsl	r3, r3, #8
 2006 001a 9BB2     		uxth	r3, r3
 2007 001c 054A     		ldr	r2, .L77
 2008 001e 9B18     		add	r3, r3, r2
 2009 0020 9AB2     		uxth	r2, r3
 2010 0022 3B1D     		add	r3, r7, #4
 2011 0024 1B88     		ldrh	r3, [r3]
 2012 0026 101C     		mov	r0, r2
 2013 0028 191C     		mov	r1, r3
 2014 002a FFF7FEFF 		bl	ETH_ChipWrite16
 789:.\Generated_Source\PSoC4/ETH.c **** }
 2015              		.loc 1 789 0
 2016 002e BD46     		mov	sp, r7
 2017 0030 02B0     		add	sp, sp, #8
 2018              		@ sp needed for prologue
 2019 0032 80BD     		pop	{r7, pc}
 2020              	.L78:
 2021              		.align	2
 2022              	.L77:
 2023 0034 24040000 		.word	1060
 2024              		.cfi_endproc
 2025              	.LFE32:
 2026              		.size	ETH_SetSocketTxWritePtr, .-ETH_SetSocketTxWritePtr
 2027              		.section	.text.ETH_GetSocketTxWritePtr,"ax",%progbits
 2028              		.align	2
 2029              		.global	ETH_GetSocketTxWritePtr
 2030              		.code	16
 2031              		.thumb_func
 2032              		.type	ETH_GetSocketTxWritePtr, %function
 2033              	ETH_GetSocketTxWritePtr:
 2034              	.LFB33:
 790:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 791:.\Generated_Source\PSoC4/ETH.c **** /**
 792:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a value from the socket tx buffer write pointer register
 793:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 794:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 795:.\Generated_Source\PSoC4/ETH.c ****  */
 796:.\Generated_Source\PSoC4/ETH.c **** uint16 ETH_GetSocketTxWritePtr(uint8 socket)
 797:.\Generated_Source\PSoC4/ETH.c **** { 
 2035              		.loc 1 797 0
 2036              		.cfi_startproc
 2037 0000 80B5     		push	{r7, lr}
 2038              	.LCFI97:
 2039              		.cfi_def_cfa_offset 8
 2040              		.cfi_offset 7, -8
 2041              		.cfi_offset 14, -4
 2042 0002 82B0     		sub	sp, sp, #8
 2043              	.LCFI98:
 2044              		.cfi_def_cfa_offset 16
 2045 0004 00AF     		add	r7, sp, #0
 2046              	.LCFI99:
 2047              		.cfi_def_cfa_register 7
 2048 0006 021C     		mov	r2, r0
 2049 0008 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 51


 2050 000a 1A70     		strb	r2, [r3]
 798:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_TXWR));
 2051              		.loc 1 798 0
 2052 000c FB1D     		add	r3, r7, #7
 2053 000e 1B78     		ldrb	r3, [r3]
 2054 0010 9BB2     		uxth	r3, r3
 2055 0012 1B02     		lsl	r3, r3, #8
 2056 0014 9BB2     		uxth	r3, r3
 2057 0016 054A     		ldr	r2, .L81
 2058 0018 9B18     		add	r3, r3, r2
 2059 001a 9BB2     		uxth	r3, r3
 2060 001c 181C     		mov	r0, r3
 2061 001e FFF7FEFF 		bl	ETH_ChipRead16
 2062 0022 031C     		mov	r3, r0
 799:.\Generated_Source\PSoC4/ETH.c **** }
 2063              		.loc 1 799 0
 2064 0024 181C     		mov	r0, r3
 2065 0026 BD46     		mov	sp, r7
 2066 0028 02B0     		add	sp, sp, #8
 2067              		@ sp needed for prologue
 2068 002a 80BD     		pop	{r7, pc}
 2069              	.L82:
 2070              		.align	2
 2071              	.L81:
 2072 002c 24040000 		.word	1060
 2073              		.cfi_endproc
 2074              	.LFE33:
 2075              		.size	ETH_GetSocketTxWritePtr, .-ETH_GetSocketTxWritePtr
 2076              		.section	.text.ETH_GetSocketRxSize,"ax",%progbits
 2077              		.align	2
 2078              		.global	ETH_GetSocketRxSize
 2079              		.code	16
 2080              		.thumb_func
 2081              		.type	ETH_GetSocketRxSize, %function
 2082              	ETH_GetSocketRxSize:
 2083              	.LFB34:
 800:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 801:.\Generated_Source\PSoC4/ETH.c **** /**
 802:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a value from the socket rx received data size register
 803:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 804:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 805:.\Generated_Source\PSoC4/ETH.c ****  */
 806:.\Generated_Source\PSoC4/ETH.c **** uint16 ETH_GetSocketRxSize(uint8 socket)
 807:.\Generated_Source\PSoC4/ETH.c **** {
 2084              		.loc 1 807 0
 2085              		.cfi_startproc
 2086 0000 80B5     		push	{r7, lr}
 2087              	.LCFI100:
 2088              		.cfi_def_cfa_offset 8
 2089              		.cfi_offset 7, -8
 2090              		.cfi_offset 14, -4
 2091 0002 82B0     		sub	sp, sp, #8
 2092              	.LCFI101:
 2093              		.cfi_def_cfa_offset 16
 2094 0004 00AF     		add	r7, sp, #0
 2095              	.LCFI102:
 2096              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 52


 2097 0006 021C     		mov	r2, r0
 2098 0008 FB1D     		add	r3, r7, #7
 2099 000a 1A70     		strb	r2, [r3]
 808:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_RXRSR));
 2100              		.loc 1 808 0
 2101 000c FB1D     		add	r3, r7, #7
 2102 000e 1B78     		ldrb	r3, [r3]
 2103 0010 9BB2     		uxth	r3, r3
 2104 0012 1B02     		lsl	r3, r3, #8
 2105 0014 9BB2     		uxth	r3, r3
 2106 0016 054A     		ldr	r2, .L85
 2107 0018 9B18     		add	r3, r3, r2
 2108 001a 9BB2     		uxth	r3, r3
 2109 001c 181C     		mov	r0, r3
 2110 001e FFF7FEFF 		bl	ETH_ChipRead16
 2111 0022 031C     		mov	r3, r0
 809:.\Generated_Source\PSoC4/ETH.c **** }
 2112              		.loc 1 809 0
 2113 0024 181C     		mov	r0, r3
 2114 0026 BD46     		mov	sp, r7
 2115 0028 02B0     		add	sp, sp, #8
 2116              		@ sp needed for prologue
 2117 002a 80BD     		pop	{r7, pc}
 2118              	.L86:
 2119              		.align	2
 2120              	.L85:
 2121 002c 26040000 		.word	1062
 2122              		.cfi_endproc
 2123              	.LFE34:
 2124              		.size	ETH_GetSocketRxSize, .-ETH_GetSocketRxSize
 2125              		.section	.text.ETH_SetSocketRxReadPtr,"ax",%progbits
 2126              		.align	2
 2127              		.global	ETH_SetSocketRxReadPtr
 2128              		.code	16
 2129              		.thumb_func
 2130              		.type	ETH_SetSocketRxReadPtr, %function
 2131              	ETH_SetSocketRxReadPtr:
 2132              	.LFB35:
 810:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 811:.\Generated_Source\PSoC4/ETH.c **** /**
 812:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a value to the socket rx read pointer register
 813:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 814:.\Generated_Source\PSoC4/ETH.c ****  * \param ptr the value to be written to the register
 815:.\Generated_Source\PSoC4/ETH.c ****  */
 816:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketRxReadPtr(uint8 socket, uint16 ptr)
 817:.\Generated_Source\PSoC4/ETH.c **** { 
 2133              		.loc 1 817 0
 2134              		.cfi_startproc
 2135 0000 80B5     		push	{r7, lr}
 2136              	.LCFI103:
 2137              		.cfi_def_cfa_offset 8
 2138              		.cfi_offset 7, -8
 2139              		.cfi_offset 14, -4
 2140 0002 82B0     		sub	sp, sp, #8
 2141              	.LCFI104:
 2142              		.cfi_def_cfa_offset 16
 2143 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 53


 2144              	.LCFI105:
 2145              		.cfi_def_cfa_register 7
 2146 0006 0A1C     		mov	r2, r1
 2147 0008 FB1D     		add	r3, r7, #7
 2148 000a 011C     		add	r1, r0, #0
 2149 000c 1970     		strb	r1, [r3]
 2150 000e 3B1D     		add	r3, r7, #4
 2151 0010 1A80     		strh	r2, [r3]
 818:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite16(ETH_SOCKET_REG(socket, ETH_SOCK_RXRD),ptr);
 2152              		.loc 1 818 0
 2153 0012 FB1D     		add	r3, r7, #7
 2154 0014 1B78     		ldrb	r3, [r3]
 2155 0016 9BB2     		uxth	r3, r3
 2156 0018 1B02     		lsl	r3, r3, #8
 2157 001a 9BB2     		uxth	r3, r3
 2158 001c 8522     		mov	r2, #133
 2159 001e D200     		lsl	r2, r2, #3
 2160 0020 9B18     		add	r3, r3, r2
 2161 0022 9AB2     		uxth	r2, r3
 2162 0024 3B1D     		add	r3, r7, #4
 2163 0026 1B88     		ldrh	r3, [r3]
 2164 0028 101C     		mov	r0, r2
 2165 002a 191C     		mov	r1, r3
 2166 002c FFF7FEFF 		bl	ETH_ChipWrite16
 819:.\Generated_Source\PSoC4/ETH.c **** }
 2167              		.loc 1 819 0
 2168 0030 BD46     		mov	sp, r7
 2169 0032 02B0     		add	sp, sp, #8
 2170              		@ sp needed for prologue
 2171 0034 80BD     		pop	{r7, pc}
 2172              		.cfi_endproc
 2173              	.LFE35:
 2174              		.size	ETH_SetSocketRxReadPtr, .-ETH_SetSocketRxReadPtr
 2175 0036 C046     		.section	.text.ETH_GetSocketRxReadPtr,"ax",%progbits
 2176              		.align	2
 2177              		.global	ETH_GetSocketRxReadPtr
 2178              		.code	16
 2179              		.thumb_func
 2180              		.type	ETH_GetSocketRxReadPtr, %function
 2181              	ETH_GetSocketRxReadPtr:
 2182              	.LFB36:
 820:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 821:.\Generated_Source\PSoC4/ETH.c **** /**
 822:.\Generated_Source\PSoC4/ETH.c ****  * \brief Read a value from the socket rx buffer read pointer register
 823:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number for the addressed register
 824:.\Generated_Source\PSoC4/ETH.c ****  * \returns the value read from the register
 825:.\Generated_Source\PSoC4/ETH.c ****  */
 826:.\Generated_Source\PSoC4/ETH.c **** uint16 ETH_GetSocketRxReadPtr(uint8 socket)
 827:.\Generated_Source\PSoC4/ETH.c **** { 
 2183              		.loc 1 827 0
 2184              		.cfi_startproc
 2185 0000 80B5     		push	{r7, lr}
 2186              	.LCFI106:
 2187              		.cfi_def_cfa_offset 8
 2188              		.cfi_offset 7, -8
 2189              		.cfi_offset 14, -4
 2190 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 54


 2191              	.LCFI107:
 2192              		.cfi_def_cfa_offset 16
 2193 0004 00AF     		add	r7, sp, #0
 2194              	.LCFI108:
 2195              		.cfi_def_cfa_register 7
 2196 0006 021C     		mov	r2, r0
 2197 0008 FB1D     		add	r3, r7, #7
 2198 000a 1A70     		strb	r2, [r3]
 828:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_RXRD));
 2199              		.loc 1 828 0
 2200 000c FB1D     		add	r3, r7, #7
 2201 000e 1B78     		ldrb	r3, [r3]
 2202 0010 9BB2     		uxth	r3, r3
 2203 0012 1B02     		lsl	r3, r3, #8
 2204 0014 9BB2     		uxth	r3, r3
 2205 0016 8522     		mov	r2, #133
 2206 0018 D200     		lsl	r2, r2, #3
 2207 001a 9B18     		add	r3, r3, r2
 2208 001c 9BB2     		uxth	r3, r3
 2209 001e 181C     		mov	r0, r3
 2210 0020 FFF7FEFF 		bl	ETH_ChipRead16
 2211 0024 031C     		mov	r3, r0
 829:.\Generated_Source\PSoC4/ETH.c **** }
 2212              		.loc 1 829 0
 2213 0026 181C     		mov	r0, r3
 2214 0028 BD46     		mov	sp, r7
 2215 002a 02B0     		add	sp, sp, #8
 2216              		@ sp needed for prologue
 2217 002c 80BD     		pop	{r7, pc}
 2218              		.cfi_endproc
 2219              	.LFE36:
 2220              		.size	ETH_GetSocketRxReadPtr, .-ETH_GetSocketRxReadPtr
 2221 002e C046     		.section	.text.ETH_SetSocketRxWritePtr,"ax",%progbits
 2222              		.align	2
 2223              		.global	ETH_SetSocketRxWritePtr
 2224              		.code	16
 2225              		.thumb_func
 2226              		.type	ETH_SetSocketRxWritePtr, %function
 2227              	ETH_SetSocketRxWritePtr:
 2228              	.LFB37:
 830:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 831:.\Generated_Source\PSoC4/ETH.c **** /**
 832:.\Generated_Source\PSoC4/ETH.c ****  * \brief Set the write poitner starting address for a socket
 833:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket number to modify
 834:.\Generated_Source\PSoC4/ETH.c ****  * \param ptr the address value to write in to the pointer register
 835:.\Generated_Source\PSoC4/ETH.c ****  */
 836:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketRxWritePtr( uint8 socket, uint16 ptr)
 837:.\Generated_Source\PSoC4/ETH.c **** {
 2229              		.loc 1 837 0
 2230              		.cfi_startproc
 2231 0000 80B5     		push	{r7, lr}
 2232              	.LCFI109:
 2233              		.cfi_def_cfa_offset 8
 2234              		.cfi_offset 7, -8
 2235              		.cfi_offset 14, -4
 2236 0002 82B0     		sub	sp, sp, #8
 2237              	.LCFI110:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 55


 2238              		.cfi_def_cfa_offset 16
 2239 0004 00AF     		add	r7, sp, #0
 2240              	.LCFI111:
 2241              		.cfi_def_cfa_register 7
 2242 0006 0A1C     		mov	r2, r1
 2243 0008 FB1D     		add	r3, r7, #7
 2244 000a 011C     		add	r1, r0, #0
 2245 000c 1970     		strb	r1, [r3]
 2246 000e 3B1D     		add	r3, r7, #4
 2247 0010 1A80     		strh	r2, [r3]
 838:.\Generated_Source\PSoC4/ETH.c **** 	/*
 839:.\Generated_Source\PSoC4/ETH.c **** 	 * This function is not used on the W5100, since there is no register
 840:.\Generated_Source\PSoC4/ETH.c **** 	 * defined in the memor map to provide this capability
 841:.\Generated_Source\PSoC4/ETH.c **** 	 */
 842:.\Generated_Source\PSoC4/ETH.c **** #if (1 == 2)
 843:.\Generated_Source\PSoC4/ETH.c **** 	/*
 844:.\Generated_Source\PSoC4/ETH.c **** 	 * for the W5200 device, write the pointer value to the register
 845:.\Generated_Source\PSoC4/ETH.c **** 	 */
 846:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite16( ETH_SOCKET_REG(socket, ETH_SOCK_RXWR), PTRDIFF_MAX);
 847:.\Generated_Source\PSoC4/ETH.c **** #endif
 848:.\Generated_Source\PSoC4/ETH.c **** }
 2248              		.loc 1 848 0
 2249 0012 BD46     		mov	sp, r7
 2250 0014 02B0     		add	sp, sp, #8
 2251              		@ sp needed for prologue
 2252 0016 80BD     		pop	{r7, pc}
 2253              		.cfi_endproc
 2254              	.LFE37:
 2255              		.size	ETH_SetSocketRxWritePtr, .-ETH_SetSocketRxWritePtr
 2256              		.section	.text.ETH_SetSocketTxReadPtr,"ax",%progbits
 2257              		.align	2
 2258              		.global	ETH_SetSocketTxReadPtr
 2259              		.code	16
 2260              		.thumb_func
 2261              		.type	ETH_SetSocketTxReadPtr, %function
 2262              	ETH_SetSocketTxReadPtr:
 2263              	.LFB38:
 849:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 850:.\Generated_Source\PSoC4/ETH.c **** /**
 851:.\Generated_Source\PSoC4/ETH.c ****  * \brief Initialize the Tx buffer Read pointer register
 852:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the sockt to be modified
 853:.\Generated_Source\PSoC4/ETH.c ****  * \param ptr the address to store in to the pointer register
 854:.\Generated_Source\PSoC4/ETH.c **** */
 855:.\Generated_Source\PSoC4/ETH.c **** void ETH_SetSocketTxReadPtr(uint8 socket, uint16 ptr )
 856:.\Generated_Source\PSoC4/ETH.c **** {
 2264              		.loc 1 856 0
 2265              		.cfi_startproc
 2266 0000 80B5     		push	{r7, lr}
 2267              	.LCFI112:
 2268              		.cfi_def_cfa_offset 8
 2269              		.cfi_offset 7, -8
 2270              		.cfi_offset 14, -4
 2271 0002 82B0     		sub	sp, sp, #8
 2272              	.LCFI113:
 2273              		.cfi_def_cfa_offset 16
 2274 0004 00AF     		add	r7, sp, #0
 2275              	.LCFI114:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 56


 2276              		.cfi_def_cfa_register 7
 2277 0006 0A1C     		mov	r2, r1
 2278 0008 FB1D     		add	r3, r7, #7
 2279 000a 011C     		add	r1, r0, #0
 2280 000c 1970     		strb	r1, [r3]
 2281 000e 3B1D     		add	r3, r7, #4
 2282 0010 1A80     		strh	r2, [r3]
 857:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ChipWrite16( ETH_SOCKET_REG(socket, ETH_SOCK_TXRD), ptr);
 2283              		.loc 1 857 0
 2284 0012 FB1D     		add	r3, r7, #7
 2285 0014 1B78     		ldrb	r3, [r3]
 2286 0016 9BB2     		uxth	r3, r3
 2287 0018 1B02     		lsl	r3, r3, #8
 2288 001a 9BB2     		uxth	r3, r3
 2289 001c 054A     		ldr	r2, .L92
 2290 001e 9B18     		add	r3, r3, r2
 2291 0020 9AB2     		uxth	r2, r3
 2292 0022 3B1D     		add	r3, r7, #4
 2293 0024 1B88     		ldrh	r3, [r3]
 2294 0026 101C     		mov	r0, r2
 2295 0028 191C     		mov	r1, r3
 2296 002a FFF7FEFF 		bl	ETH_ChipWrite16
 858:.\Generated_Source\PSoC4/ETH.c **** }
 2297              		.loc 1 858 0
 2298 002e BD46     		mov	sp, r7
 2299 0030 02B0     		add	sp, sp, #8
 2300              		@ sp needed for prologue
 2301 0032 80BD     		pop	{r7, pc}
 2302              	.L93:
 2303              		.align	2
 2304              	.L92:
 2305 0034 22040000 		.word	1058
 2306              		.cfi_endproc
 2307              	.LFE38:
 2308              		.size	ETH_SetSocketTxReadPtr, .-ETH_SetSocketTxReadPtr
 2309              		.section	.text.ETH_ExecuteSocketCommand,"ax",%progbits
 2310              		.align	2
 2311              		.global	ETH_ExecuteSocketCommand
 2312              		.code	16
 2313              		.thumb_func
 2314              		.type	ETH_ExecuteSocketCommand, %function
 2315              	ETH_ExecuteSocketCommand:
 2316              	.LFB39:
 859:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 860:.\Generated_Source\PSoC4/ETH.c **** /**
 861:.\Generated_Source\PSoC4/ETH.c ****  * \brief Write a command to the socket command register and wait for completion
 862:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the addressed socket for the command
 863:.\Generated_Source\PSoC4/ETH.c ****  * \param cmd the command to execute
 864:.\Generated_Source\PSoC4/ETH.c ****  */
 865:.\Generated_Source\PSoC4/ETH.c **** uint32 ETH_ExecuteSocketCommand( uint8 socket, int cmd)
 866:.\Generated_Source\PSoC4/ETH.c **** {
 2317              		.loc 1 866 0
 2318              		.cfi_startproc
 2319 0000 80B5     		push	{r7, lr}
 2320              	.LCFI115:
 2321              		.cfi_def_cfa_offset 8
 2322              		.cfi_offset 7, -8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 57


 2323              		.cfi_offset 14, -4
 2324 0002 84B0     		sub	sp, sp, #16
 2325              	.LCFI116:
 2326              		.cfi_def_cfa_offset 24
 2327 0004 00AF     		add	r7, sp, #0
 2328              	.LCFI117:
 2329              		.cfi_def_cfa_register 7
 2330 0006 021C     		mov	r2, r0
 2331 0008 3960     		str	r1, [r7]
 2332 000a FB1D     		add	r3, r7, #7
 2333 000c 1A70     		strb	r2, [r3]
 867:.\Generated_Source\PSoC4/ETH.c **** 	uint32 timeout;
 868:.\Generated_Source\PSoC4/ETH.c **** 	timeout = 0;
 2334              		.loc 1 868 0
 2335 000e 0023     		mov	r3, #0
 2336 0010 FB60     		str	r3, [r7, #12]
 869:.\Generated_Source\PSoC4/ETH.c **** 	
 870:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSocketCommand(socket,cmd);
 2337              		.loc 1 870 0
 2338 0012 3B68     		ldr	r3, [r7]
 2339 0014 DBB2     		uxtb	r3, r3
 2340 0016 FA1D     		add	r2, r7, #7
 2341 0018 1278     		ldrb	r2, [r2]
 2342 001a 101C     		mov	r0, r2
 2343 001c 191C     		mov	r1, r3
 2344 001e FFF7FEFF 		bl	ETH_SetSocketCommand
 871:.\Generated_Source\PSoC4/ETH.c **** 	while ( ( ETH_GetSocketCommand(socket) ) && (timeout < 125))
 2345              		.loc 1 871 0
 2346 0022 05E0     		b	.L95
 2347              	.L97:
 872:.\Generated_Source\PSoC4/ETH.c **** 	{
 873:.\Generated_Source\PSoC4/ETH.c **** 		++timeout;
 2348              		.loc 1 873 0
 2349 0024 FB68     		ldr	r3, [r7, #12]
 2350 0026 0133     		add	r3, r3, #1
 2351 0028 FB60     		str	r3, [r7, #12]
 874:.\Generated_Source\PSoC4/ETH.c **** 		CyDelay(1);
 2352              		.loc 1 874 0
 2353 002a 0120     		mov	r0, #1
 2354 002c FFF7FEFF 		bl	CyDelay
 2355              	.L95:
 871:.\Generated_Source\PSoC4/ETH.c **** 	while ( ( ETH_GetSocketCommand(socket) ) && (timeout < 125))
 2356              		.loc 1 871 0 discriminator 1
 2357 0030 FB1D     		add	r3, r7, #7
 2358 0032 1B78     		ldrb	r3, [r3]
 2359 0034 181C     		mov	r0, r3
 2360 0036 FFF7FEFF 		bl	ETH_GetSocketCommand
 2361 003a 031C     		mov	r3, r0
 2362 003c 002B     		cmp	r3, #0
 2363 003e 02D0     		beq	.L96
 871:.\Generated_Source\PSoC4/ETH.c **** 	while ( ( ETH_GetSocketCommand(socket) ) && (timeout < 125))
 2364              		.loc 1 871 0 is_stmt 0 discriminator 2
 2365 0040 FB68     		ldr	r3, [r7, #12]
 2366 0042 7C2B     		cmp	r3, #124
 2367 0044 EED9     		bls	.L97
 2368              	.L96:
 875:.\Generated_Source\PSoC4/ETH.c **** 	}
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 58


 876:.\Generated_Source\PSoC4/ETH.c **** 	return( timeout );
 2369              		.loc 1 876 0 is_stmt 1
 2370 0046 FB68     		ldr	r3, [r7, #12]
 877:.\Generated_Source\PSoC4/ETH.c **** }
 2371              		.loc 1 877 0
 2372 0048 181C     		mov	r0, r3
 2373 004a BD46     		mov	sp, r7
 2374 004c 04B0     		add	sp, sp, #16
 2375              		@ sp needed for prologue
 2376 004e 80BD     		pop	{r7, pc}
 2377              		.cfi_endproc
 2378              	.LFE39:
 2379              		.size	ETH_ExecuteSocketCommand, .-ETH_ExecuteSocketCommand
 2380              		.section	.text.ETH_GetTxFreeSize,"ax",%progbits
 2381              		.align	2
 2382              		.global	ETH_GetTxFreeSize
 2383              		.code	16
 2384              		.thumb_func
 2385              		.type	ETH_GetTxFreeSize, %function
 2386              	ETH_GetTxFreeSize:
 2387              	.LFB40:
 878:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 879:.\Generated_Source\PSoC4/ETH.c **** /**
 880:.\Generated_Source\PSoC4/ETH.c ****  * \brief Execute a safe read fo the Tx buffer free size register
 881:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the addressed socket to read the available tx buffer
 882:.\Generated_Source\PSoC4/ETH.c ****  * \returns the number of bytes available in the transmit buffer for the socket
 883:.\Generated_Source\PSoC4/ETH.c ****  */
 884:.\Generated_Source\PSoC4/ETH.c **** uint16 ETH_GetTxFreeSize( uint8 socket )
 885:.\Generated_Source\PSoC4/ETH.c **** {
 2388              		.loc 1 885 0
 2389              		.cfi_startproc
 2390 0000 90B5     		push	{r4, r7, lr}
 2391              	.LCFI118:
 2392              		.cfi_def_cfa_offset 12
 2393              		.cfi_offset 4, -12
 2394              		.cfi_offset 7, -8
 2395              		.cfi_offset 14, -4
 2396 0002 85B0     		sub	sp, sp, #20
 2397              	.LCFI119:
 2398              		.cfi_def_cfa_offset 32
 2399 0004 00AF     		add	r7, sp, #0
 2400              	.LCFI120:
 2401              		.cfi_def_cfa_register 7
 2402 0006 021C     		mov	r2, r0
 2403 0008 FB1D     		add	r3, r7, #7
 2404 000a 1A70     		strb	r2, [r3]
 886:.\Generated_Source\PSoC4/ETH.c **** 	uint16 first, second;
 887:.\Generated_Source\PSoC4/ETH.c **** 	
 888:.\Generated_Source\PSoC4/ETH.c **** 	first = 0;
 2405              		.loc 1 888 0
 2406 000c 3B1C     		mov	r3, r7
 2407 000e 0C33     		add	r3, r3, #12
 2408 0010 0022     		mov	r2, #0
 2409 0012 1A80     		strh	r2, [r3]
 889:.\Generated_Source\PSoC4/ETH.c **** 	second = 0;
 2410              		.loc 1 889 0
 2411 0014 3B1C     		mov	r3, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 59


 2412 0016 0E33     		add	r3, r3, #14
 2413 0018 0022     		mov	r2, #0
 2414 001a 1A80     		strh	r2, [r3]
 2415              	.L101:
 890:.\Generated_Source\PSoC4/ETH.c **** 	do {
 891:.\Generated_Source\PSoC4/ETH.c **** 		first = ETH_GetSocketTxFree( socket );
 2416              		.loc 1 891 0
 2417 001c 3C1C     		mov	r4, r7
 2418 001e 0C34     		add	r4, r4, #12
 2419 0020 FB1D     		add	r3, r7, #7
 2420 0022 1B78     		ldrb	r3, [r3]
 2421 0024 181C     		mov	r0, r3
 2422 0026 FFF7FEFF 		bl	ETH_GetSocketTxFree
 2423 002a 031C     		mov	r3, r0
 2424 002c 2380     		strh	r3, [r4]
 892:.\Generated_Source\PSoC4/ETH.c **** 		if (first != 0) {
 2425              		.loc 1 892 0
 2426 002e 3B1C     		mov	r3, r7
 2427 0030 0C33     		add	r3, r3, #12
 2428 0032 1B88     		ldrh	r3, [r3]
 2429 0034 002B     		cmp	r3, #0
 2430 0036 08D0     		beq	.L100
 893:.\Generated_Source\PSoC4/ETH.c **** 			second = ETH_GetSocketTxFree( socket );
 2431              		.loc 1 893 0
 2432 0038 3C1C     		mov	r4, r7
 2433 003a 0E34     		add	r4, r4, #14
 2434 003c FB1D     		add	r3, r7, #7
 2435 003e 1B78     		ldrb	r3, [r3]
 2436 0040 181C     		mov	r0, r3
 2437 0042 FFF7FEFF 		bl	ETH_GetSocketTxFree
 2438 0046 031C     		mov	r3, r0
 2439 0048 2380     		strh	r3, [r4]
 2440              	.L100:
 894:.\Generated_Source\PSoC4/ETH.c **** 		}
 895:.\Generated_Source\PSoC4/ETH.c **** 	}
 896:.\Generated_Source\PSoC4/ETH.c **** 	while (first != second );
 2441              		.loc 1 896 0
 2442 004a 3A1C     		mov	r2, r7
 2443 004c 0C32     		add	r2, r2, #12
 2444 004e 3B1C     		mov	r3, r7
 2445 0050 0E33     		add	r3, r3, #14
 2446 0052 1288     		ldrh	r2, [r2]
 2447 0054 1B88     		ldrh	r3, [r3]
 2448 0056 9A42     		cmp	r2, r3
 2449 0058 E0D1     		bne	.L101
 897:.\Generated_Source\PSoC4/ETH.c **** 	
 898:.\Generated_Source\PSoC4/ETH.c **** 	return( second );
 2450              		.loc 1 898 0
 2451 005a 3B1C     		mov	r3, r7
 2452 005c 0E33     		add	r3, r3, #14
 2453 005e 1B88     		ldrh	r3, [r3]
 899:.\Generated_Source\PSoC4/ETH.c **** }
 2454              		.loc 1 899 0
 2455 0060 181C     		mov	r0, r3
 2456 0062 BD46     		mov	sp, r7
 2457 0064 05B0     		add	sp, sp, #20
 2458              		@ sp needed for prologue
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 60


 2459 0066 90BD     		pop	{r4, r7, pc}
 2460              		.cfi_endproc
 2461              	.LFE40:
 2462              		.size	ETH_GetTxFreeSize, .-ETH_GetTxFreeSize
 2463              		.section	.text.ETH_GetRxSize,"ax",%progbits
 2464              		.align	2
 2465              		.global	ETH_GetRxSize
 2466              		.code	16
 2467              		.thumb_func
 2468              		.type	ETH_GetRxSize, %function
 2469              	ETH_GetRxSize:
 2470              	.LFB41:
 900:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 901:.\Generated_Source\PSoC4/ETH.c **** /**
 902:.\Generated_Source\PSoC4/ETH.c ****  * \brief Execute a safe read of the received data size
 903:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the addressed socketfrom which the data will be read
 904:.\Generated_Source\PSoC4/ETH.c ****  * \returns the number of bytes waiting in the recieve buffer of the socket
 905:.\Generated_Source\PSoC4/ETH.c ****  */
 906:.\Generated_Source\PSoC4/ETH.c **** uint16 ETH_GetRxSize( uint8 socket )
 907:.\Generated_Source\PSoC4/ETH.c **** {
 2471              		.loc 1 907 0
 2472              		.cfi_startproc
 2473 0000 90B5     		push	{r4, r7, lr}
 2474              	.LCFI121:
 2475              		.cfi_def_cfa_offset 12
 2476              		.cfi_offset 4, -12
 2477              		.cfi_offset 7, -8
 2478              		.cfi_offset 14, -4
 2479 0002 85B0     		sub	sp, sp, #20
 2480              	.LCFI122:
 2481              		.cfi_def_cfa_offset 32
 2482 0004 00AF     		add	r7, sp, #0
 2483              	.LCFI123:
 2484              		.cfi_def_cfa_register 7
 2485 0006 021C     		mov	r2, r0
 2486 0008 FB1D     		add	r3, r7, #7
 2487 000a 1A70     		strb	r2, [r3]
 908:.\Generated_Source\PSoC4/ETH.c **** 	uint16 first, second;
 909:.\Generated_Source\PSoC4/ETH.c **** 	
 910:.\Generated_Source\PSoC4/ETH.c **** 	first = 0;
 2488              		.loc 1 910 0
 2489 000c 3B1C     		mov	r3, r7
 2490 000e 0C33     		add	r3, r3, #12
 2491 0010 0022     		mov	r2, #0
 2492 0012 1A80     		strh	r2, [r3]
 911:.\Generated_Source\PSoC4/ETH.c **** 	second = 0;
 2493              		.loc 1 911 0
 2494 0014 3B1C     		mov	r3, r7
 2495 0016 0E33     		add	r3, r3, #14
 2496 0018 0022     		mov	r2, #0
 2497 001a 1A80     		strh	r2, [r3]
 2498              	.L105:
 912:.\Generated_Source\PSoC4/ETH.c **** 	do {
 913:.\Generated_Source\PSoC4/ETH.c **** 		first = ETH_GetSocketRxSize( socket );
 2499              		.loc 1 913 0
 2500 001c 3C1C     		mov	r4, r7
 2501 001e 0C34     		add	r4, r4, #12
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 61


 2502 0020 FB1D     		add	r3, r7, #7
 2503 0022 1B78     		ldrb	r3, [r3]
 2504 0024 181C     		mov	r0, r3
 2505 0026 FFF7FEFF 		bl	ETH_GetSocketRxSize
 2506 002a 031C     		mov	r3, r0
 2507 002c 2380     		strh	r3, [r4]
 914:.\Generated_Source\PSoC4/ETH.c **** 		if (first != 0) {
 2508              		.loc 1 914 0
 2509 002e 3B1C     		mov	r3, r7
 2510 0030 0C33     		add	r3, r3, #12
 2511 0032 1B88     		ldrh	r3, [r3]
 2512 0034 002B     		cmp	r3, #0
 2513 0036 08D0     		beq	.L104
 915:.\Generated_Source\PSoC4/ETH.c **** 			second = ETH_GetSocketRxSize( socket );
 2514              		.loc 1 915 0
 2515 0038 3C1C     		mov	r4, r7
 2516 003a 0E34     		add	r4, r4, #14
 2517 003c FB1D     		add	r3, r7, #7
 2518 003e 1B78     		ldrb	r3, [r3]
 2519 0040 181C     		mov	r0, r3
 2520 0042 FFF7FEFF 		bl	ETH_GetSocketRxSize
 2521 0046 031C     		mov	r3, r0
 2522 0048 2380     		strh	r3, [r4]
 2523              	.L104:
 916:.\Generated_Source\PSoC4/ETH.c **** 		}
 917:.\Generated_Source\PSoC4/ETH.c **** 	}
 918:.\Generated_Source\PSoC4/ETH.c **** 	while (first != second );
 2524              		.loc 1 918 0
 2525 004a 3A1C     		mov	r2, r7
 2526 004c 0C32     		add	r2, r2, #12
 2527 004e 3B1C     		mov	r3, r7
 2528 0050 0E33     		add	r3, r3, #14
 2529 0052 1288     		ldrh	r2, [r2]
 2530 0054 1B88     		ldrh	r3, [r3]
 2531 0056 9A42     		cmp	r2, r3
 2532 0058 E0D1     		bne	.L105
 919:.\Generated_Source\PSoC4/ETH.c **** 	
 920:.\Generated_Source\PSoC4/ETH.c **** 	return second;
 2533              		.loc 1 920 0
 2534 005a 3B1C     		mov	r3, r7
 2535 005c 0E33     		add	r3, r3, #14
 2536 005e 1B88     		ldrh	r3, [r3]
 921:.\Generated_Source\PSoC4/ETH.c **** }
 2537              		.loc 1 921 0
 2538 0060 181C     		mov	r0, r3
 2539 0062 BD46     		mov	sp, r7
 2540 0064 05B0     		add	sp, sp, #20
 2541              		@ sp needed for prologue
 2542 0066 90BD     		pop	{r4, r7, pc}
 2543              		.cfi_endproc
 2544              	.LFE41:
 2545              		.size	ETH_GetRxSize, .-ETH_GetRxSize
 2546              		.section	.text.ETH_ProcessTxData,"ax",%progbits
 2547              		.align	2
 2548              		.global	ETH_ProcessTxData
 2549              		.code	16
 2550              		.thumb_func
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 62


 2551              		.type	ETH_ProcessTxData, %function
 2552              	ETH_ProcessTxData:
 2553              	.LFB42:
 922:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 923:.\Generated_Source\PSoC4/ETH.c **** 
 924:.\Generated_Source\PSoC4/ETH.c **** // END Socket Register access section
 925:.\Generated_Source\PSoC4/ETH.c **** #endif
 926:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
 927:.\Generated_Source\PSoC4/ETH.c **** /* W5x00 Data Buffer Memory access primitives */
 928:.\Generated_Source\PSoC4/ETH.c **** #if (1)
 929:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 930:.\Generated_Source\PSoC4/ETH.c **** /**
 931:.\Generated_Source\PSoC4/ETH.c ****  * \brief Transfer data from a local data buffer to the chip Tx fifo
 932:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket buffer to which the data will be written
 933:.\Generated_Source\PSoC4/ETH.c ****  * \param offset The offest in to the socket buffer
 934:.\Generated_Source\PSoC4/ETH.c ****  * \param *buffer pointer to the local buffer to copy to the transmit fifo
 935:.\Generated_Source\PSoC4/ETH.c ****  * \param length the number of bytes to be copied to the transmit fifo
 936:.\Generated_Source\PSoC4/ETH.c ****  */
 937:.\Generated_Source\PSoC4/ETH.c **** void ETH_ProcessTxData(uint8 socket, uint16 offset, uint8* buffer, uint16 length)
 938:.\Generated_Source\PSoC4/ETH.c **** {
 2554              		.loc 1 938 0
 2555              		.cfi_startproc
 2556 0000 80B5     		push	{r7, lr}
 2557              	.LCFI124:
 2558              		.cfi_def_cfa_offset 8
 2559              		.cfi_offset 7, -8
 2560              		.cfi_offset 14, -4
 2561 0002 86B0     		sub	sp, sp, #24
 2562              	.LCFI125:
 2563              		.cfi_def_cfa_offset 32
 2564 0004 00AF     		add	r7, sp, #0
 2565              	.LCFI126:
 2566              		.cfi_def_cfa_register 7
 2567 0006 BA60     		str	r2, [r7, #8]
 2568 0008 1A1C     		mov	r2, r3
 2569 000a 3B1C     		mov	r3, r7
 2570 000c 0F33     		add	r3, r3, #15
 2571 000e 1870     		strb	r0, [r3]
 2572 0010 3B1C     		mov	r3, r7
 2573 0012 0C33     		add	r3, r3, #12
 2574 0014 1980     		strh	r1, [r3]
 2575 0016 BB1D     		add	r3, r7, #6
 2576 0018 1A80     		strh	r2, [r3]
 939:.\Generated_Source\PSoC4/ETH.c **** 	uint16 addr;
 940:.\Generated_Source\PSoC4/ETH.c **** 	uint16 base;
 941:.\Generated_Source\PSoC4/ETH.c **** 	uint16 PointerOffset;
 942:.\Generated_Source\PSoC4/ETH.c **** 	uint16 size;
 943:.\Generated_Source\PSoC4/ETH.c **** 	
 944:.\Generated_Source\PSoC4/ETH.c **** 	/*
 945:.\Generated_Source\PSoC4/ETH.c **** 	 * Read the offset pointer, and calculate the base address for the start of write
 946:.\Generated_Source\PSoC4/ETH.c **** 	 * in to the chip buffers.  Written data will be offset by the offset byte count
 947:.\Generated_Source\PSoC4/ETH.c **** 	 * specified in the parameters.
 948:.\Generated_Source\PSoC4/ETH.c **** 	 */
 949:.\Generated_Source\PSoC4/ETH.c **** 	base = ETH_GetSocketTxWritePtr(socket) + offset;
 2577              		.loc 1 949 0
 2578 001a 3B1C     		mov	r3, r7
 2579 001c 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 63


 2580 001e 1B78     		ldrb	r3, [r3]
 2581 0020 181C     		mov	r0, r3
 2582 0022 FFF7FEFF 		bl	ETH_GetSocketTxWritePtr
 2583 0026 031C     		mov	r3, r0
 2584 0028 191C     		mov	r1, r3
 2585 002a 3B1C     		mov	r3, r7
 2586 002c 1633     		add	r3, r3, #22
 2587 002e 3A1C     		mov	r2, r7
 2588 0030 0C32     		add	r2, r2, #12
 2589 0032 1288     		ldrh	r2, [r2]
 2590 0034 8A18     		add	r2, r1, r2
 2591 0036 1A80     		strh	r2, [r3]
 950:.\Generated_Source\PSoC4/ETH.c **** 	PointerOffset = (base & 0x07FF);
 2592              		.loc 1 950 0
 2593 0038 3B1C     		mov	r3, r7
 2594 003a 1433     		add	r3, r3, #20
 2595 003c 3A1C     		mov	r2, r7
 2596 003e 1632     		add	r2, r2, #22
 2597 0040 1288     		ldrh	r2, [r2]
 2598 0042 5205     		lsl	r2, r2, #21
 2599 0044 520D     		lsr	r2, r2, #21
 2600 0046 1A80     		strh	r2, [r3]
 951:.\Generated_Source\PSoC4/ETH.c **** 	addr = PointerOffset + ETH_SOCKET_TX_BASE[socket];
 2601              		.loc 1 951 0
 2602 0048 3B1C     		mov	r3, r7
 2603 004a 0F33     		add	r3, r3, #15
 2604 004c 1A78     		ldrb	r2, [r3]
 2605 004e 2F4B     		ldr	r3, .L110
 2606 0050 5200     		lsl	r2, r2, #1
 2607 0052 D15A     		ldrh	r1, [r2, r3]
 2608 0054 3B1C     		mov	r3, r7
 2609 0056 1233     		add	r3, r3, #18
 2610 0058 3A1C     		mov	r2, r7
 2611 005a 1432     		add	r2, r2, #20
 2612 005c 1288     		ldrh	r2, [r2]
 2613 005e 8A18     		add	r2, r1, r2
 2614 0060 1A80     		strh	r2, [r3]
 952:.\Generated_Source\PSoC4/ETH.c **** 	/* calculate the number of bytes from the pointer to the end of the buffer */
 953:.\Generated_Source\PSoC4/ETH.c **** 	size = 0x0800 - PointerOffset;
 2615              		.loc 1 953 0
 2616 0062 3B1C     		mov	r3, r7
 2617 0064 1033     		add	r3, r3, #16
 2618 0066 3A1C     		mov	r2, r7
 2619 0068 1432     		add	r2, r2, #20
 2620 006a 1288     		ldrh	r2, [r2]
 2621 006c 8021     		mov	r1, #128
 2622 006e 0901     		lsl	r1, r1, #4
 2623 0070 8A1A     		sub	r2, r1, r2
 2624 0072 1A80     		strh	r2, [r3]
 954:.\Generated_Source\PSoC4/ETH.c **** 	
 955:.\Generated_Source\PSoC4/ETH.c **** 	/*
 956:.\Generated_Source\PSoC4/ETH.c **** 	 * is there enough space to write the complete packet
 957:.\Generated_Source\PSoC4/ETH.c **** 	 * or, shoudl the data be split in to two writes.
 958:.\Generated_Source\PSoC4/ETH.c **** 	 */
 959:.\Generated_Source\PSoC4/ETH.c **** 	if ( length > size) {
 2625              		.loc 1 959 0
 2626 0074 BA1D     		add	r2, r7, #6
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 64


 2627 0076 3B1C     		mov	r3, r7
 2628 0078 1033     		add	r3, r3, #16
 2629 007a 1288     		ldrh	r2, [r2]
 2630 007c 1B88     		ldrh	r3, [r3]
 2631 007e 9A42     		cmp	r2, r3
 2632 0080 23D9     		bls	.L108
 960:.\Generated_Source\PSoC4/ETH.c **** 		/*
 961:.\Generated_Source\PSoC4/ETH.c **** 		 * There is more data to send than will fit from the pointer to the end
 962:.\Generated_Source\PSoC4/ETH.c **** 		 * of the memory, so we will write the data in two chunks.  First, write the
 963:.\Generated_Source\PSoC4/ETH.c **** 		 * data from the pointer to the end of the buffer, then write the portion
 964:.\Generated_Source\PSoC4/ETH.c **** 		 * remaining to the start (base ptr) of the socket buffer
 965:.\Generated_Source\PSoC4/ETH.c **** 		 */
 966:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipWrite(addr, buffer, size);
 2633              		.loc 1 966 0
 2634 0082 3B1C     		mov	r3, r7
 2635 0084 1233     		add	r3, r3, #18
 2636 0086 1988     		ldrh	r1, [r3]
 2637 0088 BA68     		ldr	r2, [r7, #8]
 2638 008a 3B1C     		mov	r3, r7
 2639 008c 1033     		add	r3, r3, #16
 2640 008e 1B88     		ldrh	r3, [r3]
 2641 0090 081C     		mov	r0, r1
 2642 0092 111C     		mov	r1, r2
 2643 0094 1A1C     		mov	r2, r3
 2644 0096 FFF7FEFF 		bl	ETH_ChipWrite
 967:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipWrite(ETH_SOCKET_TX_BASE[socket], &buffer[size], length - size);
 2645              		.loc 1 967 0
 2646 009a 3B1C     		mov	r3, r7
 2647 009c 0F33     		add	r3, r3, #15
 2648 009e 1A78     		ldrb	r2, [r3]
 2649 00a0 1A4B     		ldr	r3, .L110
 2650 00a2 5200     		lsl	r2, r2, #1
 2651 00a4 D15A     		ldrh	r1, [r2, r3]
 2652 00a6 3B1C     		mov	r3, r7
 2653 00a8 1033     		add	r3, r3, #16
 2654 00aa 1B88     		ldrh	r3, [r3]
 2655 00ac BA68     		ldr	r2, [r7, #8]
 2656 00ae D218     		add	r2, r2, r3
 2657 00b0 B81D     		add	r0, r7, #6
 2658 00b2 3B1C     		mov	r3, r7
 2659 00b4 1033     		add	r3, r3, #16
 2660 00b6 0088     		ldrh	r0, [r0]
 2661 00b8 1B88     		ldrh	r3, [r3]
 2662 00ba C31A     		sub	r3, r0, r3
 2663 00bc 9BB2     		uxth	r3, r3
 2664 00be 081C     		mov	r0, r1
 2665 00c0 111C     		mov	r1, r2
 2666 00c2 1A1C     		mov	r2, r3
 2667 00c4 FFF7FEFF 		bl	ETH_ChipWrite
 2668 00c8 0AE0     		b	.L109
 2669              	.L108:
 968:.\Generated_Source\PSoC4/ETH.c **** 	}
 969:.\Generated_Source\PSoC4/ETH.c **** 	else {
 970:.\Generated_Source\PSoC4/ETH.c **** 		/* 
 971:.\Generated_Source\PSoC4/ETH.c **** 		 * there is enough available space from the write point to the end of buffer
 972:.\Generated_Source\PSoC4/ETH.c **** 		 * to hold the whole packe of information, so just write it to the memory
 973:.\Generated_Source\PSoC4/ETH.c **** 		 */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 65


 974:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipWrite(addr,buffer,length);
 2670              		.loc 1 974 0
 2671 00ca 3B1C     		mov	r3, r7
 2672 00cc 1233     		add	r3, r3, #18
 2673 00ce 1988     		ldrh	r1, [r3]
 2674 00d0 BA68     		ldr	r2, [r7, #8]
 2675 00d2 BB1D     		add	r3, r7, #6
 2676 00d4 1B88     		ldrh	r3, [r3]
 2677 00d6 081C     		mov	r0, r1
 2678 00d8 111C     		mov	r1, r2
 2679 00da 1A1C     		mov	r2, r3
 2680 00dc FFF7FEFF 		bl	ETH_ChipWrite
 2681              	.L109:
 975:.\Generated_Source\PSoC4/ETH.c **** 	}
 976:.\Generated_Source\PSoC4/ETH.c **** 	/* move the write pointer */
 977:.\Generated_Source\PSoC4/ETH.c **** 	base += length;
 2682              		.loc 1 977 0
 2683 00e0 3B1C     		mov	r3, r7
 2684 00e2 1633     		add	r3, r3, #22
 2685 00e4 391C     		mov	r1, r7
 2686 00e6 1631     		add	r1, r1, #22
 2687 00e8 BA1D     		add	r2, r7, #6
 2688 00ea 0988     		ldrh	r1, [r1]
 2689 00ec 1288     		ldrh	r2, [r2]
 2690 00ee 8A18     		add	r2, r1, r2
 2691 00f0 1A80     		strh	r2, [r3]
 978:.\Generated_Source\PSoC4/ETH.c **** 	/* 
 979:.\Generated_Source\PSoC4/ETH.c **** 	 * Store the new write pointer so that the device knows that there is data waiting
 980:.\Generated_Source\PSoC4/ETH.c **** 	 * to be transmitted over the link.
 981:.\Generated_Source\PSoC4/ETH.c **** 	 */
 982:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSocketTxWritePtr(socket, base);
 2692              		.loc 1 982 0
 2693 00f2 3B1C     		mov	r3, r7
 2694 00f4 0F33     		add	r3, r3, #15
 2695 00f6 1A78     		ldrb	r2, [r3]
 2696 00f8 3B1C     		mov	r3, r7
 2697 00fa 1633     		add	r3, r3, #22
 2698 00fc 1B88     		ldrh	r3, [r3]
 2699 00fe 101C     		mov	r0, r2
 2700 0100 191C     		mov	r1, r3
 2701 0102 FFF7FEFF 		bl	ETH_SetSocketTxWritePtr
 983:.\Generated_Source\PSoC4/ETH.c **** }
 2702              		.loc 1 983 0
 2703 0106 BD46     		mov	sp, r7
 2704 0108 06B0     		add	sp, sp, #24
 2705              		@ sp needed for prologue
 2706 010a 80BD     		pop	{r7, pc}
 2707              	.L111:
 2708              		.align	2
 2709              	.L110:
 2710 010c 00000000 		.word	ETH_SOCKET_TX_BASE
 2711              		.cfi_endproc
 2712              	.LFE42:
 2713              		.size	ETH_ProcessTxData, .-ETH_ProcessTxData
 2714              		.section	.text.ETH_ProcessRxData,"ax",%progbits
 2715              		.align	2
 2716              		.global	ETH_ProcessRxData
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 66


 2717              		.code	16
 2718              		.thumb_func
 2719              		.type	ETH_ProcessRxData, %function
 2720              	ETH_ProcessRxData:
 2721              	.LFB43:
 984:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
 985:.\Generated_Source\PSoC4/ETH.c **** /**
 986:.\Generated_Source\PSoC4/ETH.c ****  * \brief Transfer data from the chip receive buffer to a local buffer
 987:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket buffer from which the data will be read
 988:.\Generated_Source\PSoC4/ETH.c ****  * \param offset The offest in to the socket buffer
 989:.\Generated_Source\PSoC4/ETH.c ****  * \param *buffer pointer to the local buffer to hold the receive fifo data
 990:.\Generated_Source\PSoC4/ETH.c ****  * \param length the max number of bytes to be copied to the local buffer
 991:.\Generated_Source\PSoC4/ETH.c ****  * \param flags Flag settings to control read fifo options (lookahead)
 992:.\Generated_Source\PSoC4/ETH.c ****  */
 993:.\Generated_Source\PSoC4/ETH.c **** void ETH_ProcessRxData(uint8 socket, uint16 offset, uint8* buffer, uint16 length, uint8 flags)
 994:.\Generated_Source\PSoC4/ETH.c **** {
 2722              		.loc 1 994 0
 2723              		.cfi_startproc
 2724 0000 80B5     		push	{r7, lr}
 2725              	.LCFI127:
 2726              		.cfi_def_cfa_offset 8
 2727              		.cfi_offset 7, -8
 2728              		.cfi_offset 14, -4
 2729 0002 86B0     		sub	sp, sp, #24
 2730              	.LCFI128:
 2731              		.cfi_def_cfa_offset 32
 2732 0004 00AF     		add	r7, sp, #0
 2733              	.LCFI129:
 2734              		.cfi_def_cfa_register 7
 2735 0006 BA60     		str	r2, [r7, #8]
 2736 0008 1A1C     		mov	r2, r3
 2737 000a 3B1C     		mov	r3, r7
 2738 000c 0F33     		add	r3, r3, #15
 2739 000e 1870     		strb	r0, [r3]
 2740 0010 3B1C     		mov	r3, r7
 2741 0012 0C33     		add	r3, r3, #12
 2742 0014 1980     		strh	r1, [r3]
 2743 0016 BB1D     		add	r3, r7, #6
 2744 0018 1A80     		strh	r2, [r3]
 995:.\Generated_Source\PSoC4/ETH.c **** 	uint16 addr;
 996:.\Generated_Source\PSoC4/ETH.c **** 	uint16 base;
 997:.\Generated_Source\PSoC4/ETH.c **** 	uint16 PointerOffset;
 998:.\Generated_Source\PSoC4/ETH.c **** 	uint16 size;
 999:.\Generated_Source\PSoC4/ETH.c **** 	
1000:.\Generated_Source\PSoC4/ETH.c **** 	/*
1001:.\Generated_Source\PSoC4/ETH.c **** 	 * Read the offset pointer, and calculate the base address for the start of read
1002:.\Generated_Source\PSoC4/ETH.c **** 	 * in to the chip buffers.  The data read will be offset by the offset byte count
1003:.\Generated_Source\PSoC4/ETH.c **** 	 * specified in the parameters.
1004:.\Generated_Source\PSoC4/ETH.c **** 	 */
1005:.\Generated_Source\PSoC4/ETH.c **** 	base = ETH_GetSocketRxReadPtr(socket) + offset;
 2745              		.loc 1 1005 0
 2746 001a 3B1C     		mov	r3, r7
 2747 001c 0F33     		add	r3, r3, #15
 2748 001e 1B78     		ldrb	r3, [r3]
 2749 0020 181C     		mov	r0, r3
 2750 0022 FFF7FEFF 		bl	ETH_GetSocketRxReadPtr
 2751 0026 031C     		mov	r3, r0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 67


 2752 0028 191C     		mov	r1, r3
 2753 002a 3B1C     		mov	r3, r7
 2754 002c 1633     		add	r3, r3, #22
 2755 002e 3A1C     		mov	r2, r7
 2756 0030 0C32     		add	r2, r2, #12
 2757 0032 1288     		ldrh	r2, [r2]
 2758 0034 8A18     		add	r2, r1, r2
 2759 0036 1A80     		strh	r2, [r3]
1006:.\Generated_Source\PSoC4/ETH.c **** 	PointerOffset = (base & 0x07FF);
 2760              		.loc 1 1006 0
 2761 0038 3B1C     		mov	r3, r7
 2762 003a 1433     		add	r3, r3, #20
 2763 003c 3A1C     		mov	r2, r7
 2764 003e 1632     		add	r2, r2, #22
 2765 0040 1288     		ldrh	r2, [r2]
 2766 0042 5205     		lsl	r2, r2, #21
 2767 0044 520D     		lsr	r2, r2, #21
 2768 0046 1A80     		strh	r2, [r3]
1007:.\Generated_Source\PSoC4/ETH.c **** 	addr = PointerOffset + ETH_SOCKET_RX_BASE[socket];
 2769              		.loc 1 1007 0
 2770 0048 3B1C     		mov	r3, r7
 2771 004a 0F33     		add	r3, r3, #15
 2772 004c 1A78     		ldrb	r2, [r3]
 2773 004e 324B     		ldr	r3, .L116
 2774 0050 5200     		lsl	r2, r2, #1
 2775 0052 D15A     		ldrh	r1, [r2, r3]
 2776 0054 3B1C     		mov	r3, r7
 2777 0056 1233     		add	r3, r3, #18
 2778 0058 3A1C     		mov	r2, r7
 2779 005a 1432     		add	r2, r2, #20
 2780 005c 1288     		ldrh	r2, [r2]
 2781 005e 8A18     		add	r2, r1, r2
 2782 0060 1A80     		strh	r2, [r3]
1008:.\Generated_Source\PSoC4/ETH.c **** 	/* calculate the number of bytes from the pointer to the end of the buffer */
1009:.\Generated_Source\PSoC4/ETH.c **** 	size = 0x0800 - PointerOffset;
 2783              		.loc 1 1009 0
 2784 0062 3B1C     		mov	r3, r7
 2785 0064 1033     		add	r3, r3, #16
 2786 0066 3A1C     		mov	r2, r7
 2787 0068 1432     		add	r2, r2, #20
 2788 006a 1288     		ldrh	r2, [r2]
 2789 006c 8021     		mov	r1, #128
 2790 006e 0901     		lsl	r1, r1, #4
 2791 0070 8A1A     		sub	r2, r1, r2
 2792 0072 1A80     		strh	r2, [r3]
1010:.\Generated_Source\PSoC4/ETH.c **** 	/*
1011:.\Generated_Source\PSoC4/ETH.c **** 	 * is there enough space to read the complete packet
1012:.\Generated_Source\PSoC4/ETH.c **** 	 * or, should the data be split in to two reads.
1013:.\Generated_Source\PSoC4/ETH.c **** 	 */
1014:.\Generated_Source\PSoC4/ETH.c **** 	if ( length > size) {
 2793              		.loc 1 1014 0
 2794 0074 BA1D     		add	r2, r7, #6
 2795 0076 3B1C     		mov	r3, r7
 2796 0078 1033     		add	r3, r3, #16
 2797 007a 1288     		ldrh	r2, [r2]
 2798 007c 1B88     		ldrh	r3, [r3]
 2799 007e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 68


 2800 0080 23D9     		bls	.L113
1015:.\Generated_Source\PSoC4/ETH.c **** 		/*
1016:.\Generated_Source\PSoC4/ETH.c **** 		 * There is more data to send than will fit from the pointer to the end
1017:.\Generated_Source\PSoC4/ETH.c **** 		 * of the memory, so we will write the data in two chunks.  First, write the
1018:.\Generated_Source\PSoC4/ETH.c **** 		 * data from the pointer to the end of the buffer, then write the portion
1019:.\Generated_Source\PSoC4/ETH.c **** 		 * remaining to the start (base ptr) of the socket buffer
1020:.\Generated_Source\PSoC4/ETH.c **** 		 */
1021:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipRead(addr, buffer, size);
 2801              		.loc 1 1021 0
 2802 0082 3B1C     		mov	r3, r7
 2803 0084 1233     		add	r3, r3, #18
 2804 0086 1988     		ldrh	r1, [r3]
 2805 0088 BA68     		ldr	r2, [r7, #8]
 2806 008a 3B1C     		mov	r3, r7
 2807 008c 1033     		add	r3, r3, #16
 2808 008e 1B88     		ldrh	r3, [r3]
 2809 0090 081C     		mov	r0, r1
 2810 0092 111C     		mov	r1, r2
 2811 0094 1A1C     		mov	r2, r3
 2812 0096 FFF7FEFF 		bl	ETH_ChipRead
1022:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipRead(ETH_SOCKET_RX_BASE[socket], &buffer[size], length - size);
 2813              		.loc 1 1022 0
 2814 009a 3B1C     		mov	r3, r7
 2815 009c 0F33     		add	r3, r3, #15
 2816 009e 1A78     		ldrb	r2, [r3]
 2817 00a0 1D4B     		ldr	r3, .L116
 2818 00a2 5200     		lsl	r2, r2, #1
 2819 00a4 D15A     		ldrh	r1, [r2, r3]
 2820 00a6 3B1C     		mov	r3, r7
 2821 00a8 1033     		add	r3, r3, #16
 2822 00aa 1B88     		ldrh	r3, [r3]
 2823 00ac BA68     		ldr	r2, [r7, #8]
 2824 00ae D218     		add	r2, r2, r3
 2825 00b0 B81D     		add	r0, r7, #6
 2826 00b2 3B1C     		mov	r3, r7
 2827 00b4 1033     		add	r3, r3, #16
 2828 00b6 0088     		ldrh	r0, [r0]
 2829 00b8 1B88     		ldrh	r3, [r3]
 2830 00ba C31A     		sub	r3, r0, r3
 2831 00bc 9BB2     		uxth	r3, r3
 2832 00be 081C     		mov	r0, r1
 2833 00c0 111C     		mov	r1, r2
 2834 00c2 1A1C     		mov	r2, r3
 2835 00c4 FFF7FEFF 		bl	ETH_ChipRead
 2836 00c8 0AE0     		b	.L114
 2837              	.L113:
1023:.\Generated_Source\PSoC4/ETH.c **** 	}
1024:.\Generated_Source\PSoC4/ETH.c **** 	else {
1025:.\Generated_Source\PSoC4/ETH.c **** 		/* 
1026:.\Generated_Source\PSoC4/ETH.c **** 		 * there is enough available space from the write point to the end of buffer
1027:.\Generated_Source\PSoC4/ETH.c **** 		 * to hold the whole packe of information, so just write it to the memory
1028:.\Generated_Source\PSoC4/ETH.c **** 		 */
1029:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ChipRead(addr,buffer,length);
 2838              		.loc 1 1029 0
 2839 00ca 3B1C     		mov	r3, r7
 2840 00cc 1233     		add	r3, r3, #18
 2841 00ce 1988     		ldrh	r1, [r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 69


 2842 00d0 BA68     		ldr	r2, [r7, #8]
 2843 00d2 BB1D     		add	r3, r7, #6
 2844 00d4 1B88     		ldrh	r3, [r3]
 2845 00d6 081C     		mov	r0, r1
 2846 00d8 111C     		mov	r1, r2
 2847 00da 1A1C     		mov	r2, r3
 2848 00dc FFF7FEFF 		bl	ETH_ChipRead
 2849              	.L114:
1030:.\Generated_Source\PSoC4/ETH.c **** 	}
1031:.\Generated_Source\PSoC4/ETH.c **** 	if ( (flags & 0x01) == 0 ) { /* V1.1: Added ==0 condition to lookahead flag check */
 2850              		.loc 1 1031 0
 2851 00e0 3B1C     		mov	r3, r7
 2852 00e2 2033     		add	r3, r3, #32
 2853 00e4 1A78     		ldrb	r2, [r3]
 2854 00e6 0123     		mov	r3, #1
 2855 00e8 1340     		and	r3, r2
 2856 00ea 12D1     		bne	.L112
1032:.\Generated_Source\PSoC4/ETH.c **** 		/* move the write pointer */
1033:.\Generated_Source\PSoC4/ETH.c **** 		base += length;
 2857              		.loc 1 1033 0
 2858 00ec 3B1C     		mov	r3, r7
 2859 00ee 1633     		add	r3, r3, #22
 2860 00f0 391C     		mov	r1, r7
 2861 00f2 1631     		add	r1, r1, #22
 2862 00f4 BA1D     		add	r2, r7, #6
 2863 00f6 0988     		ldrh	r1, [r1]
 2864 00f8 1288     		ldrh	r2, [r2]
 2865 00fa 8A18     		add	r2, r1, r2
 2866 00fc 1A80     		strh	r2, [r3]
1034:.\Generated_Source\PSoC4/ETH.c **** 		/* 
1035:.\Generated_Source\PSoC4/ETH.c **** 		 * Store the new write pointer so that the device knows that there is data waiting
1036:.\Generated_Source\PSoC4/ETH.c **** 		 * to be transmitted over the link.
1037:.\Generated_Source\PSoC4/ETH.c **** 		 */
1038:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketRxReadPtr(socket, base);
 2867              		.loc 1 1038 0
 2868 00fe 3B1C     		mov	r3, r7
 2869 0100 0F33     		add	r3, r3, #15
 2870 0102 1A78     		ldrb	r2, [r3]
 2871 0104 3B1C     		mov	r3, r7
 2872 0106 1633     		add	r3, r3, #22
 2873 0108 1B88     		ldrh	r3, [r3]
 2874 010a 101C     		mov	r0, r2
 2875 010c 191C     		mov	r1, r3
 2876 010e FFF7FEFF 		bl	ETH_SetSocketRxReadPtr
 2877              	.L112:
1039:.\Generated_Source\PSoC4/ETH.c **** 	}
1040:.\Generated_Source\PSoC4/ETH.c **** }
 2878              		.loc 1 1040 0
 2879 0112 BD46     		mov	sp, r7
 2880 0114 06B0     		add	sp, sp, #24
 2881              		@ sp needed for prologue
 2882 0116 80BD     		pop	{r7, pc}
 2883              	.L117:
 2884              		.align	2
 2885              	.L116:
 2886 0118 00000000 		.word	ETH_SOCKET_RX_BASE
 2887              		.cfi_endproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 70


 2888              	.LFE43:
 2889              		.size	ETH_ProcessRxData, .-ETH_ProcessRxData
 2890              		.section	.text.ETH_Init,"ax",%progbits
 2891              		.align	2
 2892              		.global	ETH_Init
 2893              		.code	16
 2894              		.thumb_func
 2895              		.type	ETH_Init, %function
 2896              	ETH_Init:
 2897              	.LFB44:
1041:.\Generated_Source\PSoC4/ETH.c **** #endif
1042:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
1043:.\Generated_Source\PSoC4/ETH.c **** /* Driver Initialization */
1044:.\Generated_Source\PSoC4/ETH.c **** #if (1)
1045:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1046:.\Generated_Source\PSoC4/ETH.c **** void
1047:.\Generated_Source\PSoC4/ETH.c **** ETH_Init(uint8* mac, uint32 ip, uint32 subnet, uint32 gateway)
1048:.\Generated_Source\PSoC4/ETH.c **** {
 2898              		.loc 1 1048 0
 2899              		.cfi_startproc
 2900 0000 80B5     		push	{r7, lr}
 2901              	.LCFI130:
 2902              		.cfi_def_cfa_offset 8
 2903              		.cfi_offset 7, -8
 2904              		.cfi_offset 14, -4
 2905 0002 86B0     		sub	sp, sp, #24
 2906              	.LCFI131:
 2907              		.cfi_def_cfa_offset 32
 2908 0004 00AF     		add	r7, sp, #0
 2909              	.LCFI132:
 2910              		.cfi_def_cfa_register 7
 2911 0006 F860     		str	r0, [r7, #12]
 2912 0008 B960     		str	r1, [r7, #8]
 2913 000a 7A60     		str	r2, [r7, #4]
 2914 000c 3B60     		str	r3, [r7]
1049:.\Generated_Source\PSoC4/ETH.c **** 	/*
1050:.\Generated_Source\PSoC4/ETH.c **** 	 * Initialize the device and the address configuration, then
1051:.\Generated_Source\PSoC4/ETH.c **** 	 * execute socket memory initialization for the local allocation
1052:.\Generated_Source\PSoC4/ETH.c **** 	 * table.
1053:.\Generated_Source\PSoC4/ETH.c **** 	 */
1054:.\Generated_Source\PSoC4/ETH.c **** 	int index;
1055:.\Generated_Source\PSoC4/ETH.c **** 	
1056:.\Generated_Source\PSoC4/ETH.c **** 	CyDelay( 250 ); /* Fixed Boot Delay or chip inintialization will fail */
 2915              		.loc 1 1056 0
 2916 000e FA20     		mov	r0, #250
 2917 0010 FFF7FEFF 		bl	CyDelay
1057:.\Generated_Source\PSoC4/ETH.c **** 	
1058:.\Generated_Source\PSoC4/ETH.c **** 	/* Reset the device */
1059:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetMode(0x80); /* Send Reset Command */
 2918              		.loc 1 1059 0
 2919 0014 8020     		mov	r0, #128
 2920 0016 FFF7FEFF 		bl	ETH_SetMode
1060:.\Generated_Source\PSoC4/ETH.c **** 	/* Wait for the chip initialization delay */
1061:.\Generated_Source\PSoC4/ETH.c **** 	CyDelay( 10 );
 2921              		.loc 1 1061 0
 2922 001a 0A20     		mov	r0, #10
 2923 001c FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 71


1062:.\Generated_Source\PSoC4/ETH.c **** 	
1063:.\Generated_Source\PSoC4/ETH.c **** 	/* Close all of the socket, and clear the memory to make them available. */
1064:.\Generated_Source\PSoC4/ETH.c **** 	for(index=0;index<ETH_MAX_SOCKET;++index) {
 2924              		.loc 1 1064 0
 2925 0020 0023     		mov	r3, #0
 2926 0022 7B61     		str	r3, [r7, #20]
 2927 0024 3BE0     		b	.L119
 2928              	.L120:
1065:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketClose( index );
 2929              		.loc 1 1065 0 discriminator 2
 2930 0026 7B69     		ldr	r3, [r7, #20]
 2931 0028 DBB2     		uxtb	r3, r3
 2932 002a 181C     		mov	r0, r3
 2933 002c FFF7FEFF 		bl	ETH_SocketClose
1066:.\Generated_Source\PSoC4/ETH.c **** 		/* Set the socket memory size */
1067:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketTxMemSize(index, ETH_MEM_2K); /* 2K each */
 2934              		.loc 1 1067 0 discriminator 2
 2935 0030 7B69     		ldr	r3, [r7, #20]
 2936 0032 DBB2     		uxtb	r3, r3
 2937 0034 181C     		mov	r0, r3
 2938 0036 0121     		mov	r1, #1
 2939 0038 FFF7FEFF 		bl	ETH_SetSocketTxMemSize
1068:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketRxMemSize(index, ETH_MEM_2K); /* 2K Each */
 2940              		.loc 1 1068 0 discriminator 2
 2941 003c 7B69     		ldr	r3, [r7, #20]
 2942 003e DBB2     		uxtb	r3, r3
 2943 0040 181C     		mov	r0, r3
 2944 0042 0121     		mov	r1, #1
 2945 0044 FFF7FEFF 		bl	ETH_SetSocketRxMemSize
1069:.\Generated_Source\PSoC4/ETH.c **** 		// initialize memory buffer pointers
1070:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketRxReadPtr( index, ETH_SOCKET_RX_BASE[index] );
 2946              		.loc 1 1070 0 discriminator 2
 2947 0048 7B69     		ldr	r3, [r7, #20]
 2948 004a DAB2     		uxtb	r2, r3
 2949 004c 234B     		ldr	r3, .L121
 2950 004e 7969     		ldr	r1, [r7, #20]
 2951 0050 4900     		lsl	r1, r1, #1
 2952 0052 CB5A     		ldrh	r3, [r1, r3]
 2953 0054 101C     		mov	r0, r2
 2954 0056 191C     		mov	r1, r3
 2955 0058 FFF7FEFF 		bl	ETH_SetSocketRxReadPtr
1071:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketRxWritePtr( index, ETH_SOCKET_RX_BASE[index] );
 2956              		.loc 1 1071 0 discriminator 2
 2957 005c 7B69     		ldr	r3, [r7, #20]
 2958 005e DAB2     		uxtb	r2, r3
 2959 0060 1E4B     		ldr	r3, .L121
 2960 0062 7969     		ldr	r1, [r7, #20]
 2961 0064 4900     		lsl	r1, r1, #1
 2962 0066 CB5A     		ldrh	r3, [r1, r3]
 2963 0068 101C     		mov	r0, r2
 2964 006a 191C     		mov	r1, r3
 2965 006c FFF7FEFF 		bl	ETH_SetSocketRxWritePtr
1072:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketTxReadPtr( index, ETH_SOCKET_TX_BASE[index] );
 2966              		.loc 1 1072 0 discriminator 2
 2967 0070 7B69     		ldr	r3, [r7, #20]
 2968 0072 DAB2     		uxtb	r2, r3
 2969 0074 1A4B     		ldr	r3, .L121+4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 72


 2970 0076 7969     		ldr	r1, [r7, #20]
 2971 0078 4900     		lsl	r1, r1, #1
 2972 007a CB5A     		ldrh	r3, [r1, r3]
 2973 007c 101C     		mov	r0, r2
 2974 007e 191C     		mov	r1, r3
 2975 0080 FFF7FEFF 		bl	ETH_SetSocketTxReadPtr
1073:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketTxWritePtr( index, ETH_SOCKET_TX_BASE[index] );
 2976              		.loc 1 1073 0 discriminator 2
 2977 0084 7B69     		ldr	r3, [r7, #20]
 2978 0086 DAB2     		uxtb	r2, r3
 2979 0088 154B     		ldr	r3, .L121+4
 2980 008a 7969     		ldr	r1, [r7, #20]
 2981 008c 4900     		lsl	r1, r1, #1
 2982 008e CB5A     		ldrh	r3, [r1, r3]
 2983 0090 101C     		mov	r0, r2
 2984 0092 191C     		mov	r1, r3
 2985 0094 FFF7FEFF 		bl	ETH_SetSocketTxWritePtr
1064:.\Generated_Source\PSoC4/ETH.c **** 	for(index=0;index<ETH_MAX_SOCKET;++index) {
 2986              		.loc 1 1064 0 discriminator 2
 2987 0098 7B69     		ldr	r3, [r7, #20]
 2988 009a 0133     		add	r3, r3, #1
 2989 009c 7B61     		str	r3, [r7, #20]
 2990              	.L119:
1064:.\Generated_Source\PSoC4/ETH.c **** 	for(index=0;index<ETH_MAX_SOCKET;++index) {
 2991              		.loc 1 1064 0 is_stmt 0 discriminator 1
 2992 009e 7B69     		ldr	r3, [r7, #20]
 2993 00a0 032B     		cmp	r3, #3
 2994 00a2 C0DD     		ble	.L120
1074:.\Generated_Source\PSoC4/ETH.c **** 	}
1075:.\Generated_Source\PSoC4/ETH.c **** 	/* Set device gateway address */
1076:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetGatewayAddress(gateway);
 2995              		.loc 1 1076 0 is_stmt 1
 2996 00a4 3B68     		ldr	r3, [r7]
 2997 00a6 181C     		mov	r0, r3
 2998 00a8 FFF7FEFF 		bl	ETH_SetGatewayAddress
1077:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSubnetMask( subnet );
 2999              		.loc 1 1077 0
 3000 00ac 7B68     		ldr	r3, [r7, #4]
 3001 00ae 181C     		mov	r0, r3
 3002 00b0 FFF7FEFF 		bl	ETH_SetSubnetMask
1078:.\Generated_Source\PSoC4/ETH.c **** 	/* Store the subnet mask for later use, for ERRATA fix */
1079:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SubnetMask = subnet;
 3003              		.loc 1 1079 0
 3004 00b4 0B4B     		ldr	r3, .L121+8
 3005 00b6 7A68     		ldr	r2, [r7, #4]
 3006 00b8 1A60     		str	r2, [r3]
1080:.\Generated_Source\PSoC4/ETH.c **** 	/* store the device mac */
1081:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSourceMAC( mac );
 3007              		.loc 1 1081 0
 3008 00ba FB68     		ldr	r3, [r7, #12]
 3009 00bc 181C     		mov	r0, r3
 3010 00be FFF7FEFF 		bl	ETH_SetSourceMAC
1082:.\Generated_Source\PSoC4/ETH.c **** 	/* store the IP address */
1083:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSourceIP( ip );
 3011              		.loc 1 1083 0
 3012 00c2 BB68     		ldr	r3, [r7, #8]
 3013 00c4 181C     		mov	r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 73


 3014 00c6 FFF7FEFF 		bl	ETH_SetSourceIP
1084:.\Generated_Source\PSoC4/ETH.c **** 	/* clear pending interrupts */
1085:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetIR(0xFF);
 3015              		.loc 1 1085 0
 3016 00ca FF20     		mov	r0, #255
 3017 00cc FFF7FEFF 		bl	ETH_SetIR
1086:.\Generated_Source\PSoC4/ETH.c **** 	/* clear the subnet mask register (W5100 Errata Fix) */
1087:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSubnetMask( 0 );
 3018              		.loc 1 1087 0
 3019 00d0 0020     		mov	r0, #0
 3020 00d2 FFF7FEFF 		bl	ETH_SetSubnetMask
1088:.\Generated_Source\PSoC4/ETH.c **** }
 3021              		.loc 1 1088 0
 3022 00d6 BD46     		mov	sp, r7
 3023 00d8 06B0     		add	sp, sp, #24
 3024              		@ sp needed for prologue
 3025 00da 80BD     		pop	{r7, pc}
 3026              	.L122:
 3027              		.align	2
 3028              	.L121:
 3029 00dc 00000000 		.word	ETH_SOCKET_RX_BASE
 3030 00e0 00000000 		.word	ETH_SOCKET_TX_BASE
 3031 00e4 00000000 		.word	ETH_SubnetMask
 3032              		.cfi_endproc
 3033              	.LFE44:
 3034              		.size	ETH_Init, .-ETH_Init
 3035              		.section	.rodata
 3036              		.align	2
 3037              	.LC6:
 3038 0010 30302D64 		.ascii	"00-de-ad-be-ef-00\000"
 3038      652D6164 
 3038      2D62652D 
 3038      65662D30 
 3038      3000
 3039 0022 0000     		.align	2
 3040              	.LC9:
 3041 0024 3139322E 		.ascii	"192.168.0.101\000"
 3041      3136382E 
 3041      302E3130 
 3041      3100
 3042 0032 0000     		.align	2
 3043              	.LC11:
 3044 0034 3235352E 		.ascii	"255.255.255.0\000"
 3044      3235352E 
 3044      3235352E 
 3044      3000
 3045 0042 0000     		.align	2
 3046              	.LC13:
 3047 0044 3139322E 		.ascii	"192.168.0.1\000"
 3047      3136382E 
 3047      302E3100 
 3048              		.section	.text.ETH_Start,"ax",%progbits
 3049              		.align	2
 3050              		.global	ETH_Start
 3051              		.code	16
 3052              		.thumb_func
 3053              		.type	ETH_Start, %function
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 74


 3054              	ETH_Start:
 3055              	.LFB45:
1089:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1090:.\Generated_Source\PSoC4/ETH.c **** void
1091:.\Generated_Source\PSoC4/ETH.c **** ETH_Start( void )
1092:.\Generated_Source\PSoC4/ETH.c **** {
 3056              		.loc 1 1092 0
 3057              		.cfi_startproc
 3058 0000 80B5     		push	{r7, lr}
 3059              	.LCFI133:
 3060              		.cfi_def_cfa_offset 8
 3061              		.cfi_offset 7, -8
 3062              		.cfi_offset 14, -4
 3063 0002 84B0     		sub	sp, sp, #16
 3064              	.LCFI134:
 3065              		.cfi_def_cfa_offset 24
 3066 0004 00AF     		add	r7, sp, #0
 3067              	.LCFI135:
 3068              		.cfi_def_cfa_register 7
1093:.\Generated_Source\PSoC4/ETH.c **** 	uint32 ip;
1094:.\Generated_Source\PSoC4/ETH.c **** 	uint32 gateway;
1095:.\Generated_Source\PSoC4/ETH.c **** 	uint32 sub;
1096:.\Generated_Source\PSoC4/ETH.c **** 	
1097:.\Generated_Source\PSoC4/ETH.c **** 	/* Check for SPI initialization */
1098:.\Generated_Source\PSoC4/ETH.c **** 	if (SPI0_initVar == 0) {
 3069              		.loc 1 1098 0
 3070 0006 1F4B     		ldr	r3, .L126
 3071 0008 1B78     		ldrb	r3, [r3]
 3072 000a 002B     		cmp	r3, #0
 3073 000c 01D1     		bne	.L124
1099:.\Generated_Source\PSoC4/ETH.c **** 		/*
1100:.\Generated_Source\PSoC4/ETH.c **** 		 * the hardware has not yet been initialized.  Before anything can be
1101:.\Generated_Source\PSoC4/ETH.c **** 		 * initialized within the driver, the external hardware must be started
1102:.\Generated_Source\PSoC4/ETH.c **** 		 */
1103:.\Generated_Source\PSoC4/ETH.c **** 		SPI0_Start();
 3074              		.loc 1 1103 0
 3075 000e FFF7FEFF 		bl	SPI0_Start
 3076              	.L124:
1104:.\Generated_Source\PSoC4/ETH.c **** 	}
1105:.\Generated_Source\PSoC4/ETH.c **** 		
1106:.\Generated_Source\PSoC4/ETH.c **** 	/* wait for power on PLL Lock */
1107:.\Generated_Source\PSoC4/ETH.c **** 	CyDelay( 10 );
 3077              		.loc 1 1107 0
 3078 0012 0A20     		mov	r0, #10
 3079 0014 FFF7FEFF 		bl	CyDelay
1108:.\Generated_Source\PSoC4/ETH.c **** 	/* V1.2 new -- Parse MAC Address string */
1109:.\Generated_Source\PSoC4/ETH.c **** 	if ( ETH_ParseMAC("00-de-ad-be-ef-00", &ETH_MAC[0]) == CYRET_BAD_DATA) {
 3080              		.loc 1 1109 0
 3081 0018 1B4A     		ldr	r2, .L126+4
 3082 001a 1C4B     		ldr	r3, .L126+8
 3083 001c 101C     		mov	r0, r2
 3084 001e 191C     		mov	r1, r3
 3085 0020 FFF7FEFF 		bl	ETH_ParseMAC
 3086 0024 031C     		mov	r3, r0
 3087 0026 062B     		cmp	r3, #6
 3088 0028 11D1     		bne	.L125
1110:.\Generated_Source\PSoC4/ETH.c **** 		ETH_MAC[0] = 0;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 75


 3089              		.loc 1 1110 0
 3090 002a 184B     		ldr	r3, .L126+8
 3091 002c 0022     		mov	r2, #0
 3092 002e 1A70     		strb	r2, [r3]
1111:.\Generated_Source\PSoC4/ETH.c **** 		ETH_MAC[1] = 0xDE;
 3093              		.loc 1 1111 0
 3094 0030 164B     		ldr	r3, .L126+8
 3095 0032 DE22     		mov	r2, #222
 3096 0034 5A70     		strb	r2, [r3, #1]
1112:.\Generated_Source\PSoC4/ETH.c **** 		ETH_MAC[2] = 0xAD;
 3097              		.loc 1 1112 0
 3098 0036 154B     		ldr	r3, .L126+8
 3099 0038 AD22     		mov	r2, #173
 3100 003a 9A70     		strb	r2, [r3, #2]
1113:.\Generated_Source\PSoC4/ETH.c **** 		ETH_MAC[3] = 0xC0;
 3101              		.loc 1 1113 0
 3102 003c 134B     		ldr	r3, .L126+8
 3103 003e C022     		mov	r2, #192
 3104 0040 DA70     		strb	r2, [r3, #3]
1114:.\Generated_Source\PSoC4/ETH.c **** 		ETH_MAC[4] = 0xDE;
 3105              		.loc 1 1114 0
 3106 0042 124B     		ldr	r3, .L126+8
 3107 0044 DE22     		mov	r2, #222
 3108 0046 1A71     		strb	r2, [r3, #4]
1115:.\Generated_Source\PSoC4/ETH.c **** 		ETH_MAC[5] = 0;
 3109              		.loc 1 1115 0
 3110 0048 104B     		ldr	r3, .L126+8
 3111 004a 0022     		mov	r2, #0
 3112 004c 5A71     		strb	r2, [r3, #5]
 3113              	.L125:
1116:.\Generated_Source\PSoC4/ETH.c **** 	}
1117:.\Generated_Source\PSoC4/ETH.c **** 	/* END of V1.2 Update ------ */
1118:.\Generated_Source\PSoC4/ETH.c **** 	ip = ETH_ParseIP("192.168.0.101");
 3114              		.loc 1 1118 0
 3115 004e 104B     		ldr	r3, .L126+12
 3116 0050 181C     		mov	r0, r3
 3117 0052 FFF7FEFF 		bl	ETH_ParseIP
 3118 0056 031C     		mov	r3, r0
 3119 0058 FB60     		str	r3, [r7, #12]
1119:.\Generated_Source\PSoC4/ETH.c **** 	sub = ETH_ParseIP("255.255.255.0");
 3120              		.loc 1 1119 0
 3121 005a 0E4B     		ldr	r3, .L126+16
 3122 005c 181C     		mov	r0, r3
 3123 005e FFF7FEFF 		bl	ETH_ParseIP
 3124 0062 031C     		mov	r3, r0
 3125 0064 BB60     		str	r3, [r7, #8]
1120:.\Generated_Source\PSoC4/ETH.c **** 	gateway = ETH_ParseIP("192.168.0.1");
 3126              		.loc 1 1120 0
 3127 0066 0C4B     		ldr	r3, .L126+20
 3128 0068 181C     		mov	r0, r3
 3129 006a FFF7FEFF 		bl	ETH_ParseIP
 3130 006e 031C     		mov	r3, r0
 3131 0070 7B60     		str	r3, [r7, #4]
1121:.\Generated_Source\PSoC4/ETH.c **** 	/* Initialize the device with the default data */
1122:.\Generated_Source\PSoC4/ETH.c **** 	ETH_Init( &ETH_MAC[0], ip, sub, gateway  );
 3132              		.loc 1 1122 0
 3133 0072 0648     		ldr	r0, .L126+8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 76


 3134 0074 F968     		ldr	r1, [r7, #12]
 3135 0076 BA68     		ldr	r2, [r7, #8]
 3136 0078 7B68     		ldr	r3, [r7, #4]
 3137 007a FFF7FEFF 		bl	ETH_Init
1123:.\Generated_Source\PSoC4/ETH.c **** }
 3138              		.loc 1 1123 0
 3139 007e BD46     		mov	sp, r7
 3140 0080 04B0     		add	sp, sp, #16
 3141              		@ sp needed for prologue
 3142 0082 80BD     		pop	{r7, pc}
 3143              	.L127:
 3144              		.align	2
 3145              	.L126:
 3146 0084 00000000 		.word	SPI0_initVar
 3147 0088 10000000 		.word	.LC6
 3148 008c 00000000 		.word	ETH_MAC
 3149 0090 24000000 		.word	.LC9
 3150 0094 34000000 		.word	.LC11
 3151 0098 44000000 		.word	.LC13
 3152              		.cfi_endproc
 3153              	.LFE45:
 3154              		.size	ETH_Start, .-ETH_Start
 3155              		.section	.text.ETH_ParseIP,"ax",%progbits
 3156              		.align	2
 3157              		.global	ETH_ParseIP
 3158              		.code	16
 3159              		.thumb_func
 3160              		.type	ETH_ParseIP, %function
 3161              	ETH_ParseIP:
 3162              	.LFB46:
1124:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1125:.\Generated_Source\PSoC4/ETH.c **** uint32
1126:.\Generated_Source\PSoC4/ETH.c **** ETH_ParseIP( const char* ipString )
1127:.\Generated_Source\PSoC4/ETH.c **** {
 3163              		.loc 1 1127 0
 3164              		.cfi_startproc
 3165 0000 90B5     		push	{r4, r7, lr}
 3166              	.LCFI136:
 3167              		.cfi_def_cfa_offset 12
 3168              		.cfi_offset 4, -12
 3169              		.cfi_offset 7, -8
 3170              		.cfi_offset 14, -4
 3171 0002 89B0     		sub	sp, sp, #36
 3172              	.LCFI137:
 3173              		.cfi_def_cfa_offset 48
 3174 0004 00AF     		add	r7, sp, #0
 3175              	.LCFI138:
 3176              		.cfi_def_cfa_register 7
 3177 0006 7860     		str	r0, [r7, #4]
1128:.\Generated_Source\PSoC4/ETH.c **** 	/*
1129:.\Generated_Source\PSoC4/ETH.c **** 	 * Parse a human readable string in to a IP address usable by the hardare
1130:.\Generated_Source\PSoC4/ETH.c **** 	 */
1131:.\Generated_Source\PSoC4/ETH.c **** 	int index;
1132:.\Generated_Source\PSoC4/ETH.c **** 	char digit[5];
1133:.\Generated_Source\PSoC4/ETH.c **** 	uint8 ip[4];
1134:.\Generated_Source\PSoC4/ETH.c **** 	int counter;
1135:.\Generated_Source\PSoC4/ETH.c **** 	int dindex;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 77


1136:.\Generated_Source\PSoC4/ETH.c **** 	
1137:.\Generated_Source\PSoC4/ETH.c **** 	index = 0;
 3178              		.loc 1 1137 0
 3179 0008 0023     		mov	r3, #0
 3180 000a FB61     		str	r3, [r7, #28]
1138:.\Generated_Source\PSoC4/ETH.c **** 	dindex = 0;
 3181              		.loc 1 1138 0
 3182 000c 0023     		mov	r3, #0
 3183 000e 7B61     		str	r3, [r7, #20]
1139:.\Generated_Source\PSoC4/ETH.c **** 	counter = 0;
 3184              		.loc 1 1139 0
 3185 0010 0023     		mov	r3, #0
 3186 0012 BB61     		str	r3, [r7, #24]
1140:.\Generated_Source\PSoC4/ETH.c **** 	
1141:.\Generated_Source\PSoC4/ETH.c **** 	while ( (counter < 4) && ((unsigned int)index < strlen(ipString) ) ) {
 3187              		.loc 1 1141 0
 3188 0014 63E0     		b	.L129
 3189              	.L138:
1142:.\Generated_Source\PSoC4/ETH.c **** 		if ( (ipString[index] >= '0' ) && (ipString[index] <= '9') ) {
 3190              		.loc 1 1142 0
 3191 0016 FB69     		ldr	r3, [r7, #28]
 3192 0018 7A68     		ldr	r2, [r7, #4]
 3193 001a D318     		add	r3, r2, r3
 3194 001c 1B78     		ldrb	r3, [r3]
 3195 001e 2F2B     		cmp	r3, #47
 3196 0020 17D9     		bls	.L130
 3197              		.loc 1 1142 0 is_stmt 0 discriminator 1
 3198 0022 FB69     		ldr	r3, [r7, #28]
 3199 0024 7A68     		ldr	r2, [r7, #4]
 3200 0026 D318     		add	r3, r2, r3
 3201 0028 1B78     		ldrb	r3, [r3]
 3202 002a 392B     		cmp	r3, #57
 3203 002c 11D8     		bhi	.L130
1143:.\Generated_Source\PSoC4/ETH.c **** 			if (dindex > 3) return( 0xFFFFFFFF );
 3204              		.loc 1 1143 0 is_stmt 1
 3205 002e 7B69     		ldr	r3, [r7, #20]
 3206 0030 032B     		cmp	r3, #3
 3207 0032 02DD     		ble	.L131
 3208              		.loc 1 1143 0 is_stmt 0 discriminator 1
 3209 0034 0123     		mov	r3, #1
 3210 0036 5B42     		neg	r3, r3
 3211 0038 7BE0     		b	.L140
 3212              	.L131:
1144:.\Generated_Source\PSoC4/ETH.c **** 			digit[dindex++] = ipString[index];
 3213              		.loc 1 1144 0 is_stmt 1
 3214 003a FB69     		ldr	r3, [r7, #28]
 3215 003c 7A68     		ldr	r2, [r7, #4]
 3216 003e D318     		add	r3, r2, r3
 3217 0040 1A78     		ldrb	r2, [r3]
 3218 0042 391C     		mov	r1, r7
 3219 0044 0C31     		add	r1, r1, #12
 3220 0046 7B69     		ldr	r3, [r7, #20]
 3221 0048 CB18     		add	r3, r1, r3
 3222 004a 1A70     		strb	r2, [r3]
 3223 004c 7B69     		ldr	r3, [r7, #20]
 3224 004e 0133     		add	r3, r3, #1
 3225 0050 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 78


 3226              	.L130:
1145:.\Generated_Source\PSoC4/ETH.c **** 			
1146:.\Generated_Source\PSoC4/ETH.c **** 		}
1147:.\Generated_Source\PSoC4/ETH.c **** 		
1148:.\Generated_Source\PSoC4/ETH.c **** 		if ( (ipString[index] == '.') || (ipString[index+1] == 0) ) {
 3227              		.loc 1 1148 0
 3228 0052 FB69     		ldr	r3, [r7, #28]
 3229 0054 7A68     		ldr	r2, [r7, #4]
 3230 0056 D318     		add	r3, r2, r3
 3231 0058 1B78     		ldrb	r3, [r3]
 3232 005a 2E2B     		cmp	r3, #46
 3233 005c 06D0     		beq	.L133
 3234              		.loc 1 1148 0 is_stmt 0 discriminator 1
 3235 005e FB69     		ldr	r3, [r7, #28]
 3236 0060 0133     		add	r3, r3, #1
 3237 0062 7A68     		ldr	r2, [r7, #4]
 3238 0064 D318     		add	r3, r2, r3
 3239 0066 1B78     		ldrb	r3, [r3]
 3240 0068 002B     		cmp	r3, #0
 3241 006a 35D1     		bne	.L134
 3242              	.L133:
1149:.\Generated_Source\PSoC4/ETH.c **** 			digit[dindex] = 0;
 3243              		.loc 1 1149 0 is_stmt 1
 3244 006c 3A1C     		mov	r2, r7
 3245 006e 0C32     		add	r2, r2, #12
 3246 0070 7B69     		ldr	r3, [r7, #20]
 3247 0072 D318     		add	r3, r2, r3
 3248 0074 0022     		mov	r2, #0
 3249 0076 1A70     		strb	r2, [r3]
1150:.\Generated_Source\PSoC4/ETH.c **** 			dindex = 0;
 3250              		.loc 1 1150 0
 3251 0078 0023     		mov	r3, #0
 3252 007a 7B61     		str	r3, [r7, #20]
1151:.\Generated_Source\PSoC4/ETH.c **** 			/* convert the value and store in the buffer */
1152:.\Generated_Source\PSoC4/ETH.c **** 			ip[counter] = 0;
 3253              		.loc 1 1152 0
 3254 007c 3A1C     		mov	r2, r7
 3255 007e 0832     		add	r2, r2, #8
 3256 0080 BB69     		ldr	r3, [r7, #24]
 3257 0082 D318     		add	r3, r2, r3
 3258 0084 0022     		mov	r2, #0
 3259 0086 1A70     		strb	r2, [r3]
1153:.\Generated_Source\PSoC4/ETH.c **** 			while (digit[dindex] != 0) {
 3260              		.loc 1 1153 0
 3261 0088 1AE0     		b	.L135
 3262              	.L136:
1154:.\Generated_Source\PSoC4/ETH.c **** 				ip[counter] = (ip[counter]*10) + (digit[dindex]-'0');
 3263              		.loc 1 1154 0
 3264 008a 3A1C     		mov	r2, r7
 3265 008c 0832     		add	r2, r2, #8
 3266 008e BB69     		ldr	r3, [r7, #24]
 3267 0090 D318     		add	r3, r2, r3
 3268 0092 1B78     		ldrb	r3, [r3]
 3269 0094 1A1C     		add	r2, r3, #0
 3270 0096 9200     		lsl	r2, r2, #2
 3271 0098 D318     		add	r3, r2, r3
 3272 009a 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 79


 3273 009c DAB2     		uxtb	r2, r3
 3274 009e 391C     		mov	r1, r7
 3275 00a0 0C31     		add	r1, r1, #12
 3276 00a2 7B69     		ldr	r3, [r7, #20]
 3277 00a4 CB18     		add	r3, r1, r3
 3278 00a6 1B78     		ldrb	r3, [r3]
 3279 00a8 D318     		add	r3, r2, r3
 3280 00aa DBB2     		uxtb	r3, r3
 3281 00ac 303B     		sub	r3, r3, #48
 3282 00ae DAB2     		uxtb	r2, r3
 3283 00b0 391C     		mov	r1, r7
 3284 00b2 0831     		add	r1, r1, #8
 3285 00b4 BB69     		ldr	r3, [r7, #24]
 3286 00b6 CB18     		add	r3, r1, r3
 3287 00b8 1A70     		strb	r2, [r3]
1155:.\Generated_Source\PSoC4/ETH.c **** 				++dindex;
 3288              		.loc 1 1155 0
 3289 00ba 7B69     		ldr	r3, [r7, #20]
 3290 00bc 0133     		add	r3, r3, #1
 3291 00be 7B61     		str	r3, [r7, #20]
 3292              	.L135:
1153:.\Generated_Source\PSoC4/ETH.c **** 			while (digit[dindex] != 0) {
 3293              		.loc 1 1153 0 discriminator 1
 3294 00c0 3A1C     		mov	r2, r7
 3295 00c2 0C32     		add	r2, r2, #12
 3296 00c4 7B69     		ldr	r3, [r7, #20]
 3297 00c6 D318     		add	r3, r2, r3
 3298 00c8 1B78     		ldrb	r3, [r3]
 3299 00ca 002B     		cmp	r3, #0
 3300 00cc DDD1     		bne	.L136
1156:.\Generated_Source\PSoC4/ETH.c **** 				// ip[counter] = ...
1157:.\Generated_Source\PSoC4/ETH.c **** 			}
1158:.\Generated_Source\PSoC4/ETH.c **** 			/* reset the digit index to start accumulating digits again*/
1159:.\Generated_Source\PSoC4/ETH.c **** 			dindex = 0;
 3301              		.loc 1 1159 0
 3302 00ce 0023     		mov	r3, #0
 3303 00d0 7B61     		str	r3, [r7, #20]
1160:.\Generated_Source\PSoC4/ETH.c **** 			/* move to the next address byte */
1161:.\Generated_Source\PSoC4/ETH.c **** 			++counter;
 3304              		.loc 1 1161 0
 3305 00d2 BB69     		ldr	r3, [r7, #24]
 3306 00d4 0133     		add	r3, r3, #1
 3307 00d6 BB61     		str	r3, [r7, #24]
 3308              	.L134:
1162:.\Generated_Source\PSoC4/ETH.c **** 		}
1163:.\Generated_Source\PSoC4/ETH.c **** 		++index;
 3309              		.loc 1 1163 0
 3310 00d8 FB69     		ldr	r3, [r7, #28]
 3311 00da 0133     		add	r3, r3, #1
 3312 00dc FB61     		str	r3, [r7, #28]
 3313              	.L129:
1141:.\Generated_Source\PSoC4/ETH.c **** 	while ( (counter < 4) && ((unsigned int)index < strlen(ipString) ) ) {
 3314              		.loc 1 1141 0 discriminator 1
 3315 00de BB69     		ldr	r3, [r7, #24]
 3316 00e0 032B     		cmp	r3, #3
 3317 00e2 07DC     		bgt	.L137
1141:.\Generated_Source\PSoC4/ETH.c **** 	while ( (counter < 4) && ((unsigned int)index < strlen(ipString) ) ) {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 80


 3318              		.loc 1 1141 0 is_stmt 0 discriminator 2
 3319 00e4 FC69     		ldr	r4, [r7, #28]
 3320 00e6 7B68     		ldr	r3, [r7, #4]
 3321 00e8 181C     		mov	r0, r3
 3322 00ea FFF7FEFF 		bl	strlen
 3323 00ee 031C     		mov	r3, r0
 3324 00f0 9C42     		cmp	r4, r3
 3325 00f2 90D3     		bcc	.L138
 3326              	.L137:
1164:.\Generated_Source\PSoC4/ETH.c **** 	}
1165:.\Generated_Source\PSoC4/ETH.c **** 	
1166:.\Generated_Source\PSoC4/ETH.c **** 	if (counter != 4) {
 3327              		.loc 1 1166 0 is_stmt 1
 3328 00f4 BB69     		ldr	r3, [r7, #24]
 3329 00f6 042B     		cmp	r3, #4
 3330 00f8 02D0     		beq	.L139
1167:.\Generated_Source\PSoC4/ETH.c **** 		return( 0xFFFFFFFF );
 3331              		.loc 1 1167 0
 3332 00fa 0123     		mov	r3, #1
 3333 00fc 5B42     		neg	r3, r3
 3334 00fe 18E0     		b	.L140
 3335              	.L139:
1168:.\Generated_Source\PSoC4/ETH.c **** 	}
1169:.\Generated_Source\PSoC4/ETH.c **** 	else {
1170:.\Generated_Source\PSoC4/ETH.c **** 		return( ETH_IPADDRESS(ip[0], ip[1], ip[2], ip[3]) );
 3336              		.loc 1 1170 0
 3337 0100 3B1C     		mov	r3, r7
 3338 0102 0833     		add	r3, r3, #8
 3339 0104 1B78     		ldrb	r3, [r3]
 3340 0106 1A1C     		mov	r2, r3
 3341 0108 3B1C     		mov	r3, r7
 3342 010a 0833     		add	r3, r3, #8
 3343 010c 5B78     		ldrb	r3, [r3, #1]
 3344 010e 1B02     		lsl	r3, r3, #8
 3345 0110 1B04     		lsl	r3, r3, #16
 3346 0112 1B0C     		lsr	r3, r3, #16
 3347 0114 D218     		add	r2, r2, r3
 3348 0116 3B1C     		mov	r3, r7
 3349 0118 0833     		add	r3, r3, #8
 3350 011a 9B78     		ldrb	r3, [r3, #2]
 3351 011c 1B04     		lsl	r3, r3, #16
 3352 011e 191C     		mov	r1, r3
 3353 0120 FF23     		mov	r3, #255
 3354 0122 1B04     		lsl	r3, r3, #16
 3355 0124 0B40     		and	r3, r1
 3356 0126 D218     		add	r2, r2, r3
 3357 0128 3B1C     		mov	r3, r7
 3358 012a 0833     		add	r3, r3, #8
 3359 012c DB78     		ldrb	r3, [r3, #3]
 3360 012e 1B06     		lsl	r3, r3, #24
 3361 0130 D318     		add	r3, r2, r3
 3362              	.L140:
1171:.\Generated_Source\PSoC4/ETH.c **** 	}
1172:.\Generated_Source\PSoC4/ETH.c **** }
 3363              		.loc 1 1172 0
 3364 0132 181C     		mov	r0, r3
 3365 0134 BD46     		mov	sp, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 81


 3366 0136 09B0     		add	sp, sp, #36
 3367              		@ sp needed for prologue
 3368 0138 90BD     		pop	{r4, r7, pc}
 3369              		.cfi_endproc
 3370              	.LFE46:
 3371              		.size	ETH_ParseIP, .-ETH_ParseIP
 3372 013a C046     		.section	.text.ETH_ParseMAC,"ax",%progbits
 3373              		.align	2
 3374              		.global	ETH_ParseMAC
 3375              		.code	16
 3376              		.thumb_func
 3377              		.type	ETH_ParseMAC, %function
 3378              	ETH_ParseMAC:
 3379              	.LFB47:
1173:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1174:.\Generated_Source\PSoC4/ETH.c **** /**
1175:.\Generated_Source\PSoC4/ETH.c ****  * /brief Parse a MAC Address string in to a 6-byte mac address
1176:.\Generated_Source\PSoC4/ETH.c ****  * /param *macString Pointer to the ASCII-Z String containing the MAC address
1177:.\Generated_Source\PSoC4/ETH.c ****  * /param *mac Pointer to the 6-byte array to hold the output mac addres
1178:.\Generated_Source\PSoC4/ETH.c ****  */
1179:.\Generated_Source\PSoC4/ETH.c **** cystatus ETH_ParseMAC(const char *macString, uint8 *mac)
1180:.\Generated_Source\PSoC4/ETH.c **** {
 3380              		.loc 1 1180 0
 3381              		.cfi_startproc
 3382 0000 80B5     		push	{r7, lr}
 3383              	.LCFI139:
 3384              		.cfi_def_cfa_offset 8
 3385              		.cfi_offset 7, -8
 3386              		.cfi_offset 14, -4
 3387 0002 86B0     		sub	sp, sp, #24
 3388              	.LCFI140:
 3389              		.cfi_def_cfa_offset 32
 3390 0004 00AF     		add	r7, sp, #0
 3391              	.LCFI141:
 3392              		.cfi_def_cfa_register 7
 3393 0006 7860     		str	r0, [r7, #4]
 3394 0008 3960     		str	r1, [r7]
1181:.\Generated_Source\PSoC4/ETH.c **** 	/* 
1182:.\Generated_Source\PSoC4/ETH.c **** 	 * a mac address is specified as a string of 6 hex bytes with
1183:.\Generated_Source\PSoC4/ETH.c **** 	 * dashes ('-') seperating the bytes.  An invalidly formed
1184:.\Generated_Source\PSoC4/ETH.c **** 	 * address will only process the values up the error and return BAD_DATA
1185:.\Generated_Source\PSoC4/ETH.c **** 	 * otherwise, SUCESS is returned.
1186:.\Generated_Source\PSoC4/ETH.c **** 	 */
1187:.\Generated_Source\PSoC4/ETH.c **** 	int digit;
1188:.\Generated_Source\PSoC4/ETH.c **** 	int index;
1189:.\Generated_Source\PSoC4/ETH.c **** 	cystatus result;
1190:.\Generated_Source\PSoC4/ETH.c **** 	
1191:.\Generated_Source\PSoC4/ETH.c **** 	result = CYRET_SUCCESS;
 3395              		.loc 1 1191 0
 3396 000a 0023     		mov	r3, #0
 3397 000c FB60     		str	r3, [r7, #12]
1192:.\Generated_Source\PSoC4/ETH.c **** 	index = 0;
 3398              		.loc 1 1192 0
 3399 000e 0023     		mov	r3, #0
 3400 0010 3B61     		str	r3, [r7, #16]
1193:.\Generated_Source\PSoC4/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3401              		.loc 1 1193 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 82


 3402 0012 0023     		mov	r3, #0
 3403 0014 7B61     		str	r3, [r7, #20]
 3404 0016 F9E0     		b	.L142
 3405              	.L168:
1194:.\Generated_Source\PSoC4/ETH.c **** 		// process the first nibble
1195:.\Generated_Source\PSoC4/ETH.c **** 		if (ETH_ISXDIGIT(macString[index]) ) {
 3406              		.loc 1 1195 0
 3407 0018 3B69     		ldr	r3, [r7, #16]
 3408 001a 7A68     		ldr	r2, [r7, #4]
 3409 001c D318     		add	r3, r2, r3
 3410 001e 1B78     		ldrb	r3, [r3]
 3411 0020 2F2B     		cmp	r3, #47
 3412 0022 05D9     		bls	.L143
 3413              		.loc 1 1195 0 is_stmt 0 discriminator 1
 3414 0024 3B69     		ldr	r3, [r7, #16]
 3415 0026 7A68     		ldr	r2, [r7, #4]
 3416 0028 D318     		add	r3, r2, r3
 3417 002a 1B78     		ldrb	r3, [r3]
 3418 002c 392B     		cmp	r3, #57
 3419 002e 19D9     		bls	.L144
 3420              	.L143:
 3421              		.loc 1 1195 0 discriminator 2
 3422 0030 3B69     		ldr	r3, [r7, #16]
 3423 0032 7A68     		ldr	r2, [r7, #4]
 3424 0034 D318     		add	r3, r2, r3
 3425 0036 1B78     		ldrb	r3, [r3]
 3426 0038 602B     		cmp	r3, #96
 3427 003a 05D9     		bls	.L145
 3428              		.loc 1 1195 0 discriminator 1
 3429 003c 3B69     		ldr	r3, [r7, #16]
 3430 003e 7A68     		ldr	r2, [r7, #4]
 3431 0040 D318     		add	r3, r2, r3
 3432 0042 1B78     		ldrb	r3, [r3]
 3433 0044 662B     		cmp	r3, #102
 3434 0046 0DD9     		bls	.L144
 3435              	.L145:
 3436              		.loc 1 1195 0 discriminator 2
 3437 0048 3B69     		ldr	r3, [r7, #16]
 3438 004a 7A68     		ldr	r2, [r7, #4]
 3439 004c D318     		add	r3, r2, r3
 3440 004e 1B78     		ldrb	r3, [r3]
 3441 0050 402B     		cmp	r3, #64
 3442 0052 00D8     		bhi	.LCB3027
 3443 0054 D5E0     		b	.L146	@long jump
 3444              	.LCB3027:
 3445              		.loc 1 1195 0 discriminator 3
 3446 0056 3B69     		ldr	r3, [r7, #16]
 3447 0058 7A68     		ldr	r2, [r7, #4]
 3448 005a D318     		add	r3, r2, r3
 3449 005c 1B78     		ldrb	r3, [r3]
 3450 005e 462B     		cmp	r3, #70
 3451 0060 00D9     		bls	.LCB3033
 3452 0062 CEE0     		b	.L146	@long jump
 3453              	.LCB3033:
 3454              	.L144:
1196:.\Generated_Source\PSoC4/ETH.c **** 			mac[digit] = ETH_HEX2BIN(macString[index]);
 3455              		.loc 1 1196 0 is_stmt 1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 83


 3456 0064 7B69     		ldr	r3, [r7, #20]
 3457 0066 3A68     		ldr	r2, [r7]
 3458 0068 D218     		add	r2, r2, r3
 3459 006a 3B69     		ldr	r3, [r7, #16]
 3460 006c 7968     		ldr	r1, [r7, #4]
 3461 006e CB18     		add	r3, r1, r3
 3462 0070 1B78     		ldrb	r3, [r3]
 3463 0072 2F2B     		cmp	r3, #47
 3464 0074 0CD9     		bls	.L147
 3465              		.loc 1 1196 0 is_stmt 0 discriminator 1
 3466 0076 3B69     		ldr	r3, [r7, #16]
 3467 0078 7968     		ldr	r1, [r7, #4]
 3468 007a CB18     		add	r3, r1, r3
 3469 007c 1B78     		ldrb	r3, [r3]
 3470 007e 392B     		cmp	r3, #57
 3471 0080 06D8     		bhi	.L147
 3472 0082 3B69     		ldr	r3, [r7, #16]
 3473 0084 7968     		ldr	r1, [r7, #4]
 3474 0086 CB18     		add	r3, r1, r3
 3475 0088 1B78     		ldrb	r3, [r3]
 3476 008a 303B     		sub	r3, r3, #48
 3477 008c DBB2     		uxtb	r3, r3
 3478 008e 26E0     		b	.L148
 3479              	.L147:
 3480              		.loc 1 1196 0 discriminator 2
 3481 0090 3B69     		ldr	r3, [r7, #16]
 3482 0092 7968     		ldr	r1, [r7, #4]
 3483 0094 CB18     		add	r3, r1, r3
 3484 0096 1B78     		ldrb	r3, [r3]
 3485 0098 602B     		cmp	r3, #96
 3486 009a 0CD9     		bls	.L149
 3487              		.loc 1 1196 0 discriminator 4
 3488 009c 3B69     		ldr	r3, [r7, #16]
 3489 009e 7968     		ldr	r1, [r7, #4]
 3490 00a0 CB18     		add	r3, r1, r3
 3491 00a2 1B78     		ldrb	r3, [r3]
 3492 00a4 662B     		cmp	r3, #102
 3493 00a6 06D8     		bhi	.L149
 3494              		.loc 1 1196 0 discriminator 2
 3495 00a8 3B69     		ldr	r3, [r7, #16]
 3496 00aa 7968     		ldr	r1, [r7, #4]
 3497 00ac CB18     		add	r3, r1, r3
 3498 00ae 1B78     		ldrb	r3, [r3]
 3499 00b0 573B     		sub	r3, r3, #87
 3500 00b2 DBB2     		uxtb	r3, r3
 3501 00b4 13E0     		b	.L150
 3502              	.L149:
 3503              		.loc 1 1196 0 discriminator 5
 3504 00b6 3B69     		ldr	r3, [r7, #16]
 3505 00b8 7968     		ldr	r1, [r7, #4]
 3506 00ba CB18     		add	r3, r1, r3
 3507 00bc 1B78     		ldrb	r3, [r3]
 3508 00be 402B     		cmp	r3, #64
 3509 00c0 0CD9     		bls	.L151
 3510              		.loc 1 1196 0 discriminator 7
 3511 00c2 3B69     		ldr	r3, [r7, #16]
 3512 00c4 7968     		ldr	r1, [r7, #4]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 84


 3513 00c6 CB18     		add	r3, r1, r3
 3514 00c8 1B78     		ldrb	r3, [r3]
 3515 00ca 462B     		cmp	r3, #70
 3516 00cc 06D8     		bhi	.L151
 3517              		.loc 1 1196 0 discriminator 3
 3518 00ce 3B69     		ldr	r3, [r7, #16]
 3519 00d0 7968     		ldr	r1, [r7, #4]
 3520 00d2 CB18     		add	r3, r1, r3
 3521 00d4 1B78     		ldrb	r3, [r3]
 3522 00d6 373B     		sub	r3, r3, #55
 3523 00d8 DBB2     		uxtb	r3, r3
 3524 00da 00E0     		b	.L152
 3525              	.L151:
 3526              		.loc 1 1196 0 discriminator 8
 3527 00dc 0023     		mov	r3, #0
 3528              	.L152:
 3529              	.L150:
 3530              	.L148:
 3531              		.loc 1 1196 0 discriminator 3
 3532 00de 1370     		strb	r3, [r2]
1197:.\Generated_Source\PSoC4/ETH.c **** 			++index;
 3533              		.loc 1 1197 0 is_stmt 1 discriminator 3
 3534 00e0 3B69     		ldr	r3, [r7, #16]
 3535 00e2 0133     		add	r3, r3, #1
 3536 00e4 3B61     		str	r3, [r7, #16]
1198:.\Generated_Source\PSoC4/ETH.c **** 			mac[digit] <<= 4;
 3537              		.loc 1 1198 0 discriminator 3
 3538 00e6 7B69     		ldr	r3, [r7, #20]
 3539 00e8 3A68     		ldr	r2, [r7]
 3540 00ea D318     		add	r3, r2, r3
 3541 00ec 7A69     		ldr	r2, [r7, #20]
 3542 00ee 3968     		ldr	r1, [r7]
 3543 00f0 8A18     		add	r2, r1, r2
 3544 00f2 1278     		ldrb	r2, [r2]
 3545 00f4 1201     		lsl	r2, r2, #4
 3546 00f6 D2B2     		uxtb	r2, r2
 3547 00f8 1A70     		strb	r2, [r3]
1199:.\Generated_Source\PSoC4/ETH.c **** 			if (ETH_ISXDIGIT(macString[index])) {
 3548              		.loc 1 1199 0 discriminator 3
 3549 00fa 3B69     		ldr	r3, [r7, #16]
 3550 00fc 7A68     		ldr	r2, [r7, #4]
 3551 00fe D318     		add	r3, r2, r3
 3552 0100 1B78     		ldrb	r3, [r3]
 3553 0102 2F2B     		cmp	r3, #47
 3554 0104 05D9     		bls	.L153
 3555              		.loc 1 1199 0 is_stmt 0 discriminator 1
 3556 0106 3B69     		ldr	r3, [r7, #16]
 3557 0108 7A68     		ldr	r2, [r7, #4]
 3558 010a D318     		add	r3, r2, r3
 3559 010c 1B78     		ldrb	r3, [r3]
 3560 010e 392B     		cmp	r3, #57
 3561 0110 17D9     		bls	.L154
 3562              	.L153:
 3563              		.loc 1 1199 0 discriminator 2
 3564 0112 3B69     		ldr	r3, [r7, #16]
 3565 0114 7A68     		ldr	r2, [r7, #4]
 3566 0116 D318     		add	r3, r2, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 85


 3567 0118 1B78     		ldrb	r3, [r3]
 3568 011a 602B     		cmp	r3, #96
 3569 011c 05D9     		bls	.L155
 3570              		.loc 1 1199 0 discriminator 1
 3571 011e 3B69     		ldr	r3, [r7, #16]
 3572 0120 7A68     		ldr	r2, [r7, #4]
 3573 0122 D318     		add	r3, r2, r3
 3574 0124 1B78     		ldrb	r3, [r3]
 3575 0126 662B     		cmp	r3, #102
 3576 0128 0BD9     		bls	.L154
 3577              	.L155:
 3578              		.loc 1 1199 0 discriminator 2
 3579 012a 3B69     		ldr	r3, [r7, #16]
 3580 012c 7A68     		ldr	r2, [r7, #4]
 3581 012e D318     		add	r3, r2, r3
 3582 0130 1B78     		ldrb	r3, [r3]
 3583 0132 402B     		cmp	r3, #64
 3584 0134 61D9     		bls	.L156
 3585              		.loc 1 1199 0 discriminator 3
 3586 0136 3B69     		ldr	r3, [r7, #16]
 3587 0138 7A68     		ldr	r2, [r7, #4]
 3588 013a D318     		add	r3, r2, r3
 3589 013c 1B78     		ldrb	r3, [r3]
 3590 013e 462B     		cmp	r3, #70
 3591 0140 5BD8     		bhi	.L156
 3592              	.L154:
1200:.\Generated_Source\PSoC4/ETH.c **** 				mac[digit] += ETH_HEX2BIN(macString[index]);
 3593              		.loc 1 1200 0 is_stmt 1
 3594 0142 7B69     		ldr	r3, [r7, #20]
 3595 0144 3A68     		ldr	r2, [r7]
 3596 0146 D218     		add	r2, r2, r3
 3597 0148 7B69     		ldr	r3, [r7, #20]
 3598 014a 3968     		ldr	r1, [r7]
 3599 014c CB18     		add	r3, r1, r3
 3600 014e 1978     		ldrb	r1, [r3]
 3601 0150 3B69     		ldr	r3, [r7, #16]
 3602 0152 7868     		ldr	r0, [r7, #4]
 3603 0154 C318     		add	r3, r0, r3
 3604 0156 1B78     		ldrb	r3, [r3]
 3605 0158 2F2B     		cmp	r3, #47
 3606 015a 0CD9     		bls	.L157
 3607              		.loc 1 1200 0 is_stmt 0 discriminator 1
 3608 015c 3B69     		ldr	r3, [r7, #16]
 3609 015e 7868     		ldr	r0, [r7, #4]
 3610 0160 C318     		add	r3, r0, r3
 3611 0162 1B78     		ldrb	r3, [r3]
 3612 0164 392B     		cmp	r3, #57
 3613 0166 06D8     		bhi	.L157
 3614 0168 3B69     		ldr	r3, [r7, #16]
 3615 016a 7868     		ldr	r0, [r7, #4]
 3616 016c C318     		add	r3, r0, r3
 3617 016e 1B78     		ldrb	r3, [r3]
 3618 0170 303B     		sub	r3, r3, #48
 3619 0172 DBB2     		uxtb	r3, r3
 3620 0174 26E0     		b	.L158
 3621              	.L157:
 3622              		.loc 1 1200 0 discriminator 2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 86


 3623 0176 3B69     		ldr	r3, [r7, #16]
 3624 0178 7868     		ldr	r0, [r7, #4]
 3625 017a C318     		add	r3, r0, r3
 3626 017c 1B78     		ldrb	r3, [r3]
 3627 017e 602B     		cmp	r3, #96
 3628 0180 0CD9     		bls	.L159
 3629              		.loc 1 1200 0 discriminator 4
 3630 0182 3B69     		ldr	r3, [r7, #16]
 3631 0184 7868     		ldr	r0, [r7, #4]
 3632 0186 C318     		add	r3, r0, r3
 3633 0188 1B78     		ldrb	r3, [r3]
 3634 018a 662B     		cmp	r3, #102
 3635 018c 06D8     		bhi	.L159
 3636              		.loc 1 1200 0 discriminator 2
 3637 018e 3B69     		ldr	r3, [r7, #16]
 3638 0190 7868     		ldr	r0, [r7, #4]
 3639 0192 C318     		add	r3, r0, r3
 3640 0194 1B78     		ldrb	r3, [r3]
 3641 0196 573B     		sub	r3, r3, #87
 3642 0198 DBB2     		uxtb	r3, r3
 3643 019a 13E0     		b	.L160
 3644              	.L159:
 3645              		.loc 1 1200 0 discriminator 5
 3646 019c 3B69     		ldr	r3, [r7, #16]
 3647 019e 7868     		ldr	r0, [r7, #4]
 3648 01a0 C318     		add	r3, r0, r3
 3649 01a2 1B78     		ldrb	r3, [r3]
 3650 01a4 402B     		cmp	r3, #64
 3651 01a6 0CD9     		bls	.L161
 3652              		.loc 1 1200 0 discriminator 7
 3653 01a8 3B69     		ldr	r3, [r7, #16]
 3654 01aa 7868     		ldr	r0, [r7, #4]
 3655 01ac C318     		add	r3, r0, r3
 3656 01ae 1B78     		ldrb	r3, [r3]
 3657 01b0 462B     		cmp	r3, #70
 3658 01b2 06D8     		bhi	.L161
 3659              		.loc 1 1200 0 discriminator 3
 3660 01b4 3B69     		ldr	r3, [r7, #16]
 3661 01b6 7868     		ldr	r0, [r7, #4]
 3662 01b8 C318     		add	r3, r0, r3
 3663 01ba 1B78     		ldrb	r3, [r3]
 3664 01bc 373B     		sub	r3, r3, #55
 3665 01be DBB2     		uxtb	r3, r3
 3666 01c0 00E0     		b	.L162
 3667              	.L161:
 3668              		.loc 1 1200 0 discriminator 8
 3669 01c2 0023     		mov	r3, #0
 3670              	.L162:
 3671              	.L160:
 3672              	.L158:
 3673              		.loc 1 1200 0 discriminator 3
 3674 01c4 CB18     		add	r3, r1, r3
 3675 01c6 DBB2     		uxtb	r3, r3
 3676 01c8 1370     		strb	r3, [r2]
1201:.\Generated_Source\PSoC4/ETH.c **** 				++index;
 3677              		.loc 1 1201 0 is_stmt 1 discriminator 3
 3678 01ca 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 87


 3679 01cc 0133     		add	r3, r3, #1
 3680 01ce 3B61     		str	r3, [r7, #16]
1202:.\Generated_Source\PSoC4/ETH.c **** 				/*
1203:.\Generated_Source\PSoC4/ETH.c **** 				 * now for digits other than digit 5 (the last one) look for
1204:.\Generated_Source\PSoC4/ETH.c **** 				 * the dash seperator.  If there is no dash, return bad data
1205:.\Generated_Source\PSoC4/ETH.c **** 				 */
1206:.\Generated_Source\PSoC4/ETH.c **** 				if (digit<5) {
 3681              		.loc 1 1206 0 discriminator 3
 3682 01d0 7B69     		ldr	r3, [r7, #20]
 3683 01d2 042B     		cmp	r3, #4
 3684 01d4 14DC     		bgt	.L165
1207:.\Generated_Source\PSoC4/ETH.c **** 					if( (macString[index]!='-') && (macString[index]!= ':') ){
 3685              		.loc 1 1207 0
 3686 01d6 3B69     		ldr	r3, [r7, #16]
 3687 01d8 7A68     		ldr	r2, [r7, #4]
 3688 01da D318     		add	r3, r2, r3
 3689 01dc 1B78     		ldrb	r3, [r3]
 3690 01de 2D2B     		cmp	r3, #45
 3691 01e0 07D0     		beq	.L164
 3692              		.loc 1 1207 0 is_stmt 0 discriminator 1
 3693 01e2 3B69     		ldr	r3, [r7, #16]
 3694 01e4 7A68     		ldr	r2, [r7, #4]
 3695 01e6 D318     		add	r3, r2, r3
 3696 01e8 1B78     		ldrb	r3, [r3]
 3697 01ea 3A2B     		cmp	r3, #58
 3698 01ec 01D0     		beq	.L164
1208:.\Generated_Source\PSoC4/ETH.c **** 						result = CYRET_BAD_DATA;
 3699              		.loc 1 1208 0 is_stmt 1
 3700 01ee 0623     		mov	r3, #6
 3701 01f0 FB60     		str	r3, [r7, #12]
 3702              	.L164:
1209:.\Generated_Source\PSoC4/ETH.c **** 					}
1210:.\Generated_Source\PSoC4/ETH.c **** 					++index; // move conversion pointer to the next value
 3703              		.loc 1 1210 0
 3704 01f2 3B69     		ldr	r3, [r7, #16]
 3705 01f4 0133     		add	r3, r3, #1
 3706 01f6 3B61     		str	r3, [r7, #16]
1206:.\Generated_Source\PSoC4/ETH.c **** 				if (digit<5) {
 3707              		.loc 1 1206 0
 3708 01f8 02E0     		b	.L165
 3709              	.L156:
1211:.\Generated_Source\PSoC4/ETH.c **** 				}
1212:.\Generated_Source\PSoC4/ETH.c **** 			}
1213:.\Generated_Source\PSoC4/ETH.c **** 			else {
1214:.\Generated_Source\PSoC4/ETH.c **** 				result = CYRET_BAD_DATA;
 3710              		.loc 1 1214 0
 3711 01fa 0623     		mov	r3, #6
 3712 01fc FB60     		str	r3, [r7, #12]
1199:.\Generated_Source\PSoC4/ETH.c **** 			if (ETH_ISXDIGIT(macString[index])) {
 3713              		.loc 1 1199 0
 3714 01fe 02E0     		b	.L166
 3715              	.L165:
 3716 0200 01E0     		b	.L166
 3717              	.L146:
1215:.\Generated_Source\PSoC4/ETH.c **** 			}
1216:.\Generated_Source\PSoC4/ETH.c **** 		}
1217:.\Generated_Source\PSoC4/ETH.c **** 		else {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 88


1218:.\Generated_Source\PSoC4/ETH.c **** 			result = CYRET_BAD_DATA;
 3718              		.loc 1 1218 0
 3719 0202 0623     		mov	r3, #6
 3720 0204 FB60     		str	r3, [r7, #12]
 3721              	.L166:
1193:.\Generated_Source\PSoC4/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3722              		.loc 1 1193 0
 3723 0206 7B69     		ldr	r3, [r7, #20]
 3724 0208 0133     		add	r3, r3, #1
 3725 020a 7B61     		str	r3, [r7, #20]
 3726              	.L142:
1193:.\Generated_Source\PSoC4/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3727              		.loc 1 1193 0 is_stmt 0 discriminator 1
 3728 020c 7B69     		ldr	r3, [r7, #20]
 3729 020e 052B     		cmp	r3, #5
 3730 0210 09DC     		bgt	.L167
1193:.\Generated_Source\PSoC4/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3731              		.loc 1 1193 0 discriminator 2
 3732 0212 FB68     		ldr	r3, [r7, #12]
 3733 0214 002B     		cmp	r3, #0
 3734 0216 06D1     		bne	.L167
1193:.\Generated_Source\PSoC4/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3735              		.loc 1 1193 0 discriminator 1
 3736 0218 3B69     		ldr	r3, [r7, #16]
 3737 021a 7A68     		ldr	r2, [r7, #4]
 3738 021c D318     		add	r3, r2, r3
 3739 021e 1B78     		ldrb	r3, [r3]
 3740 0220 002B     		cmp	r3, #0
 3741 0222 00D0     		beq	.LCB3306
 3742 0224 F8E6     		b	.L168	@long jump
 3743              	.LCB3306:
 3744              	.L167:
1219:.\Generated_Source\PSoC4/ETH.c **** 		}
1220:.\Generated_Source\PSoC4/ETH.c **** 	}
1221:.\Generated_Source\PSoC4/ETH.c **** 	return( result );
 3745              		.loc 1 1221 0 is_stmt 1
 3746 0226 FB68     		ldr	r3, [r7, #12]
1222:.\Generated_Source\PSoC4/ETH.c **** }
 3747              		.loc 1 1222 0
 3748 0228 181C     		mov	r0, r3
 3749 022a BD46     		mov	sp, r7
 3750 022c 06B0     		add	sp, sp, #24
 3751              		@ sp needed for prologue
 3752 022e 80BD     		pop	{r7, pc}
 3753              		.cfi_endproc
 3754              	.LFE47:
 3755              		.size	ETH_ParseMAC, .-ETH_ParseMAC
 3756              		.section	.text.ETH_StringMAC,"ax",%progbits
 3757              		.align	2
 3758              		.global	ETH_StringMAC
 3759              		.code	16
 3760              		.thumb_func
 3761              		.type	ETH_StringMAC, %function
 3762              	ETH_StringMAC:
 3763              	.LFB48:
1223:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1224:.\Generated_Source\PSoC4/ETH.c **** void ETH_StringMAC(uint8 *mac, char *macString)
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 89


1225:.\Generated_Source\PSoC4/ETH.c **** {
 3764              		.loc 1 1225 0
 3765              		.cfi_startproc
 3766 0000 80B5     		push	{r7, lr}
 3767              	.LCFI142:
 3768              		.cfi_def_cfa_offset 8
 3769              		.cfi_offset 7, -8
 3770              		.cfi_offset 14, -4
 3771 0002 84B0     		sub	sp, sp, #16
 3772              	.LCFI143:
 3773              		.cfi_def_cfa_offset 24
 3774 0004 00AF     		add	r7, sp, #0
 3775              	.LCFI144:
 3776              		.cfi_def_cfa_register 7
 3777 0006 7860     		str	r0, [r7, #4]
 3778 0008 3960     		str	r1, [r7]
1226:.\Generated_Source\PSoC4/ETH.c **** 	int digit;
1227:.\Generated_Source\PSoC4/ETH.c **** 	int index;
1228:.\Generated_Source\PSoC4/ETH.c **** 	
1229:.\Generated_Source\PSoC4/ETH.c **** 	/*
1230:.\Generated_Source\PSoC4/ETH.c **** 	 * Convert the MAC address specified in to a string
1231:.\Generated_Source\PSoC4/ETH.c **** 	 */
1232:.\Generated_Source\PSoC4/ETH.c **** 	index = 0;
 3779              		.loc 1 1232 0
 3780 000a 0023     		mov	r3, #0
 3781 000c BB60     		str	r3, [r7, #8]
1233:.\Generated_Source\PSoC4/ETH.c **** 	for(digit=0;digit<6;++digit) {
 3782              		.loc 1 1233 0
 3783 000e 0023     		mov	r3, #0
 3784 0010 FB60     		str	r3, [r7, #12]
 3785 0012 59E0     		b	.L171
 3786              	.L178:
1234:.\Generated_Source\PSoC4/ETH.c **** 		// convert the first nibble
1235:.\Generated_Source\PSoC4/ETH.c **** 		macString[index++] = ETH_BIN2HEX(((mac[digit]>>4)&0x0F));
 3787              		.loc 1 1235 0
 3788 0014 BB68     		ldr	r3, [r7, #8]
 3789 0016 3A68     		ldr	r2, [r7]
 3790 0018 D218     		add	r2, r2, r3
 3791 001a FB68     		ldr	r3, [r7, #12]
 3792 001c 7968     		ldr	r1, [r7, #4]
 3793 001e CB18     		add	r3, r1, r3
 3794 0020 1B78     		ldrb	r3, [r3]
 3795 0022 1B09     		lsr	r3, r3, #4
 3796 0024 DBB2     		uxtb	r3, r3
 3797 0026 191C     		mov	r1, r3
 3798 0028 0F23     		mov	r3, #15
 3799 002a 0B40     		and	r3, r1
 3800 002c 092B     		cmp	r3, #9
 3801 002e 08DD     		ble	.L172
 3802              		.loc 1 1235 0 is_stmt 0 discriminator 1
 3803 0030 FB68     		ldr	r3, [r7, #12]
 3804 0032 7968     		ldr	r1, [r7, #4]
 3805 0034 CB18     		add	r3, r1, r3
 3806 0036 1B78     		ldrb	r3, [r3]
 3807 0038 1B09     		lsr	r3, r3, #4
 3808 003a DBB2     		uxtb	r3, r3
 3809 003c 3733     		add	r3, r3, #55
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 90


 3810 003e DBB2     		uxtb	r3, r3
 3811 0040 07E0     		b	.L173
 3812              	.L172:
 3813              		.loc 1 1235 0 discriminator 2
 3814 0042 FB68     		ldr	r3, [r7, #12]
 3815 0044 7968     		ldr	r1, [r7, #4]
 3816 0046 CB18     		add	r3, r1, r3
 3817 0048 1B78     		ldrb	r3, [r3]
 3818 004a 1B09     		lsr	r3, r3, #4
 3819 004c DBB2     		uxtb	r3, r3
 3820 004e 3033     		add	r3, r3, #48
 3821 0050 DBB2     		uxtb	r3, r3
 3822              	.L173:
 3823              		.loc 1 1235 0 discriminator 3
 3824 0052 1370     		strb	r3, [r2]
 3825 0054 BB68     		ldr	r3, [r7, #8]
 3826 0056 0133     		add	r3, r3, #1
 3827 0058 BB60     		str	r3, [r7, #8]
1236:.\Generated_Source\PSoC4/ETH.c **** 		macString[index++] = ETH_BIN2HEX((mac[digit]&0x0F));
 3828              		.loc 1 1236 0 is_stmt 1 discriminator 3
 3829 005a BB68     		ldr	r3, [r7, #8]
 3830 005c 3A68     		ldr	r2, [r7]
 3831 005e D218     		add	r2, r2, r3
 3832 0060 FB68     		ldr	r3, [r7, #12]
 3833 0062 7968     		ldr	r1, [r7, #4]
 3834 0064 CB18     		add	r3, r1, r3
 3835 0066 1B78     		ldrb	r3, [r3]
 3836 0068 191C     		mov	r1, r3
 3837 006a 0F23     		mov	r3, #15
 3838 006c 0B40     		and	r3, r1
 3839 006e 092B     		cmp	r3, #9
 3840 0070 09DD     		ble	.L174
 3841              		.loc 1 1236 0 is_stmt 0 discriminator 1
 3842 0072 FB68     		ldr	r3, [r7, #12]
 3843 0074 7968     		ldr	r1, [r7, #4]
 3844 0076 CB18     		add	r3, r1, r3
 3845 0078 1978     		ldrb	r1, [r3]
 3846 007a 0F23     		mov	r3, #15
 3847 007c 0B40     		and	r3, r1
 3848 007e DBB2     		uxtb	r3, r3
 3849 0080 3733     		add	r3, r3, #55
 3850 0082 DBB2     		uxtb	r3, r3
 3851 0084 08E0     		b	.L175
 3852              	.L174:
 3853              		.loc 1 1236 0 discriminator 2
 3854 0086 FB68     		ldr	r3, [r7, #12]
 3855 0088 7968     		ldr	r1, [r7, #4]
 3856 008a CB18     		add	r3, r1, r3
 3857 008c 1978     		ldrb	r1, [r3]
 3858 008e 0F23     		mov	r3, #15
 3859 0090 0B40     		and	r3, r1
 3860 0092 DBB2     		uxtb	r3, r3
 3861 0094 3033     		add	r3, r3, #48
 3862 0096 DBB2     		uxtb	r3, r3
 3863              	.L175:
 3864              		.loc 1 1236 0 discriminator 3
 3865 0098 1370     		strb	r3, [r2]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 91


 3866 009a BB68     		ldr	r3, [r7, #8]
 3867 009c 0133     		add	r3, r3, #1
 3868 009e BB60     		str	r3, [r7, #8]
1237:.\Generated_Source\PSoC4/ETH.c **** 		if (digit<5) {
 3869              		.loc 1 1237 0 is_stmt 1 discriminator 3
 3870 00a0 FB68     		ldr	r3, [r7, #12]
 3871 00a2 042B     		cmp	r3, #4
 3872 00a4 08DC     		bgt	.L176
1238:.\Generated_Source\PSoC4/ETH.c **** 			macString[index++] = '-';
 3873              		.loc 1 1238 0
 3874 00a6 BB68     		ldr	r3, [r7, #8]
 3875 00a8 3A68     		ldr	r2, [r7]
 3876 00aa D318     		add	r3, r2, r3
 3877 00ac 2D22     		mov	r2, #45
 3878 00ae 1A70     		strb	r2, [r3]
 3879 00b0 BB68     		ldr	r3, [r7, #8]
 3880 00b2 0133     		add	r3, r3, #1
 3881 00b4 BB60     		str	r3, [r7, #8]
 3882 00b6 04E0     		b	.L177
 3883              	.L176:
1239:.\Generated_Source\PSoC4/ETH.c **** 		}
1240:.\Generated_Source\PSoC4/ETH.c **** 		else {
1241:.\Generated_Source\PSoC4/ETH.c **** 			macString[index] = 0;
 3884              		.loc 1 1241 0
 3885 00b8 BB68     		ldr	r3, [r7, #8]
 3886 00ba 3A68     		ldr	r2, [r7]
 3887 00bc D318     		add	r3, r2, r3
 3888 00be 0022     		mov	r2, #0
 3889 00c0 1A70     		strb	r2, [r3]
 3890              	.L177:
1233:.\Generated_Source\PSoC4/ETH.c **** 	for(digit=0;digit<6;++digit) {
 3891              		.loc 1 1233 0
 3892 00c2 FB68     		ldr	r3, [r7, #12]
 3893 00c4 0133     		add	r3, r3, #1
 3894 00c6 FB60     		str	r3, [r7, #12]
 3895              	.L171:
1233:.\Generated_Source\PSoC4/ETH.c **** 	for(digit=0;digit<6;++digit) {
 3896              		.loc 1 1233 0 is_stmt 0 discriminator 1
 3897 00c8 FB68     		ldr	r3, [r7, #12]
 3898 00ca 052B     		cmp	r3, #5
 3899 00cc A2DD     		ble	.L178
1242:.\Generated_Source\PSoC4/ETH.c **** 		}
1243:.\Generated_Source\PSoC4/ETH.c **** 	}
1244:.\Generated_Source\PSoC4/ETH.c **** }
 3900              		.loc 1 1244 0 is_stmt 1
 3901 00ce BD46     		mov	sp, r7
 3902 00d0 04B0     		add	sp, sp, #16
 3903              		@ sp needed for prologue
 3904 00d2 80BD     		pop	{r7, pc}
 3905              		.cfi_endproc
 3906              	.LFE48:
 3907              		.size	ETH_StringMAC, .-ETH_StringMAC
 3908              		.global	__aeabi_idiv
 3909              		.section	.text.ETH_StringIP,"ax",%progbits
 3910              		.align	2
 3911              		.global	ETH_StringIP
 3912              		.code	16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 92


 3913              		.thumb_func
 3914              		.type	ETH_StringIP, %function
 3915              	ETH_StringIP:
 3916              	.LFB49:
1245:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1246:.\Generated_Source\PSoC4/ETH.c **** void ETH_StringIP( uint32 ip, char *ipString )
1247:.\Generated_Source\PSoC4/ETH.c **** {
 3917              		.loc 1 1247 0
 3918              		.cfi_startproc
 3919 0000 80B5     		push	{r7, lr}
 3920              	.LCFI145:
 3921              		.cfi_def_cfa_offset 8
 3922              		.cfi_offset 7, -8
 3923              		.cfi_offset 14, -4
 3924 0002 88B0     		sub	sp, sp, #32
 3925              	.LCFI146:
 3926              		.cfi_def_cfa_offset 40
 3927 0004 00AF     		add	r7, sp, #0
 3928              	.LCFI147:
 3929              		.cfi_def_cfa_register 7
 3930 0006 7860     		str	r0, [r7, #4]
 3931 0008 3960     		str	r1, [r7]
1248:.\Generated_Source\PSoC4/ETH.c **** 	uint8 *ipBytes;
1249:.\Generated_Source\PSoC4/ETH.c **** 	int index;
1250:.\Generated_Source\PSoC4/ETH.c **** 	int digit;
1251:.\Generated_Source\PSoC4/ETH.c **** 	int work, temp;
1252:.\Generated_Source\PSoC4/ETH.c **** 	
1253:.\Generated_Source\PSoC4/ETH.c **** 	ipBytes = (uint8*)&ip;
 3932              		.loc 1 1253 0
 3933 000a 3B1D     		add	r3, r7, #4
 3934 000c 3B61     		str	r3, [r7, #16]
1254:.\Generated_Source\PSoC4/ETH.c **** 	index = 0;
 3935              		.loc 1 1254 0
 3936 000e 0023     		mov	r3, #0
 3937 0010 FB61     		str	r3, [r7, #28]
1255:.\Generated_Source\PSoC4/ETH.c **** 	for(digit=0;digit<4;++digit) {
 3938              		.loc 1 1255 0
 3939 0012 0023     		mov	r3, #0
 3940 0014 BB61     		str	r3, [r7, #24]
 3941 0016 5BE0     		b	.L180
 3942              	.L185:
1256:.\Generated_Source\PSoC4/ETH.c **** 		work = ipBytes[digit];
 3943              		.loc 1 1256 0
 3944 0018 BB69     		ldr	r3, [r7, #24]
 3945 001a 3A69     		ldr	r2, [r7, #16]
 3946 001c D318     		add	r3, r2, r3
 3947 001e 1B78     		ldrb	r3, [r3]
 3948 0020 7B61     		str	r3, [r7, #20]
1257:.\Generated_Source\PSoC4/ETH.c **** 		if (work >= 100) {
 3949              		.loc 1 1257 0
 3950 0022 7B69     		ldr	r3, [r7, #20]
 3951 0024 632B     		cmp	r3, #99
 3952 0026 18DD     		ble	.L181
1258:.\Generated_Source\PSoC4/ETH.c **** 			temp = work/100;
 3953              		.loc 1 1258 0
 3954 0028 7B69     		ldr	r3, [r7, #20]
 3955 002a 181C     		mov	r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 93


 3956 002c 6421     		mov	r1, #100
 3957 002e FFF7FEFF 		bl	__aeabi_idiv
 3958 0032 031C     		mov	r3, r0
 3959 0034 FB60     		str	r3, [r7, #12]
1259:.\Generated_Source\PSoC4/ETH.c **** 			work -= (temp*100);
 3960              		.loc 1 1259 0
 3961 0036 FB68     		ldr	r3, [r7, #12]
 3962 0038 6422     		mov	r2, #100
 3963 003a 5242     		neg	r2, r2
 3964 003c 5343     		mul	r3, r2
 3965 003e 7A69     		ldr	r2, [r7, #20]
 3966 0040 D318     		add	r3, r2, r3
 3967 0042 7B61     		str	r3, [r7, #20]
1260:.\Generated_Source\PSoC4/ETH.c **** 			ipString[index++] = '0' + temp;
 3968              		.loc 1 1260 0
 3969 0044 FB69     		ldr	r3, [r7, #28]
 3970 0046 3A68     		ldr	r2, [r7]
 3971 0048 D318     		add	r3, r2, r3
 3972 004a FA68     		ldr	r2, [r7, #12]
 3973 004c D2B2     		uxtb	r2, r2
 3974 004e 3032     		add	r2, r2, #48
 3975 0050 D2B2     		uxtb	r2, r2
 3976 0052 1A70     		strb	r2, [r3]
 3977 0054 FB69     		ldr	r3, [r7, #28]
 3978 0056 0133     		add	r3, r3, #1
 3979 0058 FB61     		str	r3, [r7, #28]
 3980              	.L181:
1261:.\Generated_Source\PSoC4/ETH.c **** 		}
1262:.\Generated_Source\PSoC4/ETH.c **** 		if (work >= 10) {
 3981              		.loc 1 1262 0
 3982 005a 7B69     		ldr	r3, [r7, #20]
 3983 005c 092B     		cmp	r3, #9
 3984 005e 18DD     		ble	.L182
1263:.\Generated_Source\PSoC4/ETH.c **** 			temp = work /10;
 3985              		.loc 1 1263 0
 3986 0060 7B69     		ldr	r3, [r7, #20]
 3987 0062 181C     		mov	r0, r3
 3988 0064 0A21     		mov	r1, #10
 3989 0066 FFF7FEFF 		bl	__aeabi_idiv
 3990 006a 031C     		mov	r3, r0
 3991 006c FB60     		str	r3, [r7, #12]
1264:.\Generated_Source\PSoC4/ETH.c **** 			work -= (temp*10);
 3992              		.loc 1 1264 0
 3993 006e FB68     		ldr	r3, [r7, #12]
 3994 0070 0A22     		mov	r2, #10
 3995 0072 5242     		neg	r2, r2
 3996 0074 5343     		mul	r3, r2
 3997 0076 7A69     		ldr	r2, [r7, #20]
 3998 0078 D318     		add	r3, r2, r3
 3999 007a 7B61     		str	r3, [r7, #20]
1265:.\Generated_Source\PSoC4/ETH.c **** 			ipString[index++] = '0'+temp;
 4000              		.loc 1 1265 0
 4001 007c FB69     		ldr	r3, [r7, #28]
 4002 007e 3A68     		ldr	r2, [r7]
 4003 0080 D318     		add	r3, r2, r3
 4004 0082 FA68     		ldr	r2, [r7, #12]
 4005 0084 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 94


 4006 0086 3032     		add	r2, r2, #48
 4007 0088 D2B2     		uxtb	r2, r2
 4008 008a 1A70     		strb	r2, [r3]
 4009 008c FB69     		ldr	r3, [r7, #28]
 4010 008e 0133     		add	r3, r3, #1
 4011 0090 FB61     		str	r3, [r7, #28]
 4012              	.L182:
1266:.\Generated_Source\PSoC4/ETH.c **** 		}
1267:.\Generated_Source\PSoC4/ETH.c **** 		ipString[index++] = '0'+work;
 4013              		.loc 1 1267 0
 4014 0092 FB69     		ldr	r3, [r7, #28]
 4015 0094 3A68     		ldr	r2, [r7]
 4016 0096 D318     		add	r3, r2, r3
 4017 0098 7A69     		ldr	r2, [r7, #20]
 4018 009a D2B2     		uxtb	r2, r2
 4019 009c 3032     		add	r2, r2, #48
 4020 009e D2B2     		uxtb	r2, r2
 4021 00a0 1A70     		strb	r2, [r3]
 4022 00a2 FB69     		ldr	r3, [r7, #28]
 4023 00a4 0133     		add	r3, r3, #1
 4024 00a6 FB61     		str	r3, [r7, #28]
1268:.\Generated_Source\PSoC4/ETH.c **** 		if (digit <3) {
 4025              		.loc 1 1268 0
 4026 00a8 BB69     		ldr	r3, [r7, #24]
 4027 00aa 022B     		cmp	r3, #2
 4028 00ac 08DC     		bgt	.L183
1269:.\Generated_Source\PSoC4/ETH.c **** 			ipString[index++] = '.';
 4029              		.loc 1 1269 0
 4030 00ae FB69     		ldr	r3, [r7, #28]
 4031 00b0 3A68     		ldr	r2, [r7]
 4032 00b2 D318     		add	r3, r2, r3
 4033 00b4 2E22     		mov	r2, #46
 4034 00b6 1A70     		strb	r2, [r3]
 4035 00b8 FB69     		ldr	r3, [r7, #28]
 4036 00ba 0133     		add	r3, r3, #1
 4037 00bc FB61     		str	r3, [r7, #28]
 4038 00be 04E0     		b	.L184
 4039              	.L183:
1270:.\Generated_Source\PSoC4/ETH.c **** 		}
1271:.\Generated_Source\PSoC4/ETH.c **** 		else {
1272:.\Generated_Source\PSoC4/ETH.c **** 			ipString[index] = 0;
 4040              		.loc 1 1272 0
 4041 00c0 FB69     		ldr	r3, [r7, #28]
 4042 00c2 3A68     		ldr	r2, [r7]
 4043 00c4 D318     		add	r3, r2, r3
 4044 00c6 0022     		mov	r2, #0
 4045 00c8 1A70     		strb	r2, [r3]
 4046              	.L184:
1255:.\Generated_Source\PSoC4/ETH.c **** 	for(digit=0;digit<4;++digit) {
 4047              		.loc 1 1255 0
 4048 00ca BB69     		ldr	r3, [r7, #24]
 4049 00cc 0133     		add	r3, r3, #1
 4050 00ce BB61     		str	r3, [r7, #24]
 4051              	.L180:
1255:.\Generated_Source\PSoC4/ETH.c **** 	for(digit=0;digit<4;++digit) {
 4052              		.loc 1 1255 0 is_stmt 0 discriminator 1
 4053 00d0 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 95


 4054 00d2 032B     		cmp	r3, #3
 4055 00d4 A0DD     		ble	.L185
1273:.\Generated_Source\PSoC4/ETH.c **** 		}
1274:.\Generated_Source\PSoC4/ETH.c **** 	}
1275:.\Generated_Source\PSoC4/ETH.c **** }
 4056              		.loc 1 1275 0 is_stmt 1
 4057 00d6 BD46     		mov	sp, r7
 4058 00d8 08B0     		add	sp, sp, #32
 4059              		@ sp needed for prologue
 4060 00da 80BD     		pop	{r7, pc}
 4061              		.cfi_endproc
 4062              	.LFE49:
 4063              		.size	ETH_StringIP, .-ETH_StringIP
 4064              		.section	.text.ETH_SetIP,"ax",%progbits
 4065              		.align	2
 4066              		.global	ETH_SetIP
 4067              		.code	16
 4068              		.thumb_func
 4069              		.type	ETH_SetIP, %function
 4070              	ETH_SetIP:
 4071              	.LFB50:
1276:.\Generated_Source\PSoC4/ETH.c **** 
1277:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1278:.\Generated_Source\PSoC4/ETH.c **** uint8
1279:.\Generated_Source\PSoC4/ETH.c **** ETH_SetIP( uint32 ip )
1280:.\Generated_Source\PSoC4/ETH.c **** {
 4072              		.loc 1 1280 0
 4073              		.cfi_startproc
 4074 0000 80B5     		push	{r7, lr}
 4075              	.LCFI148:
 4076              		.cfi_def_cfa_offset 8
 4077              		.cfi_offset 7, -8
 4078              		.cfi_offset 14, -4
 4079 0002 84B0     		sub	sp, sp, #16
 4080              	.LCFI149:
 4081              		.cfi_def_cfa_offset 24
 4082 0004 00AF     		add	r7, sp, #0
 4083              	.LCFI150:
 4084              		.cfi_def_cfa_register 7
 4085 0006 7860     		str	r0, [r7, #4]
1281:.\Generated_Source\PSoC4/ETH.c **** 	uint8 ok = 0;
 4086              		.loc 1 1281 0
 4087 0008 3B1C     		mov	r3, r7
 4088 000a 0F33     		add	r3, r3, #15
 4089 000c 0022     		mov	r2, #0
 4090 000e 1A70     		strb	r2, [r3]
1282:.\Generated_Source\PSoC4/ETH.c **** 	
1283:.\Generated_Source\PSoC4/ETH.c **** 	if ( ( ip != 0) && (ip != 0xFFFFFFFF) ) {
 4091              		.loc 1 1283 0
 4092 0010 7B68     		ldr	r3, [r7, #4]
 4093 0012 002B     		cmp	r3, #0
 4094 0014 0AD0     		beq	.L187
 4095              		.loc 1 1283 0 is_stmt 0 discriminator 1
 4096 0016 7B68     		ldr	r3, [r7, #4]
 4097 0018 0133     		add	r3, r3, #1
 4098 001a 07D0     		beq	.L187
1284:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSourceIP( ip );
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 96


 4099              		.loc 1 1284 0 is_stmt 1
 4100 001c 7B68     		ldr	r3, [r7, #4]
 4101 001e 181C     		mov	r0, r3
 4102 0020 FFF7FEFF 		bl	ETH_SetSourceIP
1285:.\Generated_Source\PSoC4/ETH.c **** 		ok = 0xFF;
 4103              		.loc 1 1285 0
 4104 0024 3B1C     		mov	r3, r7
 4105 0026 0F33     		add	r3, r3, #15
 4106 0028 FF22     		mov	r2, #255
 4107 002a 1A70     		strb	r2, [r3]
 4108              	.L187:
1286:.\Generated_Source\PSoC4/ETH.c **** 	}
1287:.\Generated_Source\PSoC4/ETH.c **** 	
1288:.\Generated_Source\PSoC4/ETH.c **** 	return ok;
 4109              		.loc 1 1288 0
 4110 002c 3B1C     		mov	r3, r7
 4111 002e 0F33     		add	r3, r3, #15
 4112 0030 1B78     		ldrb	r3, [r3]
1289:.\Generated_Source\PSoC4/ETH.c **** }
 4113              		.loc 1 1289 0
 4114 0032 181C     		mov	r0, r3
 4115 0034 BD46     		mov	sp, r7
 4116 0036 04B0     		add	sp, sp, #16
 4117              		@ sp needed for prologue
 4118 0038 80BD     		pop	{r7, pc}
 4119              		.cfi_endproc
 4120              	.LFE50:
 4121              		.size	ETH_SetIP, .-ETH_SetIP
 4122 003a C046     		.section	.text.ETH_GetIP,"ax",%progbits
 4123              		.align	2
 4124              		.global	ETH_GetIP
 4125              		.code	16
 4126              		.thumb_func
 4127              		.type	ETH_GetIP, %function
 4128              	ETH_GetIP:
 4129              	.LFB51:
1290:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1291:.\Generated_Source\PSoC4/ETH.c **** uint32
1292:.\Generated_Source\PSoC4/ETH.c **** ETH_GetIP( void )
1293:.\Generated_Source\PSoC4/ETH.c **** {
 4130              		.loc 1 1293 0
 4131              		.cfi_startproc
 4132 0000 80B5     		push	{r7, lr}
 4133              	.LCFI151:
 4134              		.cfi_def_cfa_offset 8
 4135              		.cfi_offset 7, -8
 4136              		.cfi_offset 14, -4
 4137 0002 00AF     		add	r7, sp, #0
 4138              	.LCFI152:
 4139              		.cfi_def_cfa_register 7
1294:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_GetSourceIP();
 4140              		.loc 1 1294 0
 4141 0004 FFF7FEFF 		bl	ETH_GetSourceIP
 4142 0008 031C     		mov	r3, r0
1295:.\Generated_Source\PSoC4/ETH.c **** }
 4143              		.loc 1 1295 0
 4144 000a 181C     		mov	r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 97


 4145 000c BD46     		mov	sp, r7
 4146              		@ sp needed for prologue
 4147 000e 80BD     		pop	{r7, pc}
 4148              		.cfi_endproc
 4149              	.LFE51:
 4150              		.size	ETH_GetIP, .-ETH_GetIP
 4151              		.section	.text.ETH_SetMAC,"ax",%progbits
 4152              		.align	2
 4153              		.global	ETH_SetMAC
 4154              		.code	16
 4155              		.thumb_func
 4156              		.type	ETH_SetMAC, %function
 4157              	ETH_SetMAC:
 4158              	.LFB52:
1296:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1297:.\Generated_Source\PSoC4/ETH.c **** void
1298:.\Generated_Source\PSoC4/ETH.c **** ETH_SetMAC( uint8* mac )
1299:.\Generated_Source\PSoC4/ETH.c **** {
 4159              		.loc 1 1299 0
 4160              		.cfi_startproc
 4161 0000 80B5     		push	{r7, lr}
 4162              	.LCFI153:
 4163              		.cfi_def_cfa_offset 8
 4164              		.cfi_offset 7, -8
 4165              		.cfi_offset 14, -4
 4166 0002 82B0     		sub	sp, sp, #8
 4167              	.LCFI154:
 4168              		.cfi_def_cfa_offset 16
 4169 0004 00AF     		add	r7, sp, #0
 4170              	.LCFI155:
 4171              		.cfi_def_cfa_register 7
 4172 0006 7860     		str	r0, [r7, #4]
1300:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSourceMAC( mac );
 4173              		.loc 1 1300 0
 4174 0008 7B68     		ldr	r3, [r7, #4]
 4175 000a 181C     		mov	r0, r3
 4176 000c FFF7FEFF 		bl	ETH_SetSourceMAC
1301:.\Generated_Source\PSoC4/ETH.c **** }
 4177              		.loc 1 1301 0
 4178 0010 BD46     		mov	sp, r7
 4179 0012 02B0     		add	sp, sp, #8
 4180              		@ sp needed for prologue
 4181 0014 80BD     		pop	{r7, pc}
 4182              		.cfi_endproc
 4183              	.LFE52:
 4184              		.size	ETH_SetMAC, .-ETH_SetMAC
 4185 0016 C046     		.section	.text.ETH_GetMAC,"ax",%progbits
 4186              		.align	2
 4187              		.global	ETH_GetMAC
 4188              		.code	16
 4189              		.thumb_func
 4190              		.type	ETH_GetMAC, %function
 4191              	ETH_GetMAC:
 4192              	.LFB53:
1302:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1303:.\Generated_Source\PSoC4/ETH.c **** void
1304:.\Generated_Source\PSoC4/ETH.c **** ETH_GetMAC( uint8* mac )
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 98


1305:.\Generated_Source\PSoC4/ETH.c **** {
 4193              		.loc 1 1305 0
 4194              		.cfi_startproc
 4195 0000 80B5     		push	{r7, lr}
 4196              	.LCFI156:
 4197              		.cfi_def_cfa_offset 8
 4198              		.cfi_offset 7, -8
 4199              		.cfi_offset 14, -4
 4200 0002 82B0     		sub	sp, sp, #8
 4201              	.LCFI157:
 4202              		.cfi_def_cfa_offset 16
 4203 0004 00AF     		add	r7, sp, #0
 4204              	.LCFI158:
 4205              		.cfi_def_cfa_register 7
 4206 0006 7860     		str	r0, [r7, #4]
1306:.\Generated_Source\PSoC4/ETH.c **** 	ETH_GetSourceMAC( mac );
 4207              		.loc 1 1306 0
 4208 0008 7B68     		ldr	r3, [r7, #4]
 4209 000a 181C     		mov	r0, r3
 4210 000c FFF7FEFF 		bl	ETH_GetSourceMAC
1307:.\Generated_Source\PSoC4/ETH.c **** }
 4211              		.loc 1 1307 0
 4212 0010 BD46     		mov	sp, r7
 4213 0012 02B0     		add	sp, sp, #8
 4214              		@ sp needed for prologue
 4215 0014 80BD     		pop	{r7, pc}
 4216              		.cfi_endproc
 4217              	.LFE53:
 4218              		.size	ETH_GetMAC, .-ETH_GetMAC
 4219 0016 C046     		.section	.text.ETH_SocketOpen,"ax",%progbits
 4220              		.align	2
 4221              		.global	ETH_SocketOpen
 4222              		.code	16
 4223              		.thumb_func
 4224              		.type	ETH_SocketOpen, %function
 4225              	ETH_SocketOpen:
 4226              	.LFB54:
1308:.\Generated_Source\PSoC4/ETH.c **** #endif
1309:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
1310:.\Generated_Source\PSoC4/ETH.c **** /* Socket Controls */
1311:.\Generated_Source\PSoC4/ETH.c **** #if (1)
1312:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1313:.\Generated_Source\PSoC4/ETH.c **** uint8
1314:.\Generated_Source\PSoC4/ETH.c **** ETH_SocketOpen( uint8 Protocol, uint16 port, uint8 flags )
1315:.\Generated_Source\PSoC4/ETH.c **** {
 4227              		.loc 1 1315 0
 4228              		.cfi_startproc
 4229 0000 80B5     		push	{r7, lr}
 4230              	.LCFI159:
 4231              		.cfi_def_cfa_offset 8
 4232              		.cfi_offset 7, -8
 4233              		.cfi_offset 14, -4
 4234 0002 84B0     		sub	sp, sp, #16
 4235              	.LCFI160:
 4236              		.cfi_def_cfa_offset 24
 4237 0004 00AF     		add	r7, sp, #0
 4238              	.LCFI161:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 99


 4239              		.cfi_def_cfa_register 7
 4240 0006 FB1D     		add	r3, r7, #7
 4241 0008 1870     		strb	r0, [r3]
 4242 000a 3B1D     		add	r3, r7, #4
 4243 000c 1980     		strh	r1, [r3]
 4244 000e BB1D     		add	r3, r7, #6
 4245 0010 1A70     		strb	r2, [r3]
1316:.\Generated_Source\PSoC4/ETH.c **** 	uint8 socket;
1317:.\Generated_Source\PSoC4/ETH.c **** 	int index;
1318:.\Generated_Source\PSoC4/ETH.c **** 	
1319:.\Generated_Source\PSoC4/ETH.c **** 	/*
1320:.\Generated_Source\PSoC4/ETH.c **** 	 * This function will look for the first available socket for allocation
1321:.\Generated_Source\PSoC4/ETH.c **** 	 * using the defined protocol.  The socket configuration will then be
1322:.\Generated_Source\PSoC4/ETH.c **** 	 * initialized and saved in the allocation table. If the requested socket
1323:.\Generated_Source\PSoC4/ETH.c **** 	 * can not be initialized, 0xFF is returned
1324:.\Generated_Source\PSoC4/ETH.c **** 	 */
1325:.\Generated_Source\PSoC4/ETH.c **** 	socket = 0xFF;
 4246              		.loc 1 1325 0
 4247 0012 3B1C     		mov	r3, r7
 4248 0014 0F33     		add	r3, r3, #15
 4249 0016 FF22     		mov	r2, #255
 4250 0018 1A70     		strb	r2, [r3]
1326:.\Generated_Source\PSoC4/ETH.c **** 	/* find the first available socket to open, and how much memory is available */
1327:.\Generated_Source\PSoC4/ETH.c **** 	for( index = 0;index<ETH_MAX_SOCKET;++index) {
 4251              		.loc 1 1327 0
 4252 001a 0023     		mov	r3, #0
 4253 001c BB60     		str	r3, [r7, #8]
 4254 001e 18E0     		b	.L194
 4255              	.L197:
1328:.\Generated_Source\PSoC4/ETH.c **** 		if ( (socket == 0xFF) && (ETH_SocketConfig[index].Protocol == 0) ) {
 4256              		.loc 1 1328 0
 4257 0020 3B1C     		mov	r3, r7
 4258 0022 0F33     		add	r3, r3, #15
 4259 0024 1B78     		ldrb	r3, [r3]
 4260 0026 FF2B     		cmp	r3, #255
 4261 0028 10D1     		bne	.L195
 4262              		.loc 1 1328 0 is_stmt 0 discriminator 1
 4263 002a 4E4B     		ldr	r3, .L200
 4264 002c BA68     		ldr	r2, [r7, #8]
 4265 002e D200     		lsl	r2, r2, #3
 4266 0030 D35C     		ldrb	r3, [r2, r3]
 4267 0032 002B     		cmp	r3, #0
 4268 0034 0AD1     		bne	.L195
1329:.\Generated_Source\PSoC4/ETH.c **** 			/*
1330:.\Generated_Source\PSoC4/ETH.c **** 			 * Since the W5100 does not support MAC mode commucications, check to see
1331:.\Generated_Source\PSoC4/ETH.c **** 			 * if the socket that is free was socket 0.  If the mac protocol was
1332:.\Generated_Source\PSoC4/ETH.c **** 			 * selected, ignore socket 0
1333:.\Generated_Source\PSoC4/ETH.c **** 			 */
1334:.\Generated_Source\PSoC4/ETH.c **** 			if ( (Protocol != ETH_PROTO_MAC) || (index != 0) ) {
 4269              		.loc 1 1334 0 is_stmt 1
 4270 0036 FB1D     		add	r3, r7, #7
 4271 0038 1B78     		ldrb	r3, [r3]
 4272 003a 042B     		cmp	r3, #4
 4273 003c 02D1     		bne	.L196
 4274              		.loc 1 1334 0 is_stmt 0 discriminator 1
 4275 003e BB68     		ldr	r3, [r7, #8]
 4276 0040 002B     		cmp	r3, #0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 100


 4277 0042 03D0     		beq	.L195
 4278              	.L196:
1335:.\Generated_Source\PSoC4/ETH.c **** 				/* store this socket number for allocation */
1336:.\Generated_Source\PSoC4/ETH.c **** 				socket = index;
 4279              		.loc 1 1336 0 is_stmt 1
 4280 0044 3B1C     		mov	r3, r7
 4281 0046 0F33     		add	r3, r3, #15
 4282 0048 BA68     		ldr	r2, [r7, #8]
 4283 004a 1A70     		strb	r2, [r3]
 4284              	.L195:
1327:.\Generated_Source\PSoC4/ETH.c **** 	for( index = 0;index<ETH_MAX_SOCKET;++index) {
 4285              		.loc 1 1327 0
 4286 004c BB68     		ldr	r3, [r7, #8]
 4287 004e 0133     		add	r3, r3, #1
 4288 0050 BB60     		str	r3, [r7, #8]
 4289              	.L194:
1327:.\Generated_Source\PSoC4/ETH.c **** 	for( index = 0;index<ETH_MAX_SOCKET;++index) {
 4290              		.loc 1 1327 0 is_stmt 0 discriminator 1
 4291 0052 BB68     		ldr	r3, [r7, #8]
 4292 0054 032B     		cmp	r3, #3
 4293 0056 E3DD     		ble	.L197
1337:.\Generated_Source\PSoC4/ETH.c **** 			}
1338:.\Generated_Source\PSoC4/ETH.c **** 		}
1339:.\Generated_Source\PSoC4/ETH.c **** 	}
1340:.\Generated_Source\PSoC4/ETH.c **** 	if (socket != 0xFF ) {
 4294              		.loc 1 1340 0 is_stmt 1
 4295 0058 3B1C     		mov	r3, r7
 4296 005a 0F33     		add	r3, r3, #15
 4297 005c 1B78     		ldrb	r3, [r3]
 4298 005e FF2B     		cmp	r3, #255
 4299 0060 78D0     		beq	.L198
1341:.\Generated_Source\PSoC4/ETH.c **** 		/* Store the socket information in the allocation table */
1342:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketConfig[socket].Protocol = Protocol;
 4300              		.loc 1 1342 0
 4301 0062 3B1C     		mov	r3, r7
 4302 0064 0F33     		add	r3, r3, #15
 4303 0066 1A78     		ldrb	r2, [r3]
 4304 0068 3E4B     		ldr	r3, .L200
 4305 006a D200     		lsl	r2, r2, #3
 4306 006c F91D     		add	r1, r7, #7
 4307 006e 0978     		ldrb	r1, [r1]
 4308 0070 D154     		strb	r1, [r2, r3]
1343:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketConfig[socket].SocketFlags = flags;
 4309              		.loc 1 1343 0
 4310 0072 3B1C     		mov	r3, r7
 4311 0074 0F33     		add	r3, r3, #15
 4312 0076 1B78     		ldrb	r3, [r3]
 4313 0078 3A49     		ldr	r1, .L200
 4314 007a DB00     		lsl	r3, r3, #3
 4315 007c BA1D     		add	r2, r7, #6
 4316 007e CB18     		add	r3, r1, r3
 4317 0080 1278     		ldrb	r2, [r2]
 4318 0082 5A70     		strb	r2, [r3, #1]
1344:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketConfig[socket].SourcePort = port;
 4319              		.loc 1 1344 0
 4320 0084 3B1C     		mov	r3, r7
 4321 0086 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 101


 4322 0088 1B78     		ldrb	r3, [r3]
 4323 008a 3649     		ldr	r1, .L200
 4324 008c DB00     		lsl	r3, r3, #3
 4325 008e 3A1D     		add	r2, r7, #4
 4326 0090 CB18     		add	r3, r1, r3
 4327 0092 1288     		ldrh	r2, [r2]
 4328 0094 5A80     		strh	r2, [r3, #2]
1345:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketConfig[socket].ServerFlag = 0;
 4329              		.loc 1 1345 0
 4330 0096 3B1C     		mov	r3, r7
 4331 0098 0F33     		add	r3, r3, #15
 4332 009a 1B78     		ldrb	r3, [r3]
 4333 009c 314A     		ldr	r2, .L200
 4334 009e DB00     		lsl	r3, r3, #3
 4335 00a0 D318     		add	r3, r2, r3
 4336 00a2 0022     		mov	r2, #0
 4337 00a4 1A71     		strb	r2, [r3, #4]
1346:.\Generated_Source\PSoC4/ETH.c **** 
1347:.\Generated_Source\PSoC4/ETH.c **** 		/* Set the socket memory size */
1348:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketTxMemSize(socket, ETH_MEM_2K); /* 2K each */
 4338              		.loc 1 1348 0
 4339 00a6 3B1C     		mov	r3, r7
 4340 00a8 0F33     		add	r3, r3, #15
 4341 00aa 1B78     		ldrb	r3, [r3]
 4342 00ac 181C     		mov	r0, r3
 4343 00ae 0121     		mov	r1, #1
 4344 00b0 FFF7FEFF 		bl	ETH_SetSocketTxMemSize
1349:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketRxMemSize(socket, ETH_MEM_2K); /* 2K Each */
 4345              		.loc 1 1349 0
 4346 00b4 3B1C     		mov	r3, r7
 4347 00b6 0F33     		add	r3, r3, #15
 4348 00b8 1B78     		ldrb	r3, [r3]
 4349 00ba 181C     		mov	r0, r3
 4350 00bc 0121     		mov	r1, #1
 4351 00be FFF7FEFF 		bl	ETH_SetSocketRxMemSize
1350:.\Generated_Source\PSoC4/ETH.c **** 		/* Initialize the socket memeory pointers */
1351:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketRxReadPtr( socket, ETH_SOCKET_RX_BASE[index] );
 4352              		.loc 1 1351 0
 4353 00c2 294B     		ldr	r3, .L200+4
 4354 00c4 BA68     		ldr	r2, [r7, #8]
 4355 00c6 5200     		lsl	r2, r2, #1
 4356 00c8 D35A     		ldrh	r3, [r2, r3]
 4357 00ca 3A1C     		mov	r2, r7
 4358 00cc 0F32     		add	r2, r2, #15
 4359 00ce 1278     		ldrb	r2, [r2]
 4360 00d0 101C     		mov	r0, r2
 4361 00d2 191C     		mov	r1, r3
 4362 00d4 FFF7FEFF 		bl	ETH_SetSocketRxReadPtr
1352:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketRxWritePtr( socket, ETH_SOCKET_RX_BASE[index] );
 4363              		.loc 1 1352 0
 4364 00d8 234B     		ldr	r3, .L200+4
 4365 00da BA68     		ldr	r2, [r7, #8]
 4366 00dc 5200     		lsl	r2, r2, #1
 4367 00de D35A     		ldrh	r3, [r2, r3]
 4368 00e0 3A1C     		mov	r2, r7
 4369 00e2 0F32     		add	r2, r2, #15
 4370 00e4 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 102


 4371 00e6 101C     		mov	r0, r2
 4372 00e8 191C     		mov	r1, r3
 4373 00ea FFF7FEFF 		bl	ETH_SetSocketRxWritePtr
1353:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketTxReadPtr( socket, ETH_SOCKET_TX_BASE[index] );
 4374              		.loc 1 1353 0
 4375 00ee 1F4B     		ldr	r3, .L200+8
 4376 00f0 BA68     		ldr	r2, [r7, #8]
 4377 00f2 5200     		lsl	r2, r2, #1
 4378 00f4 D35A     		ldrh	r3, [r2, r3]
 4379 00f6 3A1C     		mov	r2, r7
 4380 00f8 0F32     		add	r2, r2, #15
 4381 00fa 1278     		ldrb	r2, [r2]
 4382 00fc 101C     		mov	r0, r2
 4383 00fe 191C     		mov	r1, r3
 4384 0100 FFF7FEFF 		bl	ETH_SetSocketTxReadPtr
1354:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketTxWritePtr( socket, ETH_SOCKET_TX_BASE[index] );
 4385              		.loc 1 1354 0
 4386 0104 194B     		ldr	r3, .L200+8
 4387 0106 BA68     		ldr	r2, [r7, #8]
 4388 0108 5200     		lsl	r2, r2, #1
 4389 010a D35A     		ldrh	r3, [r2, r3]
 4390 010c 3A1C     		mov	r2, r7
 4391 010e 0F32     		add	r2, r2, #15
 4392 0110 1278     		ldrb	r2, [r2]
 4393 0112 101C     		mov	r0, r2
 4394 0114 191C     		mov	r1, r3
 4395 0116 FFF7FEFF 		bl	ETH_SetSocketTxWritePtr
1355:.\Generated_Source\PSoC4/ETH.c **** 
1356:.\Generated_Source\PSoC4/ETH.c **** 		/* Send the socket open with the correct protocol information */
1357:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketSourcePort( socket, port );
 4396              		.loc 1 1357 0
 4397 011a 3B1C     		mov	r3, r7
 4398 011c 0F33     		add	r3, r3, #15
 4399 011e 1A78     		ldrb	r2, [r3]
 4400 0120 3B1D     		add	r3, r7, #4
 4401 0122 1B88     		ldrh	r3, [r3]
 4402 0124 101C     		mov	r0, r2
 4403 0126 191C     		mov	r1, r3
 4404 0128 FFF7FEFF 		bl	ETH_SetSocketSourcePort
1358:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketMode( socket, Protocol | flags );
 4405              		.loc 1 1358 0
 4406 012c FA1D     		add	r2, r7, #7
 4407 012e BB1D     		add	r3, r7, #6
 4408 0130 1278     		ldrb	r2, [r2]
 4409 0132 1B78     		ldrb	r3, [r3]
 4410 0134 1343     		orr	r3, r2
 4411 0136 DBB2     		uxtb	r3, r3
 4412 0138 3A1C     		mov	r2, r7
 4413 013a 0F32     		add	r2, r2, #15
 4414 013c 1278     		ldrb	r2, [r2]
 4415 013e 101C     		mov	r0, r2
 4416 0140 191C     		mov	r1, r3
 4417 0142 FFF7FEFF 		bl	ETH_SetSocketMode
1359:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 1 );
 4418              		.loc 1 1359 0
 4419 0146 3B1C     		mov	r3, r7
 4420 0148 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 103


 4421 014a 1B78     		ldrb	r3, [r3]
 4422 014c 181C     		mov	r0, r3
 4423 014e 0121     		mov	r1, #1
 4424 0150 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
 4425              	.L198:
1360:.\Generated_Source\PSoC4/ETH.c **** 		
1361:.\Generated_Source\PSoC4/ETH.c **** 	}
1362:.\Generated_Source\PSoC4/ETH.c **** 	return socket;
 4426              		.loc 1 1362 0
 4427 0154 3B1C     		mov	r3, r7
 4428 0156 0F33     		add	r3, r3, #15
 4429 0158 1B78     		ldrb	r3, [r3]
1363:.\Generated_Source\PSoC4/ETH.c **** }
 4430              		.loc 1 1363 0
 4431 015a 181C     		mov	r0, r3
 4432 015c BD46     		mov	sp, r7
 4433 015e 04B0     		add	sp, sp, #16
 4434              		@ sp needed for prologue
 4435 0160 80BD     		pop	{r7, pc}
 4436              	.L201:
 4437 0162 C046     		.align	2
 4438              	.L200:
 4439 0164 00000000 		.word	ETH_SocketConfig
 4440 0168 00000000 		.word	ETH_SOCKET_RX_BASE
 4441 016c 00000000 		.word	ETH_SOCKET_TX_BASE
 4442              		.cfi_endproc
 4443              	.LFE54:
 4444              		.size	ETH_SocketOpen, .-ETH_SocketOpen
 4445              		.section	.text.ETH_SocketClose,"ax",%progbits
 4446              		.align	2
 4447              		.global	ETH_SocketClose
 4448              		.code	16
 4449              		.thumb_func
 4450              		.type	ETH_SocketClose, %function
 4451              	ETH_SocketClose:
 4452              	.LFB55:
1364:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1365:.\Generated_Source\PSoC4/ETH.c **** void
1366:.\Generated_Source\PSoC4/ETH.c **** ETH_SocketClose( uint8 socket )
1367:.\Generated_Source\PSoC4/ETH.c **** {
 4453              		.loc 1 1367 0
 4454              		.cfi_startproc
 4455 0000 80B5     		push	{r7, lr}
 4456              	.LCFI162:
 4457              		.cfi_def_cfa_offset 8
 4458              		.cfi_offset 7, -8
 4459              		.cfi_offset 14, -4
 4460 0002 82B0     		sub	sp, sp, #8
 4461              	.LCFI163:
 4462              		.cfi_def_cfa_offset 16
 4463 0004 00AF     		add	r7, sp, #0
 4464              	.LCFI164:
 4465              		.cfi_def_cfa_register 7
 4466 0006 021C     		mov	r2, r0
 4467 0008 FB1D     		add	r3, r7, #7
 4468 000a 1A70     		strb	r2, [r3]
1368:.\Generated_Source\PSoC4/ETH.c **** 	/*
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 104


1369:.\Generated_Source\PSoC4/ETH.c **** 	 * Set the socket allocation to empty, and issue the close command
1370:.\Generated_Source\PSoC4/ETH.c **** 	 * to the socket
1371:.\Generated_Source\PSoC4/ETH.c **** 	 */
1372:.\Generated_Source\PSoC4/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 4469              		.loc 1 1372 0
 4470 000c FB1D     		add	r3, r7, #7
 4471 000e 1B78     		ldrb	r3, [r3]
 4472 0010 032B     		cmp	r3, #3
 4473 0012 18D8     		bhi	.L202
1373:.\Generated_Source\PSoC4/ETH.c **** 		/* clear the socket memory allocations */
1374:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketConfig[socket].Protocol = 0;
 4474              		.loc 1 1374 0
 4475 0014 FB1D     		add	r3, r7, #7
 4476 0016 1A78     		ldrb	r2, [r3]
 4477 0018 0C4B     		ldr	r3, .L204
 4478 001a D200     		lsl	r2, r2, #3
 4479 001c 0021     		mov	r1, #0
 4480 001e D154     		strb	r1, [r2, r3]
1375:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketConfig[socket].SocketFlags = 0;
 4481              		.loc 1 1375 0
 4482 0020 FB1D     		add	r3, r7, #7
 4483 0022 1B78     		ldrb	r3, [r3]
 4484 0024 094A     		ldr	r2, .L204
 4485 0026 DB00     		lsl	r3, r3, #3
 4486 0028 D318     		add	r3, r2, r3
 4487 002a 0022     		mov	r2, #0
 4488 002c 5A70     		strb	r2, [r3, #1]
1376:.\Generated_Source\PSoC4/ETH.c **** 		/* close the socket */
1377:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x10 );
 4489              		.loc 1 1377 0
 4490 002e FB1D     		add	r3, r7, #7
 4491 0030 1B78     		ldrb	r3, [r3]
 4492 0032 181C     		mov	r0, r3
 4493 0034 1021     		mov	r1, #16
 4494 0036 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1378:.\Generated_Source\PSoC4/ETH.c **** 		/* Clear pending Interrupts */
1379:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketIR( socket, 0xFF);
 4495              		.loc 1 1379 0
 4496 003a FB1D     		add	r3, r7, #7
 4497 003c 1B78     		ldrb	r3, [r3]
 4498 003e 181C     		mov	r0, r3
 4499 0040 FF21     		mov	r1, #255
 4500 0042 FFF7FEFF 		bl	ETH_SetSocketIR
 4501              	.L202:
1380:.\Generated_Source\PSoC4/ETH.c **** 	}
1381:.\Generated_Source\PSoC4/ETH.c **** }
 4502              		.loc 1 1381 0
 4503 0046 BD46     		mov	sp, r7
 4504 0048 02B0     		add	sp, sp, #8
 4505              		@ sp needed for prologue
 4506 004a 80BD     		pop	{r7, pc}
 4507              	.L205:
 4508              		.align	2
 4509              	.L204:
 4510 004c 00000000 		.word	ETH_SocketConfig
 4511              		.cfi_endproc
 4512              	.LFE55:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 105


 4513              		.size	ETH_SocketClose, .-ETH_SocketClose
 4514              		.section	.text.ETH_SocketProcessConnections,"ax",%progbits
 4515              		.align	2
 4516              		.global	ETH_SocketProcessConnections
 4517              		.code	16
 4518              		.thumb_func
 4519              		.type	ETH_SocketProcessConnections, %function
 4520              	ETH_SocketProcessConnections:
 4521              	.LFB56:
1382:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1383:.\Generated_Source\PSoC4/ETH.c **** uint8
1384:.\Generated_Source\PSoC4/ETH.c **** ETH_SocketProcessConnections( uint8 socket )
1385:.\Generated_Source\PSoC4/ETH.c **** {
 4522              		.loc 1 1385 0
 4523              		.cfi_startproc
 4524 0000 90B5     		push	{r4, r7, lr}
 4525              	.LCFI165:
 4526              		.cfi_def_cfa_offset 12
 4527              		.cfi_offset 4, -12
 4528              		.cfi_offset 7, -8
 4529              		.cfi_offset 14, -4
 4530 0002 85B0     		sub	sp, sp, #20
 4531              	.LCFI166:
 4532              		.cfi_def_cfa_offset 32
 4533 0004 00AF     		add	r7, sp, #0
 4534              	.LCFI167:
 4535              		.cfi_def_cfa_register 7
 4536 0006 021C     		mov	r2, r0
 4537 0008 FB1D     		add	r3, r7, #7
 4538 000a 1A70     		strb	r2, [r3]
1386:.\Generated_Source\PSoC4/ETH.c **** 	uint8 status;
1387:.\Generated_Source\PSoC4/ETH.c **** 	
1388:.\Generated_Source\PSoC4/ETH.c **** 	status = ETH_GetSocketStatus(socket);
 4539              		.loc 1 1388 0
 4540 000c 3C1C     		mov	r4, r7
 4541 000e 0F34     		add	r4, r4, #15
 4542 0010 FB1D     		add	r3, r7, #7
 4543 0012 1B78     		ldrb	r3, [r3]
 4544 0014 181C     		mov	r0, r3
 4545 0016 FFF7FEFF 		bl	ETH_GetSocketStatus
 4546 001a 031C     		mov	r3, r0
 4547 001c 2370     		strb	r3, [r4]
1389:.\Generated_Source\PSoC4/ETH.c **** 	/* has a connection termination been requested by remote system */
1390:.\Generated_Source\PSoC4/ETH.c **** 	if (status == 0x1C) {
 4548              		.loc 1 1390 0
 4549 001e 3B1C     		mov	r3, r7
 4550 0020 0F33     		add	r3, r3, #15
 4551 0022 1B78     		ldrb	r3, [r3]
 4552 0024 1C2B     		cmp	r3, #28
 4553 0026 04D1     		bne	.L207
1391:.\Generated_Source\PSoC4/ETH.c **** 		/* Close the socket on this end */
1392:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketClose(socket);
 4554              		.loc 1 1392 0
 4555 0028 FB1D     		add	r3, r7, #7
 4556 002a 1B78     		ldrb	r3, [r3]
 4557 002c 181C     		mov	r0, r3
 4558 002e FFF7FEFF 		bl	ETH_SocketClose
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 106


 4559              	.L207:
1393:.\Generated_Source\PSoC4/ETH.c **** 	}
1394:.\Generated_Source\PSoC4/ETH.c **** 	return (ETH_GetSocketStatus(socket) == 0x00);
 4560              		.loc 1 1394 0
 4561 0032 FB1D     		add	r3, r7, #7
 4562 0034 1B78     		ldrb	r3, [r3]
 4563 0036 181C     		mov	r0, r3
 4564 0038 FFF7FEFF 		bl	ETH_GetSocketStatus
 4565 003c 031C     		mov	r3, r0
 4566 003e 5A42     		neg	r2, r3
 4567 0040 5341     		adc	r3, r3, r2
 4568 0042 DBB2     		uxtb	r3, r3
1395:.\Generated_Source\PSoC4/ETH.c **** }
 4569              		.loc 1 1395 0
 4570 0044 181C     		mov	r0, r3
 4571 0046 BD46     		mov	sp, r7
 4572 0048 05B0     		add	sp, sp, #20
 4573              		@ sp needed for prologue
 4574 004a 90BD     		pop	{r4, r7, pc}
 4575              		.cfi_endproc
 4576              	.LFE56:
 4577              		.size	ETH_SocketProcessConnections, .-ETH_SocketProcessConnections
 4578              		.section	.text.ETH_SocketEstablished,"ax",%progbits
 4579              		.align	2
 4580              		.global	ETH_SocketEstablished
 4581              		.code	16
 4582              		.thumb_func
 4583              		.type	ETH_SocketEstablished, %function
 4584              	ETH_SocketEstablished:
 4585              	.LFB57:
1396:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1397:.\Generated_Source\PSoC4/ETH.c **** uint8
1398:.\Generated_Source\PSoC4/ETH.c **** ETH_SocketEstablished( uint8 socket )
1399:.\Generated_Source\PSoC4/ETH.c **** {
 4586              		.loc 1 1399 0
 4587              		.cfi_startproc
 4588 0000 90B5     		push	{r4, r7, lr}
 4589              	.LCFI168:
 4590              		.cfi_def_cfa_offset 12
 4591              		.cfi_offset 4, -12
 4592              		.cfi_offset 7, -8
 4593              		.cfi_offset 14, -4
 4594 0002 85B0     		sub	sp, sp, #20
 4595              	.LCFI169:
 4596              		.cfi_def_cfa_offset 32
 4597 0004 00AF     		add	r7, sp, #0
 4598              	.LCFI170:
 4599              		.cfi_def_cfa_register 7
 4600 0006 021C     		mov	r2, r0
 4601 0008 FB1D     		add	r3, r7, #7
 4602 000a 1A70     		strb	r2, [r3]
1400:.\Generated_Source\PSoC4/ETH.c **** 	uint8 result;
1401:.\Generated_Source\PSoC4/ETH.c **** 	
1402:.\Generated_Source\PSoC4/ETH.c **** 	result = 0;
 4603              		.loc 1 1402 0
 4604 000c 3B1C     		mov	r3, r7
 4605 000e 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 107


 4606 0010 0022     		mov	r2, #0
 4607 0012 1A70     		strb	r2, [r3]
1403:.\Generated_Source\PSoC4/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 4608              		.loc 1 1403 0
 4609 0014 FB1D     		add	r3, r7, #7
 4610 0016 1B78     		ldrb	r3, [r3]
 4611 0018 032B     		cmp	r3, #3
 4612 001a 08D8     		bhi	.L210
1404:.\Generated_Source\PSoC4/ETH.c **** 		result = ETH_GetSocketStatus( socket );
 4613              		.loc 1 1404 0
 4614 001c 3C1C     		mov	r4, r7
 4615 001e 0F34     		add	r4, r4, #15
 4616 0020 FB1D     		add	r3, r7, #7
 4617 0022 1B78     		ldrb	r3, [r3]
 4618 0024 181C     		mov	r0, r3
 4619 0026 FFF7FEFF 		bl	ETH_GetSocketStatus
 4620 002a 031C     		mov	r3, r0
 4621 002c 2370     		strb	r3, [r4]
 4622              	.L210:
1405:.\Generated_Source\PSoC4/ETH.c **** 	}
1406:.\Generated_Source\PSoC4/ETH.c **** 	return( result == 0x17);
 4623              		.loc 1 1406 0
 4624 002e 3B1C     		mov	r3, r7
 4625 0030 0F33     		add	r3, r3, #15
 4626 0032 1B78     		ldrb	r3, [r3]
 4627 0034 173B     		sub	r3, r3, #23
 4628 0036 5A42     		neg	r2, r3
 4629 0038 5341     		adc	r3, r3, r2
 4630 003a DBB2     		uxtb	r3, r3
1407:.\Generated_Source\PSoC4/ETH.c **** }
 4631              		.loc 1 1407 0
 4632 003c 181C     		mov	r0, r3
 4633 003e BD46     		mov	sp, r7
 4634 0040 05B0     		add	sp, sp, #20
 4635              		@ sp needed for prologue
 4636 0042 90BD     		pop	{r4, r7, pc}
 4637              		.cfi_endproc
 4638              	.LFE57:
 4639              		.size	ETH_SocketEstablished, .-ETH_SocketEstablished
 4640              		.section	.text.ETH_SocketSend,"ax",%progbits
 4641              		.align	2
 4642              		.global	ETH_SocketSend
 4643              		.code	16
 4644              		.thumb_func
 4645              		.type	ETH_SocketSend, %function
 4646              	ETH_SocketSend:
 4647              	.LFB58:
1408:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1409:.\Generated_Source\PSoC4/ETH.c **** /**
1410:.\Generated_Source\PSoC4/ETH.c ****  * \brief Transmit a SEND operation over a socket
1411:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket to which the send command will be sent
1412:.\Generated_Source\PSoC4/ETH.c ****  */
1413:.\Generated_Source\PSoC4/ETH.c **** void
1414:.\Generated_Source\PSoC4/ETH.c **** ETH_SocketSend(uint8 socket )
1415:.\Generated_Source\PSoC4/ETH.c **** {
 4648              		.loc 1 1415 0
 4649              		.cfi_startproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 108


 4650 0000 90B5     		push	{r4, r7, lr}
 4651              	.LCFI171:
 4652              		.cfi_def_cfa_offset 12
 4653              		.cfi_offset 4, -12
 4654              		.cfi_offset 7, -8
 4655              		.cfi_offset 14, -4
 4656 0002 85B0     		sub	sp, sp, #20
 4657              	.LCFI172:
 4658              		.cfi_def_cfa_offset 32
 4659 0004 00AF     		add	r7, sp, #0
 4660              	.LCFI173:
 4661              		.cfi_def_cfa_register 7
 4662 0006 021C     		mov	r2, r0
 4663 0008 FB1D     		add	r3, r7, #7
 4664 000a 1A70     		strb	r2, [r3]
1416:.\Generated_Source\PSoC4/ETH.c **** 	uint8 ir;
1417:.\Generated_Source\PSoC4/ETH.c **** 	
1418:.\Generated_Source\PSoC4/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 4665              		.loc 1 1418 0
 4666 000c FB1D     		add	r3, r7, #7
 4667 000e 1B78     		ldrb	r3, [r3]
 4668 0010 032B     		cmp	r3, #3
 4669 0012 35D8     		bhi	.L212
1419:.\Generated_Source\PSoC4/ETH.c **** 		/* initialize the subnet mask register : ERRATA FIX */
1420:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSubnetMask( ETH_SubnetMask );
 4670              		.loc 1 1420 0
 4671 0014 1C4B     		ldr	r3, .L217
 4672 0016 1B68     		ldr	r3, [r3]
 4673 0018 181C     		mov	r0, r3
 4674 001a FFF7FEFF 		bl	ETH_SetSubnetMask
1421:.\Generated_Source\PSoC4/ETH.c **** 		/* Issue the SEND command */
1422:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x20 );
 4675              		.loc 1 1422 0
 4676 001e FB1D     		add	r3, r7, #7
 4677 0020 1B78     		ldrb	r3, [r3]
 4678 0022 181C     		mov	r0, r3
 4679 0024 2021     		mov	r1, #32
 4680 0026 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1423:.\Generated_Source\PSoC4/ETH.c **** 		/* wait for the SEND to complete, or for a timeout */
1424:.\Generated_Source\PSoC4/ETH.c **** 		ir = ETH_GetSocketIR( socket );
 4681              		.loc 1 1424 0
 4682 002a 3C1C     		mov	r4, r7
 4683 002c 0F34     		add	r4, r4, #15
 4684 002e FB1D     		add	r3, r7, #7
 4685 0030 1B78     		ldrb	r3, [r3]
 4686 0032 181C     		mov	r0, r3
 4687 0034 FFF7FEFF 		bl	ETH_GetSocketIR
 4688 0038 031C     		mov	r3, r0
 4689 003a 2370     		strb	r3, [r4]
1425:.\Generated_Source\PSoC4/ETH.c **** 		/* while SEND is not done, and the socket hasnot timed out or been dsconnected */
1426:.\Generated_Source\PSoC4/ETH.c **** 		while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4690              		.loc 1 1426 0
 4691 003c 0BE0     		b	.L214
 4692              	.L216:
1427:.\Generated_Source\PSoC4/ETH.c **** 			CyDelay(1);
 4693              		.loc 1 1427 0
 4694 003e 0120     		mov	r0, #1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 109


 4695 0040 FFF7FEFF 		bl	CyDelay
1428:.\Generated_Source\PSoC4/ETH.c **** 			ir = ETH_GetSocketIR( socket );
 4696              		.loc 1 1428 0
 4697 0044 3C1C     		mov	r4, r7
 4698 0046 0F34     		add	r4, r4, #15
 4699 0048 FB1D     		add	r3, r7, #7
 4700 004a 1B78     		ldrb	r3, [r3]
 4701 004c 181C     		mov	r0, r3
 4702 004e FFF7FEFF 		bl	ETH_GetSocketIR
 4703 0052 031C     		mov	r3, r0
 4704 0054 2370     		strb	r3, [r4]
 4705              	.L214:
1426:.\Generated_Source\PSoC4/ETH.c **** 		while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4706              		.loc 1 1426 0 discriminator 1
 4707 0056 3B1C     		mov	r3, r7
 4708 0058 0F33     		add	r3, r3, #15
 4709 005a 1A78     		ldrb	r2, [r3]
 4710 005c 1023     		mov	r3, #16
 4711 005e 1340     		and	r3, r2
 4712 0060 05D1     		bne	.L215
1426:.\Generated_Source\PSoC4/ETH.c **** 		while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4713              		.loc 1 1426 0 is_stmt 0 discriminator 2
 4714 0062 3B1C     		mov	r3, r7
 4715 0064 0F33     		add	r3, r3, #15
 4716 0066 1A78     		ldrb	r2, [r3]
 4717 0068 0A23     		mov	r3, #10
 4718 006a 1340     		and	r3, r2
 4719 006c E7D0     		beq	.L216
 4720              	.L215:
1429:.\Generated_Source\PSoC4/ETH.c **** 			
1430:.\Generated_Source\PSoC4/ETH.c **** 		}
1431:.\Generated_Source\PSoC4/ETH.c **** 		/* clear the SEND_OK flag from the register */
1432:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketIR( socket, 0x10 );
 4721              		.loc 1 1432 0 is_stmt 1
 4722 006e FB1D     		add	r3, r7, #7
 4723 0070 1B78     		ldrb	r3, [r3]
 4724 0072 181C     		mov	r0, r3
 4725 0074 1021     		mov	r1, #16
 4726 0076 FFF7FEFF 		bl	ETH_SetSocketIR
1433:.\Generated_Source\PSoC4/ETH.c **** 		/* reset the subnet mask : ERRATA FIX */
1434:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSubnetMask( 0 );
 4727              		.loc 1 1434 0
 4728 007a 0020     		mov	r0, #0
 4729 007c FFF7FEFF 		bl	ETH_SetSubnetMask
 4730              	.L212:
1435:.\Generated_Source\PSoC4/ETH.c **** 	}
1436:.\Generated_Source\PSoC4/ETH.c **** }
 4731              		.loc 1 1436 0
 4732 0080 BD46     		mov	sp, r7
 4733 0082 05B0     		add	sp, sp, #20
 4734              		@ sp needed for prologue
 4735 0084 90BD     		pop	{r4, r7, pc}
 4736              	.L218:
 4737 0086 C046     		.align	2
 4738              	.L217:
 4739 0088 00000000 		.word	ETH_SubnetMask
 4740              		.cfi_endproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 110


 4741              	.LFE58:
 4742              		.size	ETH_SocketSend, .-ETH_SocketSend
 4743              		.section	.text.ETH_SocketSendMac,"ax",%progbits
 4744              		.align	2
 4745              		.global	ETH_SocketSendMac
 4746              		.code	16
 4747              		.thumb_func
 4748              		.type	ETH_SocketSendMac, %function
 4749              	ETH_SocketSendMac:
 4750              	.LFB59:
1437:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1438:.\Generated_Source\PSoC4/ETH.c **** /**
1439:.\Generated_Source\PSoC4/ETH.c ****  * \brief Execute a SEND without an ARP.
1440:.\Generated_Source\PSoC4/ETH.c ****  * \param socket the socket to which the SEND will be executed.
1441:.\Generated_Source\PSoC4/ETH.c ****  */
1442:.\Generated_Source\PSoC4/ETH.c **** void
1443:.\Generated_Source\PSoC4/ETH.c **** ETH_SocketSendMac(uint8 socket )
1444:.\Generated_Source\PSoC4/ETH.c **** {
 4751              		.loc 1 1444 0
 4752              		.cfi_startproc
 4753 0000 90B5     		push	{r4, r7, lr}
 4754              	.LCFI174:
 4755              		.cfi_def_cfa_offset 12
 4756              		.cfi_offset 4, -12
 4757              		.cfi_offset 7, -8
 4758              		.cfi_offset 14, -4
 4759 0002 85B0     		sub	sp, sp, #20
 4760              	.LCFI175:
 4761              		.cfi_def_cfa_offset 32
 4762 0004 00AF     		add	r7, sp, #0
 4763              	.LCFI176:
 4764              		.cfi_def_cfa_register 7
 4765 0006 021C     		mov	r2, r0
 4766 0008 FB1D     		add	r3, r7, #7
 4767 000a 1A70     		strb	r2, [r3]
1445:.\Generated_Source\PSoC4/ETH.c **** 	uint8 ir;
1446:.\Generated_Source\PSoC4/ETH.c **** 	
1447:.\Generated_Source\PSoC4/ETH.c **** 	/* initialize the subnet mask register : ERRATA FIX */
1448:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSubnetMask( ETH_SubnetMask );
 4768              		.loc 1 1448 0
 4769 000c 1C4B     		ldr	r3, .L223
 4770 000e 1B68     		ldr	r3, [r3]
 4771 0010 181C     		mov	r0, r3
 4772 0012 FFF7FEFF 		bl	ETH_SetSubnetMask
1449:.\Generated_Source\PSoC4/ETH.c **** 	/* Issue the SEND command */
1450:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ExecuteSocketCommand( socket, 0x21 );
 4773              		.loc 1 1450 0
 4774 0016 FB1D     		add	r3, r7, #7
 4775 0018 1B78     		ldrb	r3, [r3]
 4776 001a 181C     		mov	r0, r3
 4777 001c 2121     		mov	r1, #33
 4778 001e FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1451:.\Generated_Source\PSoC4/ETH.c **** 	/* wait for the SEND to complete, or for a timeout */
1452:.\Generated_Source\PSoC4/ETH.c **** 	ir = ETH_GetSocketIR( socket );
 4779              		.loc 1 1452 0
 4780 0022 3C1C     		mov	r4, r7
 4781 0024 0F34     		add	r4, r4, #15
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 111


 4782 0026 FB1D     		add	r3, r7, #7
 4783 0028 1B78     		ldrb	r3, [r3]
 4784 002a 181C     		mov	r0, r3
 4785 002c FFF7FEFF 		bl	ETH_GetSocketIR
 4786 0030 031C     		mov	r3, r0
 4787 0032 2370     		strb	r3, [r4]
1453:.\Generated_Source\PSoC4/ETH.c **** 	/* while SEND is not done, and the socket hasnot timed out or been dsconnected */
1454:.\Generated_Source\PSoC4/ETH.c **** 	while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4788              		.loc 1 1454 0
 4789 0034 0BE0     		b	.L220
 4790              	.L222:
1455:.\Generated_Source\PSoC4/ETH.c **** 		CyDelay(1);
 4791              		.loc 1 1455 0
 4792 0036 0120     		mov	r0, #1
 4793 0038 FFF7FEFF 		bl	CyDelay
1456:.\Generated_Source\PSoC4/ETH.c **** 		ir = ETH_GetSocketIR( socket );
 4794              		.loc 1 1456 0
 4795 003c 3C1C     		mov	r4, r7
 4796 003e 0F34     		add	r4, r4, #15
 4797 0040 FB1D     		add	r3, r7, #7
 4798 0042 1B78     		ldrb	r3, [r3]
 4799 0044 181C     		mov	r0, r3
 4800 0046 FFF7FEFF 		bl	ETH_GetSocketIR
 4801 004a 031C     		mov	r3, r0
 4802 004c 2370     		strb	r3, [r4]
 4803              	.L220:
1454:.\Generated_Source\PSoC4/ETH.c **** 	while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4804              		.loc 1 1454 0 discriminator 1
 4805 004e 3B1C     		mov	r3, r7
 4806 0050 0F33     		add	r3, r3, #15
 4807 0052 1A78     		ldrb	r2, [r3]
 4808 0054 1023     		mov	r3, #16
 4809 0056 1340     		and	r3, r2
 4810 0058 05D1     		bne	.L221
1454:.\Generated_Source\PSoC4/ETH.c **** 	while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4811              		.loc 1 1454 0 is_stmt 0 discriminator 2
 4812 005a 3B1C     		mov	r3, r7
 4813 005c 0F33     		add	r3, r3, #15
 4814 005e 1A78     		ldrb	r2, [r3]
 4815 0060 0A23     		mov	r3, #10
 4816 0062 1340     		and	r3, r2
 4817 0064 E7D0     		beq	.L222
 4818              	.L221:
1457:.\Generated_Source\PSoC4/ETH.c **** 		
1458:.\Generated_Source\PSoC4/ETH.c **** 	}
1459:.\Generated_Source\PSoC4/ETH.c **** 	/* clear the SEND_OK flag from the register */
1460:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSocketIR( socket, 0x10 );
 4819              		.loc 1 1460 0 is_stmt 1
 4820 0066 FB1D     		add	r3, r7, #7
 4821 0068 1B78     		ldrb	r3, [r3]
 4822 006a 181C     		mov	r0, r3
 4823 006c 1021     		mov	r1, #16
 4824 006e FFF7FEFF 		bl	ETH_SetSocketIR
1461:.\Generated_Source\PSoC4/ETH.c **** 	/* reset the subnet mask : ERRATA FIX */
1462:.\Generated_Source\PSoC4/ETH.c **** 	ETH_SetSubnetMask( 0 );
 4825              		.loc 1 1462 0
 4826 0072 0020     		mov	r0, #0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 112


 4827 0074 FFF7FEFF 		bl	ETH_SetSubnetMask
1463:.\Generated_Source\PSoC4/ETH.c **** }
 4828              		.loc 1 1463 0
 4829 0078 BD46     		mov	sp, r7
 4830 007a 05B0     		add	sp, sp, #20
 4831              		@ sp needed for prologue
 4832 007c 90BD     		pop	{r4, r7, pc}
 4833              	.L224:
 4834 007e C046     		.align	2
 4835              	.L223:
 4836 0080 00000000 		.word	ETH_SubnetMask
 4837              		.cfi_endproc
 4838              	.LFE59:
 4839              		.size	ETH_SocketSendMac, .-ETH_SocketSendMac
 4840              		.section	.text.ETH_SocketRxDataWaiting,"ax",%progbits
 4841              		.align	2
 4842              		.global	ETH_SocketRxDataWaiting
 4843              		.code	16
 4844              		.thumb_func
 4845              		.type	ETH_SocketRxDataWaiting, %function
 4846              	ETH_SocketRxDataWaiting:
 4847              	.LFB60:
1464:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1465:.\Generated_Source\PSoC4/ETH.c **** uint16
1466:.\Generated_Source\PSoC4/ETH.c **** ETH_SocketRxDataWaiting( uint8 socket )
1467:.\Generated_Source\PSoC4/ETH.c **** {
 4848              		.loc 1 1467 0
 4849              		.cfi_startproc
 4850 0000 80B5     		push	{r7, lr}
 4851              	.LCFI177:
 4852              		.cfi_def_cfa_offset 8
 4853              		.cfi_offset 7, -8
 4854              		.cfi_offset 14, -4
 4855 0002 82B0     		sub	sp, sp, #8
 4856              	.LCFI178:
 4857              		.cfi_def_cfa_offset 16
 4858 0004 00AF     		add	r7, sp, #0
 4859              	.LCFI179:
 4860              		.cfi_def_cfa_register 7
 4861 0006 021C     		mov	r2, r0
 4862 0008 FB1D     		add	r3, r7, #7
 4863 000a 1A70     		strb	r2, [r3]
1468:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_GetRxSize( socket );
 4864              		.loc 1 1468 0
 4865 000c FB1D     		add	r3, r7, #7
 4866 000e 1B78     		ldrb	r3, [r3]
 4867 0010 181C     		mov	r0, r3
 4868 0012 FFF7FEFF 		bl	ETH_GetRxSize
 4869 0016 031C     		mov	r3, r0
1469:.\Generated_Source\PSoC4/ETH.c **** }
 4870              		.loc 1 1469 0
 4871 0018 181C     		mov	r0, r3
 4872 001a BD46     		mov	sp, r7
 4873 001c 02B0     		add	sp, sp, #8
 4874              		@ sp needed for prologue
 4875 001e 80BD     		pop	{r7, pc}
 4876              		.cfi_endproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 113


 4877              	.LFE60:
 4878              		.size	ETH_SocketRxDataWaiting, .-ETH_SocketRxDataWaiting
 4879              		.section	.text.ETH_TcpOpen,"ax",%progbits
 4880              		.align	2
 4881              		.global	ETH_TcpOpen
 4882              		.code	16
 4883              		.thumb_func
 4884              		.type	ETH_TcpOpen, %function
 4885              	ETH_TcpOpen:
 4886              	.LFB61:
1470:.\Generated_Source\PSoC4/ETH.c **** #endif
1471:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
1472:.\Generated_Source\PSoC4/ETH.c **** /* TCP/IP */
1473:.\Generated_Source\PSoC4/ETH.c **** #if (1)
1474:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1475:.\Generated_Source\PSoC4/ETH.c **** uint8
1476:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpOpen(uint16 port)
1477:.\Generated_Source\PSoC4/ETH.c **** {
 4887              		.loc 1 1477 0
 4888              		.cfi_startproc
 4889 0000 80B5     		push	{r7, lr}
 4890              	.LCFI180:
 4891              		.cfi_def_cfa_offset 8
 4892              		.cfi_offset 7, -8
 4893              		.cfi_offset 14, -4
 4894 0002 82B0     		sub	sp, sp, #8
 4895              	.LCFI181:
 4896              		.cfi_def_cfa_offset 16
 4897 0004 00AF     		add	r7, sp, #0
 4898              	.LCFI182:
 4899              		.cfi_def_cfa_register 7
 4900 0006 021C     		mov	r2, r0
 4901 0008 BB1D     		add	r3, r7, #6
 4902 000a 1A80     		strh	r2, [r3]
1478:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_SocketOpen(ETH_PROTO_TCP, port, 0);
 4903              		.loc 1 1478 0
 4904 000c BB1D     		add	r3, r7, #6
 4905 000e 1B88     		ldrh	r3, [r3]
 4906 0010 0120     		mov	r0, #1
 4907 0012 191C     		mov	r1, r3
 4908 0014 0022     		mov	r2, #0
 4909 0016 FFF7FEFF 		bl	ETH_SocketOpen
 4910 001a 031C     		mov	r3, r0
1479:.\Generated_Source\PSoC4/ETH.c **** }
 4911              		.loc 1 1479 0
 4912 001c 181C     		mov	r0, r3
 4913 001e BD46     		mov	sp, r7
 4914 0020 02B0     		add	sp, sp, #8
 4915              		@ sp needed for prologue
 4916 0022 80BD     		pop	{r7, pc}
 4917              		.cfi_endproc
 4918              	.LFE61:
 4919              		.size	ETH_TcpOpen, .-ETH_TcpOpen
 4920              		.section	.text.ETH_TcpStartServer,"ax",%progbits
 4921              		.align	2
 4922              		.global	ETH_TcpStartServer
 4923              		.code	16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 114


 4924              		.thumb_func
 4925              		.type	ETH_TcpStartServer, %function
 4926              	ETH_TcpStartServer:
 4927              	.LFB62:
1480:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1481:.\Generated_Source\PSoC4/ETH.c **** void
1482:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpStartServer( uint8 socket )
1483:.\Generated_Source\PSoC4/ETH.c **** {
 4928              		.loc 1 1483 0
 4929              		.cfi_startproc
 4930 0000 80B5     		push	{r7, lr}
 4931              	.LCFI183:
 4932              		.cfi_def_cfa_offset 8
 4933              		.cfi_offset 7, -8
 4934              		.cfi_offset 14, -4
 4935 0002 82B0     		sub	sp, sp, #8
 4936              	.LCFI184:
 4937              		.cfi_def_cfa_offset 16
 4938 0004 00AF     		add	r7, sp, #0
 4939              	.LCFI185:
 4940              		.cfi_def_cfa_register 7
 4941 0006 021C     		mov	r2, r0
 4942 0008 FB1D     		add	r3, r7, #7
 4943 000a 1A70     		strb	r2, [r3]
1484:.\Generated_Source\PSoC4/ETH.c **** 	/*
1485:.\Generated_Source\PSoC4/ETH.c **** 	 * Start a open socket listening for a connection
1486:.\Generated_Source\PSoC4/ETH.c **** 	 */
1487:.\Generated_Source\PSoC4/ETH.c **** 	/* was this a valid socket? */
1488:.\Generated_Source\PSoC4/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 4944              		.loc 1 1488 0
 4945 000c FB1D     		add	r3, r7, #7
 4946 000e 1B78     		ldrb	r3, [r3]
 4947 0010 032B     		cmp	r3, #3
 4948 0012 05D8     		bhi	.L229
1489:.\Generated_Source\PSoC4/ETH.c **** 		/* Execute the listen command */
1490:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x02 );
 4949              		.loc 1 1490 0
 4950 0014 FB1D     		add	r3, r7, #7
 4951 0016 1B78     		ldrb	r3, [r3]
 4952 0018 181C     		mov	r0, r3
 4953 001a 0221     		mov	r1, #2
 4954 001c FFF7FEFF 		bl	ETH_ExecuteSocketCommand
 4955              	.L229:
1491:.\Generated_Source\PSoC4/ETH.c **** 	}
1492:.\Generated_Source\PSoC4/ETH.c **** }
 4956              		.loc 1 1492 0
 4957 0020 BD46     		mov	sp, r7
 4958 0022 02B0     		add	sp, sp, #8
 4959              		@ sp needed for prologue
 4960 0024 80BD     		pop	{r7, pc}
 4961              		.cfi_endproc
 4962              	.LFE62:
 4963              		.size	ETH_TcpStartServer, .-ETH_TcpStartServer
 4964 0026 C046     		.section	.text.ETH_TcpStartServerWait,"ax",%progbits
 4965              		.align	2
 4966              		.global	ETH_TcpStartServerWait
 4967              		.code	16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 115


 4968              		.thumb_func
 4969              		.type	ETH_TcpStartServerWait, %function
 4970              	ETH_TcpStartServerWait:
 4971              	.LFB63:
1493:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1494:.\Generated_Source\PSoC4/ETH.c **** void
1495:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpStartServerWait( uint8 socket )
1496:.\Generated_Source\PSoC4/ETH.c **** {
 4972              		.loc 1 1496 0
 4973              		.cfi_startproc
 4974 0000 80B5     		push	{r7, lr}
 4975              	.LCFI186:
 4976              		.cfi_def_cfa_offset 8
 4977              		.cfi_offset 7, -8
 4978              		.cfi_offset 14, -4
 4979 0002 82B0     		sub	sp, sp, #8
 4980              	.LCFI187:
 4981              		.cfi_def_cfa_offset 16
 4982 0004 00AF     		add	r7, sp, #0
 4983              	.LCFI188:
 4984              		.cfi_def_cfa_register 7
 4985 0006 021C     		mov	r2, r0
 4986 0008 FB1D     		add	r3, r7, #7
 4987 000a 1A70     		strb	r2, [r3]
1497:.\Generated_Source\PSoC4/ETH.c **** 	/*
1498:.\Generated_Source\PSoC4/ETH.c **** 	 * Bug Patch: Exit Waiting for server when an invalid socket is passed
1499:.\Generated_Source\PSoC4/ETH.c **** 	 */
1500:.\Generated_Source\PSoC4/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return;
 4988              		.loc 1 1500 0
 4989 000c FB1D     		add	r3, r7, #7
 4990 000e 1B78     		ldrb	r3, [r3]
 4991 0010 032B     		cmp	r3, #3
 4992 0012 19D8     		bhi	.L236
 4993              	.L232:
1501:.\Generated_Source\PSoC4/ETH.c **** 	ETH_TcpStartServer(socket);
 4994              		.loc 1 1501 0
 4995 0014 FB1D     		add	r3, r7, #7
 4996 0016 1B78     		ldrb	r3, [r3]
 4997 0018 181C     		mov	r0, r3
 4998 001a FFF7FEFF 		bl	ETH_TcpStartServer
1502:.\Generated_Source\PSoC4/ETH.c **** 	/* wait for socket establishment */
1503:.\Generated_Source\PSoC4/ETH.c **** 	/* Update Patch: Loop calls process connections to exit on a closed socket */
1504:.\Generated_Source\PSoC4/ETH.c **** 	while ( ( !ETH_SocketEstablished(socket) ) && (ETH_SocketProcessConnections(socket) == 0) ) {
 4999              		.loc 1 1504 0
 5000 001e 02E0     		b	.L234
 5001              	.L235:
1505:.\Generated_Source\PSoC4/ETH.c **** 		CyDelay(1);
 5002              		.loc 1 1505 0
 5003 0020 0120     		mov	r0, #1
 5004 0022 FFF7FEFF 		bl	CyDelay
 5005              	.L234:
1504:.\Generated_Source\PSoC4/ETH.c **** 	while ( ( !ETH_SocketEstablished(socket) ) && (ETH_SocketProcessConnections(socket) == 0) ) {
 5006              		.loc 1 1504 0 discriminator 1
 5007 0026 FB1D     		add	r3, r7, #7
 5008 0028 1B78     		ldrb	r3, [r3]
 5009 002a 181C     		mov	r0, r3
 5010 002c FFF7FEFF 		bl	ETH_SocketEstablished
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 116


 5011 0030 031C     		mov	r3, r0
 5012 0032 002B     		cmp	r3, #0
 5013 0034 09D1     		bne	.L231
1504:.\Generated_Source\PSoC4/ETH.c **** 	while ( ( !ETH_SocketEstablished(socket) ) && (ETH_SocketProcessConnections(socket) == 0) ) {
 5014              		.loc 1 1504 0 is_stmt 0 discriminator 2
 5015 0036 FB1D     		add	r3, r7, #7
 5016 0038 1B78     		ldrb	r3, [r3]
 5017 003a 181C     		mov	r0, r3
 5018 003c FFF7FEFF 		bl	ETH_SocketProcessConnections
 5019 0040 031C     		mov	r3, r0
 5020 0042 002B     		cmp	r3, #0
 5021 0044 ECD0     		beq	.L235
 5022 0046 00E0     		b	.L231
 5023              	.L236:
1500:.\Generated_Source\PSoC4/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return;
 5024              		.loc 1 1500 0 is_stmt 1
 5025 0048 C046     		mov	r8, r8
 5026              	.L231:
1506:.\Generated_Source\PSoC4/ETH.c **** 	}
1507:.\Generated_Source\PSoC4/ETH.c **** }
 5027              		.loc 1 1507 0
 5028 004a BD46     		mov	sp, r7
 5029 004c 02B0     		add	sp, sp, #8
 5030              		@ sp needed for prologue
 5031 004e 80BD     		pop	{r7, pc}
 5032              		.cfi_endproc
 5033              	.LFE63:
 5034              		.size	ETH_TcpStartServerWait, .-ETH_TcpStartServerWait
 5035              		.section	.text.ETH_TcpConnect,"ax",%progbits
 5036              		.align	2
 5037              		.global	ETH_TcpConnect
 5038              		.code	16
 5039              		.thumb_func
 5040              		.type	ETH_TcpConnect, %function
 5041              	ETH_TcpConnect:
 5042              	.LFB64:
1508:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1509:.\Generated_Source\PSoC4/ETH.c **** void
1510:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpConnect( uint8 socket, uint32 ip, uint16 port )
1511:.\Generated_Source\PSoC4/ETH.c **** {
 5043              		.loc 1 1511 0
 5044              		.cfi_startproc
 5045 0000 90B5     		push	{r4, r7, lr}
 5046              	.LCFI189:
 5047              		.cfi_def_cfa_offset 12
 5048              		.cfi_offset 4, -12
 5049              		.cfi_offset 7, -8
 5050              		.cfi_offset 14, -4
 5051 0002 85B0     		sub	sp, sp, #20
 5052              	.LCFI190:
 5053              		.cfi_def_cfa_offset 32
 5054 0004 00AF     		add	r7, sp, #0
 5055              	.LCFI191:
 5056              		.cfi_def_cfa_register 7
 5057 0006 3960     		str	r1, [r7]
 5058 0008 FB1D     		add	r3, r7, #7
 5059 000a 011C     		add	r1, r0, #0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 117


 5060 000c 1970     		strb	r1, [r3]
 5061 000e 3B1D     		add	r3, r7, #4
 5062 0010 1A80     		strh	r2, [r3]
1512:.\Generated_Source\PSoC4/ETH.c **** 	uint32 timeout;
1513:.\Generated_Source\PSoC4/ETH.c **** 	uint8 ir;
1514:.\Generated_Source\PSoC4/ETH.c **** 	
1515:.\Generated_Source\PSoC4/ETH.c **** 	/* Exit when passed a closed or invalid socket */
1516:.\Generated_Source\PSoC4/ETH.c **** 	if ( socket >= ETH_MAX_SOCKET) return;
 5063              		.loc 1 1516 0
 5064 0012 FB1D     		add	r3, r7, #7
 5065 0014 1B78     		ldrb	r3, [r3]
 5066 0016 032B     		cmp	r3, #3
 5067 0018 47D8     		bhi	.L243
 5068              	.L238:
1517:.\Generated_Source\PSoC4/ETH.c **** 	/* Check for a valid IP address */
1518:.\Generated_Source\PSoC4/ETH.c **** 	if ( (ip != 0xFFFFFFFF) && (ip != 0) ) {
 5069              		.loc 1 1518 0
 5070 001a 3B68     		ldr	r3, [r7]
 5071 001c 0133     		add	r3, r3, #1
 5072 001e 45D0     		beq	.L237
 5073              		.loc 1 1518 0 is_stmt 0 discriminator 1
 5074 0020 3B68     		ldr	r3, [r7]
 5075 0022 002B     		cmp	r3, #0
 5076 0024 42D0     		beq	.L237
1519:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketDestIP( socket, ip );
 5077              		.loc 1 1519 0 is_stmt 1
 5078 0026 FB1D     		add	r3, r7, #7
 5079 0028 1A78     		ldrb	r2, [r3]
 5080 002a 3B68     		ldr	r3, [r7]
 5081 002c 101C     		mov	r0, r2
 5082 002e 191C     		mov	r1, r3
 5083 0030 FFF7FEFF 		bl	ETH_SetSocketDestIP
1520:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSocketDestPort( socket, port );
 5084              		.loc 1 1520 0
 5085 0034 FB1D     		add	r3, r7, #7
 5086 0036 1A78     		ldrb	r2, [r3]
 5087 0038 3B1D     		add	r3, r7, #4
 5088 003a 1B88     		ldrh	r3, [r3]
 5089 003c 101C     		mov	r0, r2
 5090 003e 191C     		mov	r1, r3
 5091 0040 FFF7FEFF 		bl	ETH_SetSocketDestPort
1521:.\Generated_Source\PSoC4/ETH.c **** 		/* set socket subnet mask */
1522:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSubnetMask( ETH_SubnetMask );
 5092              		.loc 1 1522 0
 5093 0044 1B4B     		ldr	r3, .L244
 5094 0046 1B68     		ldr	r3, [r3]
 5095 0048 181C     		mov	r0, r3
 5096 004a FFF7FEFF 		bl	ETH_SetSubnetMask
1523:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x04);
 5097              		.loc 1 1523 0
 5098 004e FB1D     		add	r3, r7, #7
 5099 0050 1B78     		ldrb	r3, [r3]
 5100 0052 181C     		mov	r0, r3
 5101 0054 0421     		mov	r1, #4
 5102 0056 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1524:.\Generated_Source\PSoC4/ETH.c **** 		/* wait for the socket connection to the remote host is established */
1525:.\Generated_Source\PSoC4/ETH.c **** 		while ( (!ETH_SocketEstablished(socket))  && (timeout < 3000) ) {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 118


 5103              		.loc 1 1525 0
 5104 005a 16E0     		b	.L240
 5105              	.L242:
1526:.\Generated_Source\PSoC4/ETH.c **** 			CyDelay(1);
 5106              		.loc 1 1526 0
 5107 005c 0120     		mov	r0, #1
 5108 005e FFF7FEFF 		bl	CyDelay
1527:.\Generated_Source\PSoC4/ETH.c **** 			++timeout;
 5109              		.loc 1 1527 0
 5110 0062 FB68     		ldr	r3, [r7, #12]
 5111 0064 0133     		add	r3, r3, #1
 5112 0066 FB60     		str	r3, [r7, #12]
1528:.\Generated_Source\PSoC4/ETH.c **** 			ir = ETH_GetSocketIR( socket );
 5113              		.loc 1 1528 0
 5114 0068 3C1C     		mov	r4, r7
 5115 006a 0B34     		add	r4, r4, #11
 5116 006c FB1D     		add	r3, r7, #7
 5117 006e 1B78     		ldrb	r3, [r3]
 5118 0070 181C     		mov	r0, r3
 5119 0072 FFF7FEFF 		bl	ETH_GetSocketIR
 5120 0076 031C     		mov	r3, r0
 5121 0078 2370     		strb	r3, [r4]
1529:.\Generated_Source\PSoC4/ETH.c **** 			if ( (ir & 0x08) != 0 ) {
 5122              		.loc 1 1529 0
 5123 007a 3B1C     		mov	r3, r7
 5124 007c 0B33     		add	r3, r3, #11
 5125 007e 1A78     		ldrb	r2, [r3]
 5126 0080 0823     		mov	r3, #8
 5127 0082 1340     		and	r3, r2
 5128 0084 01D0     		beq	.L240
1530:.\Generated_Source\PSoC4/ETH.c **** 				/* internal chip timeout occured */
1531:.\Generated_Source\PSoC4/ETH.c **** 				timeout = 3000;
 5129              		.loc 1 1531 0
 5130 0086 0C4B     		ldr	r3, .L244+4
 5131 0088 FB60     		str	r3, [r7, #12]
 5132              	.L240:
1525:.\Generated_Source\PSoC4/ETH.c **** 		while ( (!ETH_SocketEstablished(socket))  && (timeout < 3000) ) {
 5133              		.loc 1 1525 0 discriminator 1
 5134 008a FB1D     		add	r3, r7, #7
 5135 008c 1B78     		ldrb	r3, [r3]
 5136 008e 181C     		mov	r0, r3
 5137 0090 FFF7FEFF 		bl	ETH_SocketEstablished
 5138 0094 031C     		mov	r3, r0
 5139 0096 002B     		cmp	r3, #0
 5140 0098 03D1     		bne	.L241
1525:.\Generated_Source\PSoC4/ETH.c **** 		while ( (!ETH_SocketEstablished(socket))  && (timeout < 3000) ) {
 5141              		.loc 1 1525 0 is_stmt 0 discriminator 2
 5142 009a FA68     		ldr	r2, [r7, #12]
 5143 009c 074B     		ldr	r3, .L244+8
 5144 009e 9A42     		cmp	r2, r3
 5145 00a0 DCD9     		bls	.L242
 5146              	.L241:
1532:.\Generated_Source\PSoC4/ETH.c **** 			}
1533:.\Generated_Source\PSoC4/ETH.c **** 		}
1534:.\Generated_Source\PSoC4/ETH.c **** 		/* clear the Subnet mask register */
1535:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SetSubnetMask(0);
 5147              		.loc 1 1535 0 is_stmt 1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 119


 5148 00a2 0020     		mov	r0, #0
 5149 00a4 FFF7FEFF 		bl	ETH_SetSubnetMask
 5150 00a8 00E0     		b	.L237
 5151              	.L243:
1516:.\Generated_Source\PSoC4/ETH.c **** 	if ( socket >= ETH_MAX_SOCKET) return;
 5152              		.loc 1 1516 0
 5153 00aa C046     		mov	r8, r8
 5154              	.L237:
1536:.\Generated_Source\PSoC4/ETH.c **** 	}
1537:.\Generated_Source\PSoC4/ETH.c **** }
 5155              		.loc 1 1537 0
 5156 00ac BD46     		mov	sp, r7
 5157 00ae 05B0     		add	sp, sp, #20
 5158              		@ sp needed for prologue
 5159 00b0 90BD     		pop	{r4, r7, pc}
 5160              	.L245:
 5161 00b2 C046     		.align	2
 5162              	.L244:
 5163 00b4 00000000 		.word	ETH_SubnetMask
 5164 00b8 B80B0000 		.word	3000
 5165 00bc B70B0000 		.word	2999
 5166              		.cfi_endproc
 5167              	.LFE64:
 5168              		.size	ETH_TcpConnect, .-ETH_TcpConnect
 5169              		.section	.text.ETH_TcpConnected,"ax",%progbits
 5170              		.align	2
 5171              		.global	ETH_TcpConnected
 5172              		.code	16
 5173              		.thumb_func
 5174              		.type	ETH_TcpConnected, %function
 5175              	ETH_TcpConnected:
 5176              	.LFB65:
1538:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1539:.\Generated_Source\PSoC4/ETH.c **** uint8
1540:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpConnected( uint8 socket )
1541:.\Generated_Source\PSoC4/ETH.c **** { return ETH_SocketEstablished(socket); }
 5177              		.loc 1 1541 0
 5178              		.cfi_startproc
 5179 0000 80B5     		push	{r7, lr}
 5180              	.LCFI192:
 5181              		.cfi_def_cfa_offset 8
 5182              		.cfi_offset 7, -8
 5183              		.cfi_offset 14, -4
 5184 0002 82B0     		sub	sp, sp, #8
 5185              	.LCFI193:
 5186              		.cfi_def_cfa_offset 16
 5187 0004 00AF     		add	r7, sp, #0
 5188              	.LCFI194:
 5189              		.cfi_def_cfa_register 7
 5190 0006 021C     		mov	r2, r0
 5191 0008 FB1D     		add	r3, r7, #7
 5192 000a 1A70     		strb	r2, [r3]
 5193              		.loc 1 1541 0
 5194 000c FB1D     		add	r3, r7, #7
 5195 000e 1B78     		ldrb	r3, [r3]
 5196 0010 181C     		mov	r0, r3
 5197 0012 FFF7FEFF 		bl	ETH_SocketEstablished
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 120


 5198 0016 031C     		mov	r3, r0
 5199 0018 181C     		mov	r0, r3
 5200 001a BD46     		mov	sp, r7
 5201 001c 02B0     		add	sp, sp, #8
 5202              		@ sp needed for prologue
 5203 001e 80BD     		pop	{r7, pc}
 5204              		.cfi_endproc
 5205              	.LFE65:
 5206              		.size	ETH_TcpConnected, .-ETH_TcpConnected
 5207              		.section	.text.ETH_TcpDisconnect,"ax",%progbits
 5208              		.align	2
 5209              		.global	ETH_TcpDisconnect
 5210              		.code	16
 5211              		.thumb_func
 5212              		.type	ETH_TcpDisconnect, %function
 5213              	ETH_TcpDisconnect:
 5214              	.LFB66:
1542:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1543:.\Generated_Source\PSoC4/ETH.c **** void
1544:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpDisconnect( uint8 socket )
1545:.\Generated_Source\PSoC4/ETH.c **** {
 5215              		.loc 1 1545 0
 5216              		.cfi_startproc
 5217 0000 80B5     		push	{r7, lr}
 5218              	.LCFI195:
 5219              		.cfi_def_cfa_offset 8
 5220              		.cfi_offset 7, -8
 5221              		.cfi_offset 14, -4
 5222 0002 82B0     		sub	sp, sp, #8
 5223              	.LCFI196:
 5224              		.cfi_def_cfa_offset 16
 5225 0004 00AF     		add	r7, sp, #0
 5226              	.LCFI197:
 5227              		.cfi_def_cfa_register 7
 5228 0006 021C     		mov	r2, r0
 5229 0008 FB1D     		add	r3, r7, #7
 5230 000a 1A70     		strb	r2, [r3]
1546:.\Generated_Source\PSoC4/ETH.c **** 	ETH_ExecuteSocketCommand(socket, 0x08);
 5231              		.loc 1 1546 0
 5232 000c FB1D     		add	r3, r7, #7
 5233 000e 1B78     		ldrb	r3, [r3]
 5234 0010 181C     		mov	r0, r3
 5235 0012 0821     		mov	r1, #8
 5236 0014 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1547:.\Generated_Source\PSoC4/ETH.c **** }
 5237              		.loc 1 1547 0
 5238 0018 BD46     		mov	sp, r7
 5239 001a 02B0     		add	sp, sp, #8
 5240              		@ sp needed for prologue
 5241 001c 80BD     		pop	{r7, pc}
 5242              		.cfi_endproc
 5243              	.LFE66:
 5244              		.size	ETH_TcpDisconnect, .-ETH_TcpDisconnect
 5245 001e C046     		.section	.text.ETH_TcpSend,"ax",%progbits
 5246              		.align	2
 5247              		.global	ETH_TcpSend
 5248              		.code	16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 121


 5249              		.thumb_func
 5250              		.type	ETH_TcpSend, %function
 5251              	ETH_TcpSend:
 5252              	.LFB67:
1548:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1549:.\Generated_Source\PSoC4/ETH.c **** uint16
1550:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpSend(uint8 socket, uint8* buffer, uint16 len)
1551:.\Generated_Source\PSoC4/ETH.c **** {
 5253              		.loc 1 1551 0
 5254              		.cfi_startproc
 5255 0000 90B5     		push	{r4, r7, lr}
 5256              	.LCFI198:
 5257              		.cfi_def_cfa_offset 12
 5258              		.cfi_offset 4, -12
 5259              		.cfi_offset 7, -8
 5260              		.cfi_offset 14, -4
 5261 0002 85B0     		sub	sp, sp, #20
 5262              	.LCFI199:
 5263              		.cfi_def_cfa_offset 32
 5264 0004 00AF     		add	r7, sp, #0
 5265              	.LCFI200:
 5266              		.cfi_def_cfa_register 7
 5267 0006 3960     		str	r1, [r7]
 5268 0008 FB1D     		add	r3, r7, #7
 5269 000a 011C     		add	r1, r0, #0
 5270 000c 1970     		strb	r1, [r3]
 5271 000e 3B1D     		add	r3, r7, #4
 5272 0010 1A80     		strh	r2, [r3]
1552:.\Generated_Source\PSoC4/ETH.c **** 	uint16 TxSize;
1553:.\Generated_Source\PSoC4/ETH.c **** 	uint16 FreeSpace;
1554:.\Generated_Source\PSoC4/ETH.c **** 	uint8 status;
1555:.\Generated_Source\PSoC4/ETH.c **** 	
1556:.\Generated_Source\PSoC4/ETH.c **** 	/* Update Patch: Exit immediately with 0 data tx on bad socket */
1557:.\Generated_Source\PSoC4/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 5273              		.loc 1 1557 0
 5274 0012 FB1D     		add	r3, r7, #7
 5275 0014 1B78     		ldrb	r3, [r3]
 5276 0016 032B     		cmp	r3, #3
 5277 0018 01D9     		bls	.L250
 5278              		.loc 1 1557 0 is_stmt 0 discriminator 1
 5279 001a 0023     		mov	r3, #0
 5280 001c 64E0     		b	.L251
 5281              	.L250:
1558:.\Generated_Source\PSoC4/ETH.c **** 	TxSize =  (len > 0x0800) ? 0x0800 : len;
 5282              		.loc 1 1558 0 is_stmt 1
 5283 001e 3A1C     		mov	r2, r7
 5284 0020 0E32     		add	r2, r2, #14
 5285 0022 3B1D     		add	r3, r7, #4
 5286 0024 1B88     		ldrh	r3, [r3]
 5287 0026 98B2     		uxth	r0, r3
 5288 0028 8021     		mov	r1, #128
 5289 002a 0901     		lsl	r1, r1, #4
 5290 002c 8842     		cmp	r0, r1
 5291 002e 01D9     		bls	.L252
 5292 0030 8023     		mov	r3, #128
 5293 0032 1B01     		lsl	r3, r3, #4
 5294              	.L252:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 122


 5295 0034 1380     		strh	r3, [r2]
1559:.\Generated_Source\PSoC4/ETH.c **** 	/* check the connection status, and protocol of the socket */
1560:.\Generated_Source\PSoC4/ETH.c **** 	status = ETH_GetSocketStatus(socket);
 5296              		.loc 1 1560 0
 5297 0036 3C1C     		mov	r4, r7
 5298 0038 0B34     		add	r4, r4, #11
 5299 003a FB1D     		add	r3, r7, #7
 5300 003c 1B78     		ldrb	r3, [r3]
 5301 003e 181C     		mov	r0, r3
 5302 0040 FFF7FEFF 		bl	ETH_GetSocketStatus
 5303 0044 031C     		mov	r3, r0
 5304 0046 2370     		strb	r3, [r4]
1561:.\Generated_Source\PSoC4/ETH.c **** 	if ( ( status == 0x17) && (ETH_SocketConfig[socket].Protocol == ETH_PROTO_TCP) ) {
 5305              		.loc 1 1561 0
 5306 0048 3B1C     		mov	r3, r7
 5307 004a 0B33     		add	r3, r3, #11
 5308 004c 1B78     		ldrb	r3, [r3]
 5309 004e 172B     		cmp	r3, #23
 5310 0050 43D1     		bne	.L253
 5311              		.loc 1 1561 0 is_stmt 0 discriminator 1
 5312 0052 FB1D     		add	r3, r7, #7
 5313 0054 1A78     		ldrb	r2, [r3]
 5314 0056 264B     		ldr	r3, .L258
 5315 0058 D200     		lsl	r2, r2, #3
 5316 005a D35C     		ldrb	r3, [r2, r3]
 5317 005c 012B     		cmp	r3, #1
 5318 005e 3CD1     		bne	.L253
1562:.\Generated_Source\PSoC4/ETH.c **** 		/* 
1563:.\Generated_Source\PSoC4/ETH.c **** 		 * The socket was open with the correct protocol and is connected to
1564:.\Generated_Source\PSoC4/ETH.c **** 		 * a valid remote system. In order to send the requested packet data,
1565:.\Generated_Source\PSoC4/ETH.c **** 		 * first, we must wait for the available buffer memory to be free
1566:.\Generated_Source\PSoC4/ETH.c **** 		 * in the transmit buffer fifo.
1567:.\Generated_Source\PSoC4/ETH.c **** 		 */
1568:.\Generated_Source\PSoC4/ETH.c **** 		FreeSpace = 0;
 5319              		.loc 1 1568 0 is_stmt 1
 5320 0060 3B1C     		mov	r3, r7
 5321 0062 0C33     		add	r3, r3, #12
 5322 0064 0022     		mov	r2, #0
 5323 0066 1A80     		strh	r2, [r3]
1569:.\Generated_Source\PSoC4/ETH.c **** 		status = 0x17;
 5324              		.loc 1 1569 0
 5325 0068 3B1C     		mov	r3, r7
 5326 006a 0B33     		add	r3, r3, #11
 5327 006c 1722     		mov	r2, #23
 5328 006e 1A70     		strb	r2, [r3]
1570:.\Generated_Source\PSoC4/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
 5329              		.loc 1 1570 0
 5330 0070 11E0     		b	.L254
 5331              	.L256:
1571:.\Generated_Source\PSoC4/ETH.c **** 			FreeSpace = ETH_GetTxFreeSize( socket );
 5332              		.loc 1 1571 0
 5333 0072 3C1C     		mov	r4, r7
 5334 0074 0C34     		add	r4, r4, #12
 5335 0076 FB1D     		add	r3, r7, #7
 5336 0078 1B78     		ldrb	r3, [r3]
 5337 007a 181C     		mov	r0, r3
 5338 007c FFF7FEFF 		bl	ETH_GetTxFreeSize
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 123


 5339 0080 031C     		mov	r3, r0
 5340 0082 2380     		strh	r3, [r4]
1572:.\Generated_Source\PSoC4/ETH.c **** 			status = ETH_GetSocketStatus( socket );
 5341              		.loc 1 1572 0
 5342 0084 3C1C     		mov	r4, r7
 5343 0086 0B34     		add	r4, r4, #11
 5344 0088 FB1D     		add	r3, r7, #7
 5345 008a 1B78     		ldrb	r3, [r3]
 5346 008c 181C     		mov	r0, r3
 5347 008e FFF7FEFF 		bl	ETH_GetSocketStatus
 5348 0092 031C     		mov	r3, r0
 5349 0094 2370     		strb	r3, [r4]
 5350              	.L254:
1570:.\Generated_Source\PSoC4/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
 5351              		.loc 1 1570 0 discriminator 1
 5352 0096 3A1C     		mov	r2, r7
 5353 0098 0C32     		add	r2, r2, #12
 5354 009a 3B1C     		mov	r3, r7
 5355 009c 0E33     		add	r3, r3, #14
 5356 009e 1288     		ldrh	r2, [r2]
 5357 00a0 1B88     		ldrh	r3, [r3]
 5358 00a2 9A42     		cmp	r2, r3
 5359 00a4 09D2     		bcs	.L255
1570:.\Generated_Source\PSoC4/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
 5360              		.loc 1 1570 0 is_stmt 0 discriminator 2
 5361 00a6 3B1C     		mov	r3, r7
 5362 00a8 0B33     		add	r3, r3, #11
 5363 00aa 1B78     		ldrb	r3, [r3]
 5364 00ac 172B     		cmp	r3, #23
 5365 00ae 04D1     		bne	.L255
1570:.\Generated_Source\PSoC4/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
 5366              		.loc 1 1570 0 discriminator 1
 5367 00b0 3B1C     		mov	r3, r7
 5368 00b2 0B33     		add	r3, r3, #11
 5369 00b4 1B78     		ldrb	r3, [r3]
 5370 00b6 1C2B     		cmp	r3, #28
 5371 00b8 DBD1     		bne	.L256
 5372              	.L255:
1573:.\Generated_Source\PSoC4/ETH.c **** 		}
1574:.\Generated_Source\PSoC4/ETH.c **** 		/*
1575:.\Generated_Source\PSoC4/ETH.c **** 		 * Write the data buffer to the chip Tx Buffer, then issue
1576:.\Generated_Source\PSoC4/ETH.c **** 		 * the chip SEND command
1577:.\Generated_Source\PSoC4/ETH.c **** 		 */
1578:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ProcessTxData(socket, 0, buffer, TxSize);
 5373              		.loc 1 1578 0 is_stmt 1
 5374 00ba FB1D     		add	r3, r7, #7
 5375 00bc 1978     		ldrb	r1, [r3]
 5376 00be 3A68     		ldr	r2, [r7]
 5377 00c0 3B1C     		mov	r3, r7
 5378 00c2 0E33     		add	r3, r3, #14
 5379 00c4 1B88     		ldrh	r3, [r3]
 5380 00c6 081C     		mov	r0, r1
 5381 00c8 0021     		mov	r1, #0
 5382 00ca FFF7FEFF 		bl	ETH_ProcessTxData
1579:.\Generated_Source\PSoC4/ETH.c **** 		ETH_SocketSend( socket );
 5383              		.loc 1 1579 0
 5384 00ce FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 124


 5385 00d0 1B78     		ldrb	r3, [r3]
 5386 00d2 181C     		mov	r0, r3
 5387 00d4 FFF7FEFF 		bl	ETH_SocketSend
 5388 00d8 03E0     		b	.L257
 5389              	.L253:
1580:.\Generated_Source\PSoC4/ETH.c **** 	}
1581:.\Generated_Source\PSoC4/ETH.c **** 	else {
1582:.\Generated_Source\PSoC4/ETH.c **** 		/*
1583:.\Generated_Source\PSoC4/ETH.c **** 		 * the socket was not establised, or there was an error, so clear
1584:.\Generated_Source\PSoC4/ETH.c **** 		 * the TxSize to signal that no data has bee sent
1585:.\Generated_Source\PSoC4/ETH.c **** 		 */
1586:.\Generated_Source\PSoC4/ETH.c **** 		TxSize = 0;
 5390              		.loc 1 1586 0
 5391 00da 3B1C     		mov	r3, r7
 5392 00dc 0E33     		add	r3, r3, #14
 5393 00de 0022     		mov	r2, #0
 5394 00e0 1A80     		strh	r2, [r3]
 5395              	.L257:
1587:.\Generated_Source\PSoC4/ETH.c **** 	}
1588:.\Generated_Source\PSoC4/ETH.c **** 	return TxSize;
 5396              		.loc 1 1588 0
 5397 00e2 3B1C     		mov	r3, r7
 5398 00e4 0E33     		add	r3, r3, #14
 5399 00e6 1B88     		ldrh	r3, [r3]
 5400              	.L251:
1589:.\Generated_Source\PSoC4/ETH.c **** }
 5401              		.loc 1 1589 0
 5402 00e8 181C     		mov	r0, r3
 5403 00ea BD46     		mov	sp, r7
 5404 00ec 05B0     		add	sp, sp, #20
 5405              		@ sp needed for prologue
 5406 00ee 90BD     		pop	{r4, r7, pc}
 5407              	.L259:
 5408              		.align	2
 5409              	.L258:
 5410 00f0 00000000 		.word	ETH_SocketConfig
 5411              		.cfi_endproc
 5412              	.LFE67:
 5413              		.size	ETH_TcpSend, .-ETH_TcpSend
 5414              		.section	.text.ETH_TcpReceive,"ax",%progbits
 5415              		.align	2
 5416              		.global	ETH_TcpReceive
 5417              		.code	16
 5418              		.thumb_func
 5419              		.type	ETH_TcpReceive, %function
 5420              	ETH_TcpReceive:
 5421              	.LFB68:
1590:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1591:.\Generated_Source\PSoC4/ETH.c **** uint16
1592:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpReceive( uint8 socket, uint8* buffer, uint16 length )
1593:.\Generated_Source\PSoC4/ETH.c **** {
 5422              		.loc 1 1593 0
 5423              		.cfi_startproc
 5424 0000 90B5     		push	{r4, r7, lr}
 5425              	.LCFI201:
 5426              		.cfi_def_cfa_offset 12
 5427              		.cfi_offset 4, -12
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 125


 5428              		.cfi_offset 7, -8
 5429              		.cfi_offset 14, -4
 5430 0002 87B0     		sub	sp, sp, #28
 5431              	.LCFI202:
 5432              		.cfi_def_cfa_offset 40
 5433 0004 02AF     		add	r7, sp, #8
 5434              	.LCFI203:
 5435              		.cfi_def_cfa 7, 32
 5436 0006 3960     		str	r1, [r7]
 5437 0008 FB1D     		add	r3, r7, #7
 5438 000a 011C     		add	r1, r0, #0
 5439 000c 1970     		strb	r1, [r3]
 5440 000e 3B1D     		add	r3, r7, #4
 5441 0010 1A80     		strh	r2, [r3]
1594:.\Generated_Source\PSoC4/ETH.c **** 	uint16 RxSize;
1595:.\Generated_Source\PSoC4/ETH.c **** 
1596:.\Generated_Source\PSoC4/ETH.c **** 	/*
1597:.\Generated_Source\PSoC4/ETH.c **** 	 * Revision Update:
1598:.\Generated_Source\PSoC4/ETH.c **** 	 * Removed dead code, added exit when there is an invlaid socket specified
1599:.\Generated_Source\PSoC4/ETH.c **** 	 */
1600:.\Generated_Source\PSoC4/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 5442              		.loc 1 1600 0
 5443 0012 FB1D     		add	r3, r7, #7
 5444 0014 1B78     		ldrb	r3, [r3]
 5445 0016 032B     		cmp	r3, #3
 5446 0018 01D9     		bls	.L261
 5447              		.loc 1 1600 0 is_stmt 0 discriminator 1
 5448 001a 0023     		mov	r3, #0
 5449 001c 2FE0     		b	.L262
 5450              	.L261:
1601:.\Generated_Source\PSoC4/ETH.c **** 	/*
1602:.\Generated_Source\PSoC4/ETH.c **** 	 * read the number of waiting bytes in the buffer memory
1603:.\Generated_Source\PSoC4/ETH.c **** 	 * but, clip the length of data read to the requested
1604:.\Generated_Source\PSoC4/ETH.c **** 	 * length of data.
1605:.\Generated_Source\PSoC4/ETH.c **** 	 */
1606:.\Generated_Source\PSoC4/ETH.c **** 	RxSize = ETH_GetRxSize( socket );
 5451              		.loc 1 1606 0 is_stmt 1
 5452 001e 3C1C     		mov	r4, r7
 5453 0020 0E34     		add	r4, r4, #14
 5454 0022 FB1D     		add	r3, r7, #7
 5455 0024 1B78     		ldrb	r3, [r3]
 5456 0026 181C     		mov	r0, r3
 5457 0028 FFF7FEFF 		bl	ETH_GetRxSize
 5458 002c 031C     		mov	r3, r0
 5459 002e 2380     		strh	r3, [r4]
1607:.\Generated_Source\PSoC4/ETH.c **** 	RxSize = (RxSize > length) ? length : RxSize;
 5460              		.loc 1 1607 0
 5461 0030 391C     		mov	r1, r7
 5462 0032 0E31     		add	r1, r1, #14
 5463 0034 3B1C     		mov	r3, r7
 5464 0036 0E33     		add	r3, r3, #14
 5465 0038 3A1D     		add	r2, r7, #4
 5466 003a 1288     		ldrh	r2, [r2]
 5467 003c 1B88     		ldrh	r3, [r3]
 5468 003e 9CB2     		uxth	r4, r3
 5469 0040 90B2     		uxth	r0, r2
 5470 0042 8442     		cmp	r4, r0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 126


 5471 0044 00D9     		bls	.L263
 5472 0046 131C     		add	r3, r2, #0
 5473              	.L263:
 5474 0048 0B80     		strh	r3, [r1]
1608:.\Generated_Source\PSoC4/ETH.c **** 	/* If there was waiting data, read it from the buffer */
1609:.\Generated_Source\PSoC4/ETH.c **** 	if (RxSize > 0) {
 5475              		.loc 1 1609 0
 5476 004a 3B1C     		mov	r3, r7
 5477 004c 0E33     		add	r3, r3, #14
 5478 004e 1B88     		ldrh	r3, [r3]
 5479 0050 002B     		cmp	r3, #0
 5480 0052 11D0     		beq	.L264
1610:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ProcessRxData( socket, 0, buffer, RxSize, 0);
 5481              		.loc 1 1610 0
 5482 0054 FB1D     		add	r3, r7, #7
 5483 0056 1978     		ldrb	r1, [r3]
 5484 0058 3A68     		ldr	r2, [r7]
 5485 005a 3B1C     		mov	r3, r7
 5486 005c 0E33     		add	r3, r3, #14
 5487 005e 1B88     		ldrh	r3, [r3]
 5488 0060 0020     		mov	r0, #0
 5489 0062 0090     		str	r0, [sp]
 5490 0064 081C     		mov	r0, r1
 5491 0066 0021     		mov	r1, #0
 5492 0068 FFF7FEFF 		bl	ETH_ProcessRxData
1611:.\Generated_Source\PSoC4/ETH.c **** 		/* 
1612:.\Generated_Source\PSoC4/ETH.c **** 		 * after reading the buffer data, send the receive command
1613:.\Generated_Source\PSoC4/ETH.c **** 		 * to the socket so that the W5100 completes the read
1614:.\Generated_Source\PSoC4/ETH.c **** 		 */
1615:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ExecuteSocketCommand(socket, 0x40);
 5493              		.loc 1 1615 0
 5494 006c FB1D     		add	r3, r7, #7
 5495 006e 1B78     		ldrb	r3, [r3]
 5496 0070 181C     		mov	r0, r3
 5497 0072 4021     		mov	r1, #64
 5498 0074 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
 5499              	.L264:
1616:.\Generated_Source\PSoC4/ETH.c **** 	}
1617:.\Generated_Source\PSoC4/ETH.c **** 	
1618:.\Generated_Source\PSoC4/ETH.c **** 	/* return the number of read bytes from the buffer memory */
1619:.\Generated_Source\PSoC4/ETH.c **** 	return RxSize;
 5500              		.loc 1 1619 0
 5501 0078 3B1C     		mov	r3, r7
 5502 007a 0E33     		add	r3, r3, #14
 5503 007c 1B88     		ldrh	r3, [r3]
 5504              	.L262:
1620:.\Generated_Source\PSoC4/ETH.c **** }
 5505              		.loc 1 1620 0
 5506 007e 181C     		mov	r0, r3
 5507 0080 BD46     		mov	sp, r7
 5508 0082 05B0     		add	sp, sp, #20
 5509              		@ sp needed for prologue
 5510 0084 90BD     		pop	{r4, r7, pc}
 5511              		.cfi_endproc
 5512              	.LFE68:
 5513              		.size	ETH_TcpReceive, .-ETH_TcpReceive
 5514 0086 C046     		.section	.text.ETH_TcpPrint,"ax",%progbits
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 127


 5515              		.align	2
 5516              		.global	ETH_TcpPrint
 5517              		.code	16
 5518              		.thumb_func
 5519              		.type	ETH_TcpPrint, %function
 5520              	ETH_TcpPrint:
 5521              	.LFB69:
1621:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1622:.\Generated_Source\PSoC4/ETH.c **** void
1623:.\Generated_Source\PSoC4/ETH.c **** ETH_TcpPrint( uint8 socket, const char* str )
1624:.\Generated_Source\PSoC4/ETH.c **** {
 5522              		.loc 1 1624 0
 5523              		.cfi_startproc
 5524 0000 80B5     		push	{r7, lr}
 5525              	.LCFI204:
 5526              		.cfi_def_cfa_offset 8
 5527              		.cfi_offset 7, -8
 5528              		.cfi_offset 14, -4
 5529 0002 82B0     		sub	sp, sp, #8
 5530              	.LCFI205:
 5531              		.cfi_def_cfa_offset 16
 5532 0004 00AF     		add	r7, sp, #0
 5533              	.LCFI206:
 5534              		.cfi_def_cfa_register 7
 5535 0006 021C     		mov	r2, r0
 5536 0008 3960     		str	r1, [r7]
 5537 000a FB1D     		add	r3, r7, #7
 5538 000c 1A70     		strb	r2, [r3]
1625:.\Generated_Source\PSoC4/ETH.c **** 	ETH_TcpSend(socket, (uint8*)str, strlen(str));
 5539              		.loc 1 1625 0
 5540 000e 3B68     		ldr	r3, [r7]
 5541 0010 181C     		mov	r0, r3
 5542 0012 FFF7FEFF 		bl	strlen
 5543 0016 031C     		mov	r3, r0
 5544 0018 9BB2     		uxth	r3, r3
 5545 001a FA1D     		add	r2, r7, #7
 5546 001c 1178     		ldrb	r1, [r2]
 5547 001e 3A68     		ldr	r2, [r7]
 5548 0020 081C     		mov	r0, r1
 5549 0022 111C     		mov	r1, r2
 5550 0024 1A1C     		mov	r2, r3
 5551 0026 FFF7FEFF 		bl	ETH_TcpSend
1626:.\Generated_Source\PSoC4/ETH.c **** }
 5552              		.loc 1 1626 0
 5553 002a BD46     		mov	sp, r7
 5554 002c 02B0     		add	sp, sp, #8
 5555              		@ sp needed for prologue
 5556 002e 80BD     		pop	{r7, pc}
 5557              		.cfi_endproc
 5558              	.LFE69:
 5559              		.size	ETH_TcpPrint, .-ETH_TcpPrint
 5560              		.section	.text.ETH_UdpOpen,"ax",%progbits
 5561              		.align	2
 5562              		.global	ETH_UdpOpen
 5563              		.code	16
 5564              		.thumb_func
 5565              		.type	ETH_UdpOpen, %function
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 128


 5566              	ETH_UdpOpen:
 5567              	.LFB70:
1627:.\Generated_Source\PSoC4/ETH.c **** #endif
1628:.\Generated_Source\PSoC4/ETH.c **** /* ======================================================================== */
1629:.\Generated_Source\PSoC4/ETH.c **** /* UDP */
1630:.\Generated_Source\PSoC4/ETH.c **** #if (1)
1631:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
1632:.\Generated_Source\PSoC4/ETH.c **** uint8
1633:.\Generated_Source\PSoC4/ETH.c **** ETH_UdpOpen(uint16 port)
1634:.\Generated_Source\PSoC4/ETH.c **** {
 5568              		.loc 1 1634 0
 5569              		.cfi_startproc
 5570 0000 80B5     		push	{r7, lr}
 5571              	.LCFI207:
 5572              		.cfi_def_cfa_offset 8
 5573              		.cfi_offset 7, -8
 5574              		.cfi_offset 14, -4
 5575 0002 82B0     		sub	sp, sp, #8
 5576              	.LCFI208:
 5577              		.cfi_def_cfa_offset 16
 5578 0004 00AF     		add	r7, sp, #0
 5579              	.LCFI209:
 5580              		.cfi_def_cfa_register 7
 5581 0006 021C     		mov	r2, r0
 5582 0008 BB1D     		add	r3, r7, #6
 5583 000a 1A80     		strh	r2, [r3]
1635:.\Generated_Source\PSoC4/ETH.c **** 	return ETH_SocketOpen(ETH_PROTO_UDP, port, 0);
 5584              		.loc 1 1635 0
 5585 000c BB1D     		add	r3, r7, #6
 5586 000e 1B88     		ldrh	r3, [r3]
 5587 0010 0220     		mov	r0, #2
 5588 0012 191C     		mov	r1, r3
 5589 0014 0022     		mov	r2, #0
 5590 0016 FFF7FEFF 		bl	ETH_SocketOpen
 5591 001a 031C     		mov	r3, r0
1636:.\Generated_Source\PSoC4/ETH.c **** }
 5592              		.loc 1 1636 0
 5593 001c 181C     		mov	r0, r3
 5594 001e BD46     		mov	sp, r7
 5595 0020 02B0     		add	sp, sp, #8
 5596              		@ sp needed for prologue
 5597 0022 80BD     		pop	{r7, pc}
 5598              		.cfi_endproc
 5599              	.LFE70:
 5600              		.size	ETH_UdpOpen, .-ETH_UdpOpen
 5601              		.section	.text.ETH_UdpSend,"ax",%progbits
 5602              		.align	2
 5603              		.global	ETH_UdpSend
 5604              		.code	16
 5605              		.thumb_func
 5606              		.type	ETH_UdpSend, %function
 5607              	ETH_UdpSend:
 5608              	.LFB71:
1637:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */	
1638:.\Generated_Source\PSoC4/ETH.c **** uint16
1639:.\Generated_Source\PSoC4/ETH.c **** ETH_UdpSend(uint8 socket, uint32 ip, uint16 port, uint8* buffer, uint16 length)
1640:.\Generated_Source\PSoC4/ETH.c **** {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 129


 5609              		.loc 1 1640 0
 5610              		.cfi_startproc
 5611 0000 80B5     		push	{r7, lr}
 5612              	.LCFI210:
 5613              		.cfi_def_cfa_offset 8
 5614              		.cfi_offset 7, -8
 5615              		.cfi_offset 14, -4
 5616 0002 86B0     		sub	sp, sp, #24
 5617              	.LCFI211:
 5618              		.cfi_def_cfa_offset 32
 5619 0004 00AF     		add	r7, sp, #0
 5620              	.LCFI212:
 5621              		.cfi_def_cfa_register 7
 5622 0006 B960     		str	r1, [r7, #8]
 5623 0008 7B60     		str	r3, [r7, #4]
 5624 000a 3B1C     		mov	r3, r7
 5625 000c 0F33     		add	r3, r3, #15
 5626 000e 011C     		add	r1, r0, #0
 5627 0010 1970     		strb	r1, [r3]
 5628 0012 3B1C     		mov	r3, r7
 5629 0014 0C33     		add	r3, r3, #12
 5630 0016 1A80     		strh	r2, [r3]
1641:.\Generated_Source\PSoC4/ETH.c **** 	uint16 TxSize;
1642:.\Generated_Source\PSoC4/ETH.c **** 	
1643:.\Generated_Source\PSoC4/ETH.c **** 	/*
1644:.\Generated_Source\PSoC4/ETH.c **** 	 * 2.0 Patch: retun immediately upon the detection of a socket that is not open
1645:.\Generated_Source\PSoC4/ETH.c **** 	 */
1646:.\Generated_Source\PSoC4/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 5631              		.loc 1 1646 0
 5632 0018 3B1C     		mov	r3, r7
 5633 001a 0F33     		add	r3, r3, #15
 5634 001c 1B78     		ldrb	r3, [r3]
 5635 001e 032B     		cmp	r3, #3
 5636 0020 01D9     		bls	.L269
 5637              		.loc 1 1646 0 is_stmt 0 discriminator 1
 5638 0022 0023     		mov	r3, #0
 5639 0024 46E0     		b	.L270
 5640              	.L269:
1647:.\Generated_Source\PSoC4/ETH.c **** 	/*
1648:.\Generated_Source\PSoC4/ETH.c **** 	 * Transmit a buffer of data to a specified remote system using UDP.
1649:.\Generated_Source\PSoC4/ETH.c **** 	 */
1650:.\Generated_Source\PSoC4/ETH.c **** 	if (ETH_GetSocketStatus(socket) == 0x17) {
 5641              		.loc 1 1650 0 is_stmt 1
 5642 0026 3B1C     		mov	r3, r7
 5643 0028 0F33     		add	r3, r3, #15
 5644 002a 1B78     		ldrb	r3, [r3]
 5645 002c 181C     		mov	r0, r3
 5646 002e FFF7FEFF 		bl	ETH_GetSocketStatus
 5647 0032 031C     		mov	r3, r0
 5648 0034 172B     		cmp	r3, #23
 5649 0036 3AD1     		bne	.L271
1651:.\Generated_Source\PSoC4/ETH.c **** 		/*
1652:.\Generated_Source\PSoC4/ETH.c **** 		 * The socket has been established, so wait for available
1653:.\Generated_Source\PSoC4/ETH.c **** 		 * room in the transmit buffer of the socket, but, trim the
1654:.\Generated_Source\PSoC4/ETH.c **** 		 * transmitted data length to no more than the available
1655:.\Generated_Source\PSoC4/ETH.c **** 		 * buffer size in the device. (2K)
1656:.\Generated_Source\PSoC4/ETH.c **** 		 */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 130


1657:.\Generated_Source\PSoC4/ETH.c **** 		TxSize = (length > 0x0800) ? 0x0800 : length;
 5650              		.loc 1 1657 0
 5651 0038 3A1C     		mov	r2, r7
 5652 003a 1632     		add	r2, r2, #22
 5653 003c 3B1C     		mov	r3, r7
 5654 003e 2033     		add	r3, r3, #32
 5655 0040 1B88     		ldrh	r3, [r3]
 5656 0042 98B2     		uxth	r0, r3
 5657 0044 8021     		mov	r1, #128
 5658 0046 0901     		lsl	r1, r1, #4
 5659 0048 8842     		cmp	r0, r1
 5660 004a 01D9     		bls	.L272
 5661 004c 8023     		mov	r3, #128
 5662 004e 1B01     		lsl	r3, r3, #4
 5663              	.L272:
 5664 0050 1380     		strh	r3, [r2]
1658:.\Generated_Source\PSoC4/ETH.c **** 		if ( (ip != 0) && (ip != 0xFFFFFFFF) ) {
 5665              		.loc 1 1658 0
 5666 0052 BB68     		ldr	r3, [r7, #8]
 5667 0054 002B     		cmp	r3, #0
 5668 0056 26D0     		beq	.L273
 5669              		.loc 1 1658 0 is_stmt 0 discriminator 1
 5670 0058 BB68     		ldr	r3, [r7, #8]
 5671 005a 0133     		add	r3, r3, #1
 5672 005c 23D0     		beq	.L273
1659:.\Generated_Source\PSoC4/ETH.c **** 			/*
1660:.\Generated_Source\PSoC4/ETH.c **** 			 * Store the destination IP and port in the chip
1661:.\Generated_Source\PSoC4/ETH.c **** 			 * socket registers.
1662:.\Generated_Source\PSoC4/ETH.c **** 			 */
1663:.\Generated_Source\PSoC4/ETH.c **** 			ETH_SetSocketDestIP( socket, ip );
 5673              		.loc 1 1663 0 is_stmt 1
 5674 005e 3B1C     		mov	r3, r7
 5675 0060 0F33     		add	r3, r3, #15
 5676 0062 1A78     		ldrb	r2, [r3]
 5677 0064 BB68     		ldr	r3, [r7, #8]
 5678 0066 101C     		mov	r0, r2
 5679 0068 191C     		mov	r1, r3
 5680 006a FFF7FEFF 		bl	ETH_SetSocketDestIP
1664:.\Generated_Source\PSoC4/ETH.c **** 			ETH_SetSocketDestPort( socket, port );
 5681              		.loc 1 1664 0
 5682 006e 3B1C     		mov	r3, r7
 5683 0070 0F33     		add	r3, r3, #15
 5684 0072 1A78     		ldrb	r2, [r3]
 5685 0074 3B1C     		mov	r3, r7
 5686 0076 0C33     		add	r3, r3, #12
 5687 0078 1B88     		ldrh	r3, [r3]
 5688 007a 101C     		mov	r0, r2
 5689 007c 191C     		mov	r1, r3
 5690 007e FFF7FEFF 		bl	ETH_SetSocketDestPort
1665:.\Generated_Source\PSoC4/ETH.c **** 			/*
1666:.\Generated_Source\PSoC4/ETH.c **** 			 * process the transmission buffer, and write it in to
1667:.\Generated_Source\PSoC4/ETH.c **** 			 * the chip buffer memory.
1668:.\Generated_Source\PSoC4/ETH.c **** 			 */
1669:.\Generated_Source\PSoC4/ETH.c **** 			ETH_ProcessTxData(socket,0,buffer,TxSize);
 5691              		.loc 1 1669 0
 5692 0082 3B1C     		mov	r3, r7
 5693 0084 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 131


 5694 0086 1978     		ldrb	r1, [r3]
 5695 0088 7A68     		ldr	r2, [r7, #4]
 5696 008a 3B1C     		mov	r3, r7
 5697 008c 1633     		add	r3, r3, #22
 5698 008e 1B88     		ldrh	r3, [r3]
 5699 0090 081C     		mov	r0, r1
 5700 0092 0021     		mov	r1, #0
 5701 0094 FFF7FEFF 		bl	ETH_ProcessTxData
1670:.\Generated_Source\PSoC4/ETH.c **** 			/*
1671:.\Generated_Source\PSoC4/ETH.c **** 			 * Issue the send command to transmit the buffer.
1672:.\Generated_Source\PSoC4/ETH.c **** 			 */
1673:.\Generated_Source\PSoC4/ETH.c **** 			ETH_SocketSend( socket ); 
 5702              		.loc 1 1673 0
 5703 0098 3B1C     		mov	r3, r7
 5704 009a 0F33     		add	r3, r3, #15
 5705 009c 1B78     		ldrb	r3, [r3]
 5706 009e 181C     		mov	r0, r3
 5707 00a0 FFF7FEFF 		bl	ETH_SocketSend
 5708 00a4 03E0     		b	.L271
 5709              	.L273:
1674:.\Generated_Source\PSoC4/ETH.c **** 		}
1675:.\Generated_Source\PSoC4/ETH.c **** 		else {
1676:.\Generated_Source\PSoC4/ETH.c **** 			/* an invalid IP address was issued, so return that no data was sent. */
1677:.\Generated_Source\PSoC4/ETH.c **** 			TxSize = 0;
 5710              		.loc 1 1677 0
 5711 00a6 3B1C     		mov	r3, r7
 5712 00a8 1633     		add	r3, r3, #22
 5713 00aa 0022     		mov	r2, #0
 5714 00ac 1A80     		strh	r2, [r3]
 5715              	.L271:
1678:.\Generated_Source\PSoC4/ETH.c **** 		}
1679:.\Generated_Source\PSoC4/ETH.c **** 	}
1680:.\Generated_Source\PSoC4/ETH.c **** 	return TxSize;
 5716              		.loc 1 1680 0
 5717 00ae 3B1C     		mov	r3, r7
 5718 00b0 1633     		add	r3, r3, #22
 5719 00b2 1B88     		ldrh	r3, [r3]
 5720              	.L270:
1681:.\Generated_Source\PSoC4/ETH.c **** }
 5721              		.loc 1 1681 0
 5722 00b4 181C     		mov	r0, r3
 5723 00b6 BD46     		mov	sp, r7
 5724 00b8 06B0     		add	sp, sp, #24
 5725              		@ sp needed for prologue
 5726 00ba 80BD     		pop	{r7, pc}
 5727              		.cfi_endproc
 5728              	.LFE71:
 5729              		.size	ETH_UdpSend, .-ETH_UdpSend
 5730              		.section	.text.ETH_UdpReceive,"ax",%progbits
 5731              		.align	2
 5732              		.global	ETH_UdpReceive
 5733              		.code	16
 5734              		.thumb_func
 5735              		.type	ETH_UdpReceive, %function
 5736              	ETH_UdpReceive:
 5737              	.LFB72:
1682:.\Generated_Source\PSoC4/ETH.c **** /* ------------------------------------------------------------------------ */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 132


1683:.\Generated_Source\PSoC4/ETH.c **** uint16
1684:.\Generated_Source\PSoC4/ETH.c **** ETH_UdpReceive(uint8 socket, uint32 *ip, uint16 *port, uint8* buffer, uint16 length)
1685:.\Generated_Source\PSoC4/ETH.c **** {
 5738              		.loc 1 1685 0
 5739              		.cfi_startproc
 5740 0000 90B5     		push	{r4, r7, lr}
 5741              	.LCFI213:
 5742              		.cfi_def_cfa_offset 12
 5743              		.cfi_offset 4, -12
 5744              		.cfi_offset 7, -8
 5745              		.cfi_offset 14, -4
 5746 0002 8BB0     		sub	sp, sp, #44
 5747              	.LCFI214:
 5748              		.cfi_def_cfa_offset 56
 5749 0004 02AF     		add	r7, sp, #8
 5750              	.LCFI215:
 5751              		.cfi_def_cfa 7, 48
 5752 0006 B960     		str	r1, [r7, #8]
 5753 0008 7A60     		str	r2, [r7, #4]
 5754 000a 3B60     		str	r3, [r7]
 5755 000c 3B1C     		mov	r3, r7
 5756 000e 0F33     		add	r3, r3, #15
 5757 0010 021C     		add	r2, r0, #0
 5758 0012 1A70     		strb	r2, [r3]
1686:.\Generated_Source\PSoC4/ETH.c **** 	uint16 RxSize;
1687:.\Generated_Source\PSoC4/ETH.c **** 	uint16 PacketSize;
1688:.\Generated_Source\PSoC4/ETH.c **** 	uint8  PacketHeader[8];
1689:.\Generated_Source\PSoC4/ETH.c **** 	
1690:.\Generated_Source\PSoC4/ETH.c **** 	/*
1691:.\Generated_Source\PSoC4/ETH.c **** 	 * 2.0 Patch: retun immediately upon the detection of a socket that is not open
1692:.\Generated_Source\PSoC4/ETH.c **** 	 */
1693:.\Generated_Source\PSoC4/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 5759              		.loc 1 1693 0
 5760 0014 3B1C     		mov	r3, r7
 5761 0016 0F33     		add	r3, r3, #15
 5762 0018 1B78     		ldrb	r3, [r3]
 5763 001a 032B     		cmp	r3, #3
 5764 001c 01D9     		bls	.L275
 5765              		.loc 1 1693 0 is_stmt 0 discriminator 1
 5766 001e 0023     		mov	r3, #0
 5767 0020 94E0     		b	.L281
 5768              	.L275:
1694:.\Generated_Source\PSoC4/ETH.c **** 	/*
1695:.\Generated_Source\PSoC4/ETH.c **** 	 * read the number of waiting bytes in the buffer memory
1696:.\Generated_Source\PSoC4/ETH.c **** 	 * but, clip the length of data read to the requested
1697:.\Generated_Source\PSoC4/ETH.c **** 	 * length of data.
1698:.\Generated_Source\PSoC4/ETH.c **** 	 */
1699:.\Generated_Source\PSoC4/ETH.c **** 	RxSize = ETH_GetRxSize( socket );
 5769              		.loc 1 1699 0 is_stmt 1
 5770 0022 3C1C     		mov	r4, r7
 5771 0024 1E34     		add	r4, r4, #30
 5772 0026 3B1C     		mov	r3, r7
 5773 0028 0F33     		add	r3, r3, #15
 5774 002a 1B78     		ldrb	r3, [r3]
 5775 002c 181C     		mov	r0, r3
 5776 002e FFF7FEFF 		bl	ETH_GetRxSize
 5777 0032 031C     		mov	r3, r0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 133


 5778 0034 2380     		strh	r3, [r4]
1700:.\Generated_Source\PSoC4/ETH.c **** 	RxSize = (RxSize > length+8) ? length : RxSize;
 5779              		.loc 1 1700 0
 5780 0036 3B1C     		mov	r3, r7
 5781 0038 1E33     		add	r3, r3, #30
 5782 003a 1A88     		ldrh	r2, [r3]
 5783 003c 3B1C     		mov	r3, r7
 5784 003e 3033     		add	r3, r3, #48
 5785 0040 1B88     		ldrh	r3, [r3]
 5786 0042 0833     		add	r3, r3, #8
 5787 0044 9A42     		cmp	r2, r3
 5788 0046 03DD     		ble	.L277
 5789              		.loc 1 1700 0 is_stmt 0 discriminator 1
 5790 0048 3B1C     		mov	r3, r7
 5791 004a 3033     		add	r3, r3, #48
 5792 004c 1B88     		ldrh	r3, [r3]
 5793 004e 02E0     		b	.L278
 5794              	.L277:
 5795              		.loc 1 1700 0 discriminator 2
 5796 0050 3B1C     		mov	r3, r7
 5797 0052 1E33     		add	r3, r3, #30
 5798 0054 1B88     		ldrh	r3, [r3]
 5799              	.L278:
 5800              		.loc 1 1700 0 discriminator 3
 5801 0056 3A1C     		mov	r2, r7
 5802 0058 1E32     		add	r2, r2, #30
 5803 005a 1380     		strh	r3, [r2]
1701:.\Generated_Source\PSoC4/ETH.c **** 	/* If there was waiting data, read it from the buffer */
1702:.\Generated_Source\PSoC4/ETH.c **** 	if (RxSize > 0) {
 5804              		.loc 1 1702 0 is_stmt 1 discriminator 3
 5805 005c 3B1C     		mov	r3, r7
 5806 005e 1E33     		add	r3, r3, #30
 5807 0060 1B88     		ldrh	r3, [r3]
 5808 0062 002B     		cmp	r3, #0
 5809 0064 6FD0     		beq	.L279
1703:.\Generated_Source\PSoC4/ETH.c **** 		/*
1704:.\Generated_Source\PSoC4/ETH.c **** 		 * the UDP packet is stored in the buffer memory as an 8-byte
1705:.\Generated_Source\PSoC4/ETH.c **** 		 * packet header followed by the packet data.
1706:.\Generated_Source\PSoC4/ETH.c **** 		*/
1707:.\Generated_Source\PSoC4/ETH.c **** 		ETH_ProcessRxData( socket, 0, &PacketHeader[0], 8, 0);
 5810              		.loc 1 1707 0
 5811 0066 3B1C     		mov	r3, r7
 5812 0068 0F33     		add	r3, r3, #15
 5813 006a 1A78     		ldrb	r2, [r3]
 5814 006c 3B1C     		mov	r3, r7
 5815 006e 1433     		add	r3, r3, #20
 5816 0070 0021     		mov	r1, #0
 5817 0072 0091     		str	r1, [sp]
 5818 0074 101C     		mov	r0, r2
 5819 0076 0021     		mov	r1, #0
 5820 0078 1A1C     		mov	r2, r3
 5821 007a 0823     		mov	r3, #8
 5822 007c FFF7FEFF 		bl	ETH_ProcessRxData
1708:.\Generated_Source\PSoC4/ETH.c **** 		/*
1709:.\Generated_Source\PSoC4/ETH.c **** 		 * The packet header contains the 4-byte IP address followed by the
1710:.\Generated_Source\PSoC4/ETH.c **** 		 * 2-byte port number and the 2-byte packet data length
1711:.\Generated_Source\PSoC4/ETH.c **** 		 */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 134


1712:.\Generated_Source\PSoC4/ETH.c **** 		*ip = ETH_IPADDRESS(PacketHeader[0], PacketHeader[1], PacketHeader[2], PacketHeader[3]);
 5823              		.loc 1 1712 0
 5824 0080 3B1C     		mov	r3, r7
 5825 0082 1433     		add	r3, r3, #20
 5826 0084 1B78     		ldrb	r3, [r3]
 5827 0086 1A1C     		mov	r2, r3
 5828 0088 3B1C     		mov	r3, r7
 5829 008a 1433     		add	r3, r3, #20
 5830 008c 5B78     		ldrb	r3, [r3, #1]
 5831 008e 1B02     		lsl	r3, r3, #8
 5832 0090 1B04     		lsl	r3, r3, #16
 5833 0092 1B0C     		lsr	r3, r3, #16
 5834 0094 D218     		add	r2, r2, r3
 5835 0096 3B1C     		mov	r3, r7
 5836 0098 1433     		add	r3, r3, #20
 5837 009a 9B78     		ldrb	r3, [r3, #2]
 5838 009c 1B04     		lsl	r3, r3, #16
 5839 009e 191C     		mov	r1, r3
 5840 00a0 FF23     		mov	r3, #255
 5841 00a2 1B04     		lsl	r3, r3, #16
 5842 00a4 0B40     		and	r3, r1
 5843 00a6 D218     		add	r2, r2, r3
 5844 00a8 3B1C     		mov	r3, r7
 5845 00aa 1433     		add	r3, r3, #20
 5846 00ac DB78     		ldrb	r3, [r3, #3]
 5847 00ae 1B06     		lsl	r3, r3, #24
 5848 00b0 D218     		add	r2, r2, r3
 5849 00b2 BB68     		ldr	r3, [r7, #8]
 5850 00b4 1A60     		str	r2, [r3]
1713:.\Generated_Source\PSoC4/ETH.c **** 		*port = (uint16)((PacketHeader[4]<<8)&0xFF00) | (PacketHeader[5]&0x00FF);
 5851              		.loc 1 1713 0
 5852 00b6 3B1C     		mov	r3, r7
 5853 00b8 1433     		add	r3, r3, #20
 5854 00ba 1B79     		ldrb	r3, [r3, #4]
 5855 00bc 1B02     		lsl	r3, r3, #8
 5856 00be 9BB2     		uxth	r3, r3
 5857 00c0 FF22     		mov	r2, #255
 5858 00c2 9343     		bic	r3, r2
 5859 00c4 9AB2     		uxth	r2, r3
 5860 00c6 3B1C     		mov	r3, r7
 5861 00c8 1433     		add	r3, r3, #20
 5862 00ca 5B79     		ldrb	r3, [r3, #5]
 5863 00cc 1343     		orr	r3, r2
 5864 00ce 9BB2     		uxth	r3, r3
 5865 00d0 9AB2     		uxth	r2, r3
 5866 00d2 7B68     		ldr	r3, [r7, #4]
 5867 00d4 1A80     		strh	r2, [r3]
1714:.\Generated_Source\PSoC4/ETH.c **** 		PacketSize = (uint16)((PacketHeader[6]<<8)&0xFF00) | (PacketHeader[7]&0x00FF);
 5868              		.loc 1 1714 0
 5869 00d6 3B1C     		mov	r3, r7
 5870 00d8 1433     		add	r3, r3, #20
 5871 00da 9B79     		ldrb	r3, [r3, #6]
 5872 00dc 1B02     		lsl	r3, r3, #8
 5873 00de 9BB2     		uxth	r3, r3
 5874 00e0 FF22     		mov	r2, #255
 5875 00e2 9343     		bic	r3, r2
 5876 00e4 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 135


 5877 00e6 3B1C     		mov	r3, r7
 5878 00e8 1433     		add	r3, r3, #20
 5879 00ea DB79     		ldrb	r3, [r3, #7]
 5880 00ec 1343     		orr	r3, r2
 5881 00ee 9AB2     		uxth	r2, r3
 5882 00f0 3B1C     		mov	r3, r7
 5883 00f2 1C33     		add	r3, r3, #28
 5884 00f4 1A80     		strh	r2, [r3]
1715:.\Generated_Source\PSoC4/ETH.c **** 		/*
1716:.\Generated_Source\PSoC4/ETH.c **** 		 * Check to make sure that the packet data has been received completely
1717:.\Generated_Source\PSoC4/ETH.c **** 		 */
1718:.\Generated_Source\PSoC4/ETH.c **** 		if (RxSize >= (PacketSize+8) ) {
 5885              		.loc 1 1718 0
 5886 00f6 3B1C     		mov	r3, r7
 5887 00f8 1E33     		add	r3, r3, #30
 5888 00fa 1A88     		ldrh	r2, [r3]
 5889 00fc 3B1C     		mov	r3, r7
 5890 00fe 1C33     		add	r3, r3, #28
 5891 0100 1B88     		ldrh	r3, [r3]
 5892 0102 0833     		add	r3, r3, #8
 5893 0104 9A42     		cmp	r2, r3
 5894 0106 1ADB     		blt	.L280
1719:.\Generated_Source\PSoC4/ETH.c **** 		
1720:.\Generated_Source\PSoC4/ETH.c **** 			ETH_ProcessRxData( socket, 8, buffer, PacketSize, 0);
 5895              		.loc 1 1720 0
 5896 0108 3B1C     		mov	r3, r7
 5897 010a 0F33     		add	r3, r3, #15
 5898 010c 1978     		ldrb	r1, [r3]
 5899 010e 3A68     		ldr	r2, [r7]
 5900 0110 3B1C     		mov	r3, r7
 5901 0112 1C33     		add	r3, r3, #28
 5902 0114 1B88     		ldrh	r3, [r3]
 5903 0116 0020     		mov	r0, #0
 5904 0118 0090     		str	r0, [sp]
 5905 011a 081C     		mov	r0, r1
 5906 011c 0821     		mov	r1, #8
 5907 011e FFF7FEFF 		bl	ETH_ProcessRxData
1721:.\Generated_Source\PSoC4/ETH.c **** 			/* 
1722:.\Generated_Source\PSoC4/ETH.c **** 			 * after reading the buffer data, send the receive command
1723:.\Generated_Source\PSoC4/ETH.c **** 			 * to the socket so that the W5100 completes the read
1724:.\Generated_Source\PSoC4/ETH.c **** 			 */
1725:.\Generated_Source\PSoC4/ETH.c **** 			ETH_ExecuteSocketCommand(socket, 0x40);
 5908              		.loc 1 1725 0
 5909 0122 3B1C     		mov	r3, r7
 5910 0124 0F33     		add	r3, r3, #15
 5911 0126 1B78     		ldrb	r3, [r3]
 5912 0128 181C     		mov	r0, r3
 5913 012a 4021     		mov	r1, #64
 5914 012c FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1726:.\Generated_Source\PSoC4/ETH.c **** 			RxSize = PacketSize;
 5915              		.loc 1 1726 0
 5916 0130 3B1C     		mov	r3, r7
 5917 0132 1E33     		add	r3, r3, #30
 5918 0134 3A1C     		mov	r2, r7
 5919 0136 1C32     		add	r2, r2, #28
 5920 0138 1288     		ldrh	r2, [r2]
 5921 013a 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 136


 5922 013c 03E0     		b	.L279
 5923              	.L280:
1727:.\Generated_Source\PSoC4/ETH.c **** 		}
1728:.\Generated_Source\PSoC4/ETH.c **** 		else {
1729:.\Generated_Source\PSoC4/ETH.c **** 			RxSize = 8;
 5924              		.loc 1 1729 0
 5925 013e 3B1C     		mov	r3, r7
 5926 0140 1E33     		add	r3, r3, #30
 5927 0142 0822     		mov	r2, #8
 5928 0144 1A80     		strh	r2, [r3]
 5929              	.L279:
1730:.\Generated_Source\PSoC4/ETH.c **** 		}
1731:.\Generated_Source\PSoC4/ETH.c **** 	}
1732:.\Generated_Source\PSoC4/ETH.c **** 	
1733:.\Generated_Source\PSoC4/ETH.c **** 	/* return the number of read bytes from the buffer memory */
1734:.\Generated_Source\PSoC4/ETH.c **** 	return RxSize;
 5930              		.loc 1 1734 0
 5931 0146 3B1C     		mov	r3, r7
 5932 0148 1E33     		add	r3, r3, #30
 5933 014a 1B88     		ldrh	r3, [r3]
 5934              	.L281:
1735:.\Generated_Source\PSoC4/ETH.c **** }
 5935              		.loc 1 1735 0
 5936 014c 181C     		mov	r0, r3
 5937 014e BD46     		mov	sp, r7
 5938 0150 09B0     		add	sp, sp, #36
 5939              		@ sp needed for prologue
 5940 0152 90BD     		pop	{r4, r7, pc}
 5941              		.cfi_endproc
 5942              	.LFE72:
 5943              		.size	ETH_UdpReceive, .-ETH_UdpReceive
 5944              		.text
 5945              	.Letext0:
 5946              		.file 2 "./Generated_Source/PSoC4/cytypes.h"
 5947              		.section	.debug_info,"",%progbits
 5948              	.Ldebug_info0:
 5949 0000 3F150000 		.4byte	0x153f
 5950 0004 0200     		.2byte	0x2
 5951 0006 00000000 		.4byte	.Ldebug_abbrev0
 5952 000a 04       		.byte	0x4
 5953 000b 01       		.uleb128 0x1
 5954 000c 26050000 		.4byte	.LASF144
 5955 0010 01       		.byte	0x1
 5956 0011 66040000 		.4byte	.LASF145
 5957 0015 F6050000 		.4byte	.LASF146
 5958 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5959 001d 00000000 		.4byte	0
 5960 0021 00000000 		.4byte	0
 5961 0025 00000000 		.4byte	.Ldebug_line0
 5962 0029 02       		.uleb128 0x2
 5963 002a 01       		.byte	0x1
 5964 002b 06       		.byte	0x6
 5965 002c 60010000 		.4byte	.LASF0
 5966 0030 02       		.uleb128 0x2
 5967 0031 01       		.byte	0x1
 5968 0032 08       		.byte	0x8
 5969 0033 74050000 		.4byte	.LASF1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 137


 5970 0037 02       		.uleb128 0x2
 5971 0038 02       		.byte	0x2
 5972 0039 05       		.byte	0x5
 5973 003a A1050000 		.4byte	.LASF2
 5974 003e 02       		.uleb128 0x2
 5975 003f 02       		.byte	0x2
 5976 0040 07       		.byte	0x7
 5977 0041 6D030000 		.4byte	.LASF3
 5978 0045 02       		.uleb128 0x2
 5979 0046 04       		.byte	0x4
 5980 0047 05       		.byte	0x5
 5981 0048 F0010000 		.4byte	.LASF4
 5982 004c 02       		.uleb128 0x2
 5983 004d 04       		.byte	0x4
 5984 004e 07       		.byte	0x7
 5985 004f 47030000 		.4byte	.LASF5
 5986 0053 02       		.uleb128 0x2
 5987 0054 08       		.byte	0x8
 5988 0055 05       		.byte	0x5
 5989 0056 52010000 		.4byte	.LASF6
 5990 005a 02       		.uleb128 0x2
 5991 005b 08       		.byte	0x8
 5992 005c 07       		.byte	0x7
 5993 005d D5000000 		.4byte	.LASF7
 5994 0061 03       		.uleb128 0x3
 5995 0062 04       		.byte	0x4
 5996 0063 05       		.byte	0x5
 5997 0064 696E7400 		.ascii	"int\000"
 5998 0068 02       		.uleb128 0x2
 5999 0069 04       		.byte	0x4
 6000 006a 07       		.byte	0x7
 6001 006b F4020000 		.4byte	.LASF8
 6002 006f 04       		.uleb128 0x4
 6003 0070 06020000 		.4byte	.LASF9
 6004 0074 02       		.byte	0x2
 6005 0075 5B       		.byte	0x5b
 6006 0076 30000000 		.4byte	0x30
 6007 007a 04       		.uleb128 0x4
 6008 007b 26000000 		.4byte	.LASF10
 6009 007f 02       		.byte	0x2
 6010 0080 5C       		.byte	0x5c
 6011 0081 3E000000 		.4byte	0x3e
 6012 0085 04       		.uleb128 0x4
 6013 0086 80020000 		.4byte	.LASF11
 6014 008a 02       		.byte	0x2
 6015 008b 5D       		.byte	0x5d
 6016 008c 4C000000 		.4byte	0x4c
 6017 0090 02       		.uleb128 0x2
 6018 0091 04       		.byte	0x4
 6019 0092 04       		.byte	0x4
 6020 0093 EB040000 		.4byte	.LASF12
 6021 0097 02       		.uleb128 0x2
 6022 0098 08       		.byte	0x8
 6023 0099 04       		.byte	0x4
 6024 009a 2A020000 		.4byte	.LASF13
 6025 009e 02       		.uleb128 0x2
 6026 009f 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 138


 6027 00a0 08       		.byte	0x8
 6028 00a1 D1060000 		.4byte	.LASF14
 6029 00a5 04       		.uleb128 0x4
 6030 00a6 00080000 		.4byte	.LASF15
 6031 00aa 02       		.byte	0x2
 6032 00ab E8       		.byte	0xe8
 6033 00ac 4C000000 		.4byte	0x4c
 6034 00b0 02       		.uleb128 0x2
 6035 00b1 04       		.byte	0x4
 6036 00b2 07       		.byte	0x7
 6037 00b3 8C040000 		.4byte	.LASF16
 6038 00b7 05       		.uleb128 0x5
 6039 00b8 04       		.byte	0x4
 6040 00b9 9E000000 		.4byte	0x9e
 6041 00bd 05       		.uleb128 0x5
 6042 00be 04       		.byte	0x4
 6043 00bf C3000000 		.4byte	0xc3
 6044 00c3 06       		.uleb128 0x6
 6045 00c4 9E000000 		.4byte	0x9e
 6046 00c8 07       		.uleb128 0x7
 6047 00c9 08       		.byte	0x8
 6048 00ca 01       		.byte	0x1
 6049 00cb 32       		.byte	0x32
 6050 00cc 25010000 		.4byte	0x125
 6051 00d0 08       		.uleb128 0x8
 6052 00d1 FF000000 		.4byte	.LASF17
 6053 00d5 01       		.byte	0x1
 6054 00d6 34       		.byte	0x34
 6055 00d7 6F000000 		.4byte	0x6f
 6056 00db 02       		.byte	0x2
 6057 00dc 23       		.byte	0x23
 6058 00dd 00       		.uleb128 0
 6059 00de 08       		.uleb128 0x8
 6060 00df B6040000 		.4byte	.LASF18
 6061 00e3 01       		.byte	0x1
 6062 00e4 35       		.byte	0x35
 6063 00e5 6F000000 		.4byte	0x6f
 6064 00e9 02       		.byte	0x2
 6065 00ea 23       		.byte	0x23
 6066 00eb 01       		.uleb128 0x1
 6067 00ec 08       		.uleb128 0x8
 6068 00ed 86010000 		.4byte	.LASF19
 6069 00f1 01       		.byte	0x1
 6070 00f2 36       		.byte	0x36
 6071 00f3 7A000000 		.4byte	0x7a
 6072 00f7 02       		.byte	0x2
 6073 00f8 23       		.byte	0x23
 6074 00f9 02       		.uleb128 0x2
 6075 00fa 08       		.uleb128 0x8
 6076 00fb 89060000 		.4byte	.LASF20
 6077 00ff 01       		.byte	0x1
 6078 0100 37       		.byte	0x37
 6079 0101 6F000000 		.4byte	0x6f
 6080 0105 02       		.byte	0x2
 6081 0106 23       		.byte	0x23
 6082 0107 04       		.uleb128 0x4
 6083 0108 08       		.uleb128 0x8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 139


 6084 0109 95040000 		.4byte	.LASF21
 6085 010d 01       		.byte	0x1
 6086 010e 38       		.byte	0x38
 6087 010f 6F000000 		.4byte	0x6f
 6088 0113 02       		.byte	0x2
 6089 0114 23       		.byte	0x23
 6090 0115 05       		.uleb128 0x5
 6091 0116 08       		.uleb128 0x8
 6092 0117 01070000 		.4byte	.LASF22
 6093 011b 01       		.byte	0x1
 6094 011c 39       		.byte	0x39
 6095 011d 6F000000 		.4byte	0x6f
 6096 0121 02       		.byte	0x2
 6097 0122 23       		.byte	0x23
 6098 0123 06       		.uleb128 0x6
 6099 0124 00       		.byte	0
 6100 0125 04       		.uleb128 0x4
 6101 0126 A2000000 		.4byte	.LASF23
 6102 012a 01       		.byte	0x1
 6103 012b 3A       		.byte	0x3a
 6104 012c C8000000 		.4byte	0xc8
 6105 0130 09       		.uleb128 0x9
 6106 0131 01       		.byte	0x1
 6107 0132 DB060000 		.4byte	.LASF24
 6108 0136 01       		.byte	0x1
 6109 0137 79       		.byte	0x79
 6110 0138 01       		.byte	0x1
 6111 0139 00000000 		.4byte	.LFB0
 6112 013d 0E000000 		.4byte	.LFE0
 6113 0141 00000000 		.4byte	.LLST0
 6114 0145 01       		.byte	0x1
 6115 0146 09       		.uleb128 0x9
 6116 0147 01       		.byte	0x1
 6117 0148 2E080000 		.4byte	.LASF25
 6118 014c 01       		.byte	0x1
 6119 014d 96       		.byte	0x96
 6120 014e 01       		.byte	0x1
 6121 014f 00000000 		.4byte	.LFB1
 6122 0153 0E000000 		.4byte	.LFE1
 6123 0157 2C000000 		.4byte	.LLST1
 6124 015b 01       		.byte	0x1
 6125 015c 0A       		.uleb128 0xa
 6126 015d 01       		.byte	0x1
 6127 015e EC000000 		.4byte	.LASF31
 6128 0162 01       		.byte	0x1
 6129 0163 BA       		.byte	0xba
 6130 0164 01       		.byte	0x1
 6131 0165 00000000 		.4byte	.LFB2
 6132 0169 18010000 		.4byte	.LFE2
 6133 016d 58000000 		.4byte	.LLST2
 6134 0171 01       		.byte	0x1
 6135 0172 D9010000 		.4byte	0x1d9
 6136 0176 0B       		.uleb128 0xb
 6137 0177 FA000000 		.4byte	.LASF26
 6138 017b 01       		.byte	0x1
 6139 017c BA       		.byte	0xba
 6140 017d 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 140


 6141 0181 02       		.byte	0x2
 6142 0182 91       		.byte	0x91
 6143 0183 66       		.sleb128 -26
 6144 0184 0C       		.uleb128 0xc
 6145 0185 64617400 		.ascii	"dat\000"
 6146 0189 01       		.byte	0x1
 6147 018a BA       		.byte	0xba
 6148 018b D9010000 		.4byte	0x1d9
 6149 018f 02       		.byte	0x2
 6150 0190 91       		.byte	0x91
 6151 0191 60       		.sleb128 -32
 6152 0192 0B       		.uleb128 0xb
 6153 0193 CA060000 		.4byte	.LASF27
 6154 0197 01       		.byte	0x1
 6155 0198 BA       		.byte	0xba
 6156 0199 7A000000 		.4byte	0x7a
 6157 019d 02       		.byte	0x2
 6158 019e 91       		.byte	0x91
 6159 019f 64       		.sleb128 -28
 6160 01a0 0D       		.uleb128 0xd
 6161 01a1 00020000 		.4byte	.LASF28
 6162 01a5 01       		.byte	0x1
 6163 01a6 BC       		.byte	0xbc
 6164 01a7 7A000000 		.4byte	0x7a
 6165 01ab 02       		.byte	0x2
 6166 01ac 91       		.byte	0x91
 6167 01ad 6E       		.sleb128 -18
 6168 01ae 0D       		.uleb128 0xd
 6169 01af D9010000 		.4byte	.LASF29
 6170 01b3 01       		.byte	0x1
 6171 01b4 BD       		.byte	0xbd
 6172 01b5 7A000000 		.4byte	0x7a
 6173 01b9 02       		.byte	0x2
 6174 01ba 91       		.byte	0x91
 6175 01bb 6C       		.sleb128 -20
 6176 01bc 0E       		.uleb128 0xe
 6177 01bd 61647200 		.ascii	"adr\000"
 6178 01c1 01       		.byte	0x1
 6179 01c2 BE       		.byte	0xbe
 6180 01c3 7A000000 		.4byte	0x7a
 6181 01c7 02       		.byte	0x2
 6182 01c8 91       		.byte	0x91
 6183 01c9 6A       		.sleb128 -22
 6184 01ca 0D       		.uleb128 0xd
 6185 01cb 2D000000 		.4byte	.LASF30
 6186 01cf 01       		.byte	0x1
 6187 01d0 BF       		.byte	0xbf
 6188 01d1 6F000000 		.4byte	0x6f
 6189 01d5 02       		.byte	0x2
 6190 01d6 91       		.byte	0x91
 6191 01d7 69       		.sleb128 -23
 6192 01d8 00       		.byte	0
 6193 01d9 05       		.uleb128 0x5
 6194 01da 04       		.byte	0x4
 6195 01db 6F000000 		.4byte	0x6f
 6196 01df 0F       		.uleb128 0xf
 6197 01e0 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 141


 6198 01e1 91030000 		.4byte	.LASF32
 6199 01e5 01       		.byte	0x1
 6200 01e6 0F01     		.2byte	0x10f
 6201 01e8 01       		.byte	0x1
 6202 01e9 00000000 		.4byte	.LFB3
 6203 01ed 84010000 		.4byte	.LFE3
 6204 01f1 90000000 		.4byte	.LLST3
 6205 01f5 01       		.byte	0x1
 6206 01f6 82020000 		.4byte	0x282
 6207 01fa 10       		.uleb128 0x10
 6208 01fb FA000000 		.4byte	.LASF26
 6209 01ff 01       		.byte	0x1
 6210 0200 0F01     		.2byte	0x10f
 6211 0202 7A000000 		.4byte	0x7a
 6212 0206 02       		.byte	0x2
 6213 0207 91       		.byte	0x91
 6214 0208 5E       		.sleb128 -34
 6215 0209 11       		.uleb128 0x11
 6216 020a 64617400 		.ascii	"dat\000"
 6217 020e 01       		.byte	0x1
 6218 020f 0F01     		.2byte	0x10f
 6219 0211 D9010000 		.4byte	0x1d9
 6220 0215 02       		.byte	0x2
 6221 0216 91       		.byte	0x91
 6222 0217 58       		.sleb128 -40
 6223 0218 10       		.uleb128 0x10
 6224 0219 CA060000 		.4byte	.LASF27
 6225 021d 01       		.byte	0x1
 6226 021e 0F01     		.2byte	0x10f
 6227 0220 7A000000 		.4byte	0x7a
 6228 0224 02       		.byte	0x2
 6229 0225 91       		.byte	0x91
 6230 0226 5C       		.sleb128 -36
 6231 0227 12       		.uleb128 0x12
 6232 0228 09080000 		.4byte	.LASF33
 6233 022c 01       		.byte	0x1
 6234 022d 1101     		.2byte	0x111
 6235 022f 7A000000 		.4byte	0x7a
 6236 0233 02       		.byte	0x2
 6237 0234 91       		.byte	0x91
 6238 0235 6E       		.sleb128 -18
 6239 0236 12       		.uleb128 0x12
 6240 0237 A2040000 		.4byte	.LASF34
 6241 023b 01       		.byte	0x1
 6242 023c 1201     		.2byte	0x112
 6243 023e 7A000000 		.4byte	0x7a
 6244 0242 02       		.byte	0x2
 6245 0243 91       		.byte	0x91
 6246 0244 6C       		.sleb128 -20
 6247 0245 12       		.uleb128 0x12
 6248 0246 28080000 		.4byte	.LASF35
 6249 024a 01       		.byte	0x1
 6250 024b 1301     		.2byte	0x113
 6251 024d 7A000000 		.4byte	0x7a
 6252 0251 02       		.byte	0x2
 6253 0252 91       		.byte	0x91
 6254 0253 64       		.sleb128 -28
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 142


 6255 0254 12       		.uleb128 0x12
 6256 0255 1B040000 		.4byte	.LASF36
 6257 0259 01       		.byte	0x1
 6258 025a 1401     		.2byte	0x114
 6259 025c 7A000000 		.4byte	0x7a
 6260 0260 02       		.byte	0x2
 6261 0261 91       		.byte	0x91
 6262 0262 6A       		.sleb128 -22
 6263 0263 12       		.uleb128 0x12
 6264 0264 C2070000 		.4byte	.LASF37
 6265 0268 01       		.byte	0x1
 6266 0269 1501     		.2byte	0x115
 6267 026b 6F000000 		.4byte	0x6f
 6268 026f 02       		.byte	0x2
 6269 0270 91       		.byte	0x91
 6270 0271 69       		.sleb128 -23
 6271 0272 12       		.uleb128 0x12
 6272 0273 7E010000 		.4byte	.LASF38
 6273 0277 01       		.byte	0x1
 6274 0278 1601     		.2byte	0x116
 6275 027a 7A000000 		.4byte	0x7a
 6276 027e 02       		.byte	0x2
 6277 027f 91       		.byte	0x91
 6278 0280 66       		.sleb128 -26
 6279 0281 00       		.byte	0
 6280 0282 0F       		.uleb128 0xf
 6281 0283 01       		.byte	0x1
 6282 0284 62070000 		.4byte	.LASF39
 6283 0288 01       		.byte	0x1
 6284 0289 A801     		.2byte	0x1a8
 6285 028b 01       		.byte	0x1
 6286 028c 00000000 		.4byte	.LFB4
 6287 0290 48000000 		.4byte	.LFE4
 6288 0294 C8000000 		.4byte	.LLST4
 6289 0298 01       		.byte	0x1
 6290 0299 CB020000 		.4byte	0x2cb
 6291 029d 10       		.uleb128 0x10
 6292 029e FA000000 		.4byte	.LASF26
 6293 02a2 01       		.byte	0x1
 6294 02a3 A801     		.2byte	0x1a8
 6295 02a5 7A000000 		.4byte	0x7a
 6296 02a9 02       		.byte	0x2
 6297 02aa 91       		.byte	0x91
 6298 02ab 6E       		.sleb128 -18
 6299 02ac 11       		.uleb128 0x11
 6300 02ad 76616C00 		.ascii	"val\000"
 6301 02b1 01       		.byte	0x1
 6302 02b2 A801     		.2byte	0x1a8
 6303 02b4 7A000000 		.4byte	0x7a
 6304 02b8 02       		.byte	0x2
 6305 02b9 91       		.byte	0x91
 6306 02ba 6C       		.sleb128 -20
 6307 02bb 12       		.uleb128 0x12
 6308 02bc 85040000 		.4byte	.LASF40
 6309 02c0 01       		.byte	0x1
 6310 02c1 AA01     		.2byte	0x1aa
 6311 02c3 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 143


 6312 02c7 02       		.byte	0x2
 6313 02c8 91       		.byte	0x91
 6314 02c9 76       		.sleb128 -10
 6315 02ca 00       		.byte	0
 6316 02cb 13       		.uleb128 0x13
 6317 02cc 01       		.byte	0x1
 6318 02cd 13030000 		.4byte	.LASF44
 6319 02d1 01       		.byte	0x1
 6320 02d2 B901     		.2byte	0x1b9
 6321 02d4 01       		.byte	0x1
 6322 02d5 7A000000 		.4byte	0x7a
 6323 02d9 00000000 		.4byte	.LFB5
 6324 02dd 4E000000 		.4byte	.LFE5
 6325 02e1 00010000 		.4byte	.LLST5
 6326 02e5 01       		.byte	0x1
 6327 02e6 09030000 		.4byte	0x309
 6328 02ea 10       		.uleb128 0x10
 6329 02eb FA000000 		.4byte	.LASF26
 6330 02ef 01       		.byte	0x1
 6331 02f0 B901     		.2byte	0x1b9
 6332 02f2 7A000000 		.4byte	0x7a
 6333 02f6 02       		.byte	0x2
 6334 02f7 91       		.byte	0x91
 6335 02f8 6E       		.sleb128 -18
 6336 02f9 14       		.uleb128 0x14
 6337 02fa 76616C00 		.ascii	"val\000"
 6338 02fe 01       		.byte	0x1
 6339 02ff BB01     		.2byte	0x1bb
 6340 0301 7A000000 		.4byte	0x7a
 6341 0305 02       		.byte	0x2
 6342 0306 91       		.byte	0x91
 6343 0307 76       		.sleb128 -10
 6344 0308 00       		.byte	0
 6345 0309 0F       		.uleb128 0xf
 6346 030a 01       		.byte	0x1
 6347 030b 35070000 		.4byte	.LASF41
 6348 030f 01       		.byte	0x1
 6349 0310 D001     		.2byte	0x1d0
 6350 0312 01       		.byte	0x1
 6351 0313 00000000 		.4byte	.LFB6
 6352 0317 1A000000 		.4byte	.LFE6
 6353 031b 38010000 		.4byte	.LLST6
 6354 031f 01       		.byte	0x1
 6355 0320 34030000 		.4byte	0x334
 6356 0324 11       		.uleb128 0x11
 6357 0325 6D616300 		.ascii	"mac\000"
 6358 0329 01       		.byte	0x1
 6359 032a D001     		.2byte	0x1d0
 6360 032c D9010000 		.4byte	0x1d9
 6361 0330 02       		.byte	0x2
 6362 0331 91       		.byte	0x91
 6363 0332 74       		.sleb128 -12
 6364 0333 00       		.byte	0
 6365 0334 0F       		.uleb128 0xf
 6366 0335 01       		.byte	0x1
 6367 0336 32000000 		.4byte	.LASF42
 6368 033a 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 144


 6369 033b D901     		.2byte	0x1d9
 6370 033d 01       		.byte	0x1
 6371 033e 00000000 		.4byte	.LFB7
 6372 0342 1A000000 		.4byte	.LFE7
 6373 0346 70010000 		.4byte	.LLST7
 6374 034a 01       		.byte	0x1
 6375 034b 5F030000 		.4byte	0x35f
 6376 034f 11       		.uleb128 0x11
 6377 0350 6D616300 		.ascii	"mac\000"
 6378 0354 01       		.byte	0x1
 6379 0355 D901     		.2byte	0x1d9
 6380 0357 D9010000 		.4byte	0x1d9
 6381 035b 02       		.byte	0x2
 6382 035c 91       		.byte	0x91
 6383 035d 74       		.sleb128 -12
 6384 035e 00       		.byte	0
 6385 035f 0F       		.uleb128 0xf
 6386 0360 01       		.byte	0x1
 6387 0361 80070000 		.4byte	.LASF43
 6388 0365 01       		.byte	0x1
 6389 0366 E201     		.2byte	0x1e2
 6390 0368 01       		.byte	0x1
 6391 0369 00000000 		.4byte	.LFB8
 6392 036d 1A000000 		.4byte	.LFE8
 6393 0371 A8010000 		.4byte	.LLST8
 6394 0375 01       		.byte	0x1
 6395 0376 89030000 		.4byte	0x389
 6396 037a 11       		.uleb128 0x11
 6397 037b 697000   		.ascii	"ip\000"
 6398 037e 01       		.byte	0x1
 6399 037f E201     		.2byte	0x1e2
 6400 0381 85000000 		.4byte	0x85
 6401 0385 02       		.byte	0x2
 6402 0386 91       		.byte	0x91
 6403 0387 74       		.sleb128 -12
 6404 0388 00       		.byte	0
 6405 0389 13       		.uleb128 0x13
 6406 038a 01       		.byte	0x1
 6407 038b E0050000 		.4byte	.LASF45
 6408 038f 01       		.byte	0x1
 6409 0390 EB01     		.2byte	0x1eb
 6410 0392 01       		.byte	0x1
 6411 0393 85000000 		.4byte	0x85
 6412 0397 00000000 		.4byte	.LFB9
 6413 039b 22000000 		.4byte	.LFE9
 6414 039f E0010000 		.4byte	.LLST9
 6415 03a3 01       		.byte	0x1
 6416 03a4 B7030000 		.4byte	0x3b7
 6417 03a8 14       		.uleb128 0x14
 6418 03a9 697000   		.ascii	"ip\000"
 6419 03ac 01       		.byte	0x1
 6420 03ad ED01     		.2byte	0x1ed
 6421 03af 85000000 		.4byte	0x85
 6422 03b3 02       		.byte	0x2
 6423 03b4 91       		.byte	0x91
 6424 03b5 74       		.sleb128 -12
 6425 03b6 00       		.byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 145


 6426 03b7 0F       		.uleb128 0xf
 6427 03b8 01       		.byte	0x1
 6428 03b9 AF010000 		.4byte	.LASF46
 6429 03bd 01       		.byte	0x1
 6430 03be F801     		.2byte	0x1f8
 6431 03c0 01       		.byte	0x1
 6432 03c1 00000000 		.4byte	.LFB10
 6433 03c5 1A000000 		.4byte	.LFE10
 6434 03c9 18020000 		.4byte	.LLST10
 6435 03cd 01       		.byte	0x1
 6436 03ce E1030000 		.4byte	0x3e1
 6437 03d2 11       		.uleb128 0x11
 6438 03d3 697000   		.ascii	"ip\000"
 6439 03d6 01       		.byte	0x1
 6440 03d7 F801     		.2byte	0x1f8
 6441 03d9 85000000 		.4byte	0x85
 6442 03dd 02       		.byte	0x2
 6443 03de 91       		.byte	0x91
 6444 03df 74       		.sleb128 -12
 6445 03e0 00       		.byte	0
 6446 03e1 13       		.uleb128 0x13
 6447 03e2 01       		.byte	0x1
 6448 03e3 14000000 		.4byte	.LASF47
 6449 03e7 01       		.byte	0x1
 6450 03e8 0102     		.2byte	0x201
 6451 03ea 01       		.byte	0x1
 6452 03eb 85000000 		.4byte	0x85
 6453 03ef 00000000 		.4byte	.LFB11
 6454 03f3 22000000 		.4byte	.LFE11
 6455 03f7 50020000 		.4byte	.LLST11
 6456 03fb 01       		.byte	0x1
 6457 03fc 0F040000 		.4byte	0x40f
 6458 0400 14       		.uleb128 0x14
 6459 0401 697000   		.ascii	"ip\000"
 6460 0404 01       		.byte	0x1
 6461 0405 0302     		.2byte	0x203
 6462 0407 85000000 		.4byte	0x85
 6463 040b 02       		.byte	0x2
 6464 040c 91       		.byte	0x91
 6465 040d 74       		.sleb128 -12
 6466 040e 00       		.byte	0
 6467 040f 0F       		.uleb128 0xf
 6468 0410 01       		.byte	0x1
 6469 0411 AD000000 		.4byte	.LASF48
 6470 0415 01       		.byte	0x1
 6471 0416 0C02     		.2byte	0x20c
 6472 0418 01       		.byte	0x1
 6473 0419 00000000 		.4byte	.LFB12
 6474 041d 1A000000 		.4byte	.LFE12
 6475 0421 88020000 		.4byte	.LLST12
 6476 0425 01       		.byte	0x1
 6477 0426 39040000 		.4byte	0x439
 6478 042a 11       		.uleb128 0x11
 6479 042b 697000   		.ascii	"ip\000"
 6480 042e 01       		.byte	0x1
 6481 042f 0C02     		.2byte	0x20c
 6482 0431 85000000 		.4byte	0x85
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 146


 6483 0435 02       		.byte	0x2
 6484 0436 91       		.byte	0x91
 6485 0437 74       		.sleb128 -12
 6486 0438 00       		.byte	0
 6487 0439 13       		.uleb128 0x13
 6488 043a 01       		.byte	0x1
 6489 043b 56040000 		.4byte	.LASF49
 6490 043f 01       		.byte	0x1
 6491 0440 1502     		.2byte	0x215
 6492 0442 01       		.byte	0x1
 6493 0443 85000000 		.4byte	0x85
 6494 0447 00000000 		.4byte	.LFB13
 6495 044b 22000000 		.4byte	.LFE13
 6496 044f C0020000 		.4byte	.LLST13
 6497 0453 01       		.byte	0x1
 6498 0454 67040000 		.4byte	0x467
 6499 0458 14       		.uleb128 0x14
 6500 0459 697000   		.ascii	"ip\000"
 6501 045c 01       		.byte	0x1
 6502 045d 1702     		.2byte	0x217
 6503 045f 85000000 		.4byte	0x85
 6504 0463 02       		.byte	0x2
 6505 0464 91       		.byte	0x91
 6506 0465 74       		.sleb128 -12
 6507 0466 00       		.byte	0
 6508 0467 0F       		.uleb128 0xf
 6509 0468 01       		.byte	0x1
 6510 0469 E8020000 		.4byte	.LASF50
 6511 046d 01       		.byte	0x1
 6512 046e 2002     		.2byte	0x220
 6513 0470 01       		.byte	0x1
 6514 0471 00000000 		.4byte	.LFB14
 6515 0475 1E000000 		.4byte	.LFE14
 6516 0479 F8020000 		.4byte	.LLST14
 6517 047d 01       		.byte	0x1
 6518 047e 92040000 		.4byte	0x492
 6519 0482 10       		.uleb128 0x10
 6520 0483 D6060000 		.4byte	.LASF51
 6521 0487 01       		.byte	0x1
 6522 0488 2002     		.2byte	0x220
 6523 048a 6F000000 		.4byte	0x6f
 6524 048e 02       		.byte	0x2
 6525 048f 91       		.byte	0x91
 6526 0490 77       		.sleb128 -9
 6527 0491 00       		.byte	0
 6528 0492 13       		.uleb128 0x13
 6529 0493 01       		.byte	0x1
 6530 0494 96070000 		.4byte	.LASF52
 6531 0498 01       		.byte	0x1
 6532 0499 2902     		.2byte	0x229
 6533 049b 01       		.byte	0x1
 6534 049c 6F000000 		.4byte	0x6f
 6535 04a0 00000000 		.4byte	.LFB15
 6536 04a4 1E000000 		.4byte	.LFE15
 6537 04a8 30030000 		.4byte	.LLST15
 6538 04ac 01       		.byte	0x1
 6539 04ad C1040000 		.4byte	0x4c1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 147


 6540 04b1 12       		.uleb128 0x12
 6541 04b2 D6060000 		.4byte	.LASF51
 6542 04b6 01       		.byte	0x1
 6543 04b7 2B02     		.2byte	0x22b
 6544 04b9 6F000000 		.4byte	0x6f
 6545 04bd 02       		.byte	0x2
 6546 04be 91       		.byte	0x91
 6547 04bf 77       		.sleb128 -9
 6548 04c0 00       		.byte	0
 6549 04c1 0F       		.uleb128 0xf
 6550 04c2 01       		.byte	0x1
 6551 04c3 AC070000 		.4byte	.LASF53
 6552 04c7 01       		.byte	0x1
 6553 04c8 3402     		.2byte	0x234
 6554 04ca 01       		.byte	0x1
 6555 04cb 00000000 		.4byte	.LFB16
 6556 04cf 1E000000 		.4byte	.LFE16
 6557 04d3 68030000 		.4byte	.LLST16
 6558 04d7 01       		.byte	0x1
 6559 04d8 EB040000 		.4byte	0x4eb
 6560 04dc 11       		.uleb128 0x11
 6561 04dd 697200   		.ascii	"ir\000"
 6562 04e0 01       		.byte	0x1
 6563 04e1 3402     		.2byte	0x234
 6564 04e3 6F000000 		.4byte	0x6f
 6565 04e7 02       		.byte	0x2
 6566 04e8 91       		.byte	0x91
 6567 04e9 77       		.sleb128 -9
 6568 04ea 00       		.byte	0
 6569 04eb 0F       		.uleb128 0xf
 6570 04ec 01       		.byte	0x1
 6571 04ed 5E000000 		.4byte	.LASF54
 6572 04f1 01       		.byte	0x1
 6573 04f2 3D02     		.2byte	0x23d
 6574 04f4 01       		.byte	0x1
 6575 04f5 00000000 		.4byte	.LFB17
 6576 04f9 82000000 		.4byte	.LFE17
 6577 04fd A0030000 		.4byte	.LLST17
 6578 0501 01       		.byte	0x1
 6579 0502 33050000 		.4byte	0x533
 6580 0506 10       		.uleb128 0x10
 6581 0507 57000000 		.4byte	.LASF55
 6582 050b 01       		.byte	0x1
 6583 050c 3D02     		.2byte	0x23d
 6584 050e 6F000000 		.4byte	0x6f
 6585 0512 02       		.byte	0x2
 6586 0513 91       		.byte	0x91
 6587 0514 6F       		.sleb128 -17
 6588 0515 10       		.uleb128 0x10
 6589 0516 68030000 		.4byte	.LASF56
 6590 051a 01       		.byte	0x1
 6591 051b 3D02     		.2byte	0x23d
 6592 051d 6F000000 		.4byte	0x6f
 6593 0521 02       		.byte	0x2
 6594 0522 91       		.byte	0x91
 6595 0523 6E       		.sleb128 -18
 6596 0524 14       		.uleb128 0x14
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 148


 6597 0525 737A00   		.ascii	"sz\000"
 6598 0528 01       		.byte	0x1
 6599 0529 3F02     		.2byte	0x23f
 6600 052b 6F000000 		.4byte	0x6f
 6601 052f 02       		.byte	0x2
 6602 0530 91       		.byte	0x91
 6603 0531 77       		.sleb128 -9
 6604 0532 00       		.byte	0
 6605 0533 13       		.uleb128 0x13
 6606 0534 01       		.byte	0x1
 6607 0535 C7020000 		.4byte	.LASF57
 6608 0539 01       		.byte	0x1
 6609 053a 5802     		.2byte	0x258
 6610 053c 01       		.byte	0x1
 6611 053d 6F000000 		.4byte	0x6f
 6612 0541 00000000 		.4byte	.LFB18
 6613 0545 52000000 		.4byte	.LFE18
 6614 0549 D8030000 		.4byte	.LLST18
 6615 054d 01       		.byte	0x1
 6616 054e 70050000 		.4byte	0x570
 6617 0552 10       		.uleb128 0x10
 6618 0553 57000000 		.4byte	.LASF55
 6619 0557 01       		.byte	0x1
 6620 0558 5802     		.2byte	0x258
 6621 055a 6F000000 		.4byte	0x6f
 6622 055e 02       		.byte	0x2
 6623 055f 91       		.byte	0x91
 6624 0560 6F       		.sleb128 -17
 6625 0561 14       		.uleb128 0x14
 6626 0562 737A00   		.ascii	"sz\000"
 6627 0565 01       		.byte	0x1
 6628 0566 5A02     		.2byte	0x25a
 6629 0568 6F000000 		.4byte	0x6f
 6630 056c 02       		.byte	0x2
 6631 056d 91       		.byte	0x91
 6632 056e 77       		.sleb128 -9
 6633 056f 00       		.byte	0
 6634 0570 0F       		.uleb128 0xf
 6635 0571 01       		.byte	0x1
 6636 0572 22030000 		.4byte	.LASF58
 6637 0576 01       		.byte	0x1
 6638 0577 6A02     		.2byte	0x26a
 6639 0579 01       		.byte	0x1
 6640 057a 00000000 		.4byte	.LFB19
 6641 057e 82000000 		.4byte	.LFE19
 6642 0582 10040000 		.4byte	.LLST19
 6643 0586 01       		.byte	0x1
 6644 0587 B8050000 		.4byte	0x5b8
 6645 058b 10       		.uleb128 0x10
 6646 058c 57000000 		.4byte	.LASF55
 6647 0590 01       		.byte	0x1
 6648 0591 6A02     		.2byte	0x26a
 6649 0593 6F000000 		.4byte	0x6f
 6650 0597 02       		.byte	0x2
 6651 0598 91       		.byte	0x91
 6652 0599 6F       		.sleb128 -17
 6653 059a 10       		.uleb128 0x10
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 149


 6654 059b 68030000 		.4byte	.LASF56
 6655 059f 01       		.byte	0x1
 6656 05a0 6A02     		.2byte	0x26a
 6657 05a2 6F000000 		.4byte	0x6f
 6658 05a6 02       		.byte	0x2
 6659 05a7 91       		.byte	0x91
 6660 05a8 6E       		.sleb128 -18
 6661 05a9 14       		.uleb128 0x14
 6662 05aa 737A00   		.ascii	"sz\000"
 6663 05ad 01       		.byte	0x1
 6664 05ae 6C02     		.2byte	0x26c
 6665 05b0 6F000000 		.4byte	0x6f
 6666 05b4 02       		.byte	0x2
 6667 05b5 91       		.byte	0x91
 6668 05b6 77       		.sleb128 -9
 6669 05b7 00       		.byte	0
 6670 05b8 13       		.uleb128 0x13
 6671 05b9 01       		.byte	0x1
 6672 05ba 06050000 		.4byte	.LASF59
 6673 05be 01       		.byte	0x1
 6674 05bf 8402     		.2byte	0x284
 6675 05c1 01       		.byte	0x1
 6676 05c2 6F000000 		.4byte	0x6f
 6677 05c6 00000000 		.4byte	.LFB20
 6678 05ca 52000000 		.4byte	.LFE20
 6679 05ce 48040000 		.4byte	.LLST20
 6680 05d2 01       		.byte	0x1
 6681 05d3 F5050000 		.4byte	0x5f5
 6682 05d7 10       		.uleb128 0x10
 6683 05d8 57000000 		.4byte	.LASF55
 6684 05dc 01       		.byte	0x1
 6685 05dd 8402     		.2byte	0x284
 6686 05df 6F000000 		.4byte	0x6f
 6687 05e3 02       		.byte	0x2
 6688 05e4 91       		.byte	0x91
 6689 05e5 6F       		.sleb128 -17
 6690 05e6 14       		.uleb128 0x14
 6691 05e7 737A00   		.ascii	"sz\000"
 6692 05ea 01       		.byte	0x1
 6693 05eb 8602     		.2byte	0x286
 6694 05ed 6F000000 		.4byte	0x6f
 6695 05f1 02       		.byte	0x2
 6696 05f2 91       		.byte	0x91
 6697 05f3 77       		.sleb128 -9
 6698 05f4 00       		.byte	0
 6699 05f5 0F       		.uleb128 0xf
 6700 05f6 01       		.byte	0x1
 6701 05f7 EE070000 		.4byte	.LASF60
 6702 05fb 01       		.byte	0x1
 6703 05fc 9E02     		.2byte	0x29e
 6704 05fe 01       		.byte	0x1
 6705 05ff 00000000 		.4byte	.LFB21
 6706 0603 36000000 		.4byte	.LFE21
 6707 0607 80040000 		.4byte	.LLST21
 6708 060b 01       		.byte	0x1
 6709 060c 2F060000 		.4byte	0x62f
 6710 0610 10       		.uleb128 0x10
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 150


 6711 0611 57000000 		.4byte	.LASF55
 6712 0615 01       		.byte	0x1
 6713 0616 9E02     		.2byte	0x29e
 6714 0618 6F000000 		.4byte	0x6f
 6715 061c 02       		.byte	0x2
 6716 061d 91       		.byte	0x91
 6717 061e 77       		.sleb128 -9
 6718 061f 10       		.uleb128 0x10
 6719 0620 D6060000 		.4byte	.LASF51
 6720 0624 01       		.byte	0x1
 6721 0625 9E02     		.2byte	0x29e
 6722 0627 6F000000 		.4byte	0x6f
 6723 062b 02       		.byte	0x2
 6724 062c 91       		.byte	0x91
 6725 062d 76       		.sleb128 -10
 6726 062e 00       		.byte	0
 6727 062f 0F       		.uleb128 0xf
 6728 0630 01       		.byte	0x1
 6729 0631 54020000 		.4byte	.LASF61
 6730 0635 01       		.byte	0x1
 6731 0636 A802     		.2byte	0x2a8
 6732 0638 01       		.byte	0x1
 6733 0639 00000000 		.4byte	.LFB22
 6734 063d 38000000 		.4byte	.LFE22
 6735 0641 B8040000 		.4byte	.LLST22
 6736 0645 01       		.byte	0x1
 6737 0646 69060000 		.4byte	0x669
 6738 064a 10       		.uleb128 0x10
 6739 064b 57000000 		.4byte	.LASF55
 6740 064f 01       		.byte	0x1
 6741 0650 A802     		.2byte	0x2a8
 6742 0652 6F000000 		.4byte	0x6f
 6743 0656 02       		.byte	0x2
 6744 0657 91       		.byte	0x91
 6745 0658 77       		.sleb128 -9
 6746 0659 11       		.uleb128 0x11
 6747 065a 636D6400 		.ascii	"cmd\000"
 6748 065e 01       		.byte	0x1
 6749 065f A802     		.2byte	0x2a8
 6750 0661 6F000000 		.4byte	0x6f
 6751 0665 02       		.byte	0x2
 6752 0666 91       		.byte	0x91
 6753 0667 76       		.sleb128 -10
 6754 0668 00       		.byte	0
 6755 0669 13       		.uleb128 0x13
 6756 066a 01       		.byte	0x1
 6757 066b 0E070000 		.4byte	.LASF62
 6758 066f 01       		.byte	0x1
 6759 0670 B202     		.2byte	0x2b2
 6760 0672 01       		.byte	0x1
 6761 0673 6F000000 		.4byte	0x6f
 6762 0677 00000000 		.4byte	.LFB23
 6763 067b 44000000 		.4byte	.LFE23
 6764 067f F0040000 		.4byte	.LLST23
 6765 0683 01       		.byte	0x1
 6766 0684 A7060000 		.4byte	0x6a7
 6767 0688 10       		.uleb128 0x10
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 151


 6768 0689 57000000 		.4byte	.LASF55
 6769 068d 01       		.byte	0x1
 6770 068e B202     		.2byte	0x2b2
 6771 0690 6F000000 		.4byte	0x6f
 6772 0694 02       		.byte	0x2
 6773 0695 91       		.byte	0x91
 6774 0696 6F       		.sleb128 -17
 6775 0697 14       		.uleb128 0x14
 6776 0698 636D6400 		.ascii	"cmd\000"
 6777 069c 01       		.byte	0x1
 6778 069d B402     		.2byte	0x2b4
 6779 069f 6F000000 		.4byte	0x6f
 6780 06a3 02       		.byte	0x2
 6781 06a4 91       		.byte	0x91
 6782 06a5 77       		.sleb128 -9
 6783 06a6 00       		.byte	0
 6784 06a7 0F       		.uleb128 0xf
 6785 06a8 01       		.byte	0x1
 6786 06a9 70060000 		.4byte	.LASF63
 6787 06ad 01       		.byte	0x1
 6788 06ae BE02     		.2byte	0x2be
 6789 06b0 01       		.byte	0x1
 6790 06b1 00000000 		.4byte	.LFB24
 6791 06b5 38000000 		.4byte	.LFE24
 6792 06b9 28050000 		.4byte	.LLST24
 6793 06bd 01       		.byte	0x1
 6794 06be E0060000 		.4byte	0x6e0
 6795 06c2 10       		.uleb128 0x10
 6796 06c3 57000000 		.4byte	.LASF55
 6797 06c7 01       		.byte	0x1
 6798 06c8 BE02     		.2byte	0x2be
 6799 06ca 6F000000 		.4byte	0x6f
 6800 06ce 02       		.byte	0x2
 6801 06cf 91       		.byte	0x91
 6802 06d0 77       		.sleb128 -9
 6803 06d1 11       		.uleb128 0x11
 6804 06d2 697200   		.ascii	"ir\000"
 6805 06d5 01       		.byte	0x1
 6806 06d6 BE02     		.2byte	0x2be
 6807 06d8 6F000000 		.4byte	0x6f
 6808 06dc 02       		.byte	0x2
 6809 06dd 91       		.byte	0x91
 6810 06de 76       		.sleb128 -10
 6811 06df 00       		.byte	0
 6812 06e0 13       		.uleb128 0x13
 6813 06e1 01       		.byte	0x1
 6814 06e2 4D070000 		.4byte	.LASF64
 6815 06e6 01       		.byte	0x1
 6816 06e7 C802     		.2byte	0x2c8
 6817 06e9 01       		.byte	0x1
 6818 06ea 6F000000 		.4byte	0x6f
 6819 06ee 00000000 		.4byte	.LFB25
 6820 06f2 44000000 		.4byte	.LFE25
 6821 06f6 60050000 		.4byte	.LLST25
 6822 06fa 01       		.byte	0x1
 6823 06fb 1D070000 		.4byte	0x71d
 6824 06ff 10       		.uleb128 0x10
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 152


 6825 0700 57000000 		.4byte	.LASF55
 6826 0704 01       		.byte	0x1
 6827 0705 C802     		.2byte	0x2c8
 6828 0707 6F000000 		.4byte	0x6f
 6829 070b 02       		.byte	0x2
 6830 070c 91       		.byte	0x91
 6831 070d 6F       		.sleb128 -17
 6832 070e 14       		.uleb128 0x14
 6833 070f 697200   		.ascii	"ir\000"
 6834 0712 01       		.byte	0x1
 6835 0713 CA02     		.2byte	0x2ca
 6836 0715 6F000000 		.4byte	0x6f
 6837 0719 02       		.byte	0x2
 6838 071a 91       		.byte	0x91
 6839 071b 77       		.sleb128 -9
 6840 071c 00       		.byte	0
 6841 071d 13       		.uleb128 0x13
 6842 071e 01       		.byte	0x1
 6843 071f 36010000 		.4byte	.LASF65
 6844 0723 01       		.byte	0x1
 6845 0724 D402     		.2byte	0x2d4
 6846 0726 01       		.byte	0x1
 6847 0727 6F000000 		.4byte	0x6f
 6848 072b 00000000 		.4byte	.LFB26
 6849 072f 44000000 		.4byte	.LFE26
 6850 0733 98050000 		.4byte	.LLST26
 6851 0737 01       		.byte	0x1
 6852 0738 5B070000 		.4byte	0x75b
 6853 073c 10       		.uleb128 0x10
 6854 073d 57000000 		.4byte	.LASF55
 6855 0741 01       		.byte	0x1
 6856 0742 D402     		.2byte	0x2d4
 6857 0744 6F000000 		.4byte	0x6f
 6858 0748 02       		.byte	0x2
 6859 0749 91       		.byte	0x91
 6860 074a 6F       		.sleb128 -17
 6861 074b 12       		.uleb128 0x12
 6862 074c C7070000 		.4byte	.LASF66
 6863 0750 01       		.byte	0x1
 6864 0751 D602     		.2byte	0x2d6
 6865 0753 6F000000 		.4byte	0x6f
 6866 0757 02       		.byte	0x2
 6867 0758 91       		.byte	0x91
 6868 0759 77       		.sleb128 -9
 6869 075a 00       		.byte	0
 6870 075b 0F       		.uleb128 0xf
 6871 075c 01       		.byte	0x1
 6872 075d 89050000 		.4byte	.LASF67
 6873 0761 01       		.byte	0x1
 6874 0762 E002     		.2byte	0x2e0
 6875 0764 01       		.byte	0x1
 6876 0765 00000000 		.4byte	.LFB27
 6877 0769 38000000 		.4byte	.LFE27
 6878 076d D0050000 		.4byte	.LLST27
 6879 0771 01       		.byte	0x1
 6880 0772 95070000 		.4byte	0x795
 6881 0776 10       		.uleb128 0x10
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 153


 6882 0777 57000000 		.4byte	.LASF55
 6883 077b 01       		.byte	0x1
 6884 077c E002     		.2byte	0x2e0
 6885 077e 6F000000 		.4byte	0x6f
 6886 0782 02       		.byte	0x2
 6887 0783 91       		.byte	0x91
 6888 0784 77       		.sleb128 -9
 6889 0785 10       		.uleb128 0x10
 6890 0786 BD020000 		.4byte	.LASF68
 6891 078a 01       		.byte	0x1
 6892 078b E002     		.2byte	0x2e0
 6893 078d 7A000000 		.4byte	0x7a
 6894 0791 02       		.byte	0x2
 6895 0792 91       		.byte	0x91
 6896 0793 74       		.sleb128 -12
 6897 0794 00       		.byte	0
 6898 0795 0F       		.uleb128 0xf
 6899 0796 01       		.byte	0x1
 6900 0797 9B020000 		.4byte	.LASF69
 6901 079b 01       		.byte	0x1
 6902 079c EA02     		.2byte	0x2ea
 6903 079e 01       		.byte	0x1
 6904 079f 00000000 		.4byte	.LFB28
 6905 07a3 34000000 		.4byte	.LFE28
 6906 07a7 08060000 		.4byte	.LLST28
 6907 07ab 01       		.byte	0x1
 6908 07ac CF070000 		.4byte	0x7cf
 6909 07b0 10       		.uleb128 0x10
 6910 07b1 57000000 		.4byte	.LASF55
 6911 07b5 01       		.byte	0x1
 6912 07b6 EA02     		.2byte	0x2ea
 6913 07b8 6F000000 		.4byte	0x6f
 6914 07bc 02       		.byte	0x2
 6915 07bd 91       		.byte	0x91
 6916 07be 77       		.sleb128 -9
 6917 07bf 11       		.uleb128 0x11
 6918 07c0 6D616300 		.ascii	"mac\000"
 6919 07c4 01       		.byte	0x1
 6920 07c5 EA02     		.2byte	0x2ea
 6921 07c7 D9010000 		.4byte	0x1d9
 6922 07cb 02       		.byte	0x2
 6923 07cc 91       		.byte	0x91
 6924 07cd 70       		.sleb128 -16
 6925 07ce 00       		.byte	0
 6926 07cf 0F       		.uleb128 0xf
 6927 07d0 01       		.byte	0x1
 6928 07d1 00000000 		.4byte	.LASF70
 6929 07d5 01       		.byte	0x1
 6930 07d6 F402     		.2byte	0x2f4
 6931 07d8 01       		.byte	0x1
 6932 07d9 00000000 		.4byte	.LFB29
 6933 07dd 34000000 		.4byte	.LFE29
 6934 07e1 40060000 		.4byte	.LLST29
 6935 07e5 01       		.byte	0x1
 6936 07e6 08080000 		.4byte	0x808
 6937 07ea 10       		.uleb128 0x10
 6938 07eb 57000000 		.4byte	.LASF55
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 154


 6939 07ef 01       		.byte	0x1
 6940 07f0 F402     		.2byte	0x2f4
 6941 07f2 6F000000 		.4byte	0x6f
 6942 07f6 02       		.byte	0x2
 6943 07f7 91       		.byte	0x91
 6944 07f8 77       		.sleb128 -9
 6945 07f9 11       		.uleb128 0x11
 6946 07fa 697000   		.ascii	"ip\000"
 6947 07fd 01       		.byte	0x1
 6948 07fe F402     		.2byte	0x2f4
 6949 0800 85000000 		.4byte	0x85
 6950 0804 02       		.byte	0x2
 6951 0805 91       		.byte	0x91
 6952 0806 70       		.sleb128 -16
 6953 0807 00       		.byte	0
 6954 0808 0F       		.uleb128 0xf
 6955 0809 01       		.byte	0x1
 6956 080a 46080000 		.4byte	.LASF71
 6957 080e 01       		.byte	0x1
 6958 080f FE02     		.2byte	0x2fe
 6959 0811 01       		.byte	0x1
 6960 0812 00000000 		.4byte	.LFB30
 6961 0816 36000000 		.4byte	.LFE30
 6962 081a 78060000 		.4byte	.LLST30
 6963 081e 01       		.byte	0x1
 6964 081f 42080000 		.4byte	0x842
 6965 0823 10       		.uleb128 0x10
 6966 0824 57000000 		.4byte	.LASF55
 6967 0828 01       		.byte	0x1
 6968 0829 FE02     		.2byte	0x2fe
 6969 082b 6F000000 		.4byte	0x6f
 6970 082f 02       		.byte	0x2
 6971 0830 91       		.byte	0x91
 6972 0831 77       		.sleb128 -9
 6973 0832 10       		.uleb128 0x10
 6974 0833 BD020000 		.4byte	.LASF68
 6975 0837 01       		.byte	0x1
 6976 0838 FE02     		.2byte	0x2fe
 6977 083a 7A000000 		.4byte	0x7a
 6978 083e 02       		.byte	0x2
 6979 083f 91       		.byte	0x91
 6980 0840 74       		.sleb128 -12
 6981 0841 00       		.byte	0
 6982 0842 13       		.uleb128 0x13
 6983 0843 01       		.byte	0x1
 6984 0844 87020000 		.4byte	.LASF72
 6985 0848 01       		.byte	0x1
 6986 0849 0803     		.2byte	0x308
 6987 084b 01       		.byte	0x1
 6988 084c 7A000000 		.4byte	0x7a
 6989 0850 00000000 		.4byte	.LFB31
 6990 0854 2E000000 		.4byte	.LFE31
 6991 0858 B0060000 		.4byte	.LLST31
 6992 085c 01       		.byte	0x1
 6993 085d 71080000 		.4byte	0x871
 6994 0861 10       		.uleb128 0x10
 6995 0862 57000000 		.4byte	.LASF55
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 155


 6996 0866 01       		.byte	0x1
 6997 0867 0803     		.2byte	0x308
 6998 0869 6F000000 		.4byte	0x6f
 6999 086d 02       		.byte	0x2
 7000 086e 91       		.byte	0x91
 7001 086f 77       		.sleb128 -9
 7002 0870 00       		.byte	0
 7003 0871 0F       		.uleb128 0xf
 7004 0872 01       		.byte	0x1
 7005 0873 C1010000 		.4byte	.LASF73
 7006 0877 01       		.byte	0x1
 7007 0878 1203     		.2byte	0x312
 7008 087a 01       		.byte	0x1
 7009 087b 00000000 		.4byte	.LFB32
 7010 087f 38000000 		.4byte	.LFE32
 7011 0883 E8060000 		.4byte	.LLST32
 7012 0887 01       		.byte	0x1
 7013 0888 AB080000 		.4byte	0x8ab
 7014 088c 10       		.uleb128 0x10
 7015 088d 57000000 		.4byte	.LASF55
 7016 0891 01       		.byte	0x1
 7017 0892 1203     		.2byte	0x312
 7018 0894 6F000000 		.4byte	0x6f
 7019 0898 02       		.byte	0x2
 7020 0899 91       		.byte	0x91
 7021 089a 77       		.sleb128 -9
 7022 089b 11       		.uleb128 0x11
 7023 089c 70747200 		.ascii	"ptr\000"
 7024 08a0 01       		.byte	0x1
 7025 08a1 1203     		.2byte	0x312
 7026 08a3 7A000000 		.4byte	0x7a
 7027 08a7 02       		.byte	0x2
 7028 08a8 91       		.byte	0x91
 7029 08a9 74       		.sleb128 -12
 7030 08aa 00       		.byte	0
 7031 08ab 13       		.uleb128 0x13
 7032 08ac 01       		.byte	0x1
 7033 08ad 3E040000 		.4byte	.LASF74
 7034 08b1 01       		.byte	0x1
 7035 08b2 1C03     		.2byte	0x31c
 7036 08b4 01       		.byte	0x1
 7037 08b5 7A000000 		.4byte	0x7a
 7038 08b9 00000000 		.4byte	.LFB33
 7039 08bd 30000000 		.4byte	.LFE33
 7040 08c1 20070000 		.4byte	.LLST33
 7041 08c5 01       		.byte	0x1
 7042 08c6 DA080000 		.4byte	0x8da
 7043 08ca 10       		.uleb128 0x10
 7044 08cb 57000000 		.4byte	.LASF55
 7045 08cf 01       		.byte	0x1
 7046 08d0 1C03     		.2byte	0x31c
 7047 08d2 6F000000 		.4byte	0x6f
 7048 08d6 02       		.byte	0x2
 7049 08d7 91       		.byte	0x91
 7050 08d8 77       		.sleb128 -9
 7051 08d9 00       		.byte	0
 7052 08da 13       		.uleb128 0x13
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 156


 7053 08db 01       		.byte	0x1
 7054 08dc CC050000 		.4byte	.LASF75
 7055 08e0 01       		.byte	0x1
 7056 08e1 2603     		.2byte	0x326
 7057 08e3 01       		.byte	0x1
 7058 08e4 7A000000 		.4byte	0x7a
 7059 08e8 00000000 		.4byte	.LFB34
 7060 08ec 30000000 		.4byte	.LFE34
 7061 08f0 58070000 		.4byte	.LLST34
 7062 08f4 01       		.byte	0x1
 7063 08f5 09090000 		.4byte	0x909
 7064 08f9 10       		.uleb128 0x10
 7065 08fa 57000000 		.4byte	.LASF55
 7066 08fe 01       		.byte	0x1
 7067 08ff 2603     		.2byte	0x326
 7068 0901 6F000000 		.4byte	0x6f
 7069 0905 02       		.byte	0x2
 7070 0906 91       		.byte	0x91
 7071 0907 77       		.sleb128 -9
 7072 0908 00       		.byte	0
 7073 0909 0F       		.uleb128 0xf
 7074 090a 01       		.byte	0x1
 7075 090b 11080000 		.4byte	.LASF76
 7076 090f 01       		.byte	0x1
 7077 0910 3003     		.2byte	0x330
 7078 0912 01       		.byte	0x1
 7079 0913 00000000 		.4byte	.LFB35
 7080 0917 36000000 		.4byte	.LFE35
 7081 091b 90070000 		.4byte	.LLST35
 7082 091f 01       		.byte	0x1
 7083 0920 43090000 		.4byte	0x943
 7084 0924 10       		.uleb128 0x10
 7085 0925 57000000 		.4byte	.LASF55
 7086 0929 01       		.byte	0x1
 7087 092a 3003     		.2byte	0x330
 7088 092c 6F000000 		.4byte	0x6f
 7089 0930 02       		.byte	0x2
 7090 0931 91       		.byte	0x91
 7091 0932 77       		.sleb128 -9
 7092 0933 11       		.uleb128 0x11
 7093 0934 70747200 		.ascii	"ptr\000"
 7094 0938 01       		.byte	0x1
 7095 0939 3003     		.2byte	0x330
 7096 093b 7A000000 		.4byte	0x7a
 7097 093f 02       		.byte	0x2
 7098 0940 91       		.byte	0x91
 7099 0941 74       		.sleb128 -12
 7100 0942 00       		.byte	0
 7101 0943 13       		.uleb128 0x13
 7102 0944 01       		.byte	0x1
 7103 0945 0C020000 		.4byte	.LASF77
 7104 0949 01       		.byte	0x1
 7105 094a 3A03     		.2byte	0x33a
 7106 094c 01       		.byte	0x1
 7107 094d 7A000000 		.4byte	0x7a
 7108 0951 00000000 		.4byte	.LFB36
 7109 0955 2E000000 		.4byte	.LFE36
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 157


 7110 0959 C8070000 		.4byte	.LLST36
 7111 095d 01       		.byte	0x1
 7112 095e 72090000 		.4byte	0x972
 7113 0962 10       		.uleb128 0x10
 7114 0963 57000000 		.4byte	.LASF55
 7115 0967 01       		.byte	0x1
 7116 0968 3A03     		.2byte	0x33a
 7117 096a 6F000000 		.4byte	0x6f
 7118 096e 02       		.byte	0x2
 7119 096f 91       		.byte	0x91
 7120 0970 77       		.sleb128 -9
 7121 0971 00       		.byte	0
 7122 0972 15       		.uleb128 0x15
 7123 0973 01       		.byte	0x1
 7124 0974 97010000 		.4byte	.LASF78
 7125 0978 01       		.byte	0x1
 7126 0979 4403     		.2byte	0x344
 7127 097b 01       		.byte	0x1
 7128 097c 00000000 		.4byte	.LFB37
 7129 0980 18000000 		.4byte	.LFE37
 7130 0984 00080000 		.4byte	.LLST37
 7131 0988 01       		.byte	0x1
 7132 0989 AC090000 		.4byte	0x9ac
 7133 098d 10       		.uleb128 0x10
 7134 098e 57000000 		.4byte	.LASF55
 7135 0992 01       		.byte	0x1
 7136 0993 4403     		.2byte	0x344
 7137 0995 6F000000 		.4byte	0x6f
 7138 0999 02       		.byte	0x2
 7139 099a 91       		.byte	0x91
 7140 099b 77       		.sleb128 -9
 7141 099c 11       		.uleb128 0x11
 7142 099d 70747200 		.ascii	"ptr\000"
 7143 09a1 01       		.byte	0x1
 7144 09a2 4403     		.2byte	0x344
 7145 09a4 7A000000 		.4byte	0x7a
 7146 09a8 02       		.byte	0x2
 7147 09a9 91       		.byte	0x91
 7148 09aa 74       		.sleb128 -12
 7149 09ab 00       		.byte	0
 7150 09ac 0F       		.uleb128 0xf
 7151 09ad 01       		.byte	0x1
 7152 09ae 3D020000 		.4byte	.LASF79
 7153 09b2 01       		.byte	0x1
 7154 09b3 5703     		.2byte	0x357
 7155 09b5 01       		.byte	0x1
 7156 09b6 00000000 		.4byte	.LFB38
 7157 09ba 38000000 		.4byte	.LFE38
 7158 09be 38080000 		.4byte	.LLST38
 7159 09c2 01       		.byte	0x1
 7160 09c3 E6090000 		.4byte	0x9e6
 7161 09c7 10       		.uleb128 0x10
 7162 09c8 57000000 		.4byte	.LASF55
 7163 09cc 01       		.byte	0x1
 7164 09cd 5703     		.2byte	0x357
 7165 09cf 6F000000 		.4byte	0x6f
 7166 09d3 02       		.byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 158


 7167 09d4 91       		.byte	0x91
 7168 09d5 77       		.sleb128 -9
 7169 09d6 11       		.uleb128 0x11
 7170 09d7 70747200 		.ascii	"ptr\000"
 7171 09db 01       		.byte	0x1
 7172 09dc 5703     		.2byte	0x357
 7173 09de 7A000000 		.4byte	0x7a
 7174 09e2 02       		.byte	0x2
 7175 09e3 91       		.byte	0x91
 7176 09e4 74       		.sleb128 -12
 7177 09e5 00       		.byte	0
 7178 09e6 13       		.uleb128 0x13
 7179 09e7 01       		.byte	0x1
 7180 09e8 AB050000 		.4byte	.LASF80
 7181 09ec 01       		.byte	0x1
 7182 09ed 6103     		.2byte	0x361
 7183 09ef 01       		.byte	0x1
 7184 09f0 85000000 		.4byte	0x85
 7185 09f4 00000000 		.4byte	.LFB39
 7186 09f8 50000000 		.4byte	.LFE39
 7187 09fc 70080000 		.4byte	.LLST39
 7188 0a00 01       		.byte	0x1
 7189 0a01 330A0000 		.4byte	0xa33
 7190 0a05 10       		.uleb128 0x10
 7191 0a06 57000000 		.4byte	.LASF55
 7192 0a0a 01       		.byte	0x1
 7193 0a0b 6103     		.2byte	0x361
 7194 0a0d 6F000000 		.4byte	0x6f
 7195 0a11 02       		.byte	0x2
 7196 0a12 91       		.byte	0x91
 7197 0a13 6F       		.sleb128 -17
 7198 0a14 11       		.uleb128 0x11
 7199 0a15 636D6400 		.ascii	"cmd\000"
 7200 0a19 01       		.byte	0x1
 7201 0a1a 6103     		.2byte	0x361
 7202 0a1c 61000000 		.4byte	0x61
 7203 0a20 02       		.byte	0x2
 7204 0a21 91       		.byte	0x91
 7205 0a22 68       		.sleb128 -24
 7206 0a23 12       		.uleb128 0x12
 7207 0a24 59030000 		.4byte	.LASF81
 7208 0a28 01       		.byte	0x1
 7209 0a29 6303     		.2byte	0x363
 7210 0a2b 85000000 		.4byte	0x85
 7211 0a2f 02       		.byte	0x2
 7212 0a30 91       		.byte	0x91
 7213 0a31 74       		.sleb128 -12
 7214 0a32 00       		.byte	0
 7215 0a33 13       		.uleb128 0x13
 7216 0a34 01       		.byte	0x1
 7217 0a35 09040000 		.4byte	.LASF82
 7218 0a39 01       		.byte	0x1
 7219 0a3a 7403     		.2byte	0x374
 7220 0a3c 01       		.byte	0x1
 7221 0a3d 7A000000 		.4byte	0x7a
 7222 0a41 00000000 		.4byte	.LFB40
 7223 0a45 68000000 		.4byte	.LFE40
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 159


 7224 0a49 A8080000 		.4byte	.LLST40
 7225 0a4d 01       		.byte	0x1
 7226 0a4e 800A0000 		.4byte	0xa80
 7227 0a52 10       		.uleb128 0x10
 7228 0a53 57000000 		.4byte	.LASF55
 7229 0a57 01       		.byte	0x1
 7230 0a58 7403     		.2byte	0x374
 7231 0a5a 6F000000 		.4byte	0x6f
 7232 0a5e 02       		.byte	0x2
 7233 0a5f 91       		.byte	0x91
 7234 0a60 67       		.sleb128 -25
 7235 0a61 12       		.uleb128 0x12
 7236 0a62 C4060000 		.4byte	.LASF83
 7237 0a66 01       		.byte	0x1
 7238 0a67 7603     		.2byte	0x376
 7239 0a69 7A000000 		.4byte	0x7a
 7240 0a6d 02       		.byte	0x2
 7241 0a6e 91       		.byte	0x91
 7242 0a6f 6C       		.sleb128 -20
 7243 0a70 12       		.uleb128 0x12
 7244 0a71 82050000 		.4byte	.LASF84
 7245 0a75 01       		.byte	0x1
 7246 0a76 7603     		.2byte	0x376
 7247 0a78 7A000000 		.4byte	0x7a
 7248 0a7c 02       		.byte	0x2
 7249 0a7d 91       		.byte	0x91
 7250 0a7e 6E       		.sleb128 -18
 7251 0a7f 00       		.byte	0
 7252 0a80 13       		.uleb128 0x13
 7253 0a81 01       		.byte	0x1
 7254 0a82 72070000 		.4byte	.LASF85
 7255 0a86 01       		.byte	0x1
 7256 0a87 8A03     		.2byte	0x38a
 7257 0a89 01       		.byte	0x1
 7258 0a8a 7A000000 		.4byte	0x7a
 7259 0a8e 00000000 		.4byte	.LFB41
 7260 0a92 68000000 		.4byte	.LFE41
 7261 0a96 E0080000 		.4byte	.LLST41
 7262 0a9a 01       		.byte	0x1
 7263 0a9b CD0A0000 		.4byte	0xacd
 7264 0a9f 10       		.uleb128 0x10
 7265 0aa0 57000000 		.4byte	.LASF55
 7266 0aa4 01       		.byte	0x1
 7267 0aa5 8A03     		.2byte	0x38a
 7268 0aa7 6F000000 		.4byte	0x6f
 7269 0aab 02       		.byte	0x2
 7270 0aac 91       		.byte	0x91
 7271 0aad 67       		.sleb128 -25
 7272 0aae 12       		.uleb128 0x12
 7273 0aaf C4060000 		.4byte	.LASF83
 7274 0ab3 01       		.byte	0x1
 7275 0ab4 8C03     		.2byte	0x38c
 7276 0ab6 7A000000 		.4byte	0x7a
 7277 0aba 02       		.byte	0x2
 7278 0abb 91       		.byte	0x91
 7279 0abc 6C       		.sleb128 -20
 7280 0abd 12       		.uleb128 0x12
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 160


 7281 0abe 82050000 		.4byte	.LASF84
 7282 0ac2 01       		.byte	0x1
 7283 0ac3 8C03     		.2byte	0x38c
 7284 0ac5 7A000000 		.4byte	0x7a
 7285 0ac9 02       		.byte	0x2
 7286 0aca 91       		.byte	0x91
 7287 0acb 6E       		.sleb128 -18
 7288 0acc 00       		.byte	0
 7289 0acd 0F       		.uleb128 0xf
 7290 0ace 01       		.byte	0x1
 7291 0acf 6C010000 		.4byte	.LASF86
 7292 0ad3 01       		.byte	0x1
 7293 0ad4 A903     		.2byte	0x3a9
 7294 0ad6 01       		.byte	0x1
 7295 0ad7 00000000 		.4byte	.LFB42
 7296 0adb 10010000 		.4byte	.LFE42
 7297 0adf 18090000 		.4byte	.LLST42
 7298 0ae3 01       		.byte	0x1
 7299 0ae4 610B0000 		.4byte	0xb61
 7300 0ae8 10       		.uleb128 0x10
 7301 0ae9 57000000 		.4byte	.LASF55
 7302 0aed 01       		.byte	0x1
 7303 0aee A903     		.2byte	0x3a9
 7304 0af0 6F000000 		.4byte	0x6f
 7305 0af4 02       		.byte	0x2
 7306 0af5 91       		.byte	0x91
 7307 0af6 6F       		.sleb128 -17
 7308 0af7 10       		.uleb128 0x10
 7309 0af8 23020000 		.4byte	.LASF87
 7310 0afc 01       		.byte	0x1
 7311 0afd A903     		.2byte	0x3a9
 7312 0aff 7A000000 		.4byte	0x7a
 7313 0b03 02       		.byte	0x2
 7314 0b04 91       		.byte	0x91
 7315 0b05 6C       		.sleb128 -20
 7316 0b06 10       		.uleb128 0x10
 7317 0b07 46070000 		.4byte	.LASF88
 7318 0b0b 01       		.byte	0x1
 7319 0b0c A903     		.2byte	0x3a9
 7320 0b0e D9010000 		.4byte	0x1d9
 7321 0b12 02       		.byte	0x2
 7322 0b13 91       		.byte	0x91
 7323 0b14 68       		.sleb128 -24
 7324 0b15 10       		.uleb128 0x10
 7325 0b16 CA060000 		.4byte	.LASF27
 7326 0b1a 01       		.byte	0x1
 7327 0b1b A903     		.2byte	0x3a9
 7328 0b1d 7A000000 		.4byte	0x7a
 7329 0b21 02       		.byte	0x2
 7330 0b22 91       		.byte	0x91
 7331 0b23 66       		.sleb128 -26
 7332 0b24 12       		.uleb128 0x12
 7333 0b25 FA000000 		.4byte	.LASF26
 7334 0b29 01       		.byte	0x1
 7335 0b2a AB03     		.2byte	0x3ab
 7336 0b2c 7A000000 		.4byte	0x7a
 7337 0b30 02       		.byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 161


 7338 0b31 91       		.byte	0x91
 7339 0b32 72       		.sleb128 -14
 7340 0b33 12       		.uleb128 0x12
 7341 0b34 6F050000 		.4byte	.LASF89
 7342 0b38 01       		.byte	0x1
 7343 0b39 AC03     		.2byte	0x3ac
 7344 0b3b 7A000000 		.4byte	0x7a
 7345 0b3f 02       		.byte	0x2
 7346 0b40 91       		.byte	0x91
 7347 0b41 76       		.sleb128 -10
 7348 0b42 12       		.uleb128 0x12
 7349 0b43 39030000 		.4byte	.LASF90
 7350 0b47 01       		.byte	0x1
 7351 0b48 AD03     		.2byte	0x3ad
 7352 0b4a 7A000000 		.4byte	0x7a
 7353 0b4e 02       		.byte	0x2
 7354 0b4f 91       		.byte	0x91
 7355 0b50 74       		.sleb128 -12
 7356 0b51 12       		.uleb128 0x12
 7357 0b52 68030000 		.4byte	.LASF56
 7358 0b56 01       		.byte	0x1
 7359 0b57 AE03     		.2byte	0x3ae
 7360 0b59 7A000000 		.4byte	0x7a
 7361 0b5d 02       		.byte	0x2
 7362 0b5e 91       		.byte	0x91
 7363 0b5f 70       		.sleb128 -16
 7364 0b60 00       		.byte	0
 7365 0b61 0F       		.uleb128 0xf
 7366 0b62 01       		.byte	0x1
 7367 0b63 01030000 		.4byte	.LASF91
 7368 0b67 01       		.byte	0x1
 7369 0b68 E103     		.2byte	0x3e1
 7370 0b6a 01       		.byte	0x1
 7371 0b6b 00000000 		.4byte	.LFB43
 7372 0b6f 1C010000 		.4byte	.LFE43
 7373 0b73 50090000 		.4byte	.LLST43
 7374 0b77 01       		.byte	0x1
 7375 0b78 040C0000 		.4byte	0xc04
 7376 0b7c 10       		.uleb128 0x10
 7377 0b7d 57000000 		.4byte	.LASF55
 7378 0b81 01       		.byte	0x1
 7379 0b82 E103     		.2byte	0x3e1
 7380 0b84 6F000000 		.4byte	0x6f
 7381 0b88 02       		.byte	0x2
 7382 0b89 91       		.byte	0x91
 7383 0b8a 6F       		.sleb128 -17
 7384 0b8b 10       		.uleb128 0x10
 7385 0b8c 23020000 		.4byte	.LASF87
 7386 0b90 01       		.byte	0x1
 7387 0b91 E103     		.2byte	0x3e1
 7388 0b93 7A000000 		.4byte	0x7a
 7389 0b97 02       		.byte	0x2
 7390 0b98 91       		.byte	0x91
 7391 0b99 6C       		.sleb128 -20
 7392 0b9a 10       		.uleb128 0x10
 7393 0b9b 46070000 		.4byte	.LASF88
 7394 0b9f 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 162


 7395 0ba0 E103     		.2byte	0x3e1
 7396 0ba2 D9010000 		.4byte	0x1d9
 7397 0ba6 02       		.byte	0x2
 7398 0ba7 91       		.byte	0x91
 7399 0ba8 68       		.sleb128 -24
 7400 0ba9 10       		.uleb128 0x10
 7401 0baa CA060000 		.4byte	.LASF27
 7402 0bae 01       		.byte	0x1
 7403 0baf E103     		.2byte	0x3e1
 7404 0bb1 7A000000 		.4byte	0x7a
 7405 0bb5 02       		.byte	0x2
 7406 0bb6 91       		.byte	0x91
 7407 0bb7 66       		.sleb128 -26
 7408 0bb8 10       		.uleb128 0x10
 7409 0bb9 D9070000 		.4byte	.LASF92
 7410 0bbd 01       		.byte	0x1
 7411 0bbe E103     		.2byte	0x3e1
 7412 0bc0 6F000000 		.4byte	0x6f
 7413 0bc4 02       		.byte	0x2
 7414 0bc5 91       		.byte	0x91
 7415 0bc6 00       		.sleb128 0
 7416 0bc7 12       		.uleb128 0x12
 7417 0bc8 FA000000 		.4byte	.LASF26
 7418 0bcc 01       		.byte	0x1
 7419 0bcd E303     		.2byte	0x3e3
 7420 0bcf 7A000000 		.4byte	0x7a
 7421 0bd3 02       		.byte	0x2
 7422 0bd4 91       		.byte	0x91
 7423 0bd5 72       		.sleb128 -14
 7424 0bd6 12       		.uleb128 0x12
 7425 0bd7 6F050000 		.4byte	.LASF89
 7426 0bdb 01       		.byte	0x1
 7427 0bdc E403     		.2byte	0x3e4
 7428 0bde 7A000000 		.4byte	0x7a
 7429 0be2 02       		.byte	0x2
 7430 0be3 91       		.byte	0x91
 7431 0be4 76       		.sleb128 -10
 7432 0be5 12       		.uleb128 0x12
 7433 0be6 39030000 		.4byte	.LASF90
 7434 0bea 01       		.byte	0x1
 7435 0beb E503     		.2byte	0x3e5
 7436 0bed 7A000000 		.4byte	0x7a
 7437 0bf1 02       		.byte	0x2
 7438 0bf2 91       		.byte	0x91
 7439 0bf3 74       		.sleb128 -12
 7440 0bf4 12       		.uleb128 0x12
 7441 0bf5 68030000 		.4byte	.LASF56
 7442 0bf9 01       		.byte	0x1
 7443 0bfa E603     		.2byte	0x3e6
 7444 0bfc 7A000000 		.4byte	0x7a
 7445 0c00 02       		.byte	0x2
 7446 0c01 91       		.byte	0x91
 7447 0c02 70       		.sleb128 -16
 7448 0c03 00       		.byte	0
 7449 0c04 0F       		.uleb128 0xf
 7450 0c05 01       		.byte	0x1
 7451 0c06 1D050000 		.4byte	.LASF93
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 163


 7452 0c0a 01       		.byte	0x1
 7453 0c0b 1704     		.2byte	0x417
 7454 0c0d 01       		.byte	0x1
 7455 0c0e 00000000 		.4byte	.LFB44
 7456 0c12 E8000000 		.4byte	.LFE44
 7457 0c16 88090000 		.4byte	.LLST44
 7458 0c1a 01       		.byte	0x1
 7459 0c1b 6A0C0000 		.4byte	0xc6a
 7460 0c1f 11       		.uleb128 0x11
 7461 0c20 6D616300 		.ascii	"mac\000"
 7462 0c24 01       		.byte	0x1
 7463 0c25 1704     		.2byte	0x417
 7464 0c27 D9010000 		.4byte	0x1d9
 7465 0c2b 02       		.byte	0x2
 7466 0c2c 91       		.byte	0x91
 7467 0c2d 6C       		.sleb128 -20
 7468 0c2e 11       		.uleb128 0x11
 7469 0c2f 697000   		.ascii	"ip\000"
 7470 0c32 01       		.byte	0x1
 7471 0c33 1704     		.2byte	0x417
 7472 0c35 85000000 		.4byte	0x85
 7473 0c39 02       		.byte	0x2
 7474 0c3a 91       		.byte	0x91
 7475 0c3b 68       		.sleb128 -24
 7476 0c3c 10       		.uleb128 0x10
 7477 0c3d 61030000 		.4byte	.LASF94
 7478 0c41 01       		.byte	0x1
 7479 0c42 1704     		.2byte	0x417
 7480 0c44 85000000 		.4byte	0x85
 7481 0c48 02       		.byte	0x2
 7482 0c49 91       		.byte	0x91
 7483 0c4a 64       		.sleb128 -28
 7484 0c4b 10       		.uleb128 0x10
 7485 0c4c 21010000 		.4byte	.LASF95
 7486 0c50 01       		.byte	0x1
 7487 0c51 1704     		.2byte	0x417
 7488 0c53 85000000 		.4byte	0x85
 7489 0c57 02       		.byte	0x2
 7490 0c58 91       		.byte	0x91
 7491 0c59 60       		.sleb128 -32
 7492 0c5a 12       		.uleb128 0x12
 7493 0c5b CF000000 		.4byte	.LASF96
 7494 0c5f 01       		.byte	0x1
 7495 0c60 1E04     		.2byte	0x41e
 7496 0c62 61000000 		.4byte	0x61
 7497 0c66 02       		.byte	0x2
 7498 0c67 91       		.byte	0x91
 7499 0c68 74       		.sleb128 -12
 7500 0c69 00       		.byte	0
 7501 0c6a 0F       		.uleb128 0xf
 7502 0c6b 01       		.byte	0x1
 7503 0c6c 08010000 		.4byte	.LASF97
 7504 0c70 01       		.byte	0x1
 7505 0c71 4304     		.2byte	0x443
 7506 0c73 01       		.byte	0x1
 7507 0c74 00000000 		.4byte	.LFB45
 7508 0c78 9C000000 		.4byte	.LFE45
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 164


 7509 0c7c C0090000 		.4byte	.LLST45
 7510 0c80 01       		.byte	0x1
 7511 0c81 B20C0000 		.4byte	0xcb2
 7512 0c85 14       		.uleb128 0x14
 7513 0c86 697000   		.ascii	"ip\000"
 7514 0c89 01       		.byte	0x1
 7515 0c8a 4504     		.2byte	0x445
 7516 0c8c 85000000 		.4byte	0x85
 7517 0c90 02       		.byte	0x2
 7518 0c91 91       		.byte	0x91
 7519 0c92 74       		.sleb128 -12
 7520 0c93 12       		.uleb128 0x12
 7521 0c94 21010000 		.4byte	.LASF95
 7522 0c98 01       		.byte	0x1
 7523 0c99 4604     		.2byte	0x446
 7524 0c9b 85000000 		.4byte	0x85
 7525 0c9f 02       		.byte	0x2
 7526 0ca0 91       		.byte	0x91
 7527 0ca1 6C       		.sleb128 -20
 7528 0ca2 14       		.uleb128 0x14
 7529 0ca3 73756200 		.ascii	"sub\000"
 7530 0ca7 01       		.byte	0x1
 7531 0ca8 4704     		.2byte	0x447
 7532 0caa 85000000 		.4byte	0x85
 7533 0cae 02       		.byte	0x2
 7534 0caf 91       		.byte	0x91
 7535 0cb0 70       		.sleb128 -16
 7536 0cb1 00       		.byte	0
 7537 0cb2 13       		.uleb128 0x13
 7538 0cb3 01       		.byte	0x1
 7539 0cb4 23040000 		.4byte	.LASF98
 7540 0cb8 01       		.byte	0x1
 7541 0cb9 6604     		.2byte	0x466
 7542 0cbb 01       		.byte	0x1
 7543 0cbc 85000000 		.4byte	0x85
 7544 0cc0 00000000 		.4byte	.LFB46
 7545 0cc4 3A010000 		.4byte	.LFE46
 7546 0cc8 F8090000 		.4byte	.LLST46
 7547 0ccc 01       		.byte	0x1
 7548 0ccd 2B0D0000 		.4byte	0xd2b
 7549 0cd1 10       		.uleb128 0x10
 7550 0cd2 80060000 		.4byte	.LASF99
 7551 0cd6 01       		.byte	0x1
 7552 0cd7 6604     		.2byte	0x466
 7553 0cd9 BD000000 		.4byte	0xbd
 7554 0cdd 02       		.byte	0x2
 7555 0cde 91       		.byte	0x91
 7556 0cdf 54       		.sleb128 -44
 7557 0ce0 12       		.uleb128 0x12
 7558 0ce1 CF000000 		.4byte	.LASF96
 7559 0ce5 01       		.byte	0x1
 7560 0ce6 6B04     		.2byte	0x46b
 7561 0ce8 61000000 		.4byte	0x61
 7562 0cec 02       		.byte	0x2
 7563 0ced 91       		.byte	0x91
 7564 0cee 6C       		.sleb128 -20
 7565 0cef 12       		.uleb128 0x12
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 165


 7566 0cf0 91010000 		.4byte	.LASF100
 7567 0cf4 01       		.byte	0x1
 7568 0cf5 6C04     		.2byte	0x46c
 7569 0cf7 2B0D0000 		.4byte	0xd2b
 7570 0cfb 02       		.byte	0x2
 7571 0cfc 91       		.byte	0x91
 7572 0cfd 5C       		.sleb128 -36
 7573 0cfe 14       		.uleb128 0x14
 7574 0cff 697000   		.ascii	"ip\000"
 7575 0d02 01       		.byte	0x1
 7576 0d03 6D04     		.2byte	0x46d
 7577 0d05 3B0D0000 		.4byte	0xd3b
 7578 0d09 02       		.byte	0x2
 7579 0d0a 91       		.byte	0x91
 7580 0d0b 58       		.sleb128 -40
 7581 0d0c 12       		.uleb128 0x12
 7582 0d0d C4050000 		.4byte	.LASF101
 7583 0d11 01       		.byte	0x1
 7584 0d12 6E04     		.2byte	0x46e
 7585 0d14 61000000 		.4byte	0x61
 7586 0d18 02       		.byte	0x2
 7587 0d19 91       		.byte	0x91
 7588 0d1a 68       		.sleb128 -24
 7589 0d1b 12       		.uleb128 0x12
 7590 0d1c F9010000 		.4byte	.LASF102
 7591 0d20 01       		.byte	0x1
 7592 0d21 6F04     		.2byte	0x46f
 7593 0d23 61000000 		.4byte	0x61
 7594 0d27 02       		.byte	0x2
 7595 0d28 91       		.byte	0x91
 7596 0d29 64       		.sleb128 -28
 7597 0d2a 00       		.byte	0
 7598 0d2b 16       		.uleb128 0x16
 7599 0d2c 9E000000 		.4byte	0x9e
 7600 0d30 3B0D0000 		.4byte	0xd3b
 7601 0d34 17       		.uleb128 0x17
 7602 0d35 B0000000 		.4byte	0xb0
 7603 0d39 04       		.byte	0x4
 7604 0d3a 00       		.byte	0
 7605 0d3b 16       		.uleb128 0x16
 7606 0d3c 6F000000 		.4byte	0x6f
 7607 0d40 4B0D0000 		.4byte	0xd4b
 7608 0d44 17       		.uleb128 0x17
 7609 0d45 B0000000 		.4byte	0xb0
 7610 0d49 03       		.byte	0x3
 7611 0d4a 00       		.byte	0
 7612 0d4b 18       		.uleb128 0x18
 7613 0d4c 01       		.byte	0x1
 7614 0d4d 43000000 		.4byte	.LASF103
 7615 0d51 01       		.byte	0x1
 7616 0d52 9B04     		.2byte	0x49b
 7617 0d54 01       		.byte	0x1
 7618 0d55 A5000000 		.4byte	0xa5
 7619 0d59 00000000 		.4byte	.LFB47
 7620 0d5d 30020000 		.4byte	.LFE47
 7621 0d61 300A0000 		.4byte	.LLST47
 7622 0d65 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 166


 7623 0d66 B60D0000 		.4byte	0xdb6
 7624 0d6a 10       		.uleb128 0x10
 7625 0d6b 69020000 		.4byte	.LASF104
 7626 0d6f 01       		.byte	0x1
 7627 0d70 9B04     		.2byte	0x49b
 7628 0d72 BD000000 		.4byte	0xbd
 7629 0d76 02       		.byte	0x2
 7630 0d77 91       		.byte	0x91
 7631 0d78 64       		.sleb128 -28
 7632 0d79 11       		.uleb128 0x11
 7633 0d7a 6D616300 		.ascii	"mac\000"
 7634 0d7e 01       		.byte	0x1
 7635 0d7f 9B04     		.2byte	0x49b
 7636 0d81 D9010000 		.4byte	0x1d9
 7637 0d85 02       		.byte	0x2
 7638 0d86 91       		.byte	0x91
 7639 0d87 60       		.sleb128 -32
 7640 0d88 12       		.uleb128 0x12
 7641 0d89 91010000 		.4byte	.LASF100
 7642 0d8d 01       		.byte	0x1
 7643 0d8e A304     		.2byte	0x4a3
 7644 0d90 61000000 		.4byte	0x61
 7645 0d94 02       		.byte	0x2
 7646 0d95 91       		.byte	0x91
 7647 0d96 74       		.sleb128 -12
 7648 0d97 12       		.uleb128 0x12
 7649 0d98 CF000000 		.4byte	.LASF96
 7650 0d9c 01       		.byte	0x1
 7651 0d9d A404     		.2byte	0x4a4
 7652 0d9f 61000000 		.4byte	0x61
 7653 0da3 02       		.byte	0x2
 7654 0da4 91       		.byte	0x91
 7655 0da5 70       		.sleb128 -16
 7656 0da6 12       		.uleb128 0x12
 7657 0da7 3F080000 		.4byte	.LASF105
 7658 0dab 01       		.byte	0x1
 7659 0dac A504     		.2byte	0x4a5
 7660 0dae A5000000 		.4byte	0xa5
 7661 0db2 02       		.byte	0x2
 7662 0db3 91       		.byte	0x91
 7663 0db4 6C       		.sleb128 -20
 7664 0db5 00       		.byte	0
 7665 0db6 15       		.uleb128 0x15
 7666 0db7 01       		.byte	0x1
 7667 0db8 DD040000 		.4byte	.LASF106
 7668 0dbc 01       		.byte	0x1
 7669 0dbd C804     		.2byte	0x4c8
 7670 0dbf 01       		.byte	0x1
 7671 0dc0 00000000 		.4byte	.LFB48
 7672 0dc4 D4000000 		.4byte	.LFE48
 7673 0dc8 680A0000 		.4byte	.LLST48
 7674 0dcc 01       		.byte	0x1
 7675 0dcd 0E0E0000 		.4byte	0xe0e
 7676 0dd1 11       		.uleb128 0x11
 7677 0dd2 6D616300 		.ascii	"mac\000"
 7678 0dd6 01       		.byte	0x1
 7679 0dd7 C804     		.2byte	0x4c8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 167


 7680 0dd9 D9010000 		.4byte	0x1d9
 7681 0ddd 02       		.byte	0x2
 7682 0dde 91       		.byte	0x91
 7683 0ddf 6C       		.sleb128 -20
 7684 0de0 10       		.uleb128 0x10
 7685 0de1 69020000 		.4byte	.LASF104
 7686 0de5 01       		.byte	0x1
 7687 0de6 C804     		.2byte	0x4c8
 7688 0de8 B7000000 		.4byte	0xb7
 7689 0dec 02       		.byte	0x2
 7690 0ded 91       		.byte	0x91
 7691 0dee 68       		.sleb128 -24
 7692 0def 12       		.uleb128 0x12
 7693 0df0 91010000 		.4byte	.LASF100
 7694 0df4 01       		.byte	0x1
 7695 0df5 CA04     		.2byte	0x4ca
 7696 0df7 61000000 		.4byte	0x61
 7697 0dfb 02       		.byte	0x2
 7698 0dfc 91       		.byte	0x91
 7699 0dfd 74       		.sleb128 -12
 7700 0dfe 12       		.uleb128 0x12
 7701 0dff CF000000 		.4byte	.LASF96
 7702 0e03 01       		.byte	0x1
 7703 0e04 CB04     		.2byte	0x4cb
 7704 0e06 61000000 		.4byte	0x61
 7705 0e0a 02       		.byte	0x2
 7706 0e0b 91       		.byte	0x91
 7707 0e0c 70       		.sleb128 -16
 7708 0e0d 00       		.byte	0
 7709 0e0e 0F       		.uleb128 0xf
 7710 0e0f 01       		.byte	0x1
 7711 0e10 F1040000 		.4byte	.LASF107
 7712 0e14 01       		.byte	0x1
 7713 0e15 DE04     		.2byte	0x4de
 7714 0e17 01       		.byte	0x1
 7715 0e18 00000000 		.4byte	.LFB49
 7716 0e1c DC000000 		.4byte	.LFE49
 7717 0e20 A00A0000 		.4byte	.LLST49
 7718 0e24 01       		.byte	0x1
 7719 0e25 920E0000 		.4byte	0xe92
 7720 0e29 11       		.uleb128 0x11
 7721 0e2a 697000   		.ascii	"ip\000"
 7722 0e2d 01       		.byte	0x1
 7723 0e2e DE04     		.2byte	0x4de
 7724 0e30 85000000 		.4byte	0x85
 7725 0e34 02       		.byte	0x2
 7726 0e35 91       		.byte	0x91
 7727 0e36 5C       		.sleb128 -36
 7728 0e37 10       		.uleb128 0x10
 7729 0e38 80060000 		.4byte	.LASF99
 7730 0e3c 01       		.byte	0x1
 7731 0e3d DE04     		.2byte	0x4de
 7732 0e3f B7000000 		.4byte	0xb7
 7733 0e43 02       		.byte	0x2
 7734 0e44 91       		.byte	0x91
 7735 0e45 58       		.sleb128 -40
 7736 0e46 12       		.uleb128 0x12
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 168


 7737 0e47 FE040000 		.4byte	.LASF108
 7738 0e4b 01       		.byte	0x1
 7739 0e4c E004     		.2byte	0x4e0
 7740 0e4e D9010000 		.4byte	0x1d9
 7741 0e52 02       		.byte	0x2
 7742 0e53 91       		.byte	0x91
 7743 0e54 68       		.sleb128 -24
 7744 0e55 12       		.uleb128 0x12
 7745 0e56 CF000000 		.4byte	.LASF96
 7746 0e5a 01       		.byte	0x1
 7747 0e5b E104     		.2byte	0x4e1
 7748 0e5d 61000000 		.4byte	0x61
 7749 0e61 02       		.byte	0x2
 7750 0e62 91       		.byte	0x91
 7751 0e63 74       		.sleb128 -12
 7752 0e64 12       		.uleb128 0x12
 7753 0e65 91010000 		.4byte	.LASF100
 7754 0e69 01       		.byte	0x1
 7755 0e6a E204     		.2byte	0x4e2
 7756 0e6c 61000000 		.4byte	0x61
 7757 0e70 02       		.byte	0x2
 7758 0e71 91       		.byte	0x91
 7759 0e72 70       		.sleb128 -16
 7760 0e73 12       		.uleb128 0x12
 7761 0e74 5D070000 		.4byte	.LASF109
 7762 0e78 01       		.byte	0x1
 7763 0e79 E304     		.2byte	0x4e3
 7764 0e7b 61000000 		.4byte	0x61
 7765 0e7f 02       		.byte	0x2
 7766 0e80 91       		.byte	0x91
 7767 0e81 6C       		.sleb128 -20
 7768 0e82 12       		.uleb128 0x12
 7769 0e83 C2020000 		.4byte	.LASF110
 7770 0e87 01       		.byte	0x1
 7771 0e88 E304     		.2byte	0x4e3
 7772 0e8a 61000000 		.4byte	0x61
 7773 0e8e 02       		.byte	0x2
 7774 0e8f 91       		.byte	0x91
 7775 0e90 64       		.sleb128 -28
 7776 0e91 00       		.byte	0
 7777 0e92 13       		.uleb128 0x13
 7778 0e93 01       		.byte	0x1
 7779 0e94 A2070000 		.4byte	.LASF111
 7780 0e98 01       		.byte	0x1
 7781 0e99 FF04     		.2byte	0x4ff
 7782 0e9b 01       		.byte	0x1
 7783 0e9c 6F000000 		.4byte	0x6f
 7784 0ea0 00000000 		.4byte	.LFB50
 7785 0ea4 3A000000 		.4byte	.LFE50
 7786 0ea8 D80A0000 		.4byte	.LLST50
 7787 0eac 01       		.byte	0x1
 7788 0ead CE0E0000 		.4byte	0xece
 7789 0eb1 11       		.uleb128 0x11
 7790 0eb2 697000   		.ascii	"ip\000"
 7791 0eb5 01       		.byte	0x1
 7792 0eb6 FF04     		.2byte	0x4ff
 7793 0eb8 85000000 		.4byte	0x85
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 169


 7794 0ebc 02       		.byte	0x2
 7795 0ebd 91       		.byte	0x91
 7796 0ebe 6C       		.sleb128 -20
 7797 0ebf 14       		.uleb128 0x14
 7798 0ec0 6F6B00   		.ascii	"ok\000"
 7799 0ec3 01       		.byte	0x1
 7800 0ec4 0105     		.2byte	0x501
 7801 0ec6 6F000000 		.4byte	0x6f
 7802 0eca 02       		.byte	0x2
 7803 0ecb 91       		.byte	0x91
 7804 0ecc 77       		.sleb128 -9
 7805 0ecd 00       		.byte	0
 7806 0ece 19       		.uleb128 0x19
 7807 0ecf 01       		.byte	0x1
 7808 0ed0 DE020000 		.4byte	.LASF147
 7809 0ed4 01       		.byte	0x1
 7810 0ed5 0C05     		.2byte	0x50c
 7811 0ed7 01       		.byte	0x1
 7812 0ed8 85000000 		.4byte	0x85
 7813 0edc 00000000 		.4byte	.LFB51
 7814 0ee0 10000000 		.4byte	.LFE51
 7815 0ee4 100B0000 		.4byte	.LLST51
 7816 0ee8 01       		.byte	0x1
 7817 0ee9 0F       		.uleb128 0xf
 7818 0eea 01       		.byte	0x1
 7819 0eeb D2040000 		.4byte	.LASF112
 7820 0eef 01       		.byte	0x1
 7821 0ef0 1205     		.2byte	0x512
 7822 0ef2 01       		.byte	0x1
 7823 0ef3 00000000 		.4byte	.LFB52
 7824 0ef7 16000000 		.4byte	.LFE52
 7825 0efb 3C0B0000 		.4byte	.LLST52
 7826 0eff 01       		.byte	0x1
 7827 0f00 140F0000 		.4byte	0xf14
 7828 0f04 11       		.uleb128 0x11
 7829 0f05 6D616300 		.ascii	"mac\000"
 7830 0f09 01       		.byte	0x1
 7831 0f0a 1205     		.2byte	0x512
 7832 0f0c D9010000 		.4byte	0x1d9
 7833 0f10 02       		.byte	0x2
 7834 0f11 91       		.byte	0x91
 7835 0f12 74       		.sleb128 -12
 7836 0f13 00       		.byte	0
 7837 0f14 0F       		.uleb128 0xf
 7838 0f15 01       		.byte	0x1
 7839 0f16 CE070000 		.4byte	.LASF113
 7840 0f1a 01       		.byte	0x1
 7841 0f1b 1805     		.2byte	0x518
 7842 0f1d 01       		.byte	0x1
 7843 0f1e 00000000 		.4byte	.LFB53
 7844 0f22 16000000 		.4byte	.LFE53
 7845 0f26 740B0000 		.4byte	.LLST53
 7846 0f2a 01       		.byte	0x1
 7847 0f2b 3F0F0000 		.4byte	0xf3f
 7848 0f2f 11       		.uleb128 0x11
 7849 0f30 6D616300 		.ascii	"mac\000"
 7850 0f34 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 170


 7851 0f35 1805     		.2byte	0x518
 7852 0f37 D9010000 		.4byte	0x1d9
 7853 0f3b 02       		.byte	0x2
 7854 0f3c 91       		.byte	0x91
 7855 0f3d 74       		.sleb128 -12
 7856 0f3e 00       		.byte	0
 7857 0f3f 13       		.uleb128 0x13
 7858 0f40 01       		.byte	0x1
 7859 0f41 A8030000 		.4byte	.LASF114
 7860 0f45 01       		.byte	0x1
 7861 0f46 2205     		.2byte	0x522
 7862 0f48 01       		.byte	0x1
 7863 0f49 6F000000 		.4byte	0x6f
 7864 0f4d 00000000 		.4byte	.LFB54
 7865 0f51 70010000 		.4byte	.LFE54
 7866 0f55 AC0B0000 		.4byte	.LLST54
 7867 0f59 01       		.byte	0x1
 7868 0f5a AA0F0000 		.4byte	0xfaa
 7869 0f5e 10       		.uleb128 0x10
 7870 0f5f FF000000 		.4byte	.LASF17
 7871 0f63 01       		.byte	0x1
 7872 0f64 2205     		.2byte	0x522
 7873 0f66 6F000000 		.4byte	0x6f
 7874 0f6a 02       		.byte	0x2
 7875 0f6b 91       		.byte	0x91
 7876 0f6c 6F       		.sleb128 -17
 7877 0f6d 10       		.uleb128 0x10
 7878 0f6e BD020000 		.4byte	.LASF68
 7879 0f72 01       		.byte	0x1
 7880 0f73 2205     		.2byte	0x522
 7881 0f75 7A000000 		.4byte	0x7a
 7882 0f79 02       		.byte	0x2
 7883 0f7a 91       		.byte	0x91
 7884 0f7b 6C       		.sleb128 -20
 7885 0f7c 10       		.uleb128 0x10
 7886 0f7d D9070000 		.4byte	.LASF92
 7887 0f81 01       		.byte	0x1
 7888 0f82 2205     		.2byte	0x522
 7889 0f84 6F000000 		.4byte	0x6f
 7890 0f88 02       		.byte	0x2
 7891 0f89 91       		.byte	0x91
 7892 0f8a 6E       		.sleb128 -18
 7893 0f8b 12       		.uleb128 0x12
 7894 0f8c 57000000 		.4byte	.LASF55
 7895 0f90 01       		.byte	0x1
 7896 0f91 2405     		.2byte	0x524
 7897 0f93 6F000000 		.4byte	0x6f
 7898 0f97 02       		.byte	0x2
 7899 0f98 91       		.byte	0x91
 7900 0f99 77       		.sleb128 -9
 7901 0f9a 12       		.uleb128 0x12
 7902 0f9b CF000000 		.4byte	.LASF96
 7903 0f9f 01       		.byte	0x1
 7904 0fa0 2505     		.2byte	0x525
 7905 0fa2 61000000 		.4byte	0x61
 7906 0fa6 02       		.byte	0x2
 7907 0fa7 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 171


 7908 0fa8 70       		.sleb128 -16
 7909 0fa9 00       		.byte	0
 7910 0faa 0F       		.uleb128 0xf
 7911 0fab 01       		.byte	0x1
 7912 0fac C2040000 		.4byte	.LASF115
 7913 0fb0 01       		.byte	0x1
 7914 0fb1 5605     		.2byte	0x556
 7915 0fb3 01       		.byte	0x1
 7916 0fb4 00000000 		.4byte	.LFB55
 7917 0fb8 50000000 		.4byte	.LFE55
 7918 0fbc E40B0000 		.4byte	.LLST55
 7919 0fc0 01       		.byte	0x1
 7920 0fc1 D50F0000 		.4byte	0xfd5
 7921 0fc5 10       		.uleb128 0x10
 7922 0fc6 57000000 		.4byte	.LASF55
 7923 0fca 01       		.byte	0x1
 7924 0fcb 5605     		.2byte	0x556
 7925 0fcd 6F000000 		.4byte	0x6f
 7926 0fd1 02       		.byte	0x2
 7927 0fd2 91       		.byte	0x91
 7928 0fd3 77       		.sleb128 -9
 7929 0fd4 00       		.byte	0
 7930 0fd5 13       		.uleb128 0x13
 7931 0fd6 01       		.byte	0x1
 7932 0fd7 94060000 		.4byte	.LASF116
 7933 0fdb 01       		.byte	0x1
 7934 0fdc 6805     		.2byte	0x568
 7935 0fde 01       		.byte	0x1
 7936 0fdf 6F000000 		.4byte	0x6f
 7937 0fe3 00000000 		.4byte	.LFB56
 7938 0fe7 4C000000 		.4byte	.LFE56
 7939 0feb 1C0C0000 		.4byte	.LLST56
 7940 0fef 01       		.byte	0x1
 7941 0ff0 13100000 		.4byte	0x1013
 7942 0ff4 10       		.uleb128 0x10
 7943 0ff5 57000000 		.4byte	.LASF55
 7944 0ff9 01       		.byte	0x1
 7945 0ffa 6805     		.2byte	0x568
 7946 0ffc 6F000000 		.4byte	0x6f
 7947 1000 02       		.byte	0x2
 7948 1001 91       		.byte	0x91
 7949 1002 67       		.sleb128 -25
 7950 1003 12       		.uleb128 0x12
 7951 1004 C7070000 		.4byte	.LASF66
 7952 1008 01       		.byte	0x1
 7953 1009 6A05     		.2byte	0x56a
 7954 100b 6F000000 		.4byte	0x6f
 7955 100f 02       		.byte	0x2
 7956 1010 91       		.byte	0x91
 7957 1011 6F       		.sleb128 -17
 7958 1012 00       		.byte	0
 7959 1013 13       		.uleb128 0x13
 7960 1014 01       		.byte	0x1
 7961 1015 BE030000 		.4byte	.LASF117
 7962 1019 01       		.byte	0x1
 7963 101a 7605     		.2byte	0x576
 7964 101c 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 172


 7965 101d 6F000000 		.4byte	0x6f
 7966 1021 00000000 		.4byte	.LFB57
 7967 1025 44000000 		.4byte	.LFE57
 7968 1029 540C0000 		.4byte	.LLST57
 7969 102d 01       		.byte	0x1
 7970 102e 51100000 		.4byte	0x1051
 7971 1032 10       		.uleb128 0x10
 7972 1033 57000000 		.4byte	.LASF55
 7973 1037 01       		.byte	0x1
 7974 1038 7605     		.2byte	0x576
 7975 103a 6F000000 		.4byte	0x6f
 7976 103e 02       		.byte	0x2
 7977 103f 91       		.byte	0x91
 7978 1040 67       		.sleb128 -25
 7979 1041 12       		.uleb128 0x12
 7980 1042 3F080000 		.4byte	.LASF105
 7981 1046 01       		.byte	0x1
 7982 1047 7805     		.2byte	0x578
 7983 1049 6F000000 		.4byte	0x6f
 7984 104d 02       		.byte	0x2
 7985 104e 91       		.byte	0x91
 7986 104f 6F       		.sleb128 -17
 7987 1050 00       		.byte	0
 7988 1051 0F       		.uleb128 0xf
 7989 1052 01       		.byte	0x1
 7990 1053 12010000 		.4byte	.LASF118
 7991 1057 01       		.byte	0x1
 7992 1058 8605     		.2byte	0x586
 7993 105a 01       		.byte	0x1
 7994 105b 00000000 		.4byte	.LFB58
 7995 105f 8C000000 		.4byte	.LFE58
 7996 1063 8C0C0000 		.4byte	.LLST58
 7997 1067 01       		.byte	0x1
 7998 1068 8A100000 		.4byte	0x108a
 7999 106c 10       		.uleb128 0x10
 8000 106d 57000000 		.4byte	.LASF55
 8001 1071 01       		.byte	0x1
 8002 1072 8605     		.2byte	0x586
 8003 1074 6F000000 		.4byte	0x6f
 8004 1078 02       		.byte	0x2
 8005 1079 91       		.byte	0x91
 8006 107a 67       		.sleb128 -25
 8007 107b 14       		.uleb128 0x14
 8008 107c 697200   		.ascii	"ir\000"
 8009 107f 01       		.byte	0x1
 8010 1080 8805     		.2byte	0x588
 8011 1082 6F000000 		.4byte	0x6f
 8012 1086 02       		.byte	0x2
 8013 1087 91       		.byte	0x91
 8014 1088 6F       		.sleb128 -17
 8015 1089 00       		.byte	0
 8016 108a 0F       		.uleb128 0xf
 8017 108b 01       		.byte	0x1
 8018 108c 23070000 		.4byte	.LASF119
 8019 1090 01       		.byte	0x1
 8020 1091 A305     		.2byte	0x5a3
 8021 1093 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 173


 8022 1094 00000000 		.4byte	.LFB59
 8023 1098 84000000 		.4byte	.LFE59
 8024 109c C40C0000 		.4byte	.LLST59
 8025 10a0 01       		.byte	0x1
 8026 10a1 C3100000 		.4byte	0x10c3
 8027 10a5 10       		.uleb128 0x10
 8028 10a6 57000000 		.4byte	.LASF55
 8029 10aa 01       		.byte	0x1
 8030 10ab A305     		.2byte	0x5a3
 8031 10ad 6F000000 		.4byte	0x6f
 8032 10b1 02       		.byte	0x2
 8033 10b2 91       		.byte	0x91
 8034 10b3 67       		.sleb128 -25
 8035 10b4 14       		.uleb128 0x14
 8036 10b5 697200   		.ascii	"ir\000"
 8037 10b8 01       		.byte	0x1
 8038 10b9 A505     		.2byte	0x5a5
 8039 10bb 6F000000 		.4byte	0x6f
 8040 10bf 02       		.byte	0x2
 8041 10c0 91       		.byte	0x91
 8042 10c1 6F       		.sleb128 -17
 8043 10c2 00       		.byte	0
 8044 10c3 13       		.uleb128 0x13
 8045 10c4 01       		.byte	0x1
 8046 10c5 F1030000 		.4byte	.LASF120
 8047 10c9 01       		.byte	0x1
 8048 10ca BA05     		.2byte	0x5ba
 8049 10cc 01       		.byte	0x1
 8050 10cd 7A000000 		.4byte	0x7a
 8051 10d1 00000000 		.4byte	.LFB60
 8052 10d5 20000000 		.4byte	.LFE60
 8053 10d9 FC0C0000 		.4byte	.LLST60
 8054 10dd 01       		.byte	0x1
 8055 10de F2100000 		.4byte	0x10f2
 8056 10e2 10       		.uleb128 0x10
 8057 10e3 57000000 		.4byte	.LASF55
 8058 10e7 01       		.byte	0x1
 8059 10e8 BA05     		.2byte	0x5ba
 8060 10ea 6F000000 		.4byte	0x6f
 8061 10ee 02       		.byte	0x2
 8062 10ef 91       		.byte	0x91
 8063 10f0 77       		.sleb128 -9
 8064 10f1 00       		.byte	0
 8065 10f2 13       		.uleb128 0x13
 8066 10f3 01       		.byte	0x1
 8067 10f4 AA040000 		.4byte	.LASF121
 8068 10f8 01       		.byte	0x1
 8069 10f9 C405     		.2byte	0x5c4
 8070 10fb 01       		.byte	0x1
 8071 10fc 6F000000 		.4byte	0x6f
 8072 1100 00000000 		.4byte	.LFB61
 8073 1104 24000000 		.4byte	.LFE61
 8074 1108 340D0000 		.4byte	.LLST61
 8075 110c 01       		.byte	0x1
 8076 110d 21110000 		.4byte	0x1121
 8077 1111 10       		.uleb128 0x10
 8078 1112 BD020000 		.4byte	.LASF68
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 174


 8079 1116 01       		.byte	0x1
 8080 1117 C405     		.2byte	0x5c4
 8081 1119 7A000000 		.4byte	0x7a
 8082 111d 02       		.byte	0x2
 8083 111e 91       		.byte	0x91
 8084 111f 76       		.sleb128 -10
 8085 1120 00       		.byte	0
 8086 1121 0F       		.uleb128 0xf
 8087 1122 01       		.byte	0x1
 8088 1123 84000000 		.4byte	.LASF122
 8089 1127 01       		.byte	0x1
 8090 1128 CA05     		.2byte	0x5ca
 8091 112a 01       		.byte	0x1
 8092 112b 00000000 		.4byte	.LFB62
 8093 112f 26000000 		.4byte	.LFE62
 8094 1133 6C0D0000 		.4byte	.LLST62
 8095 1137 01       		.byte	0x1
 8096 1138 4C110000 		.4byte	0x114c
 8097 113c 10       		.uleb128 0x10
 8098 113d 57000000 		.4byte	.LASF55
 8099 1141 01       		.byte	0x1
 8100 1142 CA05     		.2byte	0x5ca
 8101 1144 6F000000 		.4byte	0x6f
 8102 1148 02       		.byte	0x2
 8103 1149 91       		.byte	0x91
 8104 114a 77       		.sleb128 -9
 8105 114b 00       		.byte	0
 8106 114c 0F       		.uleb128 0xf
 8107 114d 01       		.byte	0x1
 8108 114e EA060000 		.4byte	.LASF123
 8109 1152 01       		.byte	0x1
 8110 1153 D705     		.2byte	0x5d7
 8111 1155 01       		.byte	0x1
 8112 1156 00000000 		.4byte	.LFB63
 8113 115a 50000000 		.4byte	.LFE63
 8114 115e A40D0000 		.4byte	.LLST63
 8115 1162 01       		.byte	0x1
 8116 1163 77110000 		.4byte	0x1177
 8117 1167 10       		.uleb128 0x10
 8118 1168 57000000 		.4byte	.LASF55
 8119 116c 01       		.byte	0x1
 8120 116d D705     		.2byte	0x5d7
 8121 116f 6F000000 		.4byte	0x6f
 8122 1173 02       		.byte	0x2
 8123 1174 91       		.byte	0x91
 8124 1175 77       		.sleb128 -9
 8125 1176 00       		.byte	0
 8126 1177 0F       		.uleb128 0xf
 8127 1178 01       		.byte	0x1
 8128 1179 2F040000 		.4byte	.LASF124
 8129 117d 01       		.byte	0x1
 8130 117e E605     		.2byte	0x5e6
 8131 1180 01       		.byte	0x1
 8132 1181 00000000 		.4byte	.LFB64
 8133 1185 C0000000 		.4byte	.LFE64
 8134 1189 DC0D0000 		.4byte	.LLST64
 8135 118d 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 175


 8136 118e DC110000 		.4byte	0x11dc
 8137 1192 10       		.uleb128 0x10
 8138 1193 57000000 		.4byte	.LASF55
 8139 1197 01       		.byte	0x1
 8140 1198 E605     		.2byte	0x5e6
 8141 119a 6F000000 		.4byte	0x6f
 8142 119e 02       		.byte	0x2
 8143 119f 91       		.byte	0x91
 8144 11a0 67       		.sleb128 -25
 8145 11a1 11       		.uleb128 0x11
 8146 11a2 697000   		.ascii	"ip\000"
 8147 11a5 01       		.byte	0x1
 8148 11a6 E605     		.2byte	0x5e6
 8149 11a8 85000000 		.4byte	0x85
 8150 11ac 02       		.byte	0x2
 8151 11ad 91       		.byte	0x91
 8152 11ae 60       		.sleb128 -32
 8153 11af 10       		.uleb128 0x10
 8154 11b0 BD020000 		.4byte	.LASF68
 8155 11b4 01       		.byte	0x1
 8156 11b5 E605     		.2byte	0x5e6
 8157 11b7 7A000000 		.4byte	0x7a
 8158 11bb 02       		.byte	0x2
 8159 11bc 91       		.byte	0x91
 8160 11bd 64       		.sleb128 -28
 8161 11be 12       		.uleb128 0x12
 8162 11bf 59030000 		.4byte	.LASF81
 8163 11c3 01       		.byte	0x1
 8164 11c4 E805     		.2byte	0x5e8
 8165 11c6 85000000 		.4byte	0x85
 8166 11ca 02       		.byte	0x2
 8167 11cb 91       		.byte	0x91
 8168 11cc 6C       		.sleb128 -20
 8169 11cd 14       		.uleb128 0x14
 8170 11ce 697200   		.ascii	"ir\000"
 8171 11d1 01       		.byte	0x1
 8172 11d2 E905     		.2byte	0x5e9
 8173 11d4 6F000000 		.4byte	0x6f
 8174 11d8 02       		.byte	0x2
 8175 11d9 91       		.byte	0x91
 8176 11da 6B       		.sleb128 -21
 8177 11db 00       		.byte	0
 8178 11dc 13       		.uleb128 0x13
 8179 11dd 01       		.byte	0x1
 8180 11de 80030000 		.4byte	.LASF125
 8181 11e2 01       		.byte	0x1
 8182 11e3 0406     		.2byte	0x604
 8183 11e5 01       		.byte	0x1
 8184 11e6 6F000000 		.4byte	0x6f
 8185 11ea 00000000 		.4byte	.LFB65
 8186 11ee 20000000 		.4byte	.LFE65
 8187 11f2 140E0000 		.4byte	.LLST65
 8188 11f6 01       		.byte	0x1
 8189 11f7 0B120000 		.4byte	0x120b
 8190 11fb 10       		.uleb128 0x10
 8191 11fc 57000000 		.4byte	.LASF55
 8192 1200 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 176


 8193 1201 0406     		.2byte	0x604
 8194 1203 6F000000 		.4byte	0x6f
 8195 1207 02       		.byte	0x2
 8196 1208 91       		.byte	0x91
 8197 1209 77       		.sleb128 -9
 8198 120a 00       		.byte	0
 8199 120b 0F       		.uleb128 0xf
 8200 120c 01       		.byte	0x1
 8201 120d BD000000 		.4byte	.LASF126
 8202 1211 01       		.byte	0x1
 8203 1212 0806     		.2byte	0x608
 8204 1214 01       		.byte	0x1
 8205 1215 00000000 		.4byte	.LFB66
 8206 1219 1E000000 		.4byte	.LFE66
 8207 121d 4C0E0000 		.4byte	.LLST66
 8208 1221 01       		.byte	0x1
 8209 1222 36120000 		.4byte	0x1236
 8210 1226 10       		.uleb128 0x10
 8211 1227 57000000 		.4byte	.LASF55
 8212 122b 01       		.byte	0x1
 8213 122c 0806     		.2byte	0x608
 8214 122e 6F000000 		.4byte	0x6f
 8215 1232 02       		.byte	0x2
 8216 1233 91       		.byte	0x91
 8217 1234 77       		.sleb128 -9
 8218 1235 00       		.byte	0
 8219 1236 13       		.uleb128 0x13
 8220 1237 01       		.byte	0x1
 8221 1238 31020000 		.4byte	.LASF127
 8222 123c 01       		.byte	0x1
 8223 123d 0E06     		.2byte	0x60e
 8224 123f 01       		.byte	0x1
 8225 1240 7A000000 		.4byte	0x7a
 8226 1244 00000000 		.4byte	.LFB67
 8227 1248 F4000000 		.4byte	.LFE67
 8228 124c 840E0000 		.4byte	.LLST67
 8229 1250 01       		.byte	0x1
 8230 1251 B0120000 		.4byte	0x12b0
 8231 1255 10       		.uleb128 0x10
 8232 1256 57000000 		.4byte	.LASF55
 8233 125a 01       		.byte	0x1
 8234 125b 0E06     		.2byte	0x60e
 8235 125d 6F000000 		.4byte	0x6f
 8236 1261 02       		.byte	0x2
 8237 1262 91       		.byte	0x91
 8238 1263 67       		.sleb128 -25
 8239 1264 10       		.uleb128 0x10
 8240 1265 46070000 		.4byte	.LASF88
 8241 1269 01       		.byte	0x1
 8242 126a 0E06     		.2byte	0x60e
 8243 126c D9010000 		.4byte	0x1d9
 8244 1270 02       		.byte	0x2
 8245 1271 91       		.byte	0x91
 8246 1272 60       		.sleb128 -32
 8247 1273 11       		.uleb128 0x11
 8248 1274 6C656E00 		.ascii	"len\000"
 8249 1278 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 177


 8250 1279 0E06     		.2byte	0x60e
 8251 127b 7A000000 		.4byte	0x7a
 8252 127f 02       		.byte	0x2
 8253 1280 91       		.byte	0x91
 8254 1281 64       		.sleb128 -28
 8255 1282 12       		.uleb128 0x12
 8256 1283 50000000 		.4byte	.LASF128
 8257 1287 01       		.byte	0x1
 8258 1288 1006     		.2byte	0x610
 8259 128a 7A000000 		.4byte	0x7a
 8260 128e 02       		.byte	0x2
 8261 128f 91       		.byte	0x91
 8262 1290 6E       		.sleb128 -18
 8263 1291 12       		.uleb128 0x12
 8264 1292 9E030000 		.4byte	.LASF129
 8265 1296 01       		.byte	0x1
 8266 1297 1106     		.2byte	0x611
 8267 1299 7A000000 		.4byte	0x7a
 8268 129d 02       		.byte	0x2
 8269 129e 91       		.byte	0x91
 8270 129f 6C       		.sleb128 -20
 8271 12a0 12       		.uleb128 0x12
 8272 12a1 C7070000 		.4byte	.LASF66
 8273 12a5 01       		.byte	0x1
 8274 12a6 1206     		.2byte	0x612
 8275 12a8 6F000000 		.4byte	0x6f
 8276 12ac 02       		.byte	0x2
 8277 12ad 91       		.byte	0x91
 8278 12ae 6B       		.sleb128 -21
 8279 12af 00       		.byte	0
 8280 12b0 13       		.uleb128 0x13
 8281 12b1 01       		.byte	0x1
 8282 12b2 E1010000 		.4byte	.LASF130
 8283 12b6 01       		.byte	0x1
 8284 12b7 3806     		.2byte	0x638
 8285 12b9 01       		.byte	0x1
 8286 12ba 7A000000 		.4byte	0x7a
 8287 12be 00000000 		.4byte	.LFB68
 8288 12c2 86000000 		.4byte	.LFE68
 8289 12c6 BC0E0000 		.4byte	.LLST68
 8290 12ca 01       		.byte	0x1
 8291 12cb 0C130000 		.4byte	0x130c
 8292 12cf 10       		.uleb128 0x10
 8293 12d0 57000000 		.4byte	.LASF55
 8294 12d4 01       		.byte	0x1
 8295 12d5 3806     		.2byte	0x638
 8296 12d7 6F000000 		.4byte	0x6f
 8297 12db 02       		.byte	0x2
 8298 12dc 91       		.byte	0x91
 8299 12dd 67       		.sleb128 -25
 8300 12de 10       		.uleb128 0x10
 8301 12df 46070000 		.4byte	.LASF88
 8302 12e3 01       		.byte	0x1
 8303 12e4 3806     		.2byte	0x638
 8304 12e6 D9010000 		.4byte	0x1d9
 8305 12ea 02       		.byte	0x2
 8306 12eb 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 178


 8307 12ec 60       		.sleb128 -32
 8308 12ed 10       		.uleb128 0x10
 8309 12ee CA060000 		.4byte	.LASF27
 8310 12f2 01       		.byte	0x1
 8311 12f3 3806     		.2byte	0x638
 8312 12f5 7A000000 		.4byte	0x7a
 8313 12f9 02       		.byte	0x2
 8314 12fa 91       		.byte	0x91
 8315 12fb 64       		.sleb128 -28
 8316 12fc 12       		.uleb128 0x12
 8317 12fd B7030000 		.4byte	.LASF131
 8318 1301 01       		.byte	0x1
 8319 1302 3A06     		.2byte	0x63a
 8320 1304 7A000000 		.4byte	0x7a
 8321 1308 02       		.byte	0x2
 8322 1309 91       		.byte	0x91
 8323 130a 6E       		.sleb128 -18
 8324 130b 00       		.byte	0
 8325 130c 0F       		.uleb128 0xf
 8326 130d 01       		.byte	0x1
 8327 130e 29010000 		.4byte	.LASF132
 8328 1312 01       		.byte	0x1
 8329 1313 5706     		.2byte	0x657
 8330 1315 01       		.byte	0x1
 8331 1316 00000000 		.4byte	.LFB69
 8332 131a 30000000 		.4byte	.LFE69
 8333 131e F40E0000 		.4byte	.LLST69
 8334 1322 01       		.byte	0x1
 8335 1323 46130000 		.4byte	0x1346
 8336 1327 10       		.uleb128 0x10
 8337 1328 57000000 		.4byte	.LASF55
 8338 132c 01       		.byte	0x1
 8339 132d 5706     		.2byte	0x657
 8340 132f 6F000000 		.4byte	0x6f
 8341 1333 02       		.byte	0x2
 8342 1334 91       		.byte	0x91
 8343 1335 77       		.sleb128 -9
 8344 1336 11       		.uleb128 0x11
 8345 1337 73747200 		.ascii	"str\000"
 8346 133b 01       		.byte	0x1
 8347 133c 5706     		.2byte	0x657
 8348 133e BD000000 		.4byte	0xbd
 8349 1342 02       		.byte	0x2
 8350 1343 91       		.byte	0x91
 8351 1344 70       		.sleb128 -16
 8352 1345 00       		.byte	0
 8353 1346 13       		.uleb128 0x13
 8354 1347 01       		.byte	0x1
 8355 1348 D4030000 		.4byte	.LASF133
 8356 134c 01       		.byte	0x1
 8357 134d 6106     		.2byte	0x661
 8358 134f 01       		.byte	0x1
 8359 1350 6F000000 		.4byte	0x6f
 8360 1354 00000000 		.4byte	.LFB70
 8361 1358 24000000 		.4byte	.LFE70
 8362 135c 2C0F0000 		.4byte	.LLST70
 8363 1360 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 179


 8364 1361 75130000 		.4byte	0x1375
 8365 1365 10       		.uleb128 0x10
 8366 1366 BD020000 		.4byte	.LASF68
 8367 136a 01       		.byte	0x1
 8368 136b 6106     		.2byte	0x661
 8369 136d 7A000000 		.4byte	0x7a
 8370 1371 02       		.byte	0x2
 8371 1372 91       		.byte	0x91
 8372 1373 76       		.sleb128 -10
 8373 1374 00       		.byte	0
 8374 1375 13       		.uleb128 0x13
 8375 1376 01       		.byte	0x1
 8376 1377 B6070000 		.4byte	.LASF134
 8377 137b 01       		.byte	0x1
 8378 137c 6706     		.2byte	0x667
 8379 137e 01       		.byte	0x1
 8380 137f 7A000000 		.4byte	0x7a
 8381 1383 00000000 		.4byte	.LFB71
 8382 1387 BC000000 		.4byte	.LFE71
 8383 138b 640F0000 		.4byte	.LLST71
 8384 138f 01       		.byte	0x1
 8385 1390 EE130000 		.4byte	0x13ee
 8386 1394 10       		.uleb128 0x10
 8387 1395 57000000 		.4byte	.LASF55
 8388 1399 01       		.byte	0x1
 8389 139a 6706     		.2byte	0x667
 8390 139c 6F000000 		.4byte	0x6f
 8391 13a0 02       		.byte	0x2
 8392 13a1 91       		.byte	0x91
 8393 13a2 6F       		.sleb128 -17
 8394 13a3 11       		.uleb128 0x11
 8395 13a4 697000   		.ascii	"ip\000"
 8396 13a7 01       		.byte	0x1
 8397 13a8 6706     		.2byte	0x667
 8398 13aa 85000000 		.4byte	0x85
 8399 13ae 02       		.byte	0x2
 8400 13af 91       		.byte	0x91
 8401 13b0 68       		.sleb128 -24
 8402 13b1 10       		.uleb128 0x10
 8403 13b2 BD020000 		.4byte	.LASF68
 8404 13b6 01       		.byte	0x1
 8405 13b7 6706     		.2byte	0x667
 8406 13b9 7A000000 		.4byte	0x7a
 8407 13bd 02       		.byte	0x2
 8408 13be 91       		.byte	0x91
 8409 13bf 6C       		.sleb128 -20
 8410 13c0 10       		.uleb128 0x10
 8411 13c1 46070000 		.4byte	.LASF88
 8412 13c5 01       		.byte	0x1
 8413 13c6 6706     		.2byte	0x667
 8414 13c8 D9010000 		.4byte	0x1d9
 8415 13cc 02       		.byte	0x2
 8416 13cd 91       		.byte	0x91
 8417 13ce 64       		.sleb128 -28
 8418 13cf 10       		.uleb128 0x10
 8419 13d0 CA060000 		.4byte	.LASF27
 8420 13d4 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 180


 8421 13d5 6706     		.2byte	0x667
 8422 13d7 7A000000 		.4byte	0x7a
 8423 13db 02       		.byte	0x2
 8424 13dc 91       		.byte	0x91
 8425 13dd 00       		.sleb128 0
 8426 13de 12       		.uleb128 0x12
 8427 13df 50000000 		.4byte	.LASF128
 8428 13e3 01       		.byte	0x1
 8429 13e4 6906     		.2byte	0x669
 8430 13e6 7A000000 		.4byte	0x7a
 8431 13ea 02       		.byte	0x2
 8432 13eb 91       		.byte	0x91
 8433 13ec 76       		.sleb128 -10
 8434 13ed 00       		.byte	0
 8435 13ee 13       		.uleb128 0x13
 8436 13ef 01       		.byte	0x1
 8437 13f0 75000000 		.4byte	.LASF135
 8438 13f4 01       		.byte	0x1
 8439 13f5 9406     		.2byte	0x694
 8440 13f7 01       		.byte	0x1
 8441 13f8 7A000000 		.4byte	0x7a
 8442 13fc 00000000 		.4byte	.LFB72
 8443 1400 54010000 		.4byte	.LFE72
 8444 1404 9C0F0000 		.4byte	.LLST72
 8445 1408 01       		.byte	0x1
 8446 1409 85140000 		.4byte	0x1485
 8447 140d 10       		.uleb128 0x10
 8448 140e 57000000 		.4byte	.LASF55
 8449 1412 01       		.byte	0x1
 8450 1413 9406     		.2byte	0x694
 8451 1415 6F000000 		.4byte	0x6f
 8452 1419 02       		.byte	0x2
 8453 141a 91       		.byte	0x91
 8454 141b 5F       		.sleb128 -33
 8455 141c 11       		.uleb128 0x11
 8456 141d 697000   		.ascii	"ip\000"
 8457 1420 01       		.byte	0x1
 8458 1421 9406     		.2byte	0x694
 8459 1423 85140000 		.4byte	0x1485
 8460 1427 02       		.byte	0x2
 8461 1428 91       		.byte	0x91
 8462 1429 58       		.sleb128 -40
 8463 142a 10       		.uleb128 0x10
 8464 142b BD020000 		.4byte	.LASF68
 8465 142f 01       		.byte	0x1
 8466 1430 9406     		.2byte	0x694
 8467 1432 8B140000 		.4byte	0x148b
 8468 1436 02       		.byte	0x2
 8469 1437 91       		.byte	0x91
 8470 1438 54       		.sleb128 -44
 8471 1439 10       		.uleb128 0x10
 8472 143a 46070000 		.4byte	.LASF88
 8473 143e 01       		.byte	0x1
 8474 143f 9406     		.2byte	0x694
 8475 1441 D9010000 		.4byte	0x1d9
 8476 1445 02       		.byte	0x2
 8477 1446 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 181


 8478 1447 50       		.sleb128 -48
 8479 1448 10       		.uleb128 0x10
 8480 1449 CA060000 		.4byte	.LASF27
 8481 144d 01       		.byte	0x1
 8482 144e 9406     		.2byte	0x694
 8483 1450 7A000000 		.4byte	0x7a
 8484 1454 02       		.byte	0x2
 8485 1455 91       		.byte	0x91
 8486 1456 00       		.sleb128 0
 8487 1457 12       		.uleb128 0x12
 8488 1458 B7030000 		.4byte	.LASF131
 8489 145c 01       		.byte	0x1
 8490 145d 9606     		.2byte	0x696
 8491 145f 7A000000 		.4byte	0x7a
 8492 1463 02       		.byte	0x2
 8493 1464 91       		.byte	0x91
 8494 1465 6E       		.sleb128 -18
 8495 1466 12       		.uleb128 0x12
 8496 1467 97000000 		.4byte	.LASF136
 8497 146b 01       		.byte	0x1
 8498 146c 9706     		.2byte	0x697
 8499 146e 7A000000 		.4byte	0x7a
 8500 1472 02       		.byte	0x2
 8501 1473 91       		.byte	0x91
 8502 1474 6C       		.sleb128 -20
 8503 1475 12       		.uleb128 0x12
 8504 1476 B0020000 		.4byte	.LASF137
 8505 147a 01       		.byte	0x1
 8506 147b 9806     		.2byte	0x698
 8507 147d 91140000 		.4byte	0x1491
 8508 1481 02       		.byte	0x2
 8509 1482 91       		.byte	0x91
 8510 1483 64       		.sleb128 -28
 8511 1484 00       		.byte	0
 8512 1485 05       		.uleb128 0x5
 8513 1486 04       		.byte	0x4
 8514 1487 85000000 		.4byte	0x85
 8515 148b 05       		.uleb128 0x5
 8516 148c 04       		.byte	0x4
 8517 148d 7A000000 		.4byte	0x7a
 8518 1491 16       		.uleb128 0x16
 8519 1492 6F000000 		.4byte	0x6f
 8520 1496 A1140000 		.4byte	0x14a1
 8521 149a 17       		.uleb128 0x17
 8522 149b B0000000 		.4byte	0xb0
 8523 149f 07       		.byte	0x7
 8524 14a0 00       		.byte	0
 8525 14a1 1A       		.uleb128 0x1a
 8526 14a2 73020000 		.4byte	.LASF138
 8527 14a6 01       		.byte	0x1
 8528 14a7 30       		.byte	0x30
 8529 14a8 6F000000 		.4byte	0x6f
 8530 14ac 01       		.byte	0x1
 8531 14ad 01       		.byte	0x1
 8532 14ae 16       		.uleb128 0x16
 8533 14af 7A000000 		.4byte	0x7a
 8534 14b3 BE140000 		.4byte	0x14be
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 182


 8535 14b7 17       		.uleb128 0x17
 8536 14b8 B0000000 		.4byte	0xb0
 8537 14bc 03       		.byte	0x3
 8538 14bd 00       		.byte	0
 8539 14be 1B       		.uleb128 0x1b
 8540 14bf B1060000 		.4byte	.LASF139
 8541 14c3 01       		.byte	0x1
 8542 14c4 3D       		.byte	0x3d
 8543 14c5 D0140000 		.4byte	0x14d0
 8544 14c9 01       		.byte	0x1
 8545 14ca 05       		.byte	0x5
 8546 14cb 03       		.byte	0x3
 8547 14cc 00000000 		.4byte	ETH_SOCKET_TX_BASE
 8548 14d0 06       		.uleb128 0x6
 8549 14d1 AE140000 		.4byte	0x14ae
 8550 14d5 1B       		.uleb128 0x1b
 8551 14d6 5D060000 		.4byte	.LASF140
 8552 14da 01       		.byte	0x1
 8553 14db 3E       		.byte	0x3e
 8554 14dc E7140000 		.4byte	0x14e7
 8555 14e0 01       		.byte	0x1
 8556 14e1 05       		.byte	0x5
 8557 14e2 03       		.byte	0x3
 8558 14e3 00000000 		.4byte	ETH_SOCKET_RX_BASE
 8559 14e7 06       		.uleb128 0x6
 8560 14e8 AE140000 		.4byte	0x14ae
 8561 14ec 16       		.uleb128 0x16
 8562 14ed 25010000 		.4byte	0x125
 8563 14f1 FC140000 		.4byte	0x14fc
 8564 14f5 17       		.uleb128 0x17
 8565 14f6 B0000000 		.4byte	0xb0
 8566 14fa 03       		.byte	0x3
 8567 14fb 00       		.byte	0
 8568 14fc 1B       		.uleb128 0x1b
 8569 14fd E0030000 		.4byte	.LASF141
 8570 1501 01       		.byte	0x1
 8571 1502 5B       		.byte	0x5b
 8572 1503 EC140000 		.4byte	0x14ec
 8573 1507 01       		.byte	0x1
 8574 1508 05       		.byte	0x5
 8575 1509 03       		.byte	0x3
 8576 150a 00000000 		.4byte	ETH_SocketConfig
 8577 150e 1B       		.uleb128 0x1b
 8578 150f DF070000 		.4byte	.LASF142
 8579 1513 01       		.byte	0x1
 8580 1514 5C       		.byte	0x5c
 8581 1515 85000000 		.4byte	0x85
 8582 1519 01       		.byte	0x1
 8583 151a 05       		.byte	0x5
 8584 151b 03       		.byte	0x3
 8585 151c 00000000 		.4byte	ETH_SubnetMask
 8586 1520 16       		.uleb128 0x16
 8587 1521 6F000000 		.4byte	0x6f
 8588 1525 30150000 		.4byte	0x1530
 8589 1529 17       		.uleb128 0x17
 8590 152a B0000000 		.4byte	0xb0
 8591 152e 05       		.byte	0x5
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 183


 8592 152f 00       		.byte	0
 8593 1530 1B       		.uleb128 0x1b
 8594 1531 4A010000 		.4byte	.LASF143
 8595 1535 01       		.byte	0x1
 8596 1536 5E       		.byte	0x5e
 8597 1537 20150000 		.4byte	0x1520
 8598 153b 01       		.byte	0x1
 8599 153c 05       		.byte	0x5
 8600 153d 03       		.byte	0x3
 8601 153e 00000000 		.4byte	ETH_MAC
 8602 1542 00       		.byte	0
 8603              		.section	.debug_abbrev,"",%progbits
 8604              	.Ldebug_abbrev0:
 8605 0000 01       		.uleb128 0x1
 8606 0001 11       		.uleb128 0x11
 8607 0002 01       		.byte	0x1
 8608 0003 25       		.uleb128 0x25
 8609 0004 0E       		.uleb128 0xe
 8610 0005 13       		.uleb128 0x13
 8611 0006 0B       		.uleb128 0xb
 8612 0007 03       		.uleb128 0x3
 8613 0008 0E       		.uleb128 0xe
 8614 0009 1B       		.uleb128 0x1b
 8615 000a 0E       		.uleb128 0xe
 8616 000b 55       		.uleb128 0x55
 8617 000c 06       		.uleb128 0x6
 8618 000d 11       		.uleb128 0x11
 8619 000e 01       		.uleb128 0x1
 8620 000f 52       		.uleb128 0x52
 8621 0010 01       		.uleb128 0x1
 8622 0011 10       		.uleb128 0x10
 8623 0012 06       		.uleb128 0x6
 8624 0013 00       		.byte	0
 8625 0014 00       		.byte	0
 8626 0015 02       		.uleb128 0x2
 8627 0016 24       		.uleb128 0x24
 8628 0017 00       		.byte	0
 8629 0018 0B       		.uleb128 0xb
 8630 0019 0B       		.uleb128 0xb
 8631 001a 3E       		.uleb128 0x3e
 8632 001b 0B       		.uleb128 0xb
 8633 001c 03       		.uleb128 0x3
 8634 001d 0E       		.uleb128 0xe
 8635 001e 00       		.byte	0
 8636 001f 00       		.byte	0
 8637 0020 03       		.uleb128 0x3
 8638 0021 24       		.uleb128 0x24
 8639 0022 00       		.byte	0
 8640 0023 0B       		.uleb128 0xb
 8641 0024 0B       		.uleb128 0xb
 8642 0025 3E       		.uleb128 0x3e
 8643 0026 0B       		.uleb128 0xb
 8644 0027 03       		.uleb128 0x3
 8645 0028 08       		.uleb128 0x8
 8646 0029 00       		.byte	0
 8647 002a 00       		.byte	0
 8648 002b 04       		.uleb128 0x4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 184


 8649 002c 16       		.uleb128 0x16
 8650 002d 00       		.byte	0
 8651 002e 03       		.uleb128 0x3
 8652 002f 0E       		.uleb128 0xe
 8653 0030 3A       		.uleb128 0x3a
 8654 0031 0B       		.uleb128 0xb
 8655 0032 3B       		.uleb128 0x3b
 8656 0033 0B       		.uleb128 0xb
 8657 0034 49       		.uleb128 0x49
 8658 0035 13       		.uleb128 0x13
 8659 0036 00       		.byte	0
 8660 0037 00       		.byte	0
 8661 0038 05       		.uleb128 0x5
 8662 0039 0F       		.uleb128 0xf
 8663 003a 00       		.byte	0
 8664 003b 0B       		.uleb128 0xb
 8665 003c 0B       		.uleb128 0xb
 8666 003d 49       		.uleb128 0x49
 8667 003e 13       		.uleb128 0x13
 8668 003f 00       		.byte	0
 8669 0040 00       		.byte	0
 8670 0041 06       		.uleb128 0x6
 8671 0042 26       		.uleb128 0x26
 8672 0043 00       		.byte	0
 8673 0044 49       		.uleb128 0x49
 8674 0045 13       		.uleb128 0x13
 8675 0046 00       		.byte	0
 8676 0047 00       		.byte	0
 8677 0048 07       		.uleb128 0x7
 8678 0049 13       		.uleb128 0x13
 8679 004a 01       		.byte	0x1
 8680 004b 0B       		.uleb128 0xb
 8681 004c 0B       		.uleb128 0xb
 8682 004d 3A       		.uleb128 0x3a
 8683 004e 0B       		.uleb128 0xb
 8684 004f 3B       		.uleb128 0x3b
 8685 0050 0B       		.uleb128 0xb
 8686 0051 01       		.uleb128 0x1
 8687 0052 13       		.uleb128 0x13
 8688 0053 00       		.byte	0
 8689 0054 00       		.byte	0
 8690 0055 08       		.uleb128 0x8
 8691 0056 0D       		.uleb128 0xd
 8692 0057 00       		.byte	0
 8693 0058 03       		.uleb128 0x3
 8694 0059 0E       		.uleb128 0xe
 8695 005a 3A       		.uleb128 0x3a
 8696 005b 0B       		.uleb128 0xb
 8697 005c 3B       		.uleb128 0x3b
 8698 005d 0B       		.uleb128 0xb
 8699 005e 49       		.uleb128 0x49
 8700 005f 13       		.uleb128 0x13
 8701 0060 38       		.uleb128 0x38
 8702 0061 0A       		.uleb128 0xa
 8703 0062 00       		.byte	0
 8704 0063 00       		.byte	0
 8705 0064 09       		.uleb128 0x9
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 185


 8706 0065 2E       		.uleb128 0x2e
 8707 0066 00       		.byte	0
 8708 0067 3F       		.uleb128 0x3f
 8709 0068 0C       		.uleb128 0xc
 8710 0069 03       		.uleb128 0x3
 8711 006a 0E       		.uleb128 0xe
 8712 006b 3A       		.uleb128 0x3a
 8713 006c 0B       		.uleb128 0xb
 8714 006d 3B       		.uleb128 0x3b
 8715 006e 0B       		.uleb128 0xb
 8716 006f 27       		.uleb128 0x27
 8717 0070 0C       		.uleb128 0xc
 8718 0071 11       		.uleb128 0x11
 8719 0072 01       		.uleb128 0x1
 8720 0073 12       		.uleb128 0x12
 8721 0074 01       		.uleb128 0x1
 8722 0075 40       		.uleb128 0x40
 8723 0076 06       		.uleb128 0x6
 8724 0077 9642     		.uleb128 0x2116
 8725 0079 0C       		.uleb128 0xc
 8726 007a 00       		.byte	0
 8727 007b 00       		.byte	0
 8728 007c 0A       		.uleb128 0xa
 8729 007d 2E       		.uleb128 0x2e
 8730 007e 01       		.byte	0x1
 8731 007f 3F       		.uleb128 0x3f
 8732 0080 0C       		.uleb128 0xc
 8733 0081 03       		.uleb128 0x3
 8734 0082 0E       		.uleb128 0xe
 8735 0083 3A       		.uleb128 0x3a
 8736 0084 0B       		.uleb128 0xb
 8737 0085 3B       		.uleb128 0x3b
 8738 0086 0B       		.uleb128 0xb
 8739 0087 27       		.uleb128 0x27
 8740 0088 0C       		.uleb128 0xc
 8741 0089 11       		.uleb128 0x11
 8742 008a 01       		.uleb128 0x1
 8743 008b 12       		.uleb128 0x12
 8744 008c 01       		.uleb128 0x1
 8745 008d 40       		.uleb128 0x40
 8746 008e 06       		.uleb128 0x6
 8747 008f 9642     		.uleb128 0x2116
 8748 0091 0C       		.uleb128 0xc
 8749 0092 01       		.uleb128 0x1
 8750 0093 13       		.uleb128 0x13
 8751 0094 00       		.byte	0
 8752 0095 00       		.byte	0
 8753 0096 0B       		.uleb128 0xb
 8754 0097 05       		.uleb128 0x5
 8755 0098 00       		.byte	0
 8756 0099 03       		.uleb128 0x3
 8757 009a 0E       		.uleb128 0xe
 8758 009b 3A       		.uleb128 0x3a
 8759 009c 0B       		.uleb128 0xb
 8760 009d 3B       		.uleb128 0x3b
 8761 009e 0B       		.uleb128 0xb
 8762 009f 49       		.uleb128 0x49
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 186


 8763 00a0 13       		.uleb128 0x13
 8764 00a1 02       		.uleb128 0x2
 8765 00a2 0A       		.uleb128 0xa
 8766 00a3 00       		.byte	0
 8767 00a4 00       		.byte	0
 8768 00a5 0C       		.uleb128 0xc
 8769 00a6 05       		.uleb128 0x5
 8770 00a7 00       		.byte	0
 8771 00a8 03       		.uleb128 0x3
 8772 00a9 08       		.uleb128 0x8
 8773 00aa 3A       		.uleb128 0x3a
 8774 00ab 0B       		.uleb128 0xb
 8775 00ac 3B       		.uleb128 0x3b
 8776 00ad 0B       		.uleb128 0xb
 8777 00ae 49       		.uleb128 0x49
 8778 00af 13       		.uleb128 0x13
 8779 00b0 02       		.uleb128 0x2
 8780 00b1 0A       		.uleb128 0xa
 8781 00b2 00       		.byte	0
 8782 00b3 00       		.byte	0
 8783 00b4 0D       		.uleb128 0xd
 8784 00b5 34       		.uleb128 0x34
 8785 00b6 00       		.byte	0
 8786 00b7 03       		.uleb128 0x3
 8787 00b8 0E       		.uleb128 0xe
 8788 00b9 3A       		.uleb128 0x3a
 8789 00ba 0B       		.uleb128 0xb
 8790 00bb 3B       		.uleb128 0x3b
 8791 00bc 0B       		.uleb128 0xb
 8792 00bd 49       		.uleb128 0x49
 8793 00be 13       		.uleb128 0x13
 8794 00bf 02       		.uleb128 0x2
 8795 00c0 0A       		.uleb128 0xa
 8796 00c1 00       		.byte	0
 8797 00c2 00       		.byte	0
 8798 00c3 0E       		.uleb128 0xe
 8799 00c4 34       		.uleb128 0x34
 8800 00c5 00       		.byte	0
 8801 00c6 03       		.uleb128 0x3
 8802 00c7 08       		.uleb128 0x8
 8803 00c8 3A       		.uleb128 0x3a
 8804 00c9 0B       		.uleb128 0xb
 8805 00ca 3B       		.uleb128 0x3b
 8806 00cb 0B       		.uleb128 0xb
 8807 00cc 49       		.uleb128 0x49
 8808 00cd 13       		.uleb128 0x13
 8809 00ce 02       		.uleb128 0x2
 8810 00cf 0A       		.uleb128 0xa
 8811 00d0 00       		.byte	0
 8812 00d1 00       		.byte	0
 8813 00d2 0F       		.uleb128 0xf
 8814 00d3 2E       		.uleb128 0x2e
 8815 00d4 01       		.byte	0x1
 8816 00d5 3F       		.uleb128 0x3f
 8817 00d6 0C       		.uleb128 0xc
 8818 00d7 03       		.uleb128 0x3
 8819 00d8 0E       		.uleb128 0xe
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 187


 8820 00d9 3A       		.uleb128 0x3a
 8821 00da 0B       		.uleb128 0xb
 8822 00db 3B       		.uleb128 0x3b
 8823 00dc 05       		.uleb128 0x5
 8824 00dd 27       		.uleb128 0x27
 8825 00de 0C       		.uleb128 0xc
 8826 00df 11       		.uleb128 0x11
 8827 00e0 01       		.uleb128 0x1
 8828 00e1 12       		.uleb128 0x12
 8829 00e2 01       		.uleb128 0x1
 8830 00e3 40       		.uleb128 0x40
 8831 00e4 06       		.uleb128 0x6
 8832 00e5 9642     		.uleb128 0x2116
 8833 00e7 0C       		.uleb128 0xc
 8834 00e8 01       		.uleb128 0x1
 8835 00e9 13       		.uleb128 0x13
 8836 00ea 00       		.byte	0
 8837 00eb 00       		.byte	0
 8838 00ec 10       		.uleb128 0x10
 8839 00ed 05       		.uleb128 0x5
 8840 00ee 00       		.byte	0
 8841 00ef 03       		.uleb128 0x3
 8842 00f0 0E       		.uleb128 0xe
 8843 00f1 3A       		.uleb128 0x3a
 8844 00f2 0B       		.uleb128 0xb
 8845 00f3 3B       		.uleb128 0x3b
 8846 00f4 05       		.uleb128 0x5
 8847 00f5 49       		.uleb128 0x49
 8848 00f6 13       		.uleb128 0x13
 8849 00f7 02       		.uleb128 0x2
 8850 00f8 0A       		.uleb128 0xa
 8851 00f9 00       		.byte	0
 8852 00fa 00       		.byte	0
 8853 00fb 11       		.uleb128 0x11
 8854 00fc 05       		.uleb128 0x5
 8855 00fd 00       		.byte	0
 8856 00fe 03       		.uleb128 0x3
 8857 00ff 08       		.uleb128 0x8
 8858 0100 3A       		.uleb128 0x3a
 8859 0101 0B       		.uleb128 0xb
 8860 0102 3B       		.uleb128 0x3b
 8861 0103 05       		.uleb128 0x5
 8862 0104 49       		.uleb128 0x49
 8863 0105 13       		.uleb128 0x13
 8864 0106 02       		.uleb128 0x2
 8865 0107 0A       		.uleb128 0xa
 8866 0108 00       		.byte	0
 8867 0109 00       		.byte	0
 8868 010a 12       		.uleb128 0x12
 8869 010b 34       		.uleb128 0x34
 8870 010c 00       		.byte	0
 8871 010d 03       		.uleb128 0x3
 8872 010e 0E       		.uleb128 0xe
 8873 010f 3A       		.uleb128 0x3a
 8874 0110 0B       		.uleb128 0xb
 8875 0111 3B       		.uleb128 0x3b
 8876 0112 05       		.uleb128 0x5
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 188


 8877 0113 49       		.uleb128 0x49
 8878 0114 13       		.uleb128 0x13
 8879 0115 02       		.uleb128 0x2
 8880 0116 0A       		.uleb128 0xa
 8881 0117 00       		.byte	0
 8882 0118 00       		.byte	0
 8883 0119 13       		.uleb128 0x13
 8884 011a 2E       		.uleb128 0x2e
 8885 011b 01       		.byte	0x1
 8886 011c 3F       		.uleb128 0x3f
 8887 011d 0C       		.uleb128 0xc
 8888 011e 03       		.uleb128 0x3
 8889 011f 0E       		.uleb128 0xe
 8890 0120 3A       		.uleb128 0x3a
 8891 0121 0B       		.uleb128 0xb
 8892 0122 3B       		.uleb128 0x3b
 8893 0123 05       		.uleb128 0x5
 8894 0124 27       		.uleb128 0x27
 8895 0125 0C       		.uleb128 0xc
 8896 0126 49       		.uleb128 0x49
 8897 0127 13       		.uleb128 0x13
 8898 0128 11       		.uleb128 0x11
 8899 0129 01       		.uleb128 0x1
 8900 012a 12       		.uleb128 0x12
 8901 012b 01       		.uleb128 0x1
 8902 012c 40       		.uleb128 0x40
 8903 012d 06       		.uleb128 0x6
 8904 012e 9642     		.uleb128 0x2116
 8905 0130 0C       		.uleb128 0xc
 8906 0131 01       		.uleb128 0x1
 8907 0132 13       		.uleb128 0x13
 8908 0133 00       		.byte	0
 8909 0134 00       		.byte	0
 8910 0135 14       		.uleb128 0x14
 8911 0136 34       		.uleb128 0x34
 8912 0137 00       		.byte	0
 8913 0138 03       		.uleb128 0x3
 8914 0139 08       		.uleb128 0x8
 8915 013a 3A       		.uleb128 0x3a
 8916 013b 0B       		.uleb128 0xb
 8917 013c 3B       		.uleb128 0x3b
 8918 013d 05       		.uleb128 0x5
 8919 013e 49       		.uleb128 0x49
 8920 013f 13       		.uleb128 0x13
 8921 0140 02       		.uleb128 0x2
 8922 0141 0A       		.uleb128 0xa
 8923 0142 00       		.byte	0
 8924 0143 00       		.byte	0
 8925 0144 15       		.uleb128 0x15
 8926 0145 2E       		.uleb128 0x2e
 8927 0146 01       		.byte	0x1
 8928 0147 3F       		.uleb128 0x3f
 8929 0148 0C       		.uleb128 0xc
 8930 0149 03       		.uleb128 0x3
 8931 014a 0E       		.uleb128 0xe
 8932 014b 3A       		.uleb128 0x3a
 8933 014c 0B       		.uleb128 0xb
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 189


 8934 014d 3B       		.uleb128 0x3b
 8935 014e 05       		.uleb128 0x5
 8936 014f 27       		.uleb128 0x27
 8937 0150 0C       		.uleb128 0xc
 8938 0151 11       		.uleb128 0x11
 8939 0152 01       		.uleb128 0x1
 8940 0153 12       		.uleb128 0x12
 8941 0154 01       		.uleb128 0x1
 8942 0155 40       		.uleb128 0x40
 8943 0156 06       		.uleb128 0x6
 8944 0157 9742     		.uleb128 0x2117
 8945 0159 0C       		.uleb128 0xc
 8946 015a 01       		.uleb128 0x1
 8947 015b 13       		.uleb128 0x13
 8948 015c 00       		.byte	0
 8949 015d 00       		.byte	0
 8950 015e 16       		.uleb128 0x16
 8951 015f 01       		.uleb128 0x1
 8952 0160 01       		.byte	0x1
 8953 0161 49       		.uleb128 0x49
 8954 0162 13       		.uleb128 0x13
 8955 0163 01       		.uleb128 0x1
 8956 0164 13       		.uleb128 0x13
 8957 0165 00       		.byte	0
 8958 0166 00       		.byte	0
 8959 0167 17       		.uleb128 0x17
 8960 0168 21       		.uleb128 0x21
 8961 0169 00       		.byte	0
 8962 016a 49       		.uleb128 0x49
 8963 016b 13       		.uleb128 0x13
 8964 016c 2F       		.uleb128 0x2f
 8965 016d 0B       		.uleb128 0xb
 8966 016e 00       		.byte	0
 8967 016f 00       		.byte	0
 8968 0170 18       		.uleb128 0x18
 8969 0171 2E       		.uleb128 0x2e
 8970 0172 01       		.byte	0x1
 8971 0173 3F       		.uleb128 0x3f
 8972 0174 0C       		.uleb128 0xc
 8973 0175 03       		.uleb128 0x3
 8974 0176 0E       		.uleb128 0xe
 8975 0177 3A       		.uleb128 0x3a
 8976 0178 0B       		.uleb128 0xb
 8977 0179 3B       		.uleb128 0x3b
 8978 017a 05       		.uleb128 0x5
 8979 017b 27       		.uleb128 0x27
 8980 017c 0C       		.uleb128 0xc
 8981 017d 49       		.uleb128 0x49
 8982 017e 13       		.uleb128 0x13
 8983 017f 11       		.uleb128 0x11
 8984 0180 01       		.uleb128 0x1
 8985 0181 12       		.uleb128 0x12
 8986 0182 01       		.uleb128 0x1
 8987 0183 40       		.uleb128 0x40
 8988 0184 06       		.uleb128 0x6
 8989 0185 9742     		.uleb128 0x2117
 8990 0187 0C       		.uleb128 0xc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 190


 8991 0188 01       		.uleb128 0x1
 8992 0189 13       		.uleb128 0x13
 8993 018a 00       		.byte	0
 8994 018b 00       		.byte	0
 8995 018c 19       		.uleb128 0x19
 8996 018d 2E       		.uleb128 0x2e
 8997 018e 00       		.byte	0
 8998 018f 3F       		.uleb128 0x3f
 8999 0190 0C       		.uleb128 0xc
 9000 0191 03       		.uleb128 0x3
 9001 0192 0E       		.uleb128 0xe
 9002 0193 3A       		.uleb128 0x3a
 9003 0194 0B       		.uleb128 0xb
 9004 0195 3B       		.uleb128 0x3b
 9005 0196 05       		.uleb128 0x5
 9006 0197 27       		.uleb128 0x27
 9007 0198 0C       		.uleb128 0xc
 9008 0199 49       		.uleb128 0x49
 9009 019a 13       		.uleb128 0x13
 9010 019b 11       		.uleb128 0x11
 9011 019c 01       		.uleb128 0x1
 9012 019d 12       		.uleb128 0x12
 9013 019e 01       		.uleb128 0x1
 9014 019f 40       		.uleb128 0x40
 9015 01a0 06       		.uleb128 0x6
 9016 01a1 9642     		.uleb128 0x2116
 9017 01a3 0C       		.uleb128 0xc
 9018 01a4 00       		.byte	0
 9019 01a5 00       		.byte	0
 9020 01a6 1A       		.uleb128 0x1a
 9021 01a7 34       		.uleb128 0x34
 9022 01a8 00       		.byte	0
 9023 01a9 03       		.uleb128 0x3
 9024 01aa 0E       		.uleb128 0xe
 9025 01ab 3A       		.uleb128 0x3a
 9026 01ac 0B       		.uleb128 0xb
 9027 01ad 3B       		.uleb128 0x3b
 9028 01ae 0B       		.uleb128 0xb
 9029 01af 49       		.uleb128 0x49
 9030 01b0 13       		.uleb128 0x13
 9031 01b1 3F       		.uleb128 0x3f
 9032 01b2 0C       		.uleb128 0xc
 9033 01b3 3C       		.uleb128 0x3c
 9034 01b4 0C       		.uleb128 0xc
 9035 01b5 00       		.byte	0
 9036 01b6 00       		.byte	0
 9037 01b7 1B       		.uleb128 0x1b
 9038 01b8 34       		.uleb128 0x34
 9039 01b9 00       		.byte	0
 9040 01ba 03       		.uleb128 0x3
 9041 01bb 0E       		.uleb128 0xe
 9042 01bc 3A       		.uleb128 0x3a
 9043 01bd 0B       		.uleb128 0xb
 9044 01be 3B       		.uleb128 0x3b
 9045 01bf 0B       		.uleb128 0xb
 9046 01c0 49       		.uleb128 0x49
 9047 01c1 13       		.uleb128 0x13
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 191


 9048 01c2 3F       		.uleb128 0x3f
 9049 01c3 0C       		.uleb128 0xc
 9050 01c4 02       		.uleb128 0x2
 9051 01c5 0A       		.uleb128 0xa
 9052 01c6 00       		.byte	0
 9053 01c7 00       		.byte	0
 9054 01c8 00       		.byte	0
 9055              		.section	.debug_loc,"",%progbits
 9056              	.Ldebug_loc0:
 9057              	.LLST0:
 9058 0000 00000000 		.4byte	.LFB0
 9059 0004 02000000 		.4byte	.LCFI0
 9060 0008 0200     		.2byte	0x2
 9061 000a 7D       		.byte	0x7d
 9062 000b 00       		.sleb128 0
 9063 000c 02000000 		.4byte	.LCFI0
 9064 0010 04000000 		.4byte	.LCFI1
 9065 0014 0200     		.2byte	0x2
 9066 0016 7D       		.byte	0x7d
 9067 0017 08       		.sleb128 8
 9068 0018 04000000 		.4byte	.LCFI1
 9069 001c 0E000000 		.4byte	.LFE0
 9070 0020 0200     		.2byte	0x2
 9071 0022 77       		.byte	0x77
 9072 0023 08       		.sleb128 8
 9073 0024 00000000 		.4byte	0
 9074 0028 00000000 		.4byte	0
 9075              	.LLST1:
 9076 002c 00000000 		.4byte	.LFB1
 9077 0030 02000000 		.4byte	.LCFI2
 9078 0034 0200     		.2byte	0x2
 9079 0036 7D       		.byte	0x7d
 9080 0037 00       		.sleb128 0
 9081 0038 02000000 		.4byte	.LCFI2
 9082 003c 04000000 		.4byte	.LCFI3
 9083 0040 0200     		.2byte	0x2
 9084 0042 7D       		.byte	0x7d
 9085 0043 08       		.sleb128 8
 9086 0044 04000000 		.4byte	.LCFI3
 9087 0048 0E000000 		.4byte	.LFE1
 9088 004c 0200     		.2byte	0x2
 9089 004e 77       		.byte	0x77
 9090 004f 08       		.sleb128 8
 9091 0050 00000000 		.4byte	0
 9092 0054 00000000 		.4byte	0
 9093              	.LLST2:
 9094 0058 00000000 		.4byte	.LFB2
 9095 005c 02000000 		.4byte	.LCFI4
 9096 0060 0200     		.2byte	0x2
 9097 0062 7D       		.byte	0x7d
 9098 0063 00       		.sleb128 0
 9099 0064 02000000 		.4byte	.LCFI4
 9100 0068 04000000 		.4byte	.LCFI5
 9101 006c 0200     		.2byte	0x2
 9102 006e 7D       		.byte	0x7d
 9103 006f 0C       		.sleb128 12
 9104 0070 04000000 		.4byte	.LCFI5
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 192


 9105 0074 06000000 		.4byte	.LCFI6
 9106 0078 0200     		.2byte	0x2
 9107 007a 7D       		.byte	0x7d
 9108 007b 20       		.sleb128 32
 9109 007c 06000000 		.4byte	.LCFI6
 9110 0080 18010000 		.4byte	.LFE2
 9111 0084 0200     		.2byte	0x2
 9112 0086 77       		.byte	0x77
 9113 0087 20       		.sleb128 32
 9114 0088 00000000 		.4byte	0
 9115 008c 00000000 		.4byte	0
 9116              	.LLST3:
 9117 0090 00000000 		.4byte	.LFB3
 9118 0094 02000000 		.4byte	.LCFI7
 9119 0098 0200     		.2byte	0x2
 9120 009a 7D       		.byte	0x7d
 9121 009b 00       		.sleb128 0
 9122 009c 02000000 		.4byte	.LCFI7
 9123 00a0 04000000 		.4byte	.LCFI8
 9124 00a4 0200     		.2byte	0x2
 9125 00a6 7D       		.byte	0x7d
 9126 00a7 0C       		.sleb128 12
 9127 00a8 04000000 		.4byte	.LCFI8
 9128 00ac 06000000 		.4byte	.LCFI9
 9129 00b0 0200     		.2byte	0x2
 9130 00b2 7D       		.byte	0x7d
 9131 00b3 28       		.sleb128 40
 9132 00b4 06000000 		.4byte	.LCFI9
 9133 00b8 84010000 		.4byte	.LFE3
 9134 00bc 0200     		.2byte	0x2
 9135 00be 77       		.byte	0x77
 9136 00bf 28       		.sleb128 40
 9137 00c0 00000000 		.4byte	0
 9138 00c4 00000000 		.4byte	0
 9139              	.LLST4:
 9140 00c8 00000000 		.4byte	.LFB4
 9141 00cc 02000000 		.4byte	.LCFI10
 9142 00d0 0200     		.2byte	0x2
 9143 00d2 7D       		.byte	0x7d
 9144 00d3 00       		.sleb128 0
 9145 00d4 02000000 		.4byte	.LCFI10
 9146 00d8 04000000 		.4byte	.LCFI11
 9147 00dc 0200     		.2byte	0x2
 9148 00de 7D       		.byte	0x7d
 9149 00df 08       		.sleb128 8
 9150 00e0 04000000 		.4byte	.LCFI11
 9151 00e4 06000000 		.4byte	.LCFI12
 9152 00e8 0200     		.2byte	0x2
 9153 00ea 7D       		.byte	0x7d
 9154 00eb 18       		.sleb128 24
 9155 00ec 06000000 		.4byte	.LCFI12
 9156 00f0 48000000 		.4byte	.LFE4
 9157 00f4 0200     		.2byte	0x2
 9158 00f6 77       		.byte	0x77
 9159 00f7 18       		.sleb128 24
 9160 00f8 00000000 		.4byte	0
 9161 00fc 00000000 		.4byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 193


 9162              	.LLST5:
 9163 0100 00000000 		.4byte	.LFB5
 9164 0104 02000000 		.4byte	.LCFI13
 9165 0108 0200     		.2byte	0x2
 9166 010a 7D       		.byte	0x7d
 9167 010b 00       		.sleb128 0
 9168 010c 02000000 		.4byte	.LCFI13
 9169 0110 04000000 		.4byte	.LCFI14
 9170 0114 0200     		.2byte	0x2
 9171 0116 7D       		.byte	0x7d
 9172 0117 08       		.sleb128 8
 9173 0118 04000000 		.4byte	.LCFI14
 9174 011c 06000000 		.4byte	.LCFI15
 9175 0120 0200     		.2byte	0x2
 9176 0122 7D       		.byte	0x7d
 9177 0123 18       		.sleb128 24
 9178 0124 06000000 		.4byte	.LCFI15
 9179 0128 4E000000 		.4byte	.LFE5
 9180 012c 0200     		.2byte	0x2
 9181 012e 77       		.byte	0x77
 9182 012f 18       		.sleb128 24
 9183 0130 00000000 		.4byte	0
 9184 0134 00000000 		.4byte	0
 9185              	.LLST6:
 9186 0138 00000000 		.4byte	.LFB6
 9187 013c 02000000 		.4byte	.LCFI16
 9188 0140 0200     		.2byte	0x2
 9189 0142 7D       		.byte	0x7d
 9190 0143 00       		.sleb128 0
 9191 0144 02000000 		.4byte	.LCFI16
 9192 0148 04000000 		.4byte	.LCFI17
 9193 014c 0200     		.2byte	0x2
 9194 014e 7D       		.byte	0x7d
 9195 014f 08       		.sleb128 8
 9196 0150 04000000 		.4byte	.LCFI17
 9197 0154 06000000 		.4byte	.LCFI18
 9198 0158 0200     		.2byte	0x2
 9199 015a 7D       		.byte	0x7d
 9200 015b 10       		.sleb128 16
 9201 015c 06000000 		.4byte	.LCFI18
 9202 0160 1A000000 		.4byte	.LFE6
 9203 0164 0200     		.2byte	0x2
 9204 0166 77       		.byte	0x77
 9205 0167 10       		.sleb128 16
 9206 0168 00000000 		.4byte	0
 9207 016c 00000000 		.4byte	0
 9208              	.LLST7:
 9209 0170 00000000 		.4byte	.LFB7
 9210 0174 02000000 		.4byte	.LCFI19
 9211 0178 0200     		.2byte	0x2
 9212 017a 7D       		.byte	0x7d
 9213 017b 00       		.sleb128 0
 9214 017c 02000000 		.4byte	.LCFI19
 9215 0180 04000000 		.4byte	.LCFI20
 9216 0184 0200     		.2byte	0x2
 9217 0186 7D       		.byte	0x7d
 9218 0187 08       		.sleb128 8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 194


 9219 0188 04000000 		.4byte	.LCFI20
 9220 018c 06000000 		.4byte	.LCFI21
 9221 0190 0200     		.2byte	0x2
 9222 0192 7D       		.byte	0x7d
 9223 0193 10       		.sleb128 16
 9224 0194 06000000 		.4byte	.LCFI21
 9225 0198 1A000000 		.4byte	.LFE7
 9226 019c 0200     		.2byte	0x2
 9227 019e 77       		.byte	0x77
 9228 019f 10       		.sleb128 16
 9229 01a0 00000000 		.4byte	0
 9230 01a4 00000000 		.4byte	0
 9231              	.LLST8:
 9232 01a8 00000000 		.4byte	.LFB8
 9233 01ac 02000000 		.4byte	.LCFI22
 9234 01b0 0200     		.2byte	0x2
 9235 01b2 7D       		.byte	0x7d
 9236 01b3 00       		.sleb128 0
 9237 01b4 02000000 		.4byte	.LCFI22
 9238 01b8 04000000 		.4byte	.LCFI23
 9239 01bc 0200     		.2byte	0x2
 9240 01be 7D       		.byte	0x7d
 9241 01bf 08       		.sleb128 8
 9242 01c0 04000000 		.4byte	.LCFI23
 9243 01c4 06000000 		.4byte	.LCFI24
 9244 01c8 0200     		.2byte	0x2
 9245 01ca 7D       		.byte	0x7d
 9246 01cb 10       		.sleb128 16
 9247 01cc 06000000 		.4byte	.LCFI24
 9248 01d0 1A000000 		.4byte	.LFE8
 9249 01d4 0200     		.2byte	0x2
 9250 01d6 77       		.byte	0x77
 9251 01d7 10       		.sleb128 16
 9252 01d8 00000000 		.4byte	0
 9253 01dc 00000000 		.4byte	0
 9254              	.LLST9:
 9255 01e0 00000000 		.4byte	.LFB9
 9256 01e4 02000000 		.4byte	.LCFI25
 9257 01e8 0200     		.2byte	0x2
 9258 01ea 7D       		.byte	0x7d
 9259 01eb 00       		.sleb128 0
 9260 01ec 02000000 		.4byte	.LCFI25
 9261 01f0 04000000 		.4byte	.LCFI26
 9262 01f4 0200     		.2byte	0x2
 9263 01f6 7D       		.byte	0x7d
 9264 01f7 08       		.sleb128 8
 9265 01f8 04000000 		.4byte	.LCFI26
 9266 01fc 06000000 		.4byte	.LCFI27
 9267 0200 0200     		.2byte	0x2
 9268 0202 7D       		.byte	0x7d
 9269 0203 10       		.sleb128 16
 9270 0204 06000000 		.4byte	.LCFI27
 9271 0208 22000000 		.4byte	.LFE9
 9272 020c 0200     		.2byte	0x2
 9273 020e 77       		.byte	0x77
 9274 020f 10       		.sleb128 16
 9275 0210 00000000 		.4byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 195


 9276 0214 00000000 		.4byte	0
 9277              	.LLST10:
 9278 0218 00000000 		.4byte	.LFB10
 9279 021c 02000000 		.4byte	.LCFI28
 9280 0220 0200     		.2byte	0x2
 9281 0222 7D       		.byte	0x7d
 9282 0223 00       		.sleb128 0
 9283 0224 02000000 		.4byte	.LCFI28
 9284 0228 04000000 		.4byte	.LCFI29
 9285 022c 0200     		.2byte	0x2
 9286 022e 7D       		.byte	0x7d
 9287 022f 08       		.sleb128 8
 9288 0230 04000000 		.4byte	.LCFI29
 9289 0234 06000000 		.4byte	.LCFI30
 9290 0238 0200     		.2byte	0x2
 9291 023a 7D       		.byte	0x7d
 9292 023b 10       		.sleb128 16
 9293 023c 06000000 		.4byte	.LCFI30
 9294 0240 1A000000 		.4byte	.LFE10
 9295 0244 0200     		.2byte	0x2
 9296 0246 77       		.byte	0x77
 9297 0247 10       		.sleb128 16
 9298 0248 00000000 		.4byte	0
 9299 024c 00000000 		.4byte	0
 9300              	.LLST11:
 9301 0250 00000000 		.4byte	.LFB11
 9302 0254 02000000 		.4byte	.LCFI31
 9303 0258 0200     		.2byte	0x2
 9304 025a 7D       		.byte	0x7d
 9305 025b 00       		.sleb128 0
 9306 025c 02000000 		.4byte	.LCFI31
 9307 0260 04000000 		.4byte	.LCFI32
 9308 0264 0200     		.2byte	0x2
 9309 0266 7D       		.byte	0x7d
 9310 0267 08       		.sleb128 8
 9311 0268 04000000 		.4byte	.LCFI32
 9312 026c 06000000 		.4byte	.LCFI33
 9313 0270 0200     		.2byte	0x2
 9314 0272 7D       		.byte	0x7d
 9315 0273 10       		.sleb128 16
 9316 0274 06000000 		.4byte	.LCFI33
 9317 0278 22000000 		.4byte	.LFE11
 9318 027c 0200     		.2byte	0x2
 9319 027e 77       		.byte	0x77
 9320 027f 10       		.sleb128 16
 9321 0280 00000000 		.4byte	0
 9322 0284 00000000 		.4byte	0
 9323              	.LLST12:
 9324 0288 00000000 		.4byte	.LFB12
 9325 028c 02000000 		.4byte	.LCFI34
 9326 0290 0200     		.2byte	0x2
 9327 0292 7D       		.byte	0x7d
 9328 0293 00       		.sleb128 0
 9329 0294 02000000 		.4byte	.LCFI34
 9330 0298 04000000 		.4byte	.LCFI35
 9331 029c 0200     		.2byte	0x2
 9332 029e 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 196


 9333 029f 08       		.sleb128 8
 9334 02a0 04000000 		.4byte	.LCFI35
 9335 02a4 06000000 		.4byte	.LCFI36
 9336 02a8 0200     		.2byte	0x2
 9337 02aa 7D       		.byte	0x7d
 9338 02ab 10       		.sleb128 16
 9339 02ac 06000000 		.4byte	.LCFI36
 9340 02b0 1A000000 		.4byte	.LFE12
 9341 02b4 0200     		.2byte	0x2
 9342 02b6 77       		.byte	0x77
 9343 02b7 10       		.sleb128 16
 9344 02b8 00000000 		.4byte	0
 9345 02bc 00000000 		.4byte	0
 9346              	.LLST13:
 9347 02c0 00000000 		.4byte	.LFB13
 9348 02c4 02000000 		.4byte	.LCFI37
 9349 02c8 0200     		.2byte	0x2
 9350 02ca 7D       		.byte	0x7d
 9351 02cb 00       		.sleb128 0
 9352 02cc 02000000 		.4byte	.LCFI37
 9353 02d0 04000000 		.4byte	.LCFI38
 9354 02d4 0200     		.2byte	0x2
 9355 02d6 7D       		.byte	0x7d
 9356 02d7 08       		.sleb128 8
 9357 02d8 04000000 		.4byte	.LCFI38
 9358 02dc 06000000 		.4byte	.LCFI39
 9359 02e0 0200     		.2byte	0x2
 9360 02e2 7D       		.byte	0x7d
 9361 02e3 10       		.sleb128 16
 9362 02e4 06000000 		.4byte	.LCFI39
 9363 02e8 22000000 		.4byte	.LFE13
 9364 02ec 0200     		.2byte	0x2
 9365 02ee 77       		.byte	0x77
 9366 02ef 10       		.sleb128 16
 9367 02f0 00000000 		.4byte	0
 9368 02f4 00000000 		.4byte	0
 9369              	.LLST14:
 9370 02f8 00000000 		.4byte	.LFB14
 9371 02fc 02000000 		.4byte	.LCFI40
 9372 0300 0200     		.2byte	0x2
 9373 0302 7D       		.byte	0x7d
 9374 0303 00       		.sleb128 0
 9375 0304 02000000 		.4byte	.LCFI40
 9376 0308 04000000 		.4byte	.LCFI41
 9377 030c 0200     		.2byte	0x2
 9378 030e 7D       		.byte	0x7d
 9379 030f 08       		.sleb128 8
 9380 0310 04000000 		.4byte	.LCFI41
 9381 0314 06000000 		.4byte	.LCFI42
 9382 0318 0200     		.2byte	0x2
 9383 031a 7D       		.byte	0x7d
 9384 031b 10       		.sleb128 16
 9385 031c 06000000 		.4byte	.LCFI42
 9386 0320 1E000000 		.4byte	.LFE14
 9387 0324 0200     		.2byte	0x2
 9388 0326 77       		.byte	0x77
 9389 0327 10       		.sleb128 16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 197


 9390 0328 00000000 		.4byte	0
 9391 032c 00000000 		.4byte	0
 9392              	.LLST15:
 9393 0330 00000000 		.4byte	.LFB15
 9394 0334 02000000 		.4byte	.LCFI43
 9395 0338 0200     		.2byte	0x2
 9396 033a 7D       		.byte	0x7d
 9397 033b 00       		.sleb128 0
 9398 033c 02000000 		.4byte	.LCFI43
 9399 0340 04000000 		.4byte	.LCFI44
 9400 0344 0200     		.2byte	0x2
 9401 0346 7D       		.byte	0x7d
 9402 0347 08       		.sleb128 8
 9403 0348 04000000 		.4byte	.LCFI44
 9404 034c 06000000 		.4byte	.LCFI45
 9405 0350 0200     		.2byte	0x2
 9406 0352 7D       		.byte	0x7d
 9407 0353 10       		.sleb128 16
 9408 0354 06000000 		.4byte	.LCFI45
 9409 0358 1E000000 		.4byte	.LFE15
 9410 035c 0200     		.2byte	0x2
 9411 035e 77       		.byte	0x77
 9412 035f 10       		.sleb128 16
 9413 0360 00000000 		.4byte	0
 9414 0364 00000000 		.4byte	0
 9415              	.LLST16:
 9416 0368 00000000 		.4byte	.LFB16
 9417 036c 02000000 		.4byte	.LCFI46
 9418 0370 0200     		.2byte	0x2
 9419 0372 7D       		.byte	0x7d
 9420 0373 00       		.sleb128 0
 9421 0374 02000000 		.4byte	.LCFI46
 9422 0378 04000000 		.4byte	.LCFI47
 9423 037c 0200     		.2byte	0x2
 9424 037e 7D       		.byte	0x7d
 9425 037f 08       		.sleb128 8
 9426 0380 04000000 		.4byte	.LCFI47
 9427 0384 06000000 		.4byte	.LCFI48
 9428 0388 0200     		.2byte	0x2
 9429 038a 7D       		.byte	0x7d
 9430 038b 10       		.sleb128 16
 9431 038c 06000000 		.4byte	.LCFI48
 9432 0390 1E000000 		.4byte	.LFE16
 9433 0394 0200     		.2byte	0x2
 9434 0396 77       		.byte	0x77
 9435 0397 10       		.sleb128 16
 9436 0398 00000000 		.4byte	0
 9437 039c 00000000 		.4byte	0
 9438              	.LLST17:
 9439 03a0 00000000 		.4byte	.LFB17
 9440 03a4 02000000 		.4byte	.LCFI49
 9441 03a8 0200     		.2byte	0x2
 9442 03aa 7D       		.byte	0x7d
 9443 03ab 00       		.sleb128 0
 9444 03ac 02000000 		.4byte	.LCFI49
 9445 03b0 04000000 		.4byte	.LCFI50
 9446 03b4 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 198


 9447 03b6 7D       		.byte	0x7d
 9448 03b7 08       		.sleb128 8
 9449 03b8 04000000 		.4byte	.LCFI50
 9450 03bc 06000000 		.4byte	.LCFI51
 9451 03c0 0200     		.2byte	0x2
 9452 03c2 7D       		.byte	0x7d
 9453 03c3 18       		.sleb128 24
 9454 03c4 06000000 		.4byte	.LCFI51
 9455 03c8 82000000 		.4byte	.LFE17
 9456 03cc 0200     		.2byte	0x2
 9457 03ce 77       		.byte	0x77
 9458 03cf 18       		.sleb128 24
 9459 03d0 00000000 		.4byte	0
 9460 03d4 00000000 		.4byte	0
 9461              	.LLST18:
 9462 03d8 00000000 		.4byte	.LFB18
 9463 03dc 02000000 		.4byte	.LCFI52
 9464 03e0 0200     		.2byte	0x2
 9465 03e2 7D       		.byte	0x7d
 9466 03e3 00       		.sleb128 0
 9467 03e4 02000000 		.4byte	.LCFI52
 9468 03e8 04000000 		.4byte	.LCFI53
 9469 03ec 0200     		.2byte	0x2
 9470 03ee 7D       		.byte	0x7d
 9471 03ef 08       		.sleb128 8
 9472 03f0 04000000 		.4byte	.LCFI53
 9473 03f4 06000000 		.4byte	.LCFI54
 9474 03f8 0200     		.2byte	0x2
 9475 03fa 7D       		.byte	0x7d
 9476 03fb 18       		.sleb128 24
 9477 03fc 06000000 		.4byte	.LCFI54
 9478 0400 52000000 		.4byte	.LFE18
 9479 0404 0200     		.2byte	0x2
 9480 0406 77       		.byte	0x77
 9481 0407 18       		.sleb128 24
 9482 0408 00000000 		.4byte	0
 9483 040c 00000000 		.4byte	0
 9484              	.LLST19:
 9485 0410 00000000 		.4byte	.LFB19
 9486 0414 02000000 		.4byte	.LCFI55
 9487 0418 0200     		.2byte	0x2
 9488 041a 7D       		.byte	0x7d
 9489 041b 00       		.sleb128 0
 9490 041c 02000000 		.4byte	.LCFI55
 9491 0420 04000000 		.4byte	.LCFI56
 9492 0424 0200     		.2byte	0x2
 9493 0426 7D       		.byte	0x7d
 9494 0427 08       		.sleb128 8
 9495 0428 04000000 		.4byte	.LCFI56
 9496 042c 06000000 		.4byte	.LCFI57
 9497 0430 0200     		.2byte	0x2
 9498 0432 7D       		.byte	0x7d
 9499 0433 18       		.sleb128 24
 9500 0434 06000000 		.4byte	.LCFI57
 9501 0438 82000000 		.4byte	.LFE19
 9502 043c 0200     		.2byte	0x2
 9503 043e 77       		.byte	0x77
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 199


 9504 043f 18       		.sleb128 24
 9505 0440 00000000 		.4byte	0
 9506 0444 00000000 		.4byte	0
 9507              	.LLST20:
 9508 0448 00000000 		.4byte	.LFB20
 9509 044c 02000000 		.4byte	.LCFI58
 9510 0450 0200     		.2byte	0x2
 9511 0452 7D       		.byte	0x7d
 9512 0453 00       		.sleb128 0
 9513 0454 02000000 		.4byte	.LCFI58
 9514 0458 04000000 		.4byte	.LCFI59
 9515 045c 0200     		.2byte	0x2
 9516 045e 7D       		.byte	0x7d
 9517 045f 08       		.sleb128 8
 9518 0460 04000000 		.4byte	.LCFI59
 9519 0464 06000000 		.4byte	.LCFI60
 9520 0468 0200     		.2byte	0x2
 9521 046a 7D       		.byte	0x7d
 9522 046b 18       		.sleb128 24
 9523 046c 06000000 		.4byte	.LCFI60
 9524 0470 52000000 		.4byte	.LFE20
 9525 0474 0200     		.2byte	0x2
 9526 0476 77       		.byte	0x77
 9527 0477 18       		.sleb128 24
 9528 0478 00000000 		.4byte	0
 9529 047c 00000000 		.4byte	0
 9530              	.LLST21:
 9531 0480 00000000 		.4byte	.LFB21
 9532 0484 02000000 		.4byte	.LCFI61
 9533 0488 0200     		.2byte	0x2
 9534 048a 7D       		.byte	0x7d
 9535 048b 00       		.sleb128 0
 9536 048c 02000000 		.4byte	.LCFI61
 9537 0490 04000000 		.4byte	.LCFI62
 9538 0494 0200     		.2byte	0x2
 9539 0496 7D       		.byte	0x7d
 9540 0497 08       		.sleb128 8
 9541 0498 04000000 		.4byte	.LCFI62
 9542 049c 06000000 		.4byte	.LCFI63
 9543 04a0 0200     		.2byte	0x2
 9544 04a2 7D       		.byte	0x7d
 9545 04a3 10       		.sleb128 16
 9546 04a4 06000000 		.4byte	.LCFI63
 9547 04a8 36000000 		.4byte	.LFE21
 9548 04ac 0200     		.2byte	0x2
 9549 04ae 77       		.byte	0x77
 9550 04af 10       		.sleb128 16
 9551 04b0 00000000 		.4byte	0
 9552 04b4 00000000 		.4byte	0
 9553              	.LLST22:
 9554 04b8 00000000 		.4byte	.LFB22
 9555 04bc 02000000 		.4byte	.LCFI64
 9556 04c0 0200     		.2byte	0x2
 9557 04c2 7D       		.byte	0x7d
 9558 04c3 00       		.sleb128 0
 9559 04c4 02000000 		.4byte	.LCFI64
 9560 04c8 04000000 		.4byte	.LCFI65
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 200


 9561 04cc 0200     		.2byte	0x2
 9562 04ce 7D       		.byte	0x7d
 9563 04cf 08       		.sleb128 8
 9564 04d0 04000000 		.4byte	.LCFI65
 9565 04d4 06000000 		.4byte	.LCFI66
 9566 04d8 0200     		.2byte	0x2
 9567 04da 7D       		.byte	0x7d
 9568 04db 10       		.sleb128 16
 9569 04dc 06000000 		.4byte	.LCFI66
 9570 04e0 38000000 		.4byte	.LFE22
 9571 04e4 0200     		.2byte	0x2
 9572 04e6 77       		.byte	0x77
 9573 04e7 10       		.sleb128 16
 9574 04e8 00000000 		.4byte	0
 9575 04ec 00000000 		.4byte	0
 9576              	.LLST23:
 9577 04f0 00000000 		.4byte	.LFB23
 9578 04f4 02000000 		.4byte	.LCFI67
 9579 04f8 0200     		.2byte	0x2
 9580 04fa 7D       		.byte	0x7d
 9581 04fb 00       		.sleb128 0
 9582 04fc 02000000 		.4byte	.LCFI67
 9583 0500 04000000 		.4byte	.LCFI68
 9584 0504 0200     		.2byte	0x2
 9585 0506 7D       		.byte	0x7d
 9586 0507 08       		.sleb128 8
 9587 0508 04000000 		.4byte	.LCFI68
 9588 050c 06000000 		.4byte	.LCFI69
 9589 0510 0200     		.2byte	0x2
 9590 0512 7D       		.byte	0x7d
 9591 0513 18       		.sleb128 24
 9592 0514 06000000 		.4byte	.LCFI69
 9593 0518 44000000 		.4byte	.LFE23
 9594 051c 0200     		.2byte	0x2
 9595 051e 77       		.byte	0x77
 9596 051f 18       		.sleb128 24
 9597 0520 00000000 		.4byte	0
 9598 0524 00000000 		.4byte	0
 9599              	.LLST24:
 9600 0528 00000000 		.4byte	.LFB24
 9601 052c 02000000 		.4byte	.LCFI70
 9602 0530 0200     		.2byte	0x2
 9603 0532 7D       		.byte	0x7d
 9604 0533 00       		.sleb128 0
 9605 0534 02000000 		.4byte	.LCFI70
 9606 0538 04000000 		.4byte	.LCFI71
 9607 053c 0200     		.2byte	0x2
 9608 053e 7D       		.byte	0x7d
 9609 053f 08       		.sleb128 8
 9610 0540 04000000 		.4byte	.LCFI71
 9611 0544 06000000 		.4byte	.LCFI72
 9612 0548 0200     		.2byte	0x2
 9613 054a 7D       		.byte	0x7d
 9614 054b 10       		.sleb128 16
 9615 054c 06000000 		.4byte	.LCFI72
 9616 0550 38000000 		.4byte	.LFE24
 9617 0554 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 201


 9618 0556 77       		.byte	0x77
 9619 0557 10       		.sleb128 16
 9620 0558 00000000 		.4byte	0
 9621 055c 00000000 		.4byte	0
 9622              	.LLST25:
 9623 0560 00000000 		.4byte	.LFB25
 9624 0564 02000000 		.4byte	.LCFI73
 9625 0568 0200     		.2byte	0x2
 9626 056a 7D       		.byte	0x7d
 9627 056b 00       		.sleb128 0
 9628 056c 02000000 		.4byte	.LCFI73
 9629 0570 04000000 		.4byte	.LCFI74
 9630 0574 0200     		.2byte	0x2
 9631 0576 7D       		.byte	0x7d
 9632 0577 08       		.sleb128 8
 9633 0578 04000000 		.4byte	.LCFI74
 9634 057c 06000000 		.4byte	.LCFI75
 9635 0580 0200     		.2byte	0x2
 9636 0582 7D       		.byte	0x7d
 9637 0583 18       		.sleb128 24
 9638 0584 06000000 		.4byte	.LCFI75
 9639 0588 44000000 		.4byte	.LFE25
 9640 058c 0200     		.2byte	0x2
 9641 058e 77       		.byte	0x77
 9642 058f 18       		.sleb128 24
 9643 0590 00000000 		.4byte	0
 9644 0594 00000000 		.4byte	0
 9645              	.LLST26:
 9646 0598 00000000 		.4byte	.LFB26
 9647 059c 02000000 		.4byte	.LCFI76
 9648 05a0 0200     		.2byte	0x2
 9649 05a2 7D       		.byte	0x7d
 9650 05a3 00       		.sleb128 0
 9651 05a4 02000000 		.4byte	.LCFI76
 9652 05a8 04000000 		.4byte	.LCFI77
 9653 05ac 0200     		.2byte	0x2
 9654 05ae 7D       		.byte	0x7d
 9655 05af 08       		.sleb128 8
 9656 05b0 04000000 		.4byte	.LCFI77
 9657 05b4 06000000 		.4byte	.LCFI78
 9658 05b8 0200     		.2byte	0x2
 9659 05ba 7D       		.byte	0x7d
 9660 05bb 18       		.sleb128 24
 9661 05bc 06000000 		.4byte	.LCFI78
 9662 05c0 44000000 		.4byte	.LFE26
 9663 05c4 0200     		.2byte	0x2
 9664 05c6 77       		.byte	0x77
 9665 05c7 18       		.sleb128 24
 9666 05c8 00000000 		.4byte	0
 9667 05cc 00000000 		.4byte	0
 9668              	.LLST27:
 9669 05d0 00000000 		.4byte	.LFB27
 9670 05d4 02000000 		.4byte	.LCFI79
 9671 05d8 0200     		.2byte	0x2
 9672 05da 7D       		.byte	0x7d
 9673 05db 00       		.sleb128 0
 9674 05dc 02000000 		.4byte	.LCFI79
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 202


 9675 05e0 04000000 		.4byte	.LCFI80
 9676 05e4 0200     		.2byte	0x2
 9677 05e6 7D       		.byte	0x7d
 9678 05e7 08       		.sleb128 8
 9679 05e8 04000000 		.4byte	.LCFI80
 9680 05ec 06000000 		.4byte	.LCFI81
 9681 05f0 0200     		.2byte	0x2
 9682 05f2 7D       		.byte	0x7d
 9683 05f3 10       		.sleb128 16
 9684 05f4 06000000 		.4byte	.LCFI81
 9685 05f8 38000000 		.4byte	.LFE27
 9686 05fc 0200     		.2byte	0x2
 9687 05fe 77       		.byte	0x77
 9688 05ff 10       		.sleb128 16
 9689 0600 00000000 		.4byte	0
 9690 0604 00000000 		.4byte	0
 9691              	.LLST28:
 9692 0608 00000000 		.4byte	.LFB28
 9693 060c 02000000 		.4byte	.LCFI82
 9694 0610 0200     		.2byte	0x2
 9695 0612 7D       		.byte	0x7d
 9696 0613 00       		.sleb128 0
 9697 0614 02000000 		.4byte	.LCFI82
 9698 0618 04000000 		.4byte	.LCFI83
 9699 061c 0200     		.2byte	0x2
 9700 061e 7D       		.byte	0x7d
 9701 061f 08       		.sleb128 8
 9702 0620 04000000 		.4byte	.LCFI83
 9703 0624 06000000 		.4byte	.LCFI84
 9704 0628 0200     		.2byte	0x2
 9705 062a 7D       		.byte	0x7d
 9706 062b 10       		.sleb128 16
 9707 062c 06000000 		.4byte	.LCFI84
 9708 0630 34000000 		.4byte	.LFE28
 9709 0634 0200     		.2byte	0x2
 9710 0636 77       		.byte	0x77
 9711 0637 10       		.sleb128 16
 9712 0638 00000000 		.4byte	0
 9713 063c 00000000 		.4byte	0
 9714              	.LLST29:
 9715 0640 00000000 		.4byte	.LFB29
 9716 0644 02000000 		.4byte	.LCFI85
 9717 0648 0200     		.2byte	0x2
 9718 064a 7D       		.byte	0x7d
 9719 064b 00       		.sleb128 0
 9720 064c 02000000 		.4byte	.LCFI85
 9721 0650 04000000 		.4byte	.LCFI86
 9722 0654 0200     		.2byte	0x2
 9723 0656 7D       		.byte	0x7d
 9724 0657 08       		.sleb128 8
 9725 0658 04000000 		.4byte	.LCFI86
 9726 065c 06000000 		.4byte	.LCFI87
 9727 0660 0200     		.2byte	0x2
 9728 0662 7D       		.byte	0x7d
 9729 0663 10       		.sleb128 16
 9730 0664 06000000 		.4byte	.LCFI87
 9731 0668 34000000 		.4byte	.LFE29
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 203


 9732 066c 0200     		.2byte	0x2
 9733 066e 77       		.byte	0x77
 9734 066f 10       		.sleb128 16
 9735 0670 00000000 		.4byte	0
 9736 0674 00000000 		.4byte	0
 9737              	.LLST30:
 9738 0678 00000000 		.4byte	.LFB30
 9739 067c 02000000 		.4byte	.LCFI88
 9740 0680 0200     		.2byte	0x2
 9741 0682 7D       		.byte	0x7d
 9742 0683 00       		.sleb128 0
 9743 0684 02000000 		.4byte	.LCFI88
 9744 0688 04000000 		.4byte	.LCFI89
 9745 068c 0200     		.2byte	0x2
 9746 068e 7D       		.byte	0x7d
 9747 068f 08       		.sleb128 8
 9748 0690 04000000 		.4byte	.LCFI89
 9749 0694 06000000 		.4byte	.LCFI90
 9750 0698 0200     		.2byte	0x2
 9751 069a 7D       		.byte	0x7d
 9752 069b 10       		.sleb128 16
 9753 069c 06000000 		.4byte	.LCFI90
 9754 06a0 36000000 		.4byte	.LFE30
 9755 06a4 0200     		.2byte	0x2
 9756 06a6 77       		.byte	0x77
 9757 06a7 10       		.sleb128 16
 9758 06a8 00000000 		.4byte	0
 9759 06ac 00000000 		.4byte	0
 9760              	.LLST31:
 9761 06b0 00000000 		.4byte	.LFB31
 9762 06b4 02000000 		.4byte	.LCFI91
 9763 06b8 0200     		.2byte	0x2
 9764 06ba 7D       		.byte	0x7d
 9765 06bb 00       		.sleb128 0
 9766 06bc 02000000 		.4byte	.LCFI91
 9767 06c0 04000000 		.4byte	.LCFI92
 9768 06c4 0200     		.2byte	0x2
 9769 06c6 7D       		.byte	0x7d
 9770 06c7 08       		.sleb128 8
 9771 06c8 04000000 		.4byte	.LCFI92
 9772 06cc 06000000 		.4byte	.LCFI93
 9773 06d0 0200     		.2byte	0x2
 9774 06d2 7D       		.byte	0x7d
 9775 06d3 10       		.sleb128 16
 9776 06d4 06000000 		.4byte	.LCFI93
 9777 06d8 2E000000 		.4byte	.LFE31
 9778 06dc 0200     		.2byte	0x2
 9779 06de 77       		.byte	0x77
 9780 06df 10       		.sleb128 16
 9781 06e0 00000000 		.4byte	0
 9782 06e4 00000000 		.4byte	0
 9783              	.LLST32:
 9784 06e8 00000000 		.4byte	.LFB32
 9785 06ec 02000000 		.4byte	.LCFI94
 9786 06f0 0200     		.2byte	0x2
 9787 06f2 7D       		.byte	0x7d
 9788 06f3 00       		.sleb128 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 204


 9789 06f4 02000000 		.4byte	.LCFI94
 9790 06f8 04000000 		.4byte	.LCFI95
 9791 06fc 0200     		.2byte	0x2
 9792 06fe 7D       		.byte	0x7d
 9793 06ff 08       		.sleb128 8
 9794 0700 04000000 		.4byte	.LCFI95
 9795 0704 06000000 		.4byte	.LCFI96
 9796 0708 0200     		.2byte	0x2
 9797 070a 7D       		.byte	0x7d
 9798 070b 10       		.sleb128 16
 9799 070c 06000000 		.4byte	.LCFI96
 9800 0710 38000000 		.4byte	.LFE32
 9801 0714 0200     		.2byte	0x2
 9802 0716 77       		.byte	0x77
 9803 0717 10       		.sleb128 16
 9804 0718 00000000 		.4byte	0
 9805 071c 00000000 		.4byte	0
 9806              	.LLST33:
 9807 0720 00000000 		.4byte	.LFB33
 9808 0724 02000000 		.4byte	.LCFI97
 9809 0728 0200     		.2byte	0x2
 9810 072a 7D       		.byte	0x7d
 9811 072b 00       		.sleb128 0
 9812 072c 02000000 		.4byte	.LCFI97
 9813 0730 04000000 		.4byte	.LCFI98
 9814 0734 0200     		.2byte	0x2
 9815 0736 7D       		.byte	0x7d
 9816 0737 08       		.sleb128 8
 9817 0738 04000000 		.4byte	.LCFI98
 9818 073c 06000000 		.4byte	.LCFI99
 9819 0740 0200     		.2byte	0x2
 9820 0742 7D       		.byte	0x7d
 9821 0743 10       		.sleb128 16
 9822 0744 06000000 		.4byte	.LCFI99
 9823 0748 30000000 		.4byte	.LFE33
 9824 074c 0200     		.2byte	0x2
 9825 074e 77       		.byte	0x77
 9826 074f 10       		.sleb128 16
 9827 0750 00000000 		.4byte	0
 9828 0754 00000000 		.4byte	0
 9829              	.LLST34:
 9830 0758 00000000 		.4byte	.LFB34
 9831 075c 02000000 		.4byte	.LCFI100
 9832 0760 0200     		.2byte	0x2
 9833 0762 7D       		.byte	0x7d
 9834 0763 00       		.sleb128 0
 9835 0764 02000000 		.4byte	.LCFI100
 9836 0768 04000000 		.4byte	.LCFI101
 9837 076c 0200     		.2byte	0x2
 9838 076e 7D       		.byte	0x7d
 9839 076f 08       		.sleb128 8
 9840 0770 04000000 		.4byte	.LCFI101
 9841 0774 06000000 		.4byte	.LCFI102
 9842 0778 0200     		.2byte	0x2
 9843 077a 7D       		.byte	0x7d
 9844 077b 10       		.sleb128 16
 9845 077c 06000000 		.4byte	.LCFI102
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 205


 9846 0780 30000000 		.4byte	.LFE34
 9847 0784 0200     		.2byte	0x2
 9848 0786 77       		.byte	0x77
 9849 0787 10       		.sleb128 16
 9850 0788 00000000 		.4byte	0
 9851 078c 00000000 		.4byte	0
 9852              	.LLST35:
 9853 0790 00000000 		.4byte	.LFB35
 9854 0794 02000000 		.4byte	.LCFI103
 9855 0798 0200     		.2byte	0x2
 9856 079a 7D       		.byte	0x7d
 9857 079b 00       		.sleb128 0
 9858 079c 02000000 		.4byte	.LCFI103
 9859 07a0 04000000 		.4byte	.LCFI104
 9860 07a4 0200     		.2byte	0x2
 9861 07a6 7D       		.byte	0x7d
 9862 07a7 08       		.sleb128 8
 9863 07a8 04000000 		.4byte	.LCFI104
 9864 07ac 06000000 		.4byte	.LCFI105
 9865 07b0 0200     		.2byte	0x2
 9866 07b2 7D       		.byte	0x7d
 9867 07b3 10       		.sleb128 16
 9868 07b4 06000000 		.4byte	.LCFI105
 9869 07b8 36000000 		.4byte	.LFE35
 9870 07bc 0200     		.2byte	0x2
 9871 07be 77       		.byte	0x77
 9872 07bf 10       		.sleb128 16
 9873 07c0 00000000 		.4byte	0
 9874 07c4 00000000 		.4byte	0
 9875              	.LLST36:
 9876 07c8 00000000 		.4byte	.LFB36
 9877 07cc 02000000 		.4byte	.LCFI106
 9878 07d0 0200     		.2byte	0x2
 9879 07d2 7D       		.byte	0x7d
 9880 07d3 00       		.sleb128 0
 9881 07d4 02000000 		.4byte	.LCFI106
 9882 07d8 04000000 		.4byte	.LCFI107
 9883 07dc 0200     		.2byte	0x2
 9884 07de 7D       		.byte	0x7d
 9885 07df 08       		.sleb128 8
 9886 07e0 04000000 		.4byte	.LCFI107
 9887 07e4 06000000 		.4byte	.LCFI108
 9888 07e8 0200     		.2byte	0x2
 9889 07ea 7D       		.byte	0x7d
 9890 07eb 10       		.sleb128 16
 9891 07ec 06000000 		.4byte	.LCFI108
 9892 07f0 2E000000 		.4byte	.LFE36
 9893 07f4 0200     		.2byte	0x2
 9894 07f6 77       		.byte	0x77
 9895 07f7 10       		.sleb128 16
 9896 07f8 00000000 		.4byte	0
 9897 07fc 00000000 		.4byte	0
 9898              	.LLST37:
 9899 0800 00000000 		.4byte	.LFB37
 9900 0804 02000000 		.4byte	.LCFI109
 9901 0808 0200     		.2byte	0x2
 9902 080a 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 206


 9903 080b 00       		.sleb128 0
 9904 080c 02000000 		.4byte	.LCFI109
 9905 0810 04000000 		.4byte	.LCFI110
 9906 0814 0200     		.2byte	0x2
 9907 0816 7D       		.byte	0x7d
 9908 0817 08       		.sleb128 8
 9909 0818 04000000 		.4byte	.LCFI110
 9910 081c 06000000 		.4byte	.LCFI111
 9911 0820 0200     		.2byte	0x2
 9912 0822 7D       		.byte	0x7d
 9913 0823 10       		.sleb128 16
 9914 0824 06000000 		.4byte	.LCFI111
 9915 0828 18000000 		.4byte	.LFE37
 9916 082c 0200     		.2byte	0x2
 9917 082e 77       		.byte	0x77
 9918 082f 10       		.sleb128 16
 9919 0830 00000000 		.4byte	0
 9920 0834 00000000 		.4byte	0
 9921              	.LLST38:
 9922 0838 00000000 		.4byte	.LFB38
 9923 083c 02000000 		.4byte	.LCFI112
 9924 0840 0200     		.2byte	0x2
 9925 0842 7D       		.byte	0x7d
 9926 0843 00       		.sleb128 0
 9927 0844 02000000 		.4byte	.LCFI112
 9928 0848 04000000 		.4byte	.LCFI113
 9929 084c 0200     		.2byte	0x2
 9930 084e 7D       		.byte	0x7d
 9931 084f 08       		.sleb128 8
 9932 0850 04000000 		.4byte	.LCFI113
 9933 0854 06000000 		.4byte	.LCFI114
 9934 0858 0200     		.2byte	0x2
 9935 085a 7D       		.byte	0x7d
 9936 085b 10       		.sleb128 16
 9937 085c 06000000 		.4byte	.LCFI114
 9938 0860 38000000 		.4byte	.LFE38
 9939 0864 0200     		.2byte	0x2
 9940 0866 77       		.byte	0x77
 9941 0867 10       		.sleb128 16
 9942 0868 00000000 		.4byte	0
 9943 086c 00000000 		.4byte	0
 9944              	.LLST39:
 9945 0870 00000000 		.4byte	.LFB39
 9946 0874 02000000 		.4byte	.LCFI115
 9947 0878 0200     		.2byte	0x2
 9948 087a 7D       		.byte	0x7d
 9949 087b 00       		.sleb128 0
 9950 087c 02000000 		.4byte	.LCFI115
 9951 0880 04000000 		.4byte	.LCFI116
 9952 0884 0200     		.2byte	0x2
 9953 0886 7D       		.byte	0x7d
 9954 0887 08       		.sleb128 8
 9955 0888 04000000 		.4byte	.LCFI116
 9956 088c 06000000 		.4byte	.LCFI117
 9957 0890 0200     		.2byte	0x2
 9958 0892 7D       		.byte	0x7d
 9959 0893 18       		.sleb128 24
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 207


 9960 0894 06000000 		.4byte	.LCFI117
 9961 0898 50000000 		.4byte	.LFE39
 9962 089c 0200     		.2byte	0x2
 9963 089e 77       		.byte	0x77
 9964 089f 18       		.sleb128 24
 9965 08a0 00000000 		.4byte	0
 9966 08a4 00000000 		.4byte	0
 9967              	.LLST40:
 9968 08a8 00000000 		.4byte	.LFB40
 9969 08ac 02000000 		.4byte	.LCFI118
 9970 08b0 0200     		.2byte	0x2
 9971 08b2 7D       		.byte	0x7d
 9972 08b3 00       		.sleb128 0
 9973 08b4 02000000 		.4byte	.LCFI118
 9974 08b8 04000000 		.4byte	.LCFI119
 9975 08bc 0200     		.2byte	0x2
 9976 08be 7D       		.byte	0x7d
 9977 08bf 0C       		.sleb128 12
 9978 08c0 04000000 		.4byte	.LCFI119
 9979 08c4 06000000 		.4byte	.LCFI120
 9980 08c8 0200     		.2byte	0x2
 9981 08ca 7D       		.byte	0x7d
 9982 08cb 20       		.sleb128 32
 9983 08cc 06000000 		.4byte	.LCFI120
 9984 08d0 68000000 		.4byte	.LFE40
 9985 08d4 0200     		.2byte	0x2
 9986 08d6 77       		.byte	0x77
 9987 08d7 20       		.sleb128 32
 9988 08d8 00000000 		.4byte	0
 9989 08dc 00000000 		.4byte	0
 9990              	.LLST41:
 9991 08e0 00000000 		.4byte	.LFB41
 9992 08e4 02000000 		.4byte	.LCFI121
 9993 08e8 0200     		.2byte	0x2
 9994 08ea 7D       		.byte	0x7d
 9995 08eb 00       		.sleb128 0
 9996 08ec 02000000 		.4byte	.LCFI121
 9997 08f0 04000000 		.4byte	.LCFI122
 9998 08f4 0200     		.2byte	0x2
 9999 08f6 7D       		.byte	0x7d
 10000 08f7 0C       		.sleb128 12
 10001 08f8 04000000 		.4byte	.LCFI122
 10002 08fc 06000000 		.4byte	.LCFI123
 10003 0900 0200     		.2byte	0x2
 10004 0902 7D       		.byte	0x7d
 10005 0903 20       		.sleb128 32
 10006 0904 06000000 		.4byte	.LCFI123
 10007 0908 68000000 		.4byte	.LFE41
 10008 090c 0200     		.2byte	0x2
 10009 090e 77       		.byte	0x77
 10010 090f 20       		.sleb128 32
 10011 0910 00000000 		.4byte	0
 10012 0914 00000000 		.4byte	0
 10013              	.LLST42:
 10014 0918 00000000 		.4byte	.LFB42
 10015 091c 02000000 		.4byte	.LCFI124
 10016 0920 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 208


 10017 0922 7D       		.byte	0x7d
 10018 0923 00       		.sleb128 0
 10019 0924 02000000 		.4byte	.LCFI124
 10020 0928 04000000 		.4byte	.LCFI125
 10021 092c 0200     		.2byte	0x2
 10022 092e 7D       		.byte	0x7d
 10023 092f 08       		.sleb128 8
 10024 0930 04000000 		.4byte	.LCFI125
 10025 0934 06000000 		.4byte	.LCFI126
 10026 0938 0200     		.2byte	0x2
 10027 093a 7D       		.byte	0x7d
 10028 093b 20       		.sleb128 32
 10029 093c 06000000 		.4byte	.LCFI126
 10030 0940 10010000 		.4byte	.LFE42
 10031 0944 0200     		.2byte	0x2
 10032 0946 77       		.byte	0x77
 10033 0947 20       		.sleb128 32
 10034 0948 00000000 		.4byte	0
 10035 094c 00000000 		.4byte	0
 10036              	.LLST43:
 10037 0950 00000000 		.4byte	.LFB43
 10038 0954 02000000 		.4byte	.LCFI127
 10039 0958 0200     		.2byte	0x2
 10040 095a 7D       		.byte	0x7d
 10041 095b 00       		.sleb128 0
 10042 095c 02000000 		.4byte	.LCFI127
 10043 0960 04000000 		.4byte	.LCFI128
 10044 0964 0200     		.2byte	0x2
 10045 0966 7D       		.byte	0x7d
 10046 0967 08       		.sleb128 8
 10047 0968 04000000 		.4byte	.LCFI128
 10048 096c 06000000 		.4byte	.LCFI129
 10049 0970 0200     		.2byte	0x2
 10050 0972 7D       		.byte	0x7d
 10051 0973 20       		.sleb128 32
 10052 0974 06000000 		.4byte	.LCFI129
 10053 0978 1C010000 		.4byte	.LFE43
 10054 097c 0200     		.2byte	0x2
 10055 097e 77       		.byte	0x77
 10056 097f 20       		.sleb128 32
 10057 0980 00000000 		.4byte	0
 10058 0984 00000000 		.4byte	0
 10059              	.LLST44:
 10060 0988 00000000 		.4byte	.LFB44
 10061 098c 02000000 		.4byte	.LCFI130
 10062 0990 0200     		.2byte	0x2
 10063 0992 7D       		.byte	0x7d
 10064 0993 00       		.sleb128 0
 10065 0994 02000000 		.4byte	.LCFI130
 10066 0998 04000000 		.4byte	.LCFI131
 10067 099c 0200     		.2byte	0x2
 10068 099e 7D       		.byte	0x7d
 10069 099f 08       		.sleb128 8
 10070 09a0 04000000 		.4byte	.LCFI131
 10071 09a4 06000000 		.4byte	.LCFI132
 10072 09a8 0200     		.2byte	0x2
 10073 09aa 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 209


 10074 09ab 20       		.sleb128 32
 10075 09ac 06000000 		.4byte	.LCFI132
 10076 09b0 E8000000 		.4byte	.LFE44
 10077 09b4 0200     		.2byte	0x2
 10078 09b6 77       		.byte	0x77
 10079 09b7 20       		.sleb128 32
 10080 09b8 00000000 		.4byte	0
 10081 09bc 00000000 		.4byte	0
 10082              	.LLST45:
 10083 09c0 00000000 		.4byte	.LFB45
 10084 09c4 02000000 		.4byte	.LCFI133
 10085 09c8 0200     		.2byte	0x2
 10086 09ca 7D       		.byte	0x7d
 10087 09cb 00       		.sleb128 0
 10088 09cc 02000000 		.4byte	.LCFI133
 10089 09d0 04000000 		.4byte	.LCFI134
 10090 09d4 0200     		.2byte	0x2
 10091 09d6 7D       		.byte	0x7d
 10092 09d7 08       		.sleb128 8
 10093 09d8 04000000 		.4byte	.LCFI134
 10094 09dc 06000000 		.4byte	.LCFI135
 10095 09e0 0200     		.2byte	0x2
 10096 09e2 7D       		.byte	0x7d
 10097 09e3 18       		.sleb128 24
 10098 09e4 06000000 		.4byte	.LCFI135
 10099 09e8 9C000000 		.4byte	.LFE45
 10100 09ec 0200     		.2byte	0x2
 10101 09ee 77       		.byte	0x77
 10102 09ef 18       		.sleb128 24
 10103 09f0 00000000 		.4byte	0
 10104 09f4 00000000 		.4byte	0
 10105              	.LLST46:
 10106 09f8 00000000 		.4byte	.LFB46
 10107 09fc 02000000 		.4byte	.LCFI136
 10108 0a00 0200     		.2byte	0x2
 10109 0a02 7D       		.byte	0x7d
 10110 0a03 00       		.sleb128 0
 10111 0a04 02000000 		.4byte	.LCFI136
 10112 0a08 04000000 		.4byte	.LCFI137
 10113 0a0c 0200     		.2byte	0x2
 10114 0a0e 7D       		.byte	0x7d
 10115 0a0f 0C       		.sleb128 12
 10116 0a10 04000000 		.4byte	.LCFI137
 10117 0a14 06000000 		.4byte	.LCFI138
 10118 0a18 0200     		.2byte	0x2
 10119 0a1a 7D       		.byte	0x7d
 10120 0a1b 30       		.sleb128 48
 10121 0a1c 06000000 		.4byte	.LCFI138
 10122 0a20 3A010000 		.4byte	.LFE46
 10123 0a24 0200     		.2byte	0x2
 10124 0a26 77       		.byte	0x77
 10125 0a27 30       		.sleb128 48
 10126 0a28 00000000 		.4byte	0
 10127 0a2c 00000000 		.4byte	0
 10128              	.LLST47:
 10129 0a30 00000000 		.4byte	.LFB47
 10130 0a34 02000000 		.4byte	.LCFI139
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 210


 10131 0a38 0200     		.2byte	0x2
 10132 0a3a 7D       		.byte	0x7d
 10133 0a3b 00       		.sleb128 0
 10134 0a3c 02000000 		.4byte	.LCFI139
 10135 0a40 04000000 		.4byte	.LCFI140
 10136 0a44 0200     		.2byte	0x2
 10137 0a46 7D       		.byte	0x7d
 10138 0a47 08       		.sleb128 8
 10139 0a48 04000000 		.4byte	.LCFI140
 10140 0a4c 06000000 		.4byte	.LCFI141
 10141 0a50 0200     		.2byte	0x2
 10142 0a52 7D       		.byte	0x7d
 10143 0a53 20       		.sleb128 32
 10144 0a54 06000000 		.4byte	.LCFI141
 10145 0a58 30020000 		.4byte	.LFE47
 10146 0a5c 0200     		.2byte	0x2
 10147 0a5e 77       		.byte	0x77
 10148 0a5f 20       		.sleb128 32
 10149 0a60 00000000 		.4byte	0
 10150 0a64 00000000 		.4byte	0
 10151              	.LLST48:
 10152 0a68 00000000 		.4byte	.LFB48
 10153 0a6c 02000000 		.4byte	.LCFI142
 10154 0a70 0200     		.2byte	0x2
 10155 0a72 7D       		.byte	0x7d
 10156 0a73 00       		.sleb128 0
 10157 0a74 02000000 		.4byte	.LCFI142
 10158 0a78 04000000 		.4byte	.LCFI143
 10159 0a7c 0200     		.2byte	0x2
 10160 0a7e 7D       		.byte	0x7d
 10161 0a7f 08       		.sleb128 8
 10162 0a80 04000000 		.4byte	.LCFI143
 10163 0a84 06000000 		.4byte	.LCFI144
 10164 0a88 0200     		.2byte	0x2
 10165 0a8a 7D       		.byte	0x7d
 10166 0a8b 18       		.sleb128 24
 10167 0a8c 06000000 		.4byte	.LCFI144
 10168 0a90 D4000000 		.4byte	.LFE48
 10169 0a94 0200     		.2byte	0x2
 10170 0a96 77       		.byte	0x77
 10171 0a97 18       		.sleb128 24
 10172 0a98 00000000 		.4byte	0
 10173 0a9c 00000000 		.4byte	0
 10174              	.LLST49:
 10175 0aa0 00000000 		.4byte	.LFB49
 10176 0aa4 02000000 		.4byte	.LCFI145
 10177 0aa8 0200     		.2byte	0x2
 10178 0aaa 7D       		.byte	0x7d
 10179 0aab 00       		.sleb128 0
 10180 0aac 02000000 		.4byte	.LCFI145
 10181 0ab0 04000000 		.4byte	.LCFI146
 10182 0ab4 0200     		.2byte	0x2
 10183 0ab6 7D       		.byte	0x7d
 10184 0ab7 08       		.sleb128 8
 10185 0ab8 04000000 		.4byte	.LCFI146
 10186 0abc 06000000 		.4byte	.LCFI147
 10187 0ac0 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 211


 10188 0ac2 7D       		.byte	0x7d
 10189 0ac3 28       		.sleb128 40
 10190 0ac4 06000000 		.4byte	.LCFI147
 10191 0ac8 DC000000 		.4byte	.LFE49
 10192 0acc 0200     		.2byte	0x2
 10193 0ace 77       		.byte	0x77
 10194 0acf 28       		.sleb128 40
 10195 0ad0 00000000 		.4byte	0
 10196 0ad4 00000000 		.4byte	0
 10197              	.LLST50:
 10198 0ad8 00000000 		.4byte	.LFB50
 10199 0adc 02000000 		.4byte	.LCFI148
 10200 0ae0 0200     		.2byte	0x2
 10201 0ae2 7D       		.byte	0x7d
 10202 0ae3 00       		.sleb128 0
 10203 0ae4 02000000 		.4byte	.LCFI148
 10204 0ae8 04000000 		.4byte	.LCFI149
 10205 0aec 0200     		.2byte	0x2
 10206 0aee 7D       		.byte	0x7d
 10207 0aef 08       		.sleb128 8
 10208 0af0 04000000 		.4byte	.LCFI149
 10209 0af4 06000000 		.4byte	.LCFI150
 10210 0af8 0200     		.2byte	0x2
 10211 0afa 7D       		.byte	0x7d
 10212 0afb 18       		.sleb128 24
 10213 0afc 06000000 		.4byte	.LCFI150
 10214 0b00 3A000000 		.4byte	.LFE50
 10215 0b04 0200     		.2byte	0x2
 10216 0b06 77       		.byte	0x77
 10217 0b07 18       		.sleb128 24
 10218 0b08 00000000 		.4byte	0
 10219 0b0c 00000000 		.4byte	0
 10220              	.LLST51:
 10221 0b10 00000000 		.4byte	.LFB51
 10222 0b14 02000000 		.4byte	.LCFI151
 10223 0b18 0200     		.2byte	0x2
 10224 0b1a 7D       		.byte	0x7d
 10225 0b1b 00       		.sleb128 0
 10226 0b1c 02000000 		.4byte	.LCFI151
 10227 0b20 04000000 		.4byte	.LCFI152
 10228 0b24 0200     		.2byte	0x2
 10229 0b26 7D       		.byte	0x7d
 10230 0b27 08       		.sleb128 8
 10231 0b28 04000000 		.4byte	.LCFI152
 10232 0b2c 10000000 		.4byte	.LFE51
 10233 0b30 0200     		.2byte	0x2
 10234 0b32 77       		.byte	0x77
 10235 0b33 08       		.sleb128 8
 10236 0b34 00000000 		.4byte	0
 10237 0b38 00000000 		.4byte	0
 10238              	.LLST52:
 10239 0b3c 00000000 		.4byte	.LFB52
 10240 0b40 02000000 		.4byte	.LCFI153
 10241 0b44 0200     		.2byte	0x2
 10242 0b46 7D       		.byte	0x7d
 10243 0b47 00       		.sleb128 0
 10244 0b48 02000000 		.4byte	.LCFI153
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 212


 10245 0b4c 04000000 		.4byte	.LCFI154
 10246 0b50 0200     		.2byte	0x2
 10247 0b52 7D       		.byte	0x7d
 10248 0b53 08       		.sleb128 8
 10249 0b54 04000000 		.4byte	.LCFI154
 10250 0b58 06000000 		.4byte	.LCFI155
 10251 0b5c 0200     		.2byte	0x2
 10252 0b5e 7D       		.byte	0x7d
 10253 0b5f 10       		.sleb128 16
 10254 0b60 06000000 		.4byte	.LCFI155
 10255 0b64 16000000 		.4byte	.LFE52
 10256 0b68 0200     		.2byte	0x2
 10257 0b6a 77       		.byte	0x77
 10258 0b6b 10       		.sleb128 16
 10259 0b6c 00000000 		.4byte	0
 10260 0b70 00000000 		.4byte	0
 10261              	.LLST53:
 10262 0b74 00000000 		.4byte	.LFB53
 10263 0b78 02000000 		.4byte	.LCFI156
 10264 0b7c 0200     		.2byte	0x2
 10265 0b7e 7D       		.byte	0x7d
 10266 0b7f 00       		.sleb128 0
 10267 0b80 02000000 		.4byte	.LCFI156
 10268 0b84 04000000 		.4byte	.LCFI157
 10269 0b88 0200     		.2byte	0x2
 10270 0b8a 7D       		.byte	0x7d
 10271 0b8b 08       		.sleb128 8
 10272 0b8c 04000000 		.4byte	.LCFI157
 10273 0b90 06000000 		.4byte	.LCFI158
 10274 0b94 0200     		.2byte	0x2
 10275 0b96 7D       		.byte	0x7d
 10276 0b97 10       		.sleb128 16
 10277 0b98 06000000 		.4byte	.LCFI158
 10278 0b9c 16000000 		.4byte	.LFE53
 10279 0ba0 0200     		.2byte	0x2
 10280 0ba2 77       		.byte	0x77
 10281 0ba3 10       		.sleb128 16
 10282 0ba4 00000000 		.4byte	0
 10283 0ba8 00000000 		.4byte	0
 10284              	.LLST54:
 10285 0bac 00000000 		.4byte	.LFB54
 10286 0bb0 02000000 		.4byte	.LCFI159
 10287 0bb4 0200     		.2byte	0x2
 10288 0bb6 7D       		.byte	0x7d
 10289 0bb7 00       		.sleb128 0
 10290 0bb8 02000000 		.4byte	.LCFI159
 10291 0bbc 04000000 		.4byte	.LCFI160
 10292 0bc0 0200     		.2byte	0x2
 10293 0bc2 7D       		.byte	0x7d
 10294 0bc3 08       		.sleb128 8
 10295 0bc4 04000000 		.4byte	.LCFI160
 10296 0bc8 06000000 		.4byte	.LCFI161
 10297 0bcc 0200     		.2byte	0x2
 10298 0bce 7D       		.byte	0x7d
 10299 0bcf 18       		.sleb128 24
 10300 0bd0 06000000 		.4byte	.LCFI161
 10301 0bd4 70010000 		.4byte	.LFE54
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 213


 10302 0bd8 0200     		.2byte	0x2
 10303 0bda 77       		.byte	0x77
 10304 0bdb 18       		.sleb128 24
 10305 0bdc 00000000 		.4byte	0
 10306 0be0 00000000 		.4byte	0
 10307              	.LLST55:
 10308 0be4 00000000 		.4byte	.LFB55
 10309 0be8 02000000 		.4byte	.LCFI162
 10310 0bec 0200     		.2byte	0x2
 10311 0bee 7D       		.byte	0x7d
 10312 0bef 00       		.sleb128 0
 10313 0bf0 02000000 		.4byte	.LCFI162
 10314 0bf4 04000000 		.4byte	.LCFI163
 10315 0bf8 0200     		.2byte	0x2
 10316 0bfa 7D       		.byte	0x7d
 10317 0bfb 08       		.sleb128 8
 10318 0bfc 04000000 		.4byte	.LCFI163
 10319 0c00 06000000 		.4byte	.LCFI164
 10320 0c04 0200     		.2byte	0x2
 10321 0c06 7D       		.byte	0x7d
 10322 0c07 10       		.sleb128 16
 10323 0c08 06000000 		.4byte	.LCFI164
 10324 0c0c 50000000 		.4byte	.LFE55
 10325 0c10 0200     		.2byte	0x2
 10326 0c12 77       		.byte	0x77
 10327 0c13 10       		.sleb128 16
 10328 0c14 00000000 		.4byte	0
 10329 0c18 00000000 		.4byte	0
 10330              	.LLST56:
 10331 0c1c 00000000 		.4byte	.LFB56
 10332 0c20 02000000 		.4byte	.LCFI165
 10333 0c24 0200     		.2byte	0x2
 10334 0c26 7D       		.byte	0x7d
 10335 0c27 00       		.sleb128 0
 10336 0c28 02000000 		.4byte	.LCFI165
 10337 0c2c 04000000 		.4byte	.LCFI166
 10338 0c30 0200     		.2byte	0x2
 10339 0c32 7D       		.byte	0x7d
 10340 0c33 0C       		.sleb128 12
 10341 0c34 04000000 		.4byte	.LCFI166
 10342 0c38 06000000 		.4byte	.LCFI167
 10343 0c3c 0200     		.2byte	0x2
 10344 0c3e 7D       		.byte	0x7d
 10345 0c3f 20       		.sleb128 32
 10346 0c40 06000000 		.4byte	.LCFI167
 10347 0c44 4C000000 		.4byte	.LFE56
 10348 0c48 0200     		.2byte	0x2
 10349 0c4a 77       		.byte	0x77
 10350 0c4b 20       		.sleb128 32
 10351 0c4c 00000000 		.4byte	0
 10352 0c50 00000000 		.4byte	0
 10353              	.LLST57:
 10354 0c54 00000000 		.4byte	.LFB57
 10355 0c58 02000000 		.4byte	.LCFI168
 10356 0c5c 0200     		.2byte	0x2
 10357 0c5e 7D       		.byte	0x7d
 10358 0c5f 00       		.sleb128 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 214


 10359 0c60 02000000 		.4byte	.LCFI168
 10360 0c64 04000000 		.4byte	.LCFI169
 10361 0c68 0200     		.2byte	0x2
 10362 0c6a 7D       		.byte	0x7d
 10363 0c6b 0C       		.sleb128 12
 10364 0c6c 04000000 		.4byte	.LCFI169
 10365 0c70 06000000 		.4byte	.LCFI170
 10366 0c74 0200     		.2byte	0x2
 10367 0c76 7D       		.byte	0x7d
 10368 0c77 20       		.sleb128 32
 10369 0c78 06000000 		.4byte	.LCFI170
 10370 0c7c 44000000 		.4byte	.LFE57
 10371 0c80 0200     		.2byte	0x2
 10372 0c82 77       		.byte	0x77
 10373 0c83 20       		.sleb128 32
 10374 0c84 00000000 		.4byte	0
 10375 0c88 00000000 		.4byte	0
 10376              	.LLST58:
 10377 0c8c 00000000 		.4byte	.LFB58
 10378 0c90 02000000 		.4byte	.LCFI171
 10379 0c94 0200     		.2byte	0x2
 10380 0c96 7D       		.byte	0x7d
 10381 0c97 00       		.sleb128 0
 10382 0c98 02000000 		.4byte	.LCFI171
 10383 0c9c 04000000 		.4byte	.LCFI172
 10384 0ca0 0200     		.2byte	0x2
 10385 0ca2 7D       		.byte	0x7d
 10386 0ca3 0C       		.sleb128 12
 10387 0ca4 04000000 		.4byte	.LCFI172
 10388 0ca8 06000000 		.4byte	.LCFI173
 10389 0cac 0200     		.2byte	0x2
 10390 0cae 7D       		.byte	0x7d
 10391 0caf 20       		.sleb128 32
 10392 0cb0 06000000 		.4byte	.LCFI173
 10393 0cb4 8C000000 		.4byte	.LFE58
 10394 0cb8 0200     		.2byte	0x2
 10395 0cba 77       		.byte	0x77
 10396 0cbb 20       		.sleb128 32
 10397 0cbc 00000000 		.4byte	0
 10398 0cc0 00000000 		.4byte	0
 10399              	.LLST59:
 10400 0cc4 00000000 		.4byte	.LFB59
 10401 0cc8 02000000 		.4byte	.LCFI174
 10402 0ccc 0200     		.2byte	0x2
 10403 0cce 7D       		.byte	0x7d
 10404 0ccf 00       		.sleb128 0
 10405 0cd0 02000000 		.4byte	.LCFI174
 10406 0cd4 04000000 		.4byte	.LCFI175
 10407 0cd8 0200     		.2byte	0x2
 10408 0cda 7D       		.byte	0x7d
 10409 0cdb 0C       		.sleb128 12
 10410 0cdc 04000000 		.4byte	.LCFI175
 10411 0ce0 06000000 		.4byte	.LCFI176
 10412 0ce4 0200     		.2byte	0x2
 10413 0ce6 7D       		.byte	0x7d
 10414 0ce7 20       		.sleb128 32
 10415 0ce8 06000000 		.4byte	.LCFI176
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 215


 10416 0cec 84000000 		.4byte	.LFE59
 10417 0cf0 0200     		.2byte	0x2
 10418 0cf2 77       		.byte	0x77
 10419 0cf3 20       		.sleb128 32
 10420 0cf4 00000000 		.4byte	0
 10421 0cf8 00000000 		.4byte	0
 10422              	.LLST60:
 10423 0cfc 00000000 		.4byte	.LFB60
 10424 0d00 02000000 		.4byte	.LCFI177
 10425 0d04 0200     		.2byte	0x2
 10426 0d06 7D       		.byte	0x7d
 10427 0d07 00       		.sleb128 0
 10428 0d08 02000000 		.4byte	.LCFI177
 10429 0d0c 04000000 		.4byte	.LCFI178
 10430 0d10 0200     		.2byte	0x2
 10431 0d12 7D       		.byte	0x7d
 10432 0d13 08       		.sleb128 8
 10433 0d14 04000000 		.4byte	.LCFI178
 10434 0d18 06000000 		.4byte	.LCFI179
 10435 0d1c 0200     		.2byte	0x2
 10436 0d1e 7D       		.byte	0x7d
 10437 0d1f 10       		.sleb128 16
 10438 0d20 06000000 		.4byte	.LCFI179
 10439 0d24 20000000 		.4byte	.LFE60
 10440 0d28 0200     		.2byte	0x2
 10441 0d2a 77       		.byte	0x77
 10442 0d2b 10       		.sleb128 16
 10443 0d2c 00000000 		.4byte	0
 10444 0d30 00000000 		.4byte	0
 10445              	.LLST61:
 10446 0d34 00000000 		.4byte	.LFB61
 10447 0d38 02000000 		.4byte	.LCFI180
 10448 0d3c 0200     		.2byte	0x2
 10449 0d3e 7D       		.byte	0x7d
 10450 0d3f 00       		.sleb128 0
 10451 0d40 02000000 		.4byte	.LCFI180
 10452 0d44 04000000 		.4byte	.LCFI181
 10453 0d48 0200     		.2byte	0x2
 10454 0d4a 7D       		.byte	0x7d
 10455 0d4b 08       		.sleb128 8
 10456 0d4c 04000000 		.4byte	.LCFI181
 10457 0d50 06000000 		.4byte	.LCFI182
 10458 0d54 0200     		.2byte	0x2
 10459 0d56 7D       		.byte	0x7d
 10460 0d57 10       		.sleb128 16
 10461 0d58 06000000 		.4byte	.LCFI182
 10462 0d5c 24000000 		.4byte	.LFE61
 10463 0d60 0200     		.2byte	0x2
 10464 0d62 77       		.byte	0x77
 10465 0d63 10       		.sleb128 16
 10466 0d64 00000000 		.4byte	0
 10467 0d68 00000000 		.4byte	0
 10468              	.LLST62:
 10469 0d6c 00000000 		.4byte	.LFB62
 10470 0d70 02000000 		.4byte	.LCFI183
 10471 0d74 0200     		.2byte	0x2
 10472 0d76 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 216


 10473 0d77 00       		.sleb128 0
 10474 0d78 02000000 		.4byte	.LCFI183
 10475 0d7c 04000000 		.4byte	.LCFI184
 10476 0d80 0200     		.2byte	0x2
 10477 0d82 7D       		.byte	0x7d
 10478 0d83 08       		.sleb128 8
 10479 0d84 04000000 		.4byte	.LCFI184
 10480 0d88 06000000 		.4byte	.LCFI185
 10481 0d8c 0200     		.2byte	0x2
 10482 0d8e 7D       		.byte	0x7d
 10483 0d8f 10       		.sleb128 16
 10484 0d90 06000000 		.4byte	.LCFI185
 10485 0d94 26000000 		.4byte	.LFE62
 10486 0d98 0200     		.2byte	0x2
 10487 0d9a 77       		.byte	0x77
 10488 0d9b 10       		.sleb128 16
 10489 0d9c 00000000 		.4byte	0
 10490 0da0 00000000 		.4byte	0
 10491              	.LLST63:
 10492 0da4 00000000 		.4byte	.LFB63
 10493 0da8 02000000 		.4byte	.LCFI186
 10494 0dac 0200     		.2byte	0x2
 10495 0dae 7D       		.byte	0x7d
 10496 0daf 00       		.sleb128 0
 10497 0db0 02000000 		.4byte	.LCFI186
 10498 0db4 04000000 		.4byte	.LCFI187
 10499 0db8 0200     		.2byte	0x2
 10500 0dba 7D       		.byte	0x7d
 10501 0dbb 08       		.sleb128 8
 10502 0dbc 04000000 		.4byte	.LCFI187
 10503 0dc0 06000000 		.4byte	.LCFI188
 10504 0dc4 0200     		.2byte	0x2
 10505 0dc6 7D       		.byte	0x7d
 10506 0dc7 10       		.sleb128 16
 10507 0dc8 06000000 		.4byte	.LCFI188
 10508 0dcc 50000000 		.4byte	.LFE63
 10509 0dd0 0200     		.2byte	0x2
 10510 0dd2 77       		.byte	0x77
 10511 0dd3 10       		.sleb128 16
 10512 0dd4 00000000 		.4byte	0
 10513 0dd8 00000000 		.4byte	0
 10514              	.LLST64:
 10515 0ddc 00000000 		.4byte	.LFB64
 10516 0de0 02000000 		.4byte	.LCFI189
 10517 0de4 0200     		.2byte	0x2
 10518 0de6 7D       		.byte	0x7d
 10519 0de7 00       		.sleb128 0
 10520 0de8 02000000 		.4byte	.LCFI189
 10521 0dec 04000000 		.4byte	.LCFI190
 10522 0df0 0200     		.2byte	0x2
 10523 0df2 7D       		.byte	0x7d
 10524 0df3 0C       		.sleb128 12
 10525 0df4 04000000 		.4byte	.LCFI190
 10526 0df8 06000000 		.4byte	.LCFI191
 10527 0dfc 0200     		.2byte	0x2
 10528 0dfe 7D       		.byte	0x7d
 10529 0dff 20       		.sleb128 32
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 217


 10530 0e00 06000000 		.4byte	.LCFI191
 10531 0e04 C0000000 		.4byte	.LFE64
 10532 0e08 0200     		.2byte	0x2
 10533 0e0a 77       		.byte	0x77
 10534 0e0b 20       		.sleb128 32
 10535 0e0c 00000000 		.4byte	0
 10536 0e10 00000000 		.4byte	0
 10537              	.LLST65:
 10538 0e14 00000000 		.4byte	.LFB65
 10539 0e18 02000000 		.4byte	.LCFI192
 10540 0e1c 0200     		.2byte	0x2
 10541 0e1e 7D       		.byte	0x7d
 10542 0e1f 00       		.sleb128 0
 10543 0e20 02000000 		.4byte	.LCFI192
 10544 0e24 04000000 		.4byte	.LCFI193
 10545 0e28 0200     		.2byte	0x2
 10546 0e2a 7D       		.byte	0x7d
 10547 0e2b 08       		.sleb128 8
 10548 0e2c 04000000 		.4byte	.LCFI193
 10549 0e30 06000000 		.4byte	.LCFI194
 10550 0e34 0200     		.2byte	0x2
 10551 0e36 7D       		.byte	0x7d
 10552 0e37 10       		.sleb128 16
 10553 0e38 06000000 		.4byte	.LCFI194
 10554 0e3c 20000000 		.4byte	.LFE65
 10555 0e40 0200     		.2byte	0x2
 10556 0e42 77       		.byte	0x77
 10557 0e43 10       		.sleb128 16
 10558 0e44 00000000 		.4byte	0
 10559 0e48 00000000 		.4byte	0
 10560              	.LLST66:
 10561 0e4c 00000000 		.4byte	.LFB66
 10562 0e50 02000000 		.4byte	.LCFI195
 10563 0e54 0200     		.2byte	0x2
 10564 0e56 7D       		.byte	0x7d
 10565 0e57 00       		.sleb128 0
 10566 0e58 02000000 		.4byte	.LCFI195
 10567 0e5c 04000000 		.4byte	.LCFI196
 10568 0e60 0200     		.2byte	0x2
 10569 0e62 7D       		.byte	0x7d
 10570 0e63 08       		.sleb128 8
 10571 0e64 04000000 		.4byte	.LCFI196
 10572 0e68 06000000 		.4byte	.LCFI197
 10573 0e6c 0200     		.2byte	0x2
 10574 0e6e 7D       		.byte	0x7d
 10575 0e6f 10       		.sleb128 16
 10576 0e70 06000000 		.4byte	.LCFI197
 10577 0e74 1E000000 		.4byte	.LFE66
 10578 0e78 0200     		.2byte	0x2
 10579 0e7a 77       		.byte	0x77
 10580 0e7b 10       		.sleb128 16
 10581 0e7c 00000000 		.4byte	0
 10582 0e80 00000000 		.4byte	0
 10583              	.LLST67:
 10584 0e84 00000000 		.4byte	.LFB67
 10585 0e88 02000000 		.4byte	.LCFI198
 10586 0e8c 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 218


 10587 0e8e 7D       		.byte	0x7d
 10588 0e8f 00       		.sleb128 0
 10589 0e90 02000000 		.4byte	.LCFI198
 10590 0e94 04000000 		.4byte	.LCFI199
 10591 0e98 0200     		.2byte	0x2
 10592 0e9a 7D       		.byte	0x7d
 10593 0e9b 0C       		.sleb128 12
 10594 0e9c 04000000 		.4byte	.LCFI199
 10595 0ea0 06000000 		.4byte	.LCFI200
 10596 0ea4 0200     		.2byte	0x2
 10597 0ea6 7D       		.byte	0x7d
 10598 0ea7 20       		.sleb128 32
 10599 0ea8 06000000 		.4byte	.LCFI200
 10600 0eac F4000000 		.4byte	.LFE67
 10601 0eb0 0200     		.2byte	0x2
 10602 0eb2 77       		.byte	0x77
 10603 0eb3 20       		.sleb128 32
 10604 0eb4 00000000 		.4byte	0
 10605 0eb8 00000000 		.4byte	0
 10606              	.LLST68:
 10607 0ebc 00000000 		.4byte	.LFB68
 10608 0ec0 02000000 		.4byte	.LCFI201
 10609 0ec4 0200     		.2byte	0x2
 10610 0ec6 7D       		.byte	0x7d
 10611 0ec7 00       		.sleb128 0
 10612 0ec8 02000000 		.4byte	.LCFI201
 10613 0ecc 04000000 		.4byte	.LCFI202
 10614 0ed0 0200     		.2byte	0x2
 10615 0ed2 7D       		.byte	0x7d
 10616 0ed3 0C       		.sleb128 12
 10617 0ed4 04000000 		.4byte	.LCFI202
 10618 0ed8 06000000 		.4byte	.LCFI203
 10619 0edc 0200     		.2byte	0x2
 10620 0ede 7D       		.byte	0x7d
 10621 0edf 28       		.sleb128 40
 10622 0ee0 06000000 		.4byte	.LCFI203
 10623 0ee4 86000000 		.4byte	.LFE68
 10624 0ee8 0200     		.2byte	0x2
 10625 0eea 77       		.byte	0x77
 10626 0eeb 20       		.sleb128 32
 10627 0eec 00000000 		.4byte	0
 10628 0ef0 00000000 		.4byte	0
 10629              	.LLST69:
 10630 0ef4 00000000 		.4byte	.LFB69
 10631 0ef8 02000000 		.4byte	.LCFI204
 10632 0efc 0200     		.2byte	0x2
 10633 0efe 7D       		.byte	0x7d
 10634 0eff 00       		.sleb128 0
 10635 0f00 02000000 		.4byte	.LCFI204
 10636 0f04 04000000 		.4byte	.LCFI205
 10637 0f08 0200     		.2byte	0x2
 10638 0f0a 7D       		.byte	0x7d
 10639 0f0b 08       		.sleb128 8
 10640 0f0c 04000000 		.4byte	.LCFI205
 10641 0f10 06000000 		.4byte	.LCFI206
 10642 0f14 0200     		.2byte	0x2
 10643 0f16 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 219


 10644 0f17 10       		.sleb128 16
 10645 0f18 06000000 		.4byte	.LCFI206
 10646 0f1c 30000000 		.4byte	.LFE69
 10647 0f20 0200     		.2byte	0x2
 10648 0f22 77       		.byte	0x77
 10649 0f23 10       		.sleb128 16
 10650 0f24 00000000 		.4byte	0
 10651 0f28 00000000 		.4byte	0
 10652              	.LLST70:
 10653 0f2c 00000000 		.4byte	.LFB70
 10654 0f30 02000000 		.4byte	.LCFI207
 10655 0f34 0200     		.2byte	0x2
 10656 0f36 7D       		.byte	0x7d
 10657 0f37 00       		.sleb128 0
 10658 0f38 02000000 		.4byte	.LCFI207
 10659 0f3c 04000000 		.4byte	.LCFI208
 10660 0f40 0200     		.2byte	0x2
 10661 0f42 7D       		.byte	0x7d
 10662 0f43 08       		.sleb128 8
 10663 0f44 04000000 		.4byte	.LCFI208
 10664 0f48 06000000 		.4byte	.LCFI209
 10665 0f4c 0200     		.2byte	0x2
 10666 0f4e 7D       		.byte	0x7d
 10667 0f4f 10       		.sleb128 16
 10668 0f50 06000000 		.4byte	.LCFI209
 10669 0f54 24000000 		.4byte	.LFE70
 10670 0f58 0200     		.2byte	0x2
 10671 0f5a 77       		.byte	0x77
 10672 0f5b 10       		.sleb128 16
 10673 0f5c 00000000 		.4byte	0
 10674 0f60 00000000 		.4byte	0
 10675              	.LLST71:
 10676 0f64 00000000 		.4byte	.LFB71
 10677 0f68 02000000 		.4byte	.LCFI210
 10678 0f6c 0200     		.2byte	0x2
 10679 0f6e 7D       		.byte	0x7d
 10680 0f6f 00       		.sleb128 0
 10681 0f70 02000000 		.4byte	.LCFI210
 10682 0f74 04000000 		.4byte	.LCFI211
 10683 0f78 0200     		.2byte	0x2
 10684 0f7a 7D       		.byte	0x7d
 10685 0f7b 08       		.sleb128 8
 10686 0f7c 04000000 		.4byte	.LCFI211
 10687 0f80 06000000 		.4byte	.LCFI212
 10688 0f84 0200     		.2byte	0x2
 10689 0f86 7D       		.byte	0x7d
 10690 0f87 20       		.sleb128 32
 10691 0f88 06000000 		.4byte	.LCFI212
 10692 0f8c BC000000 		.4byte	.LFE71
 10693 0f90 0200     		.2byte	0x2
 10694 0f92 77       		.byte	0x77
 10695 0f93 20       		.sleb128 32
 10696 0f94 00000000 		.4byte	0
 10697 0f98 00000000 		.4byte	0
 10698              	.LLST72:
 10699 0f9c 00000000 		.4byte	.LFB72
 10700 0fa0 02000000 		.4byte	.LCFI213
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 220


 10701 0fa4 0200     		.2byte	0x2
 10702 0fa6 7D       		.byte	0x7d
 10703 0fa7 00       		.sleb128 0
 10704 0fa8 02000000 		.4byte	.LCFI213
 10705 0fac 04000000 		.4byte	.LCFI214
 10706 0fb0 0200     		.2byte	0x2
 10707 0fb2 7D       		.byte	0x7d
 10708 0fb3 0C       		.sleb128 12
 10709 0fb4 04000000 		.4byte	.LCFI214
 10710 0fb8 06000000 		.4byte	.LCFI215
 10711 0fbc 0200     		.2byte	0x2
 10712 0fbe 7D       		.byte	0x7d
 10713 0fbf 38       		.sleb128 56
 10714 0fc0 06000000 		.4byte	.LCFI215
 10715 0fc4 54010000 		.4byte	.LFE72
 10716 0fc8 0200     		.2byte	0x2
 10717 0fca 77       		.byte	0x77
 10718 0fcb 30       		.sleb128 48
 10719 0fcc 00000000 		.4byte	0
 10720 0fd0 00000000 		.4byte	0
 10721              		.section	.debug_aranges,"",%progbits
 10722 0000 5C020000 		.4byte	0x25c
 10723 0004 0200     		.2byte	0x2
 10724 0006 00000000 		.4byte	.Ldebug_info0
 10725 000a 04       		.byte	0x4
 10726 000b 00       		.byte	0
 10727 000c 0000     		.2byte	0
 10728 000e 0000     		.2byte	0
 10729 0010 00000000 		.4byte	.LFB0
 10730 0014 0E000000 		.4byte	.LFE0-.LFB0
 10731 0018 00000000 		.4byte	.LFB1
 10732 001c 0E000000 		.4byte	.LFE1-.LFB1
 10733 0020 00000000 		.4byte	.LFB2
 10734 0024 18010000 		.4byte	.LFE2-.LFB2
 10735 0028 00000000 		.4byte	.LFB3
 10736 002c 84010000 		.4byte	.LFE3-.LFB3
 10737 0030 00000000 		.4byte	.LFB4
 10738 0034 48000000 		.4byte	.LFE4-.LFB4
 10739 0038 00000000 		.4byte	.LFB5
 10740 003c 4E000000 		.4byte	.LFE5-.LFB5
 10741 0040 00000000 		.4byte	.LFB6
 10742 0044 1A000000 		.4byte	.LFE6-.LFB6
 10743 0048 00000000 		.4byte	.LFB7
 10744 004c 1A000000 		.4byte	.LFE7-.LFB7
 10745 0050 00000000 		.4byte	.LFB8
 10746 0054 1A000000 		.4byte	.LFE8-.LFB8
 10747 0058 00000000 		.4byte	.LFB9
 10748 005c 22000000 		.4byte	.LFE9-.LFB9
 10749 0060 00000000 		.4byte	.LFB10
 10750 0064 1A000000 		.4byte	.LFE10-.LFB10
 10751 0068 00000000 		.4byte	.LFB11
 10752 006c 22000000 		.4byte	.LFE11-.LFB11
 10753 0070 00000000 		.4byte	.LFB12
 10754 0074 1A000000 		.4byte	.LFE12-.LFB12
 10755 0078 00000000 		.4byte	.LFB13
 10756 007c 22000000 		.4byte	.LFE13-.LFB13
 10757 0080 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 221


 10758 0084 1E000000 		.4byte	.LFE14-.LFB14
 10759 0088 00000000 		.4byte	.LFB15
 10760 008c 1E000000 		.4byte	.LFE15-.LFB15
 10761 0090 00000000 		.4byte	.LFB16
 10762 0094 1E000000 		.4byte	.LFE16-.LFB16
 10763 0098 00000000 		.4byte	.LFB17
 10764 009c 82000000 		.4byte	.LFE17-.LFB17
 10765 00a0 00000000 		.4byte	.LFB18
 10766 00a4 52000000 		.4byte	.LFE18-.LFB18
 10767 00a8 00000000 		.4byte	.LFB19
 10768 00ac 82000000 		.4byte	.LFE19-.LFB19
 10769 00b0 00000000 		.4byte	.LFB20
 10770 00b4 52000000 		.4byte	.LFE20-.LFB20
 10771 00b8 00000000 		.4byte	.LFB21
 10772 00bc 36000000 		.4byte	.LFE21-.LFB21
 10773 00c0 00000000 		.4byte	.LFB22
 10774 00c4 38000000 		.4byte	.LFE22-.LFB22
 10775 00c8 00000000 		.4byte	.LFB23
 10776 00cc 44000000 		.4byte	.LFE23-.LFB23
 10777 00d0 00000000 		.4byte	.LFB24
 10778 00d4 38000000 		.4byte	.LFE24-.LFB24
 10779 00d8 00000000 		.4byte	.LFB25
 10780 00dc 44000000 		.4byte	.LFE25-.LFB25
 10781 00e0 00000000 		.4byte	.LFB26
 10782 00e4 44000000 		.4byte	.LFE26-.LFB26
 10783 00e8 00000000 		.4byte	.LFB27
 10784 00ec 38000000 		.4byte	.LFE27-.LFB27
 10785 00f0 00000000 		.4byte	.LFB28
 10786 00f4 34000000 		.4byte	.LFE28-.LFB28
 10787 00f8 00000000 		.4byte	.LFB29
 10788 00fc 34000000 		.4byte	.LFE29-.LFB29
 10789 0100 00000000 		.4byte	.LFB30
 10790 0104 36000000 		.4byte	.LFE30-.LFB30
 10791 0108 00000000 		.4byte	.LFB31
 10792 010c 2E000000 		.4byte	.LFE31-.LFB31
 10793 0110 00000000 		.4byte	.LFB32
 10794 0114 38000000 		.4byte	.LFE32-.LFB32
 10795 0118 00000000 		.4byte	.LFB33
 10796 011c 30000000 		.4byte	.LFE33-.LFB33
 10797 0120 00000000 		.4byte	.LFB34
 10798 0124 30000000 		.4byte	.LFE34-.LFB34
 10799 0128 00000000 		.4byte	.LFB35
 10800 012c 36000000 		.4byte	.LFE35-.LFB35
 10801 0130 00000000 		.4byte	.LFB36
 10802 0134 2E000000 		.4byte	.LFE36-.LFB36
 10803 0138 00000000 		.4byte	.LFB37
 10804 013c 18000000 		.4byte	.LFE37-.LFB37
 10805 0140 00000000 		.4byte	.LFB38
 10806 0144 38000000 		.4byte	.LFE38-.LFB38
 10807 0148 00000000 		.4byte	.LFB39
 10808 014c 50000000 		.4byte	.LFE39-.LFB39
 10809 0150 00000000 		.4byte	.LFB40
 10810 0154 68000000 		.4byte	.LFE40-.LFB40
 10811 0158 00000000 		.4byte	.LFB41
 10812 015c 68000000 		.4byte	.LFE41-.LFB41
 10813 0160 00000000 		.4byte	.LFB42
 10814 0164 10010000 		.4byte	.LFE42-.LFB42
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 222


 10815 0168 00000000 		.4byte	.LFB43
 10816 016c 1C010000 		.4byte	.LFE43-.LFB43
 10817 0170 00000000 		.4byte	.LFB44
 10818 0174 E8000000 		.4byte	.LFE44-.LFB44
 10819 0178 00000000 		.4byte	.LFB45
 10820 017c 9C000000 		.4byte	.LFE45-.LFB45
 10821 0180 00000000 		.4byte	.LFB46
 10822 0184 3A010000 		.4byte	.LFE46-.LFB46
 10823 0188 00000000 		.4byte	.LFB47
 10824 018c 30020000 		.4byte	.LFE47-.LFB47
 10825 0190 00000000 		.4byte	.LFB48
 10826 0194 D4000000 		.4byte	.LFE48-.LFB48
 10827 0198 00000000 		.4byte	.LFB49
 10828 019c DC000000 		.4byte	.LFE49-.LFB49
 10829 01a0 00000000 		.4byte	.LFB50
 10830 01a4 3A000000 		.4byte	.LFE50-.LFB50
 10831 01a8 00000000 		.4byte	.LFB51
 10832 01ac 10000000 		.4byte	.LFE51-.LFB51
 10833 01b0 00000000 		.4byte	.LFB52
 10834 01b4 16000000 		.4byte	.LFE52-.LFB52
 10835 01b8 00000000 		.4byte	.LFB53
 10836 01bc 16000000 		.4byte	.LFE53-.LFB53
 10837 01c0 00000000 		.4byte	.LFB54
 10838 01c4 70010000 		.4byte	.LFE54-.LFB54
 10839 01c8 00000000 		.4byte	.LFB55
 10840 01cc 50000000 		.4byte	.LFE55-.LFB55
 10841 01d0 00000000 		.4byte	.LFB56
 10842 01d4 4C000000 		.4byte	.LFE56-.LFB56
 10843 01d8 00000000 		.4byte	.LFB57
 10844 01dc 44000000 		.4byte	.LFE57-.LFB57
 10845 01e0 00000000 		.4byte	.LFB58
 10846 01e4 8C000000 		.4byte	.LFE58-.LFB58
 10847 01e8 00000000 		.4byte	.LFB59
 10848 01ec 84000000 		.4byte	.LFE59-.LFB59
 10849 01f0 00000000 		.4byte	.LFB60
 10850 01f4 20000000 		.4byte	.LFE60-.LFB60
 10851 01f8 00000000 		.4byte	.LFB61
 10852 01fc 24000000 		.4byte	.LFE61-.LFB61
 10853 0200 00000000 		.4byte	.LFB62
 10854 0204 26000000 		.4byte	.LFE62-.LFB62
 10855 0208 00000000 		.4byte	.LFB63
 10856 020c 50000000 		.4byte	.LFE63-.LFB63
 10857 0210 00000000 		.4byte	.LFB64
 10858 0214 C0000000 		.4byte	.LFE64-.LFB64
 10859 0218 00000000 		.4byte	.LFB65
 10860 021c 20000000 		.4byte	.LFE65-.LFB65
 10861 0220 00000000 		.4byte	.LFB66
 10862 0224 1E000000 		.4byte	.LFE66-.LFB66
 10863 0228 00000000 		.4byte	.LFB67
 10864 022c F4000000 		.4byte	.LFE67-.LFB67
 10865 0230 00000000 		.4byte	.LFB68
 10866 0234 86000000 		.4byte	.LFE68-.LFB68
 10867 0238 00000000 		.4byte	.LFB69
 10868 023c 30000000 		.4byte	.LFE69-.LFB69
 10869 0240 00000000 		.4byte	.LFB70
 10870 0244 24000000 		.4byte	.LFE70-.LFB70
 10871 0248 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 223


 10872 024c BC000000 		.4byte	.LFE71-.LFB71
 10873 0250 00000000 		.4byte	.LFB72
 10874 0254 54010000 		.4byte	.LFE72-.LFB72
 10875 0258 00000000 		.4byte	0
 10876 025c 00000000 		.4byte	0
 10877              		.section	.debug_ranges,"",%progbits
 10878              	.Ldebug_ranges0:
 10879 0000 00000000 		.4byte	.LFB0
 10880 0004 0E000000 		.4byte	.LFE0
 10881 0008 00000000 		.4byte	.LFB1
 10882 000c 0E000000 		.4byte	.LFE1
 10883 0010 00000000 		.4byte	.LFB2
 10884 0014 18010000 		.4byte	.LFE2
 10885 0018 00000000 		.4byte	.LFB3
 10886 001c 84010000 		.4byte	.LFE3
 10887 0020 00000000 		.4byte	.LFB4
 10888 0024 48000000 		.4byte	.LFE4
 10889 0028 00000000 		.4byte	.LFB5
 10890 002c 4E000000 		.4byte	.LFE5
 10891 0030 00000000 		.4byte	.LFB6
 10892 0034 1A000000 		.4byte	.LFE6
 10893 0038 00000000 		.4byte	.LFB7
 10894 003c 1A000000 		.4byte	.LFE7
 10895 0040 00000000 		.4byte	.LFB8
 10896 0044 1A000000 		.4byte	.LFE8
 10897 0048 00000000 		.4byte	.LFB9
 10898 004c 22000000 		.4byte	.LFE9
 10899 0050 00000000 		.4byte	.LFB10
 10900 0054 1A000000 		.4byte	.LFE10
 10901 0058 00000000 		.4byte	.LFB11
 10902 005c 22000000 		.4byte	.LFE11
 10903 0060 00000000 		.4byte	.LFB12
 10904 0064 1A000000 		.4byte	.LFE12
 10905 0068 00000000 		.4byte	.LFB13
 10906 006c 22000000 		.4byte	.LFE13
 10907 0070 00000000 		.4byte	.LFB14
 10908 0074 1E000000 		.4byte	.LFE14
 10909 0078 00000000 		.4byte	.LFB15
 10910 007c 1E000000 		.4byte	.LFE15
 10911 0080 00000000 		.4byte	.LFB16
 10912 0084 1E000000 		.4byte	.LFE16
 10913 0088 00000000 		.4byte	.LFB17
 10914 008c 82000000 		.4byte	.LFE17
 10915 0090 00000000 		.4byte	.LFB18
 10916 0094 52000000 		.4byte	.LFE18
 10917 0098 00000000 		.4byte	.LFB19
 10918 009c 82000000 		.4byte	.LFE19
 10919 00a0 00000000 		.4byte	.LFB20
 10920 00a4 52000000 		.4byte	.LFE20
 10921 00a8 00000000 		.4byte	.LFB21
 10922 00ac 36000000 		.4byte	.LFE21
 10923 00b0 00000000 		.4byte	.LFB22
 10924 00b4 38000000 		.4byte	.LFE22
 10925 00b8 00000000 		.4byte	.LFB23
 10926 00bc 44000000 		.4byte	.LFE23
 10927 00c0 00000000 		.4byte	.LFB24
 10928 00c4 38000000 		.4byte	.LFE24
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 224


 10929 00c8 00000000 		.4byte	.LFB25
 10930 00cc 44000000 		.4byte	.LFE25
 10931 00d0 00000000 		.4byte	.LFB26
 10932 00d4 44000000 		.4byte	.LFE26
 10933 00d8 00000000 		.4byte	.LFB27
 10934 00dc 38000000 		.4byte	.LFE27
 10935 00e0 00000000 		.4byte	.LFB28
 10936 00e4 34000000 		.4byte	.LFE28
 10937 00e8 00000000 		.4byte	.LFB29
 10938 00ec 34000000 		.4byte	.LFE29
 10939 00f0 00000000 		.4byte	.LFB30
 10940 00f4 36000000 		.4byte	.LFE30
 10941 00f8 00000000 		.4byte	.LFB31
 10942 00fc 2E000000 		.4byte	.LFE31
 10943 0100 00000000 		.4byte	.LFB32
 10944 0104 38000000 		.4byte	.LFE32
 10945 0108 00000000 		.4byte	.LFB33
 10946 010c 30000000 		.4byte	.LFE33
 10947 0110 00000000 		.4byte	.LFB34
 10948 0114 30000000 		.4byte	.LFE34
 10949 0118 00000000 		.4byte	.LFB35
 10950 011c 36000000 		.4byte	.LFE35
 10951 0120 00000000 		.4byte	.LFB36
 10952 0124 2E000000 		.4byte	.LFE36
 10953 0128 00000000 		.4byte	.LFB37
 10954 012c 18000000 		.4byte	.LFE37
 10955 0130 00000000 		.4byte	.LFB38
 10956 0134 38000000 		.4byte	.LFE38
 10957 0138 00000000 		.4byte	.LFB39
 10958 013c 50000000 		.4byte	.LFE39
 10959 0140 00000000 		.4byte	.LFB40
 10960 0144 68000000 		.4byte	.LFE40
 10961 0148 00000000 		.4byte	.LFB41
 10962 014c 68000000 		.4byte	.LFE41
 10963 0150 00000000 		.4byte	.LFB42
 10964 0154 10010000 		.4byte	.LFE42
 10965 0158 00000000 		.4byte	.LFB43
 10966 015c 1C010000 		.4byte	.LFE43
 10967 0160 00000000 		.4byte	.LFB44
 10968 0164 E8000000 		.4byte	.LFE44
 10969 0168 00000000 		.4byte	.LFB45
 10970 016c 9C000000 		.4byte	.LFE45
 10971 0170 00000000 		.4byte	.LFB46
 10972 0174 3A010000 		.4byte	.LFE46
 10973 0178 00000000 		.4byte	.LFB47
 10974 017c 30020000 		.4byte	.LFE47
 10975 0180 00000000 		.4byte	.LFB48
 10976 0184 D4000000 		.4byte	.LFE48
 10977 0188 00000000 		.4byte	.LFB49
 10978 018c DC000000 		.4byte	.LFE49
 10979 0190 00000000 		.4byte	.LFB50
 10980 0194 3A000000 		.4byte	.LFE50
 10981 0198 00000000 		.4byte	.LFB51
 10982 019c 10000000 		.4byte	.LFE51
 10983 01a0 00000000 		.4byte	.LFB52
 10984 01a4 16000000 		.4byte	.LFE52
 10985 01a8 00000000 		.4byte	.LFB53
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 225


 10986 01ac 16000000 		.4byte	.LFE53
 10987 01b0 00000000 		.4byte	.LFB54
 10988 01b4 70010000 		.4byte	.LFE54
 10989 01b8 00000000 		.4byte	.LFB55
 10990 01bc 50000000 		.4byte	.LFE55
 10991 01c0 00000000 		.4byte	.LFB56
 10992 01c4 4C000000 		.4byte	.LFE56
 10993 01c8 00000000 		.4byte	.LFB57
 10994 01cc 44000000 		.4byte	.LFE57
 10995 01d0 00000000 		.4byte	.LFB58
 10996 01d4 8C000000 		.4byte	.LFE58
 10997 01d8 00000000 		.4byte	.LFB59
 10998 01dc 84000000 		.4byte	.LFE59
 10999 01e0 00000000 		.4byte	.LFB60
 11000 01e4 20000000 		.4byte	.LFE60
 11001 01e8 00000000 		.4byte	.LFB61
 11002 01ec 24000000 		.4byte	.LFE61
 11003 01f0 00000000 		.4byte	.LFB62
 11004 01f4 26000000 		.4byte	.LFE62
 11005 01f8 00000000 		.4byte	.LFB63
 11006 01fc 50000000 		.4byte	.LFE63
 11007 0200 00000000 		.4byte	.LFB64
 11008 0204 C0000000 		.4byte	.LFE64
 11009 0208 00000000 		.4byte	.LFB65
 11010 020c 20000000 		.4byte	.LFE65
 11011 0210 00000000 		.4byte	.LFB66
 11012 0214 1E000000 		.4byte	.LFE66
 11013 0218 00000000 		.4byte	.LFB67
 11014 021c F4000000 		.4byte	.LFE67
 11015 0220 00000000 		.4byte	.LFB68
 11016 0224 86000000 		.4byte	.LFE68
 11017 0228 00000000 		.4byte	.LFB69
 11018 022c 30000000 		.4byte	.LFE69
 11019 0230 00000000 		.4byte	.LFB70
 11020 0234 24000000 		.4byte	.LFE70
 11021 0238 00000000 		.4byte	.LFB71
 11022 023c BC000000 		.4byte	.LFE71
 11023 0240 00000000 		.4byte	.LFB72
 11024 0244 54010000 		.4byte	.LFE72
 11025 0248 00000000 		.4byte	0
 11026 024c 00000000 		.4byte	0
 11027              		.section	.debug_line,"",%progbits
 11028              	.Ldebug_line0:
 11029 0000 FD080000 		.section	.debug_str,"MS",%progbits,1
 11029      02004200 
 11029      00000201 
 11029      FB0E0D00 
 11029      01010101 
 11030              	.LASF70:
 11031 0000 4554485F 		.ascii	"ETH_SetSocketDestIP\000"
 11031      53657453 
 11031      6F636B65 
 11031      74446573 
 11031      74495000 
 11032              	.LASF47:
 11033 0014 4554485F 		.ascii	"ETH_GetSubnetMask\000"
 11033      47657453 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 226


 11033      75626E65 
 11033      744D6173 
 11033      6B00
 11034              	.LASF10:
 11035 0026 75696E74 		.ascii	"uint16\000"
 11035      313600
 11036              	.LASF30:
 11037 002d 63726974 		.ascii	"crit\000"
 11037      00
 11038              	.LASF42:
 11039 0032 4554485F 		.ascii	"ETH_GetSourceMAC\000"
 11039      47657453 
 11039      6F757263 
 11039      654D4143 
 11039      00
 11040              	.LASF103:
 11041 0043 4554485F 		.ascii	"ETH_ParseMAC\000"
 11041      50617273 
 11041      654D4143 
 11041      00
 11042              	.LASF128:
 11043 0050 54785369 		.ascii	"TxSize\000"
 11043      7A6500
 11044              	.LASF55:
 11045 0057 736F636B 		.ascii	"socket\000"
 11045      657400
 11046              	.LASF54:
 11047 005e 4554485F 		.ascii	"ETH_SetSocketRxMemSize\000"
 11047      53657453 
 11047      6F636B65 
 11047      7452784D 
 11047      656D5369 
 11048              	.LASF135:
 11049 0075 4554485F 		.ascii	"ETH_UdpReceive\000"
 11049      55647052 
 11049      65636569 
 11049      766500
 11050              	.LASF122:
 11051 0084 4554485F 		.ascii	"ETH_TcpStartServer\000"
 11051      54637053 
 11051      74617274 
 11051      53657276 
 11051      657200
 11052              	.LASF136:
 11053 0097 5061636B 		.ascii	"PacketSize\000"
 11053      65745369 
 11053      7A6500
 11054              	.LASF23:
 11055 00a2 4554485F 		.ascii	"ETH_SOCKET\000"
 11055      534F434B 
 11055      455400
 11056              	.LASF48:
 11057 00ad 4554485F 		.ascii	"ETH_SetSourceIP\000"
 11057      53657453 
 11057      6F757263 
 11057      65495000 
 11058              	.LASF126:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 227


 11059 00bd 4554485F 		.ascii	"ETH_TcpDisconnect\000"
 11059      54637044 
 11059      6973636F 
 11059      6E6E6563 
 11059      7400
 11060              	.LASF96:
 11061 00cf 696E6465 		.ascii	"index\000"
 11061      7800
 11062              	.LASF7:
 11063 00d5 6C6F6E67 		.ascii	"long long unsigned int\000"
 11063      206C6F6E 
 11063      6720756E 
 11063      7369676E 
 11063      65642069 
 11064              	.LASF31:
 11065 00ec 4554485F 		.ascii	"ETH_ChipWrite\000"
 11065      43686970 
 11065      57726974 
 11065      6500
 11066              	.LASF26:
 11067 00fa 61646472 		.ascii	"addr\000"
 11067      00
 11068              	.LASF17:
 11069 00ff 50726F74 		.ascii	"Protocol\000"
 11069      6F636F6C 
 11069      00
 11070              	.LASF97:
 11071 0108 4554485F 		.ascii	"ETH_Start\000"
 11071      53746172 
 11071      7400
 11072              	.LASF118:
 11073 0112 4554485F 		.ascii	"ETH_SocketSend\000"
 11073      536F636B 
 11073      65745365 
 11073      6E6400
 11074              	.LASF95:
 11075 0121 67617465 		.ascii	"gateway\000"
 11075      77617900 
 11076              	.LASF132:
 11077 0129 4554485F 		.ascii	"ETH_TcpPrint\000"
 11077      54637050 
 11077      72696E74 
 11077      00
 11078              	.LASF65:
 11079 0136 4554485F 		.ascii	"ETH_GetSocketStatus\000"
 11079      47657453 
 11079      6F636B65 
 11079      74537461 
 11079      74757300 
 11080              	.LASF143:
 11081 014a 4554485F 		.ascii	"ETH_MAC\000"
 11081      4D414300 
 11082              	.LASF6:
 11083 0152 6C6F6E67 		.ascii	"long long int\000"
 11083      206C6F6E 
 11083      6720696E 
 11083      7400
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 228


 11084              	.LASF0:
 11085 0160 7369676E 		.ascii	"signed char\000"
 11085      65642063 
 11085      68617200 
 11086              	.LASF86:
 11087 016c 4554485F 		.ascii	"ETH_ProcessTxData\000"
 11087      50726F63 
 11087      65737354 
 11087      78446174 
 11087      6100
 11088              	.LASF38:
 11089 017e 7278436F 		.ascii	"rxCount\000"
 11089      756E7400 
 11090              	.LASF19:
 11091 0186 536F7572 		.ascii	"SourcePort\000"
 11091      6365506F 
 11091      727400
 11092              	.LASF100:
 11093 0191 64696769 		.ascii	"digit\000"
 11093      7400
 11094              	.LASF78:
 11095 0197 4554485F 		.ascii	"ETH_SetSocketRxWritePtr\000"
 11095      53657453 
 11095      6F636B65 
 11095      74527857 
 11095      72697465 
 11096              	.LASF46:
 11097 01af 4554485F 		.ascii	"ETH_SetSubnetMask\000"
 11097      53657453 
 11097      75626E65 
 11097      744D6173 
 11097      6B00
 11098              	.LASF73:
 11099 01c1 4554485F 		.ascii	"ETH_SetSocketTxWritePtr\000"
 11099      53657453 
 11099      6F636B65 
 11099      74547857 
 11099      72697465 
 11100              	.LASF29:
 11101 01d9 7478436F 		.ascii	"txCount\000"
 11101      756E7400 
 11102              	.LASF130:
 11103 01e1 4554485F 		.ascii	"ETH_TcpReceive\000"
 11103      54637052 
 11103      65636569 
 11103      766500
 11104              	.LASF4:
 11105 01f0 6C6F6E67 		.ascii	"long int\000"
 11105      20696E74 
 11105      00
 11106              	.LASF102:
 11107 01f9 64696E64 		.ascii	"dindex\000"
 11107      657800
 11108              	.LASF28:
 11109 0200 74784C65 		.ascii	"txLen\000"
 11109      6E00
 11110              	.LASF9:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 229


 11111 0206 75696E74 		.ascii	"uint8\000"
 11111      3800
 11112              	.LASF77:
 11113 020c 4554485F 		.ascii	"ETH_GetSocketRxReadPtr\000"
 11113      47657453 
 11113      6F636B65 
 11113      74527852 
 11113      65616450 
 11114              	.LASF87:
 11115 0223 6F666673 		.ascii	"offset\000"
 11115      657400
 11116              	.LASF13:
 11117 022a 646F7562 		.ascii	"double\000"
 11117      6C6500
 11118              	.LASF127:
 11119 0231 4554485F 		.ascii	"ETH_TcpSend\000"
 11119      54637053 
 11119      656E6400 
 11120              	.LASF79:
 11121 023d 4554485F 		.ascii	"ETH_SetSocketTxReadPtr\000"
 11121      53657453 
 11121      6F636B65 
 11121      74547852 
 11121      65616450 
 11122              	.LASF61:
 11123 0254 4554485F 		.ascii	"ETH_SetSocketCommand\000"
 11123      53657453 
 11123      6F636B65 
 11123      74436F6D 
 11123      6D616E64 
 11124              	.LASF104:
 11125 0269 6D616353 		.ascii	"macString\000"
 11125      7472696E 
 11125      6700
 11126              	.LASF138:
 11127 0273 53504930 		.ascii	"SPI0_initVar\000"
 11127      5F696E69 
 11127      74566172 
 11127      00
 11128              	.LASF11:
 11129 0280 75696E74 		.ascii	"uint32\000"
 11129      333200
 11130              	.LASF72:
 11131 0287 4554485F 		.ascii	"ETH_GetSocketTxFree\000"
 11131      47657453 
 11131      6F636B65 
 11131      74547846 
 11131      72656500 
 11132              	.LASF69:
 11133 029b 4554485F 		.ascii	"ETH_SetSocketDestMAC\000"
 11133      53657453 
 11133      6F636B65 
 11133      74446573 
 11133      744D4143 
 11134              	.LASF137:
 11135 02b0 5061636B 		.ascii	"PacketHeader\000"
 11135      65744865 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 230


 11135      61646572 
 11135      00
 11136              	.LASF68:
 11137 02bd 706F7274 		.ascii	"port\000"
 11137      00
 11138              	.LASF110:
 11139 02c2 74656D70 		.ascii	"temp\000"
 11139      00
 11140              	.LASF57:
 11141 02c7 4554485F 		.ascii	"ETH_GetSocketRxMemSize\000"
 11141      47657453 
 11141      6F636B65 
 11141      7452784D 
 11141      656D5369 
 11142              	.LASF147:
 11143 02de 4554485F 		.ascii	"ETH_GetIP\000"
 11143      47657449 
 11143      5000
 11144              	.LASF50:
 11145 02e8 4554485F 		.ascii	"ETH_SetMode\000"
 11145      5365744D 
 11145      6F646500 
 11146              	.LASF8:
 11147 02f4 756E7369 		.ascii	"unsigned int\000"
 11147      676E6564 
 11147      20696E74 
 11147      00
 11148              	.LASF91:
 11149 0301 4554485F 		.ascii	"ETH_ProcessRxData\000"
 11149      50726F63 
 11149      65737352 
 11149      78446174 
 11149      6100
 11150              	.LASF44:
 11151 0313 4554485F 		.ascii	"ETH_ChipRead16\000"
 11151      43686970 
 11151      52656164 
 11151      313600
 11152              	.LASF58:
 11153 0322 4554485F 		.ascii	"ETH_SetSocketTxMemSize\000"
 11153      53657453 
 11153      6F636B65 
 11153      7454784D 
 11153      656D5369 
 11154              	.LASF90:
 11155 0339 506F696E 		.ascii	"PointerOffset\000"
 11155      7465724F 
 11155      66667365 
 11155      7400
 11156              	.LASF5:
 11157 0347 6C6F6E67 		.ascii	"long unsigned int\000"
 11157      20756E73 
 11157      69676E65 
 11157      6420696E 
 11157      7400
 11158              	.LASF81:
 11159 0359 74696D65 		.ascii	"timeout\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 231


 11159      6F757400 
 11160              	.LASF94:
 11161 0361 7375626E 		.ascii	"subnet\000"
 11161      657400
 11162              	.LASF56:
 11163 0368 73697A65 		.ascii	"size\000"
 11163      00
 11164              	.LASF3:
 11165 036d 73686F72 		.ascii	"short unsigned int\000"
 11165      7420756E 
 11165      7369676E 
 11165      65642069 
 11165      6E7400
 11166              	.LASF125:
 11167 0380 4554485F 		.ascii	"ETH_TcpConnected\000"
 11167      54637043 
 11167      6F6E6E65 
 11167      63746564 
 11167      00
 11168              	.LASF32:
 11169 0391 4554485F 		.ascii	"ETH_ChipRead\000"
 11169      43686970 
 11169      52656164 
 11169      00
 11170              	.LASF129:
 11171 039e 46726565 		.ascii	"FreeSpace\000"
 11171      53706163 
 11171      6500
 11172              	.LASF114:
 11173 03a8 4554485F 		.ascii	"ETH_SocketOpen\000"
 11173      536F636B 
 11173      65744F70 
 11173      656E00
 11174              	.LASF131:
 11175 03b7 52785369 		.ascii	"RxSize\000"
 11175      7A6500
 11176              	.LASF117:
 11177 03be 4554485F 		.ascii	"ETH_SocketEstablished\000"
 11177      536F636B 
 11177      65744573 
 11177      7461626C 
 11177      69736865 
 11178              	.LASF133:
 11179 03d4 4554485F 		.ascii	"ETH_UdpOpen\000"
 11179      5564704F 
 11179      70656E00 
 11180              	.LASF141:
 11181 03e0 4554485F 		.ascii	"ETH_SocketConfig\000"
 11181      536F636B 
 11181      6574436F 
 11181      6E666967 
 11181      00
 11182              	.LASF120:
 11183 03f1 4554485F 		.ascii	"ETH_SocketRxDataWaiting\000"
 11183      536F636B 
 11183      65745278 
 11183      44617461 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 232


 11183      57616974 
 11184              	.LASF82:
 11185 0409 4554485F 		.ascii	"ETH_GetTxFreeSize\000"
 11185      47657454 
 11185      78467265 
 11185      6553697A 
 11185      6500
 11186              	.LASF36:
 11187 041b 74784279 		.ascii	"txBytes\000"
 11187      74657300 
 11188              	.LASF98:
 11189 0423 4554485F 		.ascii	"ETH_ParseIP\000"
 11189      50617273 
 11189      65495000 
 11190              	.LASF124:
 11191 042f 4554485F 		.ascii	"ETH_TcpConnect\000"
 11191      54637043 
 11191      6F6E6E65 
 11191      637400
 11192              	.LASF74:
 11193 043e 4554485F 		.ascii	"ETH_GetSocketTxWritePtr\000"
 11193      47657453 
 11193      6F636B65 
 11193      74547857 
 11193      72697465 
 11194              	.LASF49:
 11195 0456 4554485F 		.ascii	"ETH_GetSourceIP\000"
 11195      47657453 
 11195      6F757263 
 11195      65495000 
 11196              	.LASF145:
 11197 0466 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ETH.c\000"
 11197      6E657261 
 11197      7465645F 
 11197      536F7572 
 11197      63655C50 
 11198              	.LASF40:
 11199 0485 62696756 		.ascii	"bigVal\000"
 11199      616C00
 11200              	.LASF16:
 11201 048c 73697A65 		.ascii	"sizetype\000"
 11201      74797065 
 11201      00
 11202              	.LASF21:
 11203 0495 54784275 		.ascii	"TxBufferSize\000"
 11203      66666572 
 11203      53697A65 
 11203      00
 11204              	.LASF34:
 11205 04a2 61646472 		.ascii	"address\000"
 11205      65737300 
 11206              	.LASF121:
 11207 04aa 4554485F 		.ascii	"ETH_TcpOpen\000"
 11207      5463704F 
 11207      70656E00 
 11208              	.LASF18:
 11209 04b6 536F636B 		.ascii	"SocketFlags\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 233


 11209      6574466C 
 11209      61677300 
 11210              	.LASF115:
 11211 04c2 4554485F 		.ascii	"ETH_SocketClose\000"
 11211      536F636B 
 11211      6574436C 
 11211      6F736500 
 11212              	.LASF112:
 11213 04d2 4554485F 		.ascii	"ETH_SetMAC\000"
 11213      5365744D 
 11213      414300
 11214              	.LASF106:
 11215 04dd 4554485F 		.ascii	"ETH_StringMAC\000"
 11215      53747269 
 11215      6E674D41 
 11215      4300
 11216              	.LASF12:
 11217 04eb 666C6F61 		.ascii	"float\000"
 11217      7400
 11218              	.LASF107:
 11219 04f1 4554485F 		.ascii	"ETH_StringIP\000"
 11219      53747269 
 11219      6E674950 
 11219      00
 11220              	.LASF108:
 11221 04fe 69704279 		.ascii	"ipBytes\000"
 11221      74657300 
 11222              	.LASF59:
 11223 0506 4554485F 		.ascii	"ETH_GetSocketTxMemSize\000"
 11223      47657453 
 11223      6F636B65 
 11223      7454784D 
 11223      656D5369 
 11224              	.LASF93:
 11225 051d 4554485F 		.ascii	"ETH_Init\000"
 11225      496E6974 
 11225      00
 11226              	.LASF144:
 11227 0526 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 11227      4320342E 
 11227      372E3320 
 11227      32303133 
 11227      30333132 
 11228 0559 616E6368 		.ascii	"anch revision 196615]\000"
 11228      20726576 
 11228      6973696F 
 11228      6E203139 
 11228      36363135 
 11229              	.LASF89:
 11230 056f 62617365 		.ascii	"base\000"
 11230      00
 11231              	.LASF1:
 11232 0574 756E7369 		.ascii	"unsigned char\000"
 11232      676E6564 
 11232      20636861 
 11232      7200
 11233              	.LASF84:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 234


 11234 0582 7365636F 		.ascii	"second\000"
 11234      6E6400
 11235              	.LASF67:
 11236 0589 4554485F 		.ascii	"ETH_SetSocketSourcePort\000"
 11236      53657453 
 11236      6F636B65 
 11236      74536F75 
 11236      72636550 
 11237              	.LASF2:
 11238 05a1 73686F72 		.ascii	"short int\000"
 11238      7420696E 
 11238      7400
 11239              	.LASF80:
 11240 05ab 4554485F 		.ascii	"ETH_ExecuteSocketCommand\000"
 11240      45786563 
 11240      75746553 
 11240      6F636B65 
 11240      74436F6D 
 11241              	.LASF101:
 11242 05c4 636F756E 		.ascii	"counter\000"
 11242      74657200 
 11243              	.LASF75:
 11244 05cc 4554485F 		.ascii	"ETH_GetSocketRxSize\000"
 11244      47657453 
 11244      6F636B65 
 11244      74527853 
 11244      697A6500 
 11245              	.LASF45:
 11246 05e0 4554485F 		.ascii	"ETH_GetGatewayAddress\000"
 11246      47657447 
 11246      61746577 
 11246      61794164 
 11246      64726573 
 11247              	.LASF146:
 11248 05f6 433A5C55 		.ascii	"C:\\Users\\chuck.erhardt\\Documents\\GitHub\\PSoC-W"
 11248      73657273 
 11248      5C636875 
 11248      636B2E65 
 11248      72686172 
 11249 0624 35313030 		.ascii	"5100-Driver\\PSoCPioneer+ArduinoShield_SPIM_Example"
 11249      2D447269 
 11249      7665725C 
 11249      50536F43 
 11249      50696F6E 
 11250 0656 2E637964 		.ascii	".cydsn\000"
 11250      736E00
 11251              	.LASF140:
 11252 065d 4554485F 		.ascii	"ETH_SOCKET_RX_BASE\000"
 11252      534F434B 
 11252      45545F52 
 11252      585F4241 
 11252      534500
 11253              	.LASF63:
 11254 0670 4554485F 		.ascii	"ETH_SetSocketIR\000"
 11254      53657453 
 11254      6F636B65 
 11254      74495200 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 235


 11255              	.LASF99:
 11256 0680 69705374 		.ascii	"ipString\000"
 11256      72696E67 
 11256      00
 11257              	.LASF20:
 11258 0689 53657276 		.ascii	"ServerFlag\000"
 11258      6572466C 
 11258      616700
 11259              	.LASF116:
 11260 0694 4554485F 		.ascii	"ETH_SocketProcessConnections\000"
 11260      536F636B 
 11260      65745072 
 11260      6F636573 
 11260      73436F6E 
 11261              	.LASF139:
 11262 06b1 4554485F 		.ascii	"ETH_SOCKET_TX_BASE\000"
 11262      534F434B 
 11262      45545F54 
 11262      585F4241 
 11262      534500
 11263              	.LASF83:
 11264 06c4 66697273 		.ascii	"first\000"
 11264      7400
 11265              	.LASF27:
 11266 06ca 6C656E67 		.ascii	"length\000"
 11266      746800
 11267              	.LASF14:
 11268 06d1 63686172 		.ascii	"char\000"
 11268      00
 11269              	.LASF51:
 11270 06d6 6D6F6465 		.ascii	"mode\000"
 11270      00
 11271              	.LASF24:
 11272 06db 4554485F 		.ascii	"ETH_ChipSelect\000"
 11272      43686970 
 11272      53656C65 
 11272      637400
 11273              	.LASF123:
 11274 06ea 4554485F 		.ascii	"ETH_TcpStartServerWait\000"
 11274      54637053 
 11274      74617274 
 11274      53657276 
 11274      65725761 
 11275              	.LASF22:
 11276 0701 52784275 		.ascii	"RxBufferSize\000"
 11276      66666572 
 11276      53697A65 
 11276      00
 11277              	.LASF62:
 11278 070e 4554485F 		.ascii	"ETH_GetSocketCommand\000"
 11278      47657453 
 11278      6F636B65 
 11278      74436F6D 
 11278      6D616E64 
 11279              	.LASF119:
 11280 0723 4554485F 		.ascii	"ETH_SocketSendMac\000"
 11280      536F636B 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 236


 11280      65745365 
 11280      6E644D61 
 11280      6300
 11281              	.LASF41:
 11282 0735 4554485F 		.ascii	"ETH_SetSourceMAC\000"
 11282      53657453 
 11282      6F757263 
 11282      654D4143 
 11282      00
 11283              	.LASF88:
 11284 0746 62756666 		.ascii	"buffer\000"
 11284      657200
 11285              	.LASF64:
 11286 074d 4554485F 		.ascii	"ETH_GetSocketIR\000"
 11286      47657453 
 11286      6F636B65 
 11286      74495200 
 11287              	.LASF109:
 11288 075d 776F726B 		.ascii	"work\000"
 11288      00
 11289              	.LASF39:
 11290 0762 4554485F 		.ascii	"ETH_ChipWrite16\000"
 11290      43686970 
 11290      57726974 
 11290      65313600 
 11291              	.LASF85:
 11292 0772 4554485F 		.ascii	"ETH_GetRxSize\000"
 11292      47657452 
 11292      7853697A 
 11292      6500
 11293              	.LASF43:
 11294 0780 4554485F 		.ascii	"ETH_SetGatewayAddress\000"
 11294      53657447 
 11294      61746577 
 11294      61794164 
 11294      64726573 
 11295              	.LASF52:
 11296 0796 4554485F 		.ascii	"ETH_GetMode\000"
 11296      4765744D 
 11296      6F646500 
 11297              	.LASF111:
 11298 07a2 4554485F 		.ascii	"ETH_SetIP\000"
 11298      53657449 
 11298      5000
 11299              	.LASF53:
 11300 07ac 4554485F 		.ascii	"ETH_SetIR\000"
 11300      53657449 
 11300      5200
 11301              	.LASF134:
 11302 07b6 4554485F 		.ascii	"ETH_UdpSend\000"
 11302      55647053 
 11302      656E6400 
 11303              	.LASF37:
 11304 07c2 64756D70 		.ascii	"dump\000"
 11304      00
 11305              	.LASF66:
 11306 07c7 73746174 		.ascii	"status\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccqRDOhk.s 			page 237


 11306      757300
 11307              	.LASF113:
 11308 07ce 4554485F 		.ascii	"ETH_GetMAC\000"
 11308      4765744D 
 11308      414300
 11309              	.LASF92:
 11310 07d9 666C6167 		.ascii	"flags\000"
 11310      7300
 11311              	.LASF142:
 11312 07df 4554485F 		.ascii	"ETH_SubnetMask\000"
 11312      5375626E 
 11312      65744D61 
 11312      736B00
 11313              	.LASF60:
 11314 07ee 4554485F 		.ascii	"ETH_SetSocketMode\000"
 11314      53657453 
 11314      6F636B65 
 11314      744D6F64 
 11314      6500
 11315              	.LASF15:
 11316 0800 63797374 		.ascii	"cystatus\000"
 11316      61747573 
 11316      00
 11317              	.LASF33:
 11318 0809 7278496E 		.ascii	"rxIndex\000"
 11318      64657800 
 11319              	.LASF76:
 11320 0811 4554485F 		.ascii	"ETH_SetSocketRxReadPtr\000"
 11320      53657453 
 11320      6F636B65 
 11320      74527852 
 11320      65616450 
 11321              	.LASF35:
 11322 0828 72784C65 		.ascii	"rxLen\000"
 11322      6E00
 11323              	.LASF25:
 11324 082e 4554485F 		.ascii	"ETH_ChipDeSelect\000"
 11324      43686970 
 11324      44655365 
 11324      6C656374 
 11324      00
 11325              	.LASF105:
 11326 083f 72657375 		.ascii	"result\000"
 11326      6C7400
 11327              	.LASF71:
 11328 0846 4554485F 		.ascii	"ETH_SetSocketDestPort\000"
 11328      53657453 
 11328      6F636B65 
 11328      74446573 
 11328      74506F72 
 11329              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
