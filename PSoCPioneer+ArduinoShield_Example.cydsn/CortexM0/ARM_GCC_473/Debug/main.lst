ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	randomData,2000,4
  18              		.global	__aeabi_idivmod
  19              		.section	.rodata
  20              		.align	2
  21              	.LC1:
  22 0000 57656C63 		.ascii	"Welcome to the PSoC4 Pioneer Board!\015\012\000"
  22      6F6D6520 
  22      746F2074 
  22      68652050 
  22      536F4334 
  23 0026 0000     		.align	2
  24              	.LC3:
  25 0028 2D2D2D2D 		.ascii	"---------------------------------------------------"
  25      2D2D2D2D 
  25      2D2D2D2D 
  25      2D2D2D2D 
  25      2D2D2D2D 
  26 005b 2D2D2D2D 		.ascii	"-------------------------\015\012\015\012\000"
  26      2D2D2D2D 
  26      2D2D2D2D 
  26      2D2D2D2D 
  26      2D2D2D2D 
  27 0079 000000   		.align	2
  28              	.LC5:
  29 007c 506C6561 		.ascii	"Please Press a key: \000"
  29      73652050 
  29      72657373 
  29      2061206B 
  29      65793A20 
  30 0091 000000   		.align	2
  31              	.LC7:
  32 0094 5C200D00 		.ascii	"\\ \015\000"
  33              		.align	2
  34              	.LC9:
  35 0098 7C0D00   		.ascii	"|\015\000"
  36 009b 00       		.align	2
  37              	.LC11:
  38 009c 2F0D00   		.ascii	"/\015\000"
  39 009f 00       		.align	2
  40              	.LC13:
  41 00a0 2D0D00   		.ascii	"-\015\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 2


  42 00a3 00       		.align	2
  43              	.LC15:
  44 00a4 0D0A5468 		.ascii	"\015\012Thank You! :-) \000"
  44      616E6B20 
  44      596F7521 
  44      203A2D29 
  44      2000
  45 00b6 0000     		.section	.text.main,"ax",%progbits
  46              		.align	2
  47              		.global	main
  48              		.code	16
  49              		.thumb_func
  50              		.type	main, %function
  51              	main:
  52              	.LFB33:
  53              		.file 1 ".\\main.c"
   1:.\main.c      **** /**
   2:.\main.c      ****  * \file Arduino Ethernet shield Example
   3:.\main.c      ****  * \author Chuck Erhardt (chuck@e2forlife.com)
   4:.\main.c      ****  * 
   5:.\main.c      ****  * This is a real simple example project to connect the
   6:.\main.c      ****  * PSoC4 Pioneer board to the Arduino Ethernet shield board.
   7:.\main.c      ****  *
   8:.\main.c      ****  * Copyright notice:
   9:.\main.c      ****  *
  10:.\main.c      ****  *
  11:.\main.c      ****  * Dscaimer: 
  12:.\main.c      ****  * This software is provided as-is for demonstration and
  13:.\main.c      ****  * educational purposes only.  No warranty is expressed or
  14:.\main.c      ****  * implied; The sole responsibility of the verification
  15:.\main.c      ****  * on your platform is your own.
  16:.\main.c      ****  */
  17:.\main.c      **** #include <project.h>
  18:.\main.c      **** #include <stdio.h>   /* sprintf() */
  19:.\main.c      **** #include <string.h>  /* for STRLEN() */
  20:.\main.c      **** #include <stdlib.h>  /* for RAND() */
  21:.\main.c      **** 
  22:.\main.c      **** char randomData[2000];
  23:.\main.c      **** 
  24:.\main.c      **** int main()
  25:.\main.c      **** {
  54              		.loc 1 25 0
  55              		.cfi_startproc
  56 0000 90B5     		push	{r4, r7, lr}
  57              	.LCFI0:
  58              		.cfi_def_cfa_offset 12
  59              		.cfi_offset 4, -12
  60              		.cfi_offset 7, -8
  61              		.cfi_offset 14, -4
  62 0002 A5B0     		sub	sp, sp, #148
  63              	.LCFI1:
  64              		.cfi_def_cfa_offset 160
  65 0004 00AF     		add	r7, sp, #0
  66              	.LCFI2:
  67              		.cfi_def_cfa_register 7
  26:.\main.c      **** 	char buffer[128];
  27:.\main.c      **** 	uint8 socket;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 3


  28:.\main.c      **** 	uint16 length;
  29:.\main.c      **** 	int temp;
  30:.\main.c      **** 	uint8 red;
  31:.\main.c      **** 	uint8 green;
  32:.\main.c      **** 	uint8 blue;
  33:.\main.c      **** 	
  34:.\main.c      ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  35:.\main.c      **** 	SPI0_Start();
  68              		.loc 1 35 0
  69 0006 FFF7FEFF 		bl	SPI0_Start
  36:.\main.c      **** 	ETH0_Start();
  70              		.loc 1 36 0
  71 000a FFF7FEFF 		bl	ETH0_Start
  37:.\main.c      **** 	LED0_Start();
  72              		.loc 1 37 0
  73 000e FFF7FEFF 		bl	LED0_Start
  38:.\main.c      **** 	LED1_Start();
  74              		.loc 1 38 0
  75 0012 FFF7FEFF 		bl	LED1_Start
  39:.\main.c      **** 	SDCS_Write(1);
  76              		.loc 1 39 0
  77 0016 0120     		mov	r0, #1
  78 0018 FFF7FEFF 		bl	SDCS_Write
  40:.\main.c      **** 	
  41:.\main.c      **** 	/* Generate some random bytes to transmit to the Ethernet client */
  42:.\main.c      **** 	for (temp = 0; temp < 2000; ++temp)
  79              		.loc 1 42 0
  80 001c 0023     		mov	r3, #0
  81 001e 8C20     		mov	r0, #140
  82 0020 C019     		add	r0, r0, r7
  83 0022 0360     		str	r3, [r0]
  84 0024 15E0     		b	.L2
  85              	.L3:
  43:.\main.c      **** 	{
  44:.\main.c      **** 		randomData[temp] = (rand()&0x17) + 'A';
  86              		.loc 1 44 0 discriminator 2
  87 0026 FFF7FEFF 		bl	rand
  88 002a 031C     		mov	r3, r0
  89 002c DAB2     		uxtb	r2, r3
  90 002e 1723     		mov	r3, #23
  91 0030 1340     		and	r3, r2
  92 0032 DBB2     		uxtb	r3, r3
  93 0034 4133     		add	r3, r3, #65
  94 0036 DAB2     		uxtb	r2, r3
  95 0038 9C49     		ldr	r1, .L15
  96 003a 8C20     		mov	r0, #140
  97 003c C019     		add	r0, r0, r7
  98 003e 0368     		ldr	r3, [r0]
  99 0040 CB18     		add	r3, r1, r3
 100 0042 1A70     		strb	r2, [r3]
  42:.\main.c      **** 	for (temp = 0; temp < 2000; ++temp)
 101              		.loc 1 42 0 discriminator 2
 102 0044 8C22     		mov	r2, #140
 103 0046 D219     		add	r2, r2, r7
 104 0048 1368     		ldr	r3, [r2]
 105 004a 0133     		add	r3, r3, #1
 106 004c 8C20     		mov	r0, #140
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 4


 107 004e C019     		add	r0, r0, r7
 108 0050 0360     		str	r3, [r0]
 109              	.L2:
  42:.\main.c      **** 	for (temp = 0; temp < 2000; ++temp)
 110              		.loc 1 42 0 is_stmt 0 discriminator 1
 111 0052 8C23     		mov	r3, #140
 112 0054 DB19     		add	r3, r3, r7
 113 0056 1A68     		ldr	r2, [r3]
 114 0058 954B     		ldr	r3, .L15+4
 115 005a 9A42     		cmp	r2, r3
 116 005c E3DD     		ble	.L3
  45:.\main.c      **** 	}
  46:.\main.c      **** //    CyGlobalIntEnable; /* Uncomment this line to enable global interrupts. */
  47:.\main.c      **** 	
  48:.\main.c      **** 	/*
  49:.\main.c      **** 	 * initialize the local variables to produce a
  50:.\main.c      **** 	 * (somewhat) random default color for the LED
  51:.\main.c      **** 	 */
  52:.\main.c      **** 	red = rand()&0xFF;
 117              		.loc 1 52 0 is_stmt 1
 118 005e FFF7FEFF 		bl	rand
 119 0062 021C     		mov	r2, r0
 120 0064 3B1C     		mov	r3, r7
 121 0066 8B33     		add	r3, r3, #139
 122 0068 1A70     		strb	r2, [r3]
  53:.\main.c      **** 	green = rand() % 0xFF;
 123              		.loc 1 53 0
 124 006a FFF7FEFF 		bl	rand
 125 006e 031C     		mov	r3, r0
 126 0070 181C     		mov	r0, r3
 127 0072 FF21     		mov	r1, #255
 128 0074 FFF7FEFF 		bl	__aeabi_idivmod
 129 0078 0B1C     		mov	r3, r1
 130 007a 1A1C     		mov	r2, r3
 131 007c 3B1C     		mov	r3, r7
 132 007e 8A33     		add	r3, r3, #138
 133 0080 1A70     		strb	r2, [r3]
  54:.\main.c      **** 	blue = rand() % 0xFF;
 134              		.loc 1 54 0
 135 0082 FFF7FEFF 		bl	rand
 136 0086 031C     		mov	r3, r0
 137 0088 181C     		mov	r0, r3
 138 008a FF21     		mov	r1, #255
 139 008c FFF7FEFF 		bl	__aeabi_idivmod
 140 0090 0B1C     		mov	r3, r1
 141 0092 1A1C     		mov	r2, r3
 142 0094 3B1C     		mov	r3, r7
 143 0096 8933     		add	r3, r3, #137
 144 0098 1A70     		strb	r2, [r3]
  55:.\main.c      **** 	
  56:.\main.c      **** 	/*
  57:.\main.c      **** 	 * Set the RGB LED color by writing the 2 PRiSM
  58:.\main.c      **** 	 * components to set the LED brightness
  59:.\main.c      **** 	 */
  60:.\main.c      **** 	LED0_WritePulse0( red );
 145              		.loc 1 60 0
 146 009a 3B1C     		mov	r3, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 5


 147 009c 8B33     		add	r3, r3, #139
 148 009e 1B78     		ldrb	r3, [r3]
 149 00a0 181C     		mov	r0, r3
 150 00a2 FFF7FEFF 		bl	LED0_WritePulse0
  61:.\main.c      **** 	LED0_WritePulse1( green );
 151              		.loc 1 61 0
 152 00a6 3B1C     		mov	r3, r7
 153 00a8 8A33     		add	r3, r3, #138
 154 00aa 1B78     		ldrb	r3, [r3]
 155 00ac 181C     		mov	r0, r3
 156 00ae FFF7FEFF 		bl	LED0_WritePulse1
  62:.\main.c      **** 	LED1_WritePulse0( blue );
 157              		.loc 1 62 0
 158 00b2 3B1C     		mov	r3, r7
 159 00b4 8933     		add	r3, r3, #137
 160 00b6 1B78     		ldrb	r3, [r3]
 161 00b8 181C     		mov	r0, r3
 162 00ba FFF7FEFF 		bl	LED1_WritePulse0
 163              	.L14:
  63:.\main.c      **** 	
  64:.\main.c      ****     for(;;)
  65:.\main.c      ****     {
  66:.\main.c      ****         /* Place your application code here. */
  67:.\main.c      **** 		socket = ETH0_TcpOpen( 23 );
 164              		.loc 1 67 0
 165 00be 3C1C     		mov	r4, r7
 166 00c0 8834     		add	r4, r4, #136
 167 00c2 1720     		mov	r0, #23
 168 00c4 FFF7FEFF 		bl	ETH0_TcpOpen
 169 00c8 031C     		mov	r3, r0
 170 00ca 2370     		strb	r3, [r4]
  68:.\main.c      **** 		ETH0_TcpStartServer( socket );
 171              		.loc 1 68 0
 172 00cc 3B1C     		mov	r3, r7
 173 00ce 8833     		add	r3, r3, #136
 174 00d0 1B78     		ldrb	r3, [r3]
 175 00d2 181C     		mov	r0, r3
 176 00d4 FFF7FEFF 		bl	ETH0_TcpStartServer
  69:.\main.c      **** 		while ( !ETH0_TcpConnected( socket ) ) {
 177              		.loc 1 69 0
 178 00d8 38E0     		b	.L4
 179              	.L5:
  70:.\main.c      **** 			/*
  71:.\main.c      **** 			 * While we are waiting for the client to attach
  72:.\main.c      **** 			 * to the server, flash some random colors on the
  73:.\main.c      **** 			 * LED to provide entertainment.
  74:.\main.c      **** 			 */
  75:.\main.c      **** 			red = rand() % 0xFF;
 180              		.loc 1 75 0
 181 00da FFF7FEFF 		bl	rand
 182 00de 031C     		mov	r3, r0
 183 00e0 181C     		mov	r0, r3
 184 00e2 FF21     		mov	r1, #255
 185 00e4 FFF7FEFF 		bl	__aeabi_idivmod
 186 00e8 0B1C     		mov	r3, r1
 187 00ea 1A1C     		mov	r2, r3
 188 00ec 3B1C     		mov	r3, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 6


 189 00ee 8B33     		add	r3, r3, #139
 190 00f0 1A70     		strb	r2, [r3]
  76:.\main.c      **** 			green = rand() % 0xFF;
 191              		.loc 1 76 0
 192 00f2 FFF7FEFF 		bl	rand
 193 00f6 031C     		mov	r3, r0
 194 00f8 181C     		mov	r0, r3
 195 00fa FF21     		mov	r1, #255
 196 00fc FFF7FEFF 		bl	__aeabi_idivmod
 197 0100 0B1C     		mov	r3, r1
 198 0102 1A1C     		mov	r2, r3
 199 0104 3B1C     		mov	r3, r7
 200 0106 8A33     		add	r3, r3, #138
 201 0108 1A70     		strb	r2, [r3]
  77:.\main.c      **** 			blue = rand() % 0xFF;
 202              		.loc 1 77 0
 203 010a FFF7FEFF 		bl	rand
 204 010e 031C     		mov	r3, r0
 205 0110 181C     		mov	r0, r3
 206 0112 FF21     		mov	r1, #255
 207 0114 FFF7FEFF 		bl	__aeabi_idivmod
 208 0118 0B1C     		mov	r3, r1
 209 011a 1A1C     		mov	r2, r3
 210 011c 3B1C     		mov	r3, r7
 211 011e 8933     		add	r3, r3, #137
 212 0120 1A70     		strb	r2, [r3]
  78:.\main.c      **** 			LED0_WritePulse0( red );
 213              		.loc 1 78 0
 214 0122 3B1C     		mov	r3, r7
 215 0124 8B33     		add	r3, r3, #139
 216 0126 1B78     		ldrb	r3, [r3]
 217 0128 181C     		mov	r0, r3
 218 012a FFF7FEFF 		bl	LED0_WritePulse0
  79:.\main.c      **** 			LED0_WritePulse1( green );
 219              		.loc 1 79 0
 220 012e 3B1C     		mov	r3, r7
 221 0130 8A33     		add	r3, r3, #138
 222 0132 1B78     		ldrb	r3, [r3]
 223 0134 181C     		mov	r0, r3
 224 0136 FFF7FEFF 		bl	LED0_WritePulse1
  80:.\main.c      **** 			LED1_WritePulse0( blue );
 225              		.loc 1 80 0
 226 013a 3B1C     		mov	r3, r7
 227 013c 8933     		add	r3, r3, #137
 228 013e 1B78     		ldrb	r3, [r3]
 229 0140 181C     		mov	r0, r3
 230 0142 FFF7FEFF 		bl	LED1_WritePulse0
  81:.\main.c      **** 			/* wait for a connection, and delay the flashes */
  82:.\main.c      **** 			CyDelay(250);
 231              		.loc 1 82 0
 232 0146 FA20     		mov	r0, #250
 233 0148 FFF7FEFF 		bl	CyDelay
 234              	.L4:
  69:.\main.c      **** 		while ( !ETH0_TcpConnected( socket ) ) {
 235              		.loc 1 69 0 discriminator 1
 236 014c 3B1C     		mov	r3, r7
 237 014e 8833     		add	r3, r3, #136
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 7


 238 0150 1B78     		ldrb	r3, [r3]
 239 0152 181C     		mov	r0, r3
 240 0154 FFF7FEFF 		bl	ETH0_TcpConnected
 241 0158 031C     		mov	r3, r0
 242 015a 002B     		cmp	r3, #0
 243 015c BDD0     		beq	.L5
  83:.\main.c      **** 		}
  84:.\main.c      **** 		/*
  85:.\main.c      **** 		 * Send the Logon welcom message to the client.
  86:.\main.c      **** 		 */
  87:.\main.c      **** 		ETH0_TcpPrint(socket,"Welcome to the PSoC4 Pioneer Board!\r\n");
 244              		.loc 1 87 0
 245 015e 3B1C     		mov	r3, r7
 246 0160 8833     		add	r3, r3, #136
 247 0162 1A78     		ldrb	r2, [r3]
 248 0164 534B     		ldr	r3, .L15+8
 249 0166 101C     		mov	r0, r2
 250 0168 191C     		mov	r1, r3
 251 016a FFF7FEFF 		bl	ETH0_TcpPrint
  88:.\main.c      **** 		ETH0_TcpPrint(socket,"---------------------------------------------------------------------------
 252              		.loc 1 88 0
 253 016e 3B1C     		mov	r3, r7
 254 0170 8833     		add	r3, r3, #136
 255 0172 1A78     		ldrb	r2, [r3]
 256 0174 504B     		ldr	r3, .L15+12
 257 0176 101C     		mov	r0, r2
 258 0178 191C     		mov	r1, r3
 259 017a FFF7FEFF 		bl	ETH0_TcpPrint
  89:.\main.c      **** 		temp = 0;
 260              		.loc 1 89 0
 261 017e 0023     		mov	r3, #0
 262 0180 8C20     		mov	r0, #140
 263 0182 C019     		add	r0, r0, r7
 264 0184 0360     		str	r3, [r0]
  90:.\main.c      **** 		while( ETH0_SocketRxDataWaiting(socket) == 0) {
 265              		.loc 1 90 0
 266 0186 45E0     		b	.L6
 267              	.L13:
  91:.\main.c      **** 			ETH0_TcpPrint(socket, "Please Press a key: ");
 268              		.loc 1 91 0
 269 0188 3B1C     		mov	r3, r7
 270 018a 8833     		add	r3, r3, #136
 271 018c 1A78     		ldrb	r2, [r3]
 272 018e 4B4B     		ldr	r3, .L15+16
 273 0190 101C     		mov	r0, r2
 274 0192 191C     		mov	r1, r3
 275 0194 FFF7FEFF 		bl	ETH0_TcpPrint
  92:.\main.c      **** 			switch(temp) {
 276              		.loc 1 92 0
 277 0198 8C22     		mov	r2, #140
 278 019a D219     		add	r2, r2, r7
 279 019c 1368     		ldr	r3, [r2]
 280 019e 012B     		cmp	r3, #1
 281 01a0 11D0     		beq	.L9
 282 01a2 02DC     		bgt	.L12
 283 01a4 002B     		cmp	r3, #0
 284 01a6 05D0     		beq	.L8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 8


 285 01a8 28E0     		b	.L7
 286              	.L12:
 287 01aa 022B     		cmp	r3, #2
 288 01ac 14D0     		beq	.L10
 289 01ae 032B     		cmp	r3, #3
 290 01b0 1BD0     		beq	.L11
 291 01b2 23E0     		b	.L7
 292              	.L8:
  93:.\main.c      **** 				case 0:
  94:.\main.c      **** 					ETH0_TcpPrint(socket, "\\ \r");
 293              		.loc 1 94 0
 294 01b4 3B1C     		mov	r3, r7
 295 01b6 8833     		add	r3, r3, #136
 296 01b8 1A78     		ldrb	r2, [r3]
 297 01ba 414B     		ldr	r3, .L15+20
 298 01bc 101C     		mov	r0, r2
 299 01be 191C     		mov	r1, r3
 300 01c0 FFF7FEFF 		bl	ETH0_TcpPrint
  95:.\main.c      **** 					break;
 301              		.loc 1 95 0
 302 01c4 1AE0     		b	.L7
 303              	.L9:
  96:.\main.c      **** 				case 1:
  97:.\main.c      **** 					ETH0_TcpPrint(socket, "|\r");
 304              		.loc 1 97 0
 305 01c6 3B1C     		mov	r3, r7
 306 01c8 8833     		add	r3, r3, #136
 307 01ca 1A78     		ldrb	r2, [r3]
 308 01cc 3D4B     		ldr	r3, .L15+24
 309 01ce 101C     		mov	r0, r2
 310 01d0 191C     		mov	r1, r3
 311 01d2 FFF7FEFF 		bl	ETH0_TcpPrint
  98:.\main.c      **** 					break;
 312              		.loc 1 98 0
 313 01d6 11E0     		b	.L7
 314              	.L10:
  99:.\main.c      **** 				case 2:
 100:.\main.c      **** 					ETH0_TcpPrint(socket, "/\r");
 315              		.loc 1 100 0
 316 01d8 3B1C     		mov	r3, r7
 317 01da 8833     		add	r3, r3, #136
 318 01dc 1A78     		ldrb	r2, [r3]
 319 01de 3A4B     		ldr	r3, .L15+28
 320 01e0 101C     		mov	r0, r2
 321 01e2 191C     		mov	r1, r3
 322 01e4 FFF7FEFF 		bl	ETH0_TcpPrint
 101:.\main.c      **** 					break;
 323              		.loc 1 101 0
 324 01e8 08E0     		b	.L7
 325              	.L11:
 102:.\main.c      **** 				case 3:
 103:.\main.c      **** 					ETH0_TcpPrint(socket, "-\r");
 326              		.loc 1 103 0
 327 01ea 3B1C     		mov	r3, r7
 328 01ec 8833     		add	r3, r3, #136
 329 01ee 1A78     		ldrb	r2, [r3]
 330 01f0 364B     		ldr	r3, .L15+32
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 9


 331 01f2 101C     		mov	r0, r2
 332 01f4 191C     		mov	r1, r3
 333 01f6 FFF7FEFF 		bl	ETH0_TcpPrint
 104:.\main.c      **** 					break;
 334              		.loc 1 104 0
 335 01fa C046     		mov	r8, r8
 336              	.L7:
 105:.\main.c      **** 			}
 106:.\main.c      **** 			temp = (temp + 1) & 3;
 337              		.loc 1 106 0
 338 01fc 8C20     		mov	r0, #140
 339 01fe C019     		add	r0, r0, r7
 340 0200 0368     		ldr	r3, [r0]
 341 0202 5A1C     		add	r2, r3, #1
 342 0204 0323     		mov	r3, #3
 343 0206 1340     		and	r3, r2
 344 0208 8C22     		mov	r2, #140
 345 020a D219     		add	r2, r2, r7
 346 020c 1360     		str	r3, [r2]
 107:.\main.c      **** 			CyDelay(1);
 347              		.loc 1 107 0
 348 020e 0120     		mov	r0, #1
 349 0210 FFF7FEFF 		bl	CyDelay
 350              	.L6:
  90:.\main.c      **** 		while( ETH0_SocketRxDataWaiting(socket) == 0) {
 351              		.loc 1 90 0 discriminator 1
 352 0214 3B1C     		mov	r3, r7
 353 0216 8833     		add	r3, r3, #136
 354 0218 1B78     		ldrb	r3, [r3]
 355 021a 181C     		mov	r0, r3
 356 021c FFF7FEFF 		bl	ETH0_SocketRxDataWaiting
 357 0220 031C     		mov	r3, r0
 358 0222 002B     		cmp	r3, #0
 359 0224 B0D0     		beq	.L13
 108:.\main.c      **** 		}
 109:.\main.c      **** 		ETH0_TcpPrint(socket,"\r\nThank You! :-) ");
 360              		.loc 1 109 0
 361 0226 3B1C     		mov	r3, r7
 362 0228 8833     		add	r3, r3, #136
 363 022a 1A78     		ldrb	r2, [r3]
 364 022c 284B     		ldr	r3, .L15+36
 365 022e 101C     		mov	r0, r2
 366 0230 191C     		mov	r1, r3
 367 0232 FFF7FEFF 		bl	ETH0_TcpPrint
 110:.\main.c      **** 		length = ETH0_TcpReceive(socket,(uint8*)&buffer[0],128);
 368              		.loc 1 110 0
 369 0236 3C1C     		mov	r4, r7
 370 0238 8634     		add	r4, r4, #134
 371 023a 3B1C     		mov	r3, r7
 372 023c 8833     		add	r3, r3, #136
 373 023e 1A78     		ldrb	r2, [r3]
 374 0240 3B1D     		add	r3, r7, #4
 375 0242 101C     		mov	r0, r2
 376 0244 191C     		mov	r1, r3
 377 0246 8022     		mov	r2, #128
 378 0248 FFF7FEFF 		bl	ETH0_TcpReceive
 379 024c 031C     		mov	r3, r0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 10


 380 024e 2380     		strh	r3, [r4]
 111:.\main.c      **** 		ETH0_TcpSend(socket,(uint8*)&buffer[0],length);
 381              		.loc 1 111 0
 382 0250 3B1C     		mov	r3, r7
 383 0252 8833     		add	r3, r3, #136
 384 0254 1978     		ldrb	r1, [r3]
 385 0256 3A1D     		add	r2, r7, #4
 386 0258 3B1C     		mov	r3, r7
 387 025a 8633     		add	r3, r3, #134
 388 025c 1B88     		ldrh	r3, [r3]
 389 025e 081C     		mov	r0, r1
 390 0260 111C     		mov	r1, r2
 391 0262 1A1C     		mov	r2, r3
 392 0264 FFF7FEFF 		bl	ETH0_TcpSend
 112:.\main.c      **** 		
 113:.\main.c      **** 		/* pavloven test: TcpSend() of 2000 bytes */
 114:.\main.c      **** 		/* set I/O pin low for timing */
 115:.\main.c      **** 		SDCS_Write(0);
 393              		.loc 1 115 0
 394 0268 0020     		mov	r0, #0
 395 026a FFF7FEFF 		bl	SDCS_Write
 116:.\main.c      **** 		/* Transmit 2000 bytes through the driver to the host */
 117:.\main.c      **** 		ETH0_TcpSend(socket,(uint8*)&randomData[0], 2000);
 396              		.loc 1 117 0
 397 026e 3B1C     		mov	r3, r7
 398 0270 8833     		add	r3, r3, #136
 399 0272 1978     		ldrb	r1, [r3]
 400 0274 0D4A     		ldr	r2, .L15
 401 0276 FA23     		mov	r3, #250
 402 0278 DB00     		lsl	r3, r3, #3
 403 027a 081C     		mov	r0, r1
 404 027c 111C     		mov	r1, r2
 405 027e 1A1C     		mov	r2, r3
 406 0280 FFF7FEFF 		bl	ETH0_TcpSend
 118:.\main.c      **** 		/* Set I/O pin high for measuring time */
 119:.\main.c      **** 		SDCS_Write(1);
 407              		.loc 1 119 0
 408 0284 0120     		mov	r0, #1
 409 0286 FFF7FEFF 		bl	SDCS_Write
 120:.\main.c      **** 		/* end test */
 121:.\main.c      **** 		
 122:.\main.c      **** 		ETH0_TcpDisconnect( socket );
 410              		.loc 1 122 0
 411 028a 3B1C     		mov	r3, r7
 412 028c 8833     		add	r3, r3, #136
 413 028e 1B78     		ldrb	r3, [r3]
 414 0290 181C     		mov	r0, r3
 415 0292 FFF7FEFF 		bl	ETH0_TcpDisconnect
 123:.\main.c      **** 		ETH0_SocketClose( socket );
 416              		.loc 1 123 0
 417 0296 3B1C     		mov	r3, r7
 418 0298 8833     		add	r3, r3, #136
 419 029a 1B78     		ldrb	r3, [r3]
 420 029c 181C     		mov	r0, r3
 421 029e FFF7FEFF 		bl	ETH0_SocketClose
 124:.\main.c      **** 		CyDelay(10);
 422              		.loc 1 124 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 11


 423 02a2 0A20     		mov	r0, #10
 424 02a4 FFF7FEFF 		bl	CyDelay
 125:.\main.c      ****     }
 425              		.loc 1 125 0
 426 02a8 09E7     		b	.L14
 427              	.L16:
 428 02aa C046     		.align	2
 429              	.L15:
 430 02ac 00000000 		.word	randomData
 431 02b0 CF070000 		.word	1999
 432 02b4 00000000 		.word	.LC1
 433 02b8 28000000 		.word	.LC3
 434 02bc 7C000000 		.word	.LC5
 435 02c0 94000000 		.word	.LC7
 436 02c4 98000000 		.word	.LC9
 437 02c8 9C000000 		.word	.LC11
 438 02cc A0000000 		.word	.LC13
 439 02d0 A4000000 		.word	.LC15
 440              		.cfi_endproc
 441              	.LFE33:
 442              		.size	main, .-main
 443              		.text
 444              	.Letext0:
 445              		.file 2 "./Generated_Source/PSoC4/cytypes.h"
 446              		.section	.debug_info,"",%progbits
 447              	.Ldebug_info0:
 448 0000 52010000 		.4byte	0x152
 449 0004 0200     		.2byte	0x2
 450 0006 00000000 		.4byte	.Ldebug_abbrev0
 451 000a 04       		.byte	0x4
 452 000b 01       		.uleb128 0x1
 453 000c 9A000000 		.4byte	.LASF21
 454 0010 01       		.byte	0x1
 455 0011 75010000 		.4byte	.LASF22
 456 0015 20000000 		.4byte	.LASF23
 457 0019 00000000 		.4byte	.Ldebug_ranges0+0
 458 001d 00000000 		.4byte	0
 459 0021 00000000 		.4byte	0
 460 0025 00000000 		.4byte	.Ldebug_line0
 461 0029 02       		.uleb128 0x2
 462 002a 01       		.byte	0x1
 463 002b 06       		.byte	0x6
 464 002c 63010000 		.4byte	.LASF0
 465 0030 02       		.uleb128 0x2
 466 0031 01       		.byte	0x1
 467 0032 08       		.byte	0x8
 468 0033 18010000 		.4byte	.LASF1
 469 0037 02       		.uleb128 0x2
 470 0038 02       		.byte	0x2
 471 0039 05       		.byte	0x5
 472 003a 34010000 		.4byte	.LASF2
 473 003e 02       		.uleb128 0x2
 474 003f 02       		.byte	0x2
 475 0040 07       		.byte	0x7
 476 0041 50010000 		.4byte	.LASF3
 477 0045 02       		.uleb128 0x2
 478 0046 04       		.byte	0x4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 12


 479 0047 05       		.byte	0x5
 480 0048 2B010000 		.4byte	.LASF4
 481 004c 02       		.uleb128 0x2
 482 004d 04       		.byte	0x4
 483 004e 07       		.byte	0x7
 484 004f E9000000 		.4byte	.LASF5
 485 0053 02       		.uleb128 0x2
 486 0054 08       		.byte	0x8
 487 0055 05       		.byte	0x5
 488 0056 00000000 		.4byte	.LASF6
 489 005a 02       		.uleb128 0x2
 490 005b 08       		.byte	0x8
 491 005c 07       		.byte	0x7
 492 005d FB000000 		.4byte	.LASF7
 493 0061 03       		.uleb128 0x3
 494 0062 04       		.byte	0x4
 495 0063 05       		.byte	0x5
 496 0064 696E7400 		.ascii	"int\000"
 497 0068 02       		.uleb128 0x2
 498 0069 04       		.byte	0x4
 499 006a 07       		.byte	0x7
 500 006b 0E000000 		.4byte	.LASF8
 501 006f 04       		.uleb128 0x4
 502 0070 E3000000 		.4byte	.LASF9
 503 0074 02       		.byte	0x2
 504 0075 5B       		.byte	0x5b
 505 0076 30000000 		.4byte	0x30
 506 007a 04       		.uleb128 0x4
 507 007b 7E010000 		.4byte	.LASF10
 508 007f 02       		.byte	0x2
 509 0080 5C       		.byte	0x5c
 510 0081 3E000000 		.4byte	0x3e
 511 0085 02       		.uleb128 0x2
 512 0086 04       		.byte	0x4
 513 0087 04       		.byte	0x4
 514 0088 6F010000 		.4byte	.LASF11
 515 008c 02       		.uleb128 0x2
 516 008d 08       		.byte	0x8
 517 008e 04       		.byte	0x4
 518 008f 3E010000 		.4byte	.LASF12
 519 0093 02       		.uleb128 0x2
 520 0094 01       		.byte	0x1
 521 0095 08       		.byte	0x8
 522 0096 26010000 		.4byte	.LASF13
 523 009a 02       		.uleb128 0x2
 524 009b 04       		.byte	0x4
 525 009c 07       		.byte	0x7
 526 009d 8C010000 		.4byte	.LASF14
 527 00a1 05       		.uleb128 0x5
 528 00a2 01       		.byte	0x1
 529 00a3 87000000 		.4byte	.LASF24
 530 00a7 01       		.byte	0x1
 531 00a8 18       		.byte	0x18
 532 00a9 61000000 		.4byte	0x61
 533 00ad 00000000 		.4byte	.LFB33
 534 00b1 D4020000 		.4byte	.LFE33
 535 00b5 00000000 		.4byte	.LLST0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 13


 536 00b9 01       		.byte	0x1
 537 00ba 22010000 		.4byte	0x122
 538 00be 06       		.uleb128 0x6
 539 00bf 85010000 		.4byte	.LASF15
 540 00c3 01       		.byte	0x1
 541 00c4 1A       		.byte	0x1a
 542 00c5 22010000 		.4byte	0x122
 543 00c9 03       		.byte	0x3
 544 00ca 91       		.byte	0x91
 545 00cb E47E     		.sleb128 -156
 546 00cd 06       		.uleb128 0x6
 547 00ce 93000000 		.4byte	.LASF16
 548 00d2 01       		.byte	0x1
 549 00d3 1B       		.byte	0x1b
 550 00d4 6F000000 		.4byte	0x6f
 551 00d8 02       		.byte	0x2
 552 00d9 91       		.byte	0x91
 553 00da 68       		.sleb128 -24
 554 00db 06       		.uleb128 0x6
 555 00dc 8C000000 		.4byte	.LASF17
 556 00e0 01       		.byte	0x1
 557 00e1 1C       		.byte	0x1c
 558 00e2 7A000000 		.4byte	0x7a
 559 00e6 02       		.byte	0x2
 560 00e7 91       		.byte	0x91
 561 00e8 66       		.sleb128 -26
 562 00e9 06       		.uleb128 0x6
 563 00ea 82000000 		.4byte	.LASF18
 564 00ee 01       		.byte	0x1
 565 00ef 1D       		.byte	0x1d
 566 00f0 61000000 		.4byte	0x61
 567 00f4 02       		.byte	0x2
 568 00f5 91       		.byte	0x91
 569 00f6 6C       		.sleb128 -20
 570 00f7 07       		.uleb128 0x7
 571 00f8 72656400 		.ascii	"red\000"
 572 00fc 01       		.byte	0x1
 573 00fd 1E       		.byte	0x1e
 574 00fe 6F000000 		.4byte	0x6f
 575 0102 02       		.byte	0x2
 576 0103 91       		.byte	0x91
 577 0104 6B       		.sleb128 -21
 578 0105 06       		.uleb128 0x6
 579 0106 12010000 		.4byte	.LASF19
 580 010a 01       		.byte	0x1
 581 010b 1F       		.byte	0x1f
 582 010c 6F000000 		.4byte	0x6f
 583 0110 02       		.byte	0x2
 584 0111 91       		.byte	0x91
 585 0112 6A       		.sleb128 -22
 586 0113 06       		.uleb128 0x6
 587 0114 1B000000 		.4byte	.LASF20
 588 0118 01       		.byte	0x1
 589 0119 20       		.byte	0x20
 590 011a 6F000000 		.4byte	0x6f
 591 011e 02       		.byte	0x2
 592 011f 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 14


 593 0120 69       		.sleb128 -23
 594 0121 00       		.byte	0
 595 0122 08       		.uleb128 0x8
 596 0123 93000000 		.4byte	0x93
 597 0127 32010000 		.4byte	0x132
 598 012b 09       		.uleb128 0x9
 599 012c 9A000000 		.4byte	0x9a
 600 0130 7F       		.byte	0x7f
 601 0131 00       		.byte	0
 602 0132 08       		.uleb128 0x8
 603 0133 93000000 		.4byte	0x93
 604 0137 43010000 		.4byte	0x143
 605 013b 0A       		.uleb128 0xa
 606 013c 9A000000 		.4byte	0x9a
 607 0140 CF07     		.2byte	0x7cf
 608 0142 00       		.byte	0
 609 0143 0B       		.uleb128 0xb
 610 0144 45010000 		.4byte	.LASF25
 611 0148 01       		.byte	0x1
 612 0149 16       		.byte	0x16
 613 014a 32010000 		.4byte	0x132
 614 014e 01       		.byte	0x1
 615 014f 05       		.byte	0x5
 616 0150 03       		.byte	0x3
 617 0151 00000000 		.4byte	randomData
 618 0155 00       		.byte	0
 619              		.section	.debug_abbrev,"",%progbits
 620              	.Ldebug_abbrev0:
 621 0000 01       		.uleb128 0x1
 622 0001 11       		.uleb128 0x11
 623 0002 01       		.byte	0x1
 624 0003 25       		.uleb128 0x25
 625 0004 0E       		.uleb128 0xe
 626 0005 13       		.uleb128 0x13
 627 0006 0B       		.uleb128 0xb
 628 0007 03       		.uleb128 0x3
 629 0008 0E       		.uleb128 0xe
 630 0009 1B       		.uleb128 0x1b
 631 000a 0E       		.uleb128 0xe
 632 000b 55       		.uleb128 0x55
 633 000c 06       		.uleb128 0x6
 634 000d 11       		.uleb128 0x11
 635 000e 01       		.uleb128 0x1
 636 000f 52       		.uleb128 0x52
 637 0010 01       		.uleb128 0x1
 638 0011 10       		.uleb128 0x10
 639 0012 06       		.uleb128 0x6
 640 0013 00       		.byte	0
 641 0014 00       		.byte	0
 642 0015 02       		.uleb128 0x2
 643 0016 24       		.uleb128 0x24
 644 0017 00       		.byte	0
 645 0018 0B       		.uleb128 0xb
 646 0019 0B       		.uleb128 0xb
 647 001a 3E       		.uleb128 0x3e
 648 001b 0B       		.uleb128 0xb
 649 001c 03       		.uleb128 0x3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 15


 650 001d 0E       		.uleb128 0xe
 651 001e 00       		.byte	0
 652 001f 00       		.byte	0
 653 0020 03       		.uleb128 0x3
 654 0021 24       		.uleb128 0x24
 655 0022 00       		.byte	0
 656 0023 0B       		.uleb128 0xb
 657 0024 0B       		.uleb128 0xb
 658 0025 3E       		.uleb128 0x3e
 659 0026 0B       		.uleb128 0xb
 660 0027 03       		.uleb128 0x3
 661 0028 08       		.uleb128 0x8
 662 0029 00       		.byte	0
 663 002a 00       		.byte	0
 664 002b 04       		.uleb128 0x4
 665 002c 16       		.uleb128 0x16
 666 002d 00       		.byte	0
 667 002e 03       		.uleb128 0x3
 668 002f 0E       		.uleb128 0xe
 669 0030 3A       		.uleb128 0x3a
 670 0031 0B       		.uleb128 0xb
 671 0032 3B       		.uleb128 0x3b
 672 0033 0B       		.uleb128 0xb
 673 0034 49       		.uleb128 0x49
 674 0035 13       		.uleb128 0x13
 675 0036 00       		.byte	0
 676 0037 00       		.byte	0
 677 0038 05       		.uleb128 0x5
 678 0039 2E       		.uleb128 0x2e
 679 003a 01       		.byte	0x1
 680 003b 3F       		.uleb128 0x3f
 681 003c 0C       		.uleb128 0xc
 682 003d 03       		.uleb128 0x3
 683 003e 0E       		.uleb128 0xe
 684 003f 3A       		.uleb128 0x3a
 685 0040 0B       		.uleb128 0xb
 686 0041 3B       		.uleb128 0x3b
 687 0042 0B       		.uleb128 0xb
 688 0043 49       		.uleb128 0x49
 689 0044 13       		.uleb128 0x13
 690 0045 11       		.uleb128 0x11
 691 0046 01       		.uleb128 0x1
 692 0047 12       		.uleb128 0x12
 693 0048 01       		.uleb128 0x1
 694 0049 40       		.uleb128 0x40
 695 004a 06       		.uleb128 0x6
 696 004b 9642     		.uleb128 0x2116
 697 004d 0C       		.uleb128 0xc
 698 004e 01       		.uleb128 0x1
 699 004f 13       		.uleb128 0x13
 700 0050 00       		.byte	0
 701 0051 00       		.byte	0
 702 0052 06       		.uleb128 0x6
 703 0053 34       		.uleb128 0x34
 704 0054 00       		.byte	0
 705 0055 03       		.uleb128 0x3
 706 0056 0E       		.uleb128 0xe
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 16


 707 0057 3A       		.uleb128 0x3a
 708 0058 0B       		.uleb128 0xb
 709 0059 3B       		.uleb128 0x3b
 710 005a 0B       		.uleb128 0xb
 711 005b 49       		.uleb128 0x49
 712 005c 13       		.uleb128 0x13
 713 005d 02       		.uleb128 0x2
 714 005e 0A       		.uleb128 0xa
 715 005f 00       		.byte	0
 716 0060 00       		.byte	0
 717 0061 07       		.uleb128 0x7
 718 0062 34       		.uleb128 0x34
 719 0063 00       		.byte	0
 720 0064 03       		.uleb128 0x3
 721 0065 08       		.uleb128 0x8
 722 0066 3A       		.uleb128 0x3a
 723 0067 0B       		.uleb128 0xb
 724 0068 3B       		.uleb128 0x3b
 725 0069 0B       		.uleb128 0xb
 726 006a 49       		.uleb128 0x49
 727 006b 13       		.uleb128 0x13
 728 006c 02       		.uleb128 0x2
 729 006d 0A       		.uleb128 0xa
 730 006e 00       		.byte	0
 731 006f 00       		.byte	0
 732 0070 08       		.uleb128 0x8
 733 0071 01       		.uleb128 0x1
 734 0072 01       		.byte	0x1
 735 0073 49       		.uleb128 0x49
 736 0074 13       		.uleb128 0x13
 737 0075 01       		.uleb128 0x1
 738 0076 13       		.uleb128 0x13
 739 0077 00       		.byte	0
 740 0078 00       		.byte	0
 741 0079 09       		.uleb128 0x9
 742 007a 21       		.uleb128 0x21
 743 007b 00       		.byte	0
 744 007c 49       		.uleb128 0x49
 745 007d 13       		.uleb128 0x13
 746 007e 2F       		.uleb128 0x2f
 747 007f 0B       		.uleb128 0xb
 748 0080 00       		.byte	0
 749 0081 00       		.byte	0
 750 0082 0A       		.uleb128 0xa
 751 0083 21       		.uleb128 0x21
 752 0084 00       		.byte	0
 753 0085 49       		.uleb128 0x49
 754 0086 13       		.uleb128 0x13
 755 0087 2F       		.uleb128 0x2f
 756 0088 05       		.uleb128 0x5
 757 0089 00       		.byte	0
 758 008a 00       		.byte	0
 759 008b 0B       		.uleb128 0xb
 760 008c 34       		.uleb128 0x34
 761 008d 00       		.byte	0
 762 008e 03       		.uleb128 0x3
 763 008f 0E       		.uleb128 0xe
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 17


 764 0090 3A       		.uleb128 0x3a
 765 0091 0B       		.uleb128 0xb
 766 0092 3B       		.uleb128 0x3b
 767 0093 0B       		.uleb128 0xb
 768 0094 49       		.uleb128 0x49
 769 0095 13       		.uleb128 0x13
 770 0096 3F       		.uleb128 0x3f
 771 0097 0C       		.uleb128 0xc
 772 0098 02       		.uleb128 0x2
 773 0099 0A       		.uleb128 0xa
 774 009a 00       		.byte	0
 775 009b 00       		.byte	0
 776 009c 00       		.byte	0
 777              		.section	.debug_loc,"",%progbits
 778              	.Ldebug_loc0:
 779              	.LLST0:
 780 0000 00000000 		.4byte	.LFB33
 781 0004 02000000 		.4byte	.LCFI0
 782 0008 0200     		.2byte	0x2
 783 000a 7D       		.byte	0x7d
 784 000b 00       		.sleb128 0
 785 000c 02000000 		.4byte	.LCFI0
 786 0010 04000000 		.4byte	.LCFI1
 787 0014 0200     		.2byte	0x2
 788 0016 7D       		.byte	0x7d
 789 0017 0C       		.sleb128 12
 790 0018 04000000 		.4byte	.LCFI1
 791 001c 06000000 		.4byte	.LCFI2
 792 0020 0300     		.2byte	0x3
 793 0022 7D       		.byte	0x7d
 794 0023 A001     		.sleb128 160
 795 0025 06000000 		.4byte	.LCFI2
 796 0029 D4020000 		.4byte	.LFE33
 797 002d 0300     		.2byte	0x3
 798 002f 77       		.byte	0x77
 799 0030 A001     		.sleb128 160
 800 0032 00000000 		.4byte	0
 801 0036 00000000 		.4byte	0
 802              		.section	.debug_aranges,"",%progbits
 803 0000 1C000000 		.4byte	0x1c
 804 0004 0200     		.2byte	0x2
 805 0006 00000000 		.4byte	.Ldebug_info0
 806 000a 04       		.byte	0x4
 807 000b 00       		.byte	0
 808 000c 0000     		.2byte	0
 809 000e 0000     		.2byte	0
 810 0010 00000000 		.4byte	.LFB33
 811 0014 D4020000 		.4byte	.LFE33-.LFB33
 812 0018 00000000 		.4byte	0
 813 001c 00000000 		.4byte	0
 814              		.section	.debug_ranges,"",%progbits
 815              	.Ldebug_ranges0:
 816 0000 00000000 		.4byte	.LFB33
 817 0004 D4020000 		.4byte	.LFE33
 818 0008 00000000 		.4byte	0
 819 000c 00000000 		.4byte	0
 820              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 18


 821              	.Ldebug_line0:
 822 0000 B1000000 		.section	.debug_str,"MS",%progbits,1
 822      02004500 
 822      00000201 
 822      FB0E0D00 
 822      01010101 
 823              	.LASF6:
 824 0000 6C6F6E67 		.ascii	"long long int\000"
 824      206C6F6E 
 824      6720696E 
 824      7400
 825              	.LASF8:
 826 000e 756E7369 		.ascii	"unsigned int\000"
 826      676E6564 
 826      20696E74 
 826      00
 827              	.LASF20:
 828 001b 626C7565 		.ascii	"blue\000"
 828      00
 829              	.LASF23:
 830 0020 433A5C55 		.ascii	"C:\\Users\\chuck.erhardt\\Documents\\GitHub\\PSoC-W"
 830      73657273 
 830      5C636875 
 830      636B2E65 
 830      72686172 
 831 004e 35313030 		.ascii	"5100-Driver\\PSoCPioneer+ArduinoShield_Example.cyds"
 831      2D447269 
 831      7665725C 
 831      50536F43 
 831      50696F6E 
 832 0080 6E00     		.ascii	"n\000"
 833              	.LASF18:
 834 0082 74656D70 		.ascii	"temp\000"
 834      00
 835              	.LASF24:
 836 0087 6D61696E 		.ascii	"main\000"
 836      00
 837              	.LASF17:
 838 008c 6C656E67 		.ascii	"length\000"
 838      746800
 839              	.LASF16:
 840 0093 736F636B 		.ascii	"socket\000"
 840      657400
 841              	.LASF21:
 842 009a 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 842      4320342E 
 842      372E3320 
 842      32303133 
 842      30333132 
 843 00cd 616E6368 		.ascii	"anch revision 196615]\000"
 843      20726576 
 843      6973696F 
 843      6E203139 
 843      36363135 
 844              	.LASF9:
 845 00e3 75696E74 		.ascii	"uint8\000"
 845      3800
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 19


 846              	.LASF5:
 847 00e9 6C6F6E67 		.ascii	"long unsigned int\000"
 847      20756E73 
 847      69676E65 
 847      6420696E 
 847      7400
 848              	.LASF7:
 849 00fb 6C6F6E67 		.ascii	"long long unsigned int\000"
 849      206C6F6E 
 849      6720756E 
 849      7369676E 
 849      65642069 
 850              	.LASF19:
 851 0112 67726565 		.ascii	"green\000"
 851      6E00
 852              	.LASF1:
 853 0118 756E7369 		.ascii	"unsigned char\000"
 853      676E6564 
 853      20636861 
 853      7200
 854              	.LASF13:
 855 0126 63686172 		.ascii	"char\000"
 855      00
 856              	.LASF4:
 857 012b 6C6F6E67 		.ascii	"long int\000"
 857      20696E74 
 857      00
 858              	.LASF2:
 859 0134 73686F72 		.ascii	"short int\000"
 859      7420696E 
 859      7400
 860              	.LASF12:
 861 013e 646F7562 		.ascii	"double\000"
 861      6C6500
 862              	.LASF25:
 863 0145 72616E64 		.ascii	"randomData\000"
 863      6F6D4461 
 863      746100
 864              	.LASF3:
 865 0150 73686F72 		.ascii	"short unsigned int\000"
 865      7420756E 
 865      7369676E 
 865      65642069 
 865      6E7400
 866              	.LASF0:
 867 0163 7369676E 		.ascii	"signed char\000"
 867      65642063 
 867      68617200 
 868              	.LASF11:
 869 016f 666C6F61 		.ascii	"float\000"
 869      7400
 870              	.LASF22:
 871 0175 2E5C6D61 		.ascii	".\\main.c\000"
 871      696E2E63 
 871      00
 872              	.LASF10:
 873 017e 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccapqRps.s 			page 20


 873      313600
 874              	.LASF15:
 875 0185 62756666 		.ascii	"buffer\000"
 875      657200
 876              	.LASF14:
 877 018c 73697A65 		.ascii	"sizetype\000"
 877      74797065 
 877      00
 878              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
