ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ETH.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ETH_SOCKET_TX_BASE
  19              		.section	.rodata
  20              		.align	2
  21              		.type	ETH_SOCKET_TX_BASE, %object
  22              		.size	ETH_SOCKET_TX_BASE, 16
  23              	ETH_SOCKET_TX_BASE:
  24 0000 0080     		.short	-32768
  25 0002 0088     		.short	-30720
  26 0004 0090     		.short	-28672
  27 0006 0098     		.short	-26624
  28 0008 00A0     		.short	-24576
  29 000a 00A8     		.short	-22528
  30 000c 00B0     		.short	-20480
  31 000e 00B8     		.short	-18432
  32              		.global	ETH_SOCKET_RX_BASE
  33              		.align	2
  34              		.type	ETH_SOCKET_RX_BASE, %object
  35              		.size	ETH_SOCKET_RX_BASE, 16
  36              	ETH_SOCKET_RX_BASE:
  37 0010 00C0     		.short	-16384
  38 0012 00C8     		.short	-14336
  39 0014 00D0     		.short	-12288
  40 0016 00D8     		.short	-10240
  41 0018 00E0     		.short	-8192
  42 001a 00E8     		.short	-6144
  43 001c 00F0     		.short	-4096
  44 001e 00F8     		.short	-2048
  45              		.comm	ETH_SocketConfig,64,4
  46              		.comm	ETH_SubnetMask,4,4
  47              		.comm	ETH_MAC,6,4
  48              		.section	.text.ETH_ChipSelect,"ax",%progbits
  49              		.align	2
  50              		.global	ETH_ChipSelect
  51              		.thumb
  52              		.thumb_func
  53              		.type	ETH_ChipSelect, %function
  54              	ETH_ChipSelect:
  55              	.LFB0:
  56              		.file 1 ".\\Generated_Source\\PSoC5\\ETH.c"
   1:.\Generated_Source\PSoC5/ETH.c **** /**
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 2


   2:.\Generated_Source\PSoC5/ETH.c ****  * \addtogroup w5x00
   3:.\Generated_Source\PSoC5/ETH.c ****  * @{
   4:.\Generated_Source\PSoC5/ETH.c ****  */
   5:.\Generated_Source\PSoC5/ETH.c **** 
   6:.\Generated_Source\PSoC5/ETH.c **** /**
   7:.\Generated_Source\PSoC5/ETH.c ****  * \file Driver implementation for interfacing with the W5x00 device
   8:.\Generated_Source\PSoC5/ETH.c ****  * \author Chuck Erhardt (chuck@e2forlife.com)
   9:.\Generated_Source\PSoC5/ETH.c ****  *
  10:.\Generated_Source\PSoC5/ETH.c ****  * This file contains the main driver implementation for control
  11:.\Generated_Source\PSoC5/ETH.c ****  * of the W5x00 device.
  12:.\Generated_Source\PSoC5/ETH.c **** */
  13:.\Generated_Source\PSoC5/ETH.c **** 
  14:.\Generated_Source\PSoC5/ETH.c **** /*
  15:.\Generated_Source\PSoC5/ETH.c ****  * Change Log:
  16:.\Generated_Source\PSoC5/ETH.c ****  * 
  17:.\Generated_Source\PSoC5/ETH.c ****  * V1.1
  18:.\Generated_Source\PSoC5/ETH.c ****  * - Modified the SPI access function to remove hard wait for READ_WRITE_DELAY  <CE>
  19:.\Generated_Source\PSoC5/ETH.c ****  * - Removed READ_WRITE_DELAY Parameter <CE>
  20:.\Generated_Source\PSoC5/ETH.c ****  * - Added validator to SS_NUM parameter to ensure that the value is the range 0-3 <CE>
  21:.\Generated_Source\PSoC5/ETH.c ****  * - Removed "inline" keywords from interal register access function to promote
  22:.\Generated_Source\PSoC5/ETH.c ****  *   compatibility with Keil PSoC3 compilers that don't support them. <CE>
  23:.\Generated_Source\PSoC5/ETH.c ****  * - Fixed bug in _ProcessRxData() that caused the read pointer not to be updated without
  24:.\Generated_Source\PSoC5/ETH.c ****  *   the lookahead flag being set. <CE>
  25:.\Generated_Source\PSoC5/ETH.c ****  * V1.2
  26:.\Generated_Source\PSoC5/ETH.c ****  * - Added _STS_SPI_IDLE flag to _SpiDone conditions to prevent deadlocking that
  27:.\Generated_Source\PSoC5/ETH.c ****  *   was occuring during the first read or write using the SPI device (SPIM moded) <CE>
  28:.\Generated_Source\PSoC5/ETH.c ****  * - Removed the check for SOCKET_ESTABLISHED at the start of the TcpReceive
  29:.\Generated_Source\PSoC5/ETH.c ****  *   function to allow for reading received socket data after the socket was dropped
  30:.\Generated_Source\PSoC5/ETH.c ****  *   by the remote server.  It was brought to my attention that this occurs when
  31:.\Generated_Source\PSoC5/ETH.c ****  *   operating with client connection to HTTP servers. <CE>
  32:.\Generated_Source\PSoC5/ETH.c ****  * - Added a MAC address parser and MAC to String Converter. <CE>
  33:.\Generated_Source\PSoC5/ETH.c ****  */
  34:.\Generated_Source\PSoC5/ETH.c **** 
  35:.\Generated_Source\PSoC5/ETH.c **** /* Cypress library includes */
  36:.\Generated_Source\PSoC5/ETH.c **** #include <cytypes.h>
  37:.\Generated_Source\PSoC5/ETH.c **** #include <cylib.h>
  38:.\Generated_Source\PSoC5/ETH.c **** 
  39:.\Generated_Source\PSoC5/ETH.c **** /*  include functions and types for the driver */
  40:.\Generated_Source\PSoC5/ETH.c **** #include "ETH.h"
  41:.\Generated_Source\PSoC5/ETH.c **** /* Include register address constants */
  42:.\Generated_Source\PSoC5/ETH.c **** #include "ETH_reg52.h"
  43:.\Generated_Source\PSoC5/ETH.c **** 
  44:.\Generated_Source\PSoC5/ETH.c **** /* include the serial interface functions */
  45:.\Generated_Source\PSoC5/ETH.c **** #include <SPI.h>
  46:.\Generated_Source\PSoC5/ETH.c **** #include <SSCR.h>
  47:.\Generated_Source\PSoC5/ETH.c **** 
  48:.\Generated_Source\PSoC5/ETH.c **** extern uint8 SPI_initVar;
  49:.\Generated_Source\PSoC5/ETH.c **** 
  50:.\Generated_Source\PSoC5/ETH.c **** typedef struct
  51:.\Generated_Source\PSoC5/ETH.c **** {
  52:.\Generated_Source\PSoC5/ETH.c **** 	uint8  Protocol;
  53:.\Generated_Source\PSoC5/ETH.c **** 	uint8  SocketFlags;
  54:.\Generated_Source\PSoC5/ETH.c **** 	uint16 SourcePort;
  55:.\Generated_Source\PSoC5/ETH.c **** 	uint8  ServerFlag;
  56:.\Generated_Source\PSoC5/ETH.c **** 	uint8  TxBufferSize;
  57:.\Generated_Source\PSoC5/ETH.c **** 	uint8  RxBufferSize;
  58:.\Generated_Source\PSoC5/ETH.c **** } ETH_SOCKET;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 3


  59:.\Generated_Source\PSoC5/ETH.c **** 
  60:.\Generated_Source\PSoC5/ETH.c **** #if (2 == 1) // W5100 Specific
  61:.\Generated_Source\PSoC5/ETH.c **** const uint16 ETH_SOCKET_TX_BASE[4] = { 0x4000, 0x4800, 0x5000, 0x5800 };
  62:.\Generated_Source\PSoC5/ETH.c **** const uint16 ETH_SOCKET_RX_BASE[4] = { 0x6000, 0x6800, 0x7000, 0x7800 };
  63:.\Generated_Source\PSoC5/ETH.c **** 
  64:.\Generated_Source\PSoC5/ETH.c **** #define ETH_MAX_SOCKET   ( 4 )
  65:.\Generated_Source\PSoC5/ETH.c **** #define ETH_BURST_MAX    ( 1 )
  66:.\Generated_Source\PSoC5/ETH.c **** 
  67:.\Generated_Source\PSoC5/ETH.c **** /**
  68:.\Generated_Source\PSoC5/ETH.c ****  * \def ETH_SOCKET REG(s,r)
  69:.\Generated_Source\PSoC5/ETH.c ****  * \brief Convert the socket number to a base address within the W5100
  70:.\Generated_Source\PSoC5/ETH.c ****  */
  71:.\Generated_Source\PSoC5/ETH.c **** #define ETH_SOCKET_REG(s,r)           ( (((uint16)s<<8)+0x0400) + r )
  72:.\Generated_Source\PSoC5/ETH.c **** 
  73:.\Generated_Source\PSoC5/ETH.c **** #elif (2 == 2) // W5200 Specific
  74:.\Generated_Source\PSoC5/ETH.c **** 	
  75:.\Generated_Source\PSoC5/ETH.c **** const uint16 ETH_SOCKET_TX_BASE[8] = { 0x8000, 0x8800, 0x9000, 0x9800, 0xA000, 0xA800, 0xB000, 0xB8
  76:.\Generated_Source\PSoC5/ETH.c **** const uint16 ETH_SOCKET_RX_BASE[8] = { 0xC000, 0xC800, 0xD000, 0xD800, 0xE000, 0xE800, 0xF000, 0xF8
  77:.\Generated_Source\PSoC5/ETH.c **** 
  78:.\Generated_Source\PSoC5/ETH.c **** #define ETH_MAX_SOCKET   ( 8 )
  79:.\Generated_Source\PSoC5/ETH.c **** #define ETH_BURST_MAX    ( 0x7FFF )
  80:.\Generated_Source\PSoC5/ETH.c **** 
  81:.\Generated_Source\PSoC5/ETH.c **** /**
  82:.\Generated_Source\PSoC5/ETH.c ****  * \def ETH_SOCKET REG(s,r)
  83:.\Generated_Source\PSoC5/ETH.c ****  * \brief Convert the socket number and register to a base address within the W5200
  84:.\Generated_Source\PSoC5/ETH.c ****  */
  85:.\Generated_Source\PSoC5/ETH.c **** #define ETH_SOCKET_REG(s,r)           ( ((uint16)s<<8) + r )
  86:.\Generated_Source\PSoC5/ETH.c **** 
  87:.\Generated_Source\PSoC5/ETH.c **** #else
  88:.\Generated_Source\PSoC5/ETH.c **** 	#error "W5x00 components other than W5100 and W5200 are not currently supported"
  89:.\Generated_Source\PSoC5/ETH.c **** #endif
  90:.\Generated_Source\PSoC5/ETH.c **** 
  91:.\Generated_Source\PSoC5/ETH.c **** ETH_SOCKET ETH_SocketConfig[ETH_MAX_SOCKET];
  92:.\Generated_Source\PSoC5/ETH.c **** uint32 ETH_SubnetMask;
  93:.\Generated_Source\PSoC5/ETH.c **** 
  94:.\Generated_Source\PSoC5/ETH.c **** uint8 ETH_MAC[6]; /* V1.2: removed = {00-de-ad-be-ef-00}; */
  95:.\Generated_Source\PSoC5/ETH.c **** 
  96:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
  97:.\Generated_Source\PSoC5/ETH.c **** /* V1.2 HEX digit conversion tools for MAC Address parsing */
  98:.\Generated_Source\PSoC5/ETH.c **** #define ETH_ISXDIGIT(x) \
  99:.\Generated_Source\PSoC5/ETH.c **** ( ((x>='0')&&(x<='9'))||((x>='a')&&(x<='f'))||((x>='A')&&(x<='F')) )
 100:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 101:.\Generated_Source\PSoC5/ETH.c **** #define ETH_HEX2BIN(x) \
 102:.\Generated_Source\PSoC5/ETH.c **** ( ((x>='0')&&(x<='9'))? (x-'0') : \
 103:.\Generated_Source\PSoC5/ETH.c ****   ((x>='a')&&(x<='f'))? ((x-'a')+10) : \
 104:.\Generated_Source\PSoC5/ETH.c ****   ((x>='A')&&(x<='F'))? ((x-'A')+10) : 0 )
 105:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 106:.\Generated_Source\PSoC5/ETH.c **** #define ETH_BIN2HEX(x) \
 107:.\Generated_Source\PSoC5/ETH.c **** ( (x>9)? ((x-10)+'A') : (x + '0'))
 108:.\Generated_Source\PSoC5/ETH.c **** /* END V1.2 defines */
 109:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 110:.\Generated_Source\PSoC5/ETH.c **** 
 111:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 112:.\Generated_Source\PSoC5/ETH.c **** /**
 113:.\Generated_Source\PSoC5/ETH.c ****  * \brief Select the active SCB chip select connected to the W51
 114:.\Generated_Source\PSoC5/ETH.c ****  *
 115:.\Generated_Source\PSoC5/ETH.c ****  * this fucntion will set the active SS line within the SCB to select and
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 4


 116:.\Generated_Source\PSoC5/ETH.c ****  * communicate with the W5100 device.
 117:.\Generated_Source\PSoC5/ETH.c ****  * \note this functions requires that the device chip select is originating
 118:.\Generated_Source\PSoC5/ETH.c ****  *  from the SPI device.
 119:.\Generated_Source\PSoC5/ETH.c ****  */
 120:.\Generated_Source\PSoC5/ETH.c **** void
 121:.\Generated_Source\PSoC5/ETH.c **** ETH_ChipSelect( void )
 122:.\Generated_Source\PSoC5/ETH.c **** {
  57              		.loc 1 122 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 7, -8
  65              		.cfi_offset 14, -4
  66 0002 00AF     		add	r7, sp, #0
  67              	.LCFI1:
  68              		.cfi_def_cfa_register 7
 123:.\Generated_Source\PSoC5/ETH.c **** 	/*
 124:.\Generated_Source\PSoC5/ETH.c **** 	 * User code for setting the chip select enable.  This is called once
 125:.\Generated_Source\PSoC5/ETH.c **** 	 * at the beginning of each tranfer to/from the W5100, so we recommend
 126:.\Generated_Source\PSoC5/ETH.c **** 	 * either doing nothing (SPIM SS straight out), or to switch the demux
 127:.\Generated_Source\PSoC5/ETH.c **** 	 * component to select the correct output for the SS routing.  This
 128:.\Generated_Source\PSoC5/ETH.c **** 	 * should probably not drive a pin directly since there is no return
 129:.\Generated_Source\PSoC5/ETH.c **** 	 * call from the driver that would allow an enable/disable type of
 130:.\Generated_Source\PSoC5/ETH.c **** 	 * implementation for CSN control.
 131:.\Generated_Source\PSoC5/ETH.c **** 	 */
 132:.\Generated_Source\PSoC5/ETH.c **** 	SSCR_Write( ~(1<<0) );
  69              		.loc 1 132 0
  70 0004 4FF0FE00 		mov	r0, #254
  71 0008 FFF7FEFF 		bl	SSCR_Write
 133:.\Generated_Source\PSoC5/ETH.c **** 	/* `#START CHIP_SELECT_GENERATION` */
 134:.\Generated_Source\PSoC5/ETH.c **** 
 135:.\Generated_Source\PSoC5/ETH.c **** 	/* `#END` */
 136:.\Generated_Source\PSoC5/ETH.c **** }
  72              		.loc 1 136 0
  73 000c 80BD     		pop	{r7, pc}
  74              		.cfi_endproc
  75              	.LFE0:
  76              		.size	ETH_ChipSelect, .-ETH_ChipSelect
  77 000e 00BF     		.section	.text.ETH_ChipDeSelect,"ax",%progbits
  78              		.align	2
  79              		.global	ETH_ChipDeSelect
  80              		.thumb
  81              		.thumb_func
  82              		.type	ETH_ChipDeSelect, %function
  83              	ETH_ChipDeSelect:
  84              	.LFB1:
 137:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 138:.\Generated_Source\PSoC5/ETH.c **** /**
 139:.\Generated_Source\PSoC5/ETH.c ****  * \brief Called at the end of a transfer to deselect the device
 140:.\Generated_Source\PSoC5/ETH.c ****  *
 141:.\Generated_Source\PSoC5/ETH.c ****  * This function is called by the chip access functions from the core
 142:.\Generated_Source\PSoC5/ETH.c ****  * interface code to de-select the device after the read/write operation
 143:.\Generated_Source\PSoC5/ETH.c ****  * has been completed. This was changed from the "old way" of doing things
 144:.\Generated_Source\PSoC5/ETH.c ****  * using the hardware SS pin because the FIFO will empty too quickly
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 5


 145:.\Generated_Source\PSoC5/ETH.c ****  * causing interruptions in the transfer during burst writes at high
 146:.\Generated_Source\PSoC5/ETH.c ****  * speed. This allows bursting without having to have a huge software
 147:.\Generated_Source\PSoC5/ETH.c ****  * FIFO and using DMA to keep the buffer loaded.
 148:.\Generated_Source\PSoC5/ETH.c ****  */
 149:.\Generated_Source\PSoC5/ETH.c **** void
 150:.\Generated_Source\PSoC5/ETH.c **** ETH_ChipDeSelect( void )
 151:.\Generated_Source\PSoC5/ETH.c **** {
  85              		.loc 1 151 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 1, uses_anonymous_args = 0
  89 0000 80B5     		push	{r7, lr}
  90              	.LCFI2:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 7, -8
  93              		.cfi_offset 14, -4
  94 0002 00AF     		add	r7, sp, #0
  95              	.LCFI3:
  96              		.cfi_def_cfa_register 7
 152:.\Generated_Source\PSoC5/ETH.c **** 	SSCR_Write(0xFF);
  97              		.loc 1 152 0
  98 0004 4FF0FF00 		mov	r0, #255
  99 0008 FFF7FEFF 		bl	SSCR_Write
 153:.\Generated_Source\PSoC5/ETH.c **** }
 100              		.loc 1 153 0
 101 000c 80BD     		pop	{r7, pc}
 102              		.cfi_endproc
 103              	.LFE1:
 104              		.size	ETH_ChipDeSelect, .-ETH_ChipDeSelect
 105 000e 00BF     		.section	.text.ETH_ChipWrite,"ax",%progbits
 106              		.align	2
 107              		.global	ETH_ChipWrite
 108              		.thumb
 109              		.thumb_func
 110              		.type	ETH_ChipWrite, %function
 111              	ETH_ChipWrite:
 112              	.LFB2:
 154:.\Generated_Source\PSoC5/ETH.c **** 
 155:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
 156:.\Generated_Source\PSoC5/ETH.c **** /* Generic SPI Functions */
 157:.\Generated_Source\PSoC5/ETH.c **** /*
 158:.\Generated_Source\PSoC5/ETH.c ****  * NOTE: when using the SPIM, there must be a buffer length of at least 4
 159:.\Generated_Source\PSoC5/ETH.c ****  * bytes to allow the transfer/receive cycle for each read/write operation
 160:.\Generated_Source\PSoC5/ETH.c ****  * to be contained within the FIFO buffer.
 161:.\Generated_Source\PSoC5/ETH.c ****  */
 162:.\Generated_Source\PSoC5/ETH.c **** #if !defined(CY_SCB_SPI_H)
 163:.\Generated_Source\PSoC5/ETH.c **** 	/* SPIM Code */
 164:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */	
 165:.\Generated_Source\PSoC5/ETH.c **** /* V1.1 : Macro definition for the SpiDone flag. */
 166:.\Generated_Source\PSoC5/ETH.c **** /*  
 167:.\Generated_Source\PSoC5/ETH.c **** 	V1.2 : Added SPI_IDLE flag to the condition for done to eliminate
 168:.\Generated_Source\PSoC5/ETH.c **** 	deadlocking when IDLE but not done.  This seems to occur during the
 169:.\Generated_Source\PSoC5/ETH.c **** 	initial write/read to/from the SPI port.
 170:.\Generated_Source\PSoC5/ETH.c **** */
 171:.\Generated_Source\PSoC5/ETH.c **** /**
 172:.\Generated_Source\PSoC5/ETH.c ****  * \brief Macro to determine the state of the spi done
 173:.\Generated_Source\PSoC5/ETH.c ****  * This macro reads the status register of the transmitter and masks off the doen bit.
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 6


 174:.\Generated_Source\PSoC5/ETH.c ****  */
 175:.\Generated_Source\PSoC5/ETH.c **** #define ETH_SpiDone     (SPI_ReadTxStatus() & (SPI_STS_SPI_DONE | SPI_STS_SPI_IDLE))
 176:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 177:.\Generated_Source\PSoC5/ETH.c **** /**
 178:.\Generated_Source\PSoC5/ETH.c ****  * \brief write Data to the W5100 at the specified address
 179:.\Generated_Source\PSoC5/ETH.c ****  * \param addr Address of register or memory buffer
 180:.\Generated_Source\PSoC5/ETH.c ****  * \param dat Data to write to the device
 181:.\Generated_Source\PSoC5/ETH.c ****  *
 182:.\Generated_Source\PSoC5/ETH.c ****  * This function will send the WRITE opcode, address and data to the W5100
 183:.\Generated_Source\PSoC5/ETH.c ****  * in order to write the data to the specified register.
 184:.\Generated_Source\PSoC5/ETH.c ****  */
 185:.\Generated_Source\PSoC5/ETH.c **** void 
 186:.\Generated_Source\PSoC5/ETH.c **** ETH_ChipWrite(uint16 addr, uint8 *dat, uint16 length)
 187:.\Generated_Source\PSoC5/ETH.c **** {
 113              		.loc 1 187 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 16
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117 0000 80B5     		push	{r7, lr}
 118              	.LCFI4:
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 7, -8
 121              		.cfi_offset 14, -4
 122 0002 84B0     		sub	sp, sp, #16
 123              	.LCFI5:
 124              		.cfi_def_cfa_offset 24
 125 0004 00AF     		add	r7, sp, #0
 126              	.LCFI6:
 127              		.cfi_def_cfa_register 7
 128 0006 3960     		str	r1, [r7, #0]
 129 0008 1346     		mov	r3, r2
 130 000a 0246     		mov	r2, r0	@ movhi
 131 000c FA80     		strh	r2, [r7, #6]	@ movhi
 132 000e BB80     		strh	r3, [r7, #4]	@ movhi
 188:.\Generated_Source\PSoC5/ETH.c **** 	uint16 txLen;
 189:.\Generated_Source\PSoC5/ETH.c **** 	uint16 txCount;
 190:.\Generated_Source\PSoC5/ETH.c **** 	uint16 adr;
 191:.\Generated_Source\PSoC5/ETH.c **** 	uint8 crit;
 192:.\Generated_Source\PSoC5/ETH.c **** 	
 193:.\Generated_Source\PSoC5/ETH.c **** 	/* V1.1: Wait for SPI operation to complete */
 194:.\Generated_Source\PSoC5/ETH.c **** 	while( ETH_SpiDone == 0) {
 133              		.loc 1 194 0
 134 0010 03E0     		b	.L4
 135              	.L5:
 195:.\Generated_Source\PSoC5/ETH.c **** 		CyDelayUs(1);
 136              		.loc 1 195 0
 137 0012 4FF00100 		mov	r0, #1
 138 0016 FFF7FEFF 		bl	CyDelayUs
 139              	.L4:
 194:.\Generated_Source\PSoC5/ETH.c **** 	while( ETH_SpiDone == 0) {
 140              		.loc 1 194 0 discriminator 1
 141 001a FFF7FEFF 		bl	SPI_ReadTxStatus
 142 001e 0346     		mov	r3, r0
 143 0020 03F01103 		and	r3, r3, #17
 144 0024 002B     		cmp	r3, #0
 145 0026 F4D0     		beq	.L5
 196:.\Generated_Source\PSoC5/ETH.c **** 	}
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 7


 197:.\Generated_Source\PSoC5/ETH.c **** 	/* V1.1: End change */
 198:.\Generated_Source\PSoC5/ETH.c **** 	
 199:.\Generated_Source\PSoC5/ETH.c **** 	crit = CyEnterCriticalSection();
 146              		.loc 1 199 0
 147 0028 FFF7FEFF 		bl	CyEnterCriticalSection
 148 002c 0346     		mov	r3, r0
 149 002e 7B72     		strb	r3, [r7, #9]
 200:.\Generated_Source\PSoC5/ETH.c **** 	
 201:.\Generated_Source\PSoC5/ETH.c **** 	adr = addr;
 150              		.loc 1 201 0
 151 0030 FB88     		ldrh	r3, [r7, #6]	@ movhi
 152 0032 7B81     		strh	r3, [r7, #10]	@ movhi
 202:.\Generated_Source\PSoC5/ETH.c **** 	txLen = 0;
 153              		.loc 1 202 0
 154 0034 4FF00003 		mov	r3, #0
 155 0038 FB81     		strh	r3, [r7, #14]	@ movhi
 203:.\Generated_Source\PSoC5/ETH.c **** 	txCount = 0;
 156              		.loc 1 203 0
 157 003a 4FF00003 		mov	r3, #0
 158 003e BB81     		strh	r3, [r7, #12]	@ movhi
 159              	.L12:
 204:.\Generated_Source\PSoC5/ETH.c **** 	do {
 205:.\Generated_Source\PSoC5/ETH.c **** 		/* Using internal device SS generation */
 206:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipSelect();
 160              		.loc 1 206 0
 161 0040 FFF7FEFF 		bl	ETH_ChipSelect
 207:.\Generated_Source\PSoC5/ETH.c **** 		/*
 208:.\Generated_Source\PSoC5/ETH.c **** 		 * The first thing to do is to clear the Rx Buffer of any lingering
 209:.\Generated_Source\PSoC5/ETH.c **** 		 * data left from other transfers.  Then send the data per the W5100
 210:.\Generated_Source\PSoC5/ETH.c **** 		 * datasheet p.62
 211:.\Generated_Source\PSoC5/ETH.c **** 		 */
 212:.\Generated_Source\PSoC5/ETH.c **** 		SPI_ClearRxBuffer();
 162              		.loc 1 212 0
 163 0044 FFF7FEFF 		bl	SPI_ClearRxBuffer
 213:.\Generated_Source\PSoC5/ETH.c **** 		/* Begin transfer of data to device */
 214:.\Generated_Source\PSoC5/ETH.c **** #if (2 == 1)
 215:.\Generated_Source\PSoC5/ETH.c **** 		/*
 216:.\Generated_Source\PSoC5/ETH.c **** 	     * The W5100 uses an opcode followed by the register/buffer
 217:.\Generated_Source\PSoC5/ETH.c **** 	     * address for each data element transfered.
 218:.\Generated_Source\PSoC5/ETH.c **** 	     */
 219:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData(ETH_WRITE_OP);
 220:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData((adr>>8)&0x00FF);
 221:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData(adr&0x00FF);
 222:.\Generated_Source\PSoC5/ETH.c **** 		txLen = 1;
 223:.\Generated_Source\PSoC5/ETH.c **** #elif (2 == 2)
 224:.\Generated_Source\PSoC5/ETH.c **** 	    /*
 225:.\Generated_Source\PSoC5/ETH.c **** 	     * The Header block for the W5200 uses the address, plus
 226:.\Generated_Source\PSoC5/ETH.c **** 	     * a length word which contains a read/write bit.  Setting
 227:.\Generated_Source\PSoC5/ETH.c **** 	     * the bit to a 1 (0x80) will enable write mode
 228:.\Generated_Source\PSoC5/ETH.c **** 	     */
 229:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( (adr>>8) & 0x00FF);
 164              		.loc 1 229 0
 165 0048 7B89     		ldrh	r3, [r7, #10]
 166 004a 4FEA1323 		lsr	r3, r3, #8
 167 004e 9BB2     		uxth	r3, r3
 168 0050 DBB2     		uxtb	r3, r3
 169 0052 1846     		mov	r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 8


 170 0054 FFF7FEFF 		bl	SPI_WriteTxData
 230:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( adr & 0x00FF );
 171              		.loc 1 230 0
 172 0058 7B89     		ldrh	r3, [r7, #10]	@ movhi
 173 005a DBB2     		uxtb	r3, r3
 174 005c 1846     		mov	r0, r3
 175 005e FFF7FEFF 		bl	SPI_WriteTxData
 231:.\Generated_Source\PSoC5/ETH.c **** 		txLen = (length > ETH_BURST_MAX)? ETH_BURST_MAX : length;
 176              		.loc 1 231 0
 177 0062 BB88     		ldrh	r3, [r7, #4]
 178 0064 1BB2     		sxth	r3, r3
 179 0066 002B     		cmp	r3, #0
 180 0068 01DB     		blt	.L6
 181              		.loc 1 231 0 is_stmt 0 discriminator 1
 182 006a BB88     		ldrh	r3, [r7, #4]
 183 006c 01E0     		b	.L7
 184              	.L6:
 185              		.loc 1 231 0 discriminator 2
 186 006e 47F6FF73 		movw	r3, #32767
 187              	.L7:
 188              		.loc 1 231 0 discriminator 3
 189 0072 FB81     		strh	r3, [r7, #14]	@ movhi
 232:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( 0x80 | ((txLen>>8)&0x007F) );
 190              		.loc 1 232 0 is_stmt 1 discriminator 3
 191 0074 FB89     		ldrh	r3, [r7, #14]
 192 0076 4FEA1323 		lsr	r3, r3, #8
 193 007a 9BB2     		uxth	r3, r3
 194 007c DBB2     		uxtb	r3, r3
 195 007e 63F07F03 		orn	r3, r3, #127
 196 0082 DBB2     		uxtb	r3, r3
 197 0084 DBB2     		uxtb	r3, r3
 198 0086 1846     		mov	r0, r3
 199 0088 FFF7FEFF 		bl	SPI_WriteTxData
 233:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( txLen & 0x00FF );
 200              		.loc 1 233 0 discriminator 3
 201 008c FB89     		ldrh	r3, [r7, #14]	@ movhi
 202 008e DBB2     		uxtb	r3, r3
 203 0090 1846     		mov	r0, r3
 204 0092 FFF7FEFF 		bl	SPI_WriteTxData
 205              	.L13:
 234:.\Generated_Source\PSoC5/ETH.c **** #endif
 235:.\Generated_Source\PSoC5/ETH.c **** 		/*
 236:.\Generated_Source\PSoC5/ETH.c ****          * send the sequence of bytes to the device following the 
 237:.\Generated_Source\PSoC5/ETH.c ****          * header data transfer.  This will wait for the FIFO to  have
 238:.\Generated_Source\PSoC5/ETH.c ****          * available memory prior to writing the data to the part.
 239:.\Generated_Source\PSoC5/ETH.c ****          * at the end of the block the loop exits and ends the operation
 240:.\Generated_Source\PSoC5/ETH.c ****          * by setting the chip select high.
 241:.\Generated_Source\PSoC5/ETH.c ****          */
 242:.\Generated_Source\PSoC5/ETH.c **** 		// Transmit data block
 243:.\Generated_Source\PSoC5/ETH.c **** 		do {
 244:.\Generated_Source\PSoC5/ETH.c **** 			while ( (SPI_ReadTxStatus() & SPI_STS_TX_FIFO_NOT_FULL) == 0);
 206              		.loc 1 244 0
 207 0096 00BF     		nop
 208              	.L8:
 209              		.loc 1 244 0 is_stmt 0 discriminator 1
 210 0098 FFF7FEFF 		bl	SPI_ReadTxStatus
 211 009c 0346     		mov	r3, r0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 9


 212 009e 03F00403 		and	r3, r3, #4
 213 00a2 002B     		cmp	r3, #0
 214 00a4 F8D0     		beq	.L8
 245:.\Generated_Source\PSoC5/ETH.c **** 			SPI_WriteTxData(dat[txCount++]);
 215              		.loc 1 245 0 is_stmt 1
 216 00a6 BB89     		ldrh	r3, [r7, #12]
 217 00a8 3A68     		ldr	r2, [r7, #0]
 218 00aa D318     		adds	r3, r2, r3
 219 00ac 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 220 00ae BA89     		ldrh	r2, [r7, #12]	@ movhi
 221 00b0 02F10102 		add	r2, r2, #1
 222 00b4 BA81     		strh	r2, [r7, #12]	@ movhi
 223 00b6 1846     		mov	r0, r3
 224 00b8 FFF7FEFF 		bl	SPI_WriteTxData
 246:.\Generated_Source\PSoC5/ETH.c **** 			--length;
 225              		.loc 1 246 0
 226 00bc BB88     		ldrh	r3, [r7, #4]	@ movhi
 227 00be 03F1FF33 		add	r3, r3, #-1
 228 00c2 BB80     		strh	r3, [r7, #4]	@ movhi
 247:.\Generated_Source\PSoC5/ETH.c **** 			--txLen;
 229              		.loc 1 247 0
 230 00c4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 231 00c6 03F1FF33 		add	r3, r3, #-1
 232 00ca FB81     		strh	r3, [r7, #14]	@ movhi
 248:.\Generated_Source\PSoC5/ETH.c **** 			++adr;
 233              		.loc 1 248 0
 234 00cc 7B89     		ldrh	r3, [r7, #10]	@ movhi
 235 00ce 03F10103 		add	r3, r3, #1
 236 00d2 7B81     		strh	r3, [r7, #10]	@ movhi
 249:.\Generated_Source\PSoC5/ETH.c **** 		} while ( txLen > 0 );
 237              		.loc 1 249 0
 238 00d4 FB89     		ldrh	r3, [r7, #14]
 239 00d6 002B     		cmp	r3, #0
 240 00d8 DDD1     		bne	.L13
 250:.\Generated_Source\PSoC5/ETH.c **** 
 251:.\Generated_Source\PSoC5/ETH.c **** 		while( ETH_SpiDone == 0) {
 241              		.loc 1 251 0
 242 00da 03E0     		b	.L10
 243              	.L11:
 252:.\Generated_Source\PSoC5/ETH.c **** 			CyDelayUs(1);
 244              		.loc 1 252 0
 245 00dc 4FF00100 		mov	r0, #1
 246 00e0 FFF7FEFF 		bl	CyDelayUs
 247              	.L10:
 251:.\Generated_Source\PSoC5/ETH.c **** 		while( ETH_SpiDone == 0) {
 248              		.loc 1 251 0 discriminator 1
 249 00e4 FFF7FEFF 		bl	SPI_ReadTxStatus
 250 00e8 0346     		mov	r3, r0
 251 00ea 03F01103 		and	r3, r3, #17
 252 00ee 002B     		cmp	r3, #0
 253 00f0 F4D0     		beq	.L11
 253:.\Generated_Source\PSoC5/ETH.c **** 		}
 254:.\Generated_Source\PSoC5/ETH.c **** 		// End operation
 255:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipDeSelect();
 254              		.loc 1 255 0
 255 00f2 FFF7FEFF 		bl	ETH_ChipDeSelect
 256:.\Generated_Source\PSoC5/ETH.c **** 	} while (length > 0);
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 10


 256              		.loc 1 256 0
 257 00f6 BB88     		ldrh	r3, [r7, #4]
 258 00f8 002B     		cmp	r3, #0
 259 00fa A1D1     		bne	.L12
 257:.\Generated_Source\PSoC5/ETH.c **** 	
 258:.\Generated_Source\PSoC5/ETH.c **** 	CyExitCriticalSection( crit );
 260              		.loc 1 258 0
 261 00fc 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 262 00fe 1846     		mov	r0, r3
 263 0100 FFF7FEFF 		bl	CyExitCriticalSection
 259:.\Generated_Source\PSoC5/ETH.c **** }
 264              		.loc 1 259 0
 265 0104 07F11007 		add	r7, r7, #16
 266 0108 BD46     		mov	sp, r7
 267 010a 80BD     		pop	{r7, pc}
 268              		.cfi_endproc
 269              	.LFE2:
 270              		.size	ETH_ChipWrite, .-ETH_ChipWrite
 271              		.section	.text.ETH_ChipRead,"ax",%progbits
 272              		.align	2
 273              		.global	ETH_ChipRead
 274              		.thumb
 275              		.thumb_func
 276              		.type	ETH_ChipRead, %function
 277              	ETH_ChipRead:
 278              	.LFB3:
 260:.\Generated_Source\PSoC5/ETH.c **** 
 261:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 262:.\Generated_Source\PSoC5/ETH.c **** /**
 263:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read data from the W5100 at the spsecified address
 264:.\Generated_Source\PSoC5/ETH.c ****  * \param addr Address from which to read
 265:.\Generated_Source\PSoC5/ETH.c ****  * \returns the data read from the address
 266:.\Generated_Source\PSoC5/ETH.c ****  *
 267:.\Generated_Source\PSoC5/ETH.c ****  * this fucntion will access a W5100 memory location and read the contents
 268:.\Generated_Source\PSoC5/ETH.c ****  * using the serial protocol specified on P.61 of the datasheet.
 269:.\Generated_Source\PSoC5/ETH.c ****  */
 270:.\Generated_Source\PSoC5/ETH.c **** void
 271:.\Generated_Source\PSoC5/ETH.c **** ETH_ChipRead(uint16 addr, uint8 *dat, uint16 length)
 272:.\Generated_Source\PSoC5/ETH.c **** {
 279              		.loc 1 272 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 24
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283 0000 80B5     		push	{r7, lr}
 284              	.LCFI7:
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 7, -8
 287              		.cfi_offset 14, -4
 288 0002 86B0     		sub	sp, sp, #24
 289              	.LCFI8:
 290              		.cfi_def_cfa_offset 32
 291 0004 00AF     		add	r7, sp, #0
 292              	.LCFI9:
 293              		.cfi_def_cfa_register 7
 294 0006 3960     		str	r1, [r7, #0]
 295 0008 1346     		mov	r3, r2
 296 000a 0246     		mov	r2, r0	@ movhi
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 11


 297 000c FA80     		strh	r2, [r7, #6]	@ movhi
 298 000e BB80     		strh	r3, [r7, #4]	@ movhi
 273:.\Generated_Source\PSoC5/ETH.c **** 	uint16 rxIndex;
 274:.\Generated_Source\PSoC5/ETH.c **** 	uint16 address;
 275:.\Generated_Source\PSoC5/ETH.c **** 	uint16 rxLen;
 276:.\Generated_Source\PSoC5/ETH.c **** 	uint16 txBytes;
 277:.\Generated_Source\PSoC5/ETH.c **** 	uint8 dump; // the number of bytes to ignore from the data stream readback
 278:.\Generated_Source\PSoC5/ETH.c **** 	uint16 rxCount;
 279:.\Generated_Source\PSoC5/ETH.c **** 	uint8 rxb;
 280:.\Generated_Source\PSoC5/ETH.c **** 	
 281:.\Generated_Source\PSoC5/ETH.c **** 	/* V1.1: Wait for SPI operation to complete */
 282:.\Generated_Source\PSoC5/ETH.c **** 	while( ETH_SpiDone == 0) {
 299              		.loc 1 282 0
 300 0010 03E0     		b	.L15
 301              	.L16:
 283:.\Generated_Source\PSoC5/ETH.c **** 		CyDelayUs(1);
 302              		.loc 1 283 0
 303 0012 4FF00100 		mov	r0, #1
 304 0016 FFF7FEFF 		bl	CyDelayUs
 305              	.L15:
 282:.\Generated_Source\PSoC5/ETH.c **** 	while( ETH_SpiDone == 0) {
 306              		.loc 1 282 0 discriminator 1
 307 001a FFF7FEFF 		bl	SPI_ReadTxStatus
 308 001e 0346     		mov	r3, r0
 309 0020 03F01103 		and	r3, r3, #17
 310 0024 002B     		cmp	r3, #0
 311 0026 F4D0     		beq	.L16
 284:.\Generated_Source\PSoC5/ETH.c **** 	}
 285:.\Generated_Source\PSoC5/ETH.c **** 	/* V1.1: End change */
 286:.\Generated_Source\PSoC5/ETH.c **** 
 287:.\Generated_Source\PSoC5/ETH.c **** 	address = addr; // assign base pointer address
 312              		.loc 1 287 0
 313 0028 FB88     		ldrh	r3, [r7, #6]	@ movhi
 314 002a BB82     		strh	r3, [r7, #20]	@ movhi
 288:.\Generated_Source\PSoC5/ETH.c **** 	rxIndex = 0;    // default the starting index for the receive to zero
 315              		.loc 1 288 0
 316 002c 4FF00003 		mov	r3, #0
 317 0030 FB82     		strh	r3, [r7, #22]	@ movhi
 318              	.L21:
 289:.\Generated_Source\PSoC5/ETH.c **** 	
 290:.\Generated_Source\PSoC5/ETH.c **** 	do {
 291:.\Generated_Source\PSoC5/ETH.c **** 		/* Write the chip select instance to select the device */
 292:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipSelect();
 319              		.loc 1 292 0
 320 0032 FFF7FEFF 		bl	ETH_ChipSelect
 293:.\Generated_Source\PSoC5/ETH.c **** 		/*
 294:.\Generated_Source\PSoC5/ETH.c **** 		 * First, clear the Rx Buffer of any waiting data.  Then begin the
 295:.\Generated_Source\PSoC5/ETH.c **** 		 * read operation by sending the op code, followed byte the address
 296:.\Generated_Source\PSoC5/ETH.c **** 		 * from which the read will be executed, then send a dummy byte
 297:.\Generated_Source\PSoC5/ETH.c **** 		 * of zeros to read the data from the device.
 298:.\Generated_Source\PSoC5/ETH.c **** 		 */
 299:.\Generated_Source\PSoC5/ETH.c **** 		SPI_ClearRxBuffer();
 321              		.loc 1 299 0
 322 0036 FFF7FEFF 		bl	SPI_ClearRxBuffer
 300:.\Generated_Source\PSoC5/ETH.c **** 		/* Send the device header */
 301:.\Generated_Source\PSoC5/ETH.c **** 		rxCount = 0; // initialize the bytes received to none
 323              		.loc 1 301 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 12


 324 003a 4FF00003 		mov	r3, #0
 325 003e FB81     		strh	r3, [r7, #14]	@ movhi
 302:.\Generated_Source\PSoC5/ETH.c **** #if (2 == 1 )
 303:.\Generated_Source\PSoC5/ETH.c **** 		/*
 304:.\Generated_Source\PSoC5/ETH.c **** 		 * W1100 interface code
 305:.\Generated_Source\PSoC5/ETH.c **** 		 * --------------------
 306:.\Generated_Source\PSoC5/ETH.c **** 		 * The W5100 only supports 1 byte transfers (no burst mode), so
 307:.\Generated_Source\PSoC5/ETH.c **** 		 * peg the receive length as 1 byte, and issue a number of commands
 308:.\Generated_Source\PSoC5/ETH.c **** 		 * in sequence to simulate a burst read.
 309:.\Generated_Source\PSoC5/ETH.c **** 		 */
 310:.\Generated_Source\PSoC5/ETH.c **** 		rxLen = 1;  // The W5100 is limited to 1 byte of data transmitted
 311:.\Generated_Source\PSoC5/ETH.c **** 		dump = 3;   // The W5100 has a 3-byte packet header
 312:.\Generated_Source\PSoC5/ETH.c **** 		txBytes = 0; // Send only one byte afte rthe header then end the transfer
 313:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData(ETH_READ_OP);
 314:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData(address>>8);
 315:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData(address&0x00FF);
 316:.\Generated_Source\PSoC5/ETH.c **** 		
 317:.\Generated_Source\PSoC5/ETH.c **** #elif (2 == 2)
 318:.\Generated_Source\PSoC5/ETH.c **** 		/*
 319:.\Generated_Source\PSoC5/ETH.c **** 		 * W5200 Interface Header
 320:.\Generated_Source\PSoC5/ETH.c **** 		 * ----------------------
 321:.\Generated_Source\PSoC5/ETH.c **** 		 * The W5200 protocol expects an address followed by a read
 322:.\Generated_Source\PSoC5/ETH.c **** 		 * byte count for the header of the protocol, so, this will
 323:.\Generated_Source\PSoC5/ETH.c **** 		 * issue reads up to the max burst length
 324:.\Generated_Source\PSoC5/ETH.c **** 		 */
 325:.\Generated_Source\PSoC5/ETH.c **** 		dump = 4; /*  The W5200 has a definded data length and a header of 4 bytes */
 326              		.loc 1 325 0
 327 0040 4FF00403 		mov	r3, #4
 328 0044 7B74     		strb	r3, [r7, #17]
 326:.\Generated_Source\PSoC5/ETH.c **** 		rxLen = (length < ETH_BURST_MAX) ? length : ETH_BURST_MAX;
 329              		.loc 1 326 0
 330 0046 BA88     		ldrh	r2, [r7, #4]
 331 0048 47F6FF73 		movw	r3, #32767
 332 004c 9A42     		cmp	r2, r3
 333 004e 38BF     		it	cc
 334 0050 1346     		movcc	r3, r2
 335 0052 BB81     		strh	r3, [r7, #12]	@ movhi
 327:.\Generated_Source\PSoC5/ETH.c **** 		/* 
 328:.\Generated_Source\PSoC5/ETH.c **** 		 * Set the number of bytes to transmit before
 329:.\Generated_Source\PSoC5/ETH.c **** 		 * ending the packet to the calculated value
 330:.\Generated_Source\PSoC5/ETH.c **** 		 */
 331:.\Generated_Source\PSoC5/ETH.c **** 		txBytes = 0; 
 336              		.loc 1 331 0
 337 0054 4FF00003 		mov	r3, #0
 338 0058 7B82     		strh	r3, [r7, #18]	@ movhi
 332:.\Generated_Source\PSoC5/ETH.c **** 		/* Send the packet header */
 333:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( address>>8);
 339              		.loc 1 333 0
 340 005a BB8A     		ldrh	r3, [r7, #20]
 341 005c 4FEA1323 		lsr	r3, r3, #8
 342 0060 9BB2     		uxth	r3, r3
 343 0062 DBB2     		uxtb	r3, r3
 344 0064 1846     		mov	r0, r3
 345 0066 FFF7FEFF 		bl	SPI_WriteTxData
 334:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( address & 0x00FF );
 346              		.loc 1 334 0
 347 006a BB8A     		ldrh	r3, [r7, #20]	@ movhi
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 13


 348 006c DBB2     		uxtb	r3, r3
 349 006e 1846     		mov	r0, r3
 350 0070 FFF7FEFF 		bl	SPI_WriteTxData
 335:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( 0x7F & (rxLen>>8) );
 351              		.loc 1 335 0
 352 0074 BB89     		ldrh	r3, [r7, #12]
 353 0076 4FEA1323 		lsr	r3, r3, #8
 354 007a 9BB2     		uxth	r3, r3
 355 007c DBB2     		uxtb	r3, r3
 356 007e 03F07F03 		and	r3, r3, #127
 357 0082 DBB2     		uxtb	r3, r3
 358 0084 1846     		mov	r0, r3
 359 0086 FFF7FEFF 		bl	SPI_WriteTxData
 336:.\Generated_Source\PSoC5/ETH.c **** 		SPI_WriteTxData( rxLen&0x00FF );
 360              		.loc 1 336 0
 361 008a BB89     		ldrh	r3, [r7, #12]	@ movhi
 362 008c DBB2     		uxtb	r3, r3
 363 008e 1846     		mov	r0, r3
 364 0090 FFF7FEFF 		bl	SPI_WriteTxData
 337:.\Generated_Source\PSoC5/ETH.c **** #endif
 338:.\Generated_Source\PSoC5/ETH.c **** 
 339:.\Generated_Source\PSoC5/ETH.c **** 		while (rxCount < rxLen) {
 365              		.loc 1 339 0
 366 0094 2CE0     		b	.L17
 367              	.L20:
 340:.\Generated_Source\PSoC5/ETH.c **** 			/*
 341:.\Generated_Source\PSoC5/ETH.c **** 			 * Since the header is clogging the buffer (and it is inefficient
 342:.\Generated_Source\PSoC5/ETH.c **** 			 * to just clear the header before executing the reads), this loop
 343:.\Generated_Source\PSoC5/ETH.c **** 			 * will transmit the data completely the header size before
 344:.\Generated_Source\PSoC5/ETH.c **** 			 * the data has been read, so, send the data when the rxLength
 345:.\Generated_Source\PSoC5/ETH.c **** 			 * is not zero.
 346:.\Generated_Source\PSoC5/ETH.c **** 			 */
 347:.\Generated_Source\PSoC5/ETH.c **** 			if (txBytes < rxLen ) {
 368              		.loc 1 347 0
 369 0096 7A8A     		ldrh	r2, [r7, #18]
 370 0098 BB89     		ldrh	r3, [r7, #12]
 371 009a 9A42     		cmp	r2, r3
 372 009c 0FD2     		bcs	.L18
 348:.\Generated_Source\PSoC5/ETH.c **** 				SPI_WriteTxData( 0 );
 373              		.loc 1 348 0
 374 009e 4FF00000 		mov	r0, #0
 375 00a2 FFF7FEFF 		bl	SPI_WriteTxData
 349:.\Generated_Source\PSoC5/ETH.c **** 				address ++;
 376              		.loc 1 349 0
 377 00a6 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 378 00a8 03F10103 		add	r3, r3, #1
 379 00ac BB82     		strh	r3, [r7, #20]	@ movhi
 350:.\Generated_Source\PSoC5/ETH.c **** 				length --;
 380              		.loc 1 350 0
 381 00ae BB88     		ldrh	r3, [r7, #4]	@ movhi
 382 00b0 03F1FF33 		add	r3, r3, #-1
 383 00b4 BB80     		strh	r3, [r7, #4]	@ movhi
 351:.\Generated_Source\PSoC5/ETH.c **** 				txBytes ++;
 384              		.loc 1 351 0
 385 00b6 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 386 00b8 03F10103 		add	r3, r3, #1
 387 00bc 7B82     		strh	r3, [r7, #18]	@ movhi
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 14


 388              	.L18:
 352:.\Generated_Source\PSoC5/ETH.c **** 			}
 353:.\Generated_Source\PSoC5/ETH.c **** //			else {
 354:.\Generated_Source\PSoC5/ETH.c **** //				if (ETH_SpiDone != 0) {
 355:.\Generated_Source\PSoC5/ETH.c **** //					ETH_ChipDeSelect();
 356:.\Generated_Source\PSoC5/ETH.c **** //				}
 357:.\Generated_Source\PSoC5/ETH.c **** //			}
 358:.\Generated_Source\PSoC5/ETH.c **** 			/*
 359:.\Generated_Source\PSoC5/ETH.c **** 			 * Read the data from the buffer.  The header data responses
 360:.\Generated_Source\PSoC5/ETH.c **** 			 * are going to be sitting in the buffer, so dump them
 361:.\Generated_Source\PSoC5/ETH.c **** 			 * and just receive the data bock
 362:.\Generated_Source\PSoC5/ETH.c **** 			 */
 363:.\Generated_Source\PSoC5/ETH.c **** 			rxb = SPI_ReadRxData();
 389              		.loc 1 363 0
 390 00be FFF7FEFF 		bl	SPI_ReadRxData
 391 00c2 0346     		mov	r3, r0
 392 00c4 FB72     		strb	r3, [r7, #11]
 364:.\Generated_Source\PSoC5/ETH.c **** 			dat[rxIndex] = rxb;
 393              		.loc 1 364 0
 394 00c6 FB8A     		ldrh	r3, [r7, #22]
 395 00c8 3A68     		ldr	r2, [r7, #0]
 396 00ca D318     		adds	r3, r2, r3
 397 00cc FA7A     		ldrb	r2, [r7, #11]
 398 00ce 1A70     		strb	r2, [r3, #0]
 365:.\Generated_Source\PSoC5/ETH.c **** 			if (dump > 0) {
 399              		.loc 1 365 0
 400 00d0 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 401 00d2 002B     		cmp	r3, #0
 402 00d4 04D0     		beq	.L19
 366:.\Generated_Source\PSoC5/ETH.c **** 				--dump;
 403              		.loc 1 366 0
 404 00d6 7B7C     		ldrb	r3, [r7, #17]
 405 00d8 03F1FF33 		add	r3, r3, #-1
 406 00dc 7B74     		strb	r3, [r7, #17]
 407 00de 07E0     		b	.L17
 408              	.L19:
 367:.\Generated_Source\PSoC5/ETH.c **** 			}
 368:.\Generated_Source\PSoC5/ETH.c **** 			else {
 369:.\Generated_Source\PSoC5/ETH.c **** 				rxCount++;
 409              		.loc 1 369 0
 410 00e0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 411 00e2 03F10103 		add	r3, r3, #1
 412 00e6 FB81     		strh	r3, [r7, #14]	@ movhi
 370:.\Generated_Source\PSoC5/ETH.c **** 				rxIndex++;;
 413              		.loc 1 370 0
 414 00e8 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 415 00ea 03F10103 		add	r3, r3, #1
 416 00ee FB82     		strh	r3, [r7, #22]	@ movhi
 417              	.L17:
 339:.\Generated_Source\PSoC5/ETH.c **** 		while (rxCount < rxLen) {
 418              		.loc 1 339 0 discriminator 1
 419 00f0 FA89     		ldrh	r2, [r7, #14]
 420 00f2 BB89     		ldrh	r3, [r7, #12]
 421 00f4 9A42     		cmp	r2, r3
 422 00f6 CED3     		bcc	.L20
 371:.\Generated_Source\PSoC5/ETH.c **** 			}
 372:.\Generated_Source\PSoC5/ETH.c **** 		}
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 15


 373:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipDeSelect();
 423              		.loc 1 373 0
 424 00f8 FFF7FEFF 		bl	ETH_ChipDeSelect
 374:.\Generated_Source\PSoC5/ETH.c **** 	}
 375:.\Generated_Source\PSoC5/ETH.c **** 	while ( length > 0);
 425              		.loc 1 375 0
 426 00fc BB88     		ldrh	r3, [r7, #4]
 427 00fe 002B     		cmp	r3, #0
 428 0100 97D1     		bne	.L21
 376:.\Generated_Source\PSoC5/ETH.c **** 	/* Turn off chip select, and set the buffer */
 377:.\Generated_Source\PSoC5/ETH.c **** //	ETH_ChipDeSelect();
 378:.\Generated_Source\PSoC5/ETH.c **** }
 429              		.loc 1 378 0
 430 0102 07F11807 		add	r7, r7, #24
 431 0106 BD46     		mov	sp, r7
 432 0108 80BD     		pop	{r7, pc}
 433              		.cfi_endproc
 434              	.LFE3:
 435              		.size	ETH_ChipRead, .-ETH_ChipRead
 436 010a 00BF     		.section	.text.ETH_ChipWrite16,"ax",%progbits
 437              		.align	2
 438              		.global	ETH_ChipWrite16
 439              		.thumb
 440              		.thumb_func
 441              		.type	ETH_ChipWrite16, %function
 442              	ETH_ChipWrite16:
 443              	.LFB4:
 379:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
 380:.\Generated_Source\PSoC5/ETH.c **** /* SCB Specific Functions */
 381:.\Generated_Source\PSoC5/ETH.c **** #else
 382:.\Generated_Source\PSoC5/ETH.c **** /* include SPI function header for the SCB */
 383:.\Generated_Source\PSoC5/ETH.c **** #include <SPI_SPI_UART.h>
 384:.\Generated_Source\PSoC5/ETH.c **** 
 385:.\Generated_Source\PSoC5/ETH.c **** /* V1.1 : Include the header for the select pin used. */
 386:.\Generated_Source\PSoC5/ETH.c **** #define ETH_SpiDone    ((SPI_SpiUartGetTxBufferSize()==0)?1:0)
 387:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 388:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 389:.\Generated_Source\PSoC5/ETH.c **** /**
 390:.\Generated_Source\PSoC5/ETH.c ****  * \brief write Data to the W5100 at the specified address
 391:.\Generated_Source\PSoC5/ETH.c ****  * \param addr Address of register or memory buffer
 392:.\Generated_Source\PSoC5/ETH.c ****  * \param dat Data to write to the device
 393:.\Generated_Source\PSoC5/ETH.c ****  *
 394:.\Generated_Source\PSoC5/ETH.c ****  * This function will send the WRITE opcode, address and data to the W5100
 395:.\Generated_Source\PSoC5/ETH.c ****  * in order to write the data to the specified register.
 396:.\Generated_Source\PSoC5/ETH.c ****  */
 397:.\Generated_Source\PSoC5/ETH.c **** void
 398:.\Generated_Source\PSoC5/ETH.c **** ETH_ChipWrite(uint16 addr, uint8 *dat, uint16 length)
 399:.\Generated_Source\PSoC5/ETH.c **** {
 400:.\Generated_Source\PSoC5/ETH.c **** 	/* TBD */
 401:.\Generated_Source\PSoC5/ETH.c **** }
 402:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 403:.\Generated_Source\PSoC5/ETH.c **** /**
 404:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read data from the W5100 at the spsecified address
 405:.\Generated_Source\PSoC5/ETH.c ****  * \param addr Address from which to read
 406:.\Generated_Source\PSoC5/ETH.c ****  * \returns the data read from the address
 407:.\Generated_Source\PSoC5/ETH.c ****  *
 408:.\Generated_Source\PSoC5/ETH.c ****  * this fucntion will access a W5100 memory location and read the contents
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 16


 409:.\Generated_Source\PSoC5/ETH.c ****  * using the serial protocol specified on P.61 of the datasheet.
 410:.\Generated_Source\PSoC5/ETH.c ****  */
 411:.\Generated_Source\PSoC5/ETH.c **** void
 412:.\Generated_Source\PSoC5/ETH.c **** ETH_ChipRead(uint16 addr, uint8 *dat, uint16 length)
 413:.\Generated_Source\PSoC5/ETH.c **** {
 414:.\Generated_Source\PSoC5/ETH.c **** 	/* TBD */
 415:.\Generated_Source\PSoC5/ETH.c **** }
 416:.\Generated_Source\PSoC5/ETH.c **** 
 417:.\Generated_Source\PSoC5/ETH.c **** #endif
 418:.\Generated_Source\PSoC5/ETH.c **** 
 419:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
 420:.\Generated_Source\PSoC5/ETH.c **** /* W5x00 Access Primitaves */
 421:.\Generated_Source\PSoC5/ETH.c **** #if (1)
 422:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 423:.\Generated_Source\PSoC5/ETH.c **** /**
 424:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a 16-bit word to the device
 425:.\Generated_Source\PSoC5/ETH.c ****  * \param addr the starting address to which the data will be written
 426:.\Generated_Source\PSoC5/ETH.c ****  * \param val the 16-bit value to write
 427:.\Generated_Source\PSoC5/ETH.c ****  */
 428:.\Generated_Source\PSoC5/ETH.c **** void ETH_ChipWrite16( uint16 addr, uint16 val )
 429:.\Generated_Source\PSoC5/ETH.c **** {
 444              		.loc 1 429 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 16
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448 0000 80B5     		push	{r7, lr}
 449              	.LCFI10:
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 7, -8
 452              		.cfi_offset 14, -4
 453 0002 84B0     		sub	sp, sp, #16
 454              	.LCFI11:
 455              		.cfi_def_cfa_offset 24
 456 0004 00AF     		add	r7, sp, #0
 457              	.LCFI12:
 458              		.cfi_def_cfa_register 7
 459 0006 0246     		mov	r2, r0
 460 0008 0B46     		mov	r3, r1
 461 000a FA80     		strh	r2, [r7, #6]	@ movhi
 462 000c BB80     		strh	r3, [r7, #4]	@ movhi
 430:.\Generated_Source\PSoC5/ETH.c **** 	uint16 bigVal;
 431:.\Generated_Source\PSoC5/ETH.c **** 	
 432:.\Generated_Source\PSoC5/ETH.c **** #if !( CY_PSOC3 ) 
 433:.\Generated_Source\PSoC5/ETH.c **** 	bigVal = CYSWAP_ENDIAN16( val );
 463              		.loc 1 433 0
 464 000e BB88     		ldrh	r3, [r7, #4]
 465 0010 4FEA0323 		lsl	r3, r3, #8
 466 0014 9AB2     		uxth	r2, r3
 467 0016 BB88     		ldrh	r3, [r7, #4]
 468 0018 4FEA1323 		lsr	r3, r3, #8
 469 001c 9BB2     		uxth	r3, r3
 470 001e 9BB2     		uxth	r3, r3
 471 0020 1343     		orrs	r3, r3, r2
 472 0022 9BB2     		uxth	r3, r3
 473 0024 9BB2     		uxth	r3, r3
 474 0026 FB81     		strh	r3, [r7, #14]	@ movhi
 434:.\Generated_Source\PSoC5/ETH.c **** #else
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 17


 435:.\Generated_Source\PSoC5/ETH.c **** 	bigValu = val;
 436:.\Generated_Source\PSoC5/ETH.c **** #endif
 437:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite( addr, (uint8*)&bigVal, 2 );
 475              		.loc 1 437 0
 476 0028 FA88     		ldrh	r2, [r7, #6]
 477 002a 07F10E03 		add	r3, r7, #14
 478 002e 1046     		mov	r0, r2
 479 0030 1946     		mov	r1, r3
 480 0032 4FF00202 		mov	r2, #2
 481 0036 FFF7FEFF 		bl	ETH_ChipWrite
 438:.\Generated_Source\PSoC5/ETH.c **** }
 482              		.loc 1 438 0
 483 003a 07F11007 		add	r7, r7, #16
 484 003e BD46     		mov	sp, r7
 485 0040 80BD     		pop	{r7, pc}
 486              		.cfi_endproc
 487              	.LFE4:
 488              		.size	ETH_ChipWrite16, .-ETH_ChipWrite16
 489 0042 00BF     		.section	.text.ETH_ChipRead16,"ax",%progbits
 490              		.align	2
 491              		.global	ETH_ChipRead16
 492              		.thumb
 493              		.thumb_func
 494              		.type	ETH_ChipRead16, %function
 495              	ETH_ChipRead16:
 496              	.LFB5:
 439:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 440:.\Generated_Source\PSoC5/ETH.c **** /**
 441:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a 16-bit value from the device
 442:.\Generated_Source\PSoC5/ETH.c ****  * \param addr The starting address from which data will be read
 443:.\Generated_Source\PSoC5/ETH.c ****  * \returns the 16-bit value read from the memory.
 444:.\Generated_Source\PSoC5/ETH.c ****  */
 445:.\Generated_Source\PSoC5/ETH.c **** uint16 ETH_ChipRead16( uint16 addr )
 446:.\Generated_Source\PSoC5/ETH.c **** {
 497              		.loc 1 446 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 16
 500              		@ frame_needed = 1, uses_anonymous_args = 0
 501 0000 80B5     		push	{r7, lr}
 502              	.LCFI13:
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 84B0     		sub	sp, sp, #16
 507              	.LCFI14:
 508              		.cfi_def_cfa_offset 24
 509 0004 00AF     		add	r7, sp, #0
 510              	.LCFI15:
 511              		.cfi_def_cfa_register 7
 512 0006 0346     		mov	r3, r0
 513 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 447:.\Generated_Source\PSoC5/ETH.c **** 	uint16 val;
 448:.\Generated_Source\PSoC5/ETH.c **** 	
 449:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead(addr, (uint8*)&val, 2);
 514              		.loc 1 449 0
 515 000a FA88     		ldrh	r2, [r7, #6]
 516 000c 07F10E03 		add	r3, r7, #14
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 18


 517 0010 1046     		mov	r0, r2
 518 0012 1946     		mov	r1, r3
 519 0014 4FF00202 		mov	r2, #2
 520 0018 FFF7FEFF 		bl	ETH_ChipRead
 450:.\Generated_Source\PSoC5/ETH.c **** #if !( CY_PSOC3 )
 451:.\Generated_Source\PSoC5/ETH.c **** 	val = CYSWAP_ENDIAN16( val );
 521              		.loc 1 451 0
 522 001c FB89     		ldrh	r3, [r7, #14]
 523 001e 4FEA0323 		lsl	r3, r3, #8
 524 0022 9AB2     		uxth	r2, r3
 525 0024 FB89     		ldrh	r3, [r7, #14]
 526 0026 4FEA1323 		lsr	r3, r3, #8
 527 002a 9BB2     		uxth	r3, r3
 528 002c 9BB2     		uxth	r3, r3
 529 002e 1343     		orrs	r3, r3, r2
 530 0030 9BB2     		uxth	r3, r3
 531 0032 9BB2     		uxth	r3, r3
 532 0034 FB81     		strh	r3, [r7, #14]	@ movhi
 452:.\Generated_Source\PSoC5/ETH.c **** #endif
 453:.\Generated_Source\PSoC5/ETH.c **** 	
 454:.\Generated_Source\PSoC5/ETH.c **** 	return( val );
 533              		.loc 1 454 0
 534 0036 FB89     		ldrh	r3, [r7, #14]
 455:.\Generated_Source\PSoC5/ETH.c **** }
 535              		.loc 1 455 0
 536 0038 1846     		mov	r0, r3
 537 003a 07F11007 		add	r7, r7, #16
 538 003e BD46     		mov	sp, r7
 539 0040 80BD     		pop	{r7, pc}
 540              		.cfi_endproc
 541              	.LFE5:
 542              		.size	ETH_ChipRead16, .-ETH_ChipRead16
 543 0042 00BF     		.section	.text.ETH_SetSourceMAC,"ax",%progbits
 544              		.align	2
 545              		.global	ETH_SetSourceMAC
 546              		.thumb
 547              		.thumb_func
 548              		.type	ETH_SetSourceMAC, %function
 549              	ETH_SetSourceMAC:
 550              	.LFB6:
 456:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
 457:.\Generated_Source\PSoC5/ETH.c **** /* END SECTION */
 458:.\Generated_Source\PSoC5/ETH.c **** #endif
 459:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
 460:.\Generated_Source\PSoC5/ETH.c **** /* Chip Register access */
 461:.\Generated_Source\PSoC5/ETH.c **** #if (1)
 462:.\Generated_Source\PSoC5/ETH.c **** // Common Registers
 463:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 464:.\Generated_Source\PSoC5/ETH.c **** /**
 465:.\Generated_Source\PSoC5/ETH.c ****  * \brief Set teh chip mac address to teh specified address
 466:.\Generated_Source\PSoC5/ETH.c ****  * \param *mac pointer to the array holding the MAC address
 467:.\Generated_Source\PSoC5/ETH.c ****  */
 468:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSourceMAC( uint8 *mac )
 469:.\Generated_Source\PSoC5/ETH.c **** {
 551              		.loc 1 469 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 19


 554              		@ frame_needed = 1, uses_anonymous_args = 0
 555 0000 80B5     		push	{r7, lr}
 556              	.LCFI16:
 557              		.cfi_def_cfa_offset 8
 558              		.cfi_offset 7, -8
 559              		.cfi_offset 14, -4
 560 0002 82B0     		sub	sp, sp, #8
 561              	.LCFI17:
 562              		.cfi_def_cfa_offset 16
 563 0004 00AF     		add	r7, sp, #0
 564              	.LCFI18:
 565              		.cfi_def_cfa_register 7
 566 0006 7860     		str	r0, [r7, #4]
 470:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite(ETH_REG_SHAR, mac,6 );
 567              		.loc 1 470 0
 568 0008 4FF00900 		mov	r0, #9
 569 000c 7968     		ldr	r1, [r7, #4]
 570 000e 4FF00602 		mov	r2, #6
 571 0012 FFF7FEFF 		bl	ETH_ChipWrite
 471:.\Generated_Source\PSoC5/ETH.c **** }
 572              		.loc 1 471 0
 573 0016 07F10807 		add	r7, r7, #8
 574 001a BD46     		mov	sp, r7
 575 001c 80BD     		pop	{r7, pc}
 576              		.cfi_endproc
 577              	.LFE6:
 578              		.size	ETH_SetSourceMAC, .-ETH_SetSourceMAC
 579 001e 00BF     		.section	.text.ETH_GetSourceMAC,"ax",%progbits
 580              		.align	2
 581              		.global	ETH_GetSourceMAC
 582              		.thumb
 583              		.thumb_func
 584              		.type	ETH_GetSourceMAC, %function
 585              	ETH_GetSourceMAC:
 586              	.LFB7:
 472:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 473:.\Generated_Source\PSoC5/ETH.c **** /**
 474:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read the chip source MAC address from the MAC registers
 475:.\Generated_Source\PSoC5/ETH.c ****  * \param *mac pointer to the address of the buffer to hold the read MAC address
 476:.\Generated_Source\PSoC5/ETH.c ****  */
 477:.\Generated_Source\PSoC5/ETH.c **** void ETH_GetSourceMAC( uint8 *mac )
 478:.\Generated_Source\PSoC5/ETH.c **** {
 587              		.loc 1 478 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 8
 590              		@ frame_needed = 1, uses_anonymous_args = 0
 591 0000 80B5     		push	{r7, lr}
 592              	.LCFI19:
 593              		.cfi_def_cfa_offset 8
 594              		.cfi_offset 7, -8
 595              		.cfi_offset 14, -4
 596 0002 82B0     		sub	sp, sp, #8
 597              	.LCFI20:
 598              		.cfi_def_cfa_offset 16
 599 0004 00AF     		add	r7, sp, #0
 600              	.LCFI21:
 601              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 20


 602 0006 7860     		str	r0, [r7, #4]
 479:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead(ETH_REG_SHAR,mac,6);
 603              		.loc 1 479 0
 604 0008 4FF00900 		mov	r0, #9
 605 000c 7968     		ldr	r1, [r7, #4]
 606 000e 4FF00602 		mov	r2, #6
 607 0012 FFF7FEFF 		bl	ETH_ChipRead
 480:.\Generated_Source\PSoC5/ETH.c **** }
 608              		.loc 1 480 0
 609 0016 07F10807 		add	r7, r7, #8
 610 001a BD46     		mov	sp, r7
 611 001c 80BD     		pop	{r7, pc}
 612              		.cfi_endproc
 613              	.LFE7:
 614              		.size	ETH_GetSourceMAC, .-ETH_GetSourceMAC
 615 001e 00BF     		.section	.text.ETH_SetGatewayAddress,"ax",%progbits
 616              		.align	2
 617              		.global	ETH_SetGatewayAddress
 618              		.thumb
 619              		.thumb_func
 620              		.type	ETH_SetGatewayAddress, %function
 621              	ETH_SetGatewayAddress:
 622              	.LFB8:
 481:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 482:.\Generated_Source\PSoC5/ETH.c **** /**
 483:.\Generated_Source\PSoC5/ETH.c ****  * \brief Set the IPv4 address of the network gateway
 484:.\Generated_Source\PSoC5/ETH.c ****  * \param ip IP address of the gateway
 485:.\Generated_Source\PSoC5/ETH.c ****  */
 486:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetGatewayAddress(uint32 ip)
 487:.\Generated_Source\PSoC5/ETH.c **** {
 623              		.loc 1 487 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 8
 626              		@ frame_needed = 1, uses_anonymous_args = 0
 627 0000 80B5     		push	{r7, lr}
 628              	.LCFI22:
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 7, -8
 631              		.cfi_offset 14, -4
 632 0002 82B0     		sub	sp, sp, #8
 633              	.LCFI23:
 634              		.cfi_def_cfa_offset 16
 635 0004 00AF     		add	r7, sp, #0
 636              	.LCFI24:
 637              		.cfi_def_cfa_register 7
 638 0006 7860     		str	r0, [r7, #4]
 488:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite(ETH_REG_GAR, (uint8*)&(ip),4);
 639              		.loc 1 488 0
 640 0008 07F10403 		add	r3, r7, #4
 641 000c 4FF00100 		mov	r0, #1
 642 0010 1946     		mov	r1, r3
 643 0012 4FF00402 		mov	r2, #4
 644 0016 FFF7FEFF 		bl	ETH_ChipWrite
 489:.\Generated_Source\PSoC5/ETH.c **** }
 645              		.loc 1 489 0
 646 001a 07F10807 		add	r7, r7, #8
 647 001e BD46     		mov	sp, r7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 21


 648 0020 80BD     		pop	{r7, pc}
 649              		.cfi_endproc
 650              	.LFE8:
 651              		.size	ETH_SetGatewayAddress, .-ETH_SetGatewayAddress
 652 0022 00BF     		.section	.text.ETH_GetGatewayAddress,"ax",%progbits
 653              		.align	2
 654              		.global	ETH_GetGatewayAddress
 655              		.thumb
 656              		.thumb_func
 657              		.type	ETH_GetGatewayAddress, %function
 658              	ETH_GetGatewayAddress:
 659              	.LFB9:
 490:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 491:.\Generated_Source\PSoC5/ETH.c **** /**
 492:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read the gateway address from the device
 493:.\Generated_Source\PSoC5/ETH.c ****  * \returns the IP address of the gateway
 494:.\Generated_Source\PSoC5/ETH.c ****  */
 495:.\Generated_Source\PSoC5/ETH.c **** uint32 ETH_GetGatewayAddress( void )
 496:.\Generated_Source\PSoC5/ETH.c **** {
 660              		.loc 1 496 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 8
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664 0000 80B5     		push	{r7, lr}
 665              	.LCFI25:
 666              		.cfi_def_cfa_offset 8
 667              		.cfi_offset 7, -8
 668              		.cfi_offset 14, -4
 669 0002 82B0     		sub	sp, sp, #8
 670              	.LCFI26:
 671              		.cfi_def_cfa_offset 16
 672 0004 00AF     		add	r7, sp, #0
 673              	.LCFI27:
 674              		.cfi_def_cfa_register 7
 497:.\Generated_Source\PSoC5/ETH.c **** 	uint32 ip = 0xFFFFFFFF;
 675              		.loc 1 497 0
 676 0006 4FF0FF33 		mov	r3, #-1
 677 000a 7B60     		str	r3, [r7, #4]
 498:.\Generated_Source\PSoC5/ETH.c **** 	
 499:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead( ETH_REG_GAR, (uint8*)(ip), 4);
 678              		.loc 1 499 0
 679 000c 7B68     		ldr	r3, [r7, #4]
 680 000e 4FF00100 		mov	r0, #1
 681 0012 1946     		mov	r1, r3
 682 0014 4FF00402 		mov	r2, #4
 683 0018 FFF7FEFF 		bl	ETH_ChipRead
 500:.\Generated_Source\PSoC5/ETH.c **** 	
 501:.\Generated_Source\PSoC5/ETH.c **** 	return ip;
 684              		.loc 1 501 0
 685 001c 7B68     		ldr	r3, [r7, #4]
 502:.\Generated_Source\PSoC5/ETH.c **** }
 686              		.loc 1 502 0
 687 001e 1846     		mov	r0, r3
 688 0020 07F10807 		add	r7, r7, #8
 689 0024 BD46     		mov	sp, r7
 690 0026 80BD     		pop	{r7, pc}
 691              		.cfi_endproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 22


 692              	.LFE9:
 693              		.size	ETH_GetGatewayAddress, .-ETH_GetGatewayAddress
 694              		.section	.text.ETH_SetSubnetMask,"ax",%progbits
 695              		.align	2
 696              		.global	ETH_SetSubnetMask
 697              		.thumb
 698              		.thumb_func
 699              		.type	ETH_SetSubnetMask, %function
 700              	ETH_SetSubnetMask:
 701              	.LFB10:
 503:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 504:.\Generated_Source\PSoC5/ETH.c **** /**
 505:.\Generated_Source\PSoC5/ETH.c ****  * \brief set the subnet mask of the ethernet device
 506:.\Generated_Source\PSoC5/ETH.c ****  * \param the subnet mask (IPv4)
 507:.\Generated_Source\PSoC5/ETH.c ****  */
 508:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSubnetMask( uint32 ip )
 509:.\Generated_Source\PSoC5/ETH.c **** {
 702              		.loc 1 509 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 8
 705              		@ frame_needed = 1, uses_anonymous_args = 0
 706 0000 80B5     		push	{r7, lr}
 707              	.LCFI28:
 708              		.cfi_def_cfa_offset 8
 709              		.cfi_offset 7, -8
 710              		.cfi_offset 14, -4
 711 0002 82B0     		sub	sp, sp, #8
 712              	.LCFI29:
 713              		.cfi_def_cfa_offset 16
 714 0004 00AF     		add	r7, sp, #0
 715              	.LCFI30:
 716              		.cfi_def_cfa_register 7
 717 0006 7860     		str	r0, [r7, #4]
 510:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite(ETH_REG_SUBR, (uint8*)&(ip), 4);
 718              		.loc 1 510 0
 719 0008 07F10403 		add	r3, r7, #4
 720 000c 4FF00500 		mov	r0, #5
 721 0010 1946     		mov	r1, r3
 722 0012 4FF00402 		mov	r2, #4
 723 0016 FFF7FEFF 		bl	ETH_ChipWrite
 511:.\Generated_Source\PSoC5/ETH.c **** }
 724              		.loc 1 511 0
 725 001a 07F10807 		add	r7, r7, #8
 726 001e BD46     		mov	sp, r7
 727 0020 80BD     		pop	{r7, pc}
 728              		.cfi_endproc
 729              	.LFE10:
 730              		.size	ETH_SetSubnetMask, .-ETH_SetSubnetMask
 731 0022 00BF     		.section	.text.ETH_GetSubnetMask,"ax",%progbits
 732              		.align	2
 733              		.global	ETH_GetSubnetMask
 734              		.thumb
 735              		.thumb_func
 736              		.type	ETH_GetSubnetMask, %function
 737              	ETH_GetSubnetMask:
 738              	.LFB11:
 512:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 23


 513:.\Generated_Source\PSoC5/ETH.c **** /**
 514:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read the subnet mask from the device
 515:.\Generated_Source\PSoC5/ETH.c ****  * \returns the subnet mask that was read from the device.
 516:.\Generated_Source\PSoC5/ETH.c ****  */
 517:.\Generated_Source\PSoC5/ETH.c **** uint32 ETH_GetSubnetMask( void )
 518:.\Generated_Source\PSoC5/ETH.c **** {
 739              		.loc 1 518 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 8
 742              		@ frame_needed = 1, uses_anonymous_args = 0
 743 0000 80B5     		push	{r7, lr}
 744              	.LCFI31:
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 7, -8
 747              		.cfi_offset 14, -4
 748 0002 82B0     		sub	sp, sp, #8
 749              	.LCFI32:
 750              		.cfi_def_cfa_offset 16
 751 0004 00AF     		add	r7, sp, #0
 752              	.LCFI33:
 753              		.cfi_def_cfa_register 7
 519:.\Generated_Source\PSoC5/ETH.c **** 	uint32 ip = 0xFFFFFFFF;
 754              		.loc 1 519 0
 755 0006 4FF0FF33 		mov	r3, #-1
 756 000a 7B60     		str	r3, [r7, #4]
 520:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead(ETH_REG_SUBR, (uint8*)(ip), 4);
 757              		.loc 1 520 0
 758 000c 7B68     		ldr	r3, [r7, #4]
 759 000e 4FF00500 		mov	r0, #5
 760 0012 1946     		mov	r1, r3
 761 0014 4FF00402 		mov	r2, #4
 762 0018 FFF7FEFF 		bl	ETH_ChipRead
 521:.\Generated_Source\PSoC5/ETH.c **** 	return ip;
 763              		.loc 1 521 0
 764 001c 7B68     		ldr	r3, [r7, #4]
 522:.\Generated_Source\PSoC5/ETH.c **** }
 765              		.loc 1 522 0
 766 001e 1846     		mov	r0, r3
 767 0020 07F10807 		add	r7, r7, #8
 768 0024 BD46     		mov	sp, r7
 769 0026 80BD     		pop	{r7, pc}
 770              		.cfi_endproc
 771              	.LFE11:
 772              		.size	ETH_GetSubnetMask, .-ETH_GetSubnetMask
 773              		.section	.text.ETH_SetSourceIP,"ax",%progbits
 774              		.align	2
 775              		.global	ETH_SetSourceIP
 776              		.thumb
 777              		.thumb_func
 778              		.type	ETH_SetSourceIP, %function
 779              	ETH_SetSourceIP:
 780              	.LFB12:
 523:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 524:.\Generated_Source\PSoC5/ETH.c **** /**
 525:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write the device source IPv4 address
 526:.\Generated_Source\PSoC5/ETH.c ****  * \param ip the ip address to set as the chip IP address
 527:.\Generated_Source\PSoC5/ETH.c ****  */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 24


 528:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSourceIP(uint32 ip )
 529:.\Generated_Source\PSoC5/ETH.c **** {
 781              		.loc 1 529 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 8
 784              		@ frame_needed = 1, uses_anonymous_args = 0
 785 0000 80B5     		push	{r7, lr}
 786              	.LCFI34:
 787              		.cfi_def_cfa_offset 8
 788              		.cfi_offset 7, -8
 789              		.cfi_offset 14, -4
 790 0002 82B0     		sub	sp, sp, #8
 791              	.LCFI35:
 792              		.cfi_def_cfa_offset 16
 793 0004 00AF     		add	r7, sp, #0
 794              	.LCFI36:
 795              		.cfi_def_cfa_register 7
 796 0006 7860     		str	r0, [r7, #4]
 530:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite( ETH_REG_SIPR, (uint8*)&(ip), 4 );
 797              		.loc 1 530 0
 798 0008 07F10403 		add	r3, r7, #4
 799 000c 4FF00F00 		mov	r0, #15
 800 0010 1946     		mov	r1, r3
 801 0012 4FF00402 		mov	r2, #4
 802 0016 FFF7FEFF 		bl	ETH_ChipWrite
 531:.\Generated_Source\PSoC5/ETH.c **** }
 803              		.loc 1 531 0
 804 001a 07F10807 		add	r7, r7, #8
 805 001e BD46     		mov	sp, r7
 806 0020 80BD     		pop	{r7, pc}
 807              		.cfi_endproc
 808              	.LFE12:
 809              		.size	ETH_SetSourceIP, .-ETH_SetSourceIP
 810 0022 00BF     		.section	.text.ETH_GetSourceIP,"ax",%progbits
 811              		.align	2
 812              		.global	ETH_GetSourceIP
 813              		.thumb
 814              		.thumb_func
 815              		.type	ETH_GetSourceIP, %function
 816              	ETH_GetSourceIP:
 817              	.LFB13:
 532:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 533:.\Generated_Source\PSoC5/ETH.c **** /**
 534:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read the device's programmed IP address
 535:.\Generated_Source\PSoC5/ETH.c ****  * \returns The IPv4 address to which the device is set.
 536:.\Generated_Source\PSoC5/ETH.c ****  */
 537:.\Generated_Source\PSoC5/ETH.c **** uint32 ETH_GetSourceIP( void )
 538:.\Generated_Source\PSoC5/ETH.c **** {
 818              		.loc 1 538 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 8
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822 0000 80B5     		push	{r7, lr}
 823              	.LCFI37:
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 7, -8
 826              		.cfi_offset 14, -4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 25


 827 0002 82B0     		sub	sp, sp, #8
 828              	.LCFI38:
 829              		.cfi_def_cfa_offset 16
 830 0004 00AF     		add	r7, sp, #0
 831              	.LCFI39:
 832              		.cfi_def_cfa_register 7
 539:.\Generated_Source\PSoC5/ETH.c **** 	uint32 ip = 0xFFFFFFFF;
 833              		.loc 1 539 0
 834 0006 4FF0FF33 		mov	r3, #-1
 835 000a 7B60     		str	r3, [r7, #4]
 540:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead( ETH_REG_SIPR, (uint8*)(ip), 4 );
 836              		.loc 1 540 0
 837 000c 7B68     		ldr	r3, [r7, #4]
 838 000e 4FF00F00 		mov	r0, #15
 839 0012 1946     		mov	r1, r3
 840 0014 4FF00402 		mov	r2, #4
 841 0018 FFF7FEFF 		bl	ETH_ChipRead
 541:.\Generated_Source\PSoC5/ETH.c **** 	return ip;
 842              		.loc 1 541 0
 843 001c 7B68     		ldr	r3, [r7, #4]
 542:.\Generated_Source\PSoC5/ETH.c **** }
 844              		.loc 1 542 0
 845 001e 1846     		mov	r0, r3
 846 0020 07F10807 		add	r7, r7, #8
 847 0024 BD46     		mov	sp, r7
 848 0026 80BD     		pop	{r7, pc}
 849              		.cfi_endproc
 850              	.LFE13:
 851              		.size	ETH_GetSourceIP, .-ETH_GetSourceIP
 852              		.section	.text.ETH_SetMode,"ax",%progbits
 853              		.align	2
 854              		.global	ETH_SetMode
 855              		.thumb
 856              		.thumb_func
 857              		.type	ETH_SetMode, %function
 858              	ETH_SetMode:
 859              	.LFB14:
 543:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 544:.\Generated_Source\PSoC5/ETH.c **** /**
 545:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the device internal MODE register
 546:.\Generated_Source\PSoC5/ETH.c ****  * \param mode the value to be written to the mode register.
 547:.\Generated_Source\PSoC5/ETH.c ****  */
 548:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetMode( uint8 mode )
 549:.\Generated_Source\PSoC5/ETH.c **** {
 860              		.loc 1 549 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 8
 863              		@ frame_needed = 1, uses_anonymous_args = 0
 864 0000 80B5     		push	{r7, lr}
 865              	.LCFI40:
 866              		.cfi_def_cfa_offset 8
 867              		.cfi_offset 7, -8
 868              		.cfi_offset 14, -4
 869 0002 82B0     		sub	sp, sp, #8
 870              	.LCFI41:
 871              		.cfi_def_cfa_offset 16
 872 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 26


 873              	.LCFI42:
 874              		.cfi_def_cfa_register 7
 875 0006 0346     		mov	r3, r0
 876 0008 FB71     		strb	r3, [r7, #7]
 550:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite(ETH_REG_MODE, (uint8*)&(mode), 1);
 877              		.loc 1 550 0
 878 000a 07F10703 		add	r3, r7, #7
 879 000e 4FF00000 		mov	r0, #0
 880 0012 1946     		mov	r1, r3
 881 0014 4FF00102 		mov	r2, #1
 882 0018 FFF7FEFF 		bl	ETH_ChipWrite
 551:.\Generated_Source\PSoC5/ETH.c **** }
 883              		.loc 1 551 0
 884 001c 07F10807 		add	r7, r7, #8
 885 0020 BD46     		mov	sp, r7
 886 0022 80BD     		pop	{r7, pc}
 887              		.cfi_endproc
 888              	.LFE14:
 889              		.size	ETH_SetMode, .-ETH_SetMode
 890              		.section	.text.ETH_GetMode,"ax",%progbits
 891              		.align	2
 892              		.global	ETH_GetMode
 893              		.thumb
 894              		.thumb_func
 895              		.type	ETH_GetMode, %function
 896              	ETH_GetMode:
 897              	.LFB15:
 552:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 553:.\Generated_Source\PSoC5/ETH.c **** /**
 554:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read the present contents of the device internal mode register
 555:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value of the mode register
 556:.\Generated_Source\PSoC5/ETH.c ****  */
 557:.\Generated_Source\PSoC5/ETH.c **** uint8 ETH_GetMode( void )
 558:.\Generated_Source\PSoC5/ETH.c **** {
 898              		.loc 1 558 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 8
 901              		@ frame_needed = 1, uses_anonymous_args = 0
 902 0000 80B5     		push	{r7, lr}
 903              	.LCFI43:
 904              		.cfi_def_cfa_offset 8
 905              		.cfi_offset 7, -8
 906              		.cfi_offset 14, -4
 907 0002 82B0     		sub	sp, sp, #8
 908              	.LCFI44:
 909              		.cfi_def_cfa_offset 16
 910 0004 00AF     		add	r7, sp, #0
 911              	.LCFI45:
 912              		.cfi_def_cfa_register 7
 559:.\Generated_Source\PSoC5/ETH.c **** 	uint8 mode;
 560:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead(ETH_REG_MODE, (uint8*)&(mode),1);
 913              		.loc 1 560 0
 914 0006 07F10703 		add	r3, r7, #7
 915 000a 4FF00000 		mov	r0, #0
 916 000e 1946     		mov	r1, r3
 917 0010 4FF00102 		mov	r2, #1
 918 0014 FFF7FEFF 		bl	ETH_ChipRead
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 27


 561:.\Generated_Source\PSoC5/ETH.c **** 	return mode;
 919              		.loc 1 561 0
 920 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 562:.\Generated_Source\PSoC5/ETH.c **** }
 921              		.loc 1 562 0
 922 001a 1846     		mov	r0, r3
 923 001c 07F10807 		add	r7, r7, #8
 924 0020 BD46     		mov	sp, r7
 925 0022 80BD     		pop	{r7, pc}
 926              		.cfi_endproc
 927              	.LFE15:
 928              		.size	ETH_GetMode, .-ETH_GetMode
 929              		.section	.text.ETH_SetIR,"ax",%progbits
 930              		.align	2
 931              		.global	ETH_SetIR
 932              		.thumb
 933              		.thumb_func
 934              		.type	ETH_SetIR, %function
 935              	ETH_SetIR:
 936              	.LFB16:
 563:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 564:.\Generated_Source\PSoC5/ETH.c **** /**
 565:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write the value of the interrupt register
 566:.\Generated_Source\PSoC5/ETH.c ****  * \param ir the value to be written to the interrupt register
 567:.\Generated_Source\PSoC5/ETH.c ****  */
 568:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetIR(uint8 ir )
 569:.\Generated_Source\PSoC5/ETH.c **** {
 937              		.loc 1 569 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 8
 940              		@ frame_needed = 1, uses_anonymous_args = 0
 941 0000 80B5     		push	{r7, lr}
 942              	.LCFI46:
 943              		.cfi_def_cfa_offset 8
 944              		.cfi_offset 7, -8
 945              		.cfi_offset 14, -4
 946 0002 82B0     		sub	sp, sp, #8
 947              	.LCFI47:
 948              		.cfi_def_cfa_offset 16
 949 0004 00AF     		add	r7, sp, #0
 950              	.LCFI48:
 951              		.cfi_def_cfa_register 7
 952 0006 0346     		mov	r3, r0
 953 0008 FB71     		strb	r3, [r7, #7]
 570:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite(ETH_REG_IR,(uint8*)&(ir), 1);
 954              		.loc 1 570 0
 955 000a 07F10703 		add	r3, r7, #7
 956 000e 4FF01500 		mov	r0, #21
 957 0012 1946     		mov	r1, r3
 958 0014 4FF00102 		mov	r2, #1
 959 0018 FFF7FEFF 		bl	ETH_ChipWrite
 571:.\Generated_Source\PSoC5/ETH.c **** }
 960              		.loc 1 571 0
 961 001c 07F10807 		add	r7, r7, #8
 962 0020 BD46     		mov	sp, r7
 963 0022 80BD     		pop	{r7, pc}
 964              		.cfi_endproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 28


 965              	.LFE16:
 966              		.size	ETH_SetIR, .-ETH_SetIR
 967              		.section	.text.ETH_SetSocketRxMemSize,"ax",%progbits
 968              		.align	2
 969              		.global	ETH_SetSocketRxMemSize
 970              		.thumb
 971              		.thumb_func
 972              		.type	ETH_SetSocketRxMemSize, %function
 973              	ETH_SetSocketRxMemSize:
 974              	.LFB17:
 572:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 573:.\Generated_Source\PSoC5/ETH.c **** /**
 574:.\Generated_Source\PSoC5/ETH.c ****  * \brief write a value to the Rx mem size register
 575:.\Generated_Source\PSoC5/ETH.c ****  * \param size the value to be written to the register
 576:.\Generated_Source\PSoC5/ETH.c ****  */
 577:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketRxMemSize( uint8 socket, uint8 size ) 
 578:.\Generated_Source\PSoC5/ETH.c **** {
 975              		.loc 1 578 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 8
 978              		@ frame_needed = 1, uses_anonymous_args = 0
 979 0000 80B5     		push	{r7, lr}
 980              	.LCFI49:
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 82B0     		sub	sp, sp, #8
 985              	.LCFI50:
 986              		.cfi_def_cfa_offset 16
 987 0004 00AF     		add	r7, sp, #0
 988              	.LCFI51:
 989              		.cfi_def_cfa_register 7
 990 0006 0246     		mov	r2, r0
 991 0008 0B46     		mov	r3, r1
 992 000a FA71     		strb	r2, [r7, #7]
 993 000c BB71     		strb	r3, [r7, #6]
 579:.\Generated_Source\PSoC5/ETH.c **** 	uint8 sz;
 580:.\Generated_Source\PSoC5/ETH.c **** 	
 581:.\Generated_Source\PSoC5/ETH.c **** #if (2 == 1)
 582:.\Generated_Source\PSoC5/ETH.c **** 	/*
 583:.\Generated_Source\PSoC5/ETH.c **** 	 * The W5100 uses memory allocations within one register for all sockets.
 584:.\Generated_Source\PSoC5/ETH.c **** 	 * the options are set by a 2 bit code for 1, 2, 4, or 8 K
 585:.\Generated_Source\PSoC5/ETH.c **** 	 */
 586:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipRead( ETH_REG_RMSR, &sz, 1);
 587:.\Generated_Source\PSoC5/ETH.c **** 		sz = sz & (~(3<<(socket<<1)));
 588:.\Generated_Source\PSoC5/ETH.c **** 		sz = sz | (size<<(socket<<1));
 589:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipWrite( ETH_REG_RMSR, &sz, 1);
 590:.\Generated_Source\PSoC5/ETH.c **** #elif (2 == 2)
 591:.\Generated_Source\PSoC5/ETH.c **** 	/*
 592:.\Generated_Source\PSoC5/ETH.c **** 	 * The W5200 interface uses memory size registers located within the socket
 593:.\Generated_Source\PSoC5/ETH.c **** 	 * register memory maps.
 594:.\Generated_Source\PSoC5/ETH.c **** 	 */
 595:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite( ETH_SOCKET_REG(socket,ETH_SOCK_RXMEM), &size, 1);
 994              		.loc 1 595 0
 995 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 996 0010 9BB2     		uxth	r3, r3
 997 0012 4FEA0323 		lsl	r3, r3, #8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 29


 998 0016 9BB2     		uxth	r3, r3
 999 0018 03F58043 		add	r3, r3, #16384
 1000 001c 03F11E03 		add	r3, r3, #30
 1001 0020 9AB2     		uxth	r2, r3
 1002 0022 07F10603 		add	r3, r7, #6
 1003 0026 1046     		mov	r0, r2
 1004 0028 1946     		mov	r1, r3
 1005 002a 4FF00102 		mov	r2, #1
 1006 002e FFF7FEFF 		bl	ETH_ChipWrite
 596:.\Generated_Source\PSoC5/ETH.c **** #endif
 597:.\Generated_Source\PSoC5/ETH.c **** }
 1007              		.loc 1 597 0
 1008 0032 07F10807 		add	r7, r7, #8
 1009 0036 BD46     		mov	sp, r7
 1010 0038 80BD     		pop	{r7, pc}
 1011              		.cfi_endproc
 1012              	.LFE17:
 1013              		.size	ETH_SetSocketRxMemSize, .-ETH_SetSocketRxMemSize
 1014 003a 00BF     		.section	.text.ETH_GetSocketRxMemSize,"ax",%progbits
 1015              		.align	2
 1016              		.global	ETH_GetSocketRxMemSize
 1017              		.thumb
 1018              		.thumb_func
 1019              		.type	ETH_GetSocketRxMemSize, %function
 1020              	ETH_GetSocketRxMemSize:
 1021              	.LFB18:
 598:.\Generated_Source\PSoC5/ETH.c **** 
 599:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 600:.\Generated_Source\PSoC5/ETH.c **** /**
 601:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read the contents of hte rx mem size register
 602:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from teh register
 603:.\Generated_Source\PSoC5/ETH.c ****  */
 604:.\Generated_Source\PSoC5/ETH.c **** uint8 ETH_GetSocketRxMemSize( uint8 socket )
 605:.\Generated_Source\PSoC5/ETH.c **** {
 1022              		.loc 1 605 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 16
 1025              		@ frame_needed = 1, uses_anonymous_args = 0
 1026 0000 80B5     		push	{r7, lr}
 1027              	.LCFI52:
 1028              		.cfi_def_cfa_offset 8
 1029              		.cfi_offset 7, -8
 1030              		.cfi_offset 14, -4
 1031 0002 84B0     		sub	sp, sp, #16
 1032              	.LCFI53:
 1033              		.cfi_def_cfa_offset 24
 1034 0004 00AF     		add	r7, sp, #0
 1035              	.LCFI54:
 1036              		.cfi_def_cfa_register 7
 1037 0006 0346     		mov	r3, r0
 1038 0008 FB71     		strb	r3, [r7, #7]
 606:.\Generated_Source\PSoC5/ETH.c **** 	uint8 sz;
 607:.\Generated_Source\PSoC5/ETH.c **** 	
 608:.\Generated_Source\PSoC5/ETH.c **** 	sz = 0xFF;
 1039              		.loc 1 608 0
 1040 000a 4FF0FF03 		mov	r3, #255
 1041 000e FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 30


 609:.\Generated_Source\PSoC5/ETH.c **** #if (2 == 1)
 610:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead(ETH_REG_RMSR, &sz, 1);
 611:.\Generated_Source\PSoC5/ETH.c **** 	sz = (sz >> (socket<<1)) & 0x03;
 612:.\Generated_Source\PSoC5/ETH.c **** #elif (2 == 2)
 613:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead( ETH_SOCKET_REG(socket,ETH_SOCK_RXMEM), &sz, 1);
 1042              		.loc 1 613 0
 1043 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1044 0012 9BB2     		uxth	r3, r3
 1045 0014 4FEA0323 		lsl	r3, r3, #8
 1046 0018 9BB2     		uxth	r3, r3
 1047 001a 03F58043 		add	r3, r3, #16384
 1048 001e 03F11E03 		add	r3, r3, #30
 1049 0022 9AB2     		uxth	r2, r3
 1050 0024 07F10F03 		add	r3, r7, #15
 1051 0028 1046     		mov	r0, r2
 1052 002a 1946     		mov	r1, r3
 1053 002c 4FF00102 		mov	r2, #1
 1054 0030 FFF7FEFF 		bl	ETH_ChipRead
 614:.\Generated_Source\PSoC5/ETH.c **** #endif
 615:.\Generated_Source\PSoC5/ETH.c **** 	return sz;
 1055              		.loc 1 615 0
 1056 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 616:.\Generated_Source\PSoC5/ETH.c **** }
 1057              		.loc 1 616 0
 1058 0036 1846     		mov	r0, r3
 1059 0038 07F11007 		add	r7, r7, #16
 1060 003c BD46     		mov	sp, r7
 1061 003e 80BD     		pop	{r7, pc}
 1062              		.cfi_endproc
 1063              	.LFE18:
 1064              		.size	ETH_GetSocketRxMemSize, .-ETH_GetSocketRxMemSize
 1065              		.section	.text.ETH_SetSocketTxMemSize,"ax",%progbits
 1066              		.align	2
 1067              		.global	ETH_SetSocketTxMemSize
 1068              		.thumb
 1069              		.thumb_func
 1070              		.type	ETH_SetSocketTxMemSize, %function
 1071              	ETH_SetSocketTxMemSize:
 1072              	.LFB19:
 617:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 618:.\Generated_Source\PSoC5/ETH.c **** /**
 619:.\Generated_Source\PSoC5/ETH.c ****  * \brief write a value to the tx mem size register
 620:.\Generated_Source\PSoC5/ETH.c ****  * \param size The value to be written to the register
 621:.\Generated_Source\PSoC5/ETH.c ****  */
 622:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketTxMemSize( uint8 socket, uint8 size )
 623:.\Generated_Source\PSoC5/ETH.c **** {
 1073              		.loc 1 623 0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 8
 1076              		@ frame_needed = 1, uses_anonymous_args = 0
 1077 0000 80B5     		push	{r7, lr}
 1078              	.LCFI55:
 1079              		.cfi_def_cfa_offset 8
 1080              		.cfi_offset 7, -8
 1081              		.cfi_offset 14, -4
 1082 0002 82B0     		sub	sp, sp, #8
 1083              	.LCFI56:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 31


 1084              		.cfi_def_cfa_offset 16
 1085 0004 00AF     		add	r7, sp, #0
 1086              	.LCFI57:
 1087              		.cfi_def_cfa_register 7
 1088 0006 0246     		mov	r2, r0
 1089 0008 0B46     		mov	r3, r1
 1090 000a FA71     		strb	r2, [r7, #7]
 1091 000c BB71     		strb	r3, [r7, #6]
 624:.\Generated_Source\PSoC5/ETH.c **** 	uint8 sz;
 625:.\Generated_Source\PSoC5/ETH.c **** 	
 626:.\Generated_Source\PSoC5/ETH.c **** #if (2 == 1)
 627:.\Generated_Source\PSoC5/ETH.c **** 	/*
 628:.\Generated_Source\PSoC5/ETH.c **** 	 * The W5100 uses memory allocations within one register for all sockets.
 629:.\Generated_Source\PSoC5/ETH.c **** 	 * the options are set by a 2 bit code for 1, 2, 4, or 8 K
 630:.\Generated_Source\PSoC5/ETH.c **** 	 */
 631:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipRead( ETH_REG_TXSR, &sz, 1);
 632:.\Generated_Source\PSoC5/ETH.c **** 		sz = sz & (~(3<<(socket<<1)));
 633:.\Generated_Source\PSoC5/ETH.c **** 		sz = sz | (size<<(socket<<1));
 634:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipWrite( ETH_REG_TXSR, &sz, 1);
 635:.\Generated_Source\PSoC5/ETH.c **** #elif (2 == 2)
 636:.\Generated_Source\PSoC5/ETH.c **** 	/*
 637:.\Generated_Source\PSoC5/ETH.c **** 	 * The W5200 interface uses memory size registers located within the socket
 638:.\Generated_Source\PSoC5/ETH.c **** 	 * register memory maps.
 639:.\Generated_Source\PSoC5/ETH.c **** 	 */
 640:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite( ETH_SOCKET_REG(socket,ETH_SOCK_TXMEM), &size, 1);
 1092              		.loc 1 640 0
 1093 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1094 0010 9BB2     		uxth	r3, r3
 1095 0012 4FEA0323 		lsl	r3, r3, #8
 1096 0016 9BB2     		uxth	r3, r3
 1097 0018 03F58043 		add	r3, r3, #16384
 1098 001c 03F11F03 		add	r3, r3, #31
 1099 0020 9AB2     		uxth	r2, r3
 1100 0022 07F10603 		add	r3, r7, #6
 1101 0026 1046     		mov	r0, r2
 1102 0028 1946     		mov	r1, r3
 1103 002a 4FF00102 		mov	r2, #1
 1104 002e FFF7FEFF 		bl	ETH_ChipWrite
 641:.\Generated_Source\PSoC5/ETH.c **** #endif
 642:.\Generated_Source\PSoC5/ETH.c **** }
 1105              		.loc 1 642 0
 1106 0032 07F10807 		add	r7, r7, #8
 1107 0036 BD46     		mov	sp, r7
 1108 0038 80BD     		pop	{r7, pc}
 1109              		.cfi_endproc
 1110              	.LFE19:
 1111              		.size	ETH_SetSocketTxMemSize, .-ETH_SetSocketTxMemSize
 1112 003a 00BF     		.section	.text.ETH_GetSocketTxMemSize,"ax",%progbits
 1113              		.align	2
 1114              		.global	ETH_GetSocketTxMemSize
 1115              		.thumb
 1116              		.thumb_func
 1117              		.type	ETH_GetSocketTxMemSize, %function
 1118              	ETH_GetSocketTxMemSize:
 1119              	.LFB20:
 643:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 644:.\Generated_Source\PSoC5/ETH.c **** /**
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 32


 645:.\Generated_Source\PSoC5/ETH.c ****  * \brief read the contents of the tx mem size register
 646:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 647:.\Generated_Source\PSoC5/ETH.c ****  */
 648:.\Generated_Source\PSoC5/ETH.c **** uint8 ETH_GetSocketTxMemSize( uint8 socket )
 649:.\Generated_Source\PSoC5/ETH.c **** {
 1120              		.loc 1 649 0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 16
 1123              		@ frame_needed = 1, uses_anonymous_args = 0
 1124 0000 80B5     		push	{r7, lr}
 1125              	.LCFI58:
 1126              		.cfi_def_cfa_offset 8
 1127              		.cfi_offset 7, -8
 1128              		.cfi_offset 14, -4
 1129 0002 84B0     		sub	sp, sp, #16
 1130              	.LCFI59:
 1131              		.cfi_def_cfa_offset 24
 1132 0004 00AF     		add	r7, sp, #0
 1133              	.LCFI60:
 1134              		.cfi_def_cfa_register 7
 1135 0006 0346     		mov	r3, r0
 1136 0008 FB71     		strb	r3, [r7, #7]
 650:.\Generated_Source\PSoC5/ETH.c **** 	uint8 sz;
 651:.\Generated_Source\PSoC5/ETH.c **** 	
 652:.\Generated_Source\PSoC5/ETH.c **** 	sz = 0xFF;
 1137              		.loc 1 652 0
 1138 000a 4FF0FF03 		mov	r3, #255
 1139 000e FB73     		strb	r3, [r7, #15]
 653:.\Generated_Source\PSoC5/ETH.c **** #if (2 == 1)
 654:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead(ETH_REG_TXSR, &sz, 1);
 655:.\Generated_Source\PSoC5/ETH.c **** 	sz = (sz >> (socket<<1)) & 0x03;
 656:.\Generated_Source\PSoC5/ETH.c **** #elif (2 == 2)
 657:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead( ETH_SOCKET_REG(socket,ETH_SOCK_TXMEM), &sz, 1);
 1140              		.loc 1 657 0
 1141 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1142 0012 9BB2     		uxth	r3, r3
 1143 0014 4FEA0323 		lsl	r3, r3, #8
 1144 0018 9BB2     		uxth	r3, r3
 1145 001a 03F58043 		add	r3, r3, #16384
 1146 001e 03F11F03 		add	r3, r3, #31
 1147 0022 9AB2     		uxth	r2, r3
 1148 0024 07F10F03 		add	r3, r7, #15
 1149 0028 1046     		mov	r0, r2
 1150 002a 1946     		mov	r1, r3
 1151 002c 4FF00102 		mov	r2, #1
 1152 0030 FFF7FEFF 		bl	ETH_ChipRead
 658:.\Generated_Source\PSoC5/ETH.c **** #endif
 659:.\Generated_Source\PSoC5/ETH.c **** 	return sz;
 1153              		.loc 1 659 0
 1154 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 660:.\Generated_Source\PSoC5/ETH.c **** }
 1155              		.loc 1 660 0
 1156 0036 1846     		mov	r0, r3
 1157 0038 07F11007 		add	r7, r7, #16
 1158 003c BD46     		mov	sp, r7
 1159 003e 80BD     		pop	{r7, pc}
 1160              		.cfi_endproc
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 33


 1161              	.LFE20:
 1162              		.size	ETH_GetSocketTxMemSize, .-ETH_GetSocketTxMemSize
 1163              		.section	.text.ETH_SetSocketMode,"ax",%progbits
 1164              		.align	2
 1165              		.global	ETH_SetSocketMode
 1166              		.thumb
 1167              		.thumb_func
 1168              		.type	ETH_SetSocketMode, %function
 1169              	ETH_SetSocketMode:
 1170              	.LFB21:
 661:.\Generated_Source\PSoC5/ETH.c **** 
 662:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
 663:.\Generated_Source\PSoC5/ETH.c **** /* End Section */
 664:.\Generated_Source\PSoC5/ETH.c **** #endif
 665:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
 666:.\Generated_Source\PSoC5/ETH.c **** /* Socket Registers */
 667:.\Generated_Source\PSoC5/ETH.c **** #if (1)
 668:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 669:.\Generated_Source\PSoC5/ETH.c **** /**
 670:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket mode register
 671:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 672:.\Generated_Source\PSoC5/ETH.c ****  * \param mode the value to be written to the register
 673:.\Generated_Source\PSoC5/ETH.c ****  */
 674:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketMode(uint8 socket, uint8 mode)
 675:.\Generated_Source\PSoC5/ETH.c **** {
 1171              		.loc 1 675 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 8
 1174              		@ frame_needed = 1, uses_anonymous_args = 0
 1175 0000 80B5     		push	{r7, lr}
 1176              	.LCFI61:
 1177              		.cfi_def_cfa_offset 8
 1178              		.cfi_offset 7, -8
 1179              		.cfi_offset 14, -4
 1180 0002 82B0     		sub	sp, sp, #8
 1181              	.LCFI62:
 1182              		.cfi_def_cfa_offset 16
 1183 0004 00AF     		add	r7, sp, #0
 1184              	.LCFI63:
 1185              		.cfi_def_cfa_register 7
 1186 0006 0246     		mov	r2, r0
 1187 0008 0B46     		mov	r3, r1
 1188 000a FA71     		strb	r2, [r7, #7]
 1189 000c BB71     		strb	r3, [r7, #6]
 676:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite((ETH_SOCKET_REG(socket, ETH_SOCK_MR)),(uint8*)&(mode), 1);
 1190              		.loc 1 676 0
 1191 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1192 0010 9BB2     		uxth	r3, r3
 1193 0012 4FEA0323 		lsl	r3, r3, #8
 1194 0016 9BB2     		uxth	r3, r3
 1195 0018 03F58043 		add	r3, r3, #16384
 1196 001c 9AB2     		uxth	r2, r3
 1197 001e 07F10603 		add	r3, r7, #6
 1198 0022 1046     		mov	r0, r2
 1199 0024 1946     		mov	r1, r3
 1200 0026 4FF00102 		mov	r2, #1
 1201 002a FFF7FEFF 		bl	ETH_ChipWrite
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 34


 677:.\Generated_Source\PSoC5/ETH.c **** }
 1202              		.loc 1 677 0
 1203 002e 07F10807 		add	r7, r7, #8
 1204 0032 BD46     		mov	sp, r7
 1205 0034 80BD     		pop	{r7, pc}
 1206              		.cfi_endproc
 1207              	.LFE21:
 1208              		.size	ETH_SetSocketMode, .-ETH_SetSocketMode
 1209 0036 00BF     		.section	.text.ETH_SetSocketCommand,"ax",%progbits
 1210              		.align	2
 1211              		.global	ETH_SetSocketCommand
 1212              		.thumb
 1213              		.thumb_func
 1214              		.type	ETH_SetSocketCommand, %function
 1215              	ETH_SetSocketCommand:
 1216              	.LFB22:
 678:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 679:.\Generated_Source\PSoC5/ETH.c **** /**
 680:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket command register
 681:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 682:.\Generated_Source\PSoC5/ETH.c ****  * \param cmd the value to be written to the register
 683:.\Generated_Source\PSoC5/ETH.c ****  */
 684:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketCommand(uint8 socket, uint8 cmd)
 685:.\Generated_Source\PSoC5/ETH.c **** {
 1217              		.loc 1 685 0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 8
 1220              		@ frame_needed = 1, uses_anonymous_args = 0
 1221 0000 80B5     		push	{r7, lr}
 1222              	.LCFI64:
 1223              		.cfi_def_cfa_offset 8
 1224              		.cfi_offset 7, -8
 1225              		.cfi_offset 14, -4
 1226 0002 82B0     		sub	sp, sp, #8
 1227              	.LCFI65:
 1228              		.cfi_def_cfa_offset 16
 1229 0004 00AF     		add	r7, sp, #0
 1230              	.LCFI66:
 1231              		.cfi_def_cfa_register 7
 1232 0006 0246     		mov	r2, r0
 1233 0008 0B46     		mov	r3, r1
 1234 000a FA71     		strb	r2, [r7, #7]
 1235 000c BB71     		strb	r3, [r7, #6]
 686:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite( (ETH_SOCKET_REG(socket, ETH_SOCK_CR)),(uint8*)&(cmd),1);
 1236              		.loc 1 686 0
 1237 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1238 0010 9BB2     		uxth	r3, r3
 1239 0012 4FEA0323 		lsl	r3, r3, #8
 1240 0016 9BB2     		uxth	r3, r3
 1241 0018 03F58043 		add	r3, r3, #16384
 1242 001c 03F10103 		add	r3, r3, #1
 1243 0020 9AB2     		uxth	r2, r3
 1244 0022 07F10603 		add	r3, r7, #6
 1245 0026 1046     		mov	r0, r2
 1246 0028 1946     		mov	r1, r3
 1247 002a 4FF00102 		mov	r2, #1
 1248 002e FFF7FEFF 		bl	ETH_ChipWrite
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 35


 687:.\Generated_Source\PSoC5/ETH.c **** }
 1249              		.loc 1 687 0
 1250 0032 07F10807 		add	r7, r7, #8
 1251 0036 BD46     		mov	sp, r7
 1252 0038 80BD     		pop	{r7, pc}
 1253              		.cfi_endproc
 1254              	.LFE22:
 1255              		.size	ETH_SetSocketCommand, .-ETH_SetSocketCommand
 1256 003a 00BF     		.section	.text.ETH_GetSocketCommand,"ax",%progbits
 1257              		.align	2
 1258              		.global	ETH_GetSocketCommand
 1259              		.thumb
 1260              		.thumb_func
 1261              		.type	ETH_GetSocketCommand, %function
 1262              	ETH_GetSocketCommand:
 1263              	.LFB23:
 688:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 689:.\Generated_Source\PSoC5/ETH.c **** /**
 690:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a value from the socket command register
 691:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 692:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 693:.\Generated_Source\PSoC5/ETH.c ****  */
 694:.\Generated_Source\PSoC5/ETH.c **** uint8 ETH_GetSocketCommand(uint8 socket )
 695:.\Generated_Source\PSoC5/ETH.c **** {
 1264              		.loc 1 695 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 16
 1267              		@ frame_needed = 1, uses_anonymous_args = 0
 1268 0000 80B5     		push	{r7, lr}
 1269              	.LCFI67:
 1270              		.cfi_def_cfa_offset 8
 1271              		.cfi_offset 7, -8
 1272              		.cfi_offset 14, -4
 1273 0002 84B0     		sub	sp, sp, #16
 1274              	.LCFI68:
 1275              		.cfi_def_cfa_offset 24
 1276 0004 00AF     		add	r7, sp, #0
 1277              	.LCFI69:
 1278              		.cfi_def_cfa_register 7
 1279 0006 0346     		mov	r3, r0
 1280 0008 FB71     		strb	r3, [r7, #7]
 696:.\Generated_Source\PSoC5/ETH.c **** 	uint8 cmd = 0xFF;
 1281              		.loc 1 696 0
 1282 000a 4FF0FF03 		mov	r3, #255
 1283 000e FB73     		strb	r3, [r7, #15]
 697:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead( (ETH_SOCKET_REG(socket, ETH_SOCK_CR)),(uint8*)(&cmd),1);
 1284              		.loc 1 697 0
 1285 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1286 0012 9BB2     		uxth	r3, r3
 1287 0014 4FEA0323 		lsl	r3, r3, #8
 1288 0018 9BB2     		uxth	r3, r3
 1289 001a 03F58043 		add	r3, r3, #16384
 1290 001e 03F10103 		add	r3, r3, #1
 1291 0022 9AB2     		uxth	r2, r3
 1292 0024 07F10F03 		add	r3, r7, #15
 1293 0028 1046     		mov	r0, r2
 1294 002a 1946     		mov	r1, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 36


 1295 002c 4FF00102 		mov	r2, #1
 1296 0030 FFF7FEFF 		bl	ETH_ChipRead
 698:.\Generated_Source\PSoC5/ETH.c **** 	return cmd;
 1297              		.loc 1 698 0
 1298 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 699:.\Generated_Source\PSoC5/ETH.c **** }
 1299              		.loc 1 699 0
 1300 0036 1846     		mov	r0, r3
 1301 0038 07F11007 		add	r7, r7, #16
 1302 003c BD46     		mov	sp, r7
 1303 003e 80BD     		pop	{r7, pc}
 1304              		.cfi_endproc
 1305              	.LFE23:
 1306              		.size	ETH_GetSocketCommand, .-ETH_GetSocketCommand
 1307              		.section	.text.ETH_SetSocketIR,"ax",%progbits
 1308              		.align	2
 1309              		.global	ETH_SetSocketIR
 1310              		.thumb
 1311              		.thumb_func
 1312              		.type	ETH_SetSocketIR, %function
 1313              	ETH_SetSocketIR:
 1314              	.LFB24:
 700:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 701:.\Generated_Source\PSoC5/ETH.c **** /**
 702:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket interrupt register
 703:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 704:.\Generated_Source\PSoC5/ETH.c ****  * \param ir the value to be written to the register
 705:.\Generated_Source\PSoC5/ETH.c ****  */
 706:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketIR(uint8 socket, uint8 ir)
 707:.\Generated_Source\PSoC5/ETH.c **** {
 1315              		.loc 1 707 0
 1316              		.cfi_startproc
 1317              		@ args = 0, pretend = 0, frame = 8
 1318              		@ frame_needed = 1, uses_anonymous_args = 0
 1319 0000 80B5     		push	{r7, lr}
 1320              	.LCFI70:
 1321              		.cfi_def_cfa_offset 8
 1322              		.cfi_offset 7, -8
 1323              		.cfi_offset 14, -4
 1324 0002 82B0     		sub	sp, sp, #8
 1325              	.LCFI71:
 1326              		.cfi_def_cfa_offset 16
 1327 0004 00AF     		add	r7, sp, #0
 1328              	.LCFI72:
 1329              		.cfi_def_cfa_register 7
 1330 0006 0246     		mov	r2, r0
 1331 0008 0B46     		mov	r3, r1
 1332 000a FA71     		strb	r2, [r7, #7]
 1333 000c BB71     		strb	r3, [r7, #6]
 708:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite( (ETH_SOCKET_REG(socket, ETH_SOCK_IR)), (uint8*)&(ir), 1);
 1334              		.loc 1 708 0
 1335 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1336 0010 9BB2     		uxth	r3, r3
 1337 0012 4FEA0323 		lsl	r3, r3, #8
 1338 0016 9BB2     		uxth	r3, r3
 1339 0018 03F58043 		add	r3, r3, #16384
 1340 001c 03F10203 		add	r3, r3, #2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 37


 1341 0020 9AB2     		uxth	r2, r3
 1342 0022 07F10603 		add	r3, r7, #6
 1343 0026 1046     		mov	r0, r2
 1344 0028 1946     		mov	r1, r3
 1345 002a 4FF00102 		mov	r2, #1
 1346 002e FFF7FEFF 		bl	ETH_ChipWrite
 709:.\Generated_Source\PSoC5/ETH.c **** }
 1347              		.loc 1 709 0
 1348 0032 07F10807 		add	r7, r7, #8
 1349 0036 BD46     		mov	sp, r7
 1350 0038 80BD     		pop	{r7, pc}
 1351              		.cfi_endproc
 1352              	.LFE24:
 1353              		.size	ETH_SetSocketIR, .-ETH_SetSocketIR
 1354 003a 00BF     		.section	.text.ETH_GetSocketIR,"ax",%progbits
 1355              		.align	2
 1356              		.global	ETH_GetSocketIR
 1357              		.thumb
 1358              		.thumb_func
 1359              		.type	ETH_GetSocketIR, %function
 1360              	ETH_GetSocketIR:
 1361              	.LFB25:
 710:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 711:.\Generated_Source\PSoC5/ETH.c **** /**
 712:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a value from the socket interrupt register
 713:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 714:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 715:.\Generated_Source\PSoC5/ETH.c ****  */
 716:.\Generated_Source\PSoC5/ETH.c **** uint8 ETH_GetSocketIR(uint8 socket)
 717:.\Generated_Source\PSoC5/ETH.c **** {	
 1362              		.loc 1 717 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 16
 1365              		@ frame_needed = 1, uses_anonymous_args = 0
 1366 0000 80B5     		push	{r7, lr}
 1367              	.LCFI73:
 1368              		.cfi_def_cfa_offset 8
 1369              		.cfi_offset 7, -8
 1370              		.cfi_offset 14, -4
 1371 0002 84B0     		sub	sp, sp, #16
 1372              	.LCFI74:
 1373              		.cfi_def_cfa_offset 24
 1374 0004 00AF     		add	r7, sp, #0
 1375              	.LCFI75:
 1376              		.cfi_def_cfa_register 7
 1377 0006 0346     		mov	r3, r0
 1378 0008 FB71     		strb	r3, [r7, #7]
 718:.\Generated_Source\PSoC5/ETH.c **** 	uint8 ir = 0xFF;
 1379              		.loc 1 718 0
 1380 000a 4FF0FF03 		mov	r3, #255
 1381 000e FB73     		strb	r3, [r7, #15]
 719:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead((ETH_SOCKET_REG(socket, ETH_SOCK_IR)), (uint8*)&(ir), 1);
 1382              		.loc 1 719 0
 1383 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1384 0012 9BB2     		uxth	r3, r3
 1385 0014 4FEA0323 		lsl	r3, r3, #8
 1386 0018 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 38


 1387 001a 03F58043 		add	r3, r3, #16384
 1388 001e 03F10203 		add	r3, r3, #2
 1389 0022 9AB2     		uxth	r2, r3
 1390 0024 07F10F03 		add	r3, r7, #15
 1391 0028 1046     		mov	r0, r2
 1392 002a 1946     		mov	r1, r3
 1393 002c 4FF00102 		mov	r2, #1
 1394 0030 FFF7FEFF 		bl	ETH_ChipRead
 720:.\Generated_Source\PSoC5/ETH.c **** 	return ir;
 1395              		.loc 1 720 0
 1396 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 721:.\Generated_Source\PSoC5/ETH.c **** }
 1397              		.loc 1 721 0
 1398 0036 1846     		mov	r0, r3
 1399 0038 07F11007 		add	r7, r7, #16
 1400 003c BD46     		mov	sp, r7
 1401 003e 80BD     		pop	{r7, pc}
 1402              		.cfi_endproc
 1403              	.LFE25:
 1404              		.size	ETH_GetSocketIR, .-ETH_GetSocketIR
 1405              		.section	.text.ETH_GetSocketStatus,"ax",%progbits
 1406              		.align	2
 1407              		.global	ETH_GetSocketStatus
 1408              		.thumb
 1409              		.thumb_func
 1410              		.type	ETH_GetSocketStatus, %function
 1411              	ETH_GetSocketStatus:
 1412              	.LFB26:
 722:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 723:.\Generated_Source\PSoC5/ETH.c **** /**
 724:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a value from the socket status register
 725:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 726:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 727:.\Generated_Source\PSoC5/ETH.c ****  */
 728:.\Generated_Source\PSoC5/ETH.c **** uint8 ETH_GetSocketStatus(uint8 socket)
 729:.\Generated_Source\PSoC5/ETH.c **** { 
 1413              		.loc 1 729 0
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 16
 1416              		@ frame_needed = 1, uses_anonymous_args = 0
 1417 0000 80B5     		push	{r7, lr}
 1418              	.LCFI76:
 1419              		.cfi_def_cfa_offset 8
 1420              		.cfi_offset 7, -8
 1421              		.cfi_offset 14, -4
 1422 0002 84B0     		sub	sp, sp, #16
 1423              	.LCFI77:
 1424              		.cfi_def_cfa_offset 24
 1425 0004 00AF     		add	r7, sp, #0
 1426              	.LCFI78:
 1427              		.cfi_def_cfa_register 7
 1428 0006 0346     		mov	r3, r0
 1429 0008 FB71     		strb	r3, [r7, #7]
 730:.\Generated_Source\PSoC5/ETH.c **** 	uint8 status = 0xFF;
 1430              		.loc 1 730 0
 1431 000a 4FF0FF03 		mov	r3, #255
 1432 000e FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 39


 731:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipRead(ETH_SOCKET_REG(socket, ETH_SOCK_SR), &status, 1);
 1433              		.loc 1 731 0
 1434 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1435 0012 9BB2     		uxth	r3, r3
 1436 0014 4FEA0323 		lsl	r3, r3, #8
 1437 0018 9BB2     		uxth	r3, r3
 1438 001a 03F58043 		add	r3, r3, #16384
 1439 001e 03F10303 		add	r3, r3, #3
 1440 0022 9AB2     		uxth	r2, r3
 1441 0024 07F10F03 		add	r3, r7, #15
 1442 0028 1046     		mov	r0, r2
 1443 002a 1946     		mov	r1, r3
 1444 002c 4FF00102 		mov	r2, #1
 1445 0030 FFF7FEFF 		bl	ETH_ChipRead
 732:.\Generated_Source\PSoC5/ETH.c **** 	return status;
 1446              		.loc 1 732 0
 1447 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 733:.\Generated_Source\PSoC5/ETH.c **** }
 1448              		.loc 1 733 0
 1449 0036 1846     		mov	r0, r3
 1450 0038 07F11007 		add	r7, r7, #16
 1451 003c BD46     		mov	sp, r7
 1452 003e 80BD     		pop	{r7, pc}
 1453              		.cfi_endproc
 1454              	.LFE26:
 1455              		.size	ETH_GetSocketStatus, .-ETH_GetSocketStatus
 1456              		.section	.text.ETH_SetSocketSourcePort,"ax",%progbits
 1457              		.align	2
 1458              		.global	ETH_SetSocketSourcePort
 1459              		.thumb
 1460              		.thumb_func
 1461              		.type	ETH_SetSocketSourcePort, %function
 1462              	ETH_SetSocketSourcePort:
 1463              	.LFB27:
 734:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 735:.\Generated_Source\PSoC5/ETH.c **** /**
 736:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket source port register
 737:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 738:.\Generated_Source\PSoC5/ETH.c ****  * \param port the value to be written to the register
 739:.\Generated_Source\PSoC5/ETH.c ****  */
 740:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketSourcePort(uint8 socket, uint16 port)
 741:.\Generated_Source\PSoC5/ETH.c **** {
 1464              		.loc 1 741 0
 1465              		.cfi_startproc
 1466              		@ args = 0, pretend = 0, frame = 8
 1467              		@ frame_needed = 1, uses_anonymous_args = 0
 1468 0000 80B5     		push	{r7, lr}
 1469              	.LCFI79:
 1470              		.cfi_def_cfa_offset 8
 1471              		.cfi_offset 7, -8
 1472              		.cfi_offset 14, -4
 1473 0002 82B0     		sub	sp, sp, #8
 1474              	.LCFI80:
 1475              		.cfi_def_cfa_offset 16
 1476 0004 00AF     		add	r7, sp, #0
 1477              	.LCFI81:
 1478              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 40


 1479 0006 0246     		mov	r2, r0
 1480 0008 0B46     		mov	r3, r1
 1481 000a FA71     		strb	r2, [r7, #7]
 1482 000c BB80     		strh	r3, [r7, #4]	@ movhi
 742:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite16(ETH_SOCKET_REG(socket, ETH_SOCK_PORT),port);
 1483              		.loc 1 742 0
 1484 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1485 0010 9BB2     		uxth	r3, r3
 1486 0012 4FEA0323 		lsl	r3, r3, #8
 1487 0016 9BB2     		uxth	r3, r3
 1488 0018 03F58043 		add	r3, r3, #16384
 1489 001c 03F10403 		add	r3, r3, #4
 1490 0020 9AB2     		uxth	r2, r3
 1491 0022 BB88     		ldrh	r3, [r7, #4]
 1492 0024 1046     		mov	r0, r2
 1493 0026 1946     		mov	r1, r3
 1494 0028 FFF7FEFF 		bl	ETH_ChipWrite16
 743:.\Generated_Source\PSoC5/ETH.c **** }
 1495              		.loc 1 743 0
 1496 002c 07F10807 		add	r7, r7, #8
 1497 0030 BD46     		mov	sp, r7
 1498 0032 80BD     		pop	{r7, pc}
 1499              		.cfi_endproc
 1500              	.LFE27:
 1501              		.size	ETH_SetSocketSourcePort, .-ETH_SetSocketSourcePort
 1502              		.section	.text.ETH_SetSocketDestMAC,"ax",%progbits
 1503              		.align	2
 1504              		.global	ETH_SetSocketDestMAC
 1505              		.thumb
 1506              		.thumb_func
 1507              		.type	ETH_SetSocketDestMAC, %function
 1508              	ETH_SetSocketDestMAC:
 1509              	.LFB28:
 744:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 745:.\Generated_Source\PSoC5/ETH.c **** /**
 746:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket Destination hardware address register
 747:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 748:.\Generated_Source\PSoC5/ETH.c ****  * \param *mac poitner to the array holding the values to be written to the register
 749:.\Generated_Source\PSoC5/ETH.c ****  */
 750:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketDestMAC(uint8 socket, uint8* mac)
 751:.\Generated_Source\PSoC5/ETH.c **** { 
 1510              		.loc 1 751 0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 8
 1513              		@ frame_needed = 1, uses_anonymous_args = 0
 1514 0000 80B5     		push	{r7, lr}
 1515              	.LCFI82:
 1516              		.cfi_def_cfa_offset 8
 1517              		.cfi_offset 7, -8
 1518              		.cfi_offset 14, -4
 1519 0002 82B0     		sub	sp, sp, #8
 1520              	.LCFI83:
 1521              		.cfi_def_cfa_offset 16
 1522 0004 00AF     		add	r7, sp, #0
 1523              	.LCFI84:
 1524              		.cfi_def_cfa_register 7
 1525 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 41


 1526 0008 3960     		str	r1, [r7, #0]
 1527 000a FB71     		strb	r3, [r7, #7]
 752:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite( ETH_SOCKET_REG(socket, ETH_SOCK_DHAR), &mac[0], 6);
 1528              		.loc 1 752 0
 1529 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1530 000e 9BB2     		uxth	r3, r3
 1531 0010 4FEA0323 		lsl	r3, r3, #8
 1532 0014 9BB2     		uxth	r3, r3
 1533 0016 03F58043 		add	r3, r3, #16384
 1534 001a 03F10603 		add	r3, r3, #6
 1535 001e 9BB2     		uxth	r3, r3
 1536 0020 1846     		mov	r0, r3
 1537 0022 3968     		ldr	r1, [r7, #0]
 1538 0024 4FF00602 		mov	r2, #6
 1539 0028 FFF7FEFF 		bl	ETH_ChipWrite
 753:.\Generated_Source\PSoC5/ETH.c **** }
 1540              		.loc 1 753 0
 1541 002c 07F10807 		add	r7, r7, #8
 1542 0030 BD46     		mov	sp, r7
 1543 0032 80BD     		pop	{r7, pc}
 1544              		.cfi_endproc
 1545              	.LFE28:
 1546              		.size	ETH_SetSocketDestMAC, .-ETH_SetSocketDestMAC
 1547              		.section	.text.ETH_SetSocketDestIP,"ax",%progbits
 1548              		.align	2
 1549              		.global	ETH_SetSocketDestIP
 1550              		.thumb
 1551              		.thumb_func
 1552              		.type	ETH_SetSocketDestIP, %function
 1553              	ETH_SetSocketDestIP:
 1554              	.LFB29:
 754:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 755:.\Generated_Source\PSoC5/ETH.c **** /**
 756:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket Destination IP address register
 757:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 758:.\Generated_Source\PSoC5/ETH.c ****  * \param ip the value to be written to the register
 759:.\Generated_Source\PSoC5/ETH.c ****  */
 760:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketDestIP(uint8 socket, uint32 ip)
 761:.\Generated_Source\PSoC5/ETH.c **** { 
 1555              		.loc 1 761 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 8
 1558              		@ frame_needed = 1, uses_anonymous_args = 0
 1559 0000 80B5     		push	{r7, lr}
 1560              	.LCFI85:
 1561              		.cfi_def_cfa_offset 8
 1562              		.cfi_offset 7, -8
 1563              		.cfi_offset 14, -4
 1564 0002 82B0     		sub	sp, sp, #8
 1565              	.LCFI86:
 1566              		.cfi_def_cfa_offset 16
 1567 0004 00AF     		add	r7, sp, #0
 1568              	.LCFI87:
 1569              		.cfi_def_cfa_register 7
 1570 0006 0346     		mov	r3, r0
 1571 0008 3960     		str	r1, [r7, #0]
 1572 000a FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 42


 762:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite(ETH_SOCKET_REG(socket, ETH_SOCK_DIPR), (uint8*)&ip, 4);
 1573              		.loc 1 762 0
 1574 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1575 000e 9BB2     		uxth	r3, r3
 1576 0010 4FEA0323 		lsl	r3, r3, #8
 1577 0014 9BB2     		uxth	r3, r3
 1578 0016 03F58043 		add	r3, r3, #16384
 1579 001a 03F10C03 		add	r3, r3, #12
 1580 001e 9AB2     		uxth	r2, r3
 1581 0020 3B46     		mov	r3, r7
 1582 0022 1046     		mov	r0, r2
 1583 0024 1946     		mov	r1, r3
 1584 0026 4FF00402 		mov	r2, #4
 1585 002a FFF7FEFF 		bl	ETH_ChipWrite
 763:.\Generated_Source\PSoC5/ETH.c **** }
 1586              		.loc 1 763 0
 1587 002e 07F10807 		add	r7, r7, #8
 1588 0032 BD46     		mov	sp, r7
 1589 0034 80BD     		pop	{r7, pc}
 1590              		.cfi_endproc
 1591              	.LFE29:
 1592              		.size	ETH_SetSocketDestIP, .-ETH_SetSocketDestIP
 1593 0036 00BF     		.section	.text.ETH_SetSocketDestPort,"ax",%progbits
 1594              		.align	2
 1595              		.global	ETH_SetSocketDestPort
 1596              		.thumb
 1597              		.thumb_func
 1598              		.type	ETH_SetSocketDestPort, %function
 1599              	ETH_SetSocketDestPort:
 1600              	.LFB30:
 764:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 765:.\Generated_Source\PSoC5/ETH.c **** /**
 766:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket destination port register
 767:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 768:.\Generated_Source\PSoC5/ETH.c ****  * \param port the value to be written to the register
 769:.\Generated_Source\PSoC5/ETH.c ****  */
 770:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketDestPort(uint8 socket, uint16 port)
 771:.\Generated_Source\PSoC5/ETH.c **** { 
 1601              		.loc 1 771 0
 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 8
 1604              		@ frame_needed = 1, uses_anonymous_args = 0
 1605 0000 80B5     		push	{r7, lr}
 1606              	.LCFI88:
 1607              		.cfi_def_cfa_offset 8
 1608              		.cfi_offset 7, -8
 1609              		.cfi_offset 14, -4
 1610 0002 82B0     		sub	sp, sp, #8
 1611              	.LCFI89:
 1612              		.cfi_def_cfa_offset 16
 1613 0004 00AF     		add	r7, sp, #0
 1614              	.LCFI90:
 1615              		.cfi_def_cfa_register 7
 1616 0006 0246     		mov	r2, r0
 1617 0008 0B46     		mov	r3, r1
 1618 000a FA71     		strb	r2, [r7, #7]
 1619 000c BB80     		strh	r3, [r7, #4]	@ movhi
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 43


 772:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite16( ETH_SOCKET_REG(socket, ETH_SOCK_DPORT), port);
 1620              		.loc 1 772 0
 1621 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1622 0010 9BB2     		uxth	r3, r3
 1623 0012 4FEA0323 		lsl	r3, r3, #8
 1624 0016 9BB2     		uxth	r3, r3
 1625 0018 03F58043 		add	r3, r3, #16384
 1626 001c 03F11003 		add	r3, r3, #16
 1627 0020 9AB2     		uxth	r2, r3
 1628 0022 BB88     		ldrh	r3, [r7, #4]
 1629 0024 1046     		mov	r0, r2
 1630 0026 1946     		mov	r1, r3
 1631 0028 FFF7FEFF 		bl	ETH_ChipWrite16
 773:.\Generated_Source\PSoC5/ETH.c **** }
 1632              		.loc 1 773 0
 1633 002c 07F10807 		add	r7, r7, #8
 1634 0030 BD46     		mov	sp, r7
 1635 0032 80BD     		pop	{r7, pc}
 1636              		.cfi_endproc
 1637              	.LFE30:
 1638              		.size	ETH_SetSocketDestPort, .-ETH_SetSocketDestPort
 1639              		.section	.text.ETH_GetSocketTxFree,"ax",%progbits
 1640              		.align	2
 1641              		.global	ETH_GetSocketTxFree
 1642              		.thumb
 1643              		.thumb_func
 1644              		.type	ETH_GetSocketTxFree, %function
 1645              	ETH_GetSocketTxFree:
 1646              	.LFB31:
 774:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 775:.\Generated_Source\PSoC5/ETH.c **** /**
 776:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a value from the socket Tx free size register
 777:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 778:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 779:.\Generated_Source\PSoC5/ETH.c ****  */
 780:.\Generated_Source\PSoC5/ETH.c **** uint16 ETH_GetSocketTxFree(uint8 socket)
 781:.\Generated_Source\PSoC5/ETH.c **** { 
 1647              		.loc 1 781 0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 8
 1650              		@ frame_needed = 1, uses_anonymous_args = 0
 1651 0000 80B5     		push	{r7, lr}
 1652              	.LCFI91:
 1653              		.cfi_def_cfa_offset 8
 1654              		.cfi_offset 7, -8
 1655              		.cfi_offset 14, -4
 1656 0002 82B0     		sub	sp, sp, #8
 1657              	.LCFI92:
 1658              		.cfi_def_cfa_offset 16
 1659 0004 00AF     		add	r7, sp, #0
 1660              	.LCFI93:
 1661              		.cfi_def_cfa_register 7
 1662 0006 0346     		mov	r3, r0
 1663 0008 FB71     		strb	r3, [r7, #7]
 782:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_TXFSR));
 1664              		.loc 1 782 0
 1665 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 44


 1666 000c 9BB2     		uxth	r3, r3
 1667 000e 4FEA0323 		lsl	r3, r3, #8
 1668 0012 9BB2     		uxth	r3, r3
 1669 0014 03F58043 		add	r3, r3, #16384
 1670 0018 03F12003 		add	r3, r3, #32
 1671 001c 9BB2     		uxth	r3, r3
 1672 001e 1846     		mov	r0, r3
 1673 0020 FFF7FEFF 		bl	ETH_ChipRead16
 1674 0024 0346     		mov	r3, r0
 783:.\Generated_Source\PSoC5/ETH.c **** }
 1675              		.loc 1 783 0
 1676 0026 1846     		mov	r0, r3
 1677 0028 07F10807 		add	r7, r7, #8
 1678 002c BD46     		mov	sp, r7
 1679 002e 80BD     		pop	{r7, pc}
 1680              		.cfi_endproc
 1681              	.LFE31:
 1682              		.size	ETH_GetSocketTxFree, .-ETH_GetSocketTxFree
 1683              		.section	.text.ETH_SetSocketTxWritePtr,"ax",%progbits
 1684              		.align	2
 1685              		.global	ETH_SetSocketTxWritePtr
 1686              		.thumb
 1687              		.thumb_func
 1688              		.type	ETH_SetSocketTxWritePtr, %function
 1689              	ETH_SetSocketTxWritePtr:
 1690              	.LFB32:
 784:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 785:.\Generated_Source\PSoC5/ETH.c **** /**
 786:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket tx write pointer register
 787:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 788:.\Generated_Source\PSoC5/ETH.c ****  * \param ptr the value to be written to the register
 789:.\Generated_Source\PSoC5/ETH.c ****  */
 790:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketTxWritePtr(uint8 socket, uint16 ptr)
 791:.\Generated_Source\PSoC5/ETH.c **** { 
 1691              		.loc 1 791 0
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 8
 1694              		@ frame_needed = 1, uses_anonymous_args = 0
 1695 0000 80B5     		push	{r7, lr}
 1696              	.LCFI94:
 1697              		.cfi_def_cfa_offset 8
 1698              		.cfi_offset 7, -8
 1699              		.cfi_offset 14, -4
 1700 0002 82B0     		sub	sp, sp, #8
 1701              	.LCFI95:
 1702              		.cfi_def_cfa_offset 16
 1703 0004 00AF     		add	r7, sp, #0
 1704              	.LCFI96:
 1705              		.cfi_def_cfa_register 7
 1706 0006 0246     		mov	r2, r0
 1707 0008 0B46     		mov	r3, r1
 1708 000a FA71     		strb	r2, [r7, #7]
 1709 000c BB80     		strh	r3, [r7, #4]	@ movhi
 792:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite16(ETH_SOCKET_REG(socket, ETH_SOCK_TXWR),ptr);
 1710              		.loc 1 792 0
 1711 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1712 0010 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 45


 1713 0012 4FEA0323 		lsl	r3, r3, #8
 1714 0016 9BB2     		uxth	r3, r3
 1715 0018 03F58043 		add	r3, r3, #16384
 1716 001c 03F12403 		add	r3, r3, #36
 1717 0020 9AB2     		uxth	r2, r3
 1718 0022 BB88     		ldrh	r3, [r7, #4]
 1719 0024 1046     		mov	r0, r2
 1720 0026 1946     		mov	r1, r3
 1721 0028 FFF7FEFF 		bl	ETH_ChipWrite16
 793:.\Generated_Source\PSoC5/ETH.c **** }
 1722              		.loc 1 793 0
 1723 002c 07F10807 		add	r7, r7, #8
 1724 0030 BD46     		mov	sp, r7
 1725 0032 80BD     		pop	{r7, pc}
 1726              		.cfi_endproc
 1727              	.LFE32:
 1728              		.size	ETH_SetSocketTxWritePtr, .-ETH_SetSocketTxWritePtr
 1729              		.section	.text.ETH_GetSocketTxWritePtr,"ax",%progbits
 1730              		.align	2
 1731              		.global	ETH_GetSocketTxWritePtr
 1732              		.thumb
 1733              		.thumb_func
 1734              		.type	ETH_GetSocketTxWritePtr, %function
 1735              	ETH_GetSocketTxWritePtr:
 1736              	.LFB33:
 794:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 795:.\Generated_Source\PSoC5/ETH.c **** /**
 796:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a value from the socket tx buffer write pointer register
 797:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 798:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 799:.\Generated_Source\PSoC5/ETH.c ****  */
 800:.\Generated_Source\PSoC5/ETH.c **** uint16 ETH_GetSocketTxWritePtr(uint8 socket)
 801:.\Generated_Source\PSoC5/ETH.c **** { 
 1737              		.loc 1 801 0
 1738              		.cfi_startproc
 1739              		@ args = 0, pretend = 0, frame = 8
 1740              		@ frame_needed = 1, uses_anonymous_args = 0
 1741 0000 80B5     		push	{r7, lr}
 1742              	.LCFI97:
 1743              		.cfi_def_cfa_offset 8
 1744              		.cfi_offset 7, -8
 1745              		.cfi_offset 14, -4
 1746 0002 82B0     		sub	sp, sp, #8
 1747              	.LCFI98:
 1748              		.cfi_def_cfa_offset 16
 1749 0004 00AF     		add	r7, sp, #0
 1750              	.LCFI99:
 1751              		.cfi_def_cfa_register 7
 1752 0006 0346     		mov	r3, r0
 1753 0008 FB71     		strb	r3, [r7, #7]
 802:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_TXWR));
 1754              		.loc 1 802 0
 1755 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1756 000c 9BB2     		uxth	r3, r3
 1757 000e 4FEA0323 		lsl	r3, r3, #8
 1758 0012 9BB2     		uxth	r3, r3
 1759 0014 03F58043 		add	r3, r3, #16384
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 46


 1760 0018 03F12403 		add	r3, r3, #36
 1761 001c 9BB2     		uxth	r3, r3
 1762 001e 1846     		mov	r0, r3
 1763 0020 FFF7FEFF 		bl	ETH_ChipRead16
 1764 0024 0346     		mov	r3, r0
 803:.\Generated_Source\PSoC5/ETH.c **** }
 1765              		.loc 1 803 0
 1766 0026 1846     		mov	r0, r3
 1767 0028 07F10807 		add	r7, r7, #8
 1768 002c BD46     		mov	sp, r7
 1769 002e 80BD     		pop	{r7, pc}
 1770              		.cfi_endproc
 1771              	.LFE33:
 1772              		.size	ETH_GetSocketTxWritePtr, .-ETH_GetSocketTxWritePtr
 1773              		.section	.text.ETH_GetSocketRxSize,"ax",%progbits
 1774              		.align	2
 1775              		.global	ETH_GetSocketRxSize
 1776              		.thumb
 1777              		.thumb_func
 1778              		.type	ETH_GetSocketRxSize, %function
 1779              	ETH_GetSocketRxSize:
 1780              	.LFB34:
 804:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 805:.\Generated_Source\PSoC5/ETH.c **** /**
 806:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a value from the socket rx received data size register
 807:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 808:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 809:.\Generated_Source\PSoC5/ETH.c ****  */
 810:.\Generated_Source\PSoC5/ETH.c **** uint16 ETH_GetSocketRxSize(uint8 socket)
 811:.\Generated_Source\PSoC5/ETH.c **** {
 1781              		.loc 1 811 0
 1782              		.cfi_startproc
 1783              		@ args = 0, pretend = 0, frame = 8
 1784              		@ frame_needed = 1, uses_anonymous_args = 0
 1785 0000 80B5     		push	{r7, lr}
 1786              	.LCFI100:
 1787              		.cfi_def_cfa_offset 8
 1788              		.cfi_offset 7, -8
 1789              		.cfi_offset 14, -4
 1790 0002 82B0     		sub	sp, sp, #8
 1791              	.LCFI101:
 1792              		.cfi_def_cfa_offset 16
 1793 0004 00AF     		add	r7, sp, #0
 1794              	.LCFI102:
 1795              		.cfi_def_cfa_register 7
 1796 0006 0346     		mov	r3, r0
 1797 0008 FB71     		strb	r3, [r7, #7]
 812:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_RXRSR));
 1798              		.loc 1 812 0
 1799 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1800 000c 9BB2     		uxth	r3, r3
 1801 000e 4FEA0323 		lsl	r3, r3, #8
 1802 0012 9BB2     		uxth	r3, r3
 1803 0014 03F58043 		add	r3, r3, #16384
 1804 0018 03F12603 		add	r3, r3, #38
 1805 001c 9BB2     		uxth	r3, r3
 1806 001e 1846     		mov	r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 47


 1807 0020 FFF7FEFF 		bl	ETH_ChipRead16
 1808 0024 0346     		mov	r3, r0
 813:.\Generated_Source\PSoC5/ETH.c **** }
 1809              		.loc 1 813 0
 1810 0026 1846     		mov	r0, r3
 1811 0028 07F10807 		add	r7, r7, #8
 1812 002c BD46     		mov	sp, r7
 1813 002e 80BD     		pop	{r7, pc}
 1814              		.cfi_endproc
 1815              	.LFE34:
 1816              		.size	ETH_GetSocketRxSize, .-ETH_GetSocketRxSize
 1817              		.section	.text.ETH_SetSocketRxReadPtr,"ax",%progbits
 1818              		.align	2
 1819              		.global	ETH_SetSocketRxReadPtr
 1820              		.thumb
 1821              		.thumb_func
 1822              		.type	ETH_SetSocketRxReadPtr, %function
 1823              	ETH_SetSocketRxReadPtr:
 1824              	.LFB35:
 814:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 815:.\Generated_Source\PSoC5/ETH.c **** /**
 816:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a value to the socket rx read pointer register
 817:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 818:.\Generated_Source\PSoC5/ETH.c ****  * \param ptr the value to be written to the register
 819:.\Generated_Source\PSoC5/ETH.c ****  */
 820:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketRxReadPtr(uint8 socket, uint16 ptr)
 821:.\Generated_Source\PSoC5/ETH.c **** { 
 1825              		.loc 1 821 0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 8
 1828              		@ frame_needed = 1, uses_anonymous_args = 0
 1829 0000 80B5     		push	{r7, lr}
 1830              	.LCFI103:
 1831              		.cfi_def_cfa_offset 8
 1832              		.cfi_offset 7, -8
 1833              		.cfi_offset 14, -4
 1834 0002 82B0     		sub	sp, sp, #8
 1835              	.LCFI104:
 1836              		.cfi_def_cfa_offset 16
 1837 0004 00AF     		add	r7, sp, #0
 1838              	.LCFI105:
 1839              		.cfi_def_cfa_register 7
 1840 0006 0246     		mov	r2, r0
 1841 0008 0B46     		mov	r3, r1
 1842 000a FA71     		strb	r2, [r7, #7]
 1843 000c BB80     		strh	r3, [r7, #4]	@ movhi
 822:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite16(ETH_SOCKET_REG(socket, ETH_SOCK_RXRD),ptr);
 1844              		.loc 1 822 0
 1845 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1846 0010 9BB2     		uxth	r3, r3
 1847 0012 4FEA0323 		lsl	r3, r3, #8
 1848 0016 9BB2     		uxth	r3, r3
 1849 0018 03F58043 		add	r3, r3, #16384
 1850 001c 03F12803 		add	r3, r3, #40
 1851 0020 9AB2     		uxth	r2, r3
 1852 0022 BB88     		ldrh	r3, [r7, #4]
 1853 0024 1046     		mov	r0, r2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 48


 1854 0026 1946     		mov	r1, r3
 1855 0028 FFF7FEFF 		bl	ETH_ChipWrite16
 823:.\Generated_Source\PSoC5/ETH.c **** }
 1856              		.loc 1 823 0
 1857 002c 07F10807 		add	r7, r7, #8
 1858 0030 BD46     		mov	sp, r7
 1859 0032 80BD     		pop	{r7, pc}
 1860              		.cfi_endproc
 1861              	.LFE35:
 1862              		.size	ETH_SetSocketRxReadPtr, .-ETH_SetSocketRxReadPtr
 1863              		.section	.text.ETH_GetSocketRxReadPtr,"ax",%progbits
 1864              		.align	2
 1865              		.global	ETH_GetSocketRxReadPtr
 1866              		.thumb
 1867              		.thumb_func
 1868              		.type	ETH_GetSocketRxReadPtr, %function
 1869              	ETH_GetSocketRxReadPtr:
 1870              	.LFB36:
 824:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 825:.\Generated_Source\PSoC5/ETH.c **** /**
 826:.\Generated_Source\PSoC5/ETH.c ****  * \brief Read a value from the socket rx buffer read pointer register
 827:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number for the addressed register
 828:.\Generated_Source\PSoC5/ETH.c ****  * \returns the value read from the register
 829:.\Generated_Source\PSoC5/ETH.c ****  */
 830:.\Generated_Source\PSoC5/ETH.c **** uint16 ETH_GetSocketRxReadPtr(uint8 socket)
 831:.\Generated_Source\PSoC5/ETH.c **** { 
 1871              		.loc 1 831 0
 1872              		.cfi_startproc
 1873              		@ args = 0, pretend = 0, frame = 8
 1874              		@ frame_needed = 1, uses_anonymous_args = 0
 1875 0000 80B5     		push	{r7, lr}
 1876              	.LCFI106:
 1877              		.cfi_def_cfa_offset 8
 1878              		.cfi_offset 7, -8
 1879              		.cfi_offset 14, -4
 1880 0002 82B0     		sub	sp, sp, #8
 1881              	.LCFI107:
 1882              		.cfi_def_cfa_offset 16
 1883 0004 00AF     		add	r7, sp, #0
 1884              	.LCFI108:
 1885              		.cfi_def_cfa_register 7
 1886 0006 0346     		mov	r3, r0
 1887 0008 FB71     		strb	r3, [r7, #7]
 832:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_ChipRead16(ETH_SOCKET_REG(socket, ETH_SOCK_RXRD));
 1888              		.loc 1 832 0
 1889 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1890 000c 9BB2     		uxth	r3, r3
 1891 000e 4FEA0323 		lsl	r3, r3, #8
 1892 0012 9BB2     		uxth	r3, r3
 1893 0014 03F58043 		add	r3, r3, #16384
 1894 0018 03F12803 		add	r3, r3, #40
 1895 001c 9BB2     		uxth	r3, r3
 1896 001e 1846     		mov	r0, r3
 1897 0020 FFF7FEFF 		bl	ETH_ChipRead16
 1898 0024 0346     		mov	r3, r0
 833:.\Generated_Source\PSoC5/ETH.c **** }
 1899              		.loc 1 833 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 49


 1900 0026 1846     		mov	r0, r3
 1901 0028 07F10807 		add	r7, r7, #8
 1902 002c BD46     		mov	sp, r7
 1903 002e 80BD     		pop	{r7, pc}
 1904              		.cfi_endproc
 1905              	.LFE36:
 1906              		.size	ETH_GetSocketRxReadPtr, .-ETH_GetSocketRxReadPtr
 1907              		.section	.text.ETH_SetSocketRxWritePtr,"ax",%progbits
 1908              		.align	2
 1909              		.global	ETH_SetSocketRxWritePtr
 1910              		.thumb
 1911              		.thumb_func
 1912              		.type	ETH_SetSocketRxWritePtr, %function
 1913              	ETH_SetSocketRxWritePtr:
 1914              	.LFB37:
 834:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 835:.\Generated_Source\PSoC5/ETH.c **** /**
 836:.\Generated_Source\PSoC5/ETH.c ****  * \brief Set the write poitner starting address for a socket
 837:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket number to modify
 838:.\Generated_Source\PSoC5/ETH.c ****  * \param ptr the address value to write in to the pointer register
 839:.\Generated_Source\PSoC5/ETH.c ****  */
 840:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketRxWritePtr( uint8 socket, uint16 ptr)
 841:.\Generated_Source\PSoC5/ETH.c **** {
 1915              		.loc 1 841 0
 1916              		.cfi_startproc
 1917              		@ args = 0, pretend = 0, frame = 8
 1918              		@ frame_needed = 1, uses_anonymous_args = 0
 1919 0000 80B5     		push	{r7, lr}
 1920              	.LCFI109:
 1921              		.cfi_def_cfa_offset 8
 1922              		.cfi_offset 7, -8
 1923              		.cfi_offset 14, -4
 1924 0002 82B0     		sub	sp, sp, #8
 1925              	.LCFI110:
 1926              		.cfi_def_cfa_offset 16
 1927 0004 00AF     		add	r7, sp, #0
 1928              	.LCFI111:
 1929              		.cfi_def_cfa_register 7
 1930 0006 0246     		mov	r2, r0
 1931 0008 0B46     		mov	r3, r1
 1932 000a FA71     		strb	r2, [r7, #7]
 1933 000c BB80     		strh	r3, [r7, #4]	@ movhi
 842:.\Generated_Source\PSoC5/ETH.c **** 	/*
 843:.\Generated_Source\PSoC5/ETH.c **** 	 * This function is not used on the W5100, since there is no register
 844:.\Generated_Source\PSoC5/ETH.c **** 	 * defined in the memor map to provide this capability
 845:.\Generated_Source\PSoC5/ETH.c **** 	 */
 846:.\Generated_Source\PSoC5/ETH.c **** #if (2 == 2)
 847:.\Generated_Source\PSoC5/ETH.c **** 	/*
 848:.\Generated_Source\PSoC5/ETH.c **** 	 * for the W5200 device, write the pointer value to the register
 849:.\Generated_Source\PSoC5/ETH.c **** 	 */
 850:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite16( ETH_SOCKET_REG(socket, ETH_SOCK_RXWR), ptr);
 1934              		.loc 1 850 0
 1935 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1936 0010 9BB2     		uxth	r3, r3
 1937 0012 4FEA0323 		lsl	r3, r3, #8
 1938 0016 9BB2     		uxth	r3, r3
 1939 0018 03F58043 		add	r3, r3, #16384
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 50


 1940 001c 03F12A03 		add	r3, r3, #42
 1941 0020 9AB2     		uxth	r2, r3
 1942 0022 BB88     		ldrh	r3, [r7, #4]
 1943 0024 1046     		mov	r0, r2
 1944 0026 1946     		mov	r1, r3
 1945 0028 FFF7FEFF 		bl	ETH_ChipWrite16
 851:.\Generated_Source\PSoC5/ETH.c **** #endif
 852:.\Generated_Source\PSoC5/ETH.c **** }
 1946              		.loc 1 852 0
 1947 002c 07F10807 		add	r7, r7, #8
 1948 0030 BD46     		mov	sp, r7
 1949 0032 80BD     		pop	{r7, pc}
 1950              		.cfi_endproc
 1951              	.LFE37:
 1952              		.size	ETH_SetSocketRxWritePtr, .-ETH_SetSocketRxWritePtr
 1953              		.section	.text.ETH_SetSocketTxReadPtr,"ax",%progbits
 1954              		.align	2
 1955              		.global	ETH_SetSocketTxReadPtr
 1956              		.thumb
 1957              		.thumb_func
 1958              		.type	ETH_SetSocketTxReadPtr, %function
 1959              	ETH_SetSocketTxReadPtr:
 1960              	.LFB38:
 853:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 854:.\Generated_Source\PSoC5/ETH.c **** /**
 855:.\Generated_Source\PSoC5/ETH.c ****  * \brief Initialize the Tx buffer Read pointer register
 856:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the sockt to be modified
 857:.\Generated_Source\PSoC5/ETH.c ****  * \param ptr the address to store in to the pointer register
 858:.\Generated_Source\PSoC5/ETH.c **** */
 859:.\Generated_Source\PSoC5/ETH.c **** void ETH_SetSocketTxReadPtr(uint8 socket, uint16 ptr )
 860:.\Generated_Source\PSoC5/ETH.c **** {
 1961              		.loc 1 860 0
 1962              		.cfi_startproc
 1963              		@ args = 0, pretend = 0, frame = 8
 1964              		@ frame_needed = 1, uses_anonymous_args = 0
 1965 0000 80B5     		push	{r7, lr}
 1966              	.LCFI112:
 1967              		.cfi_def_cfa_offset 8
 1968              		.cfi_offset 7, -8
 1969              		.cfi_offset 14, -4
 1970 0002 82B0     		sub	sp, sp, #8
 1971              	.LCFI113:
 1972              		.cfi_def_cfa_offset 16
 1973 0004 00AF     		add	r7, sp, #0
 1974              	.LCFI114:
 1975              		.cfi_def_cfa_register 7
 1976 0006 0246     		mov	r2, r0
 1977 0008 0B46     		mov	r3, r1
 1978 000a FA71     		strb	r2, [r7, #7]
 1979 000c BB80     		strh	r3, [r7, #4]	@ movhi
 861:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ChipWrite16( ETH_SOCKET_REG(socket, ETH_SOCK_TXRD), ptr);
 1980              		.loc 1 861 0
 1981 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1982 0010 9BB2     		uxth	r3, r3
 1983 0012 4FEA0323 		lsl	r3, r3, #8
 1984 0016 9BB2     		uxth	r3, r3
 1985 0018 03F58043 		add	r3, r3, #16384
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 51


 1986 001c 03F12203 		add	r3, r3, #34
 1987 0020 9AB2     		uxth	r2, r3
 1988 0022 BB88     		ldrh	r3, [r7, #4]
 1989 0024 1046     		mov	r0, r2
 1990 0026 1946     		mov	r1, r3
 1991 0028 FFF7FEFF 		bl	ETH_ChipWrite16
 862:.\Generated_Source\PSoC5/ETH.c **** }
 1992              		.loc 1 862 0
 1993 002c 07F10807 		add	r7, r7, #8
 1994 0030 BD46     		mov	sp, r7
 1995 0032 80BD     		pop	{r7, pc}
 1996              		.cfi_endproc
 1997              	.LFE38:
 1998              		.size	ETH_SetSocketTxReadPtr, .-ETH_SetSocketTxReadPtr
 1999              		.section	.text.ETH_ExecuteSocketCommand,"ax",%progbits
 2000              		.align	2
 2001              		.global	ETH_ExecuteSocketCommand
 2002              		.thumb
 2003              		.thumb_func
 2004              		.type	ETH_ExecuteSocketCommand, %function
 2005              	ETH_ExecuteSocketCommand:
 2006              	.LFB39:
 863:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 864:.\Generated_Source\PSoC5/ETH.c **** /**
 865:.\Generated_Source\PSoC5/ETH.c ****  * \brief Write a command to the socket command register and wait for completion
 866:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the addressed socket for the command
 867:.\Generated_Source\PSoC5/ETH.c ****  * \param cmd the command to execute
 868:.\Generated_Source\PSoC5/ETH.c ****  */
 869:.\Generated_Source\PSoC5/ETH.c **** uint32 ETH_ExecuteSocketCommand( uint8 socket, int cmd)
 870:.\Generated_Source\PSoC5/ETH.c **** {
 2007              		.loc 1 870 0
 2008              		.cfi_startproc
 2009              		@ args = 0, pretend = 0, frame = 16
 2010              		@ frame_needed = 1, uses_anonymous_args = 0
 2011 0000 80B5     		push	{r7, lr}
 2012              	.LCFI115:
 2013              		.cfi_def_cfa_offset 8
 2014              		.cfi_offset 7, -8
 2015              		.cfi_offset 14, -4
 2016 0002 84B0     		sub	sp, sp, #16
 2017              	.LCFI116:
 2018              		.cfi_def_cfa_offset 24
 2019 0004 00AF     		add	r7, sp, #0
 2020              	.LCFI117:
 2021              		.cfi_def_cfa_register 7
 2022 0006 0346     		mov	r3, r0
 2023 0008 3960     		str	r1, [r7, #0]
 2024 000a FB71     		strb	r3, [r7, #7]
 871:.\Generated_Source\PSoC5/ETH.c **** 	uint32 timeout;
 872:.\Generated_Source\PSoC5/ETH.c **** 	timeout = 0;
 2025              		.loc 1 872 0
 2026 000c 4FF00003 		mov	r3, #0
 2027 0010 FB60     		str	r3, [r7, #12]
 873:.\Generated_Source\PSoC5/ETH.c **** 	
 874:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSocketCommand(socket,cmd);
 2028              		.loc 1 874 0
 2029 0012 3B68     		ldr	r3, [r7, #0]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 52


 2030 0014 DBB2     		uxtb	r3, r3
 2031 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2032 0018 1046     		mov	r0, r2
 2033 001a 1946     		mov	r1, r3
 2034 001c FFF7FEFF 		bl	ETH_SetSocketCommand
 875:.\Generated_Source\PSoC5/ETH.c **** 	while ( ( ETH_GetSocketCommand(socket) ) && (timeout < 125))
 2035              		.loc 1 875 0
 2036 0020 07E0     		b	.L72
 2037              	.L74:
 876:.\Generated_Source\PSoC5/ETH.c **** 	{
 877:.\Generated_Source\PSoC5/ETH.c **** 		++timeout;
 2038              		.loc 1 877 0
 2039 0022 FB68     		ldr	r3, [r7, #12]
 2040 0024 03F10103 		add	r3, r3, #1
 2041 0028 FB60     		str	r3, [r7, #12]
 878:.\Generated_Source\PSoC5/ETH.c **** 		CyDelay(1);
 2042              		.loc 1 878 0
 2043 002a 4FF00100 		mov	r0, #1
 2044 002e FFF7FEFF 		bl	CyDelay
 2045              	.L72:
 875:.\Generated_Source\PSoC5/ETH.c **** 	while ( ( ETH_GetSocketCommand(socket) ) && (timeout < 125))
 2046              		.loc 1 875 0 discriminator 1
 2047 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2048 0034 1846     		mov	r0, r3
 2049 0036 FFF7FEFF 		bl	ETH_GetSocketCommand
 2050 003a 0346     		mov	r3, r0
 2051 003c 002B     		cmp	r3, #0
 2052 003e 02D0     		beq	.L73
 875:.\Generated_Source\PSoC5/ETH.c **** 	while ( ( ETH_GetSocketCommand(socket) ) && (timeout < 125))
 2053              		.loc 1 875 0 is_stmt 0 discriminator 2
 2054 0040 FB68     		ldr	r3, [r7, #12]
 2055 0042 7C2B     		cmp	r3, #124
 2056 0044 EDD9     		bls	.L74
 2057              	.L73:
 879:.\Generated_Source\PSoC5/ETH.c **** 	}
 880:.\Generated_Source\PSoC5/ETH.c **** 	return( timeout );
 2058              		.loc 1 880 0 is_stmt 1
 2059 0046 FB68     		ldr	r3, [r7, #12]
 881:.\Generated_Source\PSoC5/ETH.c **** }
 2060              		.loc 1 881 0
 2061 0048 1846     		mov	r0, r3
 2062 004a 07F11007 		add	r7, r7, #16
 2063 004e BD46     		mov	sp, r7
 2064 0050 80BD     		pop	{r7, pc}
 2065              		.cfi_endproc
 2066              	.LFE39:
 2067              		.size	ETH_ExecuteSocketCommand, .-ETH_ExecuteSocketCommand
 2068 0052 00BF     		.section	.text.ETH_GetTxFreeSize,"ax",%progbits
 2069              		.align	2
 2070              		.global	ETH_GetTxFreeSize
 2071              		.thumb
 2072              		.thumb_func
 2073              		.type	ETH_GetTxFreeSize, %function
 2074              	ETH_GetTxFreeSize:
 2075              	.LFB40:
 882:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 883:.\Generated_Source\PSoC5/ETH.c **** /**
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 53


 884:.\Generated_Source\PSoC5/ETH.c ****  * \brief Execute a safe read fo the Tx buffer free size register
 885:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the addressed socket to read the available tx buffer
 886:.\Generated_Source\PSoC5/ETH.c ****  * \returns the number of bytes available in the transmit buffer for the socket
 887:.\Generated_Source\PSoC5/ETH.c ****  */
 888:.\Generated_Source\PSoC5/ETH.c **** uint16 ETH_GetTxFreeSize( uint8 socket )
 889:.\Generated_Source\PSoC5/ETH.c **** {
 2076              		.loc 1 889 0
 2077              		.cfi_startproc
 2078              		@ args = 0, pretend = 0, frame = 16
 2079              		@ frame_needed = 1, uses_anonymous_args = 0
 2080 0000 80B5     		push	{r7, lr}
 2081              	.LCFI118:
 2082              		.cfi_def_cfa_offset 8
 2083              		.cfi_offset 7, -8
 2084              		.cfi_offset 14, -4
 2085 0002 84B0     		sub	sp, sp, #16
 2086              	.LCFI119:
 2087              		.cfi_def_cfa_offset 24
 2088 0004 00AF     		add	r7, sp, #0
 2089              	.LCFI120:
 2090              		.cfi_def_cfa_register 7
 2091 0006 0346     		mov	r3, r0
 2092 0008 FB71     		strb	r3, [r7, #7]
 890:.\Generated_Source\PSoC5/ETH.c **** 	uint16 first, second;
 891:.\Generated_Source\PSoC5/ETH.c **** 	
 892:.\Generated_Source\PSoC5/ETH.c **** 	first = 0;
 2093              		.loc 1 892 0
 2094 000a 4FF00003 		mov	r3, #0
 2095 000e BB81     		strh	r3, [r7, #12]	@ movhi
 893:.\Generated_Source\PSoC5/ETH.c **** 	second = 0;
 2096              		.loc 1 893 0
 2097 0010 4FF00003 		mov	r3, #0
 2098 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 2099              	.L78:
 894:.\Generated_Source\PSoC5/ETH.c **** 	do {
 895:.\Generated_Source\PSoC5/ETH.c **** 		first = ETH_GetSocketTxFree( socket );
 2100              		.loc 1 895 0
 2101 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2102 0018 1846     		mov	r0, r3
 2103 001a FFF7FEFF 		bl	ETH_GetSocketTxFree
 2104 001e 0346     		mov	r3, r0
 2105 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 896:.\Generated_Source\PSoC5/ETH.c **** 		if (first != 0) {
 2106              		.loc 1 896 0
 2107 0022 BB89     		ldrh	r3, [r7, #12]
 2108 0024 002B     		cmp	r3, #0
 2109 0026 05D0     		beq	.L77
 897:.\Generated_Source\PSoC5/ETH.c **** 			second = ETH_GetSocketTxFree( socket );
 2110              		.loc 1 897 0
 2111 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2112 002a 1846     		mov	r0, r3
 2113 002c FFF7FEFF 		bl	ETH_GetSocketTxFree
 2114 0030 0346     		mov	r3, r0
 2115 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 2116              	.L77:
 898:.\Generated_Source\PSoC5/ETH.c **** 		}
 899:.\Generated_Source\PSoC5/ETH.c **** 	}
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 54


 900:.\Generated_Source\PSoC5/ETH.c **** 	while (first != second );
 2117              		.loc 1 900 0
 2118 0034 BA89     		ldrh	r2, [r7, #12]
 2119 0036 FB89     		ldrh	r3, [r7, #14]
 2120 0038 9A42     		cmp	r2, r3
 2121 003a ECD1     		bne	.L78
 901:.\Generated_Source\PSoC5/ETH.c **** 	
 902:.\Generated_Source\PSoC5/ETH.c **** 	return( second );
 2122              		.loc 1 902 0
 2123 003c FB89     		ldrh	r3, [r7, #14]
 903:.\Generated_Source\PSoC5/ETH.c **** }
 2124              		.loc 1 903 0
 2125 003e 1846     		mov	r0, r3
 2126 0040 07F11007 		add	r7, r7, #16
 2127 0044 BD46     		mov	sp, r7
 2128 0046 80BD     		pop	{r7, pc}
 2129              		.cfi_endproc
 2130              	.LFE40:
 2131              		.size	ETH_GetTxFreeSize, .-ETH_GetTxFreeSize
 2132              		.section	.text.ETH_GetRxSize,"ax",%progbits
 2133              		.align	2
 2134              		.global	ETH_GetRxSize
 2135              		.thumb
 2136              		.thumb_func
 2137              		.type	ETH_GetRxSize, %function
 2138              	ETH_GetRxSize:
 2139              	.LFB41:
 904:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 905:.\Generated_Source\PSoC5/ETH.c **** /**
 906:.\Generated_Source\PSoC5/ETH.c ****  * \brief Execute a safe read of the received data size
 907:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the addressed socketfrom which the data will be read
 908:.\Generated_Source\PSoC5/ETH.c ****  * \returns the number of bytes waiting in the recieve buffer of the socket
 909:.\Generated_Source\PSoC5/ETH.c ****  */
 910:.\Generated_Source\PSoC5/ETH.c **** uint16 ETH_GetRxSize( uint8 socket )
 911:.\Generated_Source\PSoC5/ETH.c **** {
 2140              		.loc 1 911 0
 2141              		.cfi_startproc
 2142              		@ args = 0, pretend = 0, frame = 16
 2143              		@ frame_needed = 1, uses_anonymous_args = 0
 2144 0000 80B5     		push	{r7, lr}
 2145              	.LCFI121:
 2146              		.cfi_def_cfa_offset 8
 2147              		.cfi_offset 7, -8
 2148              		.cfi_offset 14, -4
 2149 0002 84B0     		sub	sp, sp, #16
 2150              	.LCFI122:
 2151              		.cfi_def_cfa_offset 24
 2152 0004 00AF     		add	r7, sp, #0
 2153              	.LCFI123:
 2154              		.cfi_def_cfa_register 7
 2155 0006 0346     		mov	r3, r0
 2156 0008 FB71     		strb	r3, [r7, #7]
 912:.\Generated_Source\PSoC5/ETH.c **** 	uint16 first, second;
 913:.\Generated_Source\PSoC5/ETH.c **** 	
 914:.\Generated_Source\PSoC5/ETH.c **** 	first = 0;
 2157              		.loc 1 914 0
 2158 000a 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 55


 2159 000e BB81     		strh	r3, [r7, #12]	@ movhi
 915:.\Generated_Source\PSoC5/ETH.c **** 	second = 0;
 2160              		.loc 1 915 0
 2161 0010 4FF00003 		mov	r3, #0
 2162 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 2163              	.L82:
 916:.\Generated_Source\PSoC5/ETH.c **** 	do {
 917:.\Generated_Source\PSoC5/ETH.c **** 		first = ETH_GetSocketRxSize( socket );
 2164              		.loc 1 917 0
 2165 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2166 0018 1846     		mov	r0, r3
 2167 001a FFF7FEFF 		bl	ETH_GetSocketRxSize
 2168 001e 0346     		mov	r3, r0
 2169 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 918:.\Generated_Source\PSoC5/ETH.c **** 		if (first != 0) {
 2170              		.loc 1 918 0
 2171 0022 BB89     		ldrh	r3, [r7, #12]
 2172 0024 002B     		cmp	r3, #0
 2173 0026 05D0     		beq	.L81
 919:.\Generated_Source\PSoC5/ETH.c **** 			second = ETH_GetSocketRxSize( socket );
 2174              		.loc 1 919 0
 2175 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2176 002a 1846     		mov	r0, r3
 2177 002c FFF7FEFF 		bl	ETH_GetSocketRxSize
 2178 0030 0346     		mov	r3, r0
 2179 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 2180              	.L81:
 920:.\Generated_Source\PSoC5/ETH.c **** 		}
 921:.\Generated_Source\PSoC5/ETH.c **** 	}
 922:.\Generated_Source\PSoC5/ETH.c **** 	while (first != second );
 2181              		.loc 1 922 0
 2182 0034 BA89     		ldrh	r2, [r7, #12]
 2183 0036 FB89     		ldrh	r3, [r7, #14]
 2184 0038 9A42     		cmp	r2, r3
 2185 003a ECD1     		bne	.L82
 923:.\Generated_Source\PSoC5/ETH.c **** 	
 924:.\Generated_Source\PSoC5/ETH.c **** 	return second;
 2186              		.loc 1 924 0
 2187 003c FB89     		ldrh	r3, [r7, #14]
 925:.\Generated_Source\PSoC5/ETH.c **** }
 2188              		.loc 1 925 0
 2189 003e 1846     		mov	r0, r3
 2190 0040 07F11007 		add	r7, r7, #16
 2191 0044 BD46     		mov	sp, r7
 2192 0046 80BD     		pop	{r7, pc}
 2193              		.cfi_endproc
 2194              	.LFE41:
 2195              		.size	ETH_GetRxSize, .-ETH_GetRxSize
 2196              		.section	.text.ETH_ProcessTxData,"ax",%progbits
 2197              		.align	2
 2198              		.global	ETH_ProcessTxData
 2199              		.thumb
 2200              		.thumb_func
 2201              		.type	ETH_ProcessTxData, %function
 2202              	ETH_ProcessTxData:
 2203              	.LFB42:
 926:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 56


 927:.\Generated_Source\PSoC5/ETH.c **** 
 928:.\Generated_Source\PSoC5/ETH.c **** // END Socket Register access section
 929:.\Generated_Source\PSoC5/ETH.c **** #endif
 930:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
 931:.\Generated_Source\PSoC5/ETH.c **** /* W5x00 Data Buffer Memory access primitives */
 932:.\Generated_Source\PSoC5/ETH.c **** #if (1)
 933:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 934:.\Generated_Source\PSoC5/ETH.c **** /**
 935:.\Generated_Source\PSoC5/ETH.c ****  * \brief Transfer data from a local data buffer to the chip Tx fifo
 936:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket buffer to which the data will be written
 937:.\Generated_Source\PSoC5/ETH.c ****  * \param offset The offest in to the socket buffer
 938:.\Generated_Source\PSoC5/ETH.c ****  * \param *buffer pointer to the local buffer to copy to the transmit fifo
 939:.\Generated_Source\PSoC5/ETH.c ****  * \param length the number of bytes to be copied to the transmit fifo
 940:.\Generated_Source\PSoC5/ETH.c ****  */
 941:.\Generated_Source\PSoC5/ETH.c **** void ETH_ProcessTxData(uint8 socket, uint16 offset, uint8* buffer, uint16 length)
 942:.\Generated_Source\PSoC5/ETH.c **** {
 2204              		.loc 1 942 0
 2205              		.cfi_startproc
 2206              		@ args = 0, pretend = 0, frame = 24
 2207              		@ frame_needed = 1, uses_anonymous_args = 0
 2208 0000 80B5     		push	{r7, lr}
 2209              	.LCFI124:
 2210              		.cfi_def_cfa_offset 8
 2211              		.cfi_offset 7, -8
 2212              		.cfi_offset 14, -4
 2213 0002 86B0     		sub	sp, sp, #24
 2214              	.LCFI125:
 2215              		.cfi_def_cfa_offset 32
 2216 0004 00AF     		add	r7, sp, #0
 2217              	.LCFI126:
 2218              		.cfi_def_cfa_register 7
 2219 0006 BA60     		str	r2, [r7, #8]
 2220 0008 0246     		mov	r2, r0
 2221 000a FA73     		strb	r2, [r7, #15]
 2222 000c 0A46     		mov	r2, r1	@ movhi
 2223 000e BA81     		strh	r2, [r7, #12]	@ movhi
 2224 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 943:.\Generated_Source\PSoC5/ETH.c **** 	uint16 addr;
 944:.\Generated_Source\PSoC5/ETH.c **** 	uint16 base;
 945:.\Generated_Source\PSoC5/ETH.c **** 	uint16 PointerOffset;
 946:.\Generated_Source\PSoC5/ETH.c **** 	uint16 size;
 947:.\Generated_Source\PSoC5/ETH.c **** 	
 948:.\Generated_Source\PSoC5/ETH.c **** 	/*
 949:.\Generated_Source\PSoC5/ETH.c **** 	 * Read the offset pointer, and calculate the base address for the start of write
 950:.\Generated_Source\PSoC5/ETH.c **** 	 * in to the chip buffers.  Written data will be offset by the offset byte count
 951:.\Generated_Source\PSoC5/ETH.c **** 	 * specified in the parameters.
 952:.\Generated_Source\PSoC5/ETH.c **** 	 */
 953:.\Generated_Source\PSoC5/ETH.c **** 	base = ETH_GetSocketTxWritePtr(socket) + offset;
 2225              		.loc 1 953 0
 2226 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2227 0014 1846     		mov	r0, r3
 2228 0016 FFF7FEFF 		bl	ETH_GetSocketTxWritePtr
 2229 001a 0346     		mov	r3, r0
 2230 001c 1A46     		mov	r2, r3
 2231 001e BB89     		ldrh	r3, [r7, #12]	@ movhi
 2232 0020 D318     		adds	r3, r2, r3
 2233 0022 FB82     		strh	r3, [r7, #22]	@ movhi
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 57


 954:.\Generated_Source\PSoC5/ETH.c **** 	PointerOffset = (base & 0x07FF);
 2234              		.loc 1 954 0
 2235 0024 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2236 0026 4FEA4353 		lsl	r3, r3, #21
 2237 002a 4FEA5353 		lsr	r3, r3, #21
 2238 002e BB82     		strh	r3, [r7, #20]	@ movhi
 955:.\Generated_Source\PSoC5/ETH.c **** 	addr = PointerOffset + ETH_SOCKET_TX_BASE[socket];
 2239              		.loc 1 955 0
 2240 0030 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2241 0032 40F20003 		movw	r3, #:lower16:ETH_SOCKET_TX_BASE
 2242 0036 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_TX_BASE
 2243 003a 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2244 003e BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2245 0040 D318     		adds	r3, r2, r3
 2246 0042 7B82     		strh	r3, [r7, #18]	@ movhi
 956:.\Generated_Source\PSoC5/ETH.c **** 	/* calculate the number of bytes from the pointer to the end of the buffer */
 957:.\Generated_Source\PSoC5/ETH.c **** 	size = 0x0800 - PointerOffset;
 2247              		.loc 1 957 0
 2248 0044 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2249 0046 C3F50063 		rsb	r3, r3, #2048
 2250 004a 3B82     		strh	r3, [r7, #16]	@ movhi
 958:.\Generated_Source\PSoC5/ETH.c **** 	
 959:.\Generated_Source\PSoC5/ETH.c **** 	/*
 960:.\Generated_Source\PSoC5/ETH.c **** 	 * is there enough space to write the complete packet
 961:.\Generated_Source\PSoC5/ETH.c **** 	 * or, shoudl the data be split in to two writes.
 962:.\Generated_Source\PSoC5/ETH.c **** 	 */
 963:.\Generated_Source\PSoC5/ETH.c **** 	if ( length > size) {
 2251              		.loc 1 963 0
 2252 004c FA88     		ldrh	r2, [r7, #6]
 2253 004e 3B8A     		ldrh	r3, [r7, #16]
 2254 0050 9A42     		cmp	r2, r3
 2255 0052 1AD9     		bls	.L85
 964:.\Generated_Source\PSoC5/ETH.c **** 		/*
 965:.\Generated_Source\PSoC5/ETH.c **** 		 * There is more data to send than will fit from the pointer to the end
 966:.\Generated_Source\PSoC5/ETH.c **** 		 * of the memory, so we will write the data in two chunks.  First, write the
 967:.\Generated_Source\PSoC5/ETH.c **** 		 * data from the pointer to the end of the buffer, then write the portion
 968:.\Generated_Source\PSoC5/ETH.c **** 		 * remaining to the start (base ptr) of the socket buffer
 969:.\Generated_Source\PSoC5/ETH.c **** 		 */
 970:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipWrite(addr, buffer, size);
 2256              		.loc 1 970 0
 2257 0054 7A8A     		ldrh	r2, [r7, #18]
 2258 0056 3B8A     		ldrh	r3, [r7, #16]
 2259 0058 1046     		mov	r0, r2
 2260 005a B968     		ldr	r1, [r7, #8]
 2261 005c 1A46     		mov	r2, r3
 2262 005e FFF7FEFF 		bl	ETH_ChipWrite
 971:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipWrite(ETH_SOCKET_TX_BASE[socket], &buffer[size], length - size);
 2263              		.loc 1 971 0
 2264 0062 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2265 0064 40F20003 		movw	r3, #:lower16:ETH_SOCKET_TX_BASE
 2266 0068 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_TX_BASE
 2267 006c 33F81210 		ldrh	r1, [r3, r2, lsl #1]
 2268 0070 3B8A     		ldrh	r3, [r7, #16]
 2269 0072 BA68     		ldr	r2, [r7, #8]
 2270 0074 D218     		adds	r2, r2, r3
 2271 0076 F888     		ldrh	r0, [r7, #6]	@ movhi
 2272 0078 3B8A     		ldrh	r3, [r7, #16]	@ movhi
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 58


 2273 007a C31A     		subs	r3, r0, r3
 2274 007c 9BB2     		uxth	r3, r3
 2275 007e 0846     		mov	r0, r1
 2276 0080 1146     		mov	r1, r2
 2277 0082 1A46     		mov	r2, r3
 2278 0084 FFF7FEFF 		bl	ETH_ChipWrite
 2279 0088 06E0     		b	.L86
 2280              	.L85:
 972:.\Generated_Source\PSoC5/ETH.c **** 	}
 973:.\Generated_Source\PSoC5/ETH.c **** 	else {
 974:.\Generated_Source\PSoC5/ETH.c **** 		/* 
 975:.\Generated_Source\PSoC5/ETH.c **** 		 * there is enough available space from the write point to the end of buffer
 976:.\Generated_Source\PSoC5/ETH.c **** 		 * to hold the whole packe of information, so just write it to the memory
 977:.\Generated_Source\PSoC5/ETH.c **** 		 */
 978:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipWrite(addr,buffer,length);
 2281              		.loc 1 978 0
 2282 008a 7A8A     		ldrh	r2, [r7, #18]
 2283 008c FB88     		ldrh	r3, [r7, #6]
 2284 008e 1046     		mov	r0, r2
 2285 0090 B968     		ldr	r1, [r7, #8]
 2286 0092 1A46     		mov	r2, r3
 2287 0094 FFF7FEFF 		bl	ETH_ChipWrite
 2288              	.L86:
 979:.\Generated_Source\PSoC5/ETH.c **** 	}
 980:.\Generated_Source\PSoC5/ETH.c **** 	/* move the write pointer */
 981:.\Generated_Source\PSoC5/ETH.c **** 	base += length;
 2289              		.loc 1 981 0
 2290 0098 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 2291 009a FB88     		ldrh	r3, [r7, #6]	@ movhi
 2292 009c D318     		adds	r3, r2, r3
 2293 009e FB82     		strh	r3, [r7, #22]	@ movhi
 982:.\Generated_Source\PSoC5/ETH.c **** 	/* 
 983:.\Generated_Source\PSoC5/ETH.c **** 	 * Store the new write pointer so that the device knows that there is data waiting
 984:.\Generated_Source\PSoC5/ETH.c **** 	 * to be transmitted over the link.
 985:.\Generated_Source\PSoC5/ETH.c **** 	 */
 986:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSocketTxWritePtr(socket, base);
 2294              		.loc 1 986 0
 2295 00a0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2296 00a2 FB8A     		ldrh	r3, [r7, #22]
 2297 00a4 1046     		mov	r0, r2
 2298 00a6 1946     		mov	r1, r3
 2299 00a8 FFF7FEFF 		bl	ETH_SetSocketTxWritePtr
 987:.\Generated_Source\PSoC5/ETH.c **** }
 2300              		.loc 1 987 0
 2301 00ac 07F11807 		add	r7, r7, #24
 2302 00b0 BD46     		mov	sp, r7
 2303 00b2 80BD     		pop	{r7, pc}
 2304              		.cfi_endproc
 2305              	.LFE42:
 2306              		.size	ETH_ProcessTxData, .-ETH_ProcessTxData
 2307              		.section	.text.ETH_ProcessRxData,"ax",%progbits
 2308              		.align	2
 2309              		.global	ETH_ProcessRxData
 2310              		.thumb
 2311              		.thumb_func
 2312              		.type	ETH_ProcessRxData, %function
 2313              	ETH_ProcessRxData:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 59


 2314              	.LFB43:
 988:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
 989:.\Generated_Source\PSoC5/ETH.c **** /**
 990:.\Generated_Source\PSoC5/ETH.c ****  * \brief Transfer data from the chip receive buffer to a local buffer
 991:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket buffer from which the data will be read
 992:.\Generated_Source\PSoC5/ETH.c ****  * \param offset The offest in to the socket buffer
 993:.\Generated_Source\PSoC5/ETH.c ****  * \param *buffer pointer to the local buffer to hold the receive fifo data
 994:.\Generated_Source\PSoC5/ETH.c ****  * \param length the max number of bytes to be copied to the local buffer
 995:.\Generated_Source\PSoC5/ETH.c ****  * \param flags Flag settings to control read fifo options (lookahead)
 996:.\Generated_Source\PSoC5/ETH.c ****  */
 997:.\Generated_Source\PSoC5/ETH.c **** void ETH_ProcessRxData(uint8 socket, uint16 offset, uint8* buffer, uint16 length, uint8 flags)
 998:.\Generated_Source\PSoC5/ETH.c **** {
 2315              		.loc 1 998 0
 2316              		.cfi_startproc
 2317              		@ args = 4, pretend = 0, frame = 24
 2318              		@ frame_needed = 1, uses_anonymous_args = 0
 2319 0000 80B5     		push	{r7, lr}
 2320              	.LCFI127:
 2321              		.cfi_def_cfa_offset 8
 2322              		.cfi_offset 7, -8
 2323              		.cfi_offset 14, -4
 2324 0002 86B0     		sub	sp, sp, #24
 2325              	.LCFI128:
 2326              		.cfi_def_cfa_offset 32
 2327 0004 00AF     		add	r7, sp, #0
 2328              	.LCFI129:
 2329              		.cfi_def_cfa_register 7
 2330 0006 BA60     		str	r2, [r7, #8]
 2331 0008 0246     		mov	r2, r0
 2332 000a FA73     		strb	r2, [r7, #15]
 2333 000c 0A46     		mov	r2, r1	@ movhi
 2334 000e BA81     		strh	r2, [r7, #12]	@ movhi
 2335 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 999:.\Generated_Source\PSoC5/ETH.c **** 	uint16 addr;
1000:.\Generated_Source\PSoC5/ETH.c **** 	uint16 base;
1001:.\Generated_Source\PSoC5/ETH.c **** 	uint16 PointerOffset;
1002:.\Generated_Source\PSoC5/ETH.c **** 	uint16 size;
1003:.\Generated_Source\PSoC5/ETH.c **** 	
1004:.\Generated_Source\PSoC5/ETH.c **** 	/*
1005:.\Generated_Source\PSoC5/ETH.c **** 	 * Read the offset pointer, and calculate the base address for the start of read
1006:.\Generated_Source\PSoC5/ETH.c **** 	 * in to the chip buffers.  The data read will be offset by the offset byte count
1007:.\Generated_Source\PSoC5/ETH.c **** 	 * specified in the parameters.
1008:.\Generated_Source\PSoC5/ETH.c **** 	 */
1009:.\Generated_Source\PSoC5/ETH.c **** 	base = ETH_GetSocketRxReadPtr(socket) + offset;
 2336              		.loc 1 1009 0
 2337 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2338 0014 1846     		mov	r0, r3
 2339 0016 FFF7FEFF 		bl	ETH_GetSocketRxReadPtr
 2340 001a 0346     		mov	r3, r0
 2341 001c 1A46     		mov	r2, r3
 2342 001e BB89     		ldrh	r3, [r7, #12]	@ movhi
 2343 0020 D318     		adds	r3, r2, r3
 2344 0022 FB82     		strh	r3, [r7, #22]	@ movhi
1010:.\Generated_Source\PSoC5/ETH.c **** 	PointerOffset = (base & 0x07FF);
 2345              		.loc 1 1010 0
 2346 0024 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2347 0026 4FEA4353 		lsl	r3, r3, #21
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 60


 2348 002a 4FEA5353 		lsr	r3, r3, #21
 2349 002e BB82     		strh	r3, [r7, #20]	@ movhi
1011:.\Generated_Source\PSoC5/ETH.c **** 	addr = PointerOffset + ETH_SOCKET_RX_BASE[socket];
 2350              		.loc 1 1011 0
 2351 0030 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2352 0032 40F20003 		movw	r3, #:lower16:ETH_SOCKET_RX_BASE
 2353 0036 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_RX_BASE
 2354 003a 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2355 003e BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2356 0040 D318     		adds	r3, r2, r3
 2357 0042 7B82     		strh	r3, [r7, #18]	@ movhi
1012:.\Generated_Source\PSoC5/ETH.c **** 	/* calculate the number of bytes from the pointer to the end of the buffer */
1013:.\Generated_Source\PSoC5/ETH.c **** 	size = 0x0800 - PointerOffset;
 2358              		.loc 1 1013 0
 2359 0044 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 2360 0046 C3F50063 		rsb	r3, r3, #2048
 2361 004a 3B82     		strh	r3, [r7, #16]	@ movhi
1014:.\Generated_Source\PSoC5/ETH.c **** 	/*
1015:.\Generated_Source\PSoC5/ETH.c **** 	 * is there enough space to read the complete packet
1016:.\Generated_Source\PSoC5/ETH.c **** 	 * or, should the data be split in to two reads.
1017:.\Generated_Source\PSoC5/ETH.c **** 	 */
1018:.\Generated_Source\PSoC5/ETH.c **** 	if ( length > size) {
 2362              		.loc 1 1018 0
 2363 004c FA88     		ldrh	r2, [r7, #6]
 2364 004e 3B8A     		ldrh	r3, [r7, #16]
 2365 0050 9A42     		cmp	r2, r3
 2366 0052 1AD9     		bls	.L88
1019:.\Generated_Source\PSoC5/ETH.c **** 		/*
1020:.\Generated_Source\PSoC5/ETH.c **** 		 * There is more data to send than will fit from the pointer to the end
1021:.\Generated_Source\PSoC5/ETH.c **** 		 * of the memory, so we will write the data in two chunks.  First, write the
1022:.\Generated_Source\PSoC5/ETH.c **** 		 * data from the pointer to the end of the buffer, then write the portion
1023:.\Generated_Source\PSoC5/ETH.c **** 		 * remaining to the start (base ptr) of the socket buffer
1024:.\Generated_Source\PSoC5/ETH.c **** 		 */
1025:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipRead(addr, buffer, size);
 2367              		.loc 1 1025 0
 2368 0054 7A8A     		ldrh	r2, [r7, #18]
 2369 0056 3B8A     		ldrh	r3, [r7, #16]
 2370 0058 1046     		mov	r0, r2
 2371 005a B968     		ldr	r1, [r7, #8]
 2372 005c 1A46     		mov	r2, r3
 2373 005e FFF7FEFF 		bl	ETH_ChipRead
1026:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipRead(ETH_SOCKET_RX_BASE[socket], &buffer[size], length - size);
 2374              		.loc 1 1026 0
 2375 0062 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2376 0064 40F20003 		movw	r3, #:lower16:ETH_SOCKET_RX_BASE
 2377 0068 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_RX_BASE
 2378 006c 33F81210 		ldrh	r1, [r3, r2, lsl #1]
 2379 0070 3B8A     		ldrh	r3, [r7, #16]
 2380 0072 BA68     		ldr	r2, [r7, #8]
 2381 0074 D218     		adds	r2, r2, r3
 2382 0076 F888     		ldrh	r0, [r7, #6]	@ movhi
 2383 0078 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 2384 007a C31A     		subs	r3, r0, r3
 2385 007c 9BB2     		uxth	r3, r3
 2386 007e 0846     		mov	r0, r1
 2387 0080 1146     		mov	r1, r2
 2388 0082 1A46     		mov	r2, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 61


 2389 0084 FFF7FEFF 		bl	ETH_ChipRead
 2390 0088 06E0     		b	.L89
 2391              	.L88:
1027:.\Generated_Source\PSoC5/ETH.c **** 	}
1028:.\Generated_Source\PSoC5/ETH.c **** 	else {
1029:.\Generated_Source\PSoC5/ETH.c **** 		/* 
1030:.\Generated_Source\PSoC5/ETH.c **** 		 * there is enough available space from the write point to the end of buffer
1031:.\Generated_Source\PSoC5/ETH.c **** 		 * to hold the whole packe of information, so just write it to the memory
1032:.\Generated_Source\PSoC5/ETH.c **** 		 */
1033:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ChipRead(addr,buffer,length);
 2392              		.loc 1 1033 0
 2393 008a 7A8A     		ldrh	r2, [r7, #18]
 2394 008c FB88     		ldrh	r3, [r7, #6]
 2395 008e 1046     		mov	r0, r2
 2396 0090 B968     		ldr	r1, [r7, #8]
 2397 0092 1A46     		mov	r2, r3
 2398 0094 FFF7FEFF 		bl	ETH_ChipRead
 2399              	.L89:
1034:.\Generated_Source\PSoC5/ETH.c **** 	}
1035:.\Generated_Source\PSoC5/ETH.c **** 	if ( (flags & 0x01) == 0 ) { /* V1.1: Added ==0 condition to lookahead flag check */
 2400              		.loc 1 1035 0
 2401 0098 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 2402 009c 03F00103 		and	r3, r3, #1
 2403 00a0 002B     		cmp	r3, #0
 2404 00a2 09D1     		bne	.L87
1036:.\Generated_Source\PSoC5/ETH.c **** 		/* move the write pointer */
1037:.\Generated_Source\PSoC5/ETH.c **** 		base += length;
 2405              		.loc 1 1037 0
 2406 00a4 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 2407 00a6 FB88     		ldrh	r3, [r7, #6]	@ movhi
 2408 00a8 D318     		adds	r3, r2, r3
 2409 00aa FB82     		strh	r3, [r7, #22]	@ movhi
1038:.\Generated_Source\PSoC5/ETH.c **** 		/* 
1039:.\Generated_Source\PSoC5/ETH.c **** 		 * Store the new write pointer so that the device knows that there is data waiting
1040:.\Generated_Source\PSoC5/ETH.c **** 		 * to be transmitted over the link.
1041:.\Generated_Source\PSoC5/ETH.c **** 		 */
1042:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketRxReadPtr(socket, base);
 2410              		.loc 1 1042 0
 2411 00ac FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2412 00ae FB8A     		ldrh	r3, [r7, #22]
 2413 00b0 1046     		mov	r0, r2
 2414 00b2 1946     		mov	r1, r3
 2415 00b4 FFF7FEFF 		bl	ETH_SetSocketRxReadPtr
 2416              	.L87:
1043:.\Generated_Source\PSoC5/ETH.c **** 	}
1044:.\Generated_Source\PSoC5/ETH.c **** }
 2417              		.loc 1 1044 0
 2418 00b8 07F11807 		add	r7, r7, #24
 2419 00bc BD46     		mov	sp, r7
 2420 00be 80BD     		pop	{r7, pc}
 2421              		.cfi_endproc
 2422              	.LFE43:
 2423              		.size	ETH_ProcessRxData, .-ETH_ProcessRxData
 2424              		.section	.text.ETH_Init,"ax",%progbits
 2425              		.align	2
 2426              		.global	ETH_Init
 2427              		.thumb
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 62


 2428              		.thumb_func
 2429              		.type	ETH_Init, %function
 2430              	ETH_Init:
 2431              	.LFB44:
1045:.\Generated_Source\PSoC5/ETH.c **** #endif
1046:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
1047:.\Generated_Source\PSoC5/ETH.c **** /* Driver Initialization */
1048:.\Generated_Source\PSoC5/ETH.c **** #if (1)
1049:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1050:.\Generated_Source\PSoC5/ETH.c **** void
1051:.\Generated_Source\PSoC5/ETH.c **** ETH_Init(uint8* mac, uint32 ip, uint32 subnet, uint32 gateway)
1052:.\Generated_Source\PSoC5/ETH.c **** {
 2432              		.loc 1 1052 0
 2433              		.cfi_startproc
 2434              		@ args = 0, pretend = 0, frame = 24
 2435              		@ frame_needed = 1, uses_anonymous_args = 0
 2436 0000 80B5     		push	{r7, lr}
 2437              	.LCFI130:
 2438              		.cfi_def_cfa_offset 8
 2439              		.cfi_offset 7, -8
 2440              		.cfi_offset 14, -4
 2441 0002 86B0     		sub	sp, sp, #24
 2442              	.LCFI131:
 2443              		.cfi_def_cfa_offset 32
 2444 0004 00AF     		add	r7, sp, #0
 2445              	.LCFI132:
 2446              		.cfi_def_cfa_register 7
 2447 0006 F860     		str	r0, [r7, #12]
 2448 0008 B960     		str	r1, [r7, #8]
 2449 000a 7A60     		str	r2, [r7, #4]
 2450 000c 3B60     		str	r3, [r7, #0]
1053:.\Generated_Source\PSoC5/ETH.c **** 	/*
1054:.\Generated_Source\PSoC5/ETH.c **** 	 * Initialize the device and the address configuration, then
1055:.\Generated_Source\PSoC5/ETH.c **** 	 * execute socket memory initialization for the local allocation
1056:.\Generated_Source\PSoC5/ETH.c **** 	 * table.
1057:.\Generated_Source\PSoC5/ETH.c **** 	 */
1058:.\Generated_Source\PSoC5/ETH.c **** 	int index;
1059:.\Generated_Source\PSoC5/ETH.c **** 	
1060:.\Generated_Source\PSoC5/ETH.c **** 	CyDelay( 250 ); /* Fixed Boot Delay or chip inintialization will fail */
 2451              		.loc 1 1060 0
 2452 000e 4FF0FA00 		mov	r0, #250
 2453 0012 FFF7FEFF 		bl	CyDelay
1061:.\Generated_Source\PSoC5/ETH.c **** 	
1062:.\Generated_Source\PSoC5/ETH.c **** 	/* Reset the device */
1063:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetMode(0x80); /* Send Reset Command */
 2454              		.loc 1 1063 0
 2455 0016 4FF08000 		mov	r0, #128
 2456 001a FFF7FEFF 		bl	ETH_SetMode
1064:.\Generated_Source\PSoC5/ETH.c **** 	/* Wait for the chip initialization delay */
1065:.\Generated_Source\PSoC5/ETH.c **** 	CyDelay( 10 );
 2457              		.loc 1 1065 0
 2458 001e 4FF00A00 		mov	r0, #10
 2459 0022 FFF7FEFF 		bl	CyDelay
1066:.\Generated_Source\PSoC5/ETH.c **** 	
1067:.\Generated_Source\PSoC5/ETH.c **** 	/* Close all of the socket, and clear the memory to make them available. */
1068:.\Generated_Source\PSoC5/ETH.c **** 	for(index=0;index<ETH_MAX_SOCKET;++index) {
 2460              		.loc 1 1068 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 63


 2461 0026 4FF00003 		mov	r3, #0
 2462 002a 7B61     		str	r3, [r7, #20]
 2463 002c 4AE0     		b	.L92
 2464              	.L93:
1069:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketClose( index );
 2465              		.loc 1 1069 0 discriminator 2
 2466 002e 7B69     		ldr	r3, [r7, #20]
 2467 0030 DBB2     		uxtb	r3, r3
 2468 0032 1846     		mov	r0, r3
 2469 0034 FFF7FEFF 		bl	ETH_SocketClose
1070:.\Generated_Source\PSoC5/ETH.c **** 		/* Set the socket memory size */
1071:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketTxMemSize(index, ETH_MEM_2K); /* 2K each */
 2470              		.loc 1 1071 0 discriminator 2
 2471 0038 7B69     		ldr	r3, [r7, #20]
 2472 003a DBB2     		uxtb	r3, r3
 2473 003c 1846     		mov	r0, r3
 2474 003e 4FF00201 		mov	r1, #2
 2475 0042 FFF7FEFF 		bl	ETH_SetSocketTxMemSize
1072:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketRxMemSize(index, ETH_MEM_2K); /* 2K Each */
 2476              		.loc 1 1072 0 discriminator 2
 2477 0046 7B69     		ldr	r3, [r7, #20]
 2478 0048 DBB2     		uxtb	r3, r3
 2479 004a 1846     		mov	r0, r3
 2480 004c 4FF00201 		mov	r1, #2
 2481 0050 FFF7FEFF 		bl	ETH_SetSocketRxMemSize
1073:.\Generated_Source\PSoC5/ETH.c **** 		// initialize memory buffer pointers
1074:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketRxReadPtr( index, ETH_SOCKET_RX_BASE[index] );
 2482              		.loc 1 1074 0 discriminator 2
 2483 0054 7B69     		ldr	r3, [r7, #20]
 2484 0056 DAB2     		uxtb	r2, r3
 2485 0058 40F20003 		movw	r3, #:lower16:ETH_SOCKET_RX_BASE
 2486 005c C0F20003 		movt	r3, #:upper16:ETH_SOCKET_RX_BASE
 2487 0060 7969     		ldr	r1, [r7, #20]
 2488 0062 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2489 0066 1046     		mov	r0, r2
 2490 0068 1946     		mov	r1, r3
 2491 006a FFF7FEFF 		bl	ETH_SetSocketRxReadPtr
1075:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketRxWritePtr( index, ETH_SOCKET_RX_BASE[index] );
 2492              		.loc 1 1075 0 discriminator 2
 2493 006e 7B69     		ldr	r3, [r7, #20]
 2494 0070 DAB2     		uxtb	r2, r3
 2495 0072 40F20003 		movw	r3, #:lower16:ETH_SOCKET_RX_BASE
 2496 0076 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_RX_BASE
 2497 007a 7969     		ldr	r1, [r7, #20]
 2498 007c 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2499 0080 1046     		mov	r0, r2
 2500 0082 1946     		mov	r1, r3
 2501 0084 FFF7FEFF 		bl	ETH_SetSocketRxWritePtr
1076:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketTxReadPtr( index, ETH_SOCKET_TX_BASE[index] );
 2502              		.loc 1 1076 0 discriminator 2
 2503 0088 7B69     		ldr	r3, [r7, #20]
 2504 008a DAB2     		uxtb	r2, r3
 2505 008c 40F20003 		movw	r3, #:lower16:ETH_SOCKET_TX_BASE
 2506 0090 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_TX_BASE
 2507 0094 7969     		ldr	r1, [r7, #20]
 2508 0096 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2509 009a 1046     		mov	r0, r2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 64


 2510 009c 1946     		mov	r1, r3
 2511 009e FFF7FEFF 		bl	ETH_SetSocketTxReadPtr
1077:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketTxWritePtr( index, ETH_SOCKET_TX_BASE[index] );
 2512              		.loc 1 1077 0 discriminator 2
 2513 00a2 7B69     		ldr	r3, [r7, #20]
 2514 00a4 DAB2     		uxtb	r2, r3
 2515 00a6 40F20003 		movw	r3, #:lower16:ETH_SOCKET_TX_BASE
 2516 00aa C0F20003 		movt	r3, #:upper16:ETH_SOCKET_TX_BASE
 2517 00ae 7969     		ldr	r1, [r7, #20]
 2518 00b0 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2519 00b4 1046     		mov	r0, r2
 2520 00b6 1946     		mov	r1, r3
 2521 00b8 FFF7FEFF 		bl	ETH_SetSocketTxWritePtr
1068:.\Generated_Source\PSoC5/ETH.c **** 	for(index=0;index<ETH_MAX_SOCKET;++index) {
 2522              		.loc 1 1068 0 discriminator 2
 2523 00bc 7B69     		ldr	r3, [r7, #20]
 2524 00be 03F10103 		add	r3, r3, #1
 2525 00c2 7B61     		str	r3, [r7, #20]
 2526              	.L92:
1068:.\Generated_Source\PSoC5/ETH.c **** 	for(index=0;index<ETH_MAX_SOCKET;++index) {
 2527              		.loc 1 1068 0 is_stmt 0 discriminator 1
 2528 00c4 7B69     		ldr	r3, [r7, #20]
 2529 00c6 072B     		cmp	r3, #7
 2530 00c8 B1DD     		ble	.L93
1078:.\Generated_Source\PSoC5/ETH.c **** 	}
1079:.\Generated_Source\PSoC5/ETH.c **** 	/* Set device gateway address */
1080:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetGatewayAddress(gateway);
 2531              		.loc 1 1080 0 is_stmt 1
 2532 00ca 3868     		ldr	r0, [r7, #0]
 2533 00cc FFF7FEFF 		bl	ETH_SetGatewayAddress
1081:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSubnetMask( subnet );
 2534              		.loc 1 1081 0
 2535 00d0 7868     		ldr	r0, [r7, #4]
 2536 00d2 FFF7FEFF 		bl	ETH_SetSubnetMask
1082:.\Generated_Source\PSoC5/ETH.c **** 	/* Store the subnet mask for later use, for ERRATA fix */
1083:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SubnetMask = subnet;
 2537              		.loc 1 1083 0
 2538 00d6 40F20003 		movw	r3, #:lower16:ETH_SubnetMask
 2539 00da C0F20003 		movt	r3, #:upper16:ETH_SubnetMask
 2540 00de 7A68     		ldr	r2, [r7, #4]
 2541 00e0 1A60     		str	r2, [r3, #0]
1084:.\Generated_Source\PSoC5/ETH.c **** 	/* store the device mac */
1085:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSourceMAC( mac );
 2542              		.loc 1 1085 0
 2543 00e2 F868     		ldr	r0, [r7, #12]
 2544 00e4 FFF7FEFF 		bl	ETH_SetSourceMAC
1086:.\Generated_Source\PSoC5/ETH.c **** 	/* store the IP address */
1087:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSourceIP( ip );
 2545              		.loc 1 1087 0
 2546 00e8 B868     		ldr	r0, [r7, #8]
 2547 00ea FFF7FEFF 		bl	ETH_SetSourceIP
1088:.\Generated_Source\PSoC5/ETH.c **** 	/* clear pending interrupts */
1089:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetIR(0xFF);
 2548              		.loc 1 1089 0
 2549 00ee 4FF0FF00 		mov	r0, #255
 2550 00f2 FFF7FEFF 		bl	ETH_SetIR
1090:.\Generated_Source\PSoC5/ETH.c **** 	/* clear the subnet mask register (W5100 Errata Fix) */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 65


1091:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSubnetMask( 0 );
 2551              		.loc 1 1091 0
 2552 00f6 4FF00000 		mov	r0, #0
 2553 00fa FFF7FEFF 		bl	ETH_SetSubnetMask
1092:.\Generated_Source\PSoC5/ETH.c **** }
 2554              		.loc 1 1092 0
 2555 00fe 07F11807 		add	r7, r7, #24
 2556 0102 BD46     		mov	sp, r7
 2557 0104 80BD     		pop	{r7, pc}
 2558              		.cfi_endproc
 2559              	.LFE44:
 2560              		.size	ETH_Init, .-ETH_Init
 2561 0106 00BF     		.section	.rodata
 2562              		.align	2
 2563              	.LC0:
 2564 0020 30302D64 		.ascii	"00-de-ad-be-ef-00\000"
 2564      652D6164 
 2564      2D62652D 
 2564      65662D30 
 2564      3000
 2565 0032 0000     		.align	2
 2566              	.LC1:
 2567 0034 3139322E 		.ascii	"192.168.0.101\000"
 2567      3136382E 
 2567      302E3130 
 2567      3100
 2568 0042 0000     		.align	2
 2569              	.LC2:
 2570 0044 3235352E 		.ascii	"255.255.255.0\000"
 2570      3235352E 
 2570      3235352E 
 2570      3000
 2571 0052 0000     		.align	2
 2572              	.LC3:
 2573 0054 3139322E 		.ascii	"192.168.0.1\000"
 2573      3136382E 
 2573      302E3100 
 2574              		.section	.text.ETH_Start,"ax",%progbits
 2575              		.align	2
 2576              		.global	ETH_Start
 2577              		.thumb
 2578              		.thumb_func
 2579              		.type	ETH_Start, %function
 2580              	ETH_Start:
 2581              	.LFB45:
1093:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1094:.\Generated_Source\PSoC5/ETH.c **** void
1095:.\Generated_Source\PSoC5/ETH.c **** ETH_Start( void )
1096:.\Generated_Source\PSoC5/ETH.c **** {
 2582              		.loc 1 1096 0
 2583              		.cfi_startproc
 2584              		@ args = 0, pretend = 0, frame = 16
 2585              		@ frame_needed = 1, uses_anonymous_args = 0
 2586 0000 80B5     		push	{r7, lr}
 2587              	.LCFI133:
 2588              		.cfi_def_cfa_offset 8
 2589              		.cfi_offset 7, -8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 66


 2590              		.cfi_offset 14, -4
 2591 0002 84B0     		sub	sp, sp, #16
 2592              	.LCFI134:
 2593              		.cfi_def_cfa_offset 24
 2594 0004 00AF     		add	r7, sp, #0
 2595              	.LCFI135:
 2596              		.cfi_def_cfa_register 7
1097:.\Generated_Source\PSoC5/ETH.c **** 	uint32 ip;
1098:.\Generated_Source\PSoC5/ETH.c **** 	uint32 gateway;
1099:.\Generated_Source\PSoC5/ETH.c **** 	uint32 sub;
1100:.\Generated_Source\PSoC5/ETH.c **** 	
1101:.\Generated_Source\PSoC5/ETH.c **** 	/* Check for SPI initialization */
1102:.\Generated_Source\PSoC5/ETH.c **** 	if (SPI_initVar == 0) {
 2597              		.loc 1 1102 0
 2598 0006 40F20003 		movw	r3, #:lower16:SPI_initVar
 2599 000a C0F20003 		movt	r3, #:upper16:SPI_initVar
 2600 000e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2601 0010 002B     		cmp	r3, #0
 2602 0012 01D1     		bne	.L95
1103:.\Generated_Source\PSoC5/ETH.c **** 		/*
1104:.\Generated_Source\PSoC5/ETH.c **** 		 * the hardware has not yet been initialized.  Before anything can be
1105:.\Generated_Source\PSoC5/ETH.c **** 		 * initialized within the driver, the external hardware must be started
1106:.\Generated_Source\PSoC5/ETH.c **** 		 */
1107:.\Generated_Source\PSoC5/ETH.c **** 		SPI_Start();
 2603              		.loc 1 1107 0
 2604 0014 FFF7FEFF 		bl	SPI_Start
 2605              	.L95:
1108:.\Generated_Source\PSoC5/ETH.c **** 	}
1109:.\Generated_Source\PSoC5/ETH.c **** 		
1110:.\Generated_Source\PSoC5/ETH.c **** 	/* wait for power on PLL Lock */
1111:.\Generated_Source\PSoC5/ETH.c **** 	CyDelay( 10 );
 2606              		.loc 1 1111 0
 2607 0018 4FF00A00 		mov	r0, #10
 2608 001c FFF7FEFF 		bl	CyDelay
1112:.\Generated_Source\PSoC5/ETH.c **** 	/* V1.2 new -- Parse MAC Address string */
1113:.\Generated_Source\PSoC5/ETH.c **** 	if ( ETH_ParseMAC("00-de-ad-be-ef-00", &ETH_MAC[0]) == CYRET_BAD_DATA) {
 2609              		.loc 1 1113 0
 2610 0020 40F20000 		movw	r0, #:lower16:.LC0
 2611 0024 C0F20000 		movt	r0, #:upper16:.LC0
 2612 0028 40F20001 		movw	r1, #:lower16:ETH_MAC
 2613 002c C0F20001 		movt	r1, #:upper16:ETH_MAC
 2614 0030 FFF7FEFF 		bl	ETH_ParseMAC
 2615 0034 0346     		mov	r3, r0
 2616 0036 062B     		cmp	r3, #6
 2617 0038 29D1     		bne	.L96
1114:.\Generated_Source\PSoC5/ETH.c **** 		ETH_MAC[0] = 0;
 2618              		.loc 1 1114 0
 2619 003a 40F20003 		movw	r3, #:lower16:ETH_MAC
 2620 003e C0F20003 		movt	r3, #:upper16:ETH_MAC
 2621 0042 4FF00002 		mov	r2, #0
 2622 0046 1A70     		strb	r2, [r3, #0]
1115:.\Generated_Source\PSoC5/ETH.c **** 		ETH_MAC[1] = 0xDE;
 2623              		.loc 1 1115 0
 2624 0048 40F20003 		movw	r3, #:lower16:ETH_MAC
 2625 004c C0F20003 		movt	r3, #:upper16:ETH_MAC
 2626 0050 4FF0DE02 		mov	r2, #222
 2627 0054 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 67


1116:.\Generated_Source\PSoC5/ETH.c **** 		ETH_MAC[2] = 0xAD;
 2628              		.loc 1 1116 0
 2629 0056 40F20003 		movw	r3, #:lower16:ETH_MAC
 2630 005a C0F20003 		movt	r3, #:upper16:ETH_MAC
 2631 005e 4FF0AD02 		mov	r2, #173
 2632 0062 9A70     		strb	r2, [r3, #2]
1117:.\Generated_Source\PSoC5/ETH.c **** 		ETH_MAC[3] = 0xC0;
 2633              		.loc 1 1117 0
 2634 0064 40F20003 		movw	r3, #:lower16:ETH_MAC
 2635 0068 C0F20003 		movt	r3, #:upper16:ETH_MAC
 2636 006c 4FF0C002 		mov	r2, #192
 2637 0070 DA70     		strb	r2, [r3, #3]
1118:.\Generated_Source\PSoC5/ETH.c **** 		ETH_MAC[4] = 0xDE;
 2638              		.loc 1 1118 0
 2639 0072 40F20003 		movw	r3, #:lower16:ETH_MAC
 2640 0076 C0F20003 		movt	r3, #:upper16:ETH_MAC
 2641 007a 4FF0DE02 		mov	r2, #222
 2642 007e 1A71     		strb	r2, [r3, #4]
1119:.\Generated_Source\PSoC5/ETH.c **** 		ETH_MAC[5] = 0;
 2643              		.loc 1 1119 0
 2644 0080 40F20003 		movw	r3, #:lower16:ETH_MAC
 2645 0084 C0F20003 		movt	r3, #:upper16:ETH_MAC
 2646 0088 4FF00002 		mov	r2, #0
 2647 008c 5A71     		strb	r2, [r3, #5]
 2648              	.L96:
1120:.\Generated_Source\PSoC5/ETH.c **** 	}
1121:.\Generated_Source\PSoC5/ETH.c **** 	/* END of V1.2 Update ------ */
1122:.\Generated_Source\PSoC5/ETH.c **** 	ip = ETH_ParseIP("192.168.0.101");
 2649              		.loc 1 1122 0
 2650 008e 40F20000 		movw	r0, #:lower16:.LC1
 2651 0092 C0F20000 		movt	r0, #:upper16:.LC1
 2652 0096 FFF7FEFF 		bl	ETH_ParseIP
 2653 009a F860     		str	r0, [r7, #12]
1123:.\Generated_Source\PSoC5/ETH.c **** 	sub = ETH_ParseIP("255.255.255.0");
 2654              		.loc 1 1123 0
 2655 009c 40F20000 		movw	r0, #:lower16:.LC2
 2656 00a0 C0F20000 		movt	r0, #:upper16:.LC2
 2657 00a4 FFF7FEFF 		bl	ETH_ParseIP
 2658 00a8 B860     		str	r0, [r7, #8]
1124:.\Generated_Source\PSoC5/ETH.c **** 	gateway = ETH_ParseIP("192.168.0.1");
 2659              		.loc 1 1124 0
 2660 00aa 40F20000 		movw	r0, #:lower16:.LC3
 2661 00ae C0F20000 		movt	r0, #:upper16:.LC3
 2662 00b2 FFF7FEFF 		bl	ETH_ParseIP
 2663 00b6 7860     		str	r0, [r7, #4]
1125:.\Generated_Source\PSoC5/ETH.c **** 	/* Initialize the device with the default data */
1126:.\Generated_Source\PSoC5/ETH.c **** 	ETH_Init( &ETH_MAC[0], ip, sub, gateway  );
 2664              		.loc 1 1126 0
 2665 00b8 40F20000 		movw	r0, #:lower16:ETH_MAC
 2666 00bc C0F20000 		movt	r0, #:upper16:ETH_MAC
 2667 00c0 F968     		ldr	r1, [r7, #12]
 2668 00c2 BA68     		ldr	r2, [r7, #8]
 2669 00c4 7B68     		ldr	r3, [r7, #4]
 2670 00c6 FFF7FEFF 		bl	ETH_Init
1127:.\Generated_Source\PSoC5/ETH.c **** }
 2671              		.loc 1 1127 0
 2672 00ca 07F11007 		add	r7, r7, #16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 68


 2673 00ce BD46     		mov	sp, r7
 2674 00d0 80BD     		pop	{r7, pc}
 2675              		.cfi_endproc
 2676              	.LFE45:
 2677              		.size	ETH_Start, .-ETH_Start
 2678 00d2 00BF     		.section	.text.ETH_ParseIP,"ax",%progbits
 2679              		.align	2
 2680              		.global	ETH_ParseIP
 2681              		.thumb
 2682              		.thumb_func
 2683              		.type	ETH_ParseIP, %function
 2684              	ETH_ParseIP:
 2685              	.LFB46:
1128:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1129:.\Generated_Source\PSoC5/ETH.c **** uint32
1130:.\Generated_Source\PSoC5/ETH.c **** ETH_ParseIP( const char* ipString )
1131:.\Generated_Source\PSoC5/ETH.c **** {
 2686              		.loc 1 1131 0
 2687              		.cfi_startproc
 2688              		@ args = 0, pretend = 0, frame = 32
 2689              		@ frame_needed = 1, uses_anonymous_args = 0
 2690 0000 90B5     		push	{r4, r7, lr}
 2691              	.LCFI136:
 2692              		.cfi_def_cfa_offset 12
 2693              		.cfi_offset 4, -12
 2694              		.cfi_offset 7, -8
 2695              		.cfi_offset 14, -4
 2696 0002 89B0     		sub	sp, sp, #36
 2697              	.LCFI137:
 2698              		.cfi_def_cfa_offset 48
 2699 0004 00AF     		add	r7, sp, #0
 2700              	.LCFI138:
 2701              		.cfi_def_cfa_register 7
 2702 0006 7860     		str	r0, [r7, #4]
1132:.\Generated_Source\PSoC5/ETH.c **** 	/*
1133:.\Generated_Source\PSoC5/ETH.c **** 	 * Parse a human readable string in to a IP address usable by the hardare
1134:.\Generated_Source\PSoC5/ETH.c **** 	 */
1135:.\Generated_Source\PSoC5/ETH.c **** 	int index;
1136:.\Generated_Source\PSoC5/ETH.c **** 	char digit[5];
1137:.\Generated_Source\PSoC5/ETH.c **** 	uint8 ip[4];
1138:.\Generated_Source\PSoC5/ETH.c **** 	int counter;
1139:.\Generated_Source\PSoC5/ETH.c **** 	int dindex;
1140:.\Generated_Source\PSoC5/ETH.c **** 	
1141:.\Generated_Source\PSoC5/ETH.c **** 	index = 0;
 2703              		.loc 1 1141 0
 2704 0008 4FF00003 		mov	r3, #0
 2705 000c FB61     		str	r3, [r7, #28]
1142:.\Generated_Source\PSoC5/ETH.c **** 	dindex = 0;
 2706              		.loc 1 1142 0
 2707 000e 4FF00003 		mov	r3, #0
 2708 0012 7B61     		str	r3, [r7, #20]
1143:.\Generated_Source\PSoC5/ETH.c **** 	counter = 0;
 2709              		.loc 1 1143 0
 2710 0014 4FF00003 		mov	r3, #0
 2711 0018 BB61     		str	r3, [r7, #24]
1144:.\Generated_Source\PSoC5/ETH.c **** 	
1145:.\Generated_Source\PSoC5/ETH.c **** 	while ( (counter < 4) && ((unsigned int)index < strlen(ipString) ) ) {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 69


 2712              		.loc 1 1145 0
 2713 001a 6FE0     		b	.L98
 2714              	.L107:
1146:.\Generated_Source\PSoC5/ETH.c **** 		if ( (ipString[index] >= '0' ) && (ipString[index] <= '9') ) {
 2715              		.loc 1 1146 0
 2716 001c FB69     		ldr	r3, [r7, #28]
 2717 001e 7A68     		ldr	r2, [r7, #4]
 2718 0020 D318     		adds	r3, r2, r3
 2719 0022 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2720 0024 2F2B     		cmp	r3, #47
 2721 0026 18D9     		bls	.L99
 2722              		.loc 1 1146 0 is_stmt 0 discriminator 1
 2723 0028 FB69     		ldr	r3, [r7, #28]
 2724 002a 7A68     		ldr	r2, [r7, #4]
 2725 002c D318     		adds	r3, r2, r3
 2726 002e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2727 0030 392B     		cmp	r3, #57
 2728 0032 12D8     		bhi	.L99
1147:.\Generated_Source\PSoC5/ETH.c **** 			if (dindex > 3) return( 0xFFFFFFFF );
 2729              		.loc 1 1147 0 is_stmt 1
 2730 0034 7B69     		ldr	r3, [r7, #20]
 2731 0036 032B     		cmp	r3, #3
 2732 0038 02DD     		ble	.L100
 2733              		.loc 1 1147 0 is_stmt 0 discriminator 1
 2734 003a 4FF0FF33 		mov	r3, #-1
 2735 003e 81E0     		b	.L109
 2736              	.L100:
1148:.\Generated_Source\PSoC5/ETH.c **** 			digit[dindex++] = ipString[index];
 2737              		.loc 1 1148 0 is_stmt 1
 2738 0040 FB69     		ldr	r3, [r7, #28]
 2739 0042 7A68     		ldr	r2, [r7, #4]
 2740 0044 D318     		adds	r3, r2, r3
 2741 0046 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2742 0048 07F10C01 		add	r1, r7, #12
 2743 004c 7B69     		ldr	r3, [r7, #20]
 2744 004e CB18     		adds	r3, r1, r3
 2745 0050 1A70     		strb	r2, [r3, #0]
 2746 0052 7B69     		ldr	r3, [r7, #20]
 2747 0054 03F10103 		add	r3, r3, #1
 2748 0058 7B61     		str	r3, [r7, #20]
 2749              	.L99:
1149:.\Generated_Source\PSoC5/ETH.c **** 			
1150:.\Generated_Source\PSoC5/ETH.c **** 		}
1151:.\Generated_Source\PSoC5/ETH.c **** 		
1152:.\Generated_Source\PSoC5/ETH.c **** 		if ( (ipString[index] == '.') || (ipString[index+1] == 0) ) {
 2750              		.loc 1 1152 0
 2751 005a FB69     		ldr	r3, [r7, #28]
 2752 005c 7A68     		ldr	r2, [r7, #4]
 2753 005e D318     		adds	r3, r2, r3
 2754 0060 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2755 0062 2E2B     		cmp	r3, #46
 2756 0064 07D0     		beq	.L102
 2757              		.loc 1 1152 0 is_stmt 0 discriminator 1
 2758 0066 FB69     		ldr	r3, [r7, #28]
 2759 0068 03F10103 		add	r3, r3, #1
 2760 006c 7A68     		ldr	r2, [r7, #4]
 2761 006e D318     		adds	r3, r2, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 70


 2762 0070 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2763 0072 002B     		cmp	r3, #0
 2764 0074 3ED1     		bne	.L103
 2765              	.L102:
1153:.\Generated_Source\PSoC5/ETH.c **** 			digit[dindex] = 0;
 2766              		.loc 1 1153 0 is_stmt 1
 2767 0076 07F10C02 		add	r2, r7, #12
 2768 007a 7B69     		ldr	r3, [r7, #20]
 2769 007c D318     		adds	r3, r2, r3
 2770 007e 4FF00002 		mov	r2, #0
 2771 0082 1A70     		strb	r2, [r3, #0]
1154:.\Generated_Source\PSoC5/ETH.c **** 			dindex = 0;
 2772              		.loc 1 1154 0
 2773 0084 4FF00003 		mov	r3, #0
 2774 0088 7B61     		str	r3, [r7, #20]
1155:.\Generated_Source\PSoC5/ETH.c **** 			/* convert the value and store in the buffer */
1156:.\Generated_Source\PSoC5/ETH.c **** 			ip[counter] = 0;
 2775              		.loc 1 1156 0
 2776 008a 07F10802 		add	r2, r7, #8
 2777 008e BB69     		ldr	r3, [r7, #24]
 2778 0090 D318     		adds	r3, r2, r3
 2779 0092 4FF00002 		mov	r2, #0
 2780 0096 1A70     		strb	r2, [r3, #0]
1157:.\Generated_Source\PSoC5/ETH.c **** 			while (digit[dindex] != 0) {
 2781              		.loc 1 1157 0
 2782 0098 1EE0     		b	.L104
 2783              	.L105:
1158:.\Generated_Source\PSoC5/ETH.c **** 				ip[counter] = (ip[counter]*10) + (digit[dindex]-'0');
 2784              		.loc 1 1158 0
 2785 009a 07F10802 		add	r2, r7, #8
 2786 009e BB69     		ldr	r3, [r7, #24]
 2787 00a0 D318     		adds	r3, r2, r3
 2788 00a2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2789 00a4 1A46     		mov	r2, r3
 2790 00a6 4FEA8202 		lsl	r2, r2, #2
 2791 00aa D318     		adds	r3, r2, r3
 2792 00ac 4FEA4303 		lsl	r3, r3, #1
 2793 00b0 DAB2     		uxtb	r2, r3
 2794 00b2 07F10C01 		add	r1, r7, #12
 2795 00b6 7B69     		ldr	r3, [r7, #20]
 2796 00b8 CB18     		adds	r3, r1, r3
 2797 00ba 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2798 00bc D318     		adds	r3, r2, r3
 2799 00be DBB2     		uxtb	r3, r3
 2800 00c0 A3F13003 		sub	r3, r3, #48
 2801 00c4 DAB2     		uxtb	r2, r3
 2802 00c6 07F10801 		add	r1, r7, #8
 2803 00ca BB69     		ldr	r3, [r7, #24]
 2804 00cc CB18     		adds	r3, r1, r3
 2805 00ce 1A70     		strb	r2, [r3, #0]
1159:.\Generated_Source\PSoC5/ETH.c **** 				++dindex;
 2806              		.loc 1 1159 0
 2807 00d0 7B69     		ldr	r3, [r7, #20]
 2808 00d2 03F10103 		add	r3, r3, #1
 2809 00d6 7B61     		str	r3, [r7, #20]
 2810              	.L104:
1157:.\Generated_Source\PSoC5/ETH.c **** 			while (digit[dindex] != 0) {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 71


 2811              		.loc 1 1157 0 discriminator 1
 2812 00d8 07F10C02 		add	r2, r7, #12
 2813 00dc 7B69     		ldr	r3, [r7, #20]
 2814 00de D318     		adds	r3, r2, r3
 2815 00e0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2816 00e2 002B     		cmp	r3, #0
 2817 00e4 D9D1     		bne	.L105
1160:.\Generated_Source\PSoC5/ETH.c **** 				// ip[counter] = ...
1161:.\Generated_Source\PSoC5/ETH.c **** 			}
1162:.\Generated_Source\PSoC5/ETH.c **** 			/* reset the digit index to start accumulating digits again*/
1163:.\Generated_Source\PSoC5/ETH.c **** 			dindex = 0;
 2818              		.loc 1 1163 0
 2819 00e6 4FF00003 		mov	r3, #0
 2820 00ea 7B61     		str	r3, [r7, #20]
1164:.\Generated_Source\PSoC5/ETH.c **** 			/* move to the next address byte */
1165:.\Generated_Source\PSoC5/ETH.c **** 			++counter;
 2821              		.loc 1 1165 0
 2822 00ec BB69     		ldr	r3, [r7, #24]
 2823 00ee 03F10103 		add	r3, r3, #1
 2824 00f2 BB61     		str	r3, [r7, #24]
 2825              	.L103:
1166:.\Generated_Source\PSoC5/ETH.c **** 		}
1167:.\Generated_Source\PSoC5/ETH.c **** 		++index;
 2826              		.loc 1 1167 0
 2827 00f4 FB69     		ldr	r3, [r7, #28]
 2828 00f6 03F10103 		add	r3, r3, #1
 2829 00fa FB61     		str	r3, [r7, #28]
 2830              	.L98:
1145:.\Generated_Source\PSoC5/ETH.c **** 	while ( (counter < 4) && ((unsigned int)index < strlen(ipString) ) ) {
 2831              		.loc 1 1145 0 discriminator 1
 2832 00fc BB69     		ldr	r3, [r7, #24]
 2833 00fe 032B     		cmp	r3, #3
 2834 0100 06DC     		bgt	.L106
1145:.\Generated_Source\PSoC5/ETH.c **** 	while ( (counter < 4) && ((unsigned int)index < strlen(ipString) ) ) {
 2835              		.loc 1 1145 0 is_stmt 0 discriminator 2
 2836 0102 FC69     		ldr	r4, [r7, #28]
 2837 0104 7868     		ldr	r0, [r7, #4]
 2838 0106 FFF7FEFF 		bl	strlen
 2839 010a 0346     		mov	r3, r0
 2840 010c 9C42     		cmp	r4, r3
 2841 010e 85D3     		bcc	.L107
 2842              	.L106:
1168:.\Generated_Source\PSoC5/ETH.c **** 	}
1169:.\Generated_Source\PSoC5/ETH.c **** 	
1170:.\Generated_Source\PSoC5/ETH.c **** 	if (counter != 4) {
 2843              		.loc 1 1170 0 is_stmt 1
 2844 0110 BB69     		ldr	r3, [r7, #24]
 2845 0112 042B     		cmp	r3, #4
 2846 0114 02D0     		beq	.L108
1171:.\Generated_Source\PSoC5/ETH.c **** 		return( 0xFFFFFFFF );
 2847              		.loc 1 1171 0
 2848 0116 4FF0FF33 		mov	r3, #-1
 2849 011a 13E0     		b	.L109
 2850              	.L108:
1172:.\Generated_Source\PSoC5/ETH.c **** 	}
1173:.\Generated_Source\PSoC5/ETH.c **** 	else {
1174:.\Generated_Source\PSoC5/ETH.c **** 		return( ETH_IPADDRESS(ip[0], ip[1], ip[2], ip[3]) );
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 72


 2851              		.loc 1 1174 0
 2852 011c 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 2853 011e 1A46     		mov	r2, r3
 2854 0120 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 2855 0122 4FEA0323 		lsl	r3, r3, #8
 2856 0126 4FEA0343 		lsl	r3, r3, #16
 2857 012a 4FEA1343 		lsr	r3, r3, #16
 2858 012e D218     		adds	r2, r2, r3
 2859 0130 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 2860 0132 4FEA0343 		lsl	r3, r3, #16
 2861 0136 03F47F03 		and	r3, r3, #16711680
 2862 013a D218     		adds	r2, r2, r3
 2863 013c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2864 013e 4FEA0363 		lsl	r3, r3, #24
 2865 0142 D318     		adds	r3, r2, r3
 2866              	.L109:
1175:.\Generated_Source\PSoC5/ETH.c **** 	}
1176:.\Generated_Source\PSoC5/ETH.c **** }
 2867              		.loc 1 1176 0
 2868 0144 1846     		mov	r0, r3
 2869 0146 07F12407 		add	r7, r7, #36
 2870 014a BD46     		mov	sp, r7
 2871 014c 90BD     		pop	{r4, r7, pc}
 2872              		.cfi_endproc
 2873              	.LFE46:
 2874              		.size	ETH_ParseIP, .-ETH_ParseIP
 2875 014e 00BF     		.section	.text.ETH_ParseMAC,"ax",%progbits
 2876              		.align	2
 2877              		.global	ETH_ParseMAC
 2878              		.thumb
 2879              		.thumb_func
 2880              		.type	ETH_ParseMAC, %function
 2881              	ETH_ParseMAC:
 2882              	.LFB47:
1177:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1178:.\Generated_Source\PSoC5/ETH.c **** /**
1179:.\Generated_Source\PSoC5/ETH.c ****  * /brief Parse a MAC Address string in to a 6-byte mac address
1180:.\Generated_Source\PSoC5/ETH.c ****  * /param *macString Pointer to the ASCII-Z String containing the MAC address
1181:.\Generated_Source\PSoC5/ETH.c ****  * /param *mac Pointer to the 6-byte array to hold the output mac addres
1182:.\Generated_Source\PSoC5/ETH.c ****  */
1183:.\Generated_Source\PSoC5/ETH.c **** cystatus ETH_ParseMAC(const char *macString, uint8 *mac)
1184:.\Generated_Source\PSoC5/ETH.c **** {
 2883              		.loc 1 1184 0
 2884              		.cfi_startproc
 2885              		@ args = 0, pretend = 0, frame = 24
 2886              		@ frame_needed = 1, uses_anonymous_args = 0
 2887              		@ link register save eliminated.
 2888 0000 80B4     		push	{r7}
 2889              	.LCFI139:
 2890              		.cfi_def_cfa_offset 4
 2891              		.cfi_offset 7, -4
 2892 0002 87B0     		sub	sp, sp, #28
 2893              	.LCFI140:
 2894              		.cfi_def_cfa_offset 32
 2895 0004 00AF     		add	r7, sp, #0
 2896              	.LCFI141:
 2897              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 73


 2898 0006 7860     		str	r0, [r7, #4]
 2899 0008 3960     		str	r1, [r7, #0]
1185:.\Generated_Source\PSoC5/ETH.c **** 	/* 
1186:.\Generated_Source\PSoC5/ETH.c **** 	 * a mac address is specified as a string of 6 hex bytes with
1187:.\Generated_Source\PSoC5/ETH.c **** 	 * dashes ('-') seperating the bytes.  An invalidly formed
1188:.\Generated_Source\PSoC5/ETH.c **** 	 * address will only process the values up the error and return BAD_DATA
1189:.\Generated_Source\PSoC5/ETH.c **** 	 * otherwise, SUCESS is returned.
1190:.\Generated_Source\PSoC5/ETH.c **** 	 */
1191:.\Generated_Source\PSoC5/ETH.c **** 	int digit;
1192:.\Generated_Source\PSoC5/ETH.c **** 	int index;
1193:.\Generated_Source\PSoC5/ETH.c **** 	cystatus result;
1194:.\Generated_Source\PSoC5/ETH.c **** 	
1195:.\Generated_Source\PSoC5/ETH.c **** 	result = CYRET_SUCCESS;
 2900              		.loc 1 1195 0
 2901 000a 4FF00003 		mov	r3, #0
 2902 000e FB60     		str	r3, [r7, #12]
1196:.\Generated_Source\PSoC5/ETH.c **** 	index = 0;
 2903              		.loc 1 1196 0
 2904 0010 4FF00003 		mov	r3, #0
 2905 0014 3B61     		str	r3, [r7, #16]
1197:.\Generated_Source\PSoC5/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 2906              		.loc 1 1197 0
 2907 0016 4FF00003 		mov	r3, #0
 2908 001a 7B61     		str	r3, [r7, #20]
 2909 001c 09E1     		b	.L111
 2910              	.L137:
1198:.\Generated_Source\PSoC5/ETH.c **** 		// process the first nibble
1199:.\Generated_Source\PSoC5/ETH.c **** 		if (ETH_ISXDIGIT(macString[index]) ) {
 2911              		.loc 1 1199 0
 2912 001e 3B69     		ldr	r3, [r7, #16]
 2913 0020 7A68     		ldr	r2, [r7, #4]
 2914 0022 D318     		adds	r3, r2, r3
 2915 0024 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2916 0026 2F2B     		cmp	r3, #47
 2917 0028 05D9     		bls	.L112
 2918              		.loc 1 1199 0 is_stmt 0 discriminator 1
 2919 002a 3B69     		ldr	r3, [r7, #16]
 2920 002c 7A68     		ldr	r2, [r7, #4]
 2921 002e D318     		adds	r3, r2, r3
 2922 0030 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2923 0032 392B     		cmp	r3, #57
 2924 0034 19D9     		bls	.L113
 2925              	.L112:
 2926              		.loc 1 1199 0 discriminator 2
 2927 0036 3B69     		ldr	r3, [r7, #16]
 2928 0038 7A68     		ldr	r2, [r7, #4]
 2929 003a D318     		adds	r3, r2, r3
 2930 003c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2931 003e 602B     		cmp	r3, #96
 2932 0040 05D9     		bls	.L114
 2933              		.loc 1 1199 0 discriminator 1
 2934 0042 3B69     		ldr	r3, [r7, #16]
 2935 0044 7A68     		ldr	r2, [r7, #4]
 2936 0046 D318     		adds	r3, r2, r3
 2937 0048 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2938 004a 662B     		cmp	r3, #102
 2939 004c 0DD9     		bls	.L113
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 74


 2940              	.L114:
 2941              		.loc 1 1199 0 discriminator 2
 2942 004e 3B69     		ldr	r3, [r7, #16]
 2943 0050 7A68     		ldr	r2, [r7, #4]
 2944 0052 D318     		adds	r3, r2, r3
 2945 0054 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2946 0056 402B     		cmp	r3, #64
 2947 0058 40F2E480 		bls	.L115
 2948              		.loc 1 1199 0 discriminator 3
 2949 005c 3B69     		ldr	r3, [r7, #16]
 2950 005e 7A68     		ldr	r2, [r7, #4]
 2951 0060 D318     		adds	r3, r2, r3
 2952 0062 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2953 0064 462B     		cmp	r3, #70
 2954 0066 00F2DD80 		bhi	.L115
 2955              	.L113:
1200:.\Generated_Source\PSoC5/ETH.c **** 			mac[digit] = ETH_HEX2BIN(macString[index]);
 2956              		.loc 1 1200 0 is_stmt 1
 2957 006a 7B69     		ldr	r3, [r7, #20]
 2958 006c 3A68     		ldr	r2, [r7, #0]
 2959 006e D218     		adds	r2, r2, r3
 2960 0070 3B69     		ldr	r3, [r7, #16]
 2961 0072 7968     		ldr	r1, [r7, #4]
 2962 0074 CB18     		adds	r3, r1, r3
 2963 0076 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2964 0078 2F2B     		cmp	r3, #47
 2965 007a 0DD9     		bls	.L116
 2966              		.loc 1 1200 0 is_stmt 0 discriminator 1
 2967 007c 3B69     		ldr	r3, [r7, #16]
 2968 007e 7968     		ldr	r1, [r7, #4]
 2969 0080 CB18     		adds	r3, r1, r3
 2970 0082 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2971 0084 392B     		cmp	r3, #57
 2972 0086 07D8     		bhi	.L116
 2973 0088 3B69     		ldr	r3, [r7, #16]
 2974 008a 7968     		ldr	r1, [r7, #4]
 2975 008c CB18     		adds	r3, r1, r3
 2976 008e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2977 0090 A3F13003 		sub	r3, r3, #48
 2978 0094 DBB2     		uxtb	r3, r3
 2979 0096 29E0     		b	.L117
 2980              	.L116:
 2981              		.loc 1 1200 0 discriminator 2
 2982 0098 3B69     		ldr	r3, [r7, #16]
 2983 009a 7968     		ldr	r1, [r7, #4]
 2984 009c CB18     		adds	r3, r1, r3
 2985 009e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2986 00a0 602B     		cmp	r3, #96
 2987 00a2 0DD9     		bls	.L118
 2988              		.loc 1 1200 0 discriminator 4
 2989 00a4 3B69     		ldr	r3, [r7, #16]
 2990 00a6 7968     		ldr	r1, [r7, #4]
 2991 00a8 CB18     		adds	r3, r1, r3
 2992 00aa 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2993 00ac 662B     		cmp	r3, #102
 2994 00ae 07D8     		bhi	.L118
 2995              		.loc 1 1200 0 discriminator 2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 75


 2996 00b0 3B69     		ldr	r3, [r7, #16]
 2997 00b2 7968     		ldr	r1, [r7, #4]
 2998 00b4 CB18     		adds	r3, r1, r3
 2999 00b6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3000 00b8 A3F15703 		sub	r3, r3, #87
 3001 00bc DBB2     		uxtb	r3, r3
 3002 00be 15E0     		b	.L119
 3003              	.L118:
 3004              		.loc 1 1200 0 discriminator 5
 3005 00c0 3B69     		ldr	r3, [r7, #16]
 3006 00c2 7968     		ldr	r1, [r7, #4]
 3007 00c4 CB18     		adds	r3, r1, r3
 3008 00c6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3009 00c8 402B     		cmp	r3, #64
 3010 00ca 0DD9     		bls	.L120
 3011              		.loc 1 1200 0 discriminator 7
 3012 00cc 3B69     		ldr	r3, [r7, #16]
 3013 00ce 7968     		ldr	r1, [r7, #4]
 3014 00d0 CB18     		adds	r3, r1, r3
 3015 00d2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3016 00d4 462B     		cmp	r3, #70
 3017 00d6 07D8     		bhi	.L120
 3018              		.loc 1 1200 0 discriminator 3
 3019 00d8 3B69     		ldr	r3, [r7, #16]
 3020 00da 7968     		ldr	r1, [r7, #4]
 3021 00dc CB18     		adds	r3, r1, r3
 3022 00de 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3023 00e0 A3F13703 		sub	r3, r3, #55
 3024 00e4 DBB2     		uxtb	r3, r3
 3025 00e6 01E0     		b	.L121
 3026              	.L120:
 3027              		.loc 1 1200 0 discriminator 8
 3028 00e8 4FF00003 		mov	r3, #0
 3029              	.L121:
 3030              	.L119:
 3031              	.L117:
 3032              		.loc 1 1200 0 discriminator 3
 3033 00ec 1370     		strb	r3, [r2, #0]
1201:.\Generated_Source\PSoC5/ETH.c **** 			++index;
 3034              		.loc 1 1201 0 is_stmt 1 discriminator 3
 3035 00ee 3B69     		ldr	r3, [r7, #16]
 3036 00f0 03F10103 		add	r3, r3, #1
 3037 00f4 3B61     		str	r3, [r7, #16]
1202:.\Generated_Source\PSoC5/ETH.c **** 			mac[digit] <<= 4;
 3038              		.loc 1 1202 0 discriminator 3
 3039 00f6 7B69     		ldr	r3, [r7, #20]
 3040 00f8 3A68     		ldr	r2, [r7, #0]
 3041 00fa D318     		adds	r3, r2, r3
 3042 00fc 7A69     		ldr	r2, [r7, #20]
 3043 00fe 3968     		ldr	r1, [r7, #0]
 3044 0100 8A18     		adds	r2, r1, r2
 3045 0102 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 3046 0104 4FEA0212 		lsl	r2, r2, #4
 3047 0108 D2B2     		uxtb	r2, r2
 3048 010a 1A70     		strb	r2, [r3, #0]
1203:.\Generated_Source\PSoC5/ETH.c **** 			if (ETH_ISXDIGIT(macString[index])) {
 3049              		.loc 1 1203 0 discriminator 3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 76


 3050 010c 3B69     		ldr	r3, [r7, #16]
 3051 010e 7A68     		ldr	r2, [r7, #4]
 3052 0110 D318     		adds	r3, r2, r3
 3053 0112 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3054 0114 2F2B     		cmp	r3, #47
 3055 0116 05D9     		bls	.L122
 3056              		.loc 1 1203 0 is_stmt 0 discriminator 1
 3057 0118 3B69     		ldr	r3, [r7, #16]
 3058 011a 7A68     		ldr	r2, [r7, #4]
 3059 011c D318     		adds	r3, r2, r3
 3060 011e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3061 0120 392B     		cmp	r3, #57
 3062 0122 17D9     		bls	.L123
 3063              	.L122:
 3064              		.loc 1 1203 0 discriminator 2
 3065 0124 3B69     		ldr	r3, [r7, #16]
 3066 0126 7A68     		ldr	r2, [r7, #4]
 3067 0128 D318     		adds	r3, r2, r3
 3068 012a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3069 012c 602B     		cmp	r3, #96
 3070 012e 05D9     		bls	.L124
 3071              		.loc 1 1203 0 discriminator 1
 3072 0130 3B69     		ldr	r3, [r7, #16]
 3073 0132 7A68     		ldr	r2, [r7, #4]
 3074 0134 D318     		adds	r3, r2, r3
 3075 0136 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3076 0138 662B     		cmp	r3, #102
 3077 013a 0BD9     		bls	.L123
 3078              	.L124:
 3079              		.loc 1 1203 0 discriminator 2
 3080 013c 3B69     		ldr	r3, [r7, #16]
 3081 013e 7A68     		ldr	r2, [r7, #4]
 3082 0140 D318     		adds	r3, r2, r3
 3083 0142 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3084 0144 402B     		cmp	r3, #64
 3085 0146 68D9     		bls	.L125
 3086              		.loc 1 1203 0 discriminator 3
 3087 0148 3B69     		ldr	r3, [r7, #16]
 3088 014a 7A68     		ldr	r2, [r7, #4]
 3089 014c D318     		adds	r3, r2, r3
 3090 014e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3091 0150 462B     		cmp	r3, #70
 3092 0152 62D8     		bhi	.L125
 3093              	.L123:
1204:.\Generated_Source\PSoC5/ETH.c **** 				mac[digit] += ETH_HEX2BIN(macString[index]);
 3094              		.loc 1 1204 0 is_stmt 1
 3095 0154 7B69     		ldr	r3, [r7, #20]
 3096 0156 3A68     		ldr	r2, [r7, #0]
 3097 0158 D218     		adds	r2, r2, r3
 3098 015a 7B69     		ldr	r3, [r7, #20]
 3099 015c 3968     		ldr	r1, [r7, #0]
 3100 015e CB18     		adds	r3, r1, r3
 3101 0160 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 3102 0162 3B69     		ldr	r3, [r7, #16]
 3103 0164 7868     		ldr	r0, [r7, #4]
 3104 0166 C318     		adds	r3, r0, r3
 3105 0168 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 77


 3106 016a 2F2B     		cmp	r3, #47
 3107 016c 0DD9     		bls	.L126
 3108              		.loc 1 1204 0 is_stmt 0 discriminator 1
 3109 016e 3B69     		ldr	r3, [r7, #16]
 3110 0170 7868     		ldr	r0, [r7, #4]
 3111 0172 C318     		adds	r3, r0, r3
 3112 0174 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3113 0176 392B     		cmp	r3, #57
 3114 0178 07D8     		bhi	.L126
 3115 017a 3B69     		ldr	r3, [r7, #16]
 3116 017c 7868     		ldr	r0, [r7, #4]
 3117 017e C318     		adds	r3, r0, r3
 3118 0180 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3119 0182 A3F13003 		sub	r3, r3, #48
 3120 0186 DBB2     		uxtb	r3, r3
 3121 0188 29E0     		b	.L127
 3122              	.L126:
 3123              		.loc 1 1204 0 discriminator 2
 3124 018a 3B69     		ldr	r3, [r7, #16]
 3125 018c 7868     		ldr	r0, [r7, #4]
 3126 018e C318     		adds	r3, r0, r3
 3127 0190 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3128 0192 602B     		cmp	r3, #96
 3129 0194 0DD9     		bls	.L128
 3130              		.loc 1 1204 0 discriminator 4
 3131 0196 3B69     		ldr	r3, [r7, #16]
 3132 0198 7868     		ldr	r0, [r7, #4]
 3133 019a C318     		adds	r3, r0, r3
 3134 019c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3135 019e 662B     		cmp	r3, #102
 3136 01a0 07D8     		bhi	.L128
 3137              		.loc 1 1204 0 discriminator 2
 3138 01a2 3B69     		ldr	r3, [r7, #16]
 3139 01a4 7868     		ldr	r0, [r7, #4]
 3140 01a6 C318     		adds	r3, r0, r3
 3141 01a8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3142 01aa A3F15703 		sub	r3, r3, #87
 3143 01ae DBB2     		uxtb	r3, r3
 3144 01b0 15E0     		b	.L129
 3145              	.L128:
 3146              		.loc 1 1204 0 discriminator 5
 3147 01b2 3B69     		ldr	r3, [r7, #16]
 3148 01b4 7868     		ldr	r0, [r7, #4]
 3149 01b6 C318     		adds	r3, r0, r3
 3150 01b8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3151 01ba 402B     		cmp	r3, #64
 3152 01bc 0DD9     		bls	.L130
 3153              		.loc 1 1204 0 discriminator 7
 3154 01be 3B69     		ldr	r3, [r7, #16]
 3155 01c0 7868     		ldr	r0, [r7, #4]
 3156 01c2 C318     		adds	r3, r0, r3
 3157 01c4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3158 01c6 462B     		cmp	r3, #70
 3159 01c8 07D8     		bhi	.L130
 3160              		.loc 1 1204 0 discriminator 3
 3161 01ca 3B69     		ldr	r3, [r7, #16]
 3162 01cc 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 78


 3163 01ce C318     		adds	r3, r0, r3
 3164 01d0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3165 01d2 A3F13703 		sub	r3, r3, #55
 3166 01d6 DBB2     		uxtb	r3, r3
 3167 01d8 01E0     		b	.L131
 3168              	.L130:
 3169              		.loc 1 1204 0 discriminator 8
 3170 01da 4FF00003 		mov	r3, #0
 3171              	.L131:
 3172              	.L129:
 3173              	.L127:
 3174              		.loc 1 1204 0 discriminator 3
 3175 01de CB18     		adds	r3, r1, r3
 3176 01e0 DBB2     		uxtb	r3, r3
 3177 01e2 1370     		strb	r3, [r2, #0]
1205:.\Generated_Source\PSoC5/ETH.c **** 				++index;
 3178              		.loc 1 1205 0 is_stmt 1 discriminator 3
 3179 01e4 3B69     		ldr	r3, [r7, #16]
 3180 01e6 03F10103 		add	r3, r3, #1
 3181 01ea 3B61     		str	r3, [r7, #16]
1206:.\Generated_Source\PSoC5/ETH.c **** 				/*
1207:.\Generated_Source\PSoC5/ETH.c **** 				 * now for digits other than digit 5 (the last one) look for
1208:.\Generated_Source\PSoC5/ETH.c **** 				 * the dash seperator.  If there is no dash, return bad data
1209:.\Generated_Source\PSoC5/ETH.c **** 				 */
1210:.\Generated_Source\PSoC5/ETH.c **** 				if (digit<5) {
 3182              		.loc 1 1210 0 discriminator 3
 3183 01ec 7B69     		ldr	r3, [r7, #20]
 3184 01ee 042B     		cmp	r3, #4
 3185 01f0 17DC     		bgt	.L134
1211:.\Generated_Source\PSoC5/ETH.c **** 					if( (macString[index]!='-') && (macString[index]!= ':') ){
 3186              		.loc 1 1211 0
 3187 01f2 3B69     		ldr	r3, [r7, #16]
 3188 01f4 7A68     		ldr	r2, [r7, #4]
 3189 01f6 D318     		adds	r3, r2, r3
 3190 01f8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3191 01fa 2D2B     		cmp	r3, #45
 3192 01fc 08D0     		beq	.L133
 3193              		.loc 1 1211 0 is_stmt 0 discriminator 1
 3194 01fe 3B69     		ldr	r3, [r7, #16]
 3195 0200 7A68     		ldr	r2, [r7, #4]
 3196 0202 D318     		adds	r3, r2, r3
 3197 0204 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3198 0206 3A2B     		cmp	r3, #58
 3199 0208 02D0     		beq	.L133
1212:.\Generated_Source\PSoC5/ETH.c **** 						result = CYRET_BAD_DATA;
 3200              		.loc 1 1212 0 is_stmt 1
 3201 020a 4FF00603 		mov	r3, #6
 3202 020e FB60     		str	r3, [r7, #12]
 3203              	.L133:
1213:.\Generated_Source\PSoC5/ETH.c **** 					}
1214:.\Generated_Source\PSoC5/ETH.c **** 					++index; // move conversion pointer to the next value
 3204              		.loc 1 1214 0
 3205 0210 3B69     		ldr	r3, [r7, #16]
 3206 0212 03F10103 		add	r3, r3, #1
 3207 0216 3B61     		str	r3, [r7, #16]
1210:.\Generated_Source\PSoC5/ETH.c **** 				if (digit<5) {
 3208              		.loc 1 1210 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 79


 3209 0218 03E0     		b	.L134
 3210              	.L125:
1215:.\Generated_Source\PSoC5/ETH.c **** 				}
1216:.\Generated_Source\PSoC5/ETH.c **** 			}
1217:.\Generated_Source\PSoC5/ETH.c **** 			else {
1218:.\Generated_Source\PSoC5/ETH.c **** 				result = CYRET_BAD_DATA;
 3211              		.loc 1 1218 0
 3212 021a 4FF00603 		mov	r3, #6
 3213 021e FB60     		str	r3, [r7, #12]
1203:.\Generated_Source\PSoC5/ETH.c **** 			if (ETH_ISXDIGIT(macString[index])) {
 3214              		.loc 1 1203 0
 3215 0220 03E0     		b	.L135
 3216              	.L134:
 3217 0222 02E0     		b	.L135
 3218              	.L115:
1219:.\Generated_Source\PSoC5/ETH.c **** 			}
1220:.\Generated_Source\PSoC5/ETH.c **** 		}
1221:.\Generated_Source\PSoC5/ETH.c **** 		else {
1222:.\Generated_Source\PSoC5/ETH.c **** 			result = CYRET_BAD_DATA;
 3219              		.loc 1 1222 0
 3220 0224 4FF00603 		mov	r3, #6
 3221 0228 FB60     		str	r3, [r7, #12]
 3222              	.L135:
1197:.\Generated_Source\PSoC5/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3223              		.loc 1 1197 0
 3224 022a 7B69     		ldr	r3, [r7, #20]
 3225 022c 03F10103 		add	r3, r3, #1
 3226 0230 7B61     		str	r3, [r7, #20]
 3227              	.L111:
1197:.\Generated_Source\PSoC5/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3228              		.loc 1 1197 0 is_stmt 0 discriminator 1
 3229 0232 7B69     		ldr	r3, [r7, #20]
 3230 0234 052B     		cmp	r3, #5
 3231 0236 09DC     		bgt	.L136
1197:.\Generated_Source\PSoC5/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3232              		.loc 1 1197 0 discriminator 2
 3233 0238 FB68     		ldr	r3, [r7, #12]
 3234 023a 002B     		cmp	r3, #0
 3235 023c 06D1     		bne	.L136
1197:.\Generated_Source\PSoC5/ETH.c **** 	for(digit = 0;(digit<6) && (result == CYRET_SUCCESS)&&(macString[index] != 0);++digit) {
 3236              		.loc 1 1197 0 discriminator 1
 3237 023e 3B69     		ldr	r3, [r7, #16]
 3238 0240 7A68     		ldr	r2, [r7, #4]
 3239 0242 D318     		adds	r3, r2, r3
 3240 0244 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3241 0246 002B     		cmp	r3, #0
 3242 0248 7FF4E9AE 		bne	.L137
 3243              	.L136:
1223:.\Generated_Source\PSoC5/ETH.c **** 		}
1224:.\Generated_Source\PSoC5/ETH.c **** 	}
1225:.\Generated_Source\PSoC5/ETH.c **** 	return( result );
 3244              		.loc 1 1225 0 is_stmt 1
 3245 024c FB68     		ldr	r3, [r7, #12]
1226:.\Generated_Source\PSoC5/ETH.c **** }
 3246              		.loc 1 1226 0
 3247 024e 1846     		mov	r0, r3
 3248 0250 07F11C07 		add	r7, r7, #28
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 80


 3249 0254 BD46     		mov	sp, r7
 3250 0256 80BC     		pop	{r7}
 3251 0258 7047     		bx	lr
 3252              		.cfi_endproc
 3253              	.LFE47:
 3254              		.size	ETH_ParseMAC, .-ETH_ParseMAC
 3255 025a 00BF     		.section	.text.ETH_StringMAC,"ax",%progbits
 3256              		.align	2
 3257              		.global	ETH_StringMAC
 3258              		.thumb
 3259              		.thumb_func
 3260              		.type	ETH_StringMAC, %function
 3261              	ETH_StringMAC:
 3262              	.LFB48:
1227:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1228:.\Generated_Source\PSoC5/ETH.c **** void ETH_StringMAC(uint8 *mac, char *macString)
1229:.\Generated_Source\PSoC5/ETH.c **** {
 3263              		.loc 1 1229 0
 3264              		.cfi_startproc
 3265              		@ args = 0, pretend = 0, frame = 16
 3266              		@ frame_needed = 1, uses_anonymous_args = 0
 3267              		@ link register save eliminated.
 3268 0000 80B4     		push	{r7}
 3269              	.LCFI142:
 3270              		.cfi_def_cfa_offset 4
 3271              		.cfi_offset 7, -4
 3272 0002 85B0     		sub	sp, sp, #20
 3273              	.LCFI143:
 3274              		.cfi_def_cfa_offset 24
 3275 0004 00AF     		add	r7, sp, #0
 3276              	.LCFI144:
 3277              		.cfi_def_cfa_register 7
 3278 0006 7860     		str	r0, [r7, #4]
 3279 0008 3960     		str	r1, [r7, #0]
1230:.\Generated_Source\PSoC5/ETH.c **** 	int digit;
1231:.\Generated_Source\PSoC5/ETH.c **** 	int index;
1232:.\Generated_Source\PSoC5/ETH.c **** 	
1233:.\Generated_Source\PSoC5/ETH.c **** 	/*
1234:.\Generated_Source\PSoC5/ETH.c **** 	 * Convert the MAC address specified in to a string
1235:.\Generated_Source\PSoC5/ETH.c **** 	 */
1236:.\Generated_Source\PSoC5/ETH.c **** 	index = 0;
 3280              		.loc 1 1236 0
 3281 000a 4FF00003 		mov	r3, #0
 3282 000e BB60     		str	r3, [r7, #8]
1237:.\Generated_Source\PSoC5/ETH.c **** 	for(digit=0;digit<6;++digit) {
 3283              		.loc 1 1237 0
 3284 0010 4FF00003 		mov	r3, #0
 3285 0014 FB60     		str	r3, [r7, #12]
 3286 0016 64E0     		b	.L140
 3287              	.L147:
1238:.\Generated_Source\PSoC5/ETH.c **** 		// convert the first nibble
1239:.\Generated_Source\PSoC5/ETH.c **** 		macString[index++] = ETH_BIN2HEX(((mac[digit]>>4)&0x0F));
 3288              		.loc 1 1239 0
 3289 0018 BB68     		ldr	r3, [r7, #8]
 3290 001a 3A68     		ldr	r2, [r7, #0]
 3291 001c D218     		adds	r2, r2, r3
 3292 001e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 81


 3293 0020 7968     		ldr	r1, [r7, #4]
 3294 0022 CB18     		adds	r3, r1, r3
 3295 0024 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3296 0026 4FEA1313 		lsr	r3, r3, #4
 3297 002a DBB2     		uxtb	r3, r3
 3298 002c 03F00F03 		and	r3, r3, #15
 3299 0030 092B     		cmp	r3, #9
 3300 0032 0ADD     		ble	.L141
 3301              		.loc 1 1239 0 is_stmt 0 discriminator 1
 3302 0034 FB68     		ldr	r3, [r7, #12]
 3303 0036 7968     		ldr	r1, [r7, #4]
 3304 0038 CB18     		adds	r3, r1, r3
 3305 003a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3306 003c 4FEA1313 		lsr	r3, r3, #4
 3307 0040 DBB2     		uxtb	r3, r3
 3308 0042 03F13703 		add	r3, r3, #55
 3309 0046 DBB2     		uxtb	r3, r3
 3310 0048 09E0     		b	.L142
 3311              	.L141:
 3312              		.loc 1 1239 0 discriminator 2
 3313 004a FB68     		ldr	r3, [r7, #12]
 3314 004c 7968     		ldr	r1, [r7, #4]
 3315 004e CB18     		adds	r3, r1, r3
 3316 0050 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3317 0052 4FEA1313 		lsr	r3, r3, #4
 3318 0056 DBB2     		uxtb	r3, r3
 3319 0058 03F13003 		add	r3, r3, #48
 3320 005c DBB2     		uxtb	r3, r3
 3321              	.L142:
 3322              		.loc 1 1239 0 discriminator 3
 3323 005e 1370     		strb	r3, [r2, #0]
 3324 0060 BB68     		ldr	r3, [r7, #8]
 3325 0062 03F10103 		add	r3, r3, #1
 3326 0066 BB60     		str	r3, [r7, #8]
1240:.\Generated_Source\PSoC5/ETH.c **** 		macString[index++] = ETH_BIN2HEX((mac[digit]&0x0F));
 3327              		.loc 1 1240 0 is_stmt 1 discriminator 3
 3328 0068 BB68     		ldr	r3, [r7, #8]
 3329 006a 3A68     		ldr	r2, [r7, #0]
 3330 006c D218     		adds	r2, r2, r3
 3331 006e FB68     		ldr	r3, [r7, #12]
 3332 0070 7968     		ldr	r1, [r7, #4]
 3333 0072 CB18     		adds	r3, r1, r3
 3334 0074 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3335 0076 03F00F03 		and	r3, r3, #15
 3336 007a 092B     		cmp	r3, #9
 3337 007c 0ADD     		ble	.L143
 3338              		.loc 1 1240 0 is_stmt 0 discriminator 1
 3339 007e FB68     		ldr	r3, [r7, #12]
 3340 0080 7968     		ldr	r1, [r7, #4]
 3341 0082 CB18     		adds	r3, r1, r3
 3342 0084 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3343 0086 03F00F03 		and	r3, r3, #15
 3344 008a DBB2     		uxtb	r3, r3
 3345 008c 03F13703 		add	r3, r3, #55
 3346 0090 DBB2     		uxtb	r3, r3
 3347 0092 09E0     		b	.L144
 3348              	.L143:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 82


 3349              		.loc 1 1240 0 discriminator 2
 3350 0094 FB68     		ldr	r3, [r7, #12]
 3351 0096 7968     		ldr	r1, [r7, #4]
 3352 0098 CB18     		adds	r3, r1, r3
 3353 009a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3354 009c 03F00F03 		and	r3, r3, #15
 3355 00a0 DBB2     		uxtb	r3, r3
 3356 00a2 03F13003 		add	r3, r3, #48
 3357 00a6 DBB2     		uxtb	r3, r3
 3358              	.L144:
 3359              		.loc 1 1240 0 discriminator 3
 3360 00a8 1370     		strb	r3, [r2, #0]
 3361 00aa BB68     		ldr	r3, [r7, #8]
 3362 00ac 03F10103 		add	r3, r3, #1
 3363 00b0 BB60     		str	r3, [r7, #8]
1241:.\Generated_Source\PSoC5/ETH.c **** 		if (digit<5) {
 3364              		.loc 1 1241 0 is_stmt 1 discriminator 3
 3365 00b2 FB68     		ldr	r3, [r7, #12]
 3366 00b4 042B     		cmp	r3, #4
 3367 00b6 0ADC     		bgt	.L145
1242:.\Generated_Source\PSoC5/ETH.c **** 			macString[index++] = '-';
 3368              		.loc 1 1242 0
 3369 00b8 BB68     		ldr	r3, [r7, #8]
 3370 00ba 3A68     		ldr	r2, [r7, #0]
 3371 00bc D318     		adds	r3, r2, r3
 3372 00be 4FF02D02 		mov	r2, #45
 3373 00c2 1A70     		strb	r2, [r3, #0]
 3374 00c4 BB68     		ldr	r3, [r7, #8]
 3375 00c6 03F10103 		add	r3, r3, #1
 3376 00ca BB60     		str	r3, [r7, #8]
 3377 00cc 05E0     		b	.L146
 3378              	.L145:
1243:.\Generated_Source\PSoC5/ETH.c **** 		}
1244:.\Generated_Source\PSoC5/ETH.c **** 		else {
1245:.\Generated_Source\PSoC5/ETH.c **** 			macString[index] = 0;
 3379              		.loc 1 1245 0
 3380 00ce BB68     		ldr	r3, [r7, #8]
 3381 00d0 3A68     		ldr	r2, [r7, #0]
 3382 00d2 D318     		adds	r3, r2, r3
 3383 00d4 4FF00002 		mov	r2, #0
 3384 00d8 1A70     		strb	r2, [r3, #0]
 3385              	.L146:
1237:.\Generated_Source\PSoC5/ETH.c **** 	for(digit=0;digit<6;++digit) {
 3386              		.loc 1 1237 0
 3387 00da FB68     		ldr	r3, [r7, #12]
 3388 00dc 03F10103 		add	r3, r3, #1
 3389 00e0 FB60     		str	r3, [r7, #12]
 3390              	.L140:
1237:.\Generated_Source\PSoC5/ETH.c **** 	for(digit=0;digit<6;++digit) {
 3391              		.loc 1 1237 0 is_stmt 0 discriminator 1
 3392 00e2 FB68     		ldr	r3, [r7, #12]
 3393 00e4 052B     		cmp	r3, #5
 3394 00e6 97DD     		ble	.L147
1246:.\Generated_Source\PSoC5/ETH.c **** 		}
1247:.\Generated_Source\PSoC5/ETH.c **** 	}
1248:.\Generated_Source\PSoC5/ETH.c **** }
 3395              		.loc 1 1248 0 is_stmt 1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 83


 3396 00e8 07F11407 		add	r7, r7, #20
 3397 00ec BD46     		mov	sp, r7
 3398 00ee 80BC     		pop	{r7}
 3399 00f0 7047     		bx	lr
 3400              		.cfi_endproc
 3401              	.LFE48:
 3402              		.size	ETH_StringMAC, .-ETH_StringMAC
 3403 00f2 00BF     		.section	.text.ETH_StringIP,"ax",%progbits
 3404              		.align	2
 3405              		.global	ETH_StringIP
 3406              		.thumb
 3407              		.thumb_func
 3408              		.type	ETH_StringIP, %function
 3409              	ETH_StringIP:
 3410              	.LFB49:
1249:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1250:.\Generated_Source\PSoC5/ETH.c **** void ETH_StringIP( uint32 ip, char *ipString )
1251:.\Generated_Source\PSoC5/ETH.c **** {
 3411              		.loc 1 1251 0
 3412              		.cfi_startproc
 3413              		@ args = 0, pretend = 0, frame = 32
 3414              		@ frame_needed = 1, uses_anonymous_args = 0
 3415              		@ link register save eliminated.
 3416 0000 80B4     		push	{r7}
 3417              	.LCFI145:
 3418              		.cfi_def_cfa_offset 4
 3419              		.cfi_offset 7, -4
 3420 0002 89B0     		sub	sp, sp, #36
 3421              	.LCFI146:
 3422              		.cfi_def_cfa_offset 40
 3423 0004 00AF     		add	r7, sp, #0
 3424              	.LCFI147:
 3425              		.cfi_def_cfa_register 7
 3426 0006 7860     		str	r0, [r7, #4]
 3427 0008 3960     		str	r1, [r7, #0]
1252:.\Generated_Source\PSoC5/ETH.c **** 	uint8 *ipBytes;
1253:.\Generated_Source\PSoC5/ETH.c **** 	int index;
1254:.\Generated_Source\PSoC5/ETH.c **** 	int digit;
1255:.\Generated_Source\PSoC5/ETH.c **** 	int work, temp;
1256:.\Generated_Source\PSoC5/ETH.c **** 	
1257:.\Generated_Source\PSoC5/ETH.c **** 	ipBytes = (uint8*)&ip;
 3428              		.loc 1 1257 0
 3429 000a 07F10403 		add	r3, r7, #4
 3430 000e 3B61     		str	r3, [r7, #16]
1258:.\Generated_Source\PSoC5/ETH.c **** 	index = 0;
 3431              		.loc 1 1258 0
 3432 0010 4FF00003 		mov	r3, #0
 3433 0014 FB61     		str	r3, [r7, #28]
1259:.\Generated_Source\PSoC5/ETH.c **** 	for(digit=0;digit<4;++digit) {
 3434              		.loc 1 1259 0
 3435 0016 4FF00003 		mov	r3, #0
 3436 001a BB61     		str	r3, [r7, #24]
 3437 001c 73E0     		b	.L149
 3438              	.L154:
1260:.\Generated_Source\PSoC5/ETH.c **** 		work = ipBytes[digit];
 3439              		.loc 1 1260 0
 3440 001e BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 84


 3441 0020 3A69     		ldr	r2, [r7, #16]
 3442 0022 D318     		adds	r3, r2, r3
 3443 0024 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3444 0026 7B61     		str	r3, [r7, #20]
1261:.\Generated_Source\PSoC5/ETH.c **** 		if (work >= 100) {
 3445              		.loc 1 1261 0
 3446 0028 7B69     		ldr	r3, [r7, #20]
 3447 002a 632B     		cmp	r3, #99
 3448 002c 21DD     		ble	.L150
1262:.\Generated_Source\PSoC5/ETH.c **** 			temp = work/100;
 3449              		.loc 1 1262 0
 3450 002e 7A69     		ldr	r2, [r7, #20]
 3451 0030 48F21F53 		movw	r3, #34079
 3452 0034 C5F2EB13 		movt	r3, 20971
 3453 0038 83FB0213 		smull	r1, r3, r3, r2
 3454 003c 4FEA6311 		asr	r1, r3, #5
 3455 0040 4FEAE273 		asr	r3, r2, #31
 3456 0044 CB1A     		subs	r3, r1, r3
 3457 0046 FB60     		str	r3, [r7, #12]
1263:.\Generated_Source\PSoC5/ETH.c **** 			work -= (temp*100);
 3458              		.loc 1 1263 0
 3459 0048 FB68     		ldr	r3, [r7, #12]
 3460 004a 6FF06302 		mvn	r2, #99
 3461 004e 02FB03F3 		mul	r3, r2, r3
 3462 0052 7A69     		ldr	r2, [r7, #20]
 3463 0054 D318     		adds	r3, r2, r3
 3464 0056 7B61     		str	r3, [r7, #20]
1264:.\Generated_Source\PSoC5/ETH.c **** 			ipString[index++] = '0' + temp;
 3465              		.loc 1 1264 0
 3466 0058 FB69     		ldr	r3, [r7, #28]
 3467 005a 3A68     		ldr	r2, [r7, #0]
 3468 005c D318     		adds	r3, r2, r3
 3469 005e FA68     		ldr	r2, [r7, #12]
 3470 0060 D2B2     		uxtb	r2, r2
 3471 0062 02F13002 		add	r2, r2, #48
 3472 0066 D2B2     		uxtb	r2, r2
 3473 0068 1A70     		strb	r2, [r3, #0]
 3474 006a FB69     		ldr	r3, [r7, #28]
 3475 006c 03F10103 		add	r3, r3, #1
 3476 0070 FB61     		str	r3, [r7, #28]
 3477              	.L150:
1265:.\Generated_Source\PSoC5/ETH.c **** 		}
1266:.\Generated_Source\PSoC5/ETH.c **** 		if (work >= 10) {
 3478              		.loc 1 1266 0
 3479 0072 7B69     		ldr	r3, [r7, #20]
 3480 0074 092B     		cmp	r3, #9
 3481 0076 21DD     		ble	.L151
1267:.\Generated_Source\PSoC5/ETH.c **** 			temp = work /10;
 3482              		.loc 1 1267 0
 3483 0078 7A69     		ldr	r2, [r7, #20]
 3484 007a 46F26763 		movw	r3, #26215
 3485 007e C6F26663 		movt	r3, 26214
 3486 0082 83FB0213 		smull	r1, r3, r3, r2
 3487 0086 4FEAA301 		asr	r1, r3, #2
 3488 008a 4FEAE273 		asr	r3, r2, #31
 3489 008e CB1A     		subs	r3, r1, r3
 3490 0090 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 85


1268:.\Generated_Source\PSoC5/ETH.c **** 			work -= (temp*10);
 3491              		.loc 1 1268 0
 3492 0092 FB68     		ldr	r3, [r7, #12]
 3493 0094 6FF00902 		mvn	r2, #9
 3494 0098 02FB03F3 		mul	r3, r2, r3
 3495 009c 7A69     		ldr	r2, [r7, #20]
 3496 009e D318     		adds	r3, r2, r3
 3497 00a0 7B61     		str	r3, [r7, #20]
1269:.\Generated_Source\PSoC5/ETH.c **** 			ipString[index++] = '0'+temp;
 3498              		.loc 1 1269 0
 3499 00a2 FB69     		ldr	r3, [r7, #28]
 3500 00a4 3A68     		ldr	r2, [r7, #0]
 3501 00a6 D318     		adds	r3, r2, r3
 3502 00a8 FA68     		ldr	r2, [r7, #12]
 3503 00aa D2B2     		uxtb	r2, r2
 3504 00ac 02F13002 		add	r2, r2, #48
 3505 00b0 D2B2     		uxtb	r2, r2
 3506 00b2 1A70     		strb	r2, [r3, #0]
 3507 00b4 FB69     		ldr	r3, [r7, #28]
 3508 00b6 03F10103 		add	r3, r3, #1
 3509 00ba FB61     		str	r3, [r7, #28]
 3510              	.L151:
1270:.\Generated_Source\PSoC5/ETH.c **** 		}
1271:.\Generated_Source\PSoC5/ETH.c **** 		ipString[index++] = '0'+work;
 3511              		.loc 1 1271 0
 3512 00bc FB69     		ldr	r3, [r7, #28]
 3513 00be 3A68     		ldr	r2, [r7, #0]
 3514 00c0 D318     		adds	r3, r2, r3
 3515 00c2 7A69     		ldr	r2, [r7, #20]
 3516 00c4 D2B2     		uxtb	r2, r2
 3517 00c6 02F13002 		add	r2, r2, #48
 3518 00ca D2B2     		uxtb	r2, r2
 3519 00cc 1A70     		strb	r2, [r3, #0]
 3520 00ce FB69     		ldr	r3, [r7, #28]
 3521 00d0 03F10103 		add	r3, r3, #1
 3522 00d4 FB61     		str	r3, [r7, #28]
1272:.\Generated_Source\PSoC5/ETH.c **** 		if (digit <3) {
 3523              		.loc 1 1272 0
 3524 00d6 BB69     		ldr	r3, [r7, #24]
 3525 00d8 022B     		cmp	r3, #2
 3526 00da 0ADC     		bgt	.L152
1273:.\Generated_Source\PSoC5/ETH.c **** 			ipString[index++] = '.';
 3527              		.loc 1 1273 0
 3528 00dc FB69     		ldr	r3, [r7, #28]
 3529 00de 3A68     		ldr	r2, [r7, #0]
 3530 00e0 D318     		adds	r3, r2, r3
 3531 00e2 4FF02E02 		mov	r2, #46
 3532 00e6 1A70     		strb	r2, [r3, #0]
 3533 00e8 FB69     		ldr	r3, [r7, #28]
 3534 00ea 03F10103 		add	r3, r3, #1
 3535 00ee FB61     		str	r3, [r7, #28]
 3536 00f0 05E0     		b	.L153
 3537              	.L152:
1274:.\Generated_Source\PSoC5/ETH.c **** 		}
1275:.\Generated_Source\PSoC5/ETH.c **** 		else {
1276:.\Generated_Source\PSoC5/ETH.c **** 			ipString[index] = 0;
 3538              		.loc 1 1276 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 86


 3539 00f2 FB69     		ldr	r3, [r7, #28]
 3540 00f4 3A68     		ldr	r2, [r7, #0]
 3541 00f6 D318     		adds	r3, r2, r3
 3542 00f8 4FF00002 		mov	r2, #0
 3543 00fc 1A70     		strb	r2, [r3, #0]
 3544              	.L153:
1259:.\Generated_Source\PSoC5/ETH.c **** 	for(digit=0;digit<4;++digit) {
 3545              		.loc 1 1259 0
 3546 00fe BB69     		ldr	r3, [r7, #24]
 3547 0100 03F10103 		add	r3, r3, #1
 3548 0104 BB61     		str	r3, [r7, #24]
 3549              	.L149:
1259:.\Generated_Source\PSoC5/ETH.c **** 	for(digit=0;digit<4;++digit) {
 3550              		.loc 1 1259 0 is_stmt 0 discriminator 1
 3551 0106 BB69     		ldr	r3, [r7, #24]
 3552 0108 032B     		cmp	r3, #3
 3553 010a 88DD     		ble	.L154
1277:.\Generated_Source\PSoC5/ETH.c **** 		}
1278:.\Generated_Source\PSoC5/ETH.c **** 	}
1279:.\Generated_Source\PSoC5/ETH.c **** }
 3554              		.loc 1 1279 0 is_stmt 1
 3555 010c 07F12407 		add	r7, r7, #36
 3556 0110 BD46     		mov	sp, r7
 3557 0112 80BC     		pop	{r7}
 3558 0114 7047     		bx	lr
 3559              		.cfi_endproc
 3560              	.LFE49:
 3561              		.size	ETH_StringIP, .-ETH_StringIP
 3562 0116 00BF     		.section	.text.ETH_SetIP,"ax",%progbits
 3563              		.align	2
 3564              		.global	ETH_SetIP
 3565              		.thumb
 3566              		.thumb_func
 3567              		.type	ETH_SetIP, %function
 3568              	ETH_SetIP:
 3569              	.LFB50:
1280:.\Generated_Source\PSoC5/ETH.c **** 
1281:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1282:.\Generated_Source\PSoC5/ETH.c **** uint8
1283:.\Generated_Source\PSoC5/ETH.c **** ETH_SetIP( uint32 ip )
1284:.\Generated_Source\PSoC5/ETH.c **** {
 3570              		.loc 1 1284 0
 3571              		.cfi_startproc
 3572              		@ args = 0, pretend = 0, frame = 16
 3573              		@ frame_needed = 1, uses_anonymous_args = 0
 3574 0000 80B5     		push	{r7, lr}
 3575              	.LCFI148:
 3576              		.cfi_def_cfa_offset 8
 3577              		.cfi_offset 7, -8
 3578              		.cfi_offset 14, -4
 3579 0002 84B0     		sub	sp, sp, #16
 3580              	.LCFI149:
 3581              		.cfi_def_cfa_offset 24
 3582 0004 00AF     		add	r7, sp, #0
 3583              	.LCFI150:
 3584              		.cfi_def_cfa_register 7
 3585 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 87


1285:.\Generated_Source\PSoC5/ETH.c **** 	uint8 ok = 0;
 3586              		.loc 1 1285 0
 3587 0008 4FF00003 		mov	r3, #0
 3588 000c FB73     		strb	r3, [r7, #15]
1286:.\Generated_Source\PSoC5/ETH.c **** 	
1287:.\Generated_Source\PSoC5/ETH.c **** 	if ( ( ip != 0) && (ip != 0xFFFFFFFF) ) {
 3589              		.loc 1 1287 0
 3590 000e 7B68     		ldr	r3, [r7, #4]
 3591 0010 002B     		cmp	r3, #0
 3592 0012 09D0     		beq	.L156
 3593              		.loc 1 1287 0 is_stmt 0 discriminator 1
 3594 0014 7B68     		ldr	r3, [r7, #4]
 3595 0016 B3F1FF3F 		cmp	r3, #-1
 3596 001a 05D0     		beq	.L156
1288:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSourceIP( ip );
 3597              		.loc 1 1288 0 is_stmt 1
 3598 001c 7868     		ldr	r0, [r7, #4]
 3599 001e FFF7FEFF 		bl	ETH_SetSourceIP
1289:.\Generated_Source\PSoC5/ETH.c **** 		ok = 0xFF;
 3600              		.loc 1 1289 0
 3601 0022 4FF0FF03 		mov	r3, #255
 3602 0026 FB73     		strb	r3, [r7, #15]
 3603              	.L156:
1290:.\Generated_Source\PSoC5/ETH.c **** 	}
1291:.\Generated_Source\PSoC5/ETH.c **** 	
1292:.\Generated_Source\PSoC5/ETH.c **** 	return ok;
 3604              		.loc 1 1292 0
 3605 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1293:.\Generated_Source\PSoC5/ETH.c **** }
 3606              		.loc 1 1293 0
 3607 002a 1846     		mov	r0, r3
 3608 002c 07F11007 		add	r7, r7, #16
 3609 0030 BD46     		mov	sp, r7
 3610 0032 80BD     		pop	{r7, pc}
 3611              		.cfi_endproc
 3612              	.LFE50:
 3613              		.size	ETH_SetIP, .-ETH_SetIP
 3614              		.section	.text.ETH_GetIP,"ax",%progbits
 3615              		.align	2
 3616              		.global	ETH_GetIP
 3617              		.thumb
 3618              		.thumb_func
 3619              		.type	ETH_GetIP, %function
 3620              	ETH_GetIP:
 3621              	.LFB51:
1294:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1295:.\Generated_Source\PSoC5/ETH.c **** uint32
1296:.\Generated_Source\PSoC5/ETH.c **** ETH_GetIP( void )
1297:.\Generated_Source\PSoC5/ETH.c **** {
 3622              		.loc 1 1297 0
 3623              		.cfi_startproc
 3624              		@ args = 0, pretend = 0, frame = 0
 3625              		@ frame_needed = 1, uses_anonymous_args = 0
 3626 0000 80B5     		push	{r7, lr}
 3627              	.LCFI151:
 3628              		.cfi_def_cfa_offset 8
 3629              		.cfi_offset 7, -8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 88


 3630              		.cfi_offset 14, -4
 3631 0002 00AF     		add	r7, sp, #0
 3632              	.LCFI152:
 3633              		.cfi_def_cfa_register 7
1298:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_GetSourceIP();
 3634              		.loc 1 1298 0
 3635 0004 FFF7FEFF 		bl	ETH_GetSourceIP
 3636 0008 0346     		mov	r3, r0
1299:.\Generated_Source\PSoC5/ETH.c **** }
 3637              		.loc 1 1299 0
 3638 000a 1846     		mov	r0, r3
 3639 000c 80BD     		pop	{r7, pc}
 3640              		.cfi_endproc
 3641              	.LFE51:
 3642              		.size	ETH_GetIP, .-ETH_GetIP
 3643 000e 00BF     		.section	.text.ETH_SetMAC,"ax",%progbits
 3644              		.align	2
 3645              		.global	ETH_SetMAC
 3646              		.thumb
 3647              		.thumb_func
 3648              		.type	ETH_SetMAC, %function
 3649              	ETH_SetMAC:
 3650              	.LFB52:
1300:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1301:.\Generated_Source\PSoC5/ETH.c **** void
1302:.\Generated_Source\PSoC5/ETH.c **** ETH_SetMAC( uint8* mac )
1303:.\Generated_Source\PSoC5/ETH.c **** {
 3651              		.loc 1 1303 0
 3652              		.cfi_startproc
 3653              		@ args = 0, pretend = 0, frame = 8
 3654              		@ frame_needed = 1, uses_anonymous_args = 0
 3655 0000 80B5     		push	{r7, lr}
 3656              	.LCFI153:
 3657              		.cfi_def_cfa_offset 8
 3658              		.cfi_offset 7, -8
 3659              		.cfi_offset 14, -4
 3660 0002 82B0     		sub	sp, sp, #8
 3661              	.LCFI154:
 3662              		.cfi_def_cfa_offset 16
 3663 0004 00AF     		add	r7, sp, #0
 3664              	.LCFI155:
 3665              		.cfi_def_cfa_register 7
 3666 0006 7860     		str	r0, [r7, #4]
1304:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSourceMAC( mac );
 3667              		.loc 1 1304 0
 3668 0008 7868     		ldr	r0, [r7, #4]
 3669 000a FFF7FEFF 		bl	ETH_SetSourceMAC
1305:.\Generated_Source\PSoC5/ETH.c **** }
 3670              		.loc 1 1305 0
 3671 000e 07F10807 		add	r7, r7, #8
 3672 0012 BD46     		mov	sp, r7
 3673 0014 80BD     		pop	{r7, pc}
 3674              		.cfi_endproc
 3675              	.LFE52:
 3676              		.size	ETH_SetMAC, .-ETH_SetMAC
 3677 0016 00BF     		.section	.text.ETH_GetMAC,"ax",%progbits
 3678              		.align	2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 89


 3679              		.global	ETH_GetMAC
 3680              		.thumb
 3681              		.thumb_func
 3682              		.type	ETH_GetMAC, %function
 3683              	ETH_GetMAC:
 3684              	.LFB53:
1306:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1307:.\Generated_Source\PSoC5/ETH.c **** void
1308:.\Generated_Source\PSoC5/ETH.c **** ETH_GetMAC( uint8* mac )
1309:.\Generated_Source\PSoC5/ETH.c **** {
 3685              		.loc 1 1309 0
 3686              		.cfi_startproc
 3687              		@ args = 0, pretend = 0, frame = 8
 3688              		@ frame_needed = 1, uses_anonymous_args = 0
 3689 0000 80B5     		push	{r7, lr}
 3690              	.LCFI156:
 3691              		.cfi_def_cfa_offset 8
 3692              		.cfi_offset 7, -8
 3693              		.cfi_offset 14, -4
 3694 0002 82B0     		sub	sp, sp, #8
 3695              	.LCFI157:
 3696              		.cfi_def_cfa_offset 16
 3697 0004 00AF     		add	r7, sp, #0
 3698              	.LCFI158:
 3699              		.cfi_def_cfa_register 7
 3700 0006 7860     		str	r0, [r7, #4]
1310:.\Generated_Source\PSoC5/ETH.c **** 	ETH_GetSourceMAC( mac );
 3701              		.loc 1 1310 0
 3702 0008 7868     		ldr	r0, [r7, #4]
 3703 000a FFF7FEFF 		bl	ETH_GetSourceMAC
1311:.\Generated_Source\PSoC5/ETH.c **** }
 3704              		.loc 1 1311 0
 3705 000e 07F10807 		add	r7, r7, #8
 3706 0012 BD46     		mov	sp, r7
 3707 0014 80BD     		pop	{r7, pc}
 3708              		.cfi_endproc
 3709              	.LFE53:
 3710              		.size	ETH_GetMAC, .-ETH_GetMAC
 3711 0016 00BF     		.section	.text.ETH_SocketOpen,"ax",%progbits
 3712              		.align	2
 3713              		.global	ETH_SocketOpen
 3714              		.thumb
 3715              		.thumb_func
 3716              		.type	ETH_SocketOpen, %function
 3717              	ETH_SocketOpen:
 3718              	.LFB54:
1312:.\Generated_Source\PSoC5/ETH.c **** #endif
1313:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
1314:.\Generated_Source\PSoC5/ETH.c **** /* Socket Controls */
1315:.\Generated_Source\PSoC5/ETH.c **** #if (1)
1316:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1317:.\Generated_Source\PSoC5/ETH.c **** uint8
1318:.\Generated_Source\PSoC5/ETH.c **** ETH_SocketOpen( uint8 Protocol, uint16 port, uint8 flags )
1319:.\Generated_Source\PSoC5/ETH.c **** {
 3719              		.loc 1 1319 0
 3720              		.cfi_startproc
 3721              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 90


 3722              		@ frame_needed = 1, uses_anonymous_args = 0
 3723 0000 80B5     		push	{r7, lr}
 3724              	.LCFI159:
 3725              		.cfi_def_cfa_offset 8
 3726              		.cfi_offset 7, -8
 3727              		.cfi_offset 14, -4
 3728 0002 84B0     		sub	sp, sp, #16
 3729              	.LCFI160:
 3730              		.cfi_def_cfa_offset 24
 3731 0004 00AF     		add	r7, sp, #0
 3732              	.LCFI161:
 3733              		.cfi_def_cfa_register 7
 3734 0006 1346     		mov	r3, r2
 3735 0008 0246     		mov	r2, r0
 3736 000a FA71     		strb	r2, [r7, #7]
 3737 000c 0A46     		mov	r2, r1	@ movhi
 3738 000e BA80     		strh	r2, [r7, #4]	@ movhi
 3739 0010 BB71     		strb	r3, [r7, #6]
1320:.\Generated_Source\PSoC5/ETH.c **** 	uint8 socket;
1321:.\Generated_Source\PSoC5/ETH.c **** 	int index;
1322:.\Generated_Source\PSoC5/ETH.c **** 	
1323:.\Generated_Source\PSoC5/ETH.c **** 	/*
1324:.\Generated_Source\PSoC5/ETH.c **** 	 * This function will look for the first available socket for allocation
1325:.\Generated_Source\PSoC5/ETH.c **** 	 * using the defined protocol.  The socket configuration will then be
1326:.\Generated_Source\PSoC5/ETH.c **** 	 * initialized and saved in the allocation table. If the requested socket
1327:.\Generated_Source\PSoC5/ETH.c **** 	 * can not be initialized, 0xFF is returned
1328:.\Generated_Source\PSoC5/ETH.c **** 	 */
1329:.\Generated_Source\PSoC5/ETH.c **** 	socket = 0xFF;
 3740              		.loc 1 1329 0
 3741 0012 4FF0FF03 		mov	r3, #255
 3742 0016 FB73     		strb	r3, [r7, #15]
1330:.\Generated_Source\PSoC5/ETH.c **** 	/* find the first available socket to open, and how much memory is available */
1331:.\Generated_Source\PSoC5/ETH.c **** 	for( index = 0;index<ETH_MAX_SOCKET;++index) {
 3743              		.loc 1 1331 0
 3744 0018 4FF00003 		mov	r3, #0
 3745 001c BB60     		str	r3, [r7, #8]
 3746 001e 17E0     		b	.L163
 3747              	.L166:
1332:.\Generated_Source\PSoC5/ETH.c **** 		if ( (socket == 0xFF) && (ETH_SocketConfig[index].Protocol == 0) ) {
 3748              		.loc 1 1332 0
 3749 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3750 0022 FF2B     		cmp	r3, #255
 3751 0024 10D1     		bne	.L164
 3752              		.loc 1 1332 0 is_stmt 0 discriminator 1
 3753 0026 40F20003 		movw	r3, #:lower16:ETH_SocketConfig
 3754 002a C0F20003 		movt	r3, #:upper16:ETH_SocketConfig
 3755 002e BA68     		ldr	r2, [r7, #8]
 3756 0030 13F83230 		ldrb	r3, [r3, r2, lsl #3]	@ zero_extendqisi2
 3757 0034 002B     		cmp	r3, #0
 3758 0036 07D1     		bne	.L164
1333:.\Generated_Source\PSoC5/ETH.c **** 			/*
1334:.\Generated_Source\PSoC5/ETH.c **** 			 * Since the W5100 does not support MAC mode commucications, check to see
1335:.\Generated_Source\PSoC5/ETH.c **** 			 * if the socket that is free was socket 0.  If the mac protocol was
1336:.\Generated_Source\PSoC5/ETH.c **** 			 * selected, ignore socket 0
1337:.\Generated_Source\PSoC5/ETH.c **** 			 */
1338:.\Generated_Source\PSoC5/ETH.c **** 			if ( (Protocol != ETH_PROTO_MAC) || (index != 0) ) {
 3759              		.loc 1 1338 0 is_stmt 1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 91


 3760 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3761 003a 042B     		cmp	r3, #4
 3762 003c 02D1     		bne	.L165
 3763              		.loc 1 1338 0 is_stmt 0 discriminator 1
 3764 003e BB68     		ldr	r3, [r7, #8]
 3765 0040 002B     		cmp	r3, #0
 3766 0042 01D0     		beq	.L164
 3767              	.L165:
1339:.\Generated_Source\PSoC5/ETH.c **** 				/* store this socket number for allocation */
1340:.\Generated_Source\PSoC5/ETH.c **** 				socket = index;
 3768              		.loc 1 1340 0 is_stmt 1
 3769 0044 BB68     		ldr	r3, [r7, #8]
 3770 0046 FB73     		strb	r3, [r7, #15]
 3771              	.L164:
1331:.\Generated_Source\PSoC5/ETH.c **** 	for( index = 0;index<ETH_MAX_SOCKET;++index) {
 3772              		.loc 1 1331 0
 3773 0048 BB68     		ldr	r3, [r7, #8]
 3774 004a 03F10103 		add	r3, r3, #1
 3775 004e BB60     		str	r3, [r7, #8]
 3776              	.L163:
1331:.\Generated_Source\PSoC5/ETH.c **** 	for( index = 0;index<ETH_MAX_SOCKET;++index) {
 3777              		.loc 1 1331 0 is_stmt 0 discriminator 1
 3778 0050 BB68     		ldr	r3, [r7, #8]
 3779 0052 072B     		cmp	r3, #7
 3780 0054 E4DD     		ble	.L166
1341:.\Generated_Source\PSoC5/ETH.c **** 			}
1342:.\Generated_Source\PSoC5/ETH.c **** 		}
1343:.\Generated_Source\PSoC5/ETH.c **** 	}
1344:.\Generated_Source\PSoC5/ETH.c **** 	if (socket != 0xFF ) {
 3781              		.loc 1 1344 0 is_stmt 1
 3782 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3783 0058 FF2B     		cmp	r3, #255
 3784 005a 77D0     		beq	.L167
1345:.\Generated_Source\PSoC5/ETH.c **** 		/* Store the socket information in the allocation table */
1346:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketConfig[socket].Protocol = Protocol;
 3785              		.loc 1 1346 0
 3786 005c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3787 005e 40F20003 		movw	r3, #:lower16:ETH_SocketConfig
 3788 0062 C0F20003 		movt	r3, #:upper16:ETH_SocketConfig
 3789 0066 F979     		ldrb	r1, [r7, #7]
 3790 0068 03F83210 		strb	r1, [r3, r2, lsl #3]
1347:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketConfig[socket].SocketFlags = flags;
 3791              		.loc 1 1347 0
 3792 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3793 006e 40F20002 		movw	r2, #:lower16:ETH_SocketConfig
 3794 0072 C0F20002 		movt	r2, #:upper16:ETH_SocketConfig
 3795 0076 4FEAC303 		lsl	r3, r3, #3
 3796 007a D318     		adds	r3, r2, r3
 3797 007c BA79     		ldrb	r2, [r7, #6]
 3798 007e 5A70     		strb	r2, [r3, #1]
1348:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketConfig[socket].SourcePort = port;
 3799              		.loc 1 1348 0
 3800 0080 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3801 0082 40F20002 		movw	r2, #:lower16:ETH_SocketConfig
 3802 0086 C0F20002 		movt	r2, #:upper16:ETH_SocketConfig
 3803 008a 4FEAC303 		lsl	r3, r3, #3
 3804 008e D318     		adds	r3, r2, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 92


 3805 0090 BA88     		ldrh	r2, [r7, #4]	@ movhi
 3806 0092 5A80     		strh	r2, [r3, #2]	@ movhi
1349:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketConfig[socket].ServerFlag = 0;
 3807              		.loc 1 1349 0
 3808 0094 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3809 0096 40F20002 		movw	r2, #:lower16:ETH_SocketConfig
 3810 009a C0F20002 		movt	r2, #:upper16:ETH_SocketConfig
 3811 009e 4FEAC303 		lsl	r3, r3, #3
 3812 00a2 D318     		adds	r3, r2, r3
 3813 00a4 4FF00002 		mov	r2, #0
 3814 00a8 1A71     		strb	r2, [r3, #4]
1350:.\Generated_Source\PSoC5/ETH.c **** 
1351:.\Generated_Source\PSoC5/ETH.c **** 		/* Set the socket memory size */
1352:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketTxMemSize(socket, ETH_MEM_2K); /* 2K each */
 3815              		.loc 1 1352 0
 3816 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3817 00ac 1846     		mov	r0, r3
 3818 00ae 4FF00201 		mov	r1, #2
 3819 00b2 FFF7FEFF 		bl	ETH_SetSocketTxMemSize
1353:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketRxMemSize(socket, ETH_MEM_2K); /* 2K Each */
 3820              		.loc 1 1353 0
 3821 00b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3822 00b8 1846     		mov	r0, r3
 3823 00ba 4FF00201 		mov	r1, #2
 3824 00be FFF7FEFF 		bl	ETH_SetSocketRxMemSize
1354:.\Generated_Source\PSoC5/ETH.c **** 		/* Initialize the socket memeory pointers */
1355:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketRxReadPtr( socket, ETH_SOCKET_RX_BASE[index] );
 3825              		.loc 1 1355 0
 3826 00c2 40F20003 		movw	r3, #:lower16:ETH_SOCKET_RX_BASE
 3827 00c6 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_RX_BASE
 3828 00ca BA68     		ldr	r2, [r7, #8]
 3829 00cc 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3830 00d0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3831 00d2 1046     		mov	r0, r2
 3832 00d4 1946     		mov	r1, r3
 3833 00d6 FFF7FEFF 		bl	ETH_SetSocketRxReadPtr
1356:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketRxWritePtr( socket, ETH_SOCKET_RX_BASE[index] );
 3834              		.loc 1 1356 0
 3835 00da 40F20003 		movw	r3, #:lower16:ETH_SOCKET_RX_BASE
 3836 00de C0F20003 		movt	r3, #:upper16:ETH_SOCKET_RX_BASE
 3837 00e2 BA68     		ldr	r2, [r7, #8]
 3838 00e4 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3839 00e8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3840 00ea 1046     		mov	r0, r2
 3841 00ec 1946     		mov	r1, r3
 3842 00ee FFF7FEFF 		bl	ETH_SetSocketRxWritePtr
1357:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketTxReadPtr( socket, ETH_SOCKET_TX_BASE[index] );
 3843              		.loc 1 1357 0
 3844 00f2 40F20003 		movw	r3, #:lower16:ETH_SOCKET_TX_BASE
 3845 00f6 C0F20003 		movt	r3, #:upper16:ETH_SOCKET_TX_BASE
 3846 00fa BA68     		ldr	r2, [r7, #8]
 3847 00fc 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3848 0100 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3849 0102 1046     		mov	r0, r2
 3850 0104 1946     		mov	r1, r3
 3851 0106 FFF7FEFF 		bl	ETH_SetSocketTxReadPtr
1358:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketTxWritePtr( socket, ETH_SOCKET_TX_BASE[index] );
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 93


 3852              		.loc 1 1358 0
 3853 010a 40F20003 		movw	r3, #:lower16:ETH_SOCKET_TX_BASE
 3854 010e C0F20003 		movt	r3, #:upper16:ETH_SOCKET_TX_BASE
 3855 0112 BA68     		ldr	r2, [r7, #8]
 3856 0114 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3857 0118 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3858 011a 1046     		mov	r0, r2
 3859 011c 1946     		mov	r1, r3
 3860 011e FFF7FEFF 		bl	ETH_SetSocketTxWritePtr
1359:.\Generated_Source\PSoC5/ETH.c **** 
1360:.\Generated_Source\PSoC5/ETH.c **** 		/* Send the socket open with the correct protocol information */
1361:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketSourcePort( socket, port );
 3861              		.loc 1 1361 0
 3862 0122 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3863 0124 BB88     		ldrh	r3, [r7, #4]
 3864 0126 1046     		mov	r0, r2
 3865 0128 1946     		mov	r1, r3
 3866 012a FFF7FEFF 		bl	ETH_SetSocketSourcePort
1362:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketMode( socket, Protocol | flags );
 3867              		.loc 1 1362 0
 3868 012e FA79     		ldrb	r2, [r7, #7]
 3869 0130 BB79     		ldrb	r3, [r7, #6]
 3870 0132 1343     		orrs	r3, r3, r2
 3871 0134 DBB2     		uxtb	r3, r3
 3872 0136 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3873 0138 1046     		mov	r0, r2
 3874 013a 1946     		mov	r1, r3
 3875 013c FFF7FEFF 		bl	ETH_SetSocketMode
1363:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 1 );
 3876              		.loc 1 1363 0
 3877 0140 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3878 0142 1846     		mov	r0, r3
 3879 0144 4FF00101 		mov	r1, #1
 3880 0148 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
 3881              	.L167:
1364:.\Generated_Source\PSoC5/ETH.c **** 		
1365:.\Generated_Source\PSoC5/ETH.c **** 	}
1366:.\Generated_Source\PSoC5/ETH.c **** 	return socket;
 3882              		.loc 1 1366 0
 3883 014c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1367:.\Generated_Source\PSoC5/ETH.c **** }
 3884              		.loc 1 1367 0
 3885 014e 1846     		mov	r0, r3
 3886 0150 07F11007 		add	r7, r7, #16
 3887 0154 BD46     		mov	sp, r7
 3888 0156 80BD     		pop	{r7, pc}
 3889              		.cfi_endproc
 3890              	.LFE54:
 3891              		.size	ETH_SocketOpen, .-ETH_SocketOpen
 3892              		.section	.text.ETH_SocketClose,"ax",%progbits
 3893              		.align	2
 3894              		.global	ETH_SocketClose
 3895              		.thumb
 3896              		.thumb_func
 3897              		.type	ETH_SocketClose, %function
 3898              	ETH_SocketClose:
 3899              	.LFB55:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 94


1368:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1369:.\Generated_Source\PSoC5/ETH.c **** void
1370:.\Generated_Source\PSoC5/ETH.c **** ETH_SocketClose( uint8 socket )
1371:.\Generated_Source\PSoC5/ETH.c **** {
 3900              		.loc 1 1371 0
 3901              		.cfi_startproc
 3902              		@ args = 0, pretend = 0, frame = 8
 3903              		@ frame_needed = 1, uses_anonymous_args = 0
 3904 0000 80B5     		push	{r7, lr}
 3905              	.LCFI162:
 3906              		.cfi_def_cfa_offset 8
 3907              		.cfi_offset 7, -8
 3908              		.cfi_offset 14, -4
 3909 0002 82B0     		sub	sp, sp, #8
 3910              	.LCFI163:
 3911              		.cfi_def_cfa_offset 16
 3912 0004 00AF     		add	r7, sp, #0
 3913              	.LCFI164:
 3914              		.cfi_def_cfa_register 7
 3915 0006 0346     		mov	r3, r0
 3916 0008 FB71     		strb	r3, [r7, #7]
1372:.\Generated_Source\PSoC5/ETH.c **** 	/*
1373:.\Generated_Source\PSoC5/ETH.c **** 	 * Set the socket allocation to empty, and issue the close command
1374:.\Generated_Source\PSoC5/ETH.c **** 	 * to the socket
1375:.\Generated_Source\PSoC5/ETH.c **** 	 */
1376:.\Generated_Source\PSoC5/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 3917              		.loc 1 1376 0
 3918 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3919 000c 072B     		cmp	r3, #7
 3920 000e 1FD8     		bhi	.L169
1377:.\Generated_Source\PSoC5/ETH.c **** 		/* clear the socket memory allocations */
1378:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketConfig[socket].Protocol = 0;
 3921              		.loc 1 1378 0
 3922 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3923 0012 40F20003 		movw	r3, #:lower16:ETH_SocketConfig
 3924 0016 C0F20003 		movt	r3, #:upper16:ETH_SocketConfig
 3925 001a 4FF00001 		mov	r1, #0
 3926 001e 03F83210 		strb	r1, [r3, r2, lsl #3]
1379:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketConfig[socket].SocketFlags = 0;
 3927              		.loc 1 1379 0
 3928 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3929 0024 40F20002 		movw	r2, #:lower16:ETH_SocketConfig
 3930 0028 C0F20002 		movt	r2, #:upper16:ETH_SocketConfig
 3931 002c 4FEAC303 		lsl	r3, r3, #3
 3932 0030 D318     		adds	r3, r2, r3
 3933 0032 4FF00002 		mov	r2, #0
 3934 0036 5A70     		strb	r2, [r3, #1]
1380:.\Generated_Source\PSoC5/ETH.c **** 		/* close the socket */
1381:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x10 );
 3935              		.loc 1 1381 0
 3936 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3937 003a 1846     		mov	r0, r3
 3938 003c 4FF01001 		mov	r1, #16
 3939 0040 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1382:.\Generated_Source\PSoC5/ETH.c **** 		/* Clear pending Interrupts */
1383:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketIR( socket, 0xFF);
 3940              		.loc 1 1383 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 95


 3941 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3942 0046 1846     		mov	r0, r3
 3943 0048 4FF0FF01 		mov	r1, #255
 3944 004c FFF7FEFF 		bl	ETH_SetSocketIR
 3945              	.L169:
1384:.\Generated_Source\PSoC5/ETH.c **** 	}
1385:.\Generated_Source\PSoC5/ETH.c **** }
 3946              		.loc 1 1385 0
 3947 0050 07F10807 		add	r7, r7, #8
 3948 0054 BD46     		mov	sp, r7
 3949 0056 80BD     		pop	{r7, pc}
 3950              		.cfi_endproc
 3951              	.LFE55:
 3952              		.size	ETH_SocketClose, .-ETH_SocketClose
 3953              		.section	.text.ETH_SocketProcessConnections,"ax",%progbits
 3954              		.align	2
 3955              		.global	ETH_SocketProcessConnections
 3956              		.thumb
 3957              		.thumb_func
 3958              		.type	ETH_SocketProcessConnections, %function
 3959              	ETH_SocketProcessConnections:
 3960              	.LFB56:
1386:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1387:.\Generated_Source\PSoC5/ETH.c **** uint8
1388:.\Generated_Source\PSoC5/ETH.c **** ETH_SocketProcessConnections( uint8 socket )
1389:.\Generated_Source\PSoC5/ETH.c **** {
 3961              		.loc 1 1389 0
 3962              		.cfi_startproc
 3963              		@ args = 0, pretend = 0, frame = 16
 3964              		@ frame_needed = 1, uses_anonymous_args = 0
 3965 0000 80B5     		push	{r7, lr}
 3966              	.LCFI165:
 3967              		.cfi_def_cfa_offset 8
 3968              		.cfi_offset 7, -8
 3969              		.cfi_offset 14, -4
 3970 0002 84B0     		sub	sp, sp, #16
 3971              	.LCFI166:
 3972              		.cfi_def_cfa_offset 24
 3973 0004 00AF     		add	r7, sp, #0
 3974              	.LCFI167:
 3975              		.cfi_def_cfa_register 7
 3976 0006 0346     		mov	r3, r0
 3977 0008 FB71     		strb	r3, [r7, #7]
1390:.\Generated_Source\PSoC5/ETH.c **** 	uint8 status;
1391:.\Generated_Source\PSoC5/ETH.c **** 	
1392:.\Generated_Source\PSoC5/ETH.c **** 	status = ETH_GetSocketStatus(socket);
 3978              		.loc 1 1392 0
 3979 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3980 000c 1846     		mov	r0, r3
 3981 000e FFF7FEFF 		bl	ETH_GetSocketStatus
 3982 0012 0346     		mov	r3, r0
 3983 0014 FB73     		strb	r3, [r7, #15]
1393:.\Generated_Source\PSoC5/ETH.c **** 	/* has a connection termination been requested by remote system */
1394:.\Generated_Source\PSoC5/ETH.c **** 	if (status == 0x1C) {
 3984              		.loc 1 1394 0
 3985 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3986 0018 1C2B     		cmp	r3, #28
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 96


 3987 001a 03D1     		bne	.L172
1395:.\Generated_Source\PSoC5/ETH.c **** 		/* Close the socket on this end */
1396:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketClose(socket);
 3988              		.loc 1 1396 0
 3989 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3990 001e 1846     		mov	r0, r3
 3991 0020 FFF7FEFF 		bl	ETH_SocketClose
 3992              	.L172:
1397:.\Generated_Source\PSoC5/ETH.c **** 	}
1398:.\Generated_Source\PSoC5/ETH.c **** 	return (ETH_GetSocketStatus(socket) == 0x00);
 3993              		.loc 1 1398 0
 3994 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3995 0026 1846     		mov	r0, r3
 3996 0028 FFF7FEFF 		bl	ETH_GetSocketStatus
 3997 002c 0346     		mov	r3, r0
 3998 002e 002B     		cmp	r3, #0
 3999 0030 14BF     		ite	ne
 4000 0032 0023     		movne	r3, #0
 4001 0034 0123     		moveq	r3, #1
 4002 0036 DBB2     		uxtb	r3, r3
1399:.\Generated_Source\PSoC5/ETH.c **** }
 4003              		.loc 1 1399 0
 4004 0038 1846     		mov	r0, r3
 4005 003a 07F11007 		add	r7, r7, #16
 4006 003e BD46     		mov	sp, r7
 4007 0040 80BD     		pop	{r7, pc}
 4008              		.cfi_endproc
 4009              	.LFE56:
 4010              		.size	ETH_SocketProcessConnections, .-ETH_SocketProcessConnections
 4011 0042 00BF     		.section	.text.ETH_SocketEstablished,"ax",%progbits
 4012              		.align	2
 4013              		.global	ETH_SocketEstablished
 4014              		.thumb
 4015              		.thumb_func
 4016              		.type	ETH_SocketEstablished, %function
 4017              	ETH_SocketEstablished:
 4018              	.LFB57:
1400:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1401:.\Generated_Source\PSoC5/ETH.c **** uint8
1402:.\Generated_Source\PSoC5/ETH.c **** ETH_SocketEstablished( uint8 socket )
1403:.\Generated_Source\PSoC5/ETH.c **** {
 4019              		.loc 1 1403 0
 4020              		.cfi_startproc
 4021              		@ args = 0, pretend = 0, frame = 16
 4022              		@ frame_needed = 1, uses_anonymous_args = 0
 4023 0000 80B5     		push	{r7, lr}
 4024              	.LCFI168:
 4025              		.cfi_def_cfa_offset 8
 4026              		.cfi_offset 7, -8
 4027              		.cfi_offset 14, -4
 4028 0002 84B0     		sub	sp, sp, #16
 4029              	.LCFI169:
 4030              		.cfi_def_cfa_offset 24
 4031 0004 00AF     		add	r7, sp, #0
 4032              	.LCFI170:
 4033              		.cfi_def_cfa_register 7
 4034 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 97


 4035 0008 FB71     		strb	r3, [r7, #7]
1404:.\Generated_Source\PSoC5/ETH.c **** 	uint8 result;
1405:.\Generated_Source\PSoC5/ETH.c **** 	
1406:.\Generated_Source\PSoC5/ETH.c **** 	result = 0;
 4036              		.loc 1 1406 0
 4037 000a 4FF00003 		mov	r3, #0
 4038 000e FB73     		strb	r3, [r7, #15]
1407:.\Generated_Source\PSoC5/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 4039              		.loc 1 1407 0
 4040 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4041 0012 072B     		cmp	r3, #7
 4042 0014 05D8     		bhi	.L175
1408:.\Generated_Source\PSoC5/ETH.c **** 		result = ETH_GetSocketStatus( socket );
 4043              		.loc 1 1408 0
 4044 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4045 0018 1846     		mov	r0, r3
 4046 001a FFF7FEFF 		bl	ETH_GetSocketStatus
 4047 001e 0346     		mov	r3, r0
 4048 0020 FB73     		strb	r3, [r7, #15]
 4049              	.L175:
1409:.\Generated_Source\PSoC5/ETH.c **** 	}
1410:.\Generated_Source\PSoC5/ETH.c **** 	return( result == 0x17);
 4050              		.loc 1 1410 0
 4051 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4052 0024 172B     		cmp	r3, #23
 4053 0026 14BF     		ite	ne
 4054 0028 0023     		movne	r3, #0
 4055 002a 0123     		moveq	r3, #1
 4056 002c DBB2     		uxtb	r3, r3
1411:.\Generated_Source\PSoC5/ETH.c **** }
 4057              		.loc 1 1411 0
 4058 002e 1846     		mov	r0, r3
 4059 0030 07F11007 		add	r7, r7, #16
 4060 0034 BD46     		mov	sp, r7
 4061 0036 80BD     		pop	{r7, pc}
 4062              		.cfi_endproc
 4063              	.LFE57:
 4064              		.size	ETH_SocketEstablished, .-ETH_SocketEstablished
 4065              		.section	.text.ETH_SocketSend,"ax",%progbits
 4066              		.align	2
 4067              		.global	ETH_SocketSend
 4068              		.thumb
 4069              		.thumb_func
 4070              		.type	ETH_SocketSend, %function
 4071              	ETH_SocketSend:
 4072              	.LFB58:
1412:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1413:.\Generated_Source\PSoC5/ETH.c **** /**
1414:.\Generated_Source\PSoC5/ETH.c ****  * \brief Transmit a SEND operation over a socket
1415:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket to which the send command will be sent
1416:.\Generated_Source\PSoC5/ETH.c ****  */
1417:.\Generated_Source\PSoC5/ETH.c **** void
1418:.\Generated_Source\PSoC5/ETH.c **** ETH_SocketSend(uint8 socket )
1419:.\Generated_Source\PSoC5/ETH.c **** {
 4073              		.loc 1 1419 0
 4074              		.cfi_startproc
 4075              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 98


 4076              		@ frame_needed = 1, uses_anonymous_args = 0
 4077 0000 80B5     		push	{r7, lr}
 4078              	.LCFI171:
 4079              		.cfi_def_cfa_offset 8
 4080              		.cfi_offset 7, -8
 4081              		.cfi_offset 14, -4
 4082 0002 84B0     		sub	sp, sp, #16
 4083              	.LCFI172:
 4084              		.cfi_def_cfa_offset 24
 4085 0004 00AF     		add	r7, sp, #0
 4086              	.LCFI173:
 4087              		.cfi_def_cfa_register 7
 4088 0006 0346     		mov	r3, r0
 4089 0008 FB71     		strb	r3, [r7, #7]
1420:.\Generated_Source\PSoC5/ETH.c **** 	uint8 ir;
1421:.\Generated_Source\PSoC5/ETH.c **** 	
1422:.\Generated_Source\PSoC5/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 4090              		.loc 1 1422 0
 4091 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4092 000c 072B     		cmp	r3, #7
 4093 000e 32D8     		bhi	.L177
1423:.\Generated_Source\PSoC5/ETH.c **** 		/* initialize the subnet mask register : ERRATA FIX */
1424:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSubnetMask( ETH_SubnetMask );
 4094              		.loc 1 1424 0
 4095 0010 40F20003 		movw	r3, #:lower16:ETH_SubnetMask
 4096 0014 C0F20003 		movt	r3, #:upper16:ETH_SubnetMask
 4097 0018 1B68     		ldr	r3, [r3, #0]
 4098 001a 1846     		mov	r0, r3
 4099 001c FFF7FEFF 		bl	ETH_SetSubnetMask
1425:.\Generated_Source\PSoC5/ETH.c **** 		/* Issue the SEND command */
1426:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x20 );
 4100              		.loc 1 1426 0
 4101 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4102 0022 1846     		mov	r0, r3
 4103 0024 4FF02001 		mov	r1, #32
 4104 0028 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1427:.\Generated_Source\PSoC5/ETH.c **** 		/* wait for the SEND to complete, or for a timeout */
1428:.\Generated_Source\PSoC5/ETH.c **** 		ir = ETH_GetSocketIR( socket );
 4105              		.loc 1 1428 0
 4106 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4107 002e 1846     		mov	r0, r3
 4108 0030 FFF7FEFF 		bl	ETH_GetSocketIR
 4109 0034 0346     		mov	r3, r0
 4110 0036 FB73     		strb	r3, [r7, #15]
1429:.\Generated_Source\PSoC5/ETH.c **** 		/* while SEND is not done, and the socket hasnot timed out or been dsconnected */
1430:.\Generated_Source\PSoC5/ETH.c **** 		while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4111              		.loc 1 1430 0
 4112 0038 09E0     		b	.L179
 4113              	.L181:
1431:.\Generated_Source\PSoC5/ETH.c **** 			CyDelay(1);
 4114              		.loc 1 1431 0
 4115 003a 4FF00100 		mov	r0, #1
 4116 003e FFF7FEFF 		bl	CyDelay
1432:.\Generated_Source\PSoC5/ETH.c **** 			ir = ETH_GetSocketIR( socket );
 4117              		.loc 1 1432 0
 4118 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4119 0044 1846     		mov	r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 99


 4120 0046 FFF7FEFF 		bl	ETH_GetSocketIR
 4121 004a 0346     		mov	r3, r0
 4122 004c FB73     		strb	r3, [r7, #15]
 4123              	.L179:
1430:.\Generated_Source\PSoC5/ETH.c **** 		while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4124              		.loc 1 1430 0 discriminator 1
 4125 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4126 0050 03F01003 		and	r3, r3, #16
 4127 0054 002B     		cmp	r3, #0
 4128 0056 04D1     		bne	.L180
1430:.\Generated_Source\PSoC5/ETH.c **** 		while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4129              		.loc 1 1430 0 is_stmt 0 discriminator 2
 4130 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4131 005a 03F00A03 		and	r3, r3, #10
 4132 005e 002B     		cmp	r3, #0
 4133 0060 EBD0     		beq	.L181
 4134              	.L180:
1433:.\Generated_Source\PSoC5/ETH.c **** 			
1434:.\Generated_Source\PSoC5/ETH.c **** 		}
1435:.\Generated_Source\PSoC5/ETH.c **** 		/* clear the SEND_OK flag from the register */
1436:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketIR( socket, 0x10 );
 4135              		.loc 1 1436 0 is_stmt 1
 4136 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4137 0064 1846     		mov	r0, r3
 4138 0066 4FF01001 		mov	r1, #16
 4139 006a FFF7FEFF 		bl	ETH_SetSocketIR
1437:.\Generated_Source\PSoC5/ETH.c **** 		/* reset the subnet mask : ERRATA FIX */
1438:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSubnetMask( 0 );
 4140              		.loc 1 1438 0
 4141 006e 4FF00000 		mov	r0, #0
 4142 0072 FFF7FEFF 		bl	ETH_SetSubnetMask
 4143              	.L177:
1439:.\Generated_Source\PSoC5/ETH.c **** 	}
1440:.\Generated_Source\PSoC5/ETH.c **** }
 4144              		.loc 1 1440 0
 4145 0076 07F11007 		add	r7, r7, #16
 4146 007a BD46     		mov	sp, r7
 4147 007c 80BD     		pop	{r7, pc}
 4148              		.cfi_endproc
 4149              	.LFE58:
 4150              		.size	ETH_SocketSend, .-ETH_SocketSend
 4151 007e 00BF     		.section	.text.ETH_SocketSendMac,"ax",%progbits
 4152              		.align	2
 4153              		.global	ETH_SocketSendMac
 4154              		.thumb
 4155              		.thumb_func
 4156              		.type	ETH_SocketSendMac, %function
 4157              	ETH_SocketSendMac:
 4158              	.LFB59:
1441:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1442:.\Generated_Source\PSoC5/ETH.c **** /**
1443:.\Generated_Source\PSoC5/ETH.c ****  * \brief Execute a SEND without an ARP.
1444:.\Generated_Source\PSoC5/ETH.c ****  * \param socket the socket to which the SEND will be executed.
1445:.\Generated_Source\PSoC5/ETH.c ****  */
1446:.\Generated_Source\PSoC5/ETH.c **** void
1447:.\Generated_Source\PSoC5/ETH.c **** ETH_SocketSendMac(uint8 socket )
1448:.\Generated_Source\PSoC5/ETH.c **** {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 100


 4159              		.loc 1 1448 0
 4160              		.cfi_startproc
 4161              		@ args = 0, pretend = 0, frame = 16
 4162              		@ frame_needed = 1, uses_anonymous_args = 0
 4163 0000 80B5     		push	{r7, lr}
 4164              	.LCFI174:
 4165              		.cfi_def_cfa_offset 8
 4166              		.cfi_offset 7, -8
 4167              		.cfi_offset 14, -4
 4168 0002 84B0     		sub	sp, sp, #16
 4169              	.LCFI175:
 4170              		.cfi_def_cfa_offset 24
 4171 0004 00AF     		add	r7, sp, #0
 4172              	.LCFI176:
 4173              		.cfi_def_cfa_register 7
 4174 0006 0346     		mov	r3, r0
 4175 0008 FB71     		strb	r3, [r7, #7]
1449:.\Generated_Source\PSoC5/ETH.c **** 	uint8 ir;
1450:.\Generated_Source\PSoC5/ETH.c **** 	
1451:.\Generated_Source\PSoC5/ETH.c **** 	/* initialize the subnet mask register : ERRATA FIX */
1452:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSubnetMask( ETH_SubnetMask );
 4176              		.loc 1 1452 0
 4177 000a 40F20003 		movw	r3, #:lower16:ETH_SubnetMask
 4178 000e C0F20003 		movt	r3, #:upper16:ETH_SubnetMask
 4179 0012 1B68     		ldr	r3, [r3, #0]
 4180 0014 1846     		mov	r0, r3
 4181 0016 FFF7FEFF 		bl	ETH_SetSubnetMask
1453:.\Generated_Source\PSoC5/ETH.c **** 	/* Issue the SEND command */
1454:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ExecuteSocketCommand( socket, 0x21 );
 4182              		.loc 1 1454 0
 4183 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4184 001c 1846     		mov	r0, r3
 4185 001e 4FF02101 		mov	r1, #33
 4186 0022 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1455:.\Generated_Source\PSoC5/ETH.c **** 	/* wait for the SEND to complete, or for a timeout */
1456:.\Generated_Source\PSoC5/ETH.c **** 	ir = ETH_GetSocketIR( socket );
 4187              		.loc 1 1456 0
 4188 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4189 0028 1846     		mov	r0, r3
 4190 002a FFF7FEFF 		bl	ETH_GetSocketIR
 4191 002e 0346     		mov	r3, r0
 4192 0030 FB73     		strb	r3, [r7, #15]
1457:.\Generated_Source\PSoC5/ETH.c **** 	/* while SEND is not done, and the socket hasnot timed out or been dsconnected */
1458:.\Generated_Source\PSoC5/ETH.c **** 	while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4193              		.loc 1 1458 0
 4194 0032 09E0     		b	.L183
 4195              	.L185:
1459:.\Generated_Source\PSoC5/ETH.c **** 		CyDelay(1);
 4196              		.loc 1 1459 0
 4197 0034 4FF00100 		mov	r0, #1
 4198 0038 FFF7FEFF 		bl	CyDelay
1460:.\Generated_Source\PSoC5/ETH.c **** 		ir = ETH_GetSocketIR( socket );
 4199              		.loc 1 1460 0
 4200 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4201 003e 1846     		mov	r0, r3
 4202 0040 FFF7FEFF 		bl	ETH_GetSocketIR
 4203 0044 0346     		mov	r3, r0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 101


 4204 0046 FB73     		strb	r3, [r7, #15]
 4205              	.L183:
1458:.\Generated_Source\PSoC5/ETH.c **** 	while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4206              		.loc 1 1458 0 discriminator 1
 4207 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4208 004a 03F01003 		and	r3, r3, #16
 4209 004e 002B     		cmp	r3, #0
 4210 0050 04D1     		bne	.L184
1458:.\Generated_Source\PSoC5/ETH.c **** 	while ( ((ir & 0x10) == 0) && (!(ir&0x0A)) ) {
 4211              		.loc 1 1458 0 is_stmt 0 discriminator 2
 4212 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4213 0054 03F00A03 		and	r3, r3, #10
 4214 0058 002B     		cmp	r3, #0
 4215 005a EBD0     		beq	.L185
 4216              	.L184:
1461:.\Generated_Source\PSoC5/ETH.c **** 		
1462:.\Generated_Source\PSoC5/ETH.c **** 	}
1463:.\Generated_Source\PSoC5/ETH.c **** 	/* clear the SEND_OK flag from the register */
1464:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSocketIR( socket, 0x10 );
 4217              		.loc 1 1464 0 is_stmt 1
 4218 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4219 005e 1846     		mov	r0, r3
 4220 0060 4FF01001 		mov	r1, #16
 4221 0064 FFF7FEFF 		bl	ETH_SetSocketIR
1465:.\Generated_Source\PSoC5/ETH.c **** 	/* reset the subnet mask : ERRATA FIX */
1466:.\Generated_Source\PSoC5/ETH.c **** 	ETH_SetSubnetMask( 0 );
 4222              		.loc 1 1466 0
 4223 0068 4FF00000 		mov	r0, #0
 4224 006c FFF7FEFF 		bl	ETH_SetSubnetMask
1467:.\Generated_Source\PSoC5/ETH.c **** }
 4225              		.loc 1 1467 0
 4226 0070 07F11007 		add	r7, r7, #16
 4227 0074 BD46     		mov	sp, r7
 4228 0076 80BD     		pop	{r7, pc}
 4229              		.cfi_endproc
 4230              	.LFE59:
 4231              		.size	ETH_SocketSendMac, .-ETH_SocketSendMac
 4232              		.section	.text.ETH_SocketRxDataWaiting,"ax",%progbits
 4233              		.align	2
 4234              		.global	ETH_SocketRxDataWaiting
 4235              		.thumb
 4236              		.thumb_func
 4237              		.type	ETH_SocketRxDataWaiting, %function
 4238              	ETH_SocketRxDataWaiting:
 4239              	.LFB60:
1468:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1469:.\Generated_Source\PSoC5/ETH.c **** uint16
1470:.\Generated_Source\PSoC5/ETH.c **** ETH_SocketRxDataWaiting( uint8 socket )
1471:.\Generated_Source\PSoC5/ETH.c **** {
 4240              		.loc 1 1471 0
 4241              		.cfi_startproc
 4242              		@ args = 0, pretend = 0, frame = 8
 4243              		@ frame_needed = 1, uses_anonymous_args = 0
 4244 0000 80B5     		push	{r7, lr}
 4245              	.LCFI177:
 4246              		.cfi_def_cfa_offset 8
 4247              		.cfi_offset 7, -8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 102


 4248              		.cfi_offset 14, -4
 4249 0002 82B0     		sub	sp, sp, #8
 4250              	.LCFI178:
 4251              		.cfi_def_cfa_offset 16
 4252 0004 00AF     		add	r7, sp, #0
 4253              	.LCFI179:
 4254              		.cfi_def_cfa_register 7
 4255 0006 0346     		mov	r3, r0
 4256 0008 FB71     		strb	r3, [r7, #7]
1472:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_GetRxSize( socket );
 4257              		.loc 1 1472 0
 4258 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4259 000c 1846     		mov	r0, r3
 4260 000e FFF7FEFF 		bl	ETH_GetRxSize
 4261 0012 0346     		mov	r3, r0
1473:.\Generated_Source\PSoC5/ETH.c **** }
 4262              		.loc 1 1473 0
 4263 0014 1846     		mov	r0, r3
 4264 0016 07F10807 		add	r7, r7, #8
 4265 001a BD46     		mov	sp, r7
 4266 001c 80BD     		pop	{r7, pc}
 4267              		.cfi_endproc
 4268              	.LFE60:
 4269              		.size	ETH_SocketRxDataWaiting, .-ETH_SocketRxDataWaiting
 4270 001e 00BF     		.section	.text.ETH_TcpOpen,"ax",%progbits
 4271              		.align	2
 4272              		.global	ETH_TcpOpen
 4273              		.thumb
 4274              		.thumb_func
 4275              		.type	ETH_TcpOpen, %function
 4276              	ETH_TcpOpen:
 4277              	.LFB61:
1474:.\Generated_Source\PSoC5/ETH.c **** #endif
1475:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
1476:.\Generated_Source\PSoC5/ETH.c **** /* TCP/IP */
1477:.\Generated_Source\PSoC5/ETH.c **** #if (1)
1478:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1479:.\Generated_Source\PSoC5/ETH.c **** uint8
1480:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpOpen(uint16 port)
1481:.\Generated_Source\PSoC5/ETH.c **** {
 4278              		.loc 1 1481 0
 4279              		.cfi_startproc
 4280              		@ args = 0, pretend = 0, frame = 8
 4281              		@ frame_needed = 1, uses_anonymous_args = 0
 4282 0000 80B5     		push	{r7, lr}
 4283              	.LCFI180:
 4284              		.cfi_def_cfa_offset 8
 4285              		.cfi_offset 7, -8
 4286              		.cfi_offset 14, -4
 4287 0002 82B0     		sub	sp, sp, #8
 4288              	.LCFI181:
 4289              		.cfi_def_cfa_offset 16
 4290 0004 00AF     		add	r7, sp, #0
 4291              	.LCFI182:
 4292              		.cfi_def_cfa_register 7
 4293 0006 0346     		mov	r3, r0
 4294 0008 FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 103


1482:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_SocketOpen(ETH_PROTO_TCP, port, 0);
 4295              		.loc 1 1482 0
 4296 000a FB88     		ldrh	r3, [r7, #6]
 4297 000c 4FF00100 		mov	r0, #1
 4298 0010 1946     		mov	r1, r3
 4299 0012 4FF00002 		mov	r2, #0
 4300 0016 FFF7FEFF 		bl	ETH_SocketOpen
 4301 001a 0346     		mov	r3, r0
1483:.\Generated_Source\PSoC5/ETH.c **** }
 4302              		.loc 1 1483 0
 4303 001c 1846     		mov	r0, r3
 4304 001e 07F10807 		add	r7, r7, #8
 4305 0022 BD46     		mov	sp, r7
 4306 0024 80BD     		pop	{r7, pc}
 4307              		.cfi_endproc
 4308              	.LFE61:
 4309              		.size	ETH_TcpOpen, .-ETH_TcpOpen
 4310 0026 00BF     		.section	.text.ETH_TcpStartServer,"ax",%progbits
 4311              		.align	2
 4312              		.global	ETH_TcpStartServer
 4313              		.thumb
 4314              		.thumb_func
 4315              		.type	ETH_TcpStartServer, %function
 4316              	ETH_TcpStartServer:
 4317              	.LFB62:
1484:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1485:.\Generated_Source\PSoC5/ETH.c **** void
1486:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpStartServer( uint8 socket )
1487:.\Generated_Source\PSoC5/ETH.c **** {
 4318              		.loc 1 1487 0
 4319              		.cfi_startproc
 4320              		@ args = 0, pretend = 0, frame = 8
 4321              		@ frame_needed = 1, uses_anonymous_args = 0
 4322 0000 80B5     		push	{r7, lr}
 4323              	.LCFI183:
 4324              		.cfi_def_cfa_offset 8
 4325              		.cfi_offset 7, -8
 4326              		.cfi_offset 14, -4
 4327 0002 82B0     		sub	sp, sp, #8
 4328              	.LCFI184:
 4329              		.cfi_def_cfa_offset 16
 4330 0004 00AF     		add	r7, sp, #0
 4331              	.LCFI185:
 4332              		.cfi_def_cfa_register 7
 4333 0006 0346     		mov	r3, r0
 4334 0008 FB71     		strb	r3, [r7, #7]
1488:.\Generated_Source\PSoC5/ETH.c **** 	/*
1489:.\Generated_Source\PSoC5/ETH.c **** 	 * Start a open socket listening for a connection
1490:.\Generated_Source\PSoC5/ETH.c **** 	 */
1491:.\Generated_Source\PSoC5/ETH.c **** 	/* was this a valid socket? */
1492:.\Generated_Source\PSoC5/ETH.c **** 	if (socket < ETH_MAX_SOCKET) {
 4335              		.loc 1 1492 0
 4336 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4337 000c 072B     		cmp	r3, #7
 4338 000e 05D8     		bhi	.L190
1493:.\Generated_Source\PSoC5/ETH.c **** 		/* Execute the listen command */
1494:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x02 );
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 104


 4339              		.loc 1 1494 0
 4340 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4341 0012 1846     		mov	r0, r3
 4342 0014 4FF00201 		mov	r1, #2
 4343 0018 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
 4344              	.L190:
1495:.\Generated_Source\PSoC5/ETH.c **** 	}
1496:.\Generated_Source\PSoC5/ETH.c **** }
 4345              		.loc 1 1496 0
 4346 001c 07F10807 		add	r7, r7, #8
 4347 0020 BD46     		mov	sp, r7
 4348 0022 80BD     		pop	{r7, pc}
 4349              		.cfi_endproc
 4350              	.LFE62:
 4351              		.size	ETH_TcpStartServer, .-ETH_TcpStartServer
 4352              		.section	.text.ETH_TcpStartServerWait,"ax",%progbits
 4353              		.align	2
 4354              		.global	ETH_TcpStartServerWait
 4355              		.thumb
 4356              		.thumb_func
 4357              		.type	ETH_TcpStartServerWait, %function
 4358              	ETH_TcpStartServerWait:
 4359              	.LFB63:
1497:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1498:.\Generated_Source\PSoC5/ETH.c **** void
1499:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpStartServerWait( uint8 socket )
1500:.\Generated_Source\PSoC5/ETH.c **** {
 4360              		.loc 1 1500 0
 4361              		.cfi_startproc
 4362              		@ args = 0, pretend = 0, frame = 16
 4363              		@ frame_needed = 1, uses_anonymous_args = 0
 4364 0000 80B5     		push	{r7, lr}
 4365              	.LCFI186:
 4366              		.cfi_def_cfa_offset 8
 4367              		.cfi_offset 7, -8
 4368              		.cfi_offset 14, -4
 4369 0002 84B0     		sub	sp, sp, #16
 4370              	.LCFI187:
 4371              		.cfi_def_cfa_offset 24
 4372 0004 00AF     		add	r7, sp, #0
 4373              	.LCFI188:
 4374              		.cfi_def_cfa_register 7
 4375 0006 0346     		mov	r3, r0
 4376 0008 FB71     		strb	r3, [r7, #7]
1501:.\Generated_Source\PSoC5/ETH.c **** 	uint8 status;
1502:.\Generated_Source\PSoC5/ETH.c **** 	
1503:.\Generated_Source\PSoC5/ETH.c **** 	/*
1504:.\Generated_Source\PSoC5/ETH.c **** 	 * Bug Patch: Exit Waiting for server when an invalid socket is passed
1505:.\Generated_Source\PSoC5/ETH.c **** 	 */
1506:.\Generated_Source\PSoC5/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return;
 4377              		.loc 1 1506 0
 4378 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4379 000c 072B     		cmp	r3, #7
 4380 000e 1FD8     		bhi	.L197
 4381              	.L193:
1507:.\Generated_Source\PSoC5/ETH.c **** 	ETH_TcpStartServer(socket);
 4382              		.loc 1 1507 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 105


 4383 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4384 0012 1846     		mov	r0, r3
 4385 0014 FFF7FEFF 		bl	ETH_TcpStartServer
1508:.\Generated_Source\PSoC5/ETH.c **** 	/* wait for socket establishment */
1509:.\Generated_Source\PSoC5/ETH.c **** 	/* Update Patch: Loop calls process connections to exit on a closed socket */
1510:.\Generated_Source\PSoC5/ETH.c **** 	status = ETH_GetSocketStatus(socket);
 4386              		.loc 1 1510 0
 4387 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4388 001a 1846     		mov	r0, r3
 4389 001c FFF7FEFF 		bl	ETH_GetSocketStatus
 4390 0020 0346     		mov	r3, r0
 4391 0022 FB73     		strb	r3, [r7, #15]
1511:.\Generated_Source\PSoC5/ETH.c **** 	while ( (status != 0x17 ) && (status != 0 ) ) {
 4392              		.loc 1 1511 0
 4393 0024 0DE0     		b	.L195
 4394              	.L196:
1512:.\Generated_Source\PSoC5/ETH.c **** 		CyDelay(1);
 4395              		.loc 1 1512 0
 4396 0026 4FF00100 		mov	r0, #1
 4397 002a FFF7FEFF 		bl	CyDelay
1513:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketProcessConnections( socket );
 4398              		.loc 1 1513 0
 4399 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4400 0030 1846     		mov	r0, r3
 4401 0032 FFF7FEFF 		bl	ETH_SocketProcessConnections
1514:.\Generated_Source\PSoC5/ETH.c **** 		status = ETH_GetSocketStatus( socket );
 4402              		.loc 1 1514 0
 4403 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4404 0038 1846     		mov	r0, r3
 4405 003a FFF7FEFF 		bl	ETH_GetSocketStatus
 4406 003e 0346     		mov	r3, r0
 4407 0040 FB73     		strb	r3, [r7, #15]
 4408              	.L195:
1511:.\Generated_Source\PSoC5/ETH.c **** 	while ( (status != 0x17 ) && (status != 0 ) ) {
 4409              		.loc 1 1511 0 discriminator 1
 4410 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4411 0044 172B     		cmp	r3, #23
 4412 0046 04D0     		beq	.L192
1511:.\Generated_Source\PSoC5/ETH.c **** 	while ( (status != 0x17 ) && (status != 0 ) ) {
 4413              		.loc 1 1511 0 is_stmt 0 discriminator 2
 4414 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4415 004a 002B     		cmp	r3, #0
 4416 004c EBD1     		bne	.L196
 4417 004e 00E0     		b	.L192
 4418              	.L197:
1506:.\Generated_Source\PSoC5/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return;
 4419              		.loc 1 1506 0 is_stmt 1
 4420 0050 00BF     		nop
 4421              	.L192:
1515:.\Generated_Source\PSoC5/ETH.c **** 	}
1516:.\Generated_Source\PSoC5/ETH.c **** }
 4422              		.loc 1 1516 0
 4423 0052 07F11007 		add	r7, r7, #16
 4424 0056 BD46     		mov	sp, r7
 4425 0058 80BD     		pop	{r7, pc}
 4426              		.cfi_endproc
 4427              	.LFE63:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 106


 4428              		.size	ETH_TcpStartServerWait, .-ETH_TcpStartServerWait
 4429 005a 00BF     		.section	.text.ETH_TcpConnect,"ax",%progbits
 4430              		.align	2
 4431              		.global	ETH_TcpConnect
 4432              		.thumb
 4433              		.thumb_func
 4434              		.type	ETH_TcpConnect, %function
 4435              	ETH_TcpConnect:
 4436              	.LFB64:
1517:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1518:.\Generated_Source\PSoC5/ETH.c **** void
1519:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpConnect( uint8 socket, uint32 ip, uint16 port )
1520:.\Generated_Source\PSoC5/ETH.c **** {
 4437              		.loc 1 1520 0
 4438              		.cfi_startproc
 4439              		@ args = 0, pretend = 0, frame = 16
 4440              		@ frame_needed = 1, uses_anonymous_args = 0
 4441 0000 80B5     		push	{r7, lr}
 4442              	.LCFI189:
 4443              		.cfi_def_cfa_offset 8
 4444              		.cfi_offset 7, -8
 4445              		.cfi_offset 14, -4
 4446 0002 84B0     		sub	sp, sp, #16
 4447              	.LCFI190:
 4448              		.cfi_def_cfa_offset 24
 4449 0004 00AF     		add	r7, sp, #0
 4450              	.LCFI191:
 4451              		.cfi_def_cfa_register 7
 4452 0006 3960     		str	r1, [r7, #0]
 4453 0008 1346     		mov	r3, r2
 4454 000a 0246     		mov	r2, r0
 4455 000c FA71     		strb	r2, [r7, #7]
 4456 000e BB80     		strh	r3, [r7, #4]	@ movhi
1521:.\Generated_Source\PSoC5/ETH.c **** 	uint32 timeout;
1522:.\Generated_Source\PSoC5/ETH.c **** 	uint8 ir;
1523:.\Generated_Source\PSoC5/ETH.c **** 	
1524:.\Generated_Source\PSoC5/ETH.c **** 	/* Exit when passed a closed or invalid socket */
1525:.\Generated_Source\PSoC5/ETH.c **** 	if ( socket >= ETH_MAX_SOCKET) return;
 4457              		.loc 1 1525 0
 4458 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4459 0012 072B     		cmp	r3, #7
 4460 0014 47D8     		bhi	.L204
 4461              	.L199:
1526:.\Generated_Source\PSoC5/ETH.c **** 	/* Check for a valid IP address */
1527:.\Generated_Source\PSoC5/ETH.c **** 	if ( (ip != 0xFFFFFFFF) && (ip != 0) ) {
 4462              		.loc 1 1527 0
 4463 0016 3B68     		ldr	r3, [r7, #0]
 4464 0018 B3F1FF3F 		cmp	r3, #-1
 4465 001c 44D0     		beq	.L198
 4466              		.loc 1 1527 0 is_stmt 0 discriminator 1
 4467 001e 3B68     		ldr	r3, [r7, #0]
 4468 0020 002B     		cmp	r3, #0
 4469 0022 41D0     		beq	.L198
1528:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketDestIP( socket, ip );
 4470              		.loc 1 1528 0 is_stmt 1
 4471 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4472 0026 1846     		mov	r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 107


 4473 0028 3968     		ldr	r1, [r7, #0]
 4474 002a FFF7FEFF 		bl	ETH_SetSocketDestIP
1529:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSocketDestPort( socket, port );
 4475              		.loc 1 1529 0
 4476 002e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4477 0030 BB88     		ldrh	r3, [r7, #4]
 4478 0032 1046     		mov	r0, r2
 4479 0034 1946     		mov	r1, r3
 4480 0036 FFF7FEFF 		bl	ETH_SetSocketDestPort
1530:.\Generated_Source\PSoC5/ETH.c **** 		/* set socket subnet mask */
1531:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSubnetMask( ETH_SubnetMask );
 4481              		.loc 1 1531 0
 4482 003a 40F20003 		movw	r3, #:lower16:ETH_SubnetMask
 4483 003e C0F20003 		movt	r3, #:upper16:ETH_SubnetMask
 4484 0042 1B68     		ldr	r3, [r3, #0]
 4485 0044 1846     		mov	r0, r3
 4486 0046 FFF7FEFF 		bl	ETH_SetSubnetMask
1532:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ExecuteSocketCommand( socket, 0x04);
 4487              		.loc 1 1532 0
 4488 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4489 004c 1846     		mov	r0, r3
 4490 004e 4FF00401 		mov	r1, #4
 4491 0052 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1533:.\Generated_Source\PSoC5/ETH.c **** 		/* wait for the socket connection to the remote host is established */
1534:.\Generated_Source\PSoC5/ETH.c **** 		while ( (!ETH_SocketEstablished(socket))  && (timeout < 3000) ) {
 4492              		.loc 1 1534 0
 4493 0056 15E0     		b	.L201
 4494              	.L203:
1535:.\Generated_Source\PSoC5/ETH.c **** 			CyDelay(1);
 4495              		.loc 1 1535 0
 4496 0058 4FF00100 		mov	r0, #1
 4497 005c FFF7FEFF 		bl	CyDelay
1536:.\Generated_Source\PSoC5/ETH.c **** 			++timeout;
 4498              		.loc 1 1536 0
 4499 0060 FB68     		ldr	r3, [r7, #12]
 4500 0062 03F10103 		add	r3, r3, #1
 4501 0066 FB60     		str	r3, [r7, #12]
1537:.\Generated_Source\PSoC5/ETH.c **** 			ir = ETH_GetSocketIR( socket );
 4502              		.loc 1 1537 0
 4503 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4504 006a 1846     		mov	r0, r3
 4505 006c FFF7FEFF 		bl	ETH_GetSocketIR
 4506 0070 0346     		mov	r3, r0
 4507 0072 FB72     		strb	r3, [r7, #11]
1538:.\Generated_Source\PSoC5/ETH.c **** 			if ( (ir & 0x08) != 0 ) {
 4508              		.loc 1 1538 0
 4509 0074 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4510 0076 03F00803 		and	r3, r3, #8
 4511 007a 002B     		cmp	r3, #0
 4512 007c 02D0     		beq	.L201
1539:.\Generated_Source\PSoC5/ETH.c **** 				/* internal chip timeout occured */
1540:.\Generated_Source\PSoC5/ETH.c **** 				timeout = 3000;
 4513              		.loc 1 1540 0
 4514 007e 40F6B833 		movw	r3, #3000
 4515 0082 FB60     		str	r3, [r7, #12]
 4516              	.L201:
1534:.\Generated_Source\PSoC5/ETH.c **** 		while ( (!ETH_SocketEstablished(socket))  && (timeout < 3000) ) {
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 108


 4517              		.loc 1 1534 0 discriminator 1
 4518 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4519 0086 1846     		mov	r0, r3
 4520 0088 FFF7FEFF 		bl	ETH_SocketEstablished
 4521 008c 0346     		mov	r3, r0
 4522 008e 002B     		cmp	r3, #0
 4523 0090 04D1     		bne	.L202
1534:.\Generated_Source\PSoC5/ETH.c **** 		while ( (!ETH_SocketEstablished(socket))  && (timeout < 3000) ) {
 4524              		.loc 1 1534 0 is_stmt 0 discriminator 2
 4525 0092 FA68     		ldr	r2, [r7, #12]
 4526 0094 40F6B733 		movw	r3, #2999
 4527 0098 9A42     		cmp	r2, r3
 4528 009a DDD9     		bls	.L203
 4529              	.L202:
1541:.\Generated_Source\PSoC5/ETH.c **** 			}
1542:.\Generated_Source\PSoC5/ETH.c **** 		}
1543:.\Generated_Source\PSoC5/ETH.c **** 		/* clear the Subnet mask register */
1544:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SetSubnetMask(0);
 4530              		.loc 1 1544 0 is_stmt 1
 4531 009c 4FF00000 		mov	r0, #0
 4532 00a0 FFF7FEFF 		bl	ETH_SetSubnetMask
 4533 00a4 00E0     		b	.L198
 4534              	.L204:
1525:.\Generated_Source\PSoC5/ETH.c **** 	if ( socket >= ETH_MAX_SOCKET) return;
 4535              		.loc 1 1525 0
 4536 00a6 00BF     		nop
 4537              	.L198:
1545:.\Generated_Source\PSoC5/ETH.c **** 	}
1546:.\Generated_Source\PSoC5/ETH.c **** }
 4538              		.loc 1 1546 0
 4539 00a8 07F11007 		add	r7, r7, #16
 4540 00ac BD46     		mov	sp, r7
 4541 00ae 80BD     		pop	{r7, pc}
 4542              		.cfi_endproc
 4543              	.LFE64:
 4544              		.size	ETH_TcpConnect, .-ETH_TcpConnect
 4545              		.section	.text.ETH_TcpConnected,"ax",%progbits
 4546              		.align	2
 4547              		.global	ETH_TcpConnected
 4548              		.thumb
 4549              		.thumb_func
 4550              		.type	ETH_TcpConnected, %function
 4551              	ETH_TcpConnected:
 4552              	.LFB65:
1547:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1548:.\Generated_Source\PSoC5/ETH.c **** uint8
1549:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpConnected( uint8 socket )
1550:.\Generated_Source\PSoC5/ETH.c **** { return ETH_SocketEstablished(socket); }
 4553              		.loc 1 1550 0
 4554              		.cfi_startproc
 4555              		@ args = 0, pretend = 0, frame = 8
 4556              		@ frame_needed = 1, uses_anonymous_args = 0
 4557 0000 80B5     		push	{r7, lr}
 4558              	.LCFI192:
 4559              		.cfi_def_cfa_offset 8
 4560              		.cfi_offset 7, -8
 4561              		.cfi_offset 14, -4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 109


 4562 0002 82B0     		sub	sp, sp, #8
 4563              	.LCFI193:
 4564              		.cfi_def_cfa_offset 16
 4565 0004 00AF     		add	r7, sp, #0
 4566              	.LCFI194:
 4567              		.cfi_def_cfa_register 7
 4568 0006 0346     		mov	r3, r0
 4569 0008 FB71     		strb	r3, [r7, #7]
 4570              		.loc 1 1550 0
 4571 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4572 000c 1846     		mov	r0, r3
 4573 000e FFF7FEFF 		bl	ETH_SocketEstablished
 4574 0012 0346     		mov	r3, r0
 4575 0014 1846     		mov	r0, r3
 4576 0016 07F10807 		add	r7, r7, #8
 4577 001a BD46     		mov	sp, r7
 4578 001c 80BD     		pop	{r7, pc}
 4579              		.cfi_endproc
 4580              	.LFE65:
 4581              		.size	ETH_TcpConnected, .-ETH_TcpConnected
 4582 001e 00BF     		.section	.text.ETH_TcpDisconnect,"ax",%progbits
 4583              		.align	2
 4584              		.global	ETH_TcpDisconnect
 4585              		.thumb
 4586              		.thumb_func
 4587              		.type	ETH_TcpDisconnect, %function
 4588              	ETH_TcpDisconnect:
 4589              	.LFB66:
1551:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1552:.\Generated_Source\PSoC5/ETH.c **** void
1553:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpDisconnect( uint8 socket )
1554:.\Generated_Source\PSoC5/ETH.c **** {
 4590              		.loc 1 1554 0
 4591              		.cfi_startproc
 4592              		@ args = 0, pretend = 0, frame = 8
 4593              		@ frame_needed = 1, uses_anonymous_args = 0
 4594 0000 80B5     		push	{r7, lr}
 4595              	.LCFI195:
 4596              		.cfi_def_cfa_offset 8
 4597              		.cfi_offset 7, -8
 4598              		.cfi_offset 14, -4
 4599 0002 82B0     		sub	sp, sp, #8
 4600              	.LCFI196:
 4601              		.cfi_def_cfa_offset 16
 4602 0004 00AF     		add	r7, sp, #0
 4603              	.LCFI197:
 4604              		.cfi_def_cfa_register 7
 4605 0006 0346     		mov	r3, r0
 4606 0008 FB71     		strb	r3, [r7, #7]
1555:.\Generated_Source\PSoC5/ETH.c **** 	ETH_ExecuteSocketCommand(socket, 0x08);
 4607              		.loc 1 1555 0
 4608 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4609 000c 1846     		mov	r0, r3
 4610 000e 4FF00801 		mov	r1, #8
 4611 0012 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1556:.\Generated_Source\PSoC5/ETH.c **** }
 4612              		.loc 1 1556 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 110


 4613 0016 07F10807 		add	r7, r7, #8
 4614 001a BD46     		mov	sp, r7
 4615 001c 80BD     		pop	{r7, pc}
 4616              		.cfi_endproc
 4617              	.LFE66:
 4618              		.size	ETH_TcpDisconnect, .-ETH_TcpDisconnect
 4619 001e 00BF     		.section	.text.ETH_TcpSend,"ax",%progbits
 4620              		.align	2
 4621              		.global	ETH_TcpSend
 4622              		.thumb
 4623              		.thumb_func
 4624              		.type	ETH_TcpSend, %function
 4625              	ETH_TcpSend:
 4626              	.LFB67:
1557:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1558:.\Generated_Source\PSoC5/ETH.c **** uint16
1559:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpSend(uint8 socket, uint8* buffer, uint16 len)
1560:.\Generated_Source\PSoC5/ETH.c **** {
 4627              		.loc 1 1560 0
 4628              		.cfi_startproc
 4629              		@ args = 0, pretend = 0, frame = 16
 4630              		@ frame_needed = 1, uses_anonymous_args = 0
 4631 0000 80B5     		push	{r7, lr}
 4632              	.LCFI198:
 4633              		.cfi_def_cfa_offset 8
 4634              		.cfi_offset 7, -8
 4635              		.cfi_offset 14, -4
 4636 0002 84B0     		sub	sp, sp, #16
 4637              	.LCFI199:
 4638              		.cfi_def_cfa_offset 24
 4639 0004 00AF     		add	r7, sp, #0
 4640              	.LCFI200:
 4641              		.cfi_def_cfa_register 7
 4642 0006 3960     		str	r1, [r7, #0]
 4643 0008 1346     		mov	r3, r2
 4644 000a 0246     		mov	r2, r0
 4645 000c FA71     		strb	r2, [r7, #7]
 4646 000e BB80     		strh	r3, [r7, #4]	@ movhi
1561:.\Generated_Source\PSoC5/ETH.c **** 	uint16 TxSize;
1562:.\Generated_Source\PSoC5/ETH.c **** 	uint16 FreeSpace;
1563:.\Generated_Source\PSoC5/ETH.c **** 	uint8 status;
1564:.\Generated_Source\PSoC5/ETH.c **** 	
1565:.\Generated_Source\PSoC5/ETH.c **** 	/* Update Patch: Exit immediately with 0 data tx on bad socket */
1566:.\Generated_Source\PSoC5/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 4647              		.loc 1 1566 0
 4648 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4649 0012 072B     		cmp	r3, #7
 4650 0014 02D9     		bls	.L209
 4651              		.loc 1 1566 0 is_stmt 0 discriminator 1
 4652 0016 4FF00003 		mov	r3, #0
 4653 001a 46E0     		b	.L210
 4654              	.L209:
1567:.\Generated_Source\PSoC5/ETH.c **** 	TxSize =  (len > 0x0800) ? 0x0800 : len;
 4655              		.loc 1 1567 0 is_stmt 1
 4656 001c BB88     		ldrh	r3, [r7, #4]
 4657 001e B3F5006F 		cmp	r3, #2048
 4658 0022 28BF     		it	cs
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 111


 4659 0024 4FF40063 		movcs	r3, #2048
 4660 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1568:.\Generated_Source\PSoC5/ETH.c **** 	/* check the connection status, and protocol of the socket */
1569:.\Generated_Source\PSoC5/ETH.c **** 	status = ETH_GetSocketStatus(socket);
 4661              		.loc 1 1569 0
 4662 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4663 002c 1846     		mov	r0, r3
 4664 002e FFF7FEFF 		bl	ETH_GetSocketStatus
 4665 0032 0346     		mov	r3, r0
 4666 0034 FB72     		strb	r3, [r7, #11]
1570:.\Generated_Source\PSoC5/ETH.c **** 	if ( ( status == 0x17) && (ETH_SocketConfig[socket].Protocol == ETH_PROTO_TCP) ) {
 4667              		.loc 1 1570 0
 4668 0036 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4669 0038 172B     		cmp	r3, #23
 4670 003a 32D1     		bne	.L211
 4671              		.loc 1 1570 0 is_stmt 0 discriminator 1
 4672 003c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4673 003e 40F20003 		movw	r3, #:lower16:ETH_SocketConfig
 4674 0042 C0F20003 		movt	r3, #:upper16:ETH_SocketConfig
 4675 0046 13F83230 		ldrb	r3, [r3, r2, lsl #3]	@ zero_extendqisi2
 4676 004a 012B     		cmp	r3, #1
 4677 004c 29D1     		bne	.L211
1571:.\Generated_Source\PSoC5/ETH.c **** 		/* 
1572:.\Generated_Source\PSoC5/ETH.c **** 		 * The socket was open with the correct protocol and is connected to
1573:.\Generated_Source\PSoC5/ETH.c **** 		 * a valid remote system. In order to send the requested packet data,
1574:.\Generated_Source\PSoC5/ETH.c **** 		 * first, we must wait for the available buffer memory to be free
1575:.\Generated_Source\PSoC5/ETH.c **** 		 * in the transmit buffer fifo.
1576:.\Generated_Source\PSoC5/ETH.c **** 		 */
1577:.\Generated_Source\PSoC5/ETH.c **** 		FreeSpace = 0;
 4678              		.loc 1 1577 0 is_stmt 1
 4679 004e 4FF00003 		mov	r3, #0
 4680 0052 BB81     		strh	r3, [r7, #12]	@ movhi
1578:.\Generated_Source\PSoC5/ETH.c **** 		status = 0x17;
 4681              		.loc 1 1578 0
 4682 0054 4FF01703 		mov	r3, #23
 4683 0058 FB72     		strb	r3, [r7, #11]
1579:.\Generated_Source\PSoC5/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
 4684              		.loc 1 1579 0
 4685 005a 0BE0     		b	.L212
 4686              	.L214:
1580:.\Generated_Source\PSoC5/ETH.c **** 			FreeSpace = ETH_GetTxFreeSize( socket );
 4687              		.loc 1 1580 0
 4688 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4689 005e 1846     		mov	r0, r3
 4690 0060 FFF7FEFF 		bl	ETH_GetTxFreeSize
 4691 0064 0346     		mov	r3, r0
 4692 0066 BB81     		strh	r3, [r7, #12]	@ movhi
1581:.\Generated_Source\PSoC5/ETH.c **** 			status = ETH_GetSocketStatus( socket );
 4693              		.loc 1 1581 0
 4694 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4695 006a 1846     		mov	r0, r3
 4696 006c FFF7FEFF 		bl	ETH_GetSocketStatus
 4697 0070 0346     		mov	r3, r0
 4698 0072 FB72     		strb	r3, [r7, #11]
 4699              	.L212:
1579:.\Generated_Source\PSoC5/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
 4700              		.loc 1 1579 0 discriminator 1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 112


 4701 0074 BA89     		ldrh	r2, [r7, #12]
 4702 0076 FB89     		ldrh	r3, [r7, #14]
 4703 0078 9A42     		cmp	r2, r3
 4704 007a 05D2     		bcs	.L213
1579:.\Generated_Source\PSoC5/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
 4705              		.loc 1 1579 0 is_stmt 0 discriminator 2
 4706 007c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4707 007e 172B     		cmp	r3, #23
 4708 0080 02D1     		bne	.L213
1579:.\Generated_Source\PSoC5/ETH.c **** 		while ( (FreeSpace < TxSize) && ( (status == 0x17) && (status != 0x1C) ) ) {
 4709              		.loc 1 1579 0 discriminator 1
 4710 0082 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4711 0084 1C2B     		cmp	r3, #28
 4712 0086 E9D1     		bne	.L214
 4713              	.L213:
1582:.\Generated_Source\PSoC5/ETH.c **** 		}
1583:.\Generated_Source\PSoC5/ETH.c **** 		/*
1584:.\Generated_Source\PSoC5/ETH.c **** 		 * Write the data buffer to the chip Tx Buffer, then issue
1585:.\Generated_Source\PSoC5/ETH.c **** 		 * the chip SEND command
1586:.\Generated_Source\PSoC5/ETH.c **** 		 */
1587:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ProcessTxData(socket, 0, buffer, TxSize);
 4714              		.loc 1 1587 0 is_stmt 1
 4715 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4716 008a FB89     		ldrh	r3, [r7, #14]
 4717 008c 1046     		mov	r0, r2
 4718 008e 4FF00001 		mov	r1, #0
 4719 0092 3A68     		ldr	r2, [r7, #0]
 4720 0094 FFF7FEFF 		bl	ETH_ProcessTxData
1588:.\Generated_Source\PSoC5/ETH.c **** 		ETH_SocketSend( socket );
 4721              		.loc 1 1588 0
 4722 0098 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4723 009a 1846     		mov	r0, r3
 4724 009c FFF7FEFF 		bl	ETH_SocketSend
 4725 00a0 02E0     		b	.L215
 4726              	.L211:
1589:.\Generated_Source\PSoC5/ETH.c **** 	}
1590:.\Generated_Source\PSoC5/ETH.c **** 	else {
1591:.\Generated_Source\PSoC5/ETH.c **** 		/*
1592:.\Generated_Source\PSoC5/ETH.c **** 		 * the socket was not establised, or there was an error, so clear
1593:.\Generated_Source\PSoC5/ETH.c **** 		 * the TxSize to signal that no data has bee sent
1594:.\Generated_Source\PSoC5/ETH.c **** 		 */
1595:.\Generated_Source\PSoC5/ETH.c **** 		TxSize = 0;
 4727              		.loc 1 1595 0
 4728 00a2 4FF00003 		mov	r3, #0
 4729 00a6 FB81     		strh	r3, [r7, #14]	@ movhi
 4730              	.L215:
1596:.\Generated_Source\PSoC5/ETH.c **** 	}
1597:.\Generated_Source\PSoC5/ETH.c **** 	return TxSize;
 4731              		.loc 1 1597 0
 4732 00a8 FB89     		ldrh	r3, [r7, #14]
 4733              	.L210:
1598:.\Generated_Source\PSoC5/ETH.c **** }
 4734              		.loc 1 1598 0
 4735 00aa 1846     		mov	r0, r3
 4736 00ac 07F11007 		add	r7, r7, #16
 4737 00b0 BD46     		mov	sp, r7
 4738 00b2 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 113


 4739              		.cfi_endproc
 4740              	.LFE67:
 4741              		.size	ETH_TcpSend, .-ETH_TcpSend
 4742              		.section	.text.ETH_TcpReceive,"ax",%progbits
 4743              		.align	2
 4744              		.global	ETH_TcpReceive
 4745              		.thumb
 4746              		.thumb_func
 4747              		.type	ETH_TcpReceive, %function
 4748              	ETH_TcpReceive:
 4749              	.LFB68:
1599:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1600:.\Generated_Source\PSoC5/ETH.c **** uint16
1601:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpReceive( uint8 socket, uint8* buffer, uint16 length )
1602:.\Generated_Source\PSoC5/ETH.c **** {
 4750              		.loc 1 1602 0
 4751              		.cfi_startproc
 4752              		@ args = 0, pretend = 0, frame = 16
 4753              		@ frame_needed = 1, uses_anonymous_args = 0
 4754 0000 80B5     		push	{r7, lr}
 4755              	.LCFI201:
 4756              		.cfi_def_cfa_offset 8
 4757              		.cfi_offset 7, -8
 4758              		.cfi_offset 14, -4
 4759 0002 86B0     		sub	sp, sp, #24
 4760              	.LCFI202:
 4761              		.cfi_def_cfa_offset 32
 4762 0004 02AF     		add	r7, sp, #8
 4763              	.LCFI203:
 4764              		.cfi_def_cfa 7, 24
 4765 0006 3960     		str	r1, [r7, #0]
 4766 0008 1346     		mov	r3, r2
 4767 000a 0246     		mov	r2, r0
 4768 000c FA71     		strb	r2, [r7, #7]
 4769 000e BB80     		strh	r3, [r7, #4]	@ movhi
1603:.\Generated_Source\PSoC5/ETH.c **** 	uint16 RxSize;
1604:.\Generated_Source\PSoC5/ETH.c **** 
1605:.\Generated_Source\PSoC5/ETH.c **** 	/*
1606:.\Generated_Source\PSoC5/ETH.c **** 	 * Revision Update:
1607:.\Generated_Source\PSoC5/ETH.c **** 	 * Removed dead code, added exit when there is an invlaid socket specified
1608:.\Generated_Source\PSoC5/ETH.c **** 	 */
1609:.\Generated_Source\PSoC5/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 4770              		.loc 1 1609 0
 4771 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4772 0012 072B     		cmp	r3, #7
 4773 0014 02D9     		bls	.L217
 4774              		.loc 1 1609 0 is_stmt 0 discriminator 1
 4775 0016 4FF00003 		mov	r3, #0
 4776 001a 20E0     		b	.L218
 4777              	.L217:
1610:.\Generated_Source\PSoC5/ETH.c **** 	/*
1611:.\Generated_Source\PSoC5/ETH.c **** 	 * read the number of waiting bytes in the buffer memory
1612:.\Generated_Source\PSoC5/ETH.c **** 	 * but, clip the length of data read to the requested
1613:.\Generated_Source\PSoC5/ETH.c **** 	 * length of data.
1614:.\Generated_Source\PSoC5/ETH.c **** 	 */
1615:.\Generated_Source\PSoC5/ETH.c **** 	RxSize = ETH_GetRxSize( socket );
 4778              		.loc 1 1615 0 is_stmt 1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 114


 4779 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4780 001e 1846     		mov	r0, r3
 4781 0020 FFF7FEFF 		bl	ETH_GetRxSize
 4782 0024 0346     		mov	r3, r0
 4783 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1616:.\Generated_Source\PSoC5/ETH.c **** 	RxSize = (RxSize > length) ? length : RxSize;
 4784              		.loc 1 1616 0
 4785 0028 FA89     		ldrh	r2, [r7, #14]
 4786 002a BB88     		ldrh	r3, [r7, #4]
 4787 002c 9A42     		cmp	r2, r3
 4788 002e 38BF     		it	cc
 4789 0030 1346     		movcc	r3, r2
 4790 0032 FB81     		strh	r3, [r7, #14]	@ movhi
1617:.\Generated_Source\PSoC5/ETH.c **** 	/* If there was waiting data, read it from the buffer */
1618:.\Generated_Source\PSoC5/ETH.c **** 	if (RxSize > 0) {
 4791              		.loc 1 1618 0
 4792 0034 FB89     		ldrh	r3, [r7, #14]
 4793 0036 002B     		cmp	r3, #0
 4794 0038 10D0     		beq	.L219
1619:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ProcessRxData( socket, 0, buffer, RxSize, 0);
 4795              		.loc 1 1619 0
 4796 003a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4797 003c FB89     		ldrh	r3, [r7, #14]
 4798 003e 4FF00001 		mov	r1, #0
 4799 0042 0091     		str	r1, [sp, #0]
 4800 0044 1046     		mov	r0, r2
 4801 0046 4FF00001 		mov	r1, #0
 4802 004a 3A68     		ldr	r2, [r7, #0]
 4803 004c FFF7FEFF 		bl	ETH_ProcessRxData
1620:.\Generated_Source\PSoC5/ETH.c **** 		/* 
1621:.\Generated_Source\PSoC5/ETH.c **** 		 * after reading the buffer data, send the receive command
1622:.\Generated_Source\PSoC5/ETH.c **** 		 * to the socket so that the W5100 completes the read
1623:.\Generated_Source\PSoC5/ETH.c **** 		 */
1624:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ExecuteSocketCommand(socket, 0x40);
 4804              		.loc 1 1624 0
 4805 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4806 0052 1846     		mov	r0, r3
 4807 0054 4FF04001 		mov	r1, #64
 4808 0058 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
 4809              	.L219:
1625:.\Generated_Source\PSoC5/ETH.c **** 	}
1626:.\Generated_Source\PSoC5/ETH.c **** 	
1627:.\Generated_Source\PSoC5/ETH.c **** 	/* return the number of read bytes from the buffer memory */
1628:.\Generated_Source\PSoC5/ETH.c **** 	return RxSize;
 4810              		.loc 1 1628 0
 4811 005c FB89     		ldrh	r3, [r7, #14]
 4812              	.L218:
1629:.\Generated_Source\PSoC5/ETH.c **** }
 4813              		.loc 1 1629 0
 4814 005e 1846     		mov	r0, r3
 4815 0060 07F11007 		add	r7, r7, #16
 4816 0064 BD46     		mov	sp, r7
 4817 0066 80BD     		pop	{r7, pc}
 4818              		.cfi_endproc
 4819              	.LFE68:
 4820              		.size	ETH_TcpReceive, .-ETH_TcpReceive
 4821              		.section	.text.ETH_TcpPrint,"ax",%progbits
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 115


 4822              		.align	2
 4823              		.global	ETH_TcpPrint
 4824              		.thumb
 4825              		.thumb_func
 4826              		.type	ETH_TcpPrint, %function
 4827              	ETH_TcpPrint:
 4828              	.LFB69:
1630:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1631:.\Generated_Source\PSoC5/ETH.c **** void
1632:.\Generated_Source\PSoC5/ETH.c **** ETH_TcpPrint( uint8 socket, const char* str )
1633:.\Generated_Source\PSoC5/ETH.c **** {
 4829              		.loc 1 1633 0
 4830              		.cfi_startproc
 4831              		@ args = 0, pretend = 0, frame = 8
 4832              		@ frame_needed = 1, uses_anonymous_args = 0
 4833 0000 80B5     		push	{r7, lr}
 4834              	.LCFI204:
 4835              		.cfi_def_cfa_offset 8
 4836              		.cfi_offset 7, -8
 4837              		.cfi_offset 14, -4
 4838 0002 82B0     		sub	sp, sp, #8
 4839              	.LCFI205:
 4840              		.cfi_def_cfa_offset 16
 4841 0004 00AF     		add	r7, sp, #0
 4842              	.LCFI206:
 4843              		.cfi_def_cfa_register 7
 4844 0006 0346     		mov	r3, r0
 4845 0008 3960     		str	r1, [r7, #0]
 4846 000a FB71     		strb	r3, [r7, #7]
1634:.\Generated_Source\PSoC5/ETH.c **** 	ETH_TcpSend(socket, (uint8*)str, strlen(str));
 4847              		.loc 1 1634 0
 4848 000c 3868     		ldr	r0, [r7, #0]
 4849 000e FFF7FEFF 		bl	strlen
 4850 0012 0346     		mov	r3, r0
 4851 0014 9BB2     		uxth	r3, r3
 4852 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4853 0018 1046     		mov	r0, r2
 4854 001a 3968     		ldr	r1, [r7, #0]
 4855 001c 1A46     		mov	r2, r3
 4856 001e FFF7FEFF 		bl	ETH_TcpSend
1635:.\Generated_Source\PSoC5/ETH.c **** }
 4857              		.loc 1 1635 0
 4858 0022 07F10807 		add	r7, r7, #8
 4859 0026 BD46     		mov	sp, r7
 4860 0028 80BD     		pop	{r7, pc}
 4861              		.cfi_endproc
 4862              	.LFE69:
 4863              		.size	ETH_TcpPrint, .-ETH_TcpPrint
 4864 002a 00BF     		.section	.text.ETH_UdpOpen,"ax",%progbits
 4865              		.align	2
 4866              		.global	ETH_UdpOpen
 4867              		.thumb
 4868              		.thumb_func
 4869              		.type	ETH_UdpOpen, %function
 4870              	ETH_UdpOpen:
 4871              	.LFB70:
1636:.\Generated_Source\PSoC5/ETH.c **** #endif
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 116


1637:.\Generated_Source\PSoC5/ETH.c **** /* ======================================================================== */
1638:.\Generated_Source\PSoC5/ETH.c **** /* UDP */
1639:.\Generated_Source\PSoC5/ETH.c **** #if (1)
1640:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1641:.\Generated_Source\PSoC5/ETH.c **** uint8
1642:.\Generated_Source\PSoC5/ETH.c **** ETH_UdpOpen(uint16 port)
1643:.\Generated_Source\PSoC5/ETH.c **** {
 4872              		.loc 1 1643 0
 4873              		.cfi_startproc
 4874              		@ args = 0, pretend = 0, frame = 8
 4875              		@ frame_needed = 1, uses_anonymous_args = 0
 4876 0000 80B5     		push	{r7, lr}
 4877              	.LCFI207:
 4878              		.cfi_def_cfa_offset 8
 4879              		.cfi_offset 7, -8
 4880              		.cfi_offset 14, -4
 4881 0002 82B0     		sub	sp, sp, #8
 4882              	.LCFI208:
 4883              		.cfi_def_cfa_offset 16
 4884 0004 00AF     		add	r7, sp, #0
 4885              	.LCFI209:
 4886              		.cfi_def_cfa_register 7
 4887 0006 0346     		mov	r3, r0
 4888 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1644:.\Generated_Source\PSoC5/ETH.c **** 	return ETH_SocketOpen(ETH_PROTO_UDP, port, 0);
 4889              		.loc 1 1644 0
 4890 000a FB88     		ldrh	r3, [r7, #6]
 4891 000c 4FF00200 		mov	r0, #2
 4892 0010 1946     		mov	r1, r3
 4893 0012 4FF00002 		mov	r2, #0
 4894 0016 FFF7FEFF 		bl	ETH_SocketOpen
 4895 001a 0346     		mov	r3, r0
1645:.\Generated_Source\PSoC5/ETH.c **** }
 4896              		.loc 1 1645 0
 4897 001c 1846     		mov	r0, r3
 4898 001e 07F10807 		add	r7, r7, #8
 4899 0022 BD46     		mov	sp, r7
 4900 0024 80BD     		pop	{r7, pc}
 4901              		.cfi_endproc
 4902              	.LFE70:
 4903              		.size	ETH_UdpOpen, .-ETH_UdpOpen
 4904 0026 00BF     		.section	.text.ETH_UdpSend,"ax",%progbits
 4905              		.align	2
 4906              		.global	ETH_UdpSend
 4907              		.thumb
 4908              		.thumb_func
 4909              		.type	ETH_UdpSend, %function
 4910              	ETH_UdpSend:
 4911              	.LFB71:
1646:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */	
1647:.\Generated_Source\PSoC5/ETH.c **** uint16
1648:.\Generated_Source\PSoC5/ETH.c **** ETH_UdpSend(uint8 socket, uint32 ip, uint16 port, uint8* buffer, uint16 length)
1649:.\Generated_Source\PSoC5/ETH.c **** {
 4912              		.loc 1 1649 0
 4913              		.cfi_startproc
 4914              		@ args = 4, pretend = 0, frame = 24
 4915              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 117


 4916 0000 80B5     		push	{r7, lr}
 4917              	.LCFI210:
 4918              		.cfi_def_cfa_offset 8
 4919              		.cfi_offset 7, -8
 4920              		.cfi_offset 14, -4
 4921 0002 86B0     		sub	sp, sp, #24
 4922              	.LCFI211:
 4923              		.cfi_def_cfa_offset 32
 4924 0004 00AF     		add	r7, sp, #0
 4925              	.LCFI212:
 4926              		.cfi_def_cfa_register 7
 4927 0006 B960     		str	r1, [r7, #8]
 4928 0008 7B60     		str	r3, [r7, #4]
 4929 000a 0346     		mov	r3, r0
 4930 000c FB73     		strb	r3, [r7, #15]
 4931 000e 1346     		mov	r3, r2	@ movhi
 4932 0010 BB81     		strh	r3, [r7, #12]	@ movhi
1650:.\Generated_Source\PSoC5/ETH.c **** 	uint16 TxSize;
1651:.\Generated_Source\PSoC5/ETH.c **** 	
1652:.\Generated_Source\PSoC5/ETH.c **** 	/*
1653:.\Generated_Source\PSoC5/ETH.c **** 	 * 2.0 Patch: retun immediately upon the detection of a socket that is not open
1654:.\Generated_Source\PSoC5/ETH.c **** 	 */
1655:.\Generated_Source\PSoC5/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 4933              		.loc 1 1655 0
 4934 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4935 0014 072B     		cmp	r3, #7
 4936 0016 02D9     		bls	.L224
 4937              		.loc 1 1655 0 is_stmt 0 discriminator 1
 4938 0018 4FF00003 		mov	r3, #0
 4939 001c 30E0     		b	.L225
 4940              	.L224:
1656:.\Generated_Source\PSoC5/ETH.c **** 	/*
1657:.\Generated_Source\PSoC5/ETH.c **** 	 * Transmit a buffer of data to a specified remote system using UDP.
1658:.\Generated_Source\PSoC5/ETH.c **** 	 */
1659:.\Generated_Source\PSoC5/ETH.c **** 	if (ETH_GetSocketStatus(socket) == 0x17) {
 4941              		.loc 1 1659 0 is_stmt 1
 4942 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4943 0020 1846     		mov	r0, r3
 4944 0022 FFF7FEFF 		bl	ETH_GetSocketStatus
 4945 0026 0346     		mov	r3, r0
 4946 0028 172B     		cmp	r3, #23
 4947 002a 28D1     		bne	.L226
1660:.\Generated_Source\PSoC5/ETH.c **** 		/*
1661:.\Generated_Source\PSoC5/ETH.c **** 		 * The socket has been established, so wait for available
1662:.\Generated_Source\PSoC5/ETH.c **** 		 * room in the transmit buffer of the socket, but, trim the
1663:.\Generated_Source\PSoC5/ETH.c **** 		 * transmitted data length to no more than the available
1664:.\Generated_Source\PSoC5/ETH.c **** 		 * buffer size in the device. (2K)
1665:.\Generated_Source\PSoC5/ETH.c **** 		 */
1666:.\Generated_Source\PSoC5/ETH.c **** 		TxSize = (length > 0x0800) ? 0x0800 : length;
 4948              		.loc 1 1666 0
 4949 002c 3B8C     		ldrh	r3, [r7, #32]
 4950 002e B3F5006F 		cmp	r3, #2048
 4951 0032 28BF     		it	cs
 4952 0034 4FF40063 		movcs	r3, #2048
 4953 0038 FB82     		strh	r3, [r7, #22]	@ movhi
1667:.\Generated_Source\PSoC5/ETH.c **** 		if ( (ip != 0) && (ip != 0xFFFFFFFF) ) {
 4954              		.loc 1 1667 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 118


 4955 003a BB68     		ldr	r3, [r7, #8]
 4956 003c 002B     		cmp	r3, #0
 4957 003e 1BD0     		beq	.L227
 4958              		.loc 1 1667 0 is_stmt 0 discriminator 1
 4959 0040 BB68     		ldr	r3, [r7, #8]
 4960 0042 B3F1FF3F 		cmp	r3, #-1
 4961 0046 17D0     		beq	.L227
1668:.\Generated_Source\PSoC5/ETH.c **** 			/*
1669:.\Generated_Source\PSoC5/ETH.c **** 			 * Store the destination IP and port in the chip
1670:.\Generated_Source\PSoC5/ETH.c **** 			 * socket registers.
1671:.\Generated_Source\PSoC5/ETH.c **** 			 */
1672:.\Generated_Source\PSoC5/ETH.c **** 			ETH_SetSocketDestIP( socket, ip );
 4962              		.loc 1 1672 0 is_stmt 1
 4963 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4964 004a 1846     		mov	r0, r3
 4965 004c B968     		ldr	r1, [r7, #8]
 4966 004e FFF7FEFF 		bl	ETH_SetSocketDestIP
1673:.\Generated_Source\PSoC5/ETH.c **** 			ETH_SetSocketDestPort( socket, port );
 4967              		.loc 1 1673 0
 4968 0052 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4969 0054 BB89     		ldrh	r3, [r7, #12]
 4970 0056 1046     		mov	r0, r2
 4971 0058 1946     		mov	r1, r3
 4972 005a FFF7FEFF 		bl	ETH_SetSocketDestPort
1674:.\Generated_Source\PSoC5/ETH.c **** 			/*
1675:.\Generated_Source\PSoC5/ETH.c **** 			 * process the transmission buffer, and write it in to
1676:.\Generated_Source\PSoC5/ETH.c **** 			 * the chip buffer memory.
1677:.\Generated_Source\PSoC5/ETH.c **** 			 */
1678:.\Generated_Source\PSoC5/ETH.c **** 			ETH_ProcessTxData(socket,0,buffer,TxSize);
 4973              		.loc 1 1678 0
 4974 005e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4975 0060 FB8A     		ldrh	r3, [r7, #22]
 4976 0062 1046     		mov	r0, r2
 4977 0064 4FF00001 		mov	r1, #0
 4978 0068 7A68     		ldr	r2, [r7, #4]
 4979 006a FFF7FEFF 		bl	ETH_ProcessTxData
1679:.\Generated_Source\PSoC5/ETH.c **** 			/*
1680:.\Generated_Source\PSoC5/ETH.c **** 			 * Issue the send command to transmit the buffer.
1681:.\Generated_Source\PSoC5/ETH.c **** 			 */
1682:.\Generated_Source\PSoC5/ETH.c **** 			ETH_SocketSend( socket ); 
 4980              		.loc 1 1682 0
 4981 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4982 0070 1846     		mov	r0, r3
 4983 0072 FFF7FEFF 		bl	ETH_SocketSend
 4984 0076 02E0     		b	.L226
 4985              	.L227:
1683:.\Generated_Source\PSoC5/ETH.c **** 		}
1684:.\Generated_Source\PSoC5/ETH.c **** 		else {
1685:.\Generated_Source\PSoC5/ETH.c **** 			/* an invalid IP address was issued, so return that no data was sent. */
1686:.\Generated_Source\PSoC5/ETH.c **** 			TxSize = 0;
 4986              		.loc 1 1686 0
 4987 0078 4FF00003 		mov	r3, #0
 4988 007c FB82     		strh	r3, [r7, #22]	@ movhi
 4989              	.L226:
1687:.\Generated_Source\PSoC5/ETH.c **** 		}
1688:.\Generated_Source\PSoC5/ETH.c **** 	}
1689:.\Generated_Source\PSoC5/ETH.c **** 	return TxSize;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 119


 4990              		.loc 1 1689 0
 4991 007e FB8A     		ldrh	r3, [r7, #22]
 4992              	.L225:
1690:.\Generated_Source\PSoC5/ETH.c **** }
 4993              		.loc 1 1690 0
 4994 0080 1846     		mov	r0, r3
 4995 0082 07F11807 		add	r7, r7, #24
 4996 0086 BD46     		mov	sp, r7
 4997 0088 80BD     		pop	{r7, pc}
 4998              		.cfi_endproc
 4999              	.LFE71:
 5000              		.size	ETH_UdpSend, .-ETH_UdpSend
 5001 008a 00BF     		.section	.text.ETH_UdpReceive,"ax",%progbits
 5002              		.align	2
 5003              		.global	ETH_UdpReceive
 5004              		.thumb
 5005              		.thumb_func
 5006              		.type	ETH_UdpReceive, %function
 5007              	ETH_UdpReceive:
 5008              	.LFB72:
1691:.\Generated_Source\PSoC5/ETH.c **** /* ------------------------------------------------------------------------ */
1692:.\Generated_Source\PSoC5/ETH.c **** uint16
1693:.\Generated_Source\PSoC5/ETH.c **** ETH_UdpReceive(uint8 socket, uint32 *ip, uint16 *port, uint8* buffer, uint16 length)
1694:.\Generated_Source\PSoC5/ETH.c **** {
 5009              		.loc 1 1694 0
 5010              		.cfi_startproc
 5011              		@ args = 4, pretend = 0, frame = 32
 5012              		@ frame_needed = 1, uses_anonymous_args = 0
 5013 0000 80B5     		push	{r7, lr}
 5014              	.LCFI213:
 5015              		.cfi_def_cfa_offset 8
 5016              		.cfi_offset 7, -8
 5017              		.cfi_offset 14, -4
 5018 0002 8AB0     		sub	sp, sp, #40
 5019              	.LCFI214:
 5020              		.cfi_def_cfa_offset 48
 5021 0004 02AF     		add	r7, sp, #8
 5022              	.LCFI215:
 5023              		.cfi_def_cfa 7, 40
 5024 0006 B960     		str	r1, [r7, #8]
 5025 0008 7A60     		str	r2, [r7, #4]
 5026 000a 3B60     		str	r3, [r7, #0]
 5027 000c 0346     		mov	r3, r0
 5028 000e FB73     		strb	r3, [r7, #15]
1695:.\Generated_Source\PSoC5/ETH.c **** 	uint16 RxSize;
1696:.\Generated_Source\PSoC5/ETH.c **** 	uint16 PacketSize;
1697:.\Generated_Source\PSoC5/ETH.c **** 	uint8  PacketHeader[8];
1698:.\Generated_Source\PSoC5/ETH.c **** 	
1699:.\Generated_Source\PSoC5/ETH.c **** 	/*
1700:.\Generated_Source\PSoC5/ETH.c **** 	 * 2.0 Patch: retun immediately upon the detection of a socket that is not open
1701:.\Generated_Source\PSoC5/ETH.c **** 	 */
1702:.\Generated_Source\PSoC5/ETH.c **** 	if (socket >= ETH_MAX_SOCKET) return 0;
 5029              		.loc 1 1702 0
 5030 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5031 0012 072B     		cmp	r3, #7
 5032 0014 02D9     		bls	.L229
 5033              		.loc 1 1702 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 120


 5034 0016 4FF00003 		mov	r3, #0
 5035 001a 6CE0     		b	.L235
 5036              	.L229:
1703:.\Generated_Source\PSoC5/ETH.c **** 	/*
1704:.\Generated_Source\PSoC5/ETH.c **** 	 * read the number of waiting bytes in the buffer memory
1705:.\Generated_Source\PSoC5/ETH.c **** 	 * but, clip the length of data read to the requested
1706:.\Generated_Source\PSoC5/ETH.c **** 	 * length of data.
1707:.\Generated_Source\PSoC5/ETH.c **** 	 */
1708:.\Generated_Source\PSoC5/ETH.c **** 	RxSize = ETH_GetRxSize( socket );
 5037              		.loc 1 1708 0 is_stmt 1
 5038 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5039 001e 1846     		mov	r0, r3
 5040 0020 FFF7FEFF 		bl	ETH_GetRxSize
 5041 0024 0346     		mov	r3, r0
 5042 0026 FB83     		strh	r3, [r7, #30]	@ movhi
1709:.\Generated_Source\PSoC5/ETH.c **** 	RxSize = (RxSize > length+8) ? length : RxSize;
 5043              		.loc 1 1709 0
 5044 0028 FA8B     		ldrh	r2, [r7, #30]
 5045 002a 3B8D     		ldrh	r3, [r7, #40]
 5046 002c 03F10803 		add	r3, r3, #8
 5047 0030 9A42     		cmp	r2, r3
 5048 0032 01DD     		ble	.L231
 5049              		.loc 1 1709 0 is_stmt 0 discriminator 1
 5050 0034 3B8D     		ldrh	r3, [r7, #40]
 5051 0036 00E0     		b	.L232
 5052              	.L231:
 5053              		.loc 1 1709 0 discriminator 2
 5054 0038 FB8B     		ldrh	r3, [r7, #30]
 5055              	.L232:
 5056              		.loc 1 1709 0 discriminator 3
 5057 003a FB83     		strh	r3, [r7, #30]	@ movhi
1710:.\Generated_Source\PSoC5/ETH.c **** 	/* If there was waiting data, read it from the buffer */
1711:.\Generated_Source\PSoC5/ETH.c **** 	if (RxSize > 0) {
 5058              		.loc 1 1711 0 is_stmt 1 discriminator 3
 5059 003c FB8B     		ldrh	r3, [r7, #30]
 5060 003e 002B     		cmp	r3, #0
 5061 0040 58D0     		beq	.L233
1712:.\Generated_Source\PSoC5/ETH.c **** 		/*
1713:.\Generated_Source\PSoC5/ETH.c **** 		 * the UDP packet is stored in the buffer memory as an 8-byte
1714:.\Generated_Source\PSoC5/ETH.c **** 		 * packet header followed by the packet data.
1715:.\Generated_Source\PSoC5/ETH.c **** 		*/
1716:.\Generated_Source\PSoC5/ETH.c **** 		ETH_ProcessRxData( socket, 0, &PacketHeader[0], 8, 0);
 5062              		.loc 1 1716 0
 5063 0042 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5064 0044 07F11403 		add	r3, r7, #20
 5065 0048 4FF00001 		mov	r1, #0
 5066 004c 0091     		str	r1, [sp, #0]
 5067 004e 1046     		mov	r0, r2
 5068 0050 4FF00001 		mov	r1, #0
 5069 0054 1A46     		mov	r2, r3
 5070 0056 4FF00803 		mov	r3, #8
 5071 005a FFF7FEFF 		bl	ETH_ProcessRxData
1717:.\Generated_Source\PSoC5/ETH.c **** 		/*
1718:.\Generated_Source\PSoC5/ETH.c **** 		 * The packet header contains the 4-byte IP address followed by the
1719:.\Generated_Source\PSoC5/ETH.c **** 		 * 2-byte port number and the 2-byte packet data length
1720:.\Generated_Source\PSoC5/ETH.c **** 		 */
1721:.\Generated_Source\PSoC5/ETH.c **** 		*ip = ETH_IPADDRESS(PacketHeader[0], PacketHeader[1], PacketHeader[2], PacketHeader[3]);
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 121


 5072              		.loc 1 1721 0
 5073 005e 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 5074 0060 1A46     		mov	r2, r3
 5075 0062 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 5076 0064 4FEA0323 		lsl	r3, r3, #8
 5077 0068 4FEA0343 		lsl	r3, r3, #16
 5078 006c 4FEA1343 		lsr	r3, r3, #16
 5079 0070 D218     		adds	r2, r2, r3
 5080 0072 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 5081 0074 4FEA0343 		lsl	r3, r3, #16
 5082 0078 03F47F03 		and	r3, r3, #16711680
 5083 007c D218     		adds	r2, r2, r3
 5084 007e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5085 0080 4FEA0363 		lsl	r3, r3, #24
 5086 0084 D218     		adds	r2, r2, r3
 5087 0086 BB68     		ldr	r3, [r7, #8]
 5088 0088 1A60     		str	r2, [r3, #0]
1722:.\Generated_Source\PSoC5/ETH.c **** 		*port = (uint16)((PacketHeader[4]<<8)&0xFF00) | (PacketHeader[5]&0x00FF);
 5089              		.loc 1 1722 0
 5090 008a 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 5091 008c 4FEA0323 		lsl	r3, r3, #8
 5092 0090 9BB2     		uxth	r3, r3
 5093 0092 23F0FF03 		bic	r3, r3, #255
 5094 0096 9AB2     		uxth	r2, r3
 5095 0098 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 5096 009a 1343     		orrs	r3, r3, r2
 5097 009c 9BB2     		uxth	r3, r3
 5098 009e 9AB2     		uxth	r2, r3
 5099 00a0 7B68     		ldr	r3, [r7, #4]
 5100 00a2 1A80     		strh	r2, [r3, #0]	@ movhi
1723:.\Generated_Source\PSoC5/ETH.c **** 		PacketSize = (uint16)((PacketHeader[6]<<8)&0xFF00) | (PacketHeader[7]&0x00FF);
 5101              		.loc 1 1723 0
 5102 00a4 BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 5103 00a6 4FEA0323 		lsl	r3, r3, #8
 5104 00aa 9BB2     		uxth	r3, r3
 5105 00ac 23F0FF03 		bic	r3, r3, #255
 5106 00b0 9AB2     		uxth	r2, r3
 5107 00b2 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 5108 00b4 1343     		orrs	r3, r3, r2
 5109 00b6 9BB2     		uxth	r3, r3
 5110 00b8 BB83     		strh	r3, [r7, #28]	@ movhi
1724:.\Generated_Source\PSoC5/ETH.c **** 		/*
1725:.\Generated_Source\PSoC5/ETH.c **** 		 * Check to make sure that the packet data has been received completely
1726:.\Generated_Source\PSoC5/ETH.c **** 		 */
1727:.\Generated_Source\PSoC5/ETH.c **** 		if (RxSize >= (PacketSize+8) ) {
 5111              		.loc 1 1727 0
 5112 00ba FA8B     		ldrh	r2, [r7, #30]
 5113 00bc BB8B     		ldrh	r3, [r7, #28]
 5114 00be 03F10803 		add	r3, r3, #8
 5115 00c2 9A42     		cmp	r2, r3
 5116 00c4 13DB     		blt	.L234
1728:.\Generated_Source\PSoC5/ETH.c **** 		
1729:.\Generated_Source\PSoC5/ETH.c **** 			ETH_ProcessRxData( socket, 8, buffer, PacketSize, 0);
 5117              		.loc 1 1729 0
 5118 00c6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5119 00c8 BB8B     		ldrh	r3, [r7, #28]
 5120 00ca 4FF00001 		mov	r1, #0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 122


 5121 00ce 0091     		str	r1, [sp, #0]
 5122 00d0 1046     		mov	r0, r2
 5123 00d2 4FF00801 		mov	r1, #8
 5124 00d6 3A68     		ldr	r2, [r7, #0]
 5125 00d8 FFF7FEFF 		bl	ETH_ProcessRxData
1730:.\Generated_Source\PSoC5/ETH.c **** 			/* 
1731:.\Generated_Source\PSoC5/ETH.c **** 			 * after reading the buffer data, send the receive command
1732:.\Generated_Source\PSoC5/ETH.c **** 			 * to the socket so that the W5100 completes the read
1733:.\Generated_Source\PSoC5/ETH.c **** 			 */
1734:.\Generated_Source\PSoC5/ETH.c **** 			ETH_ExecuteSocketCommand(socket, 0x40);
 5126              		.loc 1 1734 0
 5127 00dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5128 00de 1846     		mov	r0, r3
 5129 00e0 4FF04001 		mov	r1, #64
 5130 00e4 FFF7FEFF 		bl	ETH_ExecuteSocketCommand
1735:.\Generated_Source\PSoC5/ETH.c **** 			RxSize = PacketSize;
 5131              		.loc 1 1735 0
 5132 00e8 BB8B     		ldrh	r3, [r7, #28]	@ movhi
 5133 00ea FB83     		strh	r3, [r7, #30]	@ movhi
 5134 00ec 02E0     		b	.L233
 5135              	.L234:
1736:.\Generated_Source\PSoC5/ETH.c **** 		}
1737:.\Generated_Source\PSoC5/ETH.c **** 		else {
1738:.\Generated_Source\PSoC5/ETH.c **** 			RxSize = 8;
 5136              		.loc 1 1738 0
 5137 00ee 4FF00803 		mov	r3, #8
 5138 00f2 FB83     		strh	r3, [r7, #30]	@ movhi
 5139              	.L233:
1739:.\Generated_Source\PSoC5/ETH.c **** 		}
1740:.\Generated_Source\PSoC5/ETH.c **** 	}
1741:.\Generated_Source\PSoC5/ETH.c **** 	
1742:.\Generated_Source\PSoC5/ETH.c **** 	/* return the number of read bytes from the buffer memory */
1743:.\Generated_Source\PSoC5/ETH.c **** 	return RxSize;
 5140              		.loc 1 1743 0
 5141 00f4 FB8B     		ldrh	r3, [r7, #30]
 5142              	.L235:
1744:.\Generated_Source\PSoC5/ETH.c **** }
 5143              		.loc 1 1744 0
 5144 00f6 1846     		mov	r0, r3
 5145 00f8 07F12007 		add	r7, r7, #32
 5146 00fc BD46     		mov	sp, r7
 5147 00fe 80BD     		pop	{r7, pc}
 5148              		.cfi_endproc
 5149              	.LFE72:
 5150              		.size	ETH_UdpReceive, .-ETH_UdpReceive
 5151              		.text
 5152              	.Letext0:
 5153              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 5154              		.section	.debug_info,"",%progbits
 5155              	.Ldebug_info0:
 5156 0000 57150000 		.4byte	0x1557
 5157 0004 0200     		.2byte	0x2
 5158 0006 00000000 		.4byte	.Ldebug_abbrev0
 5159 000a 04       		.byte	0x4
 5160 000b 01       		.uleb128 0x1
 5161 000c 7E050000 		.4byte	.LASF144
 5162 0010 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 123


 5163 0011 26000000 		.4byte	.LASF145
 5164 0015 9D010000 		.4byte	.LASF146
 5165 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5166 001d 00000000 		.4byte	0
 5167 0021 00000000 		.4byte	0
 5168 0025 00000000 		.4byte	.Ldebug_line0
 5169 0029 02       		.uleb128 0x2
 5170 002a 01       		.byte	0x1
 5171 002b 06       		.byte	0x6
 5172 002c 7F010000 		.4byte	.LASF0
 5173 0030 02       		.uleb128 0x2
 5174 0031 01       		.byte	0x1
 5175 0032 08       		.byte	0x8
 5176 0033 CC050000 		.4byte	.LASF1
 5177 0037 02       		.uleb128 0x2
 5178 0038 02       		.byte	0x2
 5179 0039 05       		.byte	0x5
 5180 003a F9050000 		.4byte	.LASF2
 5181 003e 02       		.uleb128 0x2
 5182 003f 02       		.byte	0x2
 5183 0040 07       		.byte	0x7
 5184 0041 D8030000 		.4byte	.LASF3
 5185 0045 02       		.uleb128 0x2
 5186 0046 04       		.byte	0x4
 5187 0047 05       		.byte	0x5
 5188 0048 68020000 		.4byte	.LASF4
 5189 004c 02       		.uleb128 0x2
 5190 004d 04       		.byte	0x4
 5191 004e 07       		.byte	0x7
 5192 004f B2030000 		.4byte	.LASF5
 5193 0053 02       		.uleb128 0x2
 5194 0054 08       		.byte	0x8
 5195 0055 05       		.byte	0x5
 5196 0056 71010000 		.4byte	.LASF6
 5197 005a 02       		.uleb128 0x2
 5198 005b 08       		.byte	0x8
 5199 005c 07       		.byte	0x7
 5200 005d F4000000 		.4byte	.LASF7
 5201 0061 03       		.uleb128 0x3
 5202 0062 04       		.byte	0x4
 5203 0063 05       		.byte	0x5
 5204 0064 696E7400 		.ascii	"int\000"
 5205 0068 02       		.uleb128 0x2
 5206 0069 04       		.byte	0x4
 5207 006a 07       		.byte	0x7
 5208 006b 5F030000 		.4byte	.LASF8
 5209 006f 04       		.uleb128 0x4
 5210 0070 7E020000 		.4byte	.LASF9
 5211 0074 02       		.byte	0x2
 5212 0075 5B       		.byte	0x5b
 5213 0076 30000000 		.4byte	0x30
 5214 007a 04       		.uleb128 0x4
 5215 007b 45000000 		.4byte	.LASF10
 5216 007f 02       		.byte	0x2
 5217 0080 5C       		.byte	0x5c
 5218 0081 3E000000 		.4byte	0x3e
 5219 0085 04       		.uleb128 0x4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 124


 5220 0086 EB020000 		.4byte	.LASF11
 5221 008a 02       		.byte	0x2
 5222 008b 5D       		.byte	0x5d
 5223 008c 4C000000 		.4byte	0x4c
 5224 0090 02       		.uleb128 0x2
 5225 0091 04       		.byte	0x4
 5226 0092 04       		.byte	0x4
 5227 0093 43050000 		.4byte	.LASF12
 5228 0097 02       		.uleb128 0x2
 5229 0098 08       		.byte	0x8
 5230 0099 04       		.byte	0x4
 5231 009a A2020000 		.4byte	.LASF13
 5232 009e 02       		.uleb128 0x2
 5233 009f 01       		.byte	0x1
 5234 00a0 08       		.byte	0x8
 5235 00a1 C2060000 		.4byte	.LASF14
 5236 00a5 04       		.uleb128 0x4
 5237 00a6 F1070000 		.4byte	.LASF15
 5238 00aa 02       		.byte	0x2
 5239 00ab E8       		.byte	0xe8
 5240 00ac 4C000000 		.4byte	0x4c
 5241 00b0 02       		.uleb128 0x2
 5242 00b1 04       		.byte	0x4
 5243 00b2 07       		.byte	0x7
 5244 00b3 D8040000 		.4byte	.LASF16
 5245 00b7 05       		.uleb128 0x5
 5246 00b8 04       		.byte	0x4
 5247 00b9 9E000000 		.4byte	0x9e
 5248 00bd 05       		.uleb128 0x5
 5249 00be 04       		.byte	0x4
 5250 00bf C3000000 		.4byte	0xc3
 5251 00c3 06       		.uleb128 0x6
 5252 00c4 9E000000 		.4byte	0x9e
 5253 00c8 07       		.uleb128 0x7
 5254 00c9 08       		.byte	0x8
 5255 00ca 01       		.byte	0x1
 5256 00cb 32       		.byte	0x32
 5257 00cc 25010000 		.4byte	0x125
 5258 00d0 08       		.uleb128 0x8
 5259 00d1 1E010000 		.4byte	.LASF17
 5260 00d5 01       		.byte	0x1
 5261 00d6 34       		.byte	0x34
 5262 00d7 6F000000 		.4byte	0x6f
 5263 00db 02       		.byte	0x2
 5264 00dc 23       		.byte	0x23
 5265 00dd 00       		.uleb128 0
 5266 00de 08       		.uleb128 0x8
 5267 00df 0E050000 		.4byte	.LASF18
 5268 00e3 01       		.byte	0x1
 5269 00e4 35       		.byte	0x35
 5270 00e5 6F000000 		.4byte	0x6f
 5271 00e9 02       		.byte	0x2
 5272 00ea 23       		.byte	0x23
 5273 00eb 01       		.uleb128 0x1
 5274 00ec 08       		.uleb128 0x8
 5275 00ed FE010000 		.4byte	.LASF19
 5276 00f1 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 125


 5277 00f2 36       		.byte	0x36
 5278 00f3 7A000000 		.4byte	0x7a
 5279 00f7 02       		.byte	0x2
 5280 00f8 23       		.byte	0x23
 5281 00f9 02       		.uleb128 0x2
 5282 00fa 08       		.uleb128 0x8
 5283 00fb 7A060000 		.4byte	.LASF20
 5284 00ff 01       		.byte	0x1
 5285 0100 37       		.byte	0x37
 5286 0101 6F000000 		.4byte	0x6f
 5287 0105 02       		.byte	0x2
 5288 0106 23       		.byte	0x23
 5289 0107 04       		.uleb128 0x4
 5290 0108 08       		.uleb128 0x8
 5291 0109 E1040000 		.4byte	.LASF21
 5292 010d 01       		.byte	0x1
 5293 010e 38       		.byte	0x38
 5294 010f 6F000000 		.4byte	0x6f
 5295 0113 02       		.byte	0x2
 5296 0114 23       		.byte	0x23
 5297 0115 05       		.uleb128 0x5
 5298 0116 08       		.uleb128 0x8
 5299 0117 F2060000 		.4byte	.LASF22
 5300 011b 01       		.byte	0x1
 5301 011c 39       		.byte	0x39
 5302 011d 6F000000 		.4byte	0x6f
 5303 0121 02       		.byte	0x2
 5304 0122 23       		.byte	0x23
 5305 0123 06       		.uleb128 0x6
 5306 0124 00       		.byte	0
 5307 0125 04       		.uleb128 0x4
 5308 0126 C1000000 		.4byte	.LASF23
 5309 012a 01       		.byte	0x1
 5310 012b 3A       		.byte	0x3a
 5311 012c C8000000 		.4byte	0xc8
 5312 0130 09       		.uleb128 0x9
 5313 0131 01       		.byte	0x1
 5314 0132 CC060000 		.4byte	.LASF24
 5315 0136 01       		.byte	0x1
 5316 0137 79       		.byte	0x79
 5317 0138 01       		.byte	0x1
 5318 0139 00000000 		.4byte	.LFB0
 5319 013d 0E000000 		.4byte	.LFE0
 5320 0141 00000000 		.4byte	.LLST0
 5321 0145 01       		.byte	0x1
 5322 0146 09       		.uleb128 0x9
 5323 0147 01       		.byte	0x1
 5324 0148 1F080000 		.4byte	.LASF25
 5325 014c 01       		.byte	0x1
 5326 014d 96       		.byte	0x96
 5327 014e 01       		.byte	0x1
 5328 014f 00000000 		.4byte	.LFB1
 5329 0153 0E000000 		.4byte	.LFE1
 5330 0157 2C000000 		.4byte	.LLST1
 5331 015b 01       		.byte	0x1
 5332 015c 0A       		.uleb128 0xa
 5333 015d 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 126


 5334 015e 0B010000 		.4byte	.LASF31
 5335 0162 01       		.byte	0x1
 5336 0163 BA       		.byte	0xba
 5337 0164 01       		.byte	0x1
 5338 0165 00000000 		.4byte	.LFB2
 5339 0169 0C010000 		.4byte	.LFE2
 5340 016d 58000000 		.4byte	.LLST2
 5341 0171 01       		.byte	0x1
 5342 0172 D9010000 		.4byte	0x1d9
 5343 0176 0B       		.uleb128 0xb
 5344 0177 19010000 		.4byte	.LASF26
 5345 017b 01       		.byte	0x1
 5346 017c BA       		.byte	0xba
 5347 017d 7A000000 		.4byte	0x7a
 5348 0181 02       		.byte	0x2
 5349 0182 91       		.byte	0x91
 5350 0183 6E       		.sleb128 -18
 5351 0184 0C       		.uleb128 0xc
 5352 0185 64617400 		.ascii	"dat\000"
 5353 0189 01       		.byte	0x1
 5354 018a BA       		.byte	0xba
 5355 018b D9010000 		.4byte	0x1d9
 5356 018f 02       		.byte	0x2
 5357 0190 91       		.byte	0x91
 5358 0191 68       		.sleb128 -24
 5359 0192 0B       		.uleb128 0xb
 5360 0193 BB060000 		.4byte	.LASF27
 5361 0197 01       		.byte	0x1
 5362 0198 BA       		.byte	0xba
 5363 0199 7A000000 		.4byte	0x7a
 5364 019d 02       		.byte	0x2
 5365 019e 91       		.byte	0x91
 5366 019f 6C       		.sleb128 -20
 5367 01a0 0D       		.uleb128 0xd
 5368 01a1 78020000 		.4byte	.LASF28
 5369 01a5 01       		.byte	0x1
 5370 01a6 BC       		.byte	0xbc
 5371 01a7 7A000000 		.4byte	0x7a
 5372 01ab 02       		.byte	0x2
 5373 01ac 91       		.byte	0x91
 5374 01ad 76       		.sleb128 -10
 5375 01ae 0D       		.uleb128 0xd
 5376 01af 51020000 		.4byte	.LASF29
 5377 01b3 01       		.byte	0x1
 5378 01b4 BD       		.byte	0xbd
 5379 01b5 7A000000 		.4byte	0x7a
 5380 01b9 02       		.byte	0x2
 5381 01ba 91       		.byte	0x91
 5382 01bb 74       		.sleb128 -12
 5383 01bc 0E       		.uleb128 0xe
 5384 01bd 61647200 		.ascii	"adr\000"
 5385 01c1 01       		.byte	0x1
 5386 01c2 BE       		.byte	0xbe
 5387 01c3 7A000000 		.4byte	0x7a
 5388 01c7 02       		.byte	0x2
 5389 01c8 91       		.byte	0x91
 5390 01c9 72       		.sleb128 -14
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 127


 5391 01ca 0D       		.uleb128 0xd
 5392 01cb 4C000000 		.4byte	.LASF30
 5393 01cf 01       		.byte	0x1
 5394 01d0 BF       		.byte	0xbf
 5395 01d1 6F000000 		.4byte	0x6f
 5396 01d5 02       		.byte	0x2
 5397 01d6 91       		.byte	0x91
 5398 01d7 71       		.sleb128 -15
 5399 01d8 00       		.byte	0
 5400 01d9 05       		.uleb128 0x5
 5401 01da 04       		.byte	0x4
 5402 01db 6F000000 		.4byte	0x6f
 5403 01df 0F       		.uleb128 0xf
 5404 01e0 01       		.byte	0x1
 5405 01e1 FC030000 		.4byte	.LASF32
 5406 01e5 01       		.byte	0x1
 5407 01e6 0F01     		.2byte	0x10f
 5408 01e8 01       		.byte	0x1
 5409 01e9 00000000 		.4byte	.LFB3
 5410 01ed 0A010000 		.4byte	.LFE3
 5411 01f1 90000000 		.4byte	.LLST3
 5412 01f5 01       		.byte	0x1
 5413 01f6 91020000 		.4byte	0x291
 5414 01fa 10       		.uleb128 0x10
 5415 01fb 19010000 		.4byte	.LASF26
 5416 01ff 01       		.byte	0x1
 5417 0200 0F01     		.2byte	0x10f
 5418 0202 7A000000 		.4byte	0x7a
 5419 0206 02       		.byte	0x2
 5420 0207 91       		.byte	0x91
 5421 0208 66       		.sleb128 -26
 5422 0209 11       		.uleb128 0x11
 5423 020a 64617400 		.ascii	"dat\000"
 5424 020e 01       		.byte	0x1
 5425 020f 0F01     		.2byte	0x10f
 5426 0211 D9010000 		.4byte	0x1d9
 5427 0215 02       		.byte	0x2
 5428 0216 91       		.byte	0x91
 5429 0217 60       		.sleb128 -32
 5430 0218 10       		.uleb128 0x10
 5431 0219 BB060000 		.4byte	.LASF27
 5432 021d 01       		.byte	0x1
 5433 021e 0F01     		.2byte	0x10f
 5434 0220 7A000000 		.4byte	0x7a
 5435 0224 02       		.byte	0x2
 5436 0225 91       		.byte	0x91
 5437 0226 64       		.sleb128 -28
 5438 0227 12       		.uleb128 0x12
 5439 0228 FA070000 		.4byte	.LASF33
 5440 022c 01       		.byte	0x1
 5441 022d 1101     		.2byte	0x111
 5442 022f 7A000000 		.4byte	0x7a
 5443 0233 02       		.byte	0x2
 5444 0234 91       		.byte	0x91
 5445 0235 76       		.sleb128 -10
 5446 0236 12       		.uleb128 0x12
 5447 0237 FA040000 		.4byte	.LASF34
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 128


 5448 023b 01       		.byte	0x1
 5449 023c 1201     		.2byte	0x112
 5450 023e 7A000000 		.4byte	0x7a
 5451 0242 02       		.byte	0x2
 5452 0243 91       		.byte	0x91
 5453 0244 74       		.sleb128 -12
 5454 0245 12       		.uleb128 0x12
 5455 0246 19080000 		.4byte	.LASF35
 5456 024a 01       		.byte	0x1
 5457 024b 1301     		.2byte	0x113
 5458 024d 7A000000 		.4byte	0x7a
 5459 0251 02       		.byte	0x2
 5460 0252 91       		.byte	0x91
 5461 0253 6C       		.sleb128 -20
 5462 0254 12       		.uleb128 0x12
 5463 0255 86040000 		.4byte	.LASF36
 5464 0259 01       		.byte	0x1
 5465 025a 1401     		.2byte	0x114
 5466 025c 7A000000 		.4byte	0x7a
 5467 0260 02       		.byte	0x2
 5468 0261 91       		.byte	0x91
 5469 0262 72       		.sleb128 -14
 5470 0263 12       		.uleb128 0x12
 5471 0264 B3070000 		.4byte	.LASF37
 5472 0268 01       		.byte	0x1
 5473 0269 1501     		.2byte	0x115
 5474 026b 6F000000 		.4byte	0x6f
 5475 026f 02       		.byte	0x2
 5476 0270 91       		.byte	0x91
 5477 0271 71       		.sleb128 -15
 5478 0272 12       		.uleb128 0x12
 5479 0273 F6010000 		.4byte	.LASF38
 5480 0277 01       		.byte	0x1
 5481 0278 1601     		.2byte	0x116
 5482 027a 7A000000 		.4byte	0x7a
 5483 027e 02       		.byte	0x2
 5484 027f 91       		.byte	0x91
 5485 0280 6E       		.sleb128 -18
 5486 0281 13       		.uleb128 0x13
 5487 0282 72786200 		.ascii	"rxb\000"
 5488 0286 01       		.byte	0x1
 5489 0287 1701     		.2byte	0x117
 5490 0289 6F000000 		.4byte	0x6f
 5491 028d 02       		.byte	0x2
 5492 028e 91       		.byte	0x91
 5493 028f 6B       		.sleb128 -21
 5494 0290 00       		.byte	0
 5495 0291 0F       		.uleb128 0xf
 5496 0292 01       		.byte	0x1
 5497 0293 53070000 		.4byte	.LASF39
 5498 0297 01       		.byte	0x1
 5499 0298 AC01     		.2byte	0x1ac
 5500 029a 01       		.byte	0x1
 5501 029b 00000000 		.4byte	.LFB4
 5502 029f 42000000 		.4byte	.LFE4
 5503 02a3 C8000000 		.4byte	.LLST4
 5504 02a7 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 129


 5505 02a8 DA020000 		.4byte	0x2da
 5506 02ac 10       		.uleb128 0x10
 5507 02ad 19010000 		.4byte	.LASF26
 5508 02b1 01       		.byte	0x1
 5509 02b2 AC01     		.2byte	0x1ac
 5510 02b4 7A000000 		.4byte	0x7a
 5511 02b8 02       		.byte	0x2
 5512 02b9 91       		.byte	0x91
 5513 02ba 6E       		.sleb128 -18
 5514 02bb 11       		.uleb128 0x11
 5515 02bc 76616C00 		.ascii	"val\000"
 5516 02c0 01       		.byte	0x1
 5517 02c1 AC01     		.2byte	0x1ac
 5518 02c3 7A000000 		.4byte	0x7a
 5519 02c7 02       		.byte	0x2
 5520 02c8 91       		.byte	0x91
 5521 02c9 6C       		.sleb128 -20
 5522 02ca 12       		.uleb128 0x12
 5523 02cb D1040000 		.4byte	.LASF40
 5524 02cf 01       		.byte	0x1
 5525 02d0 AE01     		.2byte	0x1ae
 5526 02d2 7A000000 		.4byte	0x7a
 5527 02d6 02       		.byte	0x2
 5528 02d7 91       		.byte	0x91
 5529 02d8 76       		.sleb128 -10
 5530 02d9 00       		.byte	0
 5531 02da 14       		.uleb128 0x14
 5532 02db 01       		.byte	0x1
 5533 02dc 7E030000 		.4byte	.LASF44
 5534 02e0 01       		.byte	0x1
 5535 02e1 BD01     		.2byte	0x1bd
 5536 02e3 01       		.byte	0x1
 5537 02e4 7A000000 		.4byte	0x7a
 5538 02e8 00000000 		.4byte	.LFB5
 5539 02ec 42000000 		.4byte	.LFE5
 5540 02f0 00010000 		.4byte	.LLST5
 5541 02f4 01       		.byte	0x1
 5542 02f5 18030000 		.4byte	0x318
 5543 02f9 10       		.uleb128 0x10
 5544 02fa 19010000 		.4byte	.LASF26
 5545 02fe 01       		.byte	0x1
 5546 02ff BD01     		.2byte	0x1bd
 5547 0301 7A000000 		.4byte	0x7a
 5548 0305 02       		.byte	0x2
 5549 0306 91       		.byte	0x91
 5550 0307 6E       		.sleb128 -18
 5551 0308 13       		.uleb128 0x13
 5552 0309 76616C00 		.ascii	"val\000"
 5553 030d 01       		.byte	0x1
 5554 030e BF01     		.2byte	0x1bf
 5555 0310 7A000000 		.4byte	0x7a
 5556 0314 02       		.byte	0x2
 5557 0315 91       		.byte	0x91
 5558 0316 76       		.sleb128 -10
 5559 0317 00       		.byte	0
 5560 0318 0F       		.uleb128 0xf
 5561 0319 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 130


 5562 031a 26070000 		.4byte	.LASF41
 5563 031e 01       		.byte	0x1
 5564 031f D401     		.2byte	0x1d4
 5565 0321 01       		.byte	0x1
 5566 0322 00000000 		.4byte	.LFB6
 5567 0326 1E000000 		.4byte	.LFE6
 5568 032a 38010000 		.4byte	.LLST6
 5569 032e 01       		.byte	0x1
 5570 032f 43030000 		.4byte	0x343
 5571 0333 11       		.uleb128 0x11
 5572 0334 6D616300 		.ascii	"mac\000"
 5573 0338 01       		.byte	0x1
 5574 0339 D401     		.2byte	0x1d4
 5575 033b D9010000 		.4byte	0x1d9
 5576 033f 02       		.byte	0x2
 5577 0340 91       		.byte	0x91
 5578 0341 74       		.sleb128 -12
 5579 0342 00       		.byte	0
 5580 0343 0F       		.uleb128 0xf
 5581 0344 01       		.byte	0x1
 5582 0345 51000000 		.4byte	.LASF42
 5583 0349 01       		.byte	0x1
 5584 034a DD01     		.2byte	0x1dd
 5585 034c 01       		.byte	0x1
 5586 034d 00000000 		.4byte	.LFB7
 5587 0351 1E000000 		.4byte	.LFE7
 5588 0355 70010000 		.4byte	.LLST7
 5589 0359 01       		.byte	0x1
 5590 035a 6E030000 		.4byte	0x36e
 5591 035e 11       		.uleb128 0x11
 5592 035f 6D616300 		.ascii	"mac\000"
 5593 0363 01       		.byte	0x1
 5594 0364 DD01     		.2byte	0x1dd
 5595 0366 D9010000 		.4byte	0x1d9
 5596 036a 02       		.byte	0x2
 5597 036b 91       		.byte	0x91
 5598 036c 74       		.sleb128 -12
 5599 036d 00       		.byte	0
 5600 036e 0F       		.uleb128 0xf
 5601 036f 01       		.byte	0x1
 5602 0370 71070000 		.4byte	.LASF43
 5603 0374 01       		.byte	0x1
 5604 0375 E601     		.2byte	0x1e6
 5605 0377 01       		.byte	0x1
 5606 0378 00000000 		.4byte	.LFB8
 5607 037c 22000000 		.4byte	.LFE8
 5608 0380 A8010000 		.4byte	.LLST8
 5609 0384 01       		.byte	0x1
 5610 0385 98030000 		.4byte	0x398
 5611 0389 11       		.uleb128 0x11
 5612 038a 697000   		.ascii	"ip\000"
 5613 038d 01       		.byte	0x1
 5614 038e E601     		.2byte	0x1e6
 5615 0390 85000000 		.4byte	0x85
 5616 0394 02       		.byte	0x2
 5617 0395 91       		.byte	0x91
 5618 0396 74       		.sleb128 -12
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 131


 5619 0397 00       		.byte	0
 5620 0398 14       		.uleb128 0x14
 5621 0399 01       		.byte	0x1
 5622 039a 38060000 		.4byte	.LASF45
 5623 039e 01       		.byte	0x1
 5624 039f EF01     		.2byte	0x1ef
 5625 03a1 01       		.byte	0x1
 5626 03a2 85000000 		.4byte	0x85
 5627 03a6 00000000 		.4byte	.LFB9
 5628 03aa 28000000 		.4byte	.LFE9
 5629 03ae E0010000 		.4byte	.LLST9
 5630 03b2 01       		.byte	0x1
 5631 03b3 C6030000 		.4byte	0x3c6
 5632 03b7 13       		.uleb128 0x13
 5633 03b8 697000   		.ascii	"ip\000"
 5634 03bb 01       		.byte	0x1
 5635 03bc F101     		.2byte	0x1f1
 5636 03be 85000000 		.4byte	0x85
 5637 03c2 02       		.byte	0x2
 5638 03c3 91       		.byte	0x91
 5639 03c4 74       		.sleb128 -12
 5640 03c5 00       		.byte	0
 5641 03c6 0F       		.uleb128 0xf
 5642 03c7 01       		.byte	0x1
 5643 03c8 27020000 		.4byte	.LASF46
 5644 03cc 01       		.byte	0x1
 5645 03cd FC01     		.2byte	0x1fc
 5646 03cf 01       		.byte	0x1
 5647 03d0 00000000 		.4byte	.LFB10
 5648 03d4 22000000 		.4byte	.LFE10
 5649 03d8 18020000 		.4byte	.LLST10
 5650 03dc 01       		.byte	0x1
 5651 03dd F0030000 		.4byte	0x3f0
 5652 03e1 11       		.uleb128 0x11
 5653 03e2 697000   		.ascii	"ip\000"
 5654 03e5 01       		.byte	0x1
 5655 03e6 FC01     		.2byte	0x1fc
 5656 03e8 85000000 		.4byte	0x85
 5657 03ec 02       		.byte	0x2
 5658 03ed 91       		.byte	0x91
 5659 03ee 74       		.sleb128 -12
 5660 03ef 00       		.byte	0
 5661 03f0 14       		.uleb128 0x14
 5662 03f1 01       		.byte	0x1
 5663 03f2 14000000 		.4byte	.LASF47
 5664 03f6 01       		.byte	0x1
 5665 03f7 0502     		.2byte	0x205
 5666 03f9 01       		.byte	0x1
 5667 03fa 85000000 		.4byte	0x85
 5668 03fe 00000000 		.4byte	.LFB11
 5669 0402 28000000 		.4byte	.LFE11
 5670 0406 50020000 		.4byte	.LLST11
 5671 040a 01       		.byte	0x1
 5672 040b 1E040000 		.4byte	0x41e
 5673 040f 13       		.uleb128 0x13
 5674 0410 697000   		.ascii	"ip\000"
 5675 0413 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 132


 5676 0414 0702     		.2byte	0x207
 5677 0416 85000000 		.4byte	0x85
 5678 041a 02       		.byte	0x2
 5679 041b 91       		.byte	0x91
 5680 041c 74       		.sleb128 -12
 5681 041d 00       		.byte	0
 5682 041e 0F       		.uleb128 0xf
 5683 041f 01       		.byte	0x1
 5684 0420 CC000000 		.4byte	.LASF48
 5685 0424 01       		.byte	0x1
 5686 0425 1002     		.2byte	0x210
 5687 0427 01       		.byte	0x1
 5688 0428 00000000 		.4byte	.LFB12
 5689 042c 22000000 		.4byte	.LFE12
 5690 0430 88020000 		.4byte	.LLST12
 5691 0434 01       		.byte	0x1
 5692 0435 48040000 		.4byte	0x448
 5693 0439 11       		.uleb128 0x11
 5694 043a 697000   		.ascii	"ip\000"
 5695 043d 01       		.byte	0x1
 5696 043e 1002     		.2byte	0x210
 5697 0440 85000000 		.4byte	0x85
 5698 0444 02       		.byte	0x2
 5699 0445 91       		.byte	0x91
 5700 0446 74       		.sleb128 -12
 5701 0447 00       		.byte	0
 5702 0448 14       		.uleb128 0x14
 5703 0449 01       		.byte	0x1
 5704 044a C1040000 		.4byte	.LASF49
 5705 044e 01       		.byte	0x1
 5706 044f 1902     		.2byte	0x219
 5707 0451 01       		.byte	0x1
 5708 0452 85000000 		.4byte	0x85
 5709 0456 00000000 		.4byte	.LFB13
 5710 045a 28000000 		.4byte	.LFE13
 5711 045e C0020000 		.4byte	.LLST13
 5712 0462 01       		.byte	0x1
 5713 0463 76040000 		.4byte	0x476
 5714 0467 13       		.uleb128 0x13
 5715 0468 697000   		.ascii	"ip\000"
 5716 046b 01       		.byte	0x1
 5717 046c 1B02     		.2byte	0x21b
 5718 046e 85000000 		.4byte	0x85
 5719 0472 02       		.byte	0x2
 5720 0473 91       		.byte	0x91
 5721 0474 74       		.sleb128 -12
 5722 0475 00       		.byte	0
 5723 0476 0F       		.uleb128 0xf
 5724 0477 01       		.byte	0x1
 5725 0478 53030000 		.4byte	.LASF50
 5726 047c 01       		.byte	0x1
 5727 047d 2402     		.2byte	0x224
 5728 047f 01       		.byte	0x1
 5729 0480 00000000 		.4byte	.LFB14
 5730 0484 24000000 		.4byte	.LFE14
 5731 0488 F8020000 		.4byte	.LLST14
 5732 048c 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 133


 5733 048d A1040000 		.4byte	0x4a1
 5734 0491 10       		.uleb128 0x10
 5735 0492 C7060000 		.4byte	.LASF51
 5736 0496 01       		.byte	0x1
 5737 0497 2402     		.2byte	0x224
 5738 0499 6F000000 		.4byte	0x6f
 5739 049d 02       		.byte	0x2
 5740 049e 91       		.byte	0x91
 5741 049f 77       		.sleb128 -9
 5742 04a0 00       		.byte	0
 5743 04a1 14       		.uleb128 0x14
 5744 04a2 01       		.byte	0x1
 5745 04a3 87070000 		.4byte	.LASF52
 5746 04a7 01       		.byte	0x1
 5747 04a8 2D02     		.2byte	0x22d
 5748 04aa 01       		.byte	0x1
 5749 04ab 6F000000 		.4byte	0x6f
 5750 04af 00000000 		.4byte	.LFB15
 5751 04b3 24000000 		.4byte	.LFE15
 5752 04b7 30030000 		.4byte	.LLST15
 5753 04bb 01       		.byte	0x1
 5754 04bc D0040000 		.4byte	0x4d0
 5755 04c0 12       		.uleb128 0x12
 5756 04c1 C7060000 		.4byte	.LASF51
 5757 04c5 01       		.byte	0x1
 5758 04c6 2F02     		.2byte	0x22f
 5759 04c8 6F000000 		.4byte	0x6f
 5760 04cc 02       		.byte	0x2
 5761 04cd 91       		.byte	0x91
 5762 04ce 77       		.sleb128 -9
 5763 04cf 00       		.byte	0
 5764 04d0 0F       		.uleb128 0xf
 5765 04d1 01       		.byte	0x1
 5766 04d2 9D070000 		.4byte	.LASF53
 5767 04d6 01       		.byte	0x1
 5768 04d7 3802     		.2byte	0x238
 5769 04d9 01       		.byte	0x1
 5770 04da 00000000 		.4byte	.LFB16
 5771 04de 24000000 		.4byte	.LFE16
 5772 04e2 68030000 		.4byte	.LLST16
 5773 04e6 01       		.byte	0x1
 5774 04e7 FA040000 		.4byte	0x4fa
 5775 04eb 11       		.uleb128 0x11
 5776 04ec 697200   		.ascii	"ir\000"
 5777 04ef 01       		.byte	0x1
 5778 04f0 3802     		.2byte	0x238
 5779 04f2 6F000000 		.4byte	0x6f
 5780 04f6 02       		.byte	0x2
 5781 04f7 91       		.byte	0x91
 5782 04f8 77       		.sleb128 -9
 5783 04f9 00       		.byte	0
 5784 04fa 0F       		.uleb128 0xf
 5785 04fb 01       		.byte	0x1
 5786 04fc 7D000000 		.4byte	.LASF54
 5787 0500 01       		.byte	0x1
 5788 0501 4102     		.2byte	0x241
 5789 0503 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 134


 5790 0504 00000000 		.4byte	.LFB17
 5791 0508 3A000000 		.4byte	.LFE17
 5792 050c A0030000 		.4byte	.LLST17
 5793 0510 01       		.byte	0x1
 5794 0511 3F050000 		.4byte	0x53f
 5795 0515 10       		.uleb128 0x10
 5796 0516 76000000 		.4byte	.LASF55
 5797 051a 01       		.byte	0x1
 5798 051b 4102     		.2byte	0x241
 5799 051d 6F000000 		.4byte	0x6f
 5800 0521 02       		.byte	0x2
 5801 0522 91       		.byte	0x91
 5802 0523 77       		.sleb128 -9
 5803 0524 10       		.uleb128 0x10
 5804 0525 D3030000 		.4byte	.LASF56
 5805 0529 01       		.byte	0x1
 5806 052a 4102     		.2byte	0x241
 5807 052c 6F000000 		.4byte	0x6f
 5808 0530 02       		.byte	0x2
 5809 0531 91       		.byte	0x91
 5810 0532 76       		.sleb128 -10
 5811 0533 15       		.uleb128 0x15
 5812 0534 737A00   		.ascii	"sz\000"
 5813 0537 01       		.byte	0x1
 5814 0538 4302     		.2byte	0x243
 5815 053a 6F000000 		.4byte	0x6f
 5816 053e 00       		.byte	0
 5817 053f 14       		.uleb128 0x14
 5818 0540 01       		.byte	0x1
 5819 0541 32030000 		.4byte	.LASF57
 5820 0545 01       		.byte	0x1
 5821 0546 5C02     		.2byte	0x25c
 5822 0548 01       		.byte	0x1
 5823 0549 6F000000 		.4byte	0x6f
 5824 054d 00000000 		.4byte	.LFB18
 5825 0551 40000000 		.4byte	.LFE18
 5826 0555 D8030000 		.4byte	.LLST18
 5827 0559 01       		.byte	0x1
 5828 055a 7C050000 		.4byte	0x57c
 5829 055e 10       		.uleb128 0x10
 5830 055f 76000000 		.4byte	.LASF55
 5831 0563 01       		.byte	0x1
 5832 0564 5C02     		.2byte	0x25c
 5833 0566 6F000000 		.4byte	0x6f
 5834 056a 02       		.byte	0x2
 5835 056b 91       		.byte	0x91
 5836 056c 6F       		.sleb128 -17
 5837 056d 13       		.uleb128 0x13
 5838 056e 737A00   		.ascii	"sz\000"
 5839 0571 01       		.byte	0x1
 5840 0572 5E02     		.2byte	0x25e
 5841 0574 6F000000 		.4byte	0x6f
 5842 0578 02       		.byte	0x2
 5843 0579 91       		.byte	0x91
 5844 057a 77       		.sleb128 -9
 5845 057b 00       		.byte	0
 5846 057c 0F       		.uleb128 0xf
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 135


 5847 057d 01       		.byte	0x1
 5848 057e 8D030000 		.4byte	.LASF58
 5849 0582 01       		.byte	0x1
 5850 0583 6E02     		.2byte	0x26e
 5851 0585 01       		.byte	0x1
 5852 0586 00000000 		.4byte	.LFB19
 5853 058a 3A000000 		.4byte	.LFE19
 5854 058e 10040000 		.4byte	.LLST19
 5855 0592 01       		.byte	0x1
 5856 0593 C1050000 		.4byte	0x5c1
 5857 0597 10       		.uleb128 0x10
 5858 0598 76000000 		.4byte	.LASF55
 5859 059c 01       		.byte	0x1
 5860 059d 6E02     		.2byte	0x26e
 5861 059f 6F000000 		.4byte	0x6f
 5862 05a3 02       		.byte	0x2
 5863 05a4 91       		.byte	0x91
 5864 05a5 77       		.sleb128 -9
 5865 05a6 10       		.uleb128 0x10
 5866 05a7 D3030000 		.4byte	.LASF56
 5867 05ab 01       		.byte	0x1
 5868 05ac 6E02     		.2byte	0x26e
 5869 05ae 6F000000 		.4byte	0x6f
 5870 05b2 02       		.byte	0x2
 5871 05b3 91       		.byte	0x91
 5872 05b4 76       		.sleb128 -10
 5873 05b5 15       		.uleb128 0x15
 5874 05b6 737A00   		.ascii	"sz\000"
 5875 05b9 01       		.byte	0x1
 5876 05ba 7002     		.2byte	0x270
 5877 05bc 6F000000 		.4byte	0x6f
 5878 05c0 00       		.byte	0
 5879 05c1 14       		.uleb128 0x14
 5880 05c2 01       		.byte	0x1
 5881 05c3 5E050000 		.4byte	.LASF59
 5882 05c7 01       		.byte	0x1
 5883 05c8 8802     		.2byte	0x288
 5884 05ca 01       		.byte	0x1
 5885 05cb 6F000000 		.4byte	0x6f
 5886 05cf 00000000 		.4byte	.LFB20
 5887 05d3 40000000 		.4byte	.LFE20
 5888 05d7 48040000 		.4byte	.LLST20
 5889 05db 01       		.byte	0x1
 5890 05dc FE050000 		.4byte	0x5fe
 5891 05e0 10       		.uleb128 0x10
 5892 05e1 76000000 		.4byte	.LASF55
 5893 05e5 01       		.byte	0x1
 5894 05e6 8802     		.2byte	0x288
 5895 05e8 6F000000 		.4byte	0x6f
 5896 05ec 02       		.byte	0x2
 5897 05ed 91       		.byte	0x91
 5898 05ee 6F       		.sleb128 -17
 5899 05ef 13       		.uleb128 0x13
 5900 05f0 737A00   		.ascii	"sz\000"
 5901 05f3 01       		.byte	0x1
 5902 05f4 8A02     		.2byte	0x28a
 5903 05f6 6F000000 		.4byte	0x6f
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 136


 5904 05fa 02       		.byte	0x2
 5905 05fb 91       		.byte	0x91
 5906 05fc 77       		.sleb128 -9
 5907 05fd 00       		.byte	0
 5908 05fe 0F       		.uleb128 0xf
 5909 05ff 01       		.byte	0x1
 5910 0600 DF070000 		.4byte	.LASF60
 5911 0604 01       		.byte	0x1
 5912 0605 A202     		.2byte	0x2a2
 5913 0607 01       		.byte	0x1
 5914 0608 00000000 		.4byte	.LFB21
 5915 060c 36000000 		.4byte	.LFE21
 5916 0610 80040000 		.4byte	.LLST21
 5917 0614 01       		.byte	0x1
 5918 0615 38060000 		.4byte	0x638
 5919 0619 10       		.uleb128 0x10
 5920 061a 76000000 		.4byte	.LASF55
 5921 061e 01       		.byte	0x1
 5922 061f A202     		.2byte	0x2a2
 5923 0621 6F000000 		.4byte	0x6f
 5924 0625 02       		.byte	0x2
 5925 0626 91       		.byte	0x91
 5926 0627 77       		.sleb128 -9
 5927 0628 10       		.uleb128 0x10
 5928 0629 C7060000 		.4byte	.LASF51
 5929 062d 01       		.byte	0x1
 5930 062e A202     		.2byte	0x2a2
 5931 0630 6F000000 		.4byte	0x6f
 5932 0634 02       		.byte	0x2
 5933 0635 91       		.byte	0x91
 5934 0636 76       		.sleb128 -10
 5935 0637 00       		.byte	0
 5936 0638 0F       		.uleb128 0xf
 5937 0639 01       		.byte	0x1
 5938 063a CC020000 		.4byte	.LASF61
 5939 063e 01       		.byte	0x1
 5940 063f AC02     		.2byte	0x2ac
 5941 0641 01       		.byte	0x1
 5942 0642 00000000 		.4byte	.LFB22
 5943 0646 3A000000 		.4byte	.LFE22
 5944 064a B8040000 		.4byte	.LLST22
 5945 064e 01       		.byte	0x1
 5946 064f 72060000 		.4byte	0x672
 5947 0653 10       		.uleb128 0x10
 5948 0654 76000000 		.4byte	.LASF55
 5949 0658 01       		.byte	0x1
 5950 0659 AC02     		.2byte	0x2ac
 5951 065b 6F000000 		.4byte	0x6f
 5952 065f 02       		.byte	0x2
 5953 0660 91       		.byte	0x91
 5954 0661 77       		.sleb128 -9
 5955 0662 11       		.uleb128 0x11
 5956 0663 636D6400 		.ascii	"cmd\000"
 5957 0667 01       		.byte	0x1
 5958 0668 AC02     		.2byte	0x2ac
 5959 066a 6F000000 		.4byte	0x6f
 5960 066e 02       		.byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 137


 5961 066f 91       		.byte	0x91
 5962 0670 76       		.sleb128 -10
 5963 0671 00       		.byte	0
 5964 0672 14       		.uleb128 0x14
 5965 0673 01       		.byte	0x1
 5966 0674 FF060000 		.4byte	.LASF62
 5967 0678 01       		.byte	0x1
 5968 0679 B602     		.2byte	0x2b6
 5969 067b 01       		.byte	0x1
 5970 067c 6F000000 		.4byte	0x6f
 5971 0680 00000000 		.4byte	.LFB23
 5972 0684 40000000 		.4byte	.LFE23
 5973 0688 F0040000 		.4byte	.LLST23
 5974 068c 01       		.byte	0x1
 5975 068d B0060000 		.4byte	0x6b0
 5976 0691 10       		.uleb128 0x10
 5977 0692 76000000 		.4byte	.LASF55
 5978 0696 01       		.byte	0x1
 5979 0697 B602     		.2byte	0x2b6
 5980 0699 6F000000 		.4byte	0x6f
 5981 069d 02       		.byte	0x2
 5982 069e 91       		.byte	0x91
 5983 069f 6F       		.sleb128 -17
 5984 06a0 13       		.uleb128 0x13
 5985 06a1 636D6400 		.ascii	"cmd\000"
 5986 06a5 01       		.byte	0x1
 5987 06a6 B802     		.2byte	0x2b8
 5988 06a8 6F000000 		.4byte	0x6f
 5989 06ac 02       		.byte	0x2
 5990 06ad 91       		.byte	0x91
 5991 06ae 77       		.sleb128 -9
 5992 06af 00       		.byte	0
 5993 06b0 0F       		.uleb128 0xf
 5994 06b1 01       		.byte	0x1
 5995 06b2 61060000 		.4byte	.LASF63
 5996 06b6 01       		.byte	0x1
 5997 06b7 C202     		.2byte	0x2c2
 5998 06b9 01       		.byte	0x1
 5999 06ba 00000000 		.4byte	.LFB24
 6000 06be 3A000000 		.4byte	.LFE24
 6001 06c2 28050000 		.4byte	.LLST24
 6002 06c6 01       		.byte	0x1
 6003 06c7 E9060000 		.4byte	0x6e9
 6004 06cb 10       		.uleb128 0x10
 6005 06cc 76000000 		.4byte	.LASF55
 6006 06d0 01       		.byte	0x1
 6007 06d1 C202     		.2byte	0x2c2
 6008 06d3 6F000000 		.4byte	0x6f
 6009 06d7 02       		.byte	0x2
 6010 06d8 91       		.byte	0x91
 6011 06d9 77       		.sleb128 -9
 6012 06da 11       		.uleb128 0x11
 6013 06db 697200   		.ascii	"ir\000"
 6014 06de 01       		.byte	0x1
 6015 06df C202     		.2byte	0x2c2
 6016 06e1 6F000000 		.4byte	0x6f
 6017 06e5 02       		.byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 138


 6018 06e6 91       		.byte	0x91
 6019 06e7 76       		.sleb128 -10
 6020 06e8 00       		.byte	0
 6021 06e9 14       		.uleb128 0x14
 6022 06ea 01       		.byte	0x1
 6023 06eb 3E070000 		.4byte	.LASF64
 6024 06ef 01       		.byte	0x1
 6025 06f0 CC02     		.2byte	0x2cc
 6026 06f2 01       		.byte	0x1
 6027 06f3 6F000000 		.4byte	0x6f
 6028 06f7 00000000 		.4byte	.LFB25
 6029 06fb 40000000 		.4byte	.LFE25
 6030 06ff 60050000 		.4byte	.LLST25
 6031 0703 01       		.byte	0x1
 6032 0704 26070000 		.4byte	0x726
 6033 0708 10       		.uleb128 0x10
 6034 0709 76000000 		.4byte	.LASF55
 6035 070d 01       		.byte	0x1
 6036 070e CC02     		.2byte	0x2cc
 6037 0710 6F000000 		.4byte	0x6f
 6038 0714 02       		.byte	0x2
 6039 0715 91       		.byte	0x91
 6040 0716 6F       		.sleb128 -17
 6041 0717 13       		.uleb128 0x13
 6042 0718 697200   		.ascii	"ir\000"
 6043 071b 01       		.byte	0x1
 6044 071c CE02     		.2byte	0x2ce
 6045 071e 6F000000 		.4byte	0x6f
 6046 0722 02       		.byte	0x2
 6047 0723 91       		.byte	0x91
 6048 0724 77       		.sleb128 -9
 6049 0725 00       		.byte	0
 6050 0726 14       		.uleb128 0x14
 6051 0727 01       		.byte	0x1
 6052 0728 55010000 		.4byte	.LASF65
 6053 072c 01       		.byte	0x1
 6054 072d D802     		.2byte	0x2d8
 6055 072f 01       		.byte	0x1
 6056 0730 6F000000 		.4byte	0x6f
 6057 0734 00000000 		.4byte	.LFB26
 6058 0738 40000000 		.4byte	.LFE26
 6059 073c 98050000 		.4byte	.LLST26
 6060 0740 01       		.byte	0x1
 6061 0741 64070000 		.4byte	0x764
 6062 0745 10       		.uleb128 0x10
 6063 0746 76000000 		.4byte	.LASF55
 6064 074a 01       		.byte	0x1
 6065 074b D802     		.2byte	0x2d8
 6066 074d 6F000000 		.4byte	0x6f
 6067 0751 02       		.byte	0x2
 6068 0752 91       		.byte	0x91
 6069 0753 6F       		.sleb128 -17
 6070 0754 12       		.uleb128 0x12
 6071 0755 B8070000 		.4byte	.LASF66
 6072 0759 01       		.byte	0x1
 6073 075a DA02     		.2byte	0x2da
 6074 075c 6F000000 		.4byte	0x6f
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 139


 6075 0760 02       		.byte	0x2
 6076 0761 91       		.byte	0x91
 6077 0762 77       		.sleb128 -9
 6078 0763 00       		.byte	0
 6079 0764 0F       		.uleb128 0xf
 6080 0765 01       		.byte	0x1
 6081 0766 E1050000 		.4byte	.LASF67
 6082 076a 01       		.byte	0x1
 6083 076b E402     		.2byte	0x2e4
 6084 076d 01       		.byte	0x1
 6085 076e 00000000 		.4byte	.LFB27
 6086 0772 34000000 		.4byte	.LFE27
 6087 0776 D0050000 		.4byte	.LLST27
 6088 077a 01       		.byte	0x1
 6089 077b 9E070000 		.4byte	0x79e
 6090 077f 10       		.uleb128 0x10
 6091 0780 76000000 		.4byte	.LASF55
 6092 0784 01       		.byte	0x1
 6093 0785 E402     		.2byte	0x2e4
 6094 0787 6F000000 		.4byte	0x6f
 6095 078b 02       		.byte	0x2
 6096 078c 91       		.byte	0x91
 6097 078d 77       		.sleb128 -9
 6098 078e 10       		.uleb128 0x10
 6099 078f 28030000 		.4byte	.LASF68
 6100 0793 01       		.byte	0x1
 6101 0794 E402     		.2byte	0x2e4
 6102 0796 7A000000 		.4byte	0x7a
 6103 079a 02       		.byte	0x2
 6104 079b 91       		.byte	0x91
 6105 079c 74       		.sleb128 -12
 6106 079d 00       		.byte	0
 6107 079e 0F       		.uleb128 0xf
 6108 079f 01       		.byte	0x1
 6109 07a0 06030000 		.4byte	.LASF69
 6110 07a4 01       		.byte	0x1
 6111 07a5 EE02     		.2byte	0x2ee
 6112 07a7 01       		.byte	0x1
 6113 07a8 00000000 		.4byte	.LFB28
 6114 07ac 34000000 		.4byte	.LFE28
 6115 07b0 08060000 		.4byte	.LLST28
 6116 07b4 01       		.byte	0x1
 6117 07b5 D8070000 		.4byte	0x7d8
 6118 07b9 10       		.uleb128 0x10
 6119 07ba 76000000 		.4byte	.LASF55
 6120 07be 01       		.byte	0x1
 6121 07bf EE02     		.2byte	0x2ee
 6122 07c1 6F000000 		.4byte	0x6f
 6123 07c5 02       		.byte	0x2
 6124 07c6 91       		.byte	0x91
 6125 07c7 77       		.sleb128 -9
 6126 07c8 11       		.uleb128 0x11
 6127 07c9 6D616300 		.ascii	"mac\000"
 6128 07cd 01       		.byte	0x1
 6129 07ce EE02     		.2byte	0x2ee
 6130 07d0 D9010000 		.4byte	0x1d9
 6131 07d4 02       		.byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 140


 6132 07d5 91       		.byte	0x91
 6133 07d6 70       		.sleb128 -16
 6134 07d7 00       		.byte	0
 6135 07d8 0F       		.uleb128 0xf
 6136 07d9 01       		.byte	0x1
 6137 07da 00000000 		.4byte	.LASF70
 6138 07de 01       		.byte	0x1
 6139 07df F802     		.2byte	0x2f8
 6140 07e1 01       		.byte	0x1
 6141 07e2 00000000 		.4byte	.LFB29
 6142 07e6 36000000 		.4byte	.LFE29
 6143 07ea 40060000 		.4byte	.LLST29
 6144 07ee 01       		.byte	0x1
 6145 07ef 11080000 		.4byte	0x811
 6146 07f3 10       		.uleb128 0x10
 6147 07f4 76000000 		.4byte	.LASF55
 6148 07f8 01       		.byte	0x1
 6149 07f9 F802     		.2byte	0x2f8
 6150 07fb 6F000000 		.4byte	0x6f
 6151 07ff 02       		.byte	0x2
 6152 0800 91       		.byte	0x91
 6153 0801 77       		.sleb128 -9
 6154 0802 11       		.uleb128 0x11
 6155 0803 697000   		.ascii	"ip\000"
 6156 0806 01       		.byte	0x1
 6157 0807 F802     		.2byte	0x2f8
 6158 0809 85000000 		.4byte	0x85
 6159 080d 02       		.byte	0x2
 6160 080e 91       		.byte	0x91
 6161 080f 70       		.sleb128 -16
 6162 0810 00       		.byte	0
 6163 0811 0F       		.uleb128 0xf
 6164 0812 01       		.byte	0x1
 6165 0813 37080000 		.4byte	.LASF71
 6166 0817 01       		.byte	0x1
 6167 0818 0203     		.2byte	0x302
 6168 081a 01       		.byte	0x1
 6169 081b 00000000 		.4byte	.LFB30
 6170 081f 34000000 		.4byte	.LFE30
 6171 0823 78060000 		.4byte	.LLST30
 6172 0827 01       		.byte	0x1
 6173 0828 4B080000 		.4byte	0x84b
 6174 082c 10       		.uleb128 0x10
 6175 082d 76000000 		.4byte	.LASF55
 6176 0831 01       		.byte	0x1
 6177 0832 0203     		.2byte	0x302
 6178 0834 6F000000 		.4byte	0x6f
 6179 0838 02       		.byte	0x2
 6180 0839 91       		.byte	0x91
 6181 083a 77       		.sleb128 -9
 6182 083b 10       		.uleb128 0x10
 6183 083c 28030000 		.4byte	.LASF68
 6184 0840 01       		.byte	0x1
 6185 0841 0203     		.2byte	0x302
 6186 0843 7A000000 		.4byte	0x7a
 6187 0847 02       		.byte	0x2
 6188 0848 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 141


 6189 0849 74       		.sleb128 -12
 6190 084a 00       		.byte	0
 6191 084b 14       		.uleb128 0x14
 6192 084c 01       		.byte	0x1
 6193 084d F2020000 		.4byte	.LASF72
 6194 0851 01       		.byte	0x1
 6195 0852 0C03     		.2byte	0x30c
 6196 0854 01       		.byte	0x1
 6197 0855 7A000000 		.4byte	0x7a
 6198 0859 00000000 		.4byte	.LFB31
 6199 085d 30000000 		.4byte	.LFE31
 6200 0861 B0060000 		.4byte	.LLST31
 6201 0865 01       		.byte	0x1
 6202 0866 7A080000 		.4byte	0x87a
 6203 086a 10       		.uleb128 0x10
 6204 086b 76000000 		.4byte	.LASF55
 6205 086f 01       		.byte	0x1
 6206 0870 0C03     		.2byte	0x30c
 6207 0872 6F000000 		.4byte	0x6f
 6208 0876 02       		.byte	0x2
 6209 0877 91       		.byte	0x91
 6210 0878 77       		.sleb128 -9
 6211 0879 00       		.byte	0
 6212 087a 0F       		.uleb128 0xf
 6213 087b 01       		.byte	0x1
 6214 087c 39020000 		.4byte	.LASF73
 6215 0880 01       		.byte	0x1
 6216 0881 1603     		.2byte	0x316
 6217 0883 01       		.byte	0x1
 6218 0884 00000000 		.4byte	.LFB32
 6219 0888 34000000 		.4byte	.LFE32
 6220 088c E8060000 		.4byte	.LLST32
 6221 0890 01       		.byte	0x1
 6222 0891 B4080000 		.4byte	0x8b4
 6223 0895 10       		.uleb128 0x10
 6224 0896 76000000 		.4byte	.LASF55
 6225 089a 01       		.byte	0x1
 6226 089b 1603     		.2byte	0x316
 6227 089d 6F000000 		.4byte	0x6f
 6228 08a1 02       		.byte	0x2
 6229 08a2 91       		.byte	0x91
 6230 08a3 77       		.sleb128 -9
 6231 08a4 11       		.uleb128 0x11
 6232 08a5 70747200 		.ascii	"ptr\000"
 6233 08a9 01       		.byte	0x1
 6234 08aa 1603     		.2byte	0x316
 6235 08ac 7A000000 		.4byte	0x7a
 6236 08b0 02       		.byte	0x2
 6237 08b1 91       		.byte	0x91
 6238 08b2 74       		.sleb128 -12
 6239 08b3 00       		.byte	0
 6240 08b4 14       		.uleb128 0x14
 6241 08b5 01       		.byte	0x1
 6242 08b6 A9040000 		.4byte	.LASF74
 6243 08ba 01       		.byte	0x1
 6244 08bb 2003     		.2byte	0x320
 6245 08bd 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 142


 6246 08be 7A000000 		.4byte	0x7a
 6247 08c2 00000000 		.4byte	.LFB33
 6248 08c6 30000000 		.4byte	.LFE33
 6249 08ca 20070000 		.4byte	.LLST33
 6250 08ce 01       		.byte	0x1
 6251 08cf E3080000 		.4byte	0x8e3
 6252 08d3 10       		.uleb128 0x10
 6253 08d4 76000000 		.4byte	.LASF55
 6254 08d8 01       		.byte	0x1
 6255 08d9 2003     		.2byte	0x320
 6256 08db 6F000000 		.4byte	0x6f
 6257 08df 02       		.byte	0x2
 6258 08e0 91       		.byte	0x91
 6259 08e1 77       		.sleb128 -9
 6260 08e2 00       		.byte	0
 6261 08e3 14       		.uleb128 0x14
 6262 08e4 01       		.byte	0x1
 6263 08e5 24060000 		.4byte	.LASF75
 6264 08e9 01       		.byte	0x1
 6265 08ea 2A03     		.2byte	0x32a
 6266 08ec 01       		.byte	0x1
 6267 08ed 7A000000 		.4byte	0x7a
 6268 08f1 00000000 		.4byte	.LFB34
 6269 08f5 30000000 		.4byte	.LFE34
 6270 08f9 58070000 		.4byte	.LLST34
 6271 08fd 01       		.byte	0x1
 6272 08fe 12090000 		.4byte	0x912
 6273 0902 10       		.uleb128 0x10
 6274 0903 76000000 		.4byte	.LASF55
 6275 0907 01       		.byte	0x1
 6276 0908 2A03     		.2byte	0x32a
 6277 090a 6F000000 		.4byte	0x6f
 6278 090e 02       		.byte	0x2
 6279 090f 91       		.byte	0x91
 6280 0910 77       		.sleb128 -9
 6281 0911 00       		.byte	0
 6282 0912 0F       		.uleb128 0xf
 6283 0913 01       		.byte	0x1
 6284 0914 02080000 		.4byte	.LASF76
 6285 0918 01       		.byte	0x1
 6286 0919 3403     		.2byte	0x334
 6287 091b 01       		.byte	0x1
 6288 091c 00000000 		.4byte	.LFB35
 6289 0920 34000000 		.4byte	.LFE35
 6290 0924 90070000 		.4byte	.LLST35
 6291 0928 01       		.byte	0x1
 6292 0929 4C090000 		.4byte	0x94c
 6293 092d 10       		.uleb128 0x10
 6294 092e 76000000 		.4byte	.LASF55
 6295 0932 01       		.byte	0x1
 6296 0933 3403     		.2byte	0x334
 6297 0935 6F000000 		.4byte	0x6f
 6298 0939 02       		.byte	0x2
 6299 093a 91       		.byte	0x91
 6300 093b 77       		.sleb128 -9
 6301 093c 11       		.uleb128 0x11
 6302 093d 70747200 		.ascii	"ptr\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 143


 6303 0941 01       		.byte	0x1
 6304 0942 3403     		.2byte	0x334
 6305 0944 7A000000 		.4byte	0x7a
 6306 0948 02       		.byte	0x2
 6307 0949 91       		.byte	0x91
 6308 094a 74       		.sleb128 -12
 6309 094b 00       		.byte	0
 6310 094c 14       		.uleb128 0x14
 6311 094d 01       		.byte	0x1
 6312 094e 84020000 		.4byte	.LASF77
 6313 0952 01       		.byte	0x1
 6314 0953 3E03     		.2byte	0x33e
 6315 0955 01       		.byte	0x1
 6316 0956 7A000000 		.4byte	0x7a
 6317 095a 00000000 		.4byte	.LFB36
 6318 095e 30000000 		.4byte	.LFE36
 6319 0962 C8070000 		.4byte	.LLST36
 6320 0966 01       		.byte	0x1
 6321 0967 7B090000 		.4byte	0x97b
 6322 096b 10       		.uleb128 0x10
 6323 096c 76000000 		.4byte	.LASF55
 6324 0970 01       		.byte	0x1
 6325 0971 3E03     		.2byte	0x33e
 6326 0973 6F000000 		.4byte	0x6f
 6327 0977 02       		.byte	0x2
 6328 0978 91       		.byte	0x91
 6329 0979 77       		.sleb128 -9
 6330 097a 00       		.byte	0
 6331 097b 0F       		.uleb128 0xf
 6332 097c 01       		.byte	0x1
 6333 097d 0F020000 		.4byte	.LASF78
 6334 0981 01       		.byte	0x1
 6335 0982 4803     		.2byte	0x348
 6336 0984 01       		.byte	0x1
 6337 0985 00000000 		.4byte	.LFB37
 6338 0989 34000000 		.4byte	.LFE37
 6339 098d 00080000 		.4byte	.LLST37
 6340 0991 01       		.byte	0x1
 6341 0992 B5090000 		.4byte	0x9b5
 6342 0996 10       		.uleb128 0x10
 6343 0997 76000000 		.4byte	.LASF55
 6344 099b 01       		.byte	0x1
 6345 099c 4803     		.2byte	0x348
 6346 099e 6F000000 		.4byte	0x6f
 6347 09a2 02       		.byte	0x2
 6348 09a3 91       		.byte	0x91
 6349 09a4 77       		.sleb128 -9
 6350 09a5 11       		.uleb128 0x11
 6351 09a6 70747200 		.ascii	"ptr\000"
 6352 09aa 01       		.byte	0x1
 6353 09ab 4803     		.2byte	0x348
 6354 09ad 7A000000 		.4byte	0x7a
 6355 09b1 02       		.byte	0x2
 6356 09b2 91       		.byte	0x91
 6357 09b3 74       		.sleb128 -12
 6358 09b4 00       		.byte	0
 6359 09b5 0F       		.uleb128 0xf
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 144


 6360 09b6 01       		.byte	0x1
 6361 09b7 B5020000 		.4byte	.LASF79
 6362 09bb 01       		.byte	0x1
 6363 09bc 5B03     		.2byte	0x35b
 6364 09be 01       		.byte	0x1
 6365 09bf 00000000 		.4byte	.LFB38
 6366 09c3 34000000 		.4byte	.LFE38
 6367 09c7 38080000 		.4byte	.LLST38
 6368 09cb 01       		.byte	0x1
 6369 09cc EF090000 		.4byte	0x9ef
 6370 09d0 10       		.uleb128 0x10
 6371 09d1 76000000 		.4byte	.LASF55
 6372 09d5 01       		.byte	0x1
 6373 09d6 5B03     		.2byte	0x35b
 6374 09d8 6F000000 		.4byte	0x6f
 6375 09dc 02       		.byte	0x2
 6376 09dd 91       		.byte	0x91
 6377 09de 77       		.sleb128 -9
 6378 09df 11       		.uleb128 0x11
 6379 09e0 70747200 		.ascii	"ptr\000"
 6380 09e4 01       		.byte	0x1
 6381 09e5 5B03     		.2byte	0x35b
 6382 09e7 7A000000 		.4byte	0x7a
 6383 09eb 02       		.byte	0x2
 6384 09ec 91       		.byte	0x91
 6385 09ed 74       		.sleb128 -12
 6386 09ee 00       		.byte	0
 6387 09ef 14       		.uleb128 0x14
 6388 09f0 01       		.byte	0x1
 6389 09f1 03060000 		.4byte	.LASF80
 6390 09f5 01       		.byte	0x1
 6391 09f6 6503     		.2byte	0x365
 6392 09f8 01       		.byte	0x1
 6393 09f9 85000000 		.4byte	0x85
 6394 09fd 00000000 		.4byte	.LFB39
 6395 0a01 52000000 		.4byte	.LFE39
 6396 0a05 70080000 		.4byte	.LLST39
 6397 0a09 01       		.byte	0x1
 6398 0a0a 3C0A0000 		.4byte	0xa3c
 6399 0a0e 10       		.uleb128 0x10
 6400 0a0f 76000000 		.4byte	.LASF55
 6401 0a13 01       		.byte	0x1
 6402 0a14 6503     		.2byte	0x365
 6403 0a16 6F000000 		.4byte	0x6f
 6404 0a1a 02       		.byte	0x2
 6405 0a1b 91       		.byte	0x91
 6406 0a1c 6F       		.sleb128 -17
 6407 0a1d 11       		.uleb128 0x11
 6408 0a1e 636D6400 		.ascii	"cmd\000"
 6409 0a22 01       		.byte	0x1
 6410 0a23 6503     		.2byte	0x365
 6411 0a25 61000000 		.4byte	0x61
 6412 0a29 02       		.byte	0x2
 6413 0a2a 91       		.byte	0x91
 6414 0a2b 68       		.sleb128 -24
 6415 0a2c 12       		.uleb128 0x12
 6416 0a2d C4030000 		.4byte	.LASF81
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 145


 6417 0a31 01       		.byte	0x1
 6418 0a32 6703     		.2byte	0x367
 6419 0a34 85000000 		.4byte	0x85
 6420 0a38 02       		.byte	0x2
 6421 0a39 91       		.byte	0x91
 6422 0a3a 74       		.sleb128 -12
 6423 0a3b 00       		.byte	0
 6424 0a3c 14       		.uleb128 0x14
 6425 0a3d 01       		.byte	0x1
 6426 0a3e 74040000 		.4byte	.LASF82
 6427 0a42 01       		.byte	0x1
 6428 0a43 7803     		.2byte	0x378
 6429 0a45 01       		.byte	0x1
 6430 0a46 7A000000 		.4byte	0x7a
 6431 0a4a 00000000 		.4byte	.LFB40
 6432 0a4e 48000000 		.4byte	.LFE40
 6433 0a52 A8080000 		.4byte	.LLST40
 6434 0a56 01       		.byte	0x1
 6435 0a57 890A0000 		.4byte	0xa89
 6436 0a5b 10       		.uleb128 0x10
 6437 0a5c 76000000 		.4byte	.LASF55
 6438 0a60 01       		.byte	0x1
 6439 0a61 7803     		.2byte	0x378
 6440 0a63 6F000000 		.4byte	0x6f
 6441 0a67 02       		.byte	0x2
 6442 0a68 91       		.byte	0x91
 6443 0a69 6F       		.sleb128 -17
 6444 0a6a 12       		.uleb128 0x12
 6445 0a6b B5060000 		.4byte	.LASF83
 6446 0a6f 01       		.byte	0x1
 6447 0a70 7A03     		.2byte	0x37a
 6448 0a72 7A000000 		.4byte	0x7a
 6449 0a76 02       		.byte	0x2
 6450 0a77 91       		.byte	0x91
 6451 0a78 74       		.sleb128 -12
 6452 0a79 12       		.uleb128 0x12
 6453 0a7a DA050000 		.4byte	.LASF84
 6454 0a7e 01       		.byte	0x1
 6455 0a7f 7A03     		.2byte	0x37a
 6456 0a81 7A000000 		.4byte	0x7a
 6457 0a85 02       		.byte	0x2
 6458 0a86 91       		.byte	0x91
 6459 0a87 76       		.sleb128 -10
 6460 0a88 00       		.byte	0
 6461 0a89 14       		.uleb128 0x14
 6462 0a8a 01       		.byte	0x1
 6463 0a8b 63070000 		.4byte	.LASF85
 6464 0a8f 01       		.byte	0x1
 6465 0a90 8E03     		.2byte	0x38e
 6466 0a92 01       		.byte	0x1
 6467 0a93 7A000000 		.4byte	0x7a
 6468 0a97 00000000 		.4byte	.LFB41
 6469 0a9b 48000000 		.4byte	.LFE41
 6470 0a9f E0080000 		.4byte	.LLST41
 6471 0aa3 01       		.byte	0x1
 6472 0aa4 D60A0000 		.4byte	0xad6
 6473 0aa8 10       		.uleb128 0x10
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 146


 6474 0aa9 76000000 		.4byte	.LASF55
 6475 0aad 01       		.byte	0x1
 6476 0aae 8E03     		.2byte	0x38e
 6477 0ab0 6F000000 		.4byte	0x6f
 6478 0ab4 02       		.byte	0x2
 6479 0ab5 91       		.byte	0x91
 6480 0ab6 6F       		.sleb128 -17
 6481 0ab7 12       		.uleb128 0x12
 6482 0ab8 B5060000 		.4byte	.LASF83
 6483 0abc 01       		.byte	0x1
 6484 0abd 9003     		.2byte	0x390
 6485 0abf 7A000000 		.4byte	0x7a
 6486 0ac3 02       		.byte	0x2
 6487 0ac4 91       		.byte	0x91
 6488 0ac5 74       		.sleb128 -12
 6489 0ac6 12       		.uleb128 0x12
 6490 0ac7 DA050000 		.4byte	.LASF84
 6491 0acb 01       		.byte	0x1
 6492 0acc 9003     		.2byte	0x390
 6493 0ace 7A000000 		.4byte	0x7a
 6494 0ad2 02       		.byte	0x2
 6495 0ad3 91       		.byte	0x91
 6496 0ad4 76       		.sleb128 -10
 6497 0ad5 00       		.byte	0
 6498 0ad6 0F       		.uleb128 0xf
 6499 0ad7 01       		.byte	0x1
 6500 0ad8 8B010000 		.4byte	.LASF86
 6501 0adc 01       		.byte	0x1
 6502 0add AD03     		.2byte	0x3ad
 6503 0adf 01       		.byte	0x1
 6504 0ae0 00000000 		.4byte	.LFB42
 6505 0ae4 B4000000 		.4byte	.LFE42
 6506 0ae8 18090000 		.4byte	.LLST42
 6507 0aec 01       		.byte	0x1
 6508 0aed 6A0B0000 		.4byte	0xb6a
 6509 0af1 10       		.uleb128 0x10
 6510 0af2 76000000 		.4byte	.LASF55
 6511 0af6 01       		.byte	0x1
 6512 0af7 AD03     		.2byte	0x3ad
 6513 0af9 6F000000 		.4byte	0x6f
 6514 0afd 02       		.byte	0x2
 6515 0afe 91       		.byte	0x91
 6516 0aff 6F       		.sleb128 -17
 6517 0b00 10       		.uleb128 0x10
 6518 0b01 9B020000 		.4byte	.LASF87
 6519 0b05 01       		.byte	0x1
 6520 0b06 AD03     		.2byte	0x3ad
 6521 0b08 7A000000 		.4byte	0x7a
 6522 0b0c 02       		.byte	0x2
 6523 0b0d 91       		.byte	0x91
 6524 0b0e 6C       		.sleb128 -20
 6525 0b0f 10       		.uleb128 0x10
 6526 0b10 37070000 		.4byte	.LASF88
 6527 0b14 01       		.byte	0x1
 6528 0b15 AD03     		.2byte	0x3ad
 6529 0b17 D9010000 		.4byte	0x1d9
 6530 0b1b 02       		.byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 147


 6531 0b1c 91       		.byte	0x91
 6532 0b1d 68       		.sleb128 -24
 6533 0b1e 10       		.uleb128 0x10
 6534 0b1f BB060000 		.4byte	.LASF27
 6535 0b23 01       		.byte	0x1
 6536 0b24 AD03     		.2byte	0x3ad
 6537 0b26 7A000000 		.4byte	0x7a
 6538 0b2a 02       		.byte	0x2
 6539 0b2b 91       		.byte	0x91
 6540 0b2c 66       		.sleb128 -26
 6541 0b2d 12       		.uleb128 0x12
 6542 0b2e 19010000 		.4byte	.LASF26
 6543 0b32 01       		.byte	0x1
 6544 0b33 AF03     		.2byte	0x3af
 6545 0b35 7A000000 		.4byte	0x7a
 6546 0b39 02       		.byte	0x2
 6547 0b3a 91       		.byte	0x91
 6548 0b3b 72       		.sleb128 -14
 6549 0b3c 12       		.uleb128 0x12
 6550 0b3d C7050000 		.4byte	.LASF89
 6551 0b41 01       		.byte	0x1
 6552 0b42 B003     		.2byte	0x3b0
 6553 0b44 7A000000 		.4byte	0x7a
 6554 0b48 02       		.byte	0x2
 6555 0b49 91       		.byte	0x91
 6556 0b4a 76       		.sleb128 -10
 6557 0b4b 12       		.uleb128 0x12
 6558 0b4c A4030000 		.4byte	.LASF90
 6559 0b50 01       		.byte	0x1
 6560 0b51 B103     		.2byte	0x3b1
 6561 0b53 7A000000 		.4byte	0x7a
 6562 0b57 02       		.byte	0x2
 6563 0b58 91       		.byte	0x91
 6564 0b59 74       		.sleb128 -12
 6565 0b5a 12       		.uleb128 0x12
 6566 0b5b D3030000 		.4byte	.LASF56
 6567 0b5f 01       		.byte	0x1
 6568 0b60 B203     		.2byte	0x3b2
 6569 0b62 7A000000 		.4byte	0x7a
 6570 0b66 02       		.byte	0x2
 6571 0b67 91       		.byte	0x91
 6572 0b68 70       		.sleb128 -16
 6573 0b69 00       		.byte	0
 6574 0b6a 0F       		.uleb128 0xf
 6575 0b6b 01       		.byte	0x1
 6576 0b6c 6C030000 		.4byte	.LASF91
 6577 0b70 01       		.byte	0x1
 6578 0b71 E503     		.2byte	0x3e5
 6579 0b73 01       		.byte	0x1
 6580 0b74 00000000 		.4byte	.LFB43
 6581 0b78 C0000000 		.4byte	.LFE43
 6582 0b7c 50090000 		.4byte	.LLST43
 6583 0b80 01       		.byte	0x1
 6584 0b81 0D0C0000 		.4byte	0xc0d
 6585 0b85 10       		.uleb128 0x10
 6586 0b86 76000000 		.4byte	.LASF55
 6587 0b8a 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 148


 6588 0b8b E503     		.2byte	0x3e5
 6589 0b8d 6F000000 		.4byte	0x6f
 6590 0b91 02       		.byte	0x2
 6591 0b92 91       		.byte	0x91
 6592 0b93 6F       		.sleb128 -17
 6593 0b94 10       		.uleb128 0x10
 6594 0b95 9B020000 		.4byte	.LASF87
 6595 0b99 01       		.byte	0x1
 6596 0b9a E503     		.2byte	0x3e5
 6597 0b9c 7A000000 		.4byte	0x7a
 6598 0ba0 02       		.byte	0x2
 6599 0ba1 91       		.byte	0x91
 6600 0ba2 6C       		.sleb128 -20
 6601 0ba3 10       		.uleb128 0x10
 6602 0ba4 37070000 		.4byte	.LASF88
 6603 0ba8 01       		.byte	0x1
 6604 0ba9 E503     		.2byte	0x3e5
 6605 0bab D9010000 		.4byte	0x1d9
 6606 0baf 02       		.byte	0x2
 6607 0bb0 91       		.byte	0x91
 6608 0bb1 68       		.sleb128 -24
 6609 0bb2 10       		.uleb128 0x10
 6610 0bb3 BB060000 		.4byte	.LASF27
 6611 0bb7 01       		.byte	0x1
 6612 0bb8 E503     		.2byte	0x3e5
 6613 0bba 7A000000 		.4byte	0x7a
 6614 0bbe 02       		.byte	0x2
 6615 0bbf 91       		.byte	0x91
 6616 0bc0 66       		.sleb128 -26
 6617 0bc1 10       		.uleb128 0x10
 6618 0bc2 CA070000 		.4byte	.LASF92
 6619 0bc6 01       		.byte	0x1
 6620 0bc7 E503     		.2byte	0x3e5
 6621 0bc9 6F000000 		.4byte	0x6f
 6622 0bcd 02       		.byte	0x2
 6623 0bce 91       		.byte	0x91
 6624 0bcf 00       		.sleb128 0
 6625 0bd0 12       		.uleb128 0x12
 6626 0bd1 19010000 		.4byte	.LASF26
 6627 0bd5 01       		.byte	0x1
 6628 0bd6 E703     		.2byte	0x3e7
 6629 0bd8 7A000000 		.4byte	0x7a
 6630 0bdc 02       		.byte	0x2
 6631 0bdd 91       		.byte	0x91
 6632 0bde 72       		.sleb128 -14
 6633 0bdf 12       		.uleb128 0x12
 6634 0be0 C7050000 		.4byte	.LASF89
 6635 0be4 01       		.byte	0x1
 6636 0be5 E803     		.2byte	0x3e8
 6637 0be7 7A000000 		.4byte	0x7a
 6638 0beb 02       		.byte	0x2
 6639 0bec 91       		.byte	0x91
 6640 0bed 76       		.sleb128 -10
 6641 0bee 12       		.uleb128 0x12
 6642 0bef A4030000 		.4byte	.LASF90
 6643 0bf3 01       		.byte	0x1
 6644 0bf4 E903     		.2byte	0x3e9
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 149


 6645 0bf6 7A000000 		.4byte	0x7a
 6646 0bfa 02       		.byte	0x2
 6647 0bfb 91       		.byte	0x91
 6648 0bfc 74       		.sleb128 -12
 6649 0bfd 12       		.uleb128 0x12
 6650 0bfe D3030000 		.4byte	.LASF56
 6651 0c02 01       		.byte	0x1
 6652 0c03 EA03     		.2byte	0x3ea
 6653 0c05 7A000000 		.4byte	0x7a
 6654 0c09 02       		.byte	0x2
 6655 0c0a 91       		.byte	0x91
 6656 0c0b 70       		.sleb128 -16
 6657 0c0c 00       		.byte	0
 6658 0c0d 0F       		.uleb128 0xf
 6659 0c0e 01       		.byte	0x1
 6660 0c0f 75050000 		.4byte	.LASF93
 6661 0c13 01       		.byte	0x1
 6662 0c14 1B04     		.2byte	0x41b
 6663 0c16 01       		.byte	0x1
 6664 0c17 00000000 		.4byte	.LFB44
 6665 0c1b 06010000 		.4byte	.LFE44
 6666 0c1f 88090000 		.4byte	.LLST44
 6667 0c23 01       		.byte	0x1
 6668 0c24 730C0000 		.4byte	0xc73
 6669 0c28 11       		.uleb128 0x11
 6670 0c29 6D616300 		.ascii	"mac\000"
 6671 0c2d 01       		.byte	0x1
 6672 0c2e 1B04     		.2byte	0x41b
 6673 0c30 D9010000 		.4byte	0x1d9
 6674 0c34 02       		.byte	0x2
 6675 0c35 91       		.byte	0x91
 6676 0c36 6C       		.sleb128 -20
 6677 0c37 11       		.uleb128 0x11
 6678 0c38 697000   		.ascii	"ip\000"
 6679 0c3b 01       		.byte	0x1
 6680 0c3c 1B04     		.2byte	0x41b
 6681 0c3e 85000000 		.4byte	0x85
 6682 0c42 02       		.byte	0x2
 6683 0c43 91       		.byte	0x91
 6684 0c44 68       		.sleb128 -24
 6685 0c45 10       		.uleb128 0x10
 6686 0c46 CC030000 		.4byte	.LASF94
 6687 0c4a 01       		.byte	0x1
 6688 0c4b 1B04     		.2byte	0x41b
 6689 0c4d 85000000 		.4byte	0x85
 6690 0c51 02       		.byte	0x2
 6691 0c52 91       		.byte	0x91
 6692 0c53 64       		.sleb128 -28
 6693 0c54 10       		.uleb128 0x10
 6694 0c55 40010000 		.4byte	.LASF95
 6695 0c59 01       		.byte	0x1
 6696 0c5a 1B04     		.2byte	0x41b
 6697 0c5c 85000000 		.4byte	0x85
 6698 0c60 02       		.byte	0x2
 6699 0c61 91       		.byte	0x91
 6700 0c62 60       		.sleb128 -32
 6701 0c63 12       		.uleb128 0x12
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 150


 6702 0c64 EE000000 		.4byte	.LASF96
 6703 0c68 01       		.byte	0x1
 6704 0c69 2204     		.2byte	0x422
 6705 0c6b 61000000 		.4byte	0x61
 6706 0c6f 02       		.byte	0x2
 6707 0c70 91       		.byte	0x91
 6708 0c71 74       		.sleb128 -12
 6709 0c72 00       		.byte	0
 6710 0c73 0F       		.uleb128 0xf
 6711 0c74 01       		.byte	0x1
 6712 0c75 27010000 		.4byte	.LASF97
 6713 0c79 01       		.byte	0x1
 6714 0c7a 4704     		.2byte	0x447
 6715 0c7c 01       		.byte	0x1
 6716 0c7d 00000000 		.4byte	.LFB45
 6717 0c81 D2000000 		.4byte	.LFE45
 6718 0c85 C0090000 		.4byte	.LLST45
 6719 0c89 01       		.byte	0x1
 6720 0c8a BB0C0000 		.4byte	0xcbb
 6721 0c8e 13       		.uleb128 0x13
 6722 0c8f 697000   		.ascii	"ip\000"
 6723 0c92 01       		.byte	0x1
 6724 0c93 4904     		.2byte	0x449
 6725 0c95 85000000 		.4byte	0x85
 6726 0c99 02       		.byte	0x2
 6727 0c9a 91       		.byte	0x91
 6728 0c9b 74       		.sleb128 -12
 6729 0c9c 12       		.uleb128 0x12
 6730 0c9d 40010000 		.4byte	.LASF95
 6731 0ca1 01       		.byte	0x1
 6732 0ca2 4A04     		.2byte	0x44a
 6733 0ca4 85000000 		.4byte	0x85
 6734 0ca8 02       		.byte	0x2
 6735 0ca9 91       		.byte	0x91
 6736 0caa 6C       		.sleb128 -20
 6737 0cab 13       		.uleb128 0x13
 6738 0cac 73756200 		.ascii	"sub\000"
 6739 0cb0 01       		.byte	0x1
 6740 0cb1 4B04     		.2byte	0x44b
 6741 0cb3 85000000 		.4byte	0x85
 6742 0cb7 02       		.byte	0x2
 6743 0cb8 91       		.byte	0x91
 6744 0cb9 70       		.sleb128 -16
 6745 0cba 00       		.byte	0
 6746 0cbb 14       		.uleb128 0x14
 6747 0cbc 01       		.byte	0x1
 6748 0cbd 8E040000 		.4byte	.LASF98
 6749 0cc1 01       		.byte	0x1
 6750 0cc2 6A04     		.2byte	0x46a
 6751 0cc4 01       		.byte	0x1
 6752 0cc5 85000000 		.4byte	0x85
 6753 0cc9 00000000 		.4byte	.LFB46
 6754 0ccd 4E010000 		.4byte	.LFE46
 6755 0cd1 F8090000 		.4byte	.LLST46
 6756 0cd5 01       		.byte	0x1
 6757 0cd6 340D0000 		.4byte	0xd34
 6758 0cda 10       		.uleb128 0x10
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 151


 6759 0cdb 71060000 		.4byte	.LASF99
 6760 0cdf 01       		.byte	0x1
 6761 0ce0 6A04     		.2byte	0x46a
 6762 0ce2 BD000000 		.4byte	0xbd
 6763 0ce6 02       		.byte	0x2
 6764 0ce7 91       		.byte	0x91
 6765 0ce8 54       		.sleb128 -44
 6766 0ce9 12       		.uleb128 0x12
 6767 0cea EE000000 		.4byte	.LASF96
 6768 0cee 01       		.byte	0x1
 6769 0cef 6F04     		.2byte	0x46f
 6770 0cf1 61000000 		.4byte	0x61
 6771 0cf5 02       		.byte	0x2
 6772 0cf6 91       		.byte	0x91
 6773 0cf7 6C       		.sleb128 -20
 6774 0cf8 12       		.uleb128 0x12
 6775 0cf9 09020000 		.4byte	.LASF100
 6776 0cfd 01       		.byte	0x1
 6777 0cfe 7004     		.2byte	0x470
 6778 0d00 340D0000 		.4byte	0xd34
 6779 0d04 02       		.byte	0x2
 6780 0d05 91       		.byte	0x91
 6781 0d06 5C       		.sleb128 -36
 6782 0d07 13       		.uleb128 0x13
 6783 0d08 697000   		.ascii	"ip\000"
 6784 0d0b 01       		.byte	0x1
 6785 0d0c 7104     		.2byte	0x471
 6786 0d0e 440D0000 		.4byte	0xd44
 6787 0d12 02       		.byte	0x2
 6788 0d13 91       		.byte	0x91
 6789 0d14 58       		.sleb128 -40
 6790 0d15 12       		.uleb128 0x12
 6791 0d16 1C060000 		.4byte	.LASF101
 6792 0d1a 01       		.byte	0x1
 6793 0d1b 7204     		.2byte	0x472
 6794 0d1d 61000000 		.4byte	0x61
 6795 0d21 02       		.byte	0x2
 6796 0d22 91       		.byte	0x91
 6797 0d23 68       		.sleb128 -24
 6798 0d24 12       		.uleb128 0x12
 6799 0d25 71020000 		.4byte	.LASF102
 6800 0d29 01       		.byte	0x1
 6801 0d2a 7304     		.2byte	0x473
 6802 0d2c 61000000 		.4byte	0x61
 6803 0d30 02       		.byte	0x2
 6804 0d31 91       		.byte	0x91
 6805 0d32 64       		.sleb128 -28
 6806 0d33 00       		.byte	0
 6807 0d34 16       		.uleb128 0x16
 6808 0d35 9E000000 		.4byte	0x9e
 6809 0d39 440D0000 		.4byte	0xd44
 6810 0d3d 17       		.uleb128 0x17
 6811 0d3e B0000000 		.4byte	0xb0
 6812 0d42 04       		.byte	0x4
 6813 0d43 00       		.byte	0
 6814 0d44 16       		.uleb128 0x16
 6815 0d45 6F000000 		.4byte	0x6f
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 152


 6816 0d49 540D0000 		.4byte	0xd54
 6817 0d4d 17       		.uleb128 0x17
 6818 0d4e B0000000 		.4byte	0xb0
 6819 0d52 03       		.byte	0x3
 6820 0d53 00       		.byte	0
 6821 0d54 18       		.uleb128 0x18
 6822 0d55 01       		.byte	0x1
 6823 0d56 62000000 		.4byte	.LASF103
 6824 0d5a 01       		.byte	0x1
 6825 0d5b 9F04     		.2byte	0x49f
 6826 0d5d 01       		.byte	0x1
 6827 0d5e A5000000 		.4byte	0xa5
 6828 0d62 00000000 		.4byte	.LFB47
 6829 0d66 5A020000 		.4byte	.LFE47
 6830 0d6a 300A0000 		.4byte	.LLST47
 6831 0d6e 01       		.byte	0x1
 6832 0d6f BF0D0000 		.4byte	0xdbf
 6833 0d73 10       		.uleb128 0x10
 6834 0d74 E1020000 		.4byte	.LASF104
 6835 0d78 01       		.byte	0x1
 6836 0d79 9F04     		.2byte	0x49f
 6837 0d7b BD000000 		.4byte	0xbd
 6838 0d7f 02       		.byte	0x2
 6839 0d80 91       		.byte	0x91
 6840 0d81 64       		.sleb128 -28
 6841 0d82 11       		.uleb128 0x11
 6842 0d83 6D616300 		.ascii	"mac\000"
 6843 0d87 01       		.byte	0x1
 6844 0d88 9F04     		.2byte	0x49f
 6845 0d8a D9010000 		.4byte	0x1d9
 6846 0d8e 02       		.byte	0x2
 6847 0d8f 91       		.byte	0x91
 6848 0d90 60       		.sleb128 -32
 6849 0d91 12       		.uleb128 0x12
 6850 0d92 09020000 		.4byte	.LASF100
 6851 0d96 01       		.byte	0x1
 6852 0d97 A704     		.2byte	0x4a7
 6853 0d99 61000000 		.4byte	0x61
 6854 0d9d 02       		.byte	0x2
 6855 0d9e 91       		.byte	0x91
 6856 0d9f 74       		.sleb128 -12
 6857 0da0 12       		.uleb128 0x12
 6858 0da1 EE000000 		.4byte	.LASF96
 6859 0da5 01       		.byte	0x1
 6860 0da6 A804     		.2byte	0x4a8
 6861 0da8 61000000 		.4byte	0x61
 6862 0dac 02       		.byte	0x2
 6863 0dad 91       		.byte	0x91
 6864 0dae 70       		.sleb128 -16
 6865 0daf 12       		.uleb128 0x12
 6866 0db0 30080000 		.4byte	.LASF105
 6867 0db4 01       		.byte	0x1
 6868 0db5 A904     		.2byte	0x4a9
 6869 0db7 A5000000 		.4byte	0xa5
 6870 0dbb 02       		.byte	0x2
 6871 0dbc 91       		.byte	0x91
 6872 0dbd 6C       		.sleb128 -20
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 153


 6873 0dbe 00       		.byte	0
 6874 0dbf 19       		.uleb128 0x19
 6875 0dc0 01       		.byte	0x1
 6876 0dc1 35050000 		.4byte	.LASF106
 6877 0dc5 01       		.byte	0x1
 6878 0dc6 CC04     		.2byte	0x4cc
 6879 0dc8 01       		.byte	0x1
 6880 0dc9 00000000 		.4byte	.LFB48
 6881 0dcd F2000000 		.4byte	.LFE48
 6882 0dd1 680A0000 		.4byte	.LLST48
 6883 0dd5 01       		.byte	0x1
 6884 0dd6 170E0000 		.4byte	0xe17
 6885 0dda 11       		.uleb128 0x11
 6886 0ddb 6D616300 		.ascii	"mac\000"
 6887 0ddf 01       		.byte	0x1
 6888 0de0 CC04     		.2byte	0x4cc
 6889 0de2 D9010000 		.4byte	0x1d9
 6890 0de6 02       		.byte	0x2
 6891 0de7 91       		.byte	0x91
 6892 0de8 6C       		.sleb128 -20
 6893 0de9 10       		.uleb128 0x10
 6894 0dea E1020000 		.4byte	.LASF104
 6895 0dee 01       		.byte	0x1
 6896 0def CC04     		.2byte	0x4cc
 6897 0df1 B7000000 		.4byte	0xb7
 6898 0df5 02       		.byte	0x2
 6899 0df6 91       		.byte	0x91
 6900 0df7 68       		.sleb128 -24
 6901 0df8 12       		.uleb128 0x12
 6902 0df9 09020000 		.4byte	.LASF100
 6903 0dfd 01       		.byte	0x1
 6904 0dfe CE04     		.2byte	0x4ce
 6905 0e00 61000000 		.4byte	0x61
 6906 0e04 02       		.byte	0x2
 6907 0e05 91       		.byte	0x91
 6908 0e06 74       		.sleb128 -12
 6909 0e07 12       		.uleb128 0x12
 6910 0e08 EE000000 		.4byte	.LASF96
 6911 0e0c 01       		.byte	0x1
 6912 0e0d CF04     		.2byte	0x4cf
 6913 0e0f 61000000 		.4byte	0x61
 6914 0e13 02       		.byte	0x2
 6915 0e14 91       		.byte	0x91
 6916 0e15 70       		.sleb128 -16
 6917 0e16 00       		.byte	0
 6918 0e17 19       		.uleb128 0x19
 6919 0e18 01       		.byte	0x1
 6920 0e19 49050000 		.4byte	.LASF107
 6921 0e1d 01       		.byte	0x1
 6922 0e1e E204     		.2byte	0x4e2
 6923 0e20 01       		.byte	0x1
 6924 0e21 00000000 		.4byte	.LFB49
 6925 0e25 16010000 		.4byte	.LFE49
 6926 0e29 A00A0000 		.4byte	.LLST49
 6927 0e2d 01       		.byte	0x1
 6928 0e2e 9B0E0000 		.4byte	0xe9b
 6929 0e32 11       		.uleb128 0x11
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 154


 6930 0e33 697000   		.ascii	"ip\000"
 6931 0e36 01       		.byte	0x1
 6932 0e37 E204     		.2byte	0x4e2
 6933 0e39 85000000 		.4byte	0x85
 6934 0e3d 02       		.byte	0x2
 6935 0e3e 91       		.byte	0x91
 6936 0e3f 5C       		.sleb128 -36
 6937 0e40 10       		.uleb128 0x10
 6938 0e41 71060000 		.4byte	.LASF99
 6939 0e45 01       		.byte	0x1
 6940 0e46 E204     		.2byte	0x4e2
 6941 0e48 B7000000 		.4byte	0xb7
 6942 0e4c 02       		.byte	0x2
 6943 0e4d 91       		.byte	0x91
 6944 0e4e 58       		.sleb128 -40
 6945 0e4f 12       		.uleb128 0x12
 6946 0e50 56050000 		.4byte	.LASF108
 6947 0e54 01       		.byte	0x1
 6948 0e55 E404     		.2byte	0x4e4
 6949 0e57 D9010000 		.4byte	0x1d9
 6950 0e5b 02       		.byte	0x2
 6951 0e5c 91       		.byte	0x91
 6952 0e5d 68       		.sleb128 -24
 6953 0e5e 12       		.uleb128 0x12
 6954 0e5f EE000000 		.4byte	.LASF96
 6955 0e63 01       		.byte	0x1
 6956 0e64 E504     		.2byte	0x4e5
 6957 0e66 61000000 		.4byte	0x61
 6958 0e6a 02       		.byte	0x2
 6959 0e6b 91       		.byte	0x91
 6960 0e6c 74       		.sleb128 -12
 6961 0e6d 12       		.uleb128 0x12
 6962 0e6e 09020000 		.4byte	.LASF100
 6963 0e72 01       		.byte	0x1
 6964 0e73 E604     		.2byte	0x4e6
 6965 0e75 61000000 		.4byte	0x61
 6966 0e79 02       		.byte	0x2
 6967 0e7a 91       		.byte	0x91
 6968 0e7b 70       		.sleb128 -16
 6969 0e7c 12       		.uleb128 0x12
 6970 0e7d 4E070000 		.4byte	.LASF109
 6971 0e81 01       		.byte	0x1
 6972 0e82 E704     		.2byte	0x4e7
 6973 0e84 61000000 		.4byte	0x61
 6974 0e88 02       		.byte	0x2
 6975 0e89 91       		.byte	0x91
 6976 0e8a 6C       		.sleb128 -20
 6977 0e8b 12       		.uleb128 0x12
 6978 0e8c 2D030000 		.4byte	.LASF110
 6979 0e90 01       		.byte	0x1
 6980 0e91 E704     		.2byte	0x4e7
 6981 0e93 61000000 		.4byte	0x61
 6982 0e97 02       		.byte	0x2
 6983 0e98 91       		.byte	0x91
 6984 0e99 64       		.sleb128 -28
 6985 0e9a 00       		.byte	0
 6986 0e9b 14       		.uleb128 0x14
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 155


 6987 0e9c 01       		.byte	0x1
 6988 0e9d 93070000 		.4byte	.LASF111
 6989 0ea1 01       		.byte	0x1
 6990 0ea2 0305     		.2byte	0x503
 6991 0ea4 01       		.byte	0x1
 6992 0ea5 6F000000 		.4byte	0x6f
 6993 0ea9 00000000 		.4byte	.LFB50
 6994 0ead 34000000 		.4byte	.LFE50
 6995 0eb1 D80A0000 		.4byte	.LLST50
 6996 0eb5 01       		.byte	0x1
 6997 0eb6 D70E0000 		.4byte	0xed7
 6998 0eba 11       		.uleb128 0x11
 6999 0ebb 697000   		.ascii	"ip\000"
 7000 0ebe 01       		.byte	0x1
 7001 0ebf 0305     		.2byte	0x503
 7002 0ec1 85000000 		.4byte	0x85
 7003 0ec5 02       		.byte	0x2
 7004 0ec6 91       		.byte	0x91
 7005 0ec7 6C       		.sleb128 -20
 7006 0ec8 13       		.uleb128 0x13
 7007 0ec9 6F6B00   		.ascii	"ok\000"
 7008 0ecc 01       		.byte	0x1
 7009 0ecd 0505     		.2byte	0x505
 7010 0ecf 6F000000 		.4byte	0x6f
 7011 0ed3 02       		.byte	0x2
 7012 0ed4 91       		.byte	0x91
 7013 0ed5 77       		.sleb128 -9
 7014 0ed6 00       		.byte	0
 7015 0ed7 1A       		.uleb128 0x1a
 7016 0ed8 01       		.byte	0x1
 7017 0ed9 49030000 		.4byte	.LASF147
 7018 0edd 01       		.byte	0x1
 7019 0ede 1005     		.2byte	0x510
 7020 0ee0 01       		.byte	0x1
 7021 0ee1 85000000 		.4byte	0x85
 7022 0ee5 00000000 		.4byte	.LFB51
 7023 0ee9 0E000000 		.4byte	.LFE51
 7024 0eed 100B0000 		.4byte	.LLST51
 7025 0ef1 01       		.byte	0x1
 7026 0ef2 0F       		.uleb128 0xf
 7027 0ef3 01       		.byte	0x1
 7028 0ef4 2A050000 		.4byte	.LASF112
 7029 0ef8 01       		.byte	0x1
 7030 0ef9 1605     		.2byte	0x516
 7031 0efb 01       		.byte	0x1
 7032 0efc 00000000 		.4byte	.LFB52
 7033 0f00 16000000 		.4byte	.LFE52
 7034 0f04 3C0B0000 		.4byte	.LLST52
 7035 0f08 01       		.byte	0x1
 7036 0f09 1D0F0000 		.4byte	0xf1d
 7037 0f0d 11       		.uleb128 0x11
 7038 0f0e 6D616300 		.ascii	"mac\000"
 7039 0f12 01       		.byte	0x1
 7040 0f13 1605     		.2byte	0x516
 7041 0f15 D9010000 		.4byte	0x1d9
 7042 0f19 02       		.byte	0x2
 7043 0f1a 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 156


 7044 0f1b 74       		.sleb128 -12
 7045 0f1c 00       		.byte	0
 7046 0f1d 0F       		.uleb128 0xf
 7047 0f1e 01       		.byte	0x1
 7048 0f1f BF070000 		.4byte	.LASF113
 7049 0f23 01       		.byte	0x1
 7050 0f24 1C05     		.2byte	0x51c
 7051 0f26 01       		.byte	0x1
 7052 0f27 00000000 		.4byte	.LFB53
 7053 0f2b 16000000 		.4byte	.LFE53
 7054 0f2f 740B0000 		.4byte	.LLST53
 7055 0f33 01       		.byte	0x1
 7056 0f34 480F0000 		.4byte	0xf48
 7057 0f38 11       		.uleb128 0x11
 7058 0f39 6D616300 		.ascii	"mac\000"
 7059 0f3d 01       		.byte	0x1
 7060 0f3e 1C05     		.2byte	0x51c
 7061 0f40 D9010000 		.4byte	0x1d9
 7062 0f44 02       		.byte	0x2
 7063 0f45 91       		.byte	0x91
 7064 0f46 74       		.sleb128 -12
 7065 0f47 00       		.byte	0
 7066 0f48 14       		.uleb128 0x14
 7067 0f49 01       		.byte	0x1
 7068 0f4a 13040000 		.4byte	.LASF114
 7069 0f4e 01       		.byte	0x1
 7070 0f4f 2605     		.2byte	0x526
 7071 0f51 01       		.byte	0x1
 7072 0f52 6F000000 		.4byte	0x6f
 7073 0f56 00000000 		.4byte	.LFB54
 7074 0f5a 58010000 		.4byte	.LFE54
 7075 0f5e AC0B0000 		.4byte	.LLST54
 7076 0f62 01       		.byte	0x1
 7077 0f63 B30F0000 		.4byte	0xfb3
 7078 0f67 10       		.uleb128 0x10
 7079 0f68 1E010000 		.4byte	.LASF17
 7080 0f6c 01       		.byte	0x1
 7081 0f6d 2605     		.2byte	0x526
 7082 0f6f 6F000000 		.4byte	0x6f
 7083 0f73 02       		.byte	0x2
 7084 0f74 91       		.byte	0x91
 7085 0f75 6F       		.sleb128 -17
 7086 0f76 10       		.uleb128 0x10
 7087 0f77 28030000 		.4byte	.LASF68
 7088 0f7b 01       		.byte	0x1
 7089 0f7c 2605     		.2byte	0x526
 7090 0f7e 7A000000 		.4byte	0x7a
 7091 0f82 02       		.byte	0x2
 7092 0f83 91       		.byte	0x91
 7093 0f84 6C       		.sleb128 -20
 7094 0f85 10       		.uleb128 0x10
 7095 0f86 CA070000 		.4byte	.LASF92
 7096 0f8a 01       		.byte	0x1
 7097 0f8b 2605     		.2byte	0x526
 7098 0f8d 6F000000 		.4byte	0x6f
 7099 0f91 02       		.byte	0x2
 7100 0f92 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 157


 7101 0f93 6E       		.sleb128 -18
 7102 0f94 12       		.uleb128 0x12
 7103 0f95 76000000 		.4byte	.LASF55
 7104 0f99 01       		.byte	0x1
 7105 0f9a 2805     		.2byte	0x528
 7106 0f9c 6F000000 		.4byte	0x6f
 7107 0fa0 02       		.byte	0x2
 7108 0fa1 91       		.byte	0x91
 7109 0fa2 77       		.sleb128 -9
 7110 0fa3 12       		.uleb128 0x12
 7111 0fa4 EE000000 		.4byte	.LASF96
 7112 0fa8 01       		.byte	0x1
 7113 0fa9 2905     		.2byte	0x529
 7114 0fab 61000000 		.4byte	0x61
 7115 0faf 02       		.byte	0x2
 7116 0fb0 91       		.byte	0x91
 7117 0fb1 70       		.sleb128 -16
 7118 0fb2 00       		.byte	0
 7119 0fb3 0F       		.uleb128 0xf
 7120 0fb4 01       		.byte	0x1
 7121 0fb5 1A050000 		.4byte	.LASF115
 7122 0fb9 01       		.byte	0x1
 7123 0fba 5A05     		.2byte	0x55a
 7124 0fbc 01       		.byte	0x1
 7125 0fbd 00000000 		.4byte	.LFB55
 7126 0fc1 58000000 		.4byte	.LFE55
 7127 0fc5 E40B0000 		.4byte	.LLST55
 7128 0fc9 01       		.byte	0x1
 7129 0fca DE0F0000 		.4byte	0xfde
 7130 0fce 10       		.uleb128 0x10
 7131 0fcf 76000000 		.4byte	.LASF55
 7132 0fd3 01       		.byte	0x1
 7133 0fd4 5A05     		.2byte	0x55a
 7134 0fd6 6F000000 		.4byte	0x6f
 7135 0fda 02       		.byte	0x2
 7136 0fdb 91       		.byte	0x91
 7137 0fdc 77       		.sleb128 -9
 7138 0fdd 00       		.byte	0
 7139 0fde 14       		.uleb128 0x14
 7140 0fdf 01       		.byte	0x1
 7141 0fe0 85060000 		.4byte	.LASF116
 7142 0fe4 01       		.byte	0x1
 7143 0fe5 6C05     		.2byte	0x56c
 7144 0fe7 01       		.byte	0x1
 7145 0fe8 6F000000 		.4byte	0x6f
 7146 0fec 00000000 		.4byte	.LFB56
 7147 0ff0 42000000 		.4byte	.LFE56
 7148 0ff4 1C0C0000 		.4byte	.LLST56
 7149 0ff8 01       		.byte	0x1
 7150 0ff9 1C100000 		.4byte	0x101c
 7151 0ffd 10       		.uleb128 0x10
 7152 0ffe 76000000 		.4byte	.LASF55
 7153 1002 01       		.byte	0x1
 7154 1003 6C05     		.2byte	0x56c
 7155 1005 6F000000 		.4byte	0x6f
 7156 1009 02       		.byte	0x2
 7157 100a 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 158


 7158 100b 6F       		.sleb128 -17
 7159 100c 12       		.uleb128 0x12
 7160 100d B8070000 		.4byte	.LASF66
 7161 1011 01       		.byte	0x1
 7162 1012 6E05     		.2byte	0x56e
 7163 1014 6F000000 		.4byte	0x6f
 7164 1018 02       		.byte	0x2
 7165 1019 91       		.byte	0x91
 7166 101a 77       		.sleb128 -9
 7167 101b 00       		.byte	0
 7168 101c 14       		.uleb128 0x14
 7169 101d 01       		.byte	0x1
 7170 101e 29040000 		.4byte	.LASF117
 7171 1022 01       		.byte	0x1
 7172 1023 7A05     		.2byte	0x57a
 7173 1025 01       		.byte	0x1
 7174 1026 6F000000 		.4byte	0x6f
 7175 102a 00000000 		.4byte	.LFB57
 7176 102e 38000000 		.4byte	.LFE57
 7177 1032 540C0000 		.4byte	.LLST57
 7178 1036 01       		.byte	0x1
 7179 1037 5A100000 		.4byte	0x105a
 7180 103b 10       		.uleb128 0x10
 7181 103c 76000000 		.4byte	.LASF55
 7182 1040 01       		.byte	0x1
 7183 1041 7A05     		.2byte	0x57a
 7184 1043 6F000000 		.4byte	0x6f
 7185 1047 02       		.byte	0x2
 7186 1048 91       		.byte	0x91
 7187 1049 6F       		.sleb128 -17
 7188 104a 12       		.uleb128 0x12
 7189 104b 30080000 		.4byte	.LASF105
 7190 104f 01       		.byte	0x1
 7191 1050 7C05     		.2byte	0x57c
 7192 1052 6F000000 		.4byte	0x6f
 7193 1056 02       		.byte	0x2
 7194 1057 91       		.byte	0x91
 7195 1058 77       		.sleb128 -9
 7196 1059 00       		.byte	0
 7197 105a 0F       		.uleb128 0xf
 7198 105b 01       		.byte	0x1
 7199 105c 31010000 		.4byte	.LASF118
 7200 1060 01       		.byte	0x1
 7201 1061 8A05     		.2byte	0x58a
 7202 1063 01       		.byte	0x1
 7203 1064 00000000 		.4byte	.LFB58
 7204 1068 7E000000 		.4byte	.LFE58
 7205 106c 8C0C0000 		.4byte	.LLST58
 7206 1070 01       		.byte	0x1
 7207 1071 93100000 		.4byte	0x1093
 7208 1075 10       		.uleb128 0x10
 7209 1076 76000000 		.4byte	.LASF55
 7210 107a 01       		.byte	0x1
 7211 107b 8A05     		.2byte	0x58a
 7212 107d 6F000000 		.4byte	0x6f
 7213 1081 02       		.byte	0x2
 7214 1082 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 159


 7215 1083 6F       		.sleb128 -17
 7216 1084 13       		.uleb128 0x13
 7217 1085 697200   		.ascii	"ir\000"
 7218 1088 01       		.byte	0x1
 7219 1089 8C05     		.2byte	0x58c
 7220 108b 6F000000 		.4byte	0x6f
 7221 108f 02       		.byte	0x2
 7222 1090 91       		.byte	0x91
 7223 1091 77       		.sleb128 -9
 7224 1092 00       		.byte	0
 7225 1093 0F       		.uleb128 0xf
 7226 1094 01       		.byte	0x1
 7227 1095 14070000 		.4byte	.LASF119
 7228 1099 01       		.byte	0x1
 7229 109a A705     		.2byte	0x5a7
 7230 109c 01       		.byte	0x1
 7231 109d 00000000 		.4byte	.LFB59
 7232 10a1 78000000 		.4byte	.LFE59
 7233 10a5 C40C0000 		.4byte	.LLST59
 7234 10a9 01       		.byte	0x1
 7235 10aa CC100000 		.4byte	0x10cc
 7236 10ae 10       		.uleb128 0x10
 7237 10af 76000000 		.4byte	.LASF55
 7238 10b3 01       		.byte	0x1
 7239 10b4 A705     		.2byte	0x5a7
 7240 10b6 6F000000 		.4byte	0x6f
 7241 10ba 02       		.byte	0x2
 7242 10bb 91       		.byte	0x91
 7243 10bc 6F       		.sleb128 -17
 7244 10bd 13       		.uleb128 0x13
 7245 10be 697200   		.ascii	"ir\000"
 7246 10c1 01       		.byte	0x1
 7247 10c2 A905     		.2byte	0x5a9
 7248 10c4 6F000000 		.4byte	0x6f
 7249 10c8 02       		.byte	0x2
 7250 10c9 91       		.byte	0x91
 7251 10ca 77       		.sleb128 -9
 7252 10cb 00       		.byte	0
 7253 10cc 14       		.uleb128 0x14
 7254 10cd 01       		.byte	0x1
 7255 10ce 5C040000 		.4byte	.LASF120
 7256 10d2 01       		.byte	0x1
 7257 10d3 BE05     		.2byte	0x5be
 7258 10d5 01       		.byte	0x1
 7259 10d6 7A000000 		.4byte	0x7a
 7260 10da 00000000 		.4byte	.LFB60
 7261 10de 1E000000 		.4byte	.LFE60
 7262 10e2 FC0C0000 		.4byte	.LLST60
 7263 10e6 01       		.byte	0x1
 7264 10e7 FB100000 		.4byte	0x10fb
 7265 10eb 10       		.uleb128 0x10
 7266 10ec 76000000 		.4byte	.LASF55
 7267 10f0 01       		.byte	0x1
 7268 10f1 BE05     		.2byte	0x5be
 7269 10f3 6F000000 		.4byte	0x6f
 7270 10f7 02       		.byte	0x2
 7271 10f8 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 160


 7272 10f9 77       		.sleb128 -9
 7273 10fa 00       		.byte	0
 7274 10fb 14       		.uleb128 0x14
 7275 10fc 01       		.byte	0x1
 7276 10fd 02050000 		.4byte	.LASF121
 7277 1101 01       		.byte	0x1
 7278 1102 C805     		.2byte	0x5c8
 7279 1104 01       		.byte	0x1
 7280 1105 6F000000 		.4byte	0x6f
 7281 1109 00000000 		.4byte	.LFB61
 7282 110d 26000000 		.4byte	.LFE61
 7283 1111 340D0000 		.4byte	.LLST61
 7284 1115 01       		.byte	0x1
 7285 1116 2A110000 		.4byte	0x112a
 7286 111a 10       		.uleb128 0x10
 7287 111b 28030000 		.4byte	.LASF68
 7288 111f 01       		.byte	0x1
 7289 1120 C805     		.2byte	0x5c8
 7290 1122 7A000000 		.4byte	0x7a
 7291 1126 02       		.byte	0x2
 7292 1127 91       		.byte	0x91
 7293 1128 76       		.sleb128 -10
 7294 1129 00       		.byte	0
 7295 112a 0F       		.uleb128 0xf
 7296 112b 01       		.byte	0x1
 7297 112c A3000000 		.4byte	.LASF122
 7298 1130 01       		.byte	0x1
 7299 1131 CE05     		.2byte	0x5ce
 7300 1133 01       		.byte	0x1
 7301 1134 00000000 		.4byte	.LFB62
 7302 1138 24000000 		.4byte	.LFE62
 7303 113c 6C0D0000 		.4byte	.LLST62
 7304 1140 01       		.byte	0x1
 7305 1141 55110000 		.4byte	0x1155
 7306 1145 10       		.uleb128 0x10
 7307 1146 76000000 		.4byte	.LASF55
 7308 114a 01       		.byte	0x1
 7309 114b CE05     		.2byte	0x5ce
 7310 114d 6F000000 		.4byte	0x6f
 7311 1151 02       		.byte	0x2
 7312 1152 91       		.byte	0x91
 7313 1153 77       		.sleb128 -9
 7314 1154 00       		.byte	0
 7315 1155 0F       		.uleb128 0xf
 7316 1156 01       		.byte	0x1
 7317 1157 DB060000 		.4byte	.LASF123
 7318 115b 01       		.byte	0x1
 7319 115c DB05     		.2byte	0x5db
 7320 115e 01       		.byte	0x1
 7321 115f 00000000 		.4byte	.LFB63
 7322 1163 5A000000 		.4byte	.LFE63
 7323 1167 A40D0000 		.4byte	.LLST63
 7324 116b 01       		.byte	0x1
 7325 116c 8F110000 		.4byte	0x118f
 7326 1170 10       		.uleb128 0x10
 7327 1171 76000000 		.4byte	.LASF55
 7328 1175 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 161


 7329 1176 DB05     		.2byte	0x5db
 7330 1178 6F000000 		.4byte	0x6f
 7331 117c 02       		.byte	0x2
 7332 117d 91       		.byte	0x91
 7333 117e 6F       		.sleb128 -17
 7334 117f 12       		.uleb128 0x12
 7335 1180 B8070000 		.4byte	.LASF66
 7336 1184 01       		.byte	0x1
 7337 1185 DD05     		.2byte	0x5dd
 7338 1187 6F000000 		.4byte	0x6f
 7339 118b 02       		.byte	0x2
 7340 118c 91       		.byte	0x91
 7341 118d 77       		.sleb128 -9
 7342 118e 00       		.byte	0
 7343 118f 0F       		.uleb128 0xf
 7344 1190 01       		.byte	0x1
 7345 1191 9A040000 		.4byte	.LASF124
 7346 1195 01       		.byte	0x1
 7347 1196 EF05     		.2byte	0x5ef
 7348 1198 01       		.byte	0x1
 7349 1199 00000000 		.4byte	.LFB64
 7350 119d B0000000 		.4byte	.LFE64
 7351 11a1 DC0D0000 		.4byte	.LLST64
 7352 11a5 01       		.byte	0x1
 7353 11a6 F4110000 		.4byte	0x11f4
 7354 11aa 10       		.uleb128 0x10
 7355 11ab 76000000 		.4byte	.LASF55
 7356 11af 01       		.byte	0x1
 7357 11b0 EF05     		.2byte	0x5ef
 7358 11b2 6F000000 		.4byte	0x6f
 7359 11b6 02       		.byte	0x2
 7360 11b7 91       		.byte	0x91
 7361 11b8 6F       		.sleb128 -17
 7362 11b9 11       		.uleb128 0x11
 7363 11ba 697000   		.ascii	"ip\000"
 7364 11bd 01       		.byte	0x1
 7365 11be EF05     		.2byte	0x5ef
 7366 11c0 85000000 		.4byte	0x85
 7367 11c4 02       		.byte	0x2
 7368 11c5 91       		.byte	0x91
 7369 11c6 68       		.sleb128 -24
 7370 11c7 10       		.uleb128 0x10
 7371 11c8 28030000 		.4byte	.LASF68
 7372 11cc 01       		.byte	0x1
 7373 11cd EF05     		.2byte	0x5ef
 7374 11cf 7A000000 		.4byte	0x7a
 7375 11d3 02       		.byte	0x2
 7376 11d4 91       		.byte	0x91
 7377 11d5 6C       		.sleb128 -20
 7378 11d6 12       		.uleb128 0x12
 7379 11d7 C4030000 		.4byte	.LASF81
 7380 11db 01       		.byte	0x1
 7381 11dc F105     		.2byte	0x5f1
 7382 11de 85000000 		.4byte	0x85
 7383 11e2 02       		.byte	0x2
 7384 11e3 91       		.byte	0x91
 7385 11e4 74       		.sleb128 -12
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 162


 7386 11e5 13       		.uleb128 0x13
 7387 11e6 697200   		.ascii	"ir\000"
 7388 11e9 01       		.byte	0x1
 7389 11ea F205     		.2byte	0x5f2
 7390 11ec 6F000000 		.4byte	0x6f
 7391 11f0 02       		.byte	0x2
 7392 11f1 91       		.byte	0x91
 7393 11f2 73       		.sleb128 -13
 7394 11f3 00       		.byte	0
 7395 11f4 14       		.uleb128 0x14
 7396 11f5 01       		.byte	0x1
 7397 11f6 EB030000 		.4byte	.LASF125
 7398 11fa 01       		.byte	0x1
 7399 11fb 0D06     		.2byte	0x60d
 7400 11fd 01       		.byte	0x1
 7401 11fe 6F000000 		.4byte	0x6f
 7402 1202 00000000 		.4byte	.LFB65
 7403 1206 1E000000 		.4byte	.LFE65
 7404 120a 140E0000 		.4byte	.LLST65
 7405 120e 01       		.byte	0x1
 7406 120f 23120000 		.4byte	0x1223
 7407 1213 10       		.uleb128 0x10
 7408 1214 76000000 		.4byte	.LASF55
 7409 1218 01       		.byte	0x1
 7410 1219 0D06     		.2byte	0x60d
 7411 121b 6F000000 		.4byte	0x6f
 7412 121f 02       		.byte	0x2
 7413 1220 91       		.byte	0x91
 7414 1221 77       		.sleb128 -9
 7415 1222 00       		.byte	0
 7416 1223 0F       		.uleb128 0xf
 7417 1224 01       		.byte	0x1
 7418 1225 DC000000 		.4byte	.LASF126
 7419 1229 01       		.byte	0x1
 7420 122a 1106     		.2byte	0x611
 7421 122c 01       		.byte	0x1
 7422 122d 00000000 		.4byte	.LFB66
 7423 1231 1E000000 		.4byte	.LFE66
 7424 1235 4C0E0000 		.4byte	.LLST66
 7425 1239 01       		.byte	0x1
 7426 123a 4E120000 		.4byte	0x124e
 7427 123e 10       		.uleb128 0x10
 7428 123f 76000000 		.4byte	.LASF55
 7429 1243 01       		.byte	0x1
 7430 1244 1106     		.2byte	0x611
 7431 1246 6F000000 		.4byte	0x6f
 7432 124a 02       		.byte	0x2
 7433 124b 91       		.byte	0x91
 7434 124c 77       		.sleb128 -9
 7435 124d 00       		.byte	0
 7436 124e 14       		.uleb128 0x14
 7437 124f 01       		.byte	0x1
 7438 1250 A9020000 		.4byte	.LASF127
 7439 1254 01       		.byte	0x1
 7440 1255 1706     		.2byte	0x617
 7441 1257 01       		.byte	0x1
 7442 1258 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 163


 7443 125c 00000000 		.4byte	.LFB67
 7444 1260 B4000000 		.4byte	.LFE67
 7445 1264 840E0000 		.4byte	.LLST67
 7446 1268 01       		.byte	0x1
 7447 1269 C8120000 		.4byte	0x12c8
 7448 126d 10       		.uleb128 0x10
 7449 126e 76000000 		.4byte	.LASF55
 7450 1272 01       		.byte	0x1
 7451 1273 1706     		.2byte	0x617
 7452 1275 6F000000 		.4byte	0x6f
 7453 1279 02       		.byte	0x2
 7454 127a 91       		.byte	0x91
 7455 127b 6F       		.sleb128 -17
 7456 127c 10       		.uleb128 0x10
 7457 127d 37070000 		.4byte	.LASF88
 7458 1281 01       		.byte	0x1
 7459 1282 1706     		.2byte	0x617
 7460 1284 D9010000 		.4byte	0x1d9
 7461 1288 02       		.byte	0x2
 7462 1289 91       		.byte	0x91
 7463 128a 68       		.sleb128 -24
 7464 128b 11       		.uleb128 0x11
 7465 128c 6C656E00 		.ascii	"len\000"
 7466 1290 01       		.byte	0x1
 7467 1291 1706     		.2byte	0x617
 7468 1293 7A000000 		.4byte	0x7a
 7469 1297 02       		.byte	0x2
 7470 1298 91       		.byte	0x91
 7471 1299 6C       		.sleb128 -20
 7472 129a 12       		.uleb128 0x12
 7473 129b 6F000000 		.4byte	.LASF128
 7474 129f 01       		.byte	0x1
 7475 12a0 1906     		.2byte	0x619
 7476 12a2 7A000000 		.4byte	0x7a
 7477 12a6 02       		.byte	0x2
 7478 12a7 91       		.byte	0x91
 7479 12a8 76       		.sleb128 -10
 7480 12a9 12       		.uleb128 0x12
 7481 12aa 09040000 		.4byte	.LASF129
 7482 12ae 01       		.byte	0x1
 7483 12af 1A06     		.2byte	0x61a
 7484 12b1 7A000000 		.4byte	0x7a
 7485 12b5 02       		.byte	0x2
 7486 12b6 91       		.byte	0x91
 7487 12b7 74       		.sleb128 -12
 7488 12b8 12       		.uleb128 0x12
 7489 12b9 B8070000 		.4byte	.LASF66
 7490 12bd 01       		.byte	0x1
 7491 12be 1B06     		.2byte	0x61b
 7492 12c0 6F000000 		.4byte	0x6f
 7493 12c4 02       		.byte	0x2
 7494 12c5 91       		.byte	0x91
 7495 12c6 73       		.sleb128 -13
 7496 12c7 00       		.byte	0
 7497 12c8 14       		.uleb128 0x14
 7498 12c9 01       		.byte	0x1
 7499 12ca 59020000 		.4byte	.LASF130
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 164


 7500 12ce 01       		.byte	0x1
 7501 12cf 4106     		.2byte	0x641
 7502 12d1 01       		.byte	0x1
 7503 12d2 7A000000 		.4byte	0x7a
 7504 12d6 00000000 		.4byte	.LFB68
 7505 12da 68000000 		.4byte	.LFE68
 7506 12de BC0E0000 		.4byte	.LLST68
 7507 12e2 01       		.byte	0x1
 7508 12e3 24130000 		.4byte	0x1324
 7509 12e7 10       		.uleb128 0x10
 7510 12e8 76000000 		.4byte	.LASF55
 7511 12ec 01       		.byte	0x1
 7512 12ed 4106     		.2byte	0x641
 7513 12ef 6F000000 		.4byte	0x6f
 7514 12f3 02       		.byte	0x2
 7515 12f4 91       		.byte	0x91
 7516 12f5 6F       		.sleb128 -17
 7517 12f6 10       		.uleb128 0x10
 7518 12f7 37070000 		.4byte	.LASF88
 7519 12fb 01       		.byte	0x1
 7520 12fc 4106     		.2byte	0x641
 7521 12fe D9010000 		.4byte	0x1d9
 7522 1302 02       		.byte	0x2
 7523 1303 91       		.byte	0x91
 7524 1304 68       		.sleb128 -24
 7525 1305 10       		.uleb128 0x10
 7526 1306 BB060000 		.4byte	.LASF27
 7527 130a 01       		.byte	0x1
 7528 130b 4106     		.2byte	0x641
 7529 130d 7A000000 		.4byte	0x7a
 7530 1311 02       		.byte	0x2
 7531 1312 91       		.byte	0x91
 7532 1313 6C       		.sleb128 -20
 7533 1314 12       		.uleb128 0x12
 7534 1315 22040000 		.4byte	.LASF131
 7535 1319 01       		.byte	0x1
 7536 131a 4306     		.2byte	0x643
 7537 131c 7A000000 		.4byte	0x7a
 7538 1320 02       		.byte	0x2
 7539 1321 91       		.byte	0x91
 7540 1322 76       		.sleb128 -10
 7541 1323 00       		.byte	0
 7542 1324 0F       		.uleb128 0xf
 7543 1325 01       		.byte	0x1
 7544 1326 48010000 		.4byte	.LASF132
 7545 132a 01       		.byte	0x1
 7546 132b 6006     		.2byte	0x660
 7547 132d 01       		.byte	0x1
 7548 132e 00000000 		.4byte	.LFB69
 7549 1332 2A000000 		.4byte	.LFE69
 7550 1336 F40E0000 		.4byte	.LLST69
 7551 133a 01       		.byte	0x1
 7552 133b 5E130000 		.4byte	0x135e
 7553 133f 10       		.uleb128 0x10
 7554 1340 76000000 		.4byte	.LASF55
 7555 1344 01       		.byte	0x1
 7556 1345 6006     		.2byte	0x660
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 165


 7557 1347 6F000000 		.4byte	0x6f
 7558 134b 02       		.byte	0x2
 7559 134c 91       		.byte	0x91
 7560 134d 77       		.sleb128 -9
 7561 134e 11       		.uleb128 0x11
 7562 134f 73747200 		.ascii	"str\000"
 7563 1353 01       		.byte	0x1
 7564 1354 6006     		.2byte	0x660
 7565 1356 BD000000 		.4byte	0xbd
 7566 135a 02       		.byte	0x2
 7567 135b 91       		.byte	0x91
 7568 135c 70       		.sleb128 -16
 7569 135d 00       		.byte	0
 7570 135e 14       		.uleb128 0x14
 7571 135f 01       		.byte	0x1
 7572 1360 3F040000 		.4byte	.LASF133
 7573 1364 01       		.byte	0x1
 7574 1365 6A06     		.2byte	0x66a
 7575 1367 01       		.byte	0x1
 7576 1368 6F000000 		.4byte	0x6f
 7577 136c 00000000 		.4byte	.LFB70
 7578 1370 26000000 		.4byte	.LFE70
 7579 1374 2C0F0000 		.4byte	.LLST70
 7580 1378 01       		.byte	0x1
 7581 1379 8D130000 		.4byte	0x138d
 7582 137d 10       		.uleb128 0x10
 7583 137e 28030000 		.4byte	.LASF68
 7584 1382 01       		.byte	0x1
 7585 1383 6A06     		.2byte	0x66a
 7586 1385 7A000000 		.4byte	0x7a
 7587 1389 02       		.byte	0x2
 7588 138a 91       		.byte	0x91
 7589 138b 76       		.sleb128 -10
 7590 138c 00       		.byte	0
 7591 138d 14       		.uleb128 0x14
 7592 138e 01       		.byte	0x1
 7593 138f A7070000 		.4byte	.LASF134
 7594 1393 01       		.byte	0x1
 7595 1394 7006     		.2byte	0x670
 7596 1396 01       		.byte	0x1
 7597 1397 7A000000 		.4byte	0x7a
 7598 139b 00000000 		.4byte	.LFB71
 7599 139f 8A000000 		.4byte	.LFE71
 7600 13a3 640F0000 		.4byte	.LLST71
 7601 13a7 01       		.byte	0x1
 7602 13a8 06140000 		.4byte	0x1406
 7603 13ac 10       		.uleb128 0x10
 7604 13ad 76000000 		.4byte	.LASF55
 7605 13b1 01       		.byte	0x1
 7606 13b2 7006     		.2byte	0x670
 7607 13b4 6F000000 		.4byte	0x6f
 7608 13b8 02       		.byte	0x2
 7609 13b9 91       		.byte	0x91
 7610 13ba 6F       		.sleb128 -17
 7611 13bb 11       		.uleb128 0x11
 7612 13bc 697000   		.ascii	"ip\000"
 7613 13bf 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 166


 7614 13c0 7006     		.2byte	0x670
 7615 13c2 85000000 		.4byte	0x85
 7616 13c6 02       		.byte	0x2
 7617 13c7 91       		.byte	0x91
 7618 13c8 68       		.sleb128 -24
 7619 13c9 10       		.uleb128 0x10
 7620 13ca 28030000 		.4byte	.LASF68
 7621 13ce 01       		.byte	0x1
 7622 13cf 7006     		.2byte	0x670
 7623 13d1 7A000000 		.4byte	0x7a
 7624 13d5 02       		.byte	0x2
 7625 13d6 91       		.byte	0x91
 7626 13d7 6C       		.sleb128 -20
 7627 13d8 10       		.uleb128 0x10
 7628 13d9 37070000 		.4byte	.LASF88
 7629 13dd 01       		.byte	0x1
 7630 13de 7006     		.2byte	0x670
 7631 13e0 D9010000 		.4byte	0x1d9
 7632 13e4 02       		.byte	0x2
 7633 13e5 91       		.byte	0x91
 7634 13e6 64       		.sleb128 -28
 7635 13e7 10       		.uleb128 0x10
 7636 13e8 BB060000 		.4byte	.LASF27
 7637 13ec 01       		.byte	0x1
 7638 13ed 7006     		.2byte	0x670
 7639 13ef 7A000000 		.4byte	0x7a
 7640 13f3 02       		.byte	0x2
 7641 13f4 91       		.byte	0x91
 7642 13f5 00       		.sleb128 0
 7643 13f6 12       		.uleb128 0x12
 7644 13f7 6F000000 		.4byte	.LASF128
 7645 13fb 01       		.byte	0x1
 7646 13fc 7206     		.2byte	0x672
 7647 13fe 7A000000 		.4byte	0x7a
 7648 1402 02       		.byte	0x2
 7649 1403 91       		.byte	0x91
 7650 1404 76       		.sleb128 -10
 7651 1405 00       		.byte	0
 7652 1406 14       		.uleb128 0x14
 7653 1407 01       		.byte	0x1
 7654 1408 94000000 		.4byte	.LASF135
 7655 140c 01       		.byte	0x1
 7656 140d 9D06     		.2byte	0x69d
 7657 140f 01       		.byte	0x1
 7658 1410 7A000000 		.4byte	0x7a
 7659 1414 00000000 		.4byte	.LFB72
 7660 1418 00010000 		.4byte	.LFE72
 7661 141c 9C0F0000 		.4byte	.LLST72
 7662 1420 01       		.byte	0x1
 7663 1421 9D140000 		.4byte	0x149d
 7664 1425 10       		.uleb128 0x10
 7665 1426 76000000 		.4byte	.LASF55
 7666 142a 01       		.byte	0x1
 7667 142b 9D06     		.2byte	0x69d
 7668 142d 6F000000 		.4byte	0x6f
 7669 1431 02       		.byte	0x2
 7670 1432 91       		.byte	0x91
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 167


 7671 1433 67       		.sleb128 -25
 7672 1434 11       		.uleb128 0x11
 7673 1435 697000   		.ascii	"ip\000"
 7674 1438 01       		.byte	0x1
 7675 1439 9D06     		.2byte	0x69d
 7676 143b 9D140000 		.4byte	0x149d
 7677 143f 02       		.byte	0x2
 7678 1440 91       		.byte	0x91
 7679 1441 60       		.sleb128 -32
 7680 1442 10       		.uleb128 0x10
 7681 1443 28030000 		.4byte	.LASF68
 7682 1447 01       		.byte	0x1
 7683 1448 9D06     		.2byte	0x69d
 7684 144a A3140000 		.4byte	0x14a3
 7685 144e 02       		.byte	0x2
 7686 144f 91       		.byte	0x91
 7687 1450 5C       		.sleb128 -36
 7688 1451 10       		.uleb128 0x10
 7689 1452 37070000 		.4byte	.LASF88
 7690 1456 01       		.byte	0x1
 7691 1457 9D06     		.2byte	0x69d
 7692 1459 D9010000 		.4byte	0x1d9
 7693 145d 02       		.byte	0x2
 7694 145e 91       		.byte	0x91
 7695 145f 58       		.sleb128 -40
 7696 1460 10       		.uleb128 0x10
 7697 1461 BB060000 		.4byte	.LASF27
 7698 1465 01       		.byte	0x1
 7699 1466 9D06     		.2byte	0x69d
 7700 1468 7A000000 		.4byte	0x7a
 7701 146c 02       		.byte	0x2
 7702 146d 91       		.byte	0x91
 7703 146e 00       		.sleb128 0
 7704 146f 12       		.uleb128 0x12
 7705 1470 22040000 		.4byte	.LASF131
 7706 1474 01       		.byte	0x1
 7707 1475 9F06     		.2byte	0x69f
 7708 1477 7A000000 		.4byte	0x7a
 7709 147b 02       		.byte	0x2
 7710 147c 91       		.byte	0x91
 7711 147d 76       		.sleb128 -10
 7712 147e 12       		.uleb128 0x12
 7713 147f B6000000 		.4byte	.LASF136
 7714 1483 01       		.byte	0x1
 7715 1484 A006     		.2byte	0x6a0
 7716 1486 7A000000 		.4byte	0x7a
 7717 148a 02       		.byte	0x2
 7718 148b 91       		.byte	0x91
 7719 148c 74       		.sleb128 -12
 7720 148d 12       		.uleb128 0x12
 7721 148e 1B030000 		.4byte	.LASF137
 7722 1492 01       		.byte	0x1
 7723 1493 A106     		.2byte	0x6a1
 7724 1495 A9140000 		.4byte	0x14a9
 7725 1499 02       		.byte	0x2
 7726 149a 91       		.byte	0x91
 7727 149b 6C       		.sleb128 -20
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 168


 7728 149c 00       		.byte	0
 7729 149d 05       		.uleb128 0x5
 7730 149e 04       		.byte	0x4
 7731 149f 85000000 		.4byte	0x85
 7732 14a3 05       		.uleb128 0x5
 7733 14a4 04       		.byte	0x4
 7734 14a5 7A000000 		.4byte	0x7a
 7735 14a9 16       		.uleb128 0x16
 7736 14aa 6F000000 		.4byte	0x6f
 7737 14ae B9140000 		.4byte	0x14b9
 7738 14b2 17       		.uleb128 0x17
 7739 14b3 B0000000 		.4byte	0xb0
 7740 14b7 07       		.byte	0x7
 7741 14b8 00       		.byte	0
 7742 14b9 1B       		.uleb128 0x1b
 7743 14ba EE040000 		.4byte	.LASF138
 7744 14be 01       		.byte	0x1
 7745 14bf 30       		.byte	0x30
 7746 14c0 6F000000 		.4byte	0x6f
 7747 14c4 01       		.byte	0x1
 7748 14c5 01       		.byte	0x1
 7749 14c6 16       		.uleb128 0x16
 7750 14c7 7A000000 		.4byte	0x7a
 7751 14cb D6140000 		.4byte	0x14d6
 7752 14cf 17       		.uleb128 0x17
 7753 14d0 B0000000 		.4byte	0xb0
 7754 14d4 07       		.byte	0x7
 7755 14d5 00       		.byte	0
 7756 14d6 1C       		.uleb128 0x1c
 7757 14d7 A2060000 		.4byte	.LASF139
 7758 14db 01       		.byte	0x1
 7759 14dc 4B       		.byte	0x4b
 7760 14dd E8140000 		.4byte	0x14e8
 7761 14e1 01       		.byte	0x1
 7762 14e2 05       		.byte	0x5
 7763 14e3 03       		.byte	0x3
 7764 14e4 00000000 		.4byte	ETH_SOCKET_TX_BASE
 7765 14e8 06       		.uleb128 0x6
 7766 14e9 C6140000 		.4byte	0x14c6
 7767 14ed 1C       		.uleb128 0x1c
 7768 14ee 4E060000 		.4byte	.LASF140
 7769 14f2 01       		.byte	0x1
 7770 14f3 4C       		.byte	0x4c
 7771 14f4 FF140000 		.4byte	0x14ff
 7772 14f8 01       		.byte	0x1
 7773 14f9 05       		.byte	0x5
 7774 14fa 03       		.byte	0x3
 7775 14fb 00000000 		.4byte	ETH_SOCKET_RX_BASE
 7776 14ff 06       		.uleb128 0x6
 7777 1500 C6140000 		.4byte	0x14c6
 7778 1504 16       		.uleb128 0x16
 7779 1505 25010000 		.4byte	0x125
 7780 1509 14150000 		.4byte	0x1514
 7781 150d 17       		.uleb128 0x17
 7782 150e B0000000 		.4byte	0xb0
 7783 1512 07       		.byte	0x7
 7784 1513 00       		.byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 169


 7785 1514 1C       		.uleb128 0x1c
 7786 1515 4B040000 		.4byte	.LASF141
 7787 1519 01       		.byte	0x1
 7788 151a 5B       		.byte	0x5b
 7789 151b 04150000 		.4byte	0x1504
 7790 151f 01       		.byte	0x1
 7791 1520 05       		.byte	0x5
 7792 1521 03       		.byte	0x3
 7793 1522 00000000 		.4byte	ETH_SocketConfig
 7794 1526 1C       		.uleb128 0x1c
 7795 1527 D0070000 		.4byte	.LASF142
 7796 152b 01       		.byte	0x1
 7797 152c 5C       		.byte	0x5c
 7798 152d 85000000 		.4byte	0x85
 7799 1531 01       		.byte	0x1
 7800 1532 05       		.byte	0x5
 7801 1533 03       		.byte	0x3
 7802 1534 00000000 		.4byte	ETH_SubnetMask
 7803 1538 16       		.uleb128 0x16
 7804 1539 6F000000 		.4byte	0x6f
 7805 153d 48150000 		.4byte	0x1548
 7806 1541 17       		.uleb128 0x17
 7807 1542 B0000000 		.4byte	0xb0
 7808 1546 05       		.byte	0x5
 7809 1547 00       		.byte	0
 7810 1548 1C       		.uleb128 0x1c
 7811 1549 69010000 		.4byte	.LASF143
 7812 154d 01       		.byte	0x1
 7813 154e 5E       		.byte	0x5e
 7814 154f 38150000 		.4byte	0x1538
 7815 1553 01       		.byte	0x1
 7816 1554 05       		.byte	0x5
 7817 1555 03       		.byte	0x3
 7818 1556 00000000 		.4byte	ETH_MAC
 7819 155a 00       		.byte	0
 7820              		.section	.debug_abbrev,"",%progbits
 7821              	.Ldebug_abbrev0:
 7822 0000 01       		.uleb128 0x1
 7823 0001 11       		.uleb128 0x11
 7824 0002 01       		.byte	0x1
 7825 0003 25       		.uleb128 0x25
 7826 0004 0E       		.uleb128 0xe
 7827 0005 13       		.uleb128 0x13
 7828 0006 0B       		.uleb128 0xb
 7829 0007 03       		.uleb128 0x3
 7830 0008 0E       		.uleb128 0xe
 7831 0009 1B       		.uleb128 0x1b
 7832 000a 0E       		.uleb128 0xe
 7833 000b 55       		.uleb128 0x55
 7834 000c 06       		.uleb128 0x6
 7835 000d 11       		.uleb128 0x11
 7836 000e 01       		.uleb128 0x1
 7837 000f 52       		.uleb128 0x52
 7838 0010 01       		.uleb128 0x1
 7839 0011 10       		.uleb128 0x10
 7840 0012 06       		.uleb128 0x6
 7841 0013 00       		.byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 170


 7842 0014 00       		.byte	0
 7843 0015 02       		.uleb128 0x2
 7844 0016 24       		.uleb128 0x24
 7845 0017 00       		.byte	0
 7846 0018 0B       		.uleb128 0xb
 7847 0019 0B       		.uleb128 0xb
 7848 001a 3E       		.uleb128 0x3e
 7849 001b 0B       		.uleb128 0xb
 7850 001c 03       		.uleb128 0x3
 7851 001d 0E       		.uleb128 0xe
 7852 001e 00       		.byte	0
 7853 001f 00       		.byte	0
 7854 0020 03       		.uleb128 0x3
 7855 0021 24       		.uleb128 0x24
 7856 0022 00       		.byte	0
 7857 0023 0B       		.uleb128 0xb
 7858 0024 0B       		.uleb128 0xb
 7859 0025 3E       		.uleb128 0x3e
 7860 0026 0B       		.uleb128 0xb
 7861 0027 03       		.uleb128 0x3
 7862 0028 08       		.uleb128 0x8
 7863 0029 00       		.byte	0
 7864 002a 00       		.byte	0
 7865 002b 04       		.uleb128 0x4
 7866 002c 16       		.uleb128 0x16
 7867 002d 00       		.byte	0
 7868 002e 03       		.uleb128 0x3
 7869 002f 0E       		.uleb128 0xe
 7870 0030 3A       		.uleb128 0x3a
 7871 0031 0B       		.uleb128 0xb
 7872 0032 3B       		.uleb128 0x3b
 7873 0033 0B       		.uleb128 0xb
 7874 0034 49       		.uleb128 0x49
 7875 0035 13       		.uleb128 0x13
 7876 0036 00       		.byte	0
 7877 0037 00       		.byte	0
 7878 0038 05       		.uleb128 0x5
 7879 0039 0F       		.uleb128 0xf
 7880 003a 00       		.byte	0
 7881 003b 0B       		.uleb128 0xb
 7882 003c 0B       		.uleb128 0xb
 7883 003d 49       		.uleb128 0x49
 7884 003e 13       		.uleb128 0x13
 7885 003f 00       		.byte	0
 7886 0040 00       		.byte	0
 7887 0041 06       		.uleb128 0x6
 7888 0042 26       		.uleb128 0x26
 7889 0043 00       		.byte	0
 7890 0044 49       		.uleb128 0x49
 7891 0045 13       		.uleb128 0x13
 7892 0046 00       		.byte	0
 7893 0047 00       		.byte	0
 7894 0048 07       		.uleb128 0x7
 7895 0049 13       		.uleb128 0x13
 7896 004a 01       		.byte	0x1
 7897 004b 0B       		.uleb128 0xb
 7898 004c 0B       		.uleb128 0xb
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 171


 7899 004d 3A       		.uleb128 0x3a
 7900 004e 0B       		.uleb128 0xb
 7901 004f 3B       		.uleb128 0x3b
 7902 0050 0B       		.uleb128 0xb
 7903 0051 01       		.uleb128 0x1
 7904 0052 13       		.uleb128 0x13
 7905 0053 00       		.byte	0
 7906 0054 00       		.byte	0
 7907 0055 08       		.uleb128 0x8
 7908 0056 0D       		.uleb128 0xd
 7909 0057 00       		.byte	0
 7910 0058 03       		.uleb128 0x3
 7911 0059 0E       		.uleb128 0xe
 7912 005a 3A       		.uleb128 0x3a
 7913 005b 0B       		.uleb128 0xb
 7914 005c 3B       		.uleb128 0x3b
 7915 005d 0B       		.uleb128 0xb
 7916 005e 49       		.uleb128 0x49
 7917 005f 13       		.uleb128 0x13
 7918 0060 38       		.uleb128 0x38
 7919 0061 0A       		.uleb128 0xa
 7920 0062 00       		.byte	0
 7921 0063 00       		.byte	0
 7922 0064 09       		.uleb128 0x9
 7923 0065 2E       		.uleb128 0x2e
 7924 0066 00       		.byte	0
 7925 0067 3F       		.uleb128 0x3f
 7926 0068 0C       		.uleb128 0xc
 7927 0069 03       		.uleb128 0x3
 7928 006a 0E       		.uleb128 0xe
 7929 006b 3A       		.uleb128 0x3a
 7930 006c 0B       		.uleb128 0xb
 7931 006d 3B       		.uleb128 0x3b
 7932 006e 0B       		.uleb128 0xb
 7933 006f 27       		.uleb128 0x27
 7934 0070 0C       		.uleb128 0xc
 7935 0071 11       		.uleb128 0x11
 7936 0072 01       		.uleb128 0x1
 7937 0073 12       		.uleb128 0x12
 7938 0074 01       		.uleb128 0x1
 7939 0075 40       		.uleb128 0x40
 7940 0076 06       		.uleb128 0x6
 7941 0077 9642     		.uleb128 0x2116
 7942 0079 0C       		.uleb128 0xc
 7943 007a 00       		.byte	0
 7944 007b 00       		.byte	0
 7945 007c 0A       		.uleb128 0xa
 7946 007d 2E       		.uleb128 0x2e
 7947 007e 01       		.byte	0x1
 7948 007f 3F       		.uleb128 0x3f
 7949 0080 0C       		.uleb128 0xc
 7950 0081 03       		.uleb128 0x3
 7951 0082 0E       		.uleb128 0xe
 7952 0083 3A       		.uleb128 0x3a
 7953 0084 0B       		.uleb128 0xb
 7954 0085 3B       		.uleb128 0x3b
 7955 0086 0B       		.uleb128 0xb
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 172


 7956 0087 27       		.uleb128 0x27
 7957 0088 0C       		.uleb128 0xc
 7958 0089 11       		.uleb128 0x11
 7959 008a 01       		.uleb128 0x1
 7960 008b 12       		.uleb128 0x12
 7961 008c 01       		.uleb128 0x1
 7962 008d 40       		.uleb128 0x40
 7963 008e 06       		.uleb128 0x6
 7964 008f 9642     		.uleb128 0x2116
 7965 0091 0C       		.uleb128 0xc
 7966 0092 01       		.uleb128 0x1
 7967 0093 13       		.uleb128 0x13
 7968 0094 00       		.byte	0
 7969 0095 00       		.byte	0
 7970 0096 0B       		.uleb128 0xb
 7971 0097 05       		.uleb128 0x5
 7972 0098 00       		.byte	0
 7973 0099 03       		.uleb128 0x3
 7974 009a 0E       		.uleb128 0xe
 7975 009b 3A       		.uleb128 0x3a
 7976 009c 0B       		.uleb128 0xb
 7977 009d 3B       		.uleb128 0x3b
 7978 009e 0B       		.uleb128 0xb
 7979 009f 49       		.uleb128 0x49
 7980 00a0 13       		.uleb128 0x13
 7981 00a1 02       		.uleb128 0x2
 7982 00a2 0A       		.uleb128 0xa
 7983 00a3 00       		.byte	0
 7984 00a4 00       		.byte	0
 7985 00a5 0C       		.uleb128 0xc
 7986 00a6 05       		.uleb128 0x5
 7987 00a7 00       		.byte	0
 7988 00a8 03       		.uleb128 0x3
 7989 00a9 08       		.uleb128 0x8
 7990 00aa 3A       		.uleb128 0x3a
 7991 00ab 0B       		.uleb128 0xb
 7992 00ac 3B       		.uleb128 0x3b
 7993 00ad 0B       		.uleb128 0xb
 7994 00ae 49       		.uleb128 0x49
 7995 00af 13       		.uleb128 0x13
 7996 00b0 02       		.uleb128 0x2
 7997 00b1 0A       		.uleb128 0xa
 7998 00b2 00       		.byte	0
 7999 00b3 00       		.byte	0
 8000 00b4 0D       		.uleb128 0xd
 8001 00b5 34       		.uleb128 0x34
 8002 00b6 00       		.byte	0
 8003 00b7 03       		.uleb128 0x3
 8004 00b8 0E       		.uleb128 0xe
 8005 00b9 3A       		.uleb128 0x3a
 8006 00ba 0B       		.uleb128 0xb
 8007 00bb 3B       		.uleb128 0x3b
 8008 00bc 0B       		.uleb128 0xb
 8009 00bd 49       		.uleb128 0x49
 8010 00be 13       		.uleb128 0x13
 8011 00bf 02       		.uleb128 0x2
 8012 00c0 0A       		.uleb128 0xa
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 173


 8013 00c1 00       		.byte	0
 8014 00c2 00       		.byte	0
 8015 00c3 0E       		.uleb128 0xe
 8016 00c4 34       		.uleb128 0x34
 8017 00c5 00       		.byte	0
 8018 00c6 03       		.uleb128 0x3
 8019 00c7 08       		.uleb128 0x8
 8020 00c8 3A       		.uleb128 0x3a
 8021 00c9 0B       		.uleb128 0xb
 8022 00ca 3B       		.uleb128 0x3b
 8023 00cb 0B       		.uleb128 0xb
 8024 00cc 49       		.uleb128 0x49
 8025 00cd 13       		.uleb128 0x13
 8026 00ce 02       		.uleb128 0x2
 8027 00cf 0A       		.uleb128 0xa
 8028 00d0 00       		.byte	0
 8029 00d1 00       		.byte	0
 8030 00d2 0F       		.uleb128 0xf
 8031 00d3 2E       		.uleb128 0x2e
 8032 00d4 01       		.byte	0x1
 8033 00d5 3F       		.uleb128 0x3f
 8034 00d6 0C       		.uleb128 0xc
 8035 00d7 03       		.uleb128 0x3
 8036 00d8 0E       		.uleb128 0xe
 8037 00d9 3A       		.uleb128 0x3a
 8038 00da 0B       		.uleb128 0xb
 8039 00db 3B       		.uleb128 0x3b
 8040 00dc 05       		.uleb128 0x5
 8041 00dd 27       		.uleb128 0x27
 8042 00de 0C       		.uleb128 0xc
 8043 00df 11       		.uleb128 0x11
 8044 00e0 01       		.uleb128 0x1
 8045 00e1 12       		.uleb128 0x12
 8046 00e2 01       		.uleb128 0x1
 8047 00e3 40       		.uleb128 0x40
 8048 00e4 06       		.uleb128 0x6
 8049 00e5 9642     		.uleb128 0x2116
 8050 00e7 0C       		.uleb128 0xc
 8051 00e8 01       		.uleb128 0x1
 8052 00e9 13       		.uleb128 0x13
 8053 00ea 00       		.byte	0
 8054 00eb 00       		.byte	0
 8055 00ec 10       		.uleb128 0x10
 8056 00ed 05       		.uleb128 0x5
 8057 00ee 00       		.byte	0
 8058 00ef 03       		.uleb128 0x3
 8059 00f0 0E       		.uleb128 0xe
 8060 00f1 3A       		.uleb128 0x3a
 8061 00f2 0B       		.uleb128 0xb
 8062 00f3 3B       		.uleb128 0x3b
 8063 00f4 05       		.uleb128 0x5
 8064 00f5 49       		.uleb128 0x49
 8065 00f6 13       		.uleb128 0x13
 8066 00f7 02       		.uleb128 0x2
 8067 00f8 0A       		.uleb128 0xa
 8068 00f9 00       		.byte	0
 8069 00fa 00       		.byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 174


 8070 00fb 11       		.uleb128 0x11
 8071 00fc 05       		.uleb128 0x5
 8072 00fd 00       		.byte	0
 8073 00fe 03       		.uleb128 0x3
 8074 00ff 08       		.uleb128 0x8
 8075 0100 3A       		.uleb128 0x3a
 8076 0101 0B       		.uleb128 0xb
 8077 0102 3B       		.uleb128 0x3b
 8078 0103 05       		.uleb128 0x5
 8079 0104 49       		.uleb128 0x49
 8080 0105 13       		.uleb128 0x13
 8081 0106 02       		.uleb128 0x2
 8082 0107 0A       		.uleb128 0xa
 8083 0108 00       		.byte	0
 8084 0109 00       		.byte	0
 8085 010a 12       		.uleb128 0x12
 8086 010b 34       		.uleb128 0x34
 8087 010c 00       		.byte	0
 8088 010d 03       		.uleb128 0x3
 8089 010e 0E       		.uleb128 0xe
 8090 010f 3A       		.uleb128 0x3a
 8091 0110 0B       		.uleb128 0xb
 8092 0111 3B       		.uleb128 0x3b
 8093 0112 05       		.uleb128 0x5
 8094 0113 49       		.uleb128 0x49
 8095 0114 13       		.uleb128 0x13
 8096 0115 02       		.uleb128 0x2
 8097 0116 0A       		.uleb128 0xa
 8098 0117 00       		.byte	0
 8099 0118 00       		.byte	0
 8100 0119 13       		.uleb128 0x13
 8101 011a 34       		.uleb128 0x34
 8102 011b 00       		.byte	0
 8103 011c 03       		.uleb128 0x3
 8104 011d 08       		.uleb128 0x8
 8105 011e 3A       		.uleb128 0x3a
 8106 011f 0B       		.uleb128 0xb
 8107 0120 3B       		.uleb128 0x3b
 8108 0121 05       		.uleb128 0x5
 8109 0122 49       		.uleb128 0x49
 8110 0123 13       		.uleb128 0x13
 8111 0124 02       		.uleb128 0x2
 8112 0125 0A       		.uleb128 0xa
 8113 0126 00       		.byte	0
 8114 0127 00       		.byte	0
 8115 0128 14       		.uleb128 0x14
 8116 0129 2E       		.uleb128 0x2e
 8117 012a 01       		.byte	0x1
 8118 012b 3F       		.uleb128 0x3f
 8119 012c 0C       		.uleb128 0xc
 8120 012d 03       		.uleb128 0x3
 8121 012e 0E       		.uleb128 0xe
 8122 012f 3A       		.uleb128 0x3a
 8123 0130 0B       		.uleb128 0xb
 8124 0131 3B       		.uleb128 0x3b
 8125 0132 05       		.uleb128 0x5
 8126 0133 27       		.uleb128 0x27
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 175


 8127 0134 0C       		.uleb128 0xc
 8128 0135 49       		.uleb128 0x49
 8129 0136 13       		.uleb128 0x13
 8130 0137 11       		.uleb128 0x11
 8131 0138 01       		.uleb128 0x1
 8132 0139 12       		.uleb128 0x12
 8133 013a 01       		.uleb128 0x1
 8134 013b 40       		.uleb128 0x40
 8135 013c 06       		.uleb128 0x6
 8136 013d 9642     		.uleb128 0x2116
 8137 013f 0C       		.uleb128 0xc
 8138 0140 01       		.uleb128 0x1
 8139 0141 13       		.uleb128 0x13
 8140 0142 00       		.byte	0
 8141 0143 00       		.byte	0
 8142 0144 15       		.uleb128 0x15
 8143 0145 34       		.uleb128 0x34
 8144 0146 00       		.byte	0
 8145 0147 03       		.uleb128 0x3
 8146 0148 08       		.uleb128 0x8
 8147 0149 3A       		.uleb128 0x3a
 8148 014a 0B       		.uleb128 0xb
 8149 014b 3B       		.uleb128 0x3b
 8150 014c 05       		.uleb128 0x5
 8151 014d 49       		.uleb128 0x49
 8152 014e 13       		.uleb128 0x13
 8153 014f 00       		.byte	0
 8154 0150 00       		.byte	0
 8155 0151 16       		.uleb128 0x16
 8156 0152 01       		.uleb128 0x1
 8157 0153 01       		.byte	0x1
 8158 0154 49       		.uleb128 0x49
 8159 0155 13       		.uleb128 0x13
 8160 0156 01       		.uleb128 0x1
 8161 0157 13       		.uleb128 0x13
 8162 0158 00       		.byte	0
 8163 0159 00       		.byte	0
 8164 015a 17       		.uleb128 0x17
 8165 015b 21       		.uleb128 0x21
 8166 015c 00       		.byte	0
 8167 015d 49       		.uleb128 0x49
 8168 015e 13       		.uleb128 0x13
 8169 015f 2F       		.uleb128 0x2f
 8170 0160 0B       		.uleb128 0xb
 8171 0161 00       		.byte	0
 8172 0162 00       		.byte	0
 8173 0163 18       		.uleb128 0x18
 8174 0164 2E       		.uleb128 0x2e
 8175 0165 01       		.byte	0x1
 8176 0166 3F       		.uleb128 0x3f
 8177 0167 0C       		.uleb128 0xc
 8178 0168 03       		.uleb128 0x3
 8179 0169 0E       		.uleb128 0xe
 8180 016a 3A       		.uleb128 0x3a
 8181 016b 0B       		.uleb128 0xb
 8182 016c 3B       		.uleb128 0x3b
 8183 016d 05       		.uleb128 0x5
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 176


 8184 016e 27       		.uleb128 0x27
 8185 016f 0C       		.uleb128 0xc
 8186 0170 49       		.uleb128 0x49
 8187 0171 13       		.uleb128 0x13
 8188 0172 11       		.uleb128 0x11
 8189 0173 01       		.uleb128 0x1
 8190 0174 12       		.uleb128 0x12
 8191 0175 01       		.uleb128 0x1
 8192 0176 40       		.uleb128 0x40
 8193 0177 06       		.uleb128 0x6
 8194 0178 9742     		.uleb128 0x2117
 8195 017a 0C       		.uleb128 0xc
 8196 017b 01       		.uleb128 0x1
 8197 017c 13       		.uleb128 0x13
 8198 017d 00       		.byte	0
 8199 017e 00       		.byte	0
 8200 017f 19       		.uleb128 0x19
 8201 0180 2E       		.uleb128 0x2e
 8202 0181 01       		.byte	0x1
 8203 0182 3F       		.uleb128 0x3f
 8204 0183 0C       		.uleb128 0xc
 8205 0184 03       		.uleb128 0x3
 8206 0185 0E       		.uleb128 0xe
 8207 0186 3A       		.uleb128 0x3a
 8208 0187 0B       		.uleb128 0xb
 8209 0188 3B       		.uleb128 0x3b
 8210 0189 05       		.uleb128 0x5
 8211 018a 27       		.uleb128 0x27
 8212 018b 0C       		.uleb128 0xc
 8213 018c 11       		.uleb128 0x11
 8214 018d 01       		.uleb128 0x1
 8215 018e 12       		.uleb128 0x12
 8216 018f 01       		.uleb128 0x1
 8217 0190 40       		.uleb128 0x40
 8218 0191 06       		.uleb128 0x6
 8219 0192 9742     		.uleb128 0x2117
 8220 0194 0C       		.uleb128 0xc
 8221 0195 01       		.uleb128 0x1
 8222 0196 13       		.uleb128 0x13
 8223 0197 00       		.byte	0
 8224 0198 00       		.byte	0
 8225 0199 1A       		.uleb128 0x1a
 8226 019a 2E       		.uleb128 0x2e
 8227 019b 00       		.byte	0
 8228 019c 3F       		.uleb128 0x3f
 8229 019d 0C       		.uleb128 0xc
 8230 019e 03       		.uleb128 0x3
 8231 019f 0E       		.uleb128 0xe
 8232 01a0 3A       		.uleb128 0x3a
 8233 01a1 0B       		.uleb128 0xb
 8234 01a2 3B       		.uleb128 0x3b
 8235 01a3 05       		.uleb128 0x5
 8236 01a4 27       		.uleb128 0x27
 8237 01a5 0C       		.uleb128 0xc
 8238 01a6 49       		.uleb128 0x49
 8239 01a7 13       		.uleb128 0x13
 8240 01a8 11       		.uleb128 0x11
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 177


 8241 01a9 01       		.uleb128 0x1
 8242 01aa 12       		.uleb128 0x12
 8243 01ab 01       		.uleb128 0x1
 8244 01ac 40       		.uleb128 0x40
 8245 01ad 06       		.uleb128 0x6
 8246 01ae 9642     		.uleb128 0x2116
 8247 01b0 0C       		.uleb128 0xc
 8248 01b1 00       		.byte	0
 8249 01b2 00       		.byte	0
 8250 01b3 1B       		.uleb128 0x1b
 8251 01b4 34       		.uleb128 0x34
 8252 01b5 00       		.byte	0
 8253 01b6 03       		.uleb128 0x3
 8254 01b7 0E       		.uleb128 0xe
 8255 01b8 3A       		.uleb128 0x3a
 8256 01b9 0B       		.uleb128 0xb
 8257 01ba 3B       		.uleb128 0x3b
 8258 01bb 0B       		.uleb128 0xb
 8259 01bc 49       		.uleb128 0x49
 8260 01bd 13       		.uleb128 0x13
 8261 01be 3F       		.uleb128 0x3f
 8262 01bf 0C       		.uleb128 0xc
 8263 01c0 3C       		.uleb128 0x3c
 8264 01c1 0C       		.uleb128 0xc
 8265 01c2 00       		.byte	0
 8266 01c3 00       		.byte	0
 8267 01c4 1C       		.uleb128 0x1c
 8268 01c5 34       		.uleb128 0x34
 8269 01c6 00       		.byte	0
 8270 01c7 03       		.uleb128 0x3
 8271 01c8 0E       		.uleb128 0xe
 8272 01c9 3A       		.uleb128 0x3a
 8273 01ca 0B       		.uleb128 0xb
 8274 01cb 3B       		.uleb128 0x3b
 8275 01cc 0B       		.uleb128 0xb
 8276 01cd 49       		.uleb128 0x49
 8277 01ce 13       		.uleb128 0x13
 8278 01cf 3F       		.uleb128 0x3f
 8279 01d0 0C       		.uleb128 0xc
 8280 01d1 02       		.uleb128 0x2
 8281 01d2 0A       		.uleb128 0xa
 8282 01d3 00       		.byte	0
 8283 01d4 00       		.byte	0
 8284 01d5 00       		.byte	0
 8285              		.section	.debug_loc,"",%progbits
 8286              	.Ldebug_loc0:
 8287              	.LLST0:
 8288 0000 00000000 		.4byte	.LFB0
 8289 0004 02000000 		.4byte	.LCFI0
 8290 0008 0200     		.2byte	0x2
 8291 000a 7D       		.byte	0x7d
 8292 000b 00       		.sleb128 0
 8293 000c 02000000 		.4byte	.LCFI0
 8294 0010 04000000 		.4byte	.LCFI1
 8295 0014 0200     		.2byte	0x2
 8296 0016 7D       		.byte	0x7d
 8297 0017 08       		.sleb128 8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 178


 8298 0018 04000000 		.4byte	.LCFI1
 8299 001c 0E000000 		.4byte	.LFE0
 8300 0020 0200     		.2byte	0x2
 8301 0022 77       		.byte	0x77
 8302 0023 08       		.sleb128 8
 8303 0024 00000000 		.4byte	0
 8304 0028 00000000 		.4byte	0
 8305              	.LLST1:
 8306 002c 00000000 		.4byte	.LFB1
 8307 0030 02000000 		.4byte	.LCFI2
 8308 0034 0200     		.2byte	0x2
 8309 0036 7D       		.byte	0x7d
 8310 0037 00       		.sleb128 0
 8311 0038 02000000 		.4byte	.LCFI2
 8312 003c 04000000 		.4byte	.LCFI3
 8313 0040 0200     		.2byte	0x2
 8314 0042 7D       		.byte	0x7d
 8315 0043 08       		.sleb128 8
 8316 0044 04000000 		.4byte	.LCFI3
 8317 0048 0E000000 		.4byte	.LFE1
 8318 004c 0200     		.2byte	0x2
 8319 004e 77       		.byte	0x77
 8320 004f 08       		.sleb128 8
 8321 0050 00000000 		.4byte	0
 8322 0054 00000000 		.4byte	0
 8323              	.LLST2:
 8324 0058 00000000 		.4byte	.LFB2
 8325 005c 02000000 		.4byte	.LCFI4
 8326 0060 0200     		.2byte	0x2
 8327 0062 7D       		.byte	0x7d
 8328 0063 00       		.sleb128 0
 8329 0064 02000000 		.4byte	.LCFI4
 8330 0068 04000000 		.4byte	.LCFI5
 8331 006c 0200     		.2byte	0x2
 8332 006e 7D       		.byte	0x7d
 8333 006f 08       		.sleb128 8
 8334 0070 04000000 		.4byte	.LCFI5
 8335 0074 06000000 		.4byte	.LCFI6
 8336 0078 0200     		.2byte	0x2
 8337 007a 7D       		.byte	0x7d
 8338 007b 18       		.sleb128 24
 8339 007c 06000000 		.4byte	.LCFI6
 8340 0080 0C010000 		.4byte	.LFE2
 8341 0084 0200     		.2byte	0x2
 8342 0086 77       		.byte	0x77
 8343 0087 18       		.sleb128 24
 8344 0088 00000000 		.4byte	0
 8345 008c 00000000 		.4byte	0
 8346              	.LLST3:
 8347 0090 00000000 		.4byte	.LFB3
 8348 0094 02000000 		.4byte	.LCFI7
 8349 0098 0200     		.2byte	0x2
 8350 009a 7D       		.byte	0x7d
 8351 009b 00       		.sleb128 0
 8352 009c 02000000 		.4byte	.LCFI7
 8353 00a0 04000000 		.4byte	.LCFI8
 8354 00a4 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 179


 8355 00a6 7D       		.byte	0x7d
 8356 00a7 08       		.sleb128 8
 8357 00a8 04000000 		.4byte	.LCFI8
 8358 00ac 06000000 		.4byte	.LCFI9
 8359 00b0 0200     		.2byte	0x2
 8360 00b2 7D       		.byte	0x7d
 8361 00b3 20       		.sleb128 32
 8362 00b4 06000000 		.4byte	.LCFI9
 8363 00b8 0A010000 		.4byte	.LFE3
 8364 00bc 0200     		.2byte	0x2
 8365 00be 77       		.byte	0x77
 8366 00bf 20       		.sleb128 32
 8367 00c0 00000000 		.4byte	0
 8368 00c4 00000000 		.4byte	0
 8369              	.LLST4:
 8370 00c8 00000000 		.4byte	.LFB4
 8371 00cc 02000000 		.4byte	.LCFI10
 8372 00d0 0200     		.2byte	0x2
 8373 00d2 7D       		.byte	0x7d
 8374 00d3 00       		.sleb128 0
 8375 00d4 02000000 		.4byte	.LCFI10
 8376 00d8 04000000 		.4byte	.LCFI11
 8377 00dc 0200     		.2byte	0x2
 8378 00de 7D       		.byte	0x7d
 8379 00df 08       		.sleb128 8
 8380 00e0 04000000 		.4byte	.LCFI11
 8381 00e4 06000000 		.4byte	.LCFI12
 8382 00e8 0200     		.2byte	0x2
 8383 00ea 7D       		.byte	0x7d
 8384 00eb 18       		.sleb128 24
 8385 00ec 06000000 		.4byte	.LCFI12
 8386 00f0 42000000 		.4byte	.LFE4
 8387 00f4 0200     		.2byte	0x2
 8388 00f6 77       		.byte	0x77
 8389 00f7 18       		.sleb128 24
 8390 00f8 00000000 		.4byte	0
 8391 00fc 00000000 		.4byte	0
 8392              	.LLST5:
 8393 0100 00000000 		.4byte	.LFB5
 8394 0104 02000000 		.4byte	.LCFI13
 8395 0108 0200     		.2byte	0x2
 8396 010a 7D       		.byte	0x7d
 8397 010b 00       		.sleb128 0
 8398 010c 02000000 		.4byte	.LCFI13
 8399 0110 04000000 		.4byte	.LCFI14
 8400 0114 0200     		.2byte	0x2
 8401 0116 7D       		.byte	0x7d
 8402 0117 08       		.sleb128 8
 8403 0118 04000000 		.4byte	.LCFI14
 8404 011c 06000000 		.4byte	.LCFI15
 8405 0120 0200     		.2byte	0x2
 8406 0122 7D       		.byte	0x7d
 8407 0123 18       		.sleb128 24
 8408 0124 06000000 		.4byte	.LCFI15
 8409 0128 42000000 		.4byte	.LFE5
 8410 012c 0200     		.2byte	0x2
 8411 012e 77       		.byte	0x77
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 180


 8412 012f 18       		.sleb128 24
 8413 0130 00000000 		.4byte	0
 8414 0134 00000000 		.4byte	0
 8415              	.LLST6:
 8416 0138 00000000 		.4byte	.LFB6
 8417 013c 02000000 		.4byte	.LCFI16
 8418 0140 0200     		.2byte	0x2
 8419 0142 7D       		.byte	0x7d
 8420 0143 00       		.sleb128 0
 8421 0144 02000000 		.4byte	.LCFI16
 8422 0148 04000000 		.4byte	.LCFI17
 8423 014c 0200     		.2byte	0x2
 8424 014e 7D       		.byte	0x7d
 8425 014f 08       		.sleb128 8
 8426 0150 04000000 		.4byte	.LCFI17
 8427 0154 06000000 		.4byte	.LCFI18
 8428 0158 0200     		.2byte	0x2
 8429 015a 7D       		.byte	0x7d
 8430 015b 10       		.sleb128 16
 8431 015c 06000000 		.4byte	.LCFI18
 8432 0160 1E000000 		.4byte	.LFE6
 8433 0164 0200     		.2byte	0x2
 8434 0166 77       		.byte	0x77
 8435 0167 10       		.sleb128 16
 8436 0168 00000000 		.4byte	0
 8437 016c 00000000 		.4byte	0
 8438              	.LLST7:
 8439 0170 00000000 		.4byte	.LFB7
 8440 0174 02000000 		.4byte	.LCFI19
 8441 0178 0200     		.2byte	0x2
 8442 017a 7D       		.byte	0x7d
 8443 017b 00       		.sleb128 0
 8444 017c 02000000 		.4byte	.LCFI19
 8445 0180 04000000 		.4byte	.LCFI20
 8446 0184 0200     		.2byte	0x2
 8447 0186 7D       		.byte	0x7d
 8448 0187 08       		.sleb128 8
 8449 0188 04000000 		.4byte	.LCFI20
 8450 018c 06000000 		.4byte	.LCFI21
 8451 0190 0200     		.2byte	0x2
 8452 0192 7D       		.byte	0x7d
 8453 0193 10       		.sleb128 16
 8454 0194 06000000 		.4byte	.LCFI21
 8455 0198 1E000000 		.4byte	.LFE7
 8456 019c 0200     		.2byte	0x2
 8457 019e 77       		.byte	0x77
 8458 019f 10       		.sleb128 16
 8459 01a0 00000000 		.4byte	0
 8460 01a4 00000000 		.4byte	0
 8461              	.LLST8:
 8462 01a8 00000000 		.4byte	.LFB8
 8463 01ac 02000000 		.4byte	.LCFI22
 8464 01b0 0200     		.2byte	0x2
 8465 01b2 7D       		.byte	0x7d
 8466 01b3 00       		.sleb128 0
 8467 01b4 02000000 		.4byte	.LCFI22
 8468 01b8 04000000 		.4byte	.LCFI23
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 181


 8469 01bc 0200     		.2byte	0x2
 8470 01be 7D       		.byte	0x7d
 8471 01bf 08       		.sleb128 8
 8472 01c0 04000000 		.4byte	.LCFI23
 8473 01c4 06000000 		.4byte	.LCFI24
 8474 01c8 0200     		.2byte	0x2
 8475 01ca 7D       		.byte	0x7d
 8476 01cb 10       		.sleb128 16
 8477 01cc 06000000 		.4byte	.LCFI24
 8478 01d0 22000000 		.4byte	.LFE8
 8479 01d4 0200     		.2byte	0x2
 8480 01d6 77       		.byte	0x77
 8481 01d7 10       		.sleb128 16
 8482 01d8 00000000 		.4byte	0
 8483 01dc 00000000 		.4byte	0
 8484              	.LLST9:
 8485 01e0 00000000 		.4byte	.LFB9
 8486 01e4 02000000 		.4byte	.LCFI25
 8487 01e8 0200     		.2byte	0x2
 8488 01ea 7D       		.byte	0x7d
 8489 01eb 00       		.sleb128 0
 8490 01ec 02000000 		.4byte	.LCFI25
 8491 01f0 04000000 		.4byte	.LCFI26
 8492 01f4 0200     		.2byte	0x2
 8493 01f6 7D       		.byte	0x7d
 8494 01f7 08       		.sleb128 8
 8495 01f8 04000000 		.4byte	.LCFI26
 8496 01fc 06000000 		.4byte	.LCFI27
 8497 0200 0200     		.2byte	0x2
 8498 0202 7D       		.byte	0x7d
 8499 0203 10       		.sleb128 16
 8500 0204 06000000 		.4byte	.LCFI27
 8501 0208 28000000 		.4byte	.LFE9
 8502 020c 0200     		.2byte	0x2
 8503 020e 77       		.byte	0x77
 8504 020f 10       		.sleb128 16
 8505 0210 00000000 		.4byte	0
 8506 0214 00000000 		.4byte	0
 8507              	.LLST10:
 8508 0218 00000000 		.4byte	.LFB10
 8509 021c 02000000 		.4byte	.LCFI28
 8510 0220 0200     		.2byte	0x2
 8511 0222 7D       		.byte	0x7d
 8512 0223 00       		.sleb128 0
 8513 0224 02000000 		.4byte	.LCFI28
 8514 0228 04000000 		.4byte	.LCFI29
 8515 022c 0200     		.2byte	0x2
 8516 022e 7D       		.byte	0x7d
 8517 022f 08       		.sleb128 8
 8518 0230 04000000 		.4byte	.LCFI29
 8519 0234 06000000 		.4byte	.LCFI30
 8520 0238 0200     		.2byte	0x2
 8521 023a 7D       		.byte	0x7d
 8522 023b 10       		.sleb128 16
 8523 023c 06000000 		.4byte	.LCFI30
 8524 0240 22000000 		.4byte	.LFE10
 8525 0244 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 182


 8526 0246 77       		.byte	0x77
 8527 0247 10       		.sleb128 16
 8528 0248 00000000 		.4byte	0
 8529 024c 00000000 		.4byte	0
 8530              	.LLST11:
 8531 0250 00000000 		.4byte	.LFB11
 8532 0254 02000000 		.4byte	.LCFI31
 8533 0258 0200     		.2byte	0x2
 8534 025a 7D       		.byte	0x7d
 8535 025b 00       		.sleb128 0
 8536 025c 02000000 		.4byte	.LCFI31
 8537 0260 04000000 		.4byte	.LCFI32
 8538 0264 0200     		.2byte	0x2
 8539 0266 7D       		.byte	0x7d
 8540 0267 08       		.sleb128 8
 8541 0268 04000000 		.4byte	.LCFI32
 8542 026c 06000000 		.4byte	.LCFI33
 8543 0270 0200     		.2byte	0x2
 8544 0272 7D       		.byte	0x7d
 8545 0273 10       		.sleb128 16
 8546 0274 06000000 		.4byte	.LCFI33
 8547 0278 28000000 		.4byte	.LFE11
 8548 027c 0200     		.2byte	0x2
 8549 027e 77       		.byte	0x77
 8550 027f 10       		.sleb128 16
 8551 0280 00000000 		.4byte	0
 8552 0284 00000000 		.4byte	0
 8553              	.LLST12:
 8554 0288 00000000 		.4byte	.LFB12
 8555 028c 02000000 		.4byte	.LCFI34
 8556 0290 0200     		.2byte	0x2
 8557 0292 7D       		.byte	0x7d
 8558 0293 00       		.sleb128 0
 8559 0294 02000000 		.4byte	.LCFI34
 8560 0298 04000000 		.4byte	.LCFI35
 8561 029c 0200     		.2byte	0x2
 8562 029e 7D       		.byte	0x7d
 8563 029f 08       		.sleb128 8
 8564 02a0 04000000 		.4byte	.LCFI35
 8565 02a4 06000000 		.4byte	.LCFI36
 8566 02a8 0200     		.2byte	0x2
 8567 02aa 7D       		.byte	0x7d
 8568 02ab 10       		.sleb128 16
 8569 02ac 06000000 		.4byte	.LCFI36
 8570 02b0 22000000 		.4byte	.LFE12
 8571 02b4 0200     		.2byte	0x2
 8572 02b6 77       		.byte	0x77
 8573 02b7 10       		.sleb128 16
 8574 02b8 00000000 		.4byte	0
 8575 02bc 00000000 		.4byte	0
 8576              	.LLST13:
 8577 02c0 00000000 		.4byte	.LFB13
 8578 02c4 02000000 		.4byte	.LCFI37
 8579 02c8 0200     		.2byte	0x2
 8580 02ca 7D       		.byte	0x7d
 8581 02cb 00       		.sleb128 0
 8582 02cc 02000000 		.4byte	.LCFI37
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 183


 8583 02d0 04000000 		.4byte	.LCFI38
 8584 02d4 0200     		.2byte	0x2
 8585 02d6 7D       		.byte	0x7d
 8586 02d7 08       		.sleb128 8
 8587 02d8 04000000 		.4byte	.LCFI38
 8588 02dc 06000000 		.4byte	.LCFI39
 8589 02e0 0200     		.2byte	0x2
 8590 02e2 7D       		.byte	0x7d
 8591 02e3 10       		.sleb128 16
 8592 02e4 06000000 		.4byte	.LCFI39
 8593 02e8 28000000 		.4byte	.LFE13
 8594 02ec 0200     		.2byte	0x2
 8595 02ee 77       		.byte	0x77
 8596 02ef 10       		.sleb128 16
 8597 02f0 00000000 		.4byte	0
 8598 02f4 00000000 		.4byte	0
 8599              	.LLST14:
 8600 02f8 00000000 		.4byte	.LFB14
 8601 02fc 02000000 		.4byte	.LCFI40
 8602 0300 0200     		.2byte	0x2
 8603 0302 7D       		.byte	0x7d
 8604 0303 00       		.sleb128 0
 8605 0304 02000000 		.4byte	.LCFI40
 8606 0308 04000000 		.4byte	.LCFI41
 8607 030c 0200     		.2byte	0x2
 8608 030e 7D       		.byte	0x7d
 8609 030f 08       		.sleb128 8
 8610 0310 04000000 		.4byte	.LCFI41
 8611 0314 06000000 		.4byte	.LCFI42
 8612 0318 0200     		.2byte	0x2
 8613 031a 7D       		.byte	0x7d
 8614 031b 10       		.sleb128 16
 8615 031c 06000000 		.4byte	.LCFI42
 8616 0320 24000000 		.4byte	.LFE14
 8617 0324 0200     		.2byte	0x2
 8618 0326 77       		.byte	0x77
 8619 0327 10       		.sleb128 16
 8620 0328 00000000 		.4byte	0
 8621 032c 00000000 		.4byte	0
 8622              	.LLST15:
 8623 0330 00000000 		.4byte	.LFB15
 8624 0334 02000000 		.4byte	.LCFI43
 8625 0338 0200     		.2byte	0x2
 8626 033a 7D       		.byte	0x7d
 8627 033b 00       		.sleb128 0
 8628 033c 02000000 		.4byte	.LCFI43
 8629 0340 04000000 		.4byte	.LCFI44
 8630 0344 0200     		.2byte	0x2
 8631 0346 7D       		.byte	0x7d
 8632 0347 08       		.sleb128 8
 8633 0348 04000000 		.4byte	.LCFI44
 8634 034c 06000000 		.4byte	.LCFI45
 8635 0350 0200     		.2byte	0x2
 8636 0352 7D       		.byte	0x7d
 8637 0353 10       		.sleb128 16
 8638 0354 06000000 		.4byte	.LCFI45
 8639 0358 24000000 		.4byte	.LFE15
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 184


 8640 035c 0200     		.2byte	0x2
 8641 035e 77       		.byte	0x77
 8642 035f 10       		.sleb128 16
 8643 0360 00000000 		.4byte	0
 8644 0364 00000000 		.4byte	0
 8645              	.LLST16:
 8646 0368 00000000 		.4byte	.LFB16
 8647 036c 02000000 		.4byte	.LCFI46
 8648 0370 0200     		.2byte	0x2
 8649 0372 7D       		.byte	0x7d
 8650 0373 00       		.sleb128 0
 8651 0374 02000000 		.4byte	.LCFI46
 8652 0378 04000000 		.4byte	.LCFI47
 8653 037c 0200     		.2byte	0x2
 8654 037e 7D       		.byte	0x7d
 8655 037f 08       		.sleb128 8
 8656 0380 04000000 		.4byte	.LCFI47
 8657 0384 06000000 		.4byte	.LCFI48
 8658 0388 0200     		.2byte	0x2
 8659 038a 7D       		.byte	0x7d
 8660 038b 10       		.sleb128 16
 8661 038c 06000000 		.4byte	.LCFI48
 8662 0390 24000000 		.4byte	.LFE16
 8663 0394 0200     		.2byte	0x2
 8664 0396 77       		.byte	0x77
 8665 0397 10       		.sleb128 16
 8666 0398 00000000 		.4byte	0
 8667 039c 00000000 		.4byte	0
 8668              	.LLST17:
 8669 03a0 00000000 		.4byte	.LFB17
 8670 03a4 02000000 		.4byte	.LCFI49
 8671 03a8 0200     		.2byte	0x2
 8672 03aa 7D       		.byte	0x7d
 8673 03ab 00       		.sleb128 0
 8674 03ac 02000000 		.4byte	.LCFI49
 8675 03b0 04000000 		.4byte	.LCFI50
 8676 03b4 0200     		.2byte	0x2
 8677 03b6 7D       		.byte	0x7d
 8678 03b7 08       		.sleb128 8
 8679 03b8 04000000 		.4byte	.LCFI50
 8680 03bc 06000000 		.4byte	.LCFI51
 8681 03c0 0200     		.2byte	0x2
 8682 03c2 7D       		.byte	0x7d
 8683 03c3 10       		.sleb128 16
 8684 03c4 06000000 		.4byte	.LCFI51
 8685 03c8 3A000000 		.4byte	.LFE17
 8686 03cc 0200     		.2byte	0x2
 8687 03ce 77       		.byte	0x77
 8688 03cf 10       		.sleb128 16
 8689 03d0 00000000 		.4byte	0
 8690 03d4 00000000 		.4byte	0
 8691              	.LLST18:
 8692 03d8 00000000 		.4byte	.LFB18
 8693 03dc 02000000 		.4byte	.LCFI52
 8694 03e0 0200     		.2byte	0x2
 8695 03e2 7D       		.byte	0x7d
 8696 03e3 00       		.sleb128 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 185


 8697 03e4 02000000 		.4byte	.LCFI52
 8698 03e8 04000000 		.4byte	.LCFI53
 8699 03ec 0200     		.2byte	0x2
 8700 03ee 7D       		.byte	0x7d
 8701 03ef 08       		.sleb128 8
 8702 03f0 04000000 		.4byte	.LCFI53
 8703 03f4 06000000 		.4byte	.LCFI54
 8704 03f8 0200     		.2byte	0x2
 8705 03fa 7D       		.byte	0x7d
 8706 03fb 18       		.sleb128 24
 8707 03fc 06000000 		.4byte	.LCFI54
 8708 0400 40000000 		.4byte	.LFE18
 8709 0404 0200     		.2byte	0x2
 8710 0406 77       		.byte	0x77
 8711 0407 18       		.sleb128 24
 8712 0408 00000000 		.4byte	0
 8713 040c 00000000 		.4byte	0
 8714              	.LLST19:
 8715 0410 00000000 		.4byte	.LFB19
 8716 0414 02000000 		.4byte	.LCFI55
 8717 0418 0200     		.2byte	0x2
 8718 041a 7D       		.byte	0x7d
 8719 041b 00       		.sleb128 0
 8720 041c 02000000 		.4byte	.LCFI55
 8721 0420 04000000 		.4byte	.LCFI56
 8722 0424 0200     		.2byte	0x2
 8723 0426 7D       		.byte	0x7d
 8724 0427 08       		.sleb128 8
 8725 0428 04000000 		.4byte	.LCFI56
 8726 042c 06000000 		.4byte	.LCFI57
 8727 0430 0200     		.2byte	0x2
 8728 0432 7D       		.byte	0x7d
 8729 0433 10       		.sleb128 16
 8730 0434 06000000 		.4byte	.LCFI57
 8731 0438 3A000000 		.4byte	.LFE19
 8732 043c 0200     		.2byte	0x2
 8733 043e 77       		.byte	0x77
 8734 043f 10       		.sleb128 16
 8735 0440 00000000 		.4byte	0
 8736 0444 00000000 		.4byte	0
 8737              	.LLST20:
 8738 0448 00000000 		.4byte	.LFB20
 8739 044c 02000000 		.4byte	.LCFI58
 8740 0450 0200     		.2byte	0x2
 8741 0452 7D       		.byte	0x7d
 8742 0453 00       		.sleb128 0
 8743 0454 02000000 		.4byte	.LCFI58
 8744 0458 04000000 		.4byte	.LCFI59
 8745 045c 0200     		.2byte	0x2
 8746 045e 7D       		.byte	0x7d
 8747 045f 08       		.sleb128 8
 8748 0460 04000000 		.4byte	.LCFI59
 8749 0464 06000000 		.4byte	.LCFI60
 8750 0468 0200     		.2byte	0x2
 8751 046a 7D       		.byte	0x7d
 8752 046b 18       		.sleb128 24
 8753 046c 06000000 		.4byte	.LCFI60
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 186


 8754 0470 40000000 		.4byte	.LFE20
 8755 0474 0200     		.2byte	0x2
 8756 0476 77       		.byte	0x77
 8757 0477 18       		.sleb128 24
 8758 0478 00000000 		.4byte	0
 8759 047c 00000000 		.4byte	0
 8760              	.LLST21:
 8761 0480 00000000 		.4byte	.LFB21
 8762 0484 02000000 		.4byte	.LCFI61
 8763 0488 0200     		.2byte	0x2
 8764 048a 7D       		.byte	0x7d
 8765 048b 00       		.sleb128 0
 8766 048c 02000000 		.4byte	.LCFI61
 8767 0490 04000000 		.4byte	.LCFI62
 8768 0494 0200     		.2byte	0x2
 8769 0496 7D       		.byte	0x7d
 8770 0497 08       		.sleb128 8
 8771 0498 04000000 		.4byte	.LCFI62
 8772 049c 06000000 		.4byte	.LCFI63
 8773 04a0 0200     		.2byte	0x2
 8774 04a2 7D       		.byte	0x7d
 8775 04a3 10       		.sleb128 16
 8776 04a4 06000000 		.4byte	.LCFI63
 8777 04a8 36000000 		.4byte	.LFE21
 8778 04ac 0200     		.2byte	0x2
 8779 04ae 77       		.byte	0x77
 8780 04af 10       		.sleb128 16
 8781 04b0 00000000 		.4byte	0
 8782 04b4 00000000 		.4byte	0
 8783              	.LLST22:
 8784 04b8 00000000 		.4byte	.LFB22
 8785 04bc 02000000 		.4byte	.LCFI64
 8786 04c0 0200     		.2byte	0x2
 8787 04c2 7D       		.byte	0x7d
 8788 04c3 00       		.sleb128 0
 8789 04c4 02000000 		.4byte	.LCFI64
 8790 04c8 04000000 		.4byte	.LCFI65
 8791 04cc 0200     		.2byte	0x2
 8792 04ce 7D       		.byte	0x7d
 8793 04cf 08       		.sleb128 8
 8794 04d0 04000000 		.4byte	.LCFI65
 8795 04d4 06000000 		.4byte	.LCFI66
 8796 04d8 0200     		.2byte	0x2
 8797 04da 7D       		.byte	0x7d
 8798 04db 10       		.sleb128 16
 8799 04dc 06000000 		.4byte	.LCFI66
 8800 04e0 3A000000 		.4byte	.LFE22
 8801 04e4 0200     		.2byte	0x2
 8802 04e6 77       		.byte	0x77
 8803 04e7 10       		.sleb128 16
 8804 04e8 00000000 		.4byte	0
 8805 04ec 00000000 		.4byte	0
 8806              	.LLST23:
 8807 04f0 00000000 		.4byte	.LFB23
 8808 04f4 02000000 		.4byte	.LCFI67
 8809 04f8 0200     		.2byte	0x2
 8810 04fa 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 187


 8811 04fb 00       		.sleb128 0
 8812 04fc 02000000 		.4byte	.LCFI67
 8813 0500 04000000 		.4byte	.LCFI68
 8814 0504 0200     		.2byte	0x2
 8815 0506 7D       		.byte	0x7d
 8816 0507 08       		.sleb128 8
 8817 0508 04000000 		.4byte	.LCFI68
 8818 050c 06000000 		.4byte	.LCFI69
 8819 0510 0200     		.2byte	0x2
 8820 0512 7D       		.byte	0x7d
 8821 0513 18       		.sleb128 24
 8822 0514 06000000 		.4byte	.LCFI69
 8823 0518 40000000 		.4byte	.LFE23
 8824 051c 0200     		.2byte	0x2
 8825 051e 77       		.byte	0x77
 8826 051f 18       		.sleb128 24
 8827 0520 00000000 		.4byte	0
 8828 0524 00000000 		.4byte	0
 8829              	.LLST24:
 8830 0528 00000000 		.4byte	.LFB24
 8831 052c 02000000 		.4byte	.LCFI70
 8832 0530 0200     		.2byte	0x2
 8833 0532 7D       		.byte	0x7d
 8834 0533 00       		.sleb128 0
 8835 0534 02000000 		.4byte	.LCFI70
 8836 0538 04000000 		.4byte	.LCFI71
 8837 053c 0200     		.2byte	0x2
 8838 053e 7D       		.byte	0x7d
 8839 053f 08       		.sleb128 8
 8840 0540 04000000 		.4byte	.LCFI71
 8841 0544 06000000 		.4byte	.LCFI72
 8842 0548 0200     		.2byte	0x2
 8843 054a 7D       		.byte	0x7d
 8844 054b 10       		.sleb128 16
 8845 054c 06000000 		.4byte	.LCFI72
 8846 0550 3A000000 		.4byte	.LFE24
 8847 0554 0200     		.2byte	0x2
 8848 0556 77       		.byte	0x77
 8849 0557 10       		.sleb128 16
 8850 0558 00000000 		.4byte	0
 8851 055c 00000000 		.4byte	0
 8852              	.LLST25:
 8853 0560 00000000 		.4byte	.LFB25
 8854 0564 02000000 		.4byte	.LCFI73
 8855 0568 0200     		.2byte	0x2
 8856 056a 7D       		.byte	0x7d
 8857 056b 00       		.sleb128 0
 8858 056c 02000000 		.4byte	.LCFI73
 8859 0570 04000000 		.4byte	.LCFI74
 8860 0574 0200     		.2byte	0x2
 8861 0576 7D       		.byte	0x7d
 8862 0577 08       		.sleb128 8
 8863 0578 04000000 		.4byte	.LCFI74
 8864 057c 06000000 		.4byte	.LCFI75
 8865 0580 0200     		.2byte	0x2
 8866 0582 7D       		.byte	0x7d
 8867 0583 18       		.sleb128 24
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 188


 8868 0584 06000000 		.4byte	.LCFI75
 8869 0588 40000000 		.4byte	.LFE25
 8870 058c 0200     		.2byte	0x2
 8871 058e 77       		.byte	0x77
 8872 058f 18       		.sleb128 24
 8873 0590 00000000 		.4byte	0
 8874 0594 00000000 		.4byte	0
 8875              	.LLST26:
 8876 0598 00000000 		.4byte	.LFB26
 8877 059c 02000000 		.4byte	.LCFI76
 8878 05a0 0200     		.2byte	0x2
 8879 05a2 7D       		.byte	0x7d
 8880 05a3 00       		.sleb128 0
 8881 05a4 02000000 		.4byte	.LCFI76
 8882 05a8 04000000 		.4byte	.LCFI77
 8883 05ac 0200     		.2byte	0x2
 8884 05ae 7D       		.byte	0x7d
 8885 05af 08       		.sleb128 8
 8886 05b0 04000000 		.4byte	.LCFI77
 8887 05b4 06000000 		.4byte	.LCFI78
 8888 05b8 0200     		.2byte	0x2
 8889 05ba 7D       		.byte	0x7d
 8890 05bb 18       		.sleb128 24
 8891 05bc 06000000 		.4byte	.LCFI78
 8892 05c0 40000000 		.4byte	.LFE26
 8893 05c4 0200     		.2byte	0x2
 8894 05c6 77       		.byte	0x77
 8895 05c7 18       		.sleb128 24
 8896 05c8 00000000 		.4byte	0
 8897 05cc 00000000 		.4byte	0
 8898              	.LLST27:
 8899 05d0 00000000 		.4byte	.LFB27
 8900 05d4 02000000 		.4byte	.LCFI79
 8901 05d8 0200     		.2byte	0x2
 8902 05da 7D       		.byte	0x7d
 8903 05db 00       		.sleb128 0
 8904 05dc 02000000 		.4byte	.LCFI79
 8905 05e0 04000000 		.4byte	.LCFI80
 8906 05e4 0200     		.2byte	0x2
 8907 05e6 7D       		.byte	0x7d
 8908 05e7 08       		.sleb128 8
 8909 05e8 04000000 		.4byte	.LCFI80
 8910 05ec 06000000 		.4byte	.LCFI81
 8911 05f0 0200     		.2byte	0x2
 8912 05f2 7D       		.byte	0x7d
 8913 05f3 10       		.sleb128 16
 8914 05f4 06000000 		.4byte	.LCFI81
 8915 05f8 34000000 		.4byte	.LFE27
 8916 05fc 0200     		.2byte	0x2
 8917 05fe 77       		.byte	0x77
 8918 05ff 10       		.sleb128 16
 8919 0600 00000000 		.4byte	0
 8920 0604 00000000 		.4byte	0
 8921              	.LLST28:
 8922 0608 00000000 		.4byte	.LFB28
 8923 060c 02000000 		.4byte	.LCFI82
 8924 0610 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 189


 8925 0612 7D       		.byte	0x7d
 8926 0613 00       		.sleb128 0
 8927 0614 02000000 		.4byte	.LCFI82
 8928 0618 04000000 		.4byte	.LCFI83
 8929 061c 0200     		.2byte	0x2
 8930 061e 7D       		.byte	0x7d
 8931 061f 08       		.sleb128 8
 8932 0620 04000000 		.4byte	.LCFI83
 8933 0624 06000000 		.4byte	.LCFI84
 8934 0628 0200     		.2byte	0x2
 8935 062a 7D       		.byte	0x7d
 8936 062b 10       		.sleb128 16
 8937 062c 06000000 		.4byte	.LCFI84
 8938 0630 34000000 		.4byte	.LFE28
 8939 0634 0200     		.2byte	0x2
 8940 0636 77       		.byte	0x77
 8941 0637 10       		.sleb128 16
 8942 0638 00000000 		.4byte	0
 8943 063c 00000000 		.4byte	0
 8944              	.LLST29:
 8945 0640 00000000 		.4byte	.LFB29
 8946 0644 02000000 		.4byte	.LCFI85
 8947 0648 0200     		.2byte	0x2
 8948 064a 7D       		.byte	0x7d
 8949 064b 00       		.sleb128 0
 8950 064c 02000000 		.4byte	.LCFI85
 8951 0650 04000000 		.4byte	.LCFI86
 8952 0654 0200     		.2byte	0x2
 8953 0656 7D       		.byte	0x7d
 8954 0657 08       		.sleb128 8
 8955 0658 04000000 		.4byte	.LCFI86
 8956 065c 06000000 		.4byte	.LCFI87
 8957 0660 0200     		.2byte	0x2
 8958 0662 7D       		.byte	0x7d
 8959 0663 10       		.sleb128 16
 8960 0664 06000000 		.4byte	.LCFI87
 8961 0668 36000000 		.4byte	.LFE29
 8962 066c 0200     		.2byte	0x2
 8963 066e 77       		.byte	0x77
 8964 066f 10       		.sleb128 16
 8965 0670 00000000 		.4byte	0
 8966 0674 00000000 		.4byte	0
 8967              	.LLST30:
 8968 0678 00000000 		.4byte	.LFB30
 8969 067c 02000000 		.4byte	.LCFI88
 8970 0680 0200     		.2byte	0x2
 8971 0682 7D       		.byte	0x7d
 8972 0683 00       		.sleb128 0
 8973 0684 02000000 		.4byte	.LCFI88
 8974 0688 04000000 		.4byte	.LCFI89
 8975 068c 0200     		.2byte	0x2
 8976 068e 7D       		.byte	0x7d
 8977 068f 08       		.sleb128 8
 8978 0690 04000000 		.4byte	.LCFI89
 8979 0694 06000000 		.4byte	.LCFI90
 8980 0698 0200     		.2byte	0x2
 8981 069a 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 190


 8982 069b 10       		.sleb128 16
 8983 069c 06000000 		.4byte	.LCFI90
 8984 06a0 34000000 		.4byte	.LFE30
 8985 06a4 0200     		.2byte	0x2
 8986 06a6 77       		.byte	0x77
 8987 06a7 10       		.sleb128 16
 8988 06a8 00000000 		.4byte	0
 8989 06ac 00000000 		.4byte	0
 8990              	.LLST31:
 8991 06b0 00000000 		.4byte	.LFB31
 8992 06b4 02000000 		.4byte	.LCFI91
 8993 06b8 0200     		.2byte	0x2
 8994 06ba 7D       		.byte	0x7d
 8995 06bb 00       		.sleb128 0
 8996 06bc 02000000 		.4byte	.LCFI91
 8997 06c0 04000000 		.4byte	.LCFI92
 8998 06c4 0200     		.2byte	0x2
 8999 06c6 7D       		.byte	0x7d
 9000 06c7 08       		.sleb128 8
 9001 06c8 04000000 		.4byte	.LCFI92
 9002 06cc 06000000 		.4byte	.LCFI93
 9003 06d0 0200     		.2byte	0x2
 9004 06d2 7D       		.byte	0x7d
 9005 06d3 10       		.sleb128 16
 9006 06d4 06000000 		.4byte	.LCFI93
 9007 06d8 30000000 		.4byte	.LFE31
 9008 06dc 0200     		.2byte	0x2
 9009 06de 77       		.byte	0x77
 9010 06df 10       		.sleb128 16
 9011 06e0 00000000 		.4byte	0
 9012 06e4 00000000 		.4byte	0
 9013              	.LLST32:
 9014 06e8 00000000 		.4byte	.LFB32
 9015 06ec 02000000 		.4byte	.LCFI94
 9016 06f0 0200     		.2byte	0x2
 9017 06f2 7D       		.byte	0x7d
 9018 06f3 00       		.sleb128 0
 9019 06f4 02000000 		.4byte	.LCFI94
 9020 06f8 04000000 		.4byte	.LCFI95
 9021 06fc 0200     		.2byte	0x2
 9022 06fe 7D       		.byte	0x7d
 9023 06ff 08       		.sleb128 8
 9024 0700 04000000 		.4byte	.LCFI95
 9025 0704 06000000 		.4byte	.LCFI96
 9026 0708 0200     		.2byte	0x2
 9027 070a 7D       		.byte	0x7d
 9028 070b 10       		.sleb128 16
 9029 070c 06000000 		.4byte	.LCFI96
 9030 0710 34000000 		.4byte	.LFE32
 9031 0714 0200     		.2byte	0x2
 9032 0716 77       		.byte	0x77
 9033 0717 10       		.sleb128 16
 9034 0718 00000000 		.4byte	0
 9035 071c 00000000 		.4byte	0
 9036              	.LLST33:
 9037 0720 00000000 		.4byte	.LFB33
 9038 0724 02000000 		.4byte	.LCFI97
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 191


 9039 0728 0200     		.2byte	0x2
 9040 072a 7D       		.byte	0x7d
 9041 072b 00       		.sleb128 0
 9042 072c 02000000 		.4byte	.LCFI97
 9043 0730 04000000 		.4byte	.LCFI98
 9044 0734 0200     		.2byte	0x2
 9045 0736 7D       		.byte	0x7d
 9046 0737 08       		.sleb128 8
 9047 0738 04000000 		.4byte	.LCFI98
 9048 073c 06000000 		.4byte	.LCFI99
 9049 0740 0200     		.2byte	0x2
 9050 0742 7D       		.byte	0x7d
 9051 0743 10       		.sleb128 16
 9052 0744 06000000 		.4byte	.LCFI99
 9053 0748 30000000 		.4byte	.LFE33
 9054 074c 0200     		.2byte	0x2
 9055 074e 77       		.byte	0x77
 9056 074f 10       		.sleb128 16
 9057 0750 00000000 		.4byte	0
 9058 0754 00000000 		.4byte	0
 9059              	.LLST34:
 9060 0758 00000000 		.4byte	.LFB34
 9061 075c 02000000 		.4byte	.LCFI100
 9062 0760 0200     		.2byte	0x2
 9063 0762 7D       		.byte	0x7d
 9064 0763 00       		.sleb128 0
 9065 0764 02000000 		.4byte	.LCFI100
 9066 0768 04000000 		.4byte	.LCFI101
 9067 076c 0200     		.2byte	0x2
 9068 076e 7D       		.byte	0x7d
 9069 076f 08       		.sleb128 8
 9070 0770 04000000 		.4byte	.LCFI101
 9071 0774 06000000 		.4byte	.LCFI102
 9072 0778 0200     		.2byte	0x2
 9073 077a 7D       		.byte	0x7d
 9074 077b 10       		.sleb128 16
 9075 077c 06000000 		.4byte	.LCFI102
 9076 0780 30000000 		.4byte	.LFE34
 9077 0784 0200     		.2byte	0x2
 9078 0786 77       		.byte	0x77
 9079 0787 10       		.sleb128 16
 9080 0788 00000000 		.4byte	0
 9081 078c 00000000 		.4byte	0
 9082              	.LLST35:
 9083 0790 00000000 		.4byte	.LFB35
 9084 0794 02000000 		.4byte	.LCFI103
 9085 0798 0200     		.2byte	0x2
 9086 079a 7D       		.byte	0x7d
 9087 079b 00       		.sleb128 0
 9088 079c 02000000 		.4byte	.LCFI103
 9089 07a0 04000000 		.4byte	.LCFI104
 9090 07a4 0200     		.2byte	0x2
 9091 07a6 7D       		.byte	0x7d
 9092 07a7 08       		.sleb128 8
 9093 07a8 04000000 		.4byte	.LCFI104
 9094 07ac 06000000 		.4byte	.LCFI105
 9095 07b0 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 192


 9096 07b2 7D       		.byte	0x7d
 9097 07b3 10       		.sleb128 16
 9098 07b4 06000000 		.4byte	.LCFI105
 9099 07b8 34000000 		.4byte	.LFE35
 9100 07bc 0200     		.2byte	0x2
 9101 07be 77       		.byte	0x77
 9102 07bf 10       		.sleb128 16
 9103 07c0 00000000 		.4byte	0
 9104 07c4 00000000 		.4byte	0
 9105              	.LLST36:
 9106 07c8 00000000 		.4byte	.LFB36
 9107 07cc 02000000 		.4byte	.LCFI106
 9108 07d0 0200     		.2byte	0x2
 9109 07d2 7D       		.byte	0x7d
 9110 07d3 00       		.sleb128 0
 9111 07d4 02000000 		.4byte	.LCFI106
 9112 07d8 04000000 		.4byte	.LCFI107
 9113 07dc 0200     		.2byte	0x2
 9114 07de 7D       		.byte	0x7d
 9115 07df 08       		.sleb128 8
 9116 07e0 04000000 		.4byte	.LCFI107
 9117 07e4 06000000 		.4byte	.LCFI108
 9118 07e8 0200     		.2byte	0x2
 9119 07ea 7D       		.byte	0x7d
 9120 07eb 10       		.sleb128 16
 9121 07ec 06000000 		.4byte	.LCFI108
 9122 07f0 30000000 		.4byte	.LFE36
 9123 07f4 0200     		.2byte	0x2
 9124 07f6 77       		.byte	0x77
 9125 07f7 10       		.sleb128 16
 9126 07f8 00000000 		.4byte	0
 9127 07fc 00000000 		.4byte	0
 9128              	.LLST37:
 9129 0800 00000000 		.4byte	.LFB37
 9130 0804 02000000 		.4byte	.LCFI109
 9131 0808 0200     		.2byte	0x2
 9132 080a 7D       		.byte	0x7d
 9133 080b 00       		.sleb128 0
 9134 080c 02000000 		.4byte	.LCFI109
 9135 0810 04000000 		.4byte	.LCFI110
 9136 0814 0200     		.2byte	0x2
 9137 0816 7D       		.byte	0x7d
 9138 0817 08       		.sleb128 8
 9139 0818 04000000 		.4byte	.LCFI110
 9140 081c 06000000 		.4byte	.LCFI111
 9141 0820 0200     		.2byte	0x2
 9142 0822 7D       		.byte	0x7d
 9143 0823 10       		.sleb128 16
 9144 0824 06000000 		.4byte	.LCFI111
 9145 0828 34000000 		.4byte	.LFE37
 9146 082c 0200     		.2byte	0x2
 9147 082e 77       		.byte	0x77
 9148 082f 10       		.sleb128 16
 9149 0830 00000000 		.4byte	0
 9150 0834 00000000 		.4byte	0
 9151              	.LLST38:
 9152 0838 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 193


 9153 083c 02000000 		.4byte	.LCFI112
 9154 0840 0200     		.2byte	0x2
 9155 0842 7D       		.byte	0x7d
 9156 0843 00       		.sleb128 0
 9157 0844 02000000 		.4byte	.LCFI112
 9158 0848 04000000 		.4byte	.LCFI113
 9159 084c 0200     		.2byte	0x2
 9160 084e 7D       		.byte	0x7d
 9161 084f 08       		.sleb128 8
 9162 0850 04000000 		.4byte	.LCFI113
 9163 0854 06000000 		.4byte	.LCFI114
 9164 0858 0200     		.2byte	0x2
 9165 085a 7D       		.byte	0x7d
 9166 085b 10       		.sleb128 16
 9167 085c 06000000 		.4byte	.LCFI114
 9168 0860 34000000 		.4byte	.LFE38
 9169 0864 0200     		.2byte	0x2
 9170 0866 77       		.byte	0x77
 9171 0867 10       		.sleb128 16
 9172 0868 00000000 		.4byte	0
 9173 086c 00000000 		.4byte	0
 9174              	.LLST39:
 9175 0870 00000000 		.4byte	.LFB39
 9176 0874 02000000 		.4byte	.LCFI115
 9177 0878 0200     		.2byte	0x2
 9178 087a 7D       		.byte	0x7d
 9179 087b 00       		.sleb128 0
 9180 087c 02000000 		.4byte	.LCFI115
 9181 0880 04000000 		.4byte	.LCFI116
 9182 0884 0200     		.2byte	0x2
 9183 0886 7D       		.byte	0x7d
 9184 0887 08       		.sleb128 8
 9185 0888 04000000 		.4byte	.LCFI116
 9186 088c 06000000 		.4byte	.LCFI117
 9187 0890 0200     		.2byte	0x2
 9188 0892 7D       		.byte	0x7d
 9189 0893 18       		.sleb128 24
 9190 0894 06000000 		.4byte	.LCFI117
 9191 0898 52000000 		.4byte	.LFE39
 9192 089c 0200     		.2byte	0x2
 9193 089e 77       		.byte	0x77
 9194 089f 18       		.sleb128 24
 9195 08a0 00000000 		.4byte	0
 9196 08a4 00000000 		.4byte	0
 9197              	.LLST40:
 9198 08a8 00000000 		.4byte	.LFB40
 9199 08ac 02000000 		.4byte	.LCFI118
 9200 08b0 0200     		.2byte	0x2
 9201 08b2 7D       		.byte	0x7d
 9202 08b3 00       		.sleb128 0
 9203 08b4 02000000 		.4byte	.LCFI118
 9204 08b8 04000000 		.4byte	.LCFI119
 9205 08bc 0200     		.2byte	0x2
 9206 08be 7D       		.byte	0x7d
 9207 08bf 08       		.sleb128 8
 9208 08c0 04000000 		.4byte	.LCFI119
 9209 08c4 06000000 		.4byte	.LCFI120
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 194


 9210 08c8 0200     		.2byte	0x2
 9211 08ca 7D       		.byte	0x7d
 9212 08cb 18       		.sleb128 24
 9213 08cc 06000000 		.4byte	.LCFI120
 9214 08d0 48000000 		.4byte	.LFE40
 9215 08d4 0200     		.2byte	0x2
 9216 08d6 77       		.byte	0x77
 9217 08d7 18       		.sleb128 24
 9218 08d8 00000000 		.4byte	0
 9219 08dc 00000000 		.4byte	0
 9220              	.LLST41:
 9221 08e0 00000000 		.4byte	.LFB41
 9222 08e4 02000000 		.4byte	.LCFI121
 9223 08e8 0200     		.2byte	0x2
 9224 08ea 7D       		.byte	0x7d
 9225 08eb 00       		.sleb128 0
 9226 08ec 02000000 		.4byte	.LCFI121
 9227 08f0 04000000 		.4byte	.LCFI122
 9228 08f4 0200     		.2byte	0x2
 9229 08f6 7D       		.byte	0x7d
 9230 08f7 08       		.sleb128 8
 9231 08f8 04000000 		.4byte	.LCFI122
 9232 08fc 06000000 		.4byte	.LCFI123
 9233 0900 0200     		.2byte	0x2
 9234 0902 7D       		.byte	0x7d
 9235 0903 18       		.sleb128 24
 9236 0904 06000000 		.4byte	.LCFI123
 9237 0908 48000000 		.4byte	.LFE41
 9238 090c 0200     		.2byte	0x2
 9239 090e 77       		.byte	0x77
 9240 090f 18       		.sleb128 24
 9241 0910 00000000 		.4byte	0
 9242 0914 00000000 		.4byte	0
 9243              	.LLST42:
 9244 0918 00000000 		.4byte	.LFB42
 9245 091c 02000000 		.4byte	.LCFI124
 9246 0920 0200     		.2byte	0x2
 9247 0922 7D       		.byte	0x7d
 9248 0923 00       		.sleb128 0
 9249 0924 02000000 		.4byte	.LCFI124
 9250 0928 04000000 		.4byte	.LCFI125
 9251 092c 0200     		.2byte	0x2
 9252 092e 7D       		.byte	0x7d
 9253 092f 08       		.sleb128 8
 9254 0930 04000000 		.4byte	.LCFI125
 9255 0934 06000000 		.4byte	.LCFI126
 9256 0938 0200     		.2byte	0x2
 9257 093a 7D       		.byte	0x7d
 9258 093b 20       		.sleb128 32
 9259 093c 06000000 		.4byte	.LCFI126
 9260 0940 B4000000 		.4byte	.LFE42
 9261 0944 0200     		.2byte	0x2
 9262 0946 77       		.byte	0x77
 9263 0947 20       		.sleb128 32
 9264 0948 00000000 		.4byte	0
 9265 094c 00000000 		.4byte	0
 9266              	.LLST43:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 195


 9267 0950 00000000 		.4byte	.LFB43
 9268 0954 02000000 		.4byte	.LCFI127
 9269 0958 0200     		.2byte	0x2
 9270 095a 7D       		.byte	0x7d
 9271 095b 00       		.sleb128 0
 9272 095c 02000000 		.4byte	.LCFI127
 9273 0960 04000000 		.4byte	.LCFI128
 9274 0964 0200     		.2byte	0x2
 9275 0966 7D       		.byte	0x7d
 9276 0967 08       		.sleb128 8
 9277 0968 04000000 		.4byte	.LCFI128
 9278 096c 06000000 		.4byte	.LCFI129
 9279 0970 0200     		.2byte	0x2
 9280 0972 7D       		.byte	0x7d
 9281 0973 20       		.sleb128 32
 9282 0974 06000000 		.4byte	.LCFI129
 9283 0978 C0000000 		.4byte	.LFE43
 9284 097c 0200     		.2byte	0x2
 9285 097e 77       		.byte	0x77
 9286 097f 20       		.sleb128 32
 9287 0980 00000000 		.4byte	0
 9288 0984 00000000 		.4byte	0
 9289              	.LLST44:
 9290 0988 00000000 		.4byte	.LFB44
 9291 098c 02000000 		.4byte	.LCFI130
 9292 0990 0200     		.2byte	0x2
 9293 0992 7D       		.byte	0x7d
 9294 0993 00       		.sleb128 0
 9295 0994 02000000 		.4byte	.LCFI130
 9296 0998 04000000 		.4byte	.LCFI131
 9297 099c 0200     		.2byte	0x2
 9298 099e 7D       		.byte	0x7d
 9299 099f 08       		.sleb128 8
 9300 09a0 04000000 		.4byte	.LCFI131
 9301 09a4 06000000 		.4byte	.LCFI132
 9302 09a8 0200     		.2byte	0x2
 9303 09aa 7D       		.byte	0x7d
 9304 09ab 20       		.sleb128 32
 9305 09ac 06000000 		.4byte	.LCFI132
 9306 09b0 06010000 		.4byte	.LFE44
 9307 09b4 0200     		.2byte	0x2
 9308 09b6 77       		.byte	0x77
 9309 09b7 20       		.sleb128 32
 9310 09b8 00000000 		.4byte	0
 9311 09bc 00000000 		.4byte	0
 9312              	.LLST45:
 9313 09c0 00000000 		.4byte	.LFB45
 9314 09c4 02000000 		.4byte	.LCFI133
 9315 09c8 0200     		.2byte	0x2
 9316 09ca 7D       		.byte	0x7d
 9317 09cb 00       		.sleb128 0
 9318 09cc 02000000 		.4byte	.LCFI133
 9319 09d0 04000000 		.4byte	.LCFI134
 9320 09d4 0200     		.2byte	0x2
 9321 09d6 7D       		.byte	0x7d
 9322 09d7 08       		.sleb128 8
 9323 09d8 04000000 		.4byte	.LCFI134
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 196


 9324 09dc 06000000 		.4byte	.LCFI135
 9325 09e0 0200     		.2byte	0x2
 9326 09e2 7D       		.byte	0x7d
 9327 09e3 18       		.sleb128 24
 9328 09e4 06000000 		.4byte	.LCFI135
 9329 09e8 D2000000 		.4byte	.LFE45
 9330 09ec 0200     		.2byte	0x2
 9331 09ee 77       		.byte	0x77
 9332 09ef 18       		.sleb128 24
 9333 09f0 00000000 		.4byte	0
 9334 09f4 00000000 		.4byte	0
 9335              	.LLST46:
 9336 09f8 00000000 		.4byte	.LFB46
 9337 09fc 02000000 		.4byte	.LCFI136
 9338 0a00 0200     		.2byte	0x2
 9339 0a02 7D       		.byte	0x7d
 9340 0a03 00       		.sleb128 0
 9341 0a04 02000000 		.4byte	.LCFI136
 9342 0a08 04000000 		.4byte	.LCFI137
 9343 0a0c 0200     		.2byte	0x2
 9344 0a0e 7D       		.byte	0x7d
 9345 0a0f 0C       		.sleb128 12
 9346 0a10 04000000 		.4byte	.LCFI137
 9347 0a14 06000000 		.4byte	.LCFI138
 9348 0a18 0200     		.2byte	0x2
 9349 0a1a 7D       		.byte	0x7d
 9350 0a1b 30       		.sleb128 48
 9351 0a1c 06000000 		.4byte	.LCFI138
 9352 0a20 4E010000 		.4byte	.LFE46
 9353 0a24 0200     		.2byte	0x2
 9354 0a26 77       		.byte	0x77
 9355 0a27 30       		.sleb128 48
 9356 0a28 00000000 		.4byte	0
 9357 0a2c 00000000 		.4byte	0
 9358              	.LLST47:
 9359 0a30 00000000 		.4byte	.LFB47
 9360 0a34 02000000 		.4byte	.LCFI139
 9361 0a38 0200     		.2byte	0x2
 9362 0a3a 7D       		.byte	0x7d
 9363 0a3b 00       		.sleb128 0
 9364 0a3c 02000000 		.4byte	.LCFI139
 9365 0a40 04000000 		.4byte	.LCFI140
 9366 0a44 0200     		.2byte	0x2
 9367 0a46 7D       		.byte	0x7d
 9368 0a47 04       		.sleb128 4
 9369 0a48 04000000 		.4byte	.LCFI140
 9370 0a4c 06000000 		.4byte	.LCFI141
 9371 0a50 0200     		.2byte	0x2
 9372 0a52 7D       		.byte	0x7d
 9373 0a53 20       		.sleb128 32
 9374 0a54 06000000 		.4byte	.LCFI141
 9375 0a58 5A020000 		.4byte	.LFE47
 9376 0a5c 0200     		.2byte	0x2
 9377 0a5e 77       		.byte	0x77
 9378 0a5f 20       		.sleb128 32
 9379 0a60 00000000 		.4byte	0
 9380 0a64 00000000 		.4byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 197


 9381              	.LLST48:
 9382 0a68 00000000 		.4byte	.LFB48
 9383 0a6c 02000000 		.4byte	.LCFI142
 9384 0a70 0200     		.2byte	0x2
 9385 0a72 7D       		.byte	0x7d
 9386 0a73 00       		.sleb128 0
 9387 0a74 02000000 		.4byte	.LCFI142
 9388 0a78 04000000 		.4byte	.LCFI143
 9389 0a7c 0200     		.2byte	0x2
 9390 0a7e 7D       		.byte	0x7d
 9391 0a7f 04       		.sleb128 4
 9392 0a80 04000000 		.4byte	.LCFI143
 9393 0a84 06000000 		.4byte	.LCFI144
 9394 0a88 0200     		.2byte	0x2
 9395 0a8a 7D       		.byte	0x7d
 9396 0a8b 18       		.sleb128 24
 9397 0a8c 06000000 		.4byte	.LCFI144
 9398 0a90 F2000000 		.4byte	.LFE48
 9399 0a94 0200     		.2byte	0x2
 9400 0a96 77       		.byte	0x77
 9401 0a97 18       		.sleb128 24
 9402 0a98 00000000 		.4byte	0
 9403 0a9c 00000000 		.4byte	0
 9404              	.LLST49:
 9405 0aa0 00000000 		.4byte	.LFB49
 9406 0aa4 02000000 		.4byte	.LCFI145
 9407 0aa8 0200     		.2byte	0x2
 9408 0aaa 7D       		.byte	0x7d
 9409 0aab 00       		.sleb128 0
 9410 0aac 02000000 		.4byte	.LCFI145
 9411 0ab0 04000000 		.4byte	.LCFI146
 9412 0ab4 0200     		.2byte	0x2
 9413 0ab6 7D       		.byte	0x7d
 9414 0ab7 04       		.sleb128 4
 9415 0ab8 04000000 		.4byte	.LCFI146
 9416 0abc 06000000 		.4byte	.LCFI147
 9417 0ac0 0200     		.2byte	0x2
 9418 0ac2 7D       		.byte	0x7d
 9419 0ac3 28       		.sleb128 40
 9420 0ac4 06000000 		.4byte	.LCFI147
 9421 0ac8 16010000 		.4byte	.LFE49
 9422 0acc 0200     		.2byte	0x2
 9423 0ace 77       		.byte	0x77
 9424 0acf 28       		.sleb128 40
 9425 0ad0 00000000 		.4byte	0
 9426 0ad4 00000000 		.4byte	0
 9427              	.LLST50:
 9428 0ad8 00000000 		.4byte	.LFB50
 9429 0adc 02000000 		.4byte	.LCFI148
 9430 0ae0 0200     		.2byte	0x2
 9431 0ae2 7D       		.byte	0x7d
 9432 0ae3 00       		.sleb128 0
 9433 0ae4 02000000 		.4byte	.LCFI148
 9434 0ae8 04000000 		.4byte	.LCFI149
 9435 0aec 0200     		.2byte	0x2
 9436 0aee 7D       		.byte	0x7d
 9437 0aef 08       		.sleb128 8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 198


 9438 0af0 04000000 		.4byte	.LCFI149
 9439 0af4 06000000 		.4byte	.LCFI150
 9440 0af8 0200     		.2byte	0x2
 9441 0afa 7D       		.byte	0x7d
 9442 0afb 18       		.sleb128 24
 9443 0afc 06000000 		.4byte	.LCFI150
 9444 0b00 34000000 		.4byte	.LFE50
 9445 0b04 0200     		.2byte	0x2
 9446 0b06 77       		.byte	0x77
 9447 0b07 18       		.sleb128 24
 9448 0b08 00000000 		.4byte	0
 9449 0b0c 00000000 		.4byte	0
 9450              	.LLST51:
 9451 0b10 00000000 		.4byte	.LFB51
 9452 0b14 02000000 		.4byte	.LCFI151
 9453 0b18 0200     		.2byte	0x2
 9454 0b1a 7D       		.byte	0x7d
 9455 0b1b 00       		.sleb128 0
 9456 0b1c 02000000 		.4byte	.LCFI151
 9457 0b20 04000000 		.4byte	.LCFI152
 9458 0b24 0200     		.2byte	0x2
 9459 0b26 7D       		.byte	0x7d
 9460 0b27 08       		.sleb128 8
 9461 0b28 04000000 		.4byte	.LCFI152
 9462 0b2c 0E000000 		.4byte	.LFE51
 9463 0b30 0200     		.2byte	0x2
 9464 0b32 77       		.byte	0x77
 9465 0b33 08       		.sleb128 8
 9466 0b34 00000000 		.4byte	0
 9467 0b38 00000000 		.4byte	0
 9468              	.LLST52:
 9469 0b3c 00000000 		.4byte	.LFB52
 9470 0b40 02000000 		.4byte	.LCFI153
 9471 0b44 0200     		.2byte	0x2
 9472 0b46 7D       		.byte	0x7d
 9473 0b47 00       		.sleb128 0
 9474 0b48 02000000 		.4byte	.LCFI153
 9475 0b4c 04000000 		.4byte	.LCFI154
 9476 0b50 0200     		.2byte	0x2
 9477 0b52 7D       		.byte	0x7d
 9478 0b53 08       		.sleb128 8
 9479 0b54 04000000 		.4byte	.LCFI154
 9480 0b58 06000000 		.4byte	.LCFI155
 9481 0b5c 0200     		.2byte	0x2
 9482 0b5e 7D       		.byte	0x7d
 9483 0b5f 10       		.sleb128 16
 9484 0b60 06000000 		.4byte	.LCFI155
 9485 0b64 16000000 		.4byte	.LFE52
 9486 0b68 0200     		.2byte	0x2
 9487 0b6a 77       		.byte	0x77
 9488 0b6b 10       		.sleb128 16
 9489 0b6c 00000000 		.4byte	0
 9490 0b70 00000000 		.4byte	0
 9491              	.LLST53:
 9492 0b74 00000000 		.4byte	.LFB53
 9493 0b78 02000000 		.4byte	.LCFI156
 9494 0b7c 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 199


 9495 0b7e 7D       		.byte	0x7d
 9496 0b7f 00       		.sleb128 0
 9497 0b80 02000000 		.4byte	.LCFI156
 9498 0b84 04000000 		.4byte	.LCFI157
 9499 0b88 0200     		.2byte	0x2
 9500 0b8a 7D       		.byte	0x7d
 9501 0b8b 08       		.sleb128 8
 9502 0b8c 04000000 		.4byte	.LCFI157
 9503 0b90 06000000 		.4byte	.LCFI158
 9504 0b94 0200     		.2byte	0x2
 9505 0b96 7D       		.byte	0x7d
 9506 0b97 10       		.sleb128 16
 9507 0b98 06000000 		.4byte	.LCFI158
 9508 0b9c 16000000 		.4byte	.LFE53
 9509 0ba0 0200     		.2byte	0x2
 9510 0ba2 77       		.byte	0x77
 9511 0ba3 10       		.sleb128 16
 9512 0ba4 00000000 		.4byte	0
 9513 0ba8 00000000 		.4byte	0
 9514              	.LLST54:
 9515 0bac 00000000 		.4byte	.LFB54
 9516 0bb0 02000000 		.4byte	.LCFI159
 9517 0bb4 0200     		.2byte	0x2
 9518 0bb6 7D       		.byte	0x7d
 9519 0bb7 00       		.sleb128 0
 9520 0bb8 02000000 		.4byte	.LCFI159
 9521 0bbc 04000000 		.4byte	.LCFI160
 9522 0bc0 0200     		.2byte	0x2
 9523 0bc2 7D       		.byte	0x7d
 9524 0bc3 08       		.sleb128 8
 9525 0bc4 04000000 		.4byte	.LCFI160
 9526 0bc8 06000000 		.4byte	.LCFI161
 9527 0bcc 0200     		.2byte	0x2
 9528 0bce 7D       		.byte	0x7d
 9529 0bcf 18       		.sleb128 24
 9530 0bd0 06000000 		.4byte	.LCFI161
 9531 0bd4 58010000 		.4byte	.LFE54
 9532 0bd8 0200     		.2byte	0x2
 9533 0bda 77       		.byte	0x77
 9534 0bdb 18       		.sleb128 24
 9535 0bdc 00000000 		.4byte	0
 9536 0be0 00000000 		.4byte	0
 9537              	.LLST55:
 9538 0be4 00000000 		.4byte	.LFB55
 9539 0be8 02000000 		.4byte	.LCFI162
 9540 0bec 0200     		.2byte	0x2
 9541 0bee 7D       		.byte	0x7d
 9542 0bef 00       		.sleb128 0
 9543 0bf0 02000000 		.4byte	.LCFI162
 9544 0bf4 04000000 		.4byte	.LCFI163
 9545 0bf8 0200     		.2byte	0x2
 9546 0bfa 7D       		.byte	0x7d
 9547 0bfb 08       		.sleb128 8
 9548 0bfc 04000000 		.4byte	.LCFI163
 9549 0c00 06000000 		.4byte	.LCFI164
 9550 0c04 0200     		.2byte	0x2
 9551 0c06 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 200


 9552 0c07 10       		.sleb128 16
 9553 0c08 06000000 		.4byte	.LCFI164
 9554 0c0c 58000000 		.4byte	.LFE55
 9555 0c10 0200     		.2byte	0x2
 9556 0c12 77       		.byte	0x77
 9557 0c13 10       		.sleb128 16
 9558 0c14 00000000 		.4byte	0
 9559 0c18 00000000 		.4byte	0
 9560              	.LLST56:
 9561 0c1c 00000000 		.4byte	.LFB56
 9562 0c20 02000000 		.4byte	.LCFI165
 9563 0c24 0200     		.2byte	0x2
 9564 0c26 7D       		.byte	0x7d
 9565 0c27 00       		.sleb128 0
 9566 0c28 02000000 		.4byte	.LCFI165
 9567 0c2c 04000000 		.4byte	.LCFI166
 9568 0c30 0200     		.2byte	0x2
 9569 0c32 7D       		.byte	0x7d
 9570 0c33 08       		.sleb128 8
 9571 0c34 04000000 		.4byte	.LCFI166
 9572 0c38 06000000 		.4byte	.LCFI167
 9573 0c3c 0200     		.2byte	0x2
 9574 0c3e 7D       		.byte	0x7d
 9575 0c3f 18       		.sleb128 24
 9576 0c40 06000000 		.4byte	.LCFI167
 9577 0c44 42000000 		.4byte	.LFE56
 9578 0c48 0200     		.2byte	0x2
 9579 0c4a 77       		.byte	0x77
 9580 0c4b 18       		.sleb128 24
 9581 0c4c 00000000 		.4byte	0
 9582 0c50 00000000 		.4byte	0
 9583              	.LLST57:
 9584 0c54 00000000 		.4byte	.LFB57
 9585 0c58 02000000 		.4byte	.LCFI168
 9586 0c5c 0200     		.2byte	0x2
 9587 0c5e 7D       		.byte	0x7d
 9588 0c5f 00       		.sleb128 0
 9589 0c60 02000000 		.4byte	.LCFI168
 9590 0c64 04000000 		.4byte	.LCFI169
 9591 0c68 0200     		.2byte	0x2
 9592 0c6a 7D       		.byte	0x7d
 9593 0c6b 08       		.sleb128 8
 9594 0c6c 04000000 		.4byte	.LCFI169
 9595 0c70 06000000 		.4byte	.LCFI170
 9596 0c74 0200     		.2byte	0x2
 9597 0c76 7D       		.byte	0x7d
 9598 0c77 18       		.sleb128 24
 9599 0c78 06000000 		.4byte	.LCFI170
 9600 0c7c 38000000 		.4byte	.LFE57
 9601 0c80 0200     		.2byte	0x2
 9602 0c82 77       		.byte	0x77
 9603 0c83 18       		.sleb128 24
 9604 0c84 00000000 		.4byte	0
 9605 0c88 00000000 		.4byte	0
 9606              	.LLST58:
 9607 0c8c 00000000 		.4byte	.LFB58
 9608 0c90 02000000 		.4byte	.LCFI171
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 201


 9609 0c94 0200     		.2byte	0x2
 9610 0c96 7D       		.byte	0x7d
 9611 0c97 00       		.sleb128 0
 9612 0c98 02000000 		.4byte	.LCFI171
 9613 0c9c 04000000 		.4byte	.LCFI172
 9614 0ca0 0200     		.2byte	0x2
 9615 0ca2 7D       		.byte	0x7d
 9616 0ca3 08       		.sleb128 8
 9617 0ca4 04000000 		.4byte	.LCFI172
 9618 0ca8 06000000 		.4byte	.LCFI173
 9619 0cac 0200     		.2byte	0x2
 9620 0cae 7D       		.byte	0x7d
 9621 0caf 18       		.sleb128 24
 9622 0cb0 06000000 		.4byte	.LCFI173
 9623 0cb4 7E000000 		.4byte	.LFE58
 9624 0cb8 0200     		.2byte	0x2
 9625 0cba 77       		.byte	0x77
 9626 0cbb 18       		.sleb128 24
 9627 0cbc 00000000 		.4byte	0
 9628 0cc0 00000000 		.4byte	0
 9629              	.LLST59:
 9630 0cc4 00000000 		.4byte	.LFB59
 9631 0cc8 02000000 		.4byte	.LCFI174
 9632 0ccc 0200     		.2byte	0x2
 9633 0cce 7D       		.byte	0x7d
 9634 0ccf 00       		.sleb128 0
 9635 0cd0 02000000 		.4byte	.LCFI174
 9636 0cd4 04000000 		.4byte	.LCFI175
 9637 0cd8 0200     		.2byte	0x2
 9638 0cda 7D       		.byte	0x7d
 9639 0cdb 08       		.sleb128 8
 9640 0cdc 04000000 		.4byte	.LCFI175
 9641 0ce0 06000000 		.4byte	.LCFI176
 9642 0ce4 0200     		.2byte	0x2
 9643 0ce6 7D       		.byte	0x7d
 9644 0ce7 18       		.sleb128 24
 9645 0ce8 06000000 		.4byte	.LCFI176
 9646 0cec 78000000 		.4byte	.LFE59
 9647 0cf0 0200     		.2byte	0x2
 9648 0cf2 77       		.byte	0x77
 9649 0cf3 18       		.sleb128 24
 9650 0cf4 00000000 		.4byte	0
 9651 0cf8 00000000 		.4byte	0
 9652              	.LLST60:
 9653 0cfc 00000000 		.4byte	.LFB60
 9654 0d00 02000000 		.4byte	.LCFI177
 9655 0d04 0200     		.2byte	0x2
 9656 0d06 7D       		.byte	0x7d
 9657 0d07 00       		.sleb128 0
 9658 0d08 02000000 		.4byte	.LCFI177
 9659 0d0c 04000000 		.4byte	.LCFI178
 9660 0d10 0200     		.2byte	0x2
 9661 0d12 7D       		.byte	0x7d
 9662 0d13 08       		.sleb128 8
 9663 0d14 04000000 		.4byte	.LCFI178
 9664 0d18 06000000 		.4byte	.LCFI179
 9665 0d1c 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 202


 9666 0d1e 7D       		.byte	0x7d
 9667 0d1f 10       		.sleb128 16
 9668 0d20 06000000 		.4byte	.LCFI179
 9669 0d24 1E000000 		.4byte	.LFE60
 9670 0d28 0200     		.2byte	0x2
 9671 0d2a 77       		.byte	0x77
 9672 0d2b 10       		.sleb128 16
 9673 0d2c 00000000 		.4byte	0
 9674 0d30 00000000 		.4byte	0
 9675              	.LLST61:
 9676 0d34 00000000 		.4byte	.LFB61
 9677 0d38 02000000 		.4byte	.LCFI180
 9678 0d3c 0200     		.2byte	0x2
 9679 0d3e 7D       		.byte	0x7d
 9680 0d3f 00       		.sleb128 0
 9681 0d40 02000000 		.4byte	.LCFI180
 9682 0d44 04000000 		.4byte	.LCFI181
 9683 0d48 0200     		.2byte	0x2
 9684 0d4a 7D       		.byte	0x7d
 9685 0d4b 08       		.sleb128 8
 9686 0d4c 04000000 		.4byte	.LCFI181
 9687 0d50 06000000 		.4byte	.LCFI182
 9688 0d54 0200     		.2byte	0x2
 9689 0d56 7D       		.byte	0x7d
 9690 0d57 10       		.sleb128 16
 9691 0d58 06000000 		.4byte	.LCFI182
 9692 0d5c 26000000 		.4byte	.LFE61
 9693 0d60 0200     		.2byte	0x2
 9694 0d62 77       		.byte	0x77
 9695 0d63 10       		.sleb128 16
 9696 0d64 00000000 		.4byte	0
 9697 0d68 00000000 		.4byte	0
 9698              	.LLST62:
 9699 0d6c 00000000 		.4byte	.LFB62
 9700 0d70 02000000 		.4byte	.LCFI183
 9701 0d74 0200     		.2byte	0x2
 9702 0d76 7D       		.byte	0x7d
 9703 0d77 00       		.sleb128 0
 9704 0d78 02000000 		.4byte	.LCFI183
 9705 0d7c 04000000 		.4byte	.LCFI184
 9706 0d80 0200     		.2byte	0x2
 9707 0d82 7D       		.byte	0x7d
 9708 0d83 08       		.sleb128 8
 9709 0d84 04000000 		.4byte	.LCFI184
 9710 0d88 06000000 		.4byte	.LCFI185
 9711 0d8c 0200     		.2byte	0x2
 9712 0d8e 7D       		.byte	0x7d
 9713 0d8f 10       		.sleb128 16
 9714 0d90 06000000 		.4byte	.LCFI185
 9715 0d94 24000000 		.4byte	.LFE62
 9716 0d98 0200     		.2byte	0x2
 9717 0d9a 77       		.byte	0x77
 9718 0d9b 10       		.sleb128 16
 9719 0d9c 00000000 		.4byte	0
 9720 0da0 00000000 		.4byte	0
 9721              	.LLST63:
 9722 0da4 00000000 		.4byte	.LFB63
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 203


 9723 0da8 02000000 		.4byte	.LCFI186
 9724 0dac 0200     		.2byte	0x2
 9725 0dae 7D       		.byte	0x7d
 9726 0daf 00       		.sleb128 0
 9727 0db0 02000000 		.4byte	.LCFI186
 9728 0db4 04000000 		.4byte	.LCFI187
 9729 0db8 0200     		.2byte	0x2
 9730 0dba 7D       		.byte	0x7d
 9731 0dbb 08       		.sleb128 8
 9732 0dbc 04000000 		.4byte	.LCFI187
 9733 0dc0 06000000 		.4byte	.LCFI188
 9734 0dc4 0200     		.2byte	0x2
 9735 0dc6 7D       		.byte	0x7d
 9736 0dc7 18       		.sleb128 24
 9737 0dc8 06000000 		.4byte	.LCFI188
 9738 0dcc 5A000000 		.4byte	.LFE63
 9739 0dd0 0200     		.2byte	0x2
 9740 0dd2 77       		.byte	0x77
 9741 0dd3 18       		.sleb128 24
 9742 0dd4 00000000 		.4byte	0
 9743 0dd8 00000000 		.4byte	0
 9744              	.LLST64:
 9745 0ddc 00000000 		.4byte	.LFB64
 9746 0de0 02000000 		.4byte	.LCFI189
 9747 0de4 0200     		.2byte	0x2
 9748 0de6 7D       		.byte	0x7d
 9749 0de7 00       		.sleb128 0
 9750 0de8 02000000 		.4byte	.LCFI189
 9751 0dec 04000000 		.4byte	.LCFI190
 9752 0df0 0200     		.2byte	0x2
 9753 0df2 7D       		.byte	0x7d
 9754 0df3 08       		.sleb128 8
 9755 0df4 04000000 		.4byte	.LCFI190
 9756 0df8 06000000 		.4byte	.LCFI191
 9757 0dfc 0200     		.2byte	0x2
 9758 0dfe 7D       		.byte	0x7d
 9759 0dff 18       		.sleb128 24
 9760 0e00 06000000 		.4byte	.LCFI191
 9761 0e04 B0000000 		.4byte	.LFE64
 9762 0e08 0200     		.2byte	0x2
 9763 0e0a 77       		.byte	0x77
 9764 0e0b 18       		.sleb128 24
 9765 0e0c 00000000 		.4byte	0
 9766 0e10 00000000 		.4byte	0
 9767              	.LLST65:
 9768 0e14 00000000 		.4byte	.LFB65
 9769 0e18 02000000 		.4byte	.LCFI192
 9770 0e1c 0200     		.2byte	0x2
 9771 0e1e 7D       		.byte	0x7d
 9772 0e1f 00       		.sleb128 0
 9773 0e20 02000000 		.4byte	.LCFI192
 9774 0e24 04000000 		.4byte	.LCFI193
 9775 0e28 0200     		.2byte	0x2
 9776 0e2a 7D       		.byte	0x7d
 9777 0e2b 08       		.sleb128 8
 9778 0e2c 04000000 		.4byte	.LCFI193
 9779 0e30 06000000 		.4byte	.LCFI194
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 204


 9780 0e34 0200     		.2byte	0x2
 9781 0e36 7D       		.byte	0x7d
 9782 0e37 10       		.sleb128 16
 9783 0e38 06000000 		.4byte	.LCFI194
 9784 0e3c 1E000000 		.4byte	.LFE65
 9785 0e40 0200     		.2byte	0x2
 9786 0e42 77       		.byte	0x77
 9787 0e43 10       		.sleb128 16
 9788 0e44 00000000 		.4byte	0
 9789 0e48 00000000 		.4byte	0
 9790              	.LLST66:
 9791 0e4c 00000000 		.4byte	.LFB66
 9792 0e50 02000000 		.4byte	.LCFI195
 9793 0e54 0200     		.2byte	0x2
 9794 0e56 7D       		.byte	0x7d
 9795 0e57 00       		.sleb128 0
 9796 0e58 02000000 		.4byte	.LCFI195
 9797 0e5c 04000000 		.4byte	.LCFI196
 9798 0e60 0200     		.2byte	0x2
 9799 0e62 7D       		.byte	0x7d
 9800 0e63 08       		.sleb128 8
 9801 0e64 04000000 		.4byte	.LCFI196
 9802 0e68 06000000 		.4byte	.LCFI197
 9803 0e6c 0200     		.2byte	0x2
 9804 0e6e 7D       		.byte	0x7d
 9805 0e6f 10       		.sleb128 16
 9806 0e70 06000000 		.4byte	.LCFI197
 9807 0e74 1E000000 		.4byte	.LFE66
 9808 0e78 0200     		.2byte	0x2
 9809 0e7a 77       		.byte	0x77
 9810 0e7b 10       		.sleb128 16
 9811 0e7c 00000000 		.4byte	0
 9812 0e80 00000000 		.4byte	0
 9813              	.LLST67:
 9814 0e84 00000000 		.4byte	.LFB67
 9815 0e88 02000000 		.4byte	.LCFI198
 9816 0e8c 0200     		.2byte	0x2
 9817 0e8e 7D       		.byte	0x7d
 9818 0e8f 00       		.sleb128 0
 9819 0e90 02000000 		.4byte	.LCFI198
 9820 0e94 04000000 		.4byte	.LCFI199
 9821 0e98 0200     		.2byte	0x2
 9822 0e9a 7D       		.byte	0x7d
 9823 0e9b 08       		.sleb128 8
 9824 0e9c 04000000 		.4byte	.LCFI199
 9825 0ea0 06000000 		.4byte	.LCFI200
 9826 0ea4 0200     		.2byte	0x2
 9827 0ea6 7D       		.byte	0x7d
 9828 0ea7 18       		.sleb128 24
 9829 0ea8 06000000 		.4byte	.LCFI200
 9830 0eac B4000000 		.4byte	.LFE67
 9831 0eb0 0200     		.2byte	0x2
 9832 0eb2 77       		.byte	0x77
 9833 0eb3 18       		.sleb128 24
 9834 0eb4 00000000 		.4byte	0
 9835 0eb8 00000000 		.4byte	0
 9836              	.LLST68:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 205


 9837 0ebc 00000000 		.4byte	.LFB68
 9838 0ec0 02000000 		.4byte	.LCFI201
 9839 0ec4 0200     		.2byte	0x2
 9840 0ec6 7D       		.byte	0x7d
 9841 0ec7 00       		.sleb128 0
 9842 0ec8 02000000 		.4byte	.LCFI201
 9843 0ecc 04000000 		.4byte	.LCFI202
 9844 0ed0 0200     		.2byte	0x2
 9845 0ed2 7D       		.byte	0x7d
 9846 0ed3 08       		.sleb128 8
 9847 0ed4 04000000 		.4byte	.LCFI202
 9848 0ed8 06000000 		.4byte	.LCFI203
 9849 0edc 0200     		.2byte	0x2
 9850 0ede 7D       		.byte	0x7d
 9851 0edf 20       		.sleb128 32
 9852 0ee0 06000000 		.4byte	.LCFI203
 9853 0ee4 68000000 		.4byte	.LFE68
 9854 0ee8 0200     		.2byte	0x2
 9855 0eea 77       		.byte	0x77
 9856 0eeb 18       		.sleb128 24
 9857 0eec 00000000 		.4byte	0
 9858 0ef0 00000000 		.4byte	0
 9859              	.LLST69:
 9860 0ef4 00000000 		.4byte	.LFB69
 9861 0ef8 02000000 		.4byte	.LCFI204
 9862 0efc 0200     		.2byte	0x2
 9863 0efe 7D       		.byte	0x7d
 9864 0eff 00       		.sleb128 0
 9865 0f00 02000000 		.4byte	.LCFI204
 9866 0f04 04000000 		.4byte	.LCFI205
 9867 0f08 0200     		.2byte	0x2
 9868 0f0a 7D       		.byte	0x7d
 9869 0f0b 08       		.sleb128 8
 9870 0f0c 04000000 		.4byte	.LCFI205
 9871 0f10 06000000 		.4byte	.LCFI206
 9872 0f14 0200     		.2byte	0x2
 9873 0f16 7D       		.byte	0x7d
 9874 0f17 10       		.sleb128 16
 9875 0f18 06000000 		.4byte	.LCFI206
 9876 0f1c 2A000000 		.4byte	.LFE69
 9877 0f20 0200     		.2byte	0x2
 9878 0f22 77       		.byte	0x77
 9879 0f23 10       		.sleb128 16
 9880 0f24 00000000 		.4byte	0
 9881 0f28 00000000 		.4byte	0
 9882              	.LLST70:
 9883 0f2c 00000000 		.4byte	.LFB70
 9884 0f30 02000000 		.4byte	.LCFI207
 9885 0f34 0200     		.2byte	0x2
 9886 0f36 7D       		.byte	0x7d
 9887 0f37 00       		.sleb128 0
 9888 0f38 02000000 		.4byte	.LCFI207
 9889 0f3c 04000000 		.4byte	.LCFI208
 9890 0f40 0200     		.2byte	0x2
 9891 0f42 7D       		.byte	0x7d
 9892 0f43 08       		.sleb128 8
 9893 0f44 04000000 		.4byte	.LCFI208
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 206


 9894 0f48 06000000 		.4byte	.LCFI209
 9895 0f4c 0200     		.2byte	0x2
 9896 0f4e 7D       		.byte	0x7d
 9897 0f4f 10       		.sleb128 16
 9898 0f50 06000000 		.4byte	.LCFI209
 9899 0f54 26000000 		.4byte	.LFE70
 9900 0f58 0200     		.2byte	0x2
 9901 0f5a 77       		.byte	0x77
 9902 0f5b 10       		.sleb128 16
 9903 0f5c 00000000 		.4byte	0
 9904 0f60 00000000 		.4byte	0
 9905              	.LLST71:
 9906 0f64 00000000 		.4byte	.LFB71
 9907 0f68 02000000 		.4byte	.LCFI210
 9908 0f6c 0200     		.2byte	0x2
 9909 0f6e 7D       		.byte	0x7d
 9910 0f6f 00       		.sleb128 0
 9911 0f70 02000000 		.4byte	.LCFI210
 9912 0f74 04000000 		.4byte	.LCFI211
 9913 0f78 0200     		.2byte	0x2
 9914 0f7a 7D       		.byte	0x7d
 9915 0f7b 08       		.sleb128 8
 9916 0f7c 04000000 		.4byte	.LCFI211
 9917 0f80 06000000 		.4byte	.LCFI212
 9918 0f84 0200     		.2byte	0x2
 9919 0f86 7D       		.byte	0x7d
 9920 0f87 20       		.sleb128 32
 9921 0f88 06000000 		.4byte	.LCFI212
 9922 0f8c 8A000000 		.4byte	.LFE71
 9923 0f90 0200     		.2byte	0x2
 9924 0f92 77       		.byte	0x77
 9925 0f93 20       		.sleb128 32
 9926 0f94 00000000 		.4byte	0
 9927 0f98 00000000 		.4byte	0
 9928              	.LLST72:
 9929 0f9c 00000000 		.4byte	.LFB72
 9930 0fa0 02000000 		.4byte	.LCFI213
 9931 0fa4 0200     		.2byte	0x2
 9932 0fa6 7D       		.byte	0x7d
 9933 0fa7 00       		.sleb128 0
 9934 0fa8 02000000 		.4byte	.LCFI213
 9935 0fac 04000000 		.4byte	.LCFI214
 9936 0fb0 0200     		.2byte	0x2
 9937 0fb2 7D       		.byte	0x7d
 9938 0fb3 08       		.sleb128 8
 9939 0fb4 04000000 		.4byte	.LCFI214
 9940 0fb8 06000000 		.4byte	.LCFI215
 9941 0fbc 0200     		.2byte	0x2
 9942 0fbe 7D       		.byte	0x7d
 9943 0fbf 30       		.sleb128 48
 9944 0fc0 06000000 		.4byte	.LCFI215
 9945 0fc4 00010000 		.4byte	.LFE72
 9946 0fc8 0200     		.2byte	0x2
 9947 0fca 77       		.byte	0x77
 9948 0fcb 28       		.sleb128 40
 9949 0fcc 00000000 		.4byte	0
 9950 0fd0 00000000 		.4byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 207


 9951              		.section	.debug_aranges,"",%progbits
 9952 0000 5C020000 		.4byte	0x25c
 9953 0004 0200     		.2byte	0x2
 9954 0006 00000000 		.4byte	.Ldebug_info0
 9955 000a 04       		.byte	0x4
 9956 000b 00       		.byte	0
 9957 000c 0000     		.2byte	0
 9958 000e 0000     		.2byte	0
 9959 0010 00000000 		.4byte	.LFB0
 9960 0014 0E000000 		.4byte	.LFE0-.LFB0
 9961 0018 00000000 		.4byte	.LFB1
 9962 001c 0E000000 		.4byte	.LFE1-.LFB1
 9963 0020 00000000 		.4byte	.LFB2
 9964 0024 0C010000 		.4byte	.LFE2-.LFB2
 9965 0028 00000000 		.4byte	.LFB3
 9966 002c 0A010000 		.4byte	.LFE3-.LFB3
 9967 0030 00000000 		.4byte	.LFB4
 9968 0034 42000000 		.4byte	.LFE4-.LFB4
 9969 0038 00000000 		.4byte	.LFB5
 9970 003c 42000000 		.4byte	.LFE5-.LFB5
 9971 0040 00000000 		.4byte	.LFB6
 9972 0044 1E000000 		.4byte	.LFE6-.LFB6
 9973 0048 00000000 		.4byte	.LFB7
 9974 004c 1E000000 		.4byte	.LFE7-.LFB7
 9975 0050 00000000 		.4byte	.LFB8
 9976 0054 22000000 		.4byte	.LFE8-.LFB8
 9977 0058 00000000 		.4byte	.LFB9
 9978 005c 28000000 		.4byte	.LFE9-.LFB9
 9979 0060 00000000 		.4byte	.LFB10
 9980 0064 22000000 		.4byte	.LFE10-.LFB10
 9981 0068 00000000 		.4byte	.LFB11
 9982 006c 28000000 		.4byte	.LFE11-.LFB11
 9983 0070 00000000 		.4byte	.LFB12
 9984 0074 22000000 		.4byte	.LFE12-.LFB12
 9985 0078 00000000 		.4byte	.LFB13
 9986 007c 28000000 		.4byte	.LFE13-.LFB13
 9987 0080 00000000 		.4byte	.LFB14
 9988 0084 24000000 		.4byte	.LFE14-.LFB14
 9989 0088 00000000 		.4byte	.LFB15
 9990 008c 24000000 		.4byte	.LFE15-.LFB15
 9991 0090 00000000 		.4byte	.LFB16
 9992 0094 24000000 		.4byte	.LFE16-.LFB16
 9993 0098 00000000 		.4byte	.LFB17
 9994 009c 3A000000 		.4byte	.LFE17-.LFB17
 9995 00a0 00000000 		.4byte	.LFB18
 9996 00a4 40000000 		.4byte	.LFE18-.LFB18
 9997 00a8 00000000 		.4byte	.LFB19
 9998 00ac 3A000000 		.4byte	.LFE19-.LFB19
 9999 00b0 00000000 		.4byte	.LFB20
 10000 00b4 40000000 		.4byte	.LFE20-.LFB20
 10001 00b8 00000000 		.4byte	.LFB21
 10002 00bc 36000000 		.4byte	.LFE21-.LFB21
 10003 00c0 00000000 		.4byte	.LFB22
 10004 00c4 3A000000 		.4byte	.LFE22-.LFB22
 10005 00c8 00000000 		.4byte	.LFB23
 10006 00cc 40000000 		.4byte	.LFE23-.LFB23
 10007 00d0 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 208


 10008 00d4 3A000000 		.4byte	.LFE24-.LFB24
 10009 00d8 00000000 		.4byte	.LFB25
 10010 00dc 40000000 		.4byte	.LFE25-.LFB25
 10011 00e0 00000000 		.4byte	.LFB26
 10012 00e4 40000000 		.4byte	.LFE26-.LFB26
 10013 00e8 00000000 		.4byte	.LFB27
 10014 00ec 34000000 		.4byte	.LFE27-.LFB27
 10015 00f0 00000000 		.4byte	.LFB28
 10016 00f4 34000000 		.4byte	.LFE28-.LFB28
 10017 00f8 00000000 		.4byte	.LFB29
 10018 00fc 36000000 		.4byte	.LFE29-.LFB29
 10019 0100 00000000 		.4byte	.LFB30
 10020 0104 34000000 		.4byte	.LFE30-.LFB30
 10021 0108 00000000 		.4byte	.LFB31
 10022 010c 30000000 		.4byte	.LFE31-.LFB31
 10023 0110 00000000 		.4byte	.LFB32
 10024 0114 34000000 		.4byte	.LFE32-.LFB32
 10025 0118 00000000 		.4byte	.LFB33
 10026 011c 30000000 		.4byte	.LFE33-.LFB33
 10027 0120 00000000 		.4byte	.LFB34
 10028 0124 30000000 		.4byte	.LFE34-.LFB34
 10029 0128 00000000 		.4byte	.LFB35
 10030 012c 34000000 		.4byte	.LFE35-.LFB35
 10031 0130 00000000 		.4byte	.LFB36
 10032 0134 30000000 		.4byte	.LFE36-.LFB36
 10033 0138 00000000 		.4byte	.LFB37
 10034 013c 34000000 		.4byte	.LFE37-.LFB37
 10035 0140 00000000 		.4byte	.LFB38
 10036 0144 34000000 		.4byte	.LFE38-.LFB38
 10037 0148 00000000 		.4byte	.LFB39
 10038 014c 52000000 		.4byte	.LFE39-.LFB39
 10039 0150 00000000 		.4byte	.LFB40
 10040 0154 48000000 		.4byte	.LFE40-.LFB40
 10041 0158 00000000 		.4byte	.LFB41
 10042 015c 48000000 		.4byte	.LFE41-.LFB41
 10043 0160 00000000 		.4byte	.LFB42
 10044 0164 B4000000 		.4byte	.LFE42-.LFB42
 10045 0168 00000000 		.4byte	.LFB43
 10046 016c C0000000 		.4byte	.LFE43-.LFB43
 10047 0170 00000000 		.4byte	.LFB44
 10048 0174 06010000 		.4byte	.LFE44-.LFB44
 10049 0178 00000000 		.4byte	.LFB45
 10050 017c D2000000 		.4byte	.LFE45-.LFB45
 10051 0180 00000000 		.4byte	.LFB46
 10052 0184 4E010000 		.4byte	.LFE46-.LFB46
 10053 0188 00000000 		.4byte	.LFB47
 10054 018c 5A020000 		.4byte	.LFE47-.LFB47
 10055 0190 00000000 		.4byte	.LFB48
 10056 0194 F2000000 		.4byte	.LFE48-.LFB48
 10057 0198 00000000 		.4byte	.LFB49
 10058 019c 16010000 		.4byte	.LFE49-.LFB49
 10059 01a0 00000000 		.4byte	.LFB50
 10060 01a4 34000000 		.4byte	.LFE50-.LFB50
 10061 01a8 00000000 		.4byte	.LFB51
 10062 01ac 0E000000 		.4byte	.LFE51-.LFB51
 10063 01b0 00000000 		.4byte	.LFB52
 10064 01b4 16000000 		.4byte	.LFE52-.LFB52
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 209


 10065 01b8 00000000 		.4byte	.LFB53
 10066 01bc 16000000 		.4byte	.LFE53-.LFB53
 10067 01c0 00000000 		.4byte	.LFB54
 10068 01c4 58010000 		.4byte	.LFE54-.LFB54
 10069 01c8 00000000 		.4byte	.LFB55
 10070 01cc 58000000 		.4byte	.LFE55-.LFB55
 10071 01d0 00000000 		.4byte	.LFB56
 10072 01d4 42000000 		.4byte	.LFE56-.LFB56
 10073 01d8 00000000 		.4byte	.LFB57
 10074 01dc 38000000 		.4byte	.LFE57-.LFB57
 10075 01e0 00000000 		.4byte	.LFB58
 10076 01e4 7E000000 		.4byte	.LFE58-.LFB58
 10077 01e8 00000000 		.4byte	.LFB59
 10078 01ec 78000000 		.4byte	.LFE59-.LFB59
 10079 01f0 00000000 		.4byte	.LFB60
 10080 01f4 1E000000 		.4byte	.LFE60-.LFB60
 10081 01f8 00000000 		.4byte	.LFB61
 10082 01fc 26000000 		.4byte	.LFE61-.LFB61
 10083 0200 00000000 		.4byte	.LFB62
 10084 0204 24000000 		.4byte	.LFE62-.LFB62
 10085 0208 00000000 		.4byte	.LFB63
 10086 020c 5A000000 		.4byte	.LFE63-.LFB63
 10087 0210 00000000 		.4byte	.LFB64
 10088 0214 B0000000 		.4byte	.LFE64-.LFB64
 10089 0218 00000000 		.4byte	.LFB65
 10090 021c 1E000000 		.4byte	.LFE65-.LFB65
 10091 0220 00000000 		.4byte	.LFB66
 10092 0224 1E000000 		.4byte	.LFE66-.LFB66
 10093 0228 00000000 		.4byte	.LFB67
 10094 022c B4000000 		.4byte	.LFE67-.LFB67
 10095 0230 00000000 		.4byte	.LFB68
 10096 0234 68000000 		.4byte	.LFE68-.LFB68
 10097 0238 00000000 		.4byte	.LFB69
 10098 023c 2A000000 		.4byte	.LFE69-.LFB69
 10099 0240 00000000 		.4byte	.LFB70
 10100 0244 26000000 		.4byte	.LFE70-.LFB70
 10101 0248 00000000 		.4byte	.LFB71
 10102 024c 8A000000 		.4byte	.LFE71-.LFB71
 10103 0250 00000000 		.4byte	.LFB72
 10104 0254 00010000 		.4byte	.LFE72-.LFB72
 10105 0258 00000000 		.4byte	0
 10106 025c 00000000 		.4byte	0
 10107              		.section	.debug_ranges,"",%progbits
 10108              	.Ldebug_ranges0:
 10109 0000 00000000 		.4byte	.LFB0
 10110 0004 0E000000 		.4byte	.LFE0
 10111 0008 00000000 		.4byte	.LFB1
 10112 000c 0E000000 		.4byte	.LFE1
 10113 0010 00000000 		.4byte	.LFB2
 10114 0014 0C010000 		.4byte	.LFE2
 10115 0018 00000000 		.4byte	.LFB3
 10116 001c 0A010000 		.4byte	.LFE3
 10117 0020 00000000 		.4byte	.LFB4
 10118 0024 42000000 		.4byte	.LFE4
 10119 0028 00000000 		.4byte	.LFB5
 10120 002c 42000000 		.4byte	.LFE5
 10121 0030 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 210


 10122 0034 1E000000 		.4byte	.LFE6
 10123 0038 00000000 		.4byte	.LFB7
 10124 003c 1E000000 		.4byte	.LFE7
 10125 0040 00000000 		.4byte	.LFB8
 10126 0044 22000000 		.4byte	.LFE8
 10127 0048 00000000 		.4byte	.LFB9
 10128 004c 28000000 		.4byte	.LFE9
 10129 0050 00000000 		.4byte	.LFB10
 10130 0054 22000000 		.4byte	.LFE10
 10131 0058 00000000 		.4byte	.LFB11
 10132 005c 28000000 		.4byte	.LFE11
 10133 0060 00000000 		.4byte	.LFB12
 10134 0064 22000000 		.4byte	.LFE12
 10135 0068 00000000 		.4byte	.LFB13
 10136 006c 28000000 		.4byte	.LFE13
 10137 0070 00000000 		.4byte	.LFB14
 10138 0074 24000000 		.4byte	.LFE14
 10139 0078 00000000 		.4byte	.LFB15
 10140 007c 24000000 		.4byte	.LFE15
 10141 0080 00000000 		.4byte	.LFB16
 10142 0084 24000000 		.4byte	.LFE16
 10143 0088 00000000 		.4byte	.LFB17
 10144 008c 3A000000 		.4byte	.LFE17
 10145 0090 00000000 		.4byte	.LFB18
 10146 0094 40000000 		.4byte	.LFE18
 10147 0098 00000000 		.4byte	.LFB19
 10148 009c 3A000000 		.4byte	.LFE19
 10149 00a0 00000000 		.4byte	.LFB20
 10150 00a4 40000000 		.4byte	.LFE20
 10151 00a8 00000000 		.4byte	.LFB21
 10152 00ac 36000000 		.4byte	.LFE21
 10153 00b0 00000000 		.4byte	.LFB22
 10154 00b4 3A000000 		.4byte	.LFE22
 10155 00b8 00000000 		.4byte	.LFB23
 10156 00bc 40000000 		.4byte	.LFE23
 10157 00c0 00000000 		.4byte	.LFB24
 10158 00c4 3A000000 		.4byte	.LFE24
 10159 00c8 00000000 		.4byte	.LFB25
 10160 00cc 40000000 		.4byte	.LFE25
 10161 00d0 00000000 		.4byte	.LFB26
 10162 00d4 40000000 		.4byte	.LFE26
 10163 00d8 00000000 		.4byte	.LFB27
 10164 00dc 34000000 		.4byte	.LFE27
 10165 00e0 00000000 		.4byte	.LFB28
 10166 00e4 34000000 		.4byte	.LFE28
 10167 00e8 00000000 		.4byte	.LFB29
 10168 00ec 36000000 		.4byte	.LFE29
 10169 00f0 00000000 		.4byte	.LFB30
 10170 00f4 34000000 		.4byte	.LFE30
 10171 00f8 00000000 		.4byte	.LFB31
 10172 00fc 30000000 		.4byte	.LFE31
 10173 0100 00000000 		.4byte	.LFB32
 10174 0104 34000000 		.4byte	.LFE32
 10175 0108 00000000 		.4byte	.LFB33
 10176 010c 30000000 		.4byte	.LFE33
 10177 0110 00000000 		.4byte	.LFB34
 10178 0114 30000000 		.4byte	.LFE34
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 211


 10179 0118 00000000 		.4byte	.LFB35
 10180 011c 34000000 		.4byte	.LFE35
 10181 0120 00000000 		.4byte	.LFB36
 10182 0124 30000000 		.4byte	.LFE36
 10183 0128 00000000 		.4byte	.LFB37
 10184 012c 34000000 		.4byte	.LFE37
 10185 0130 00000000 		.4byte	.LFB38
 10186 0134 34000000 		.4byte	.LFE38
 10187 0138 00000000 		.4byte	.LFB39
 10188 013c 52000000 		.4byte	.LFE39
 10189 0140 00000000 		.4byte	.LFB40
 10190 0144 48000000 		.4byte	.LFE40
 10191 0148 00000000 		.4byte	.LFB41
 10192 014c 48000000 		.4byte	.LFE41
 10193 0150 00000000 		.4byte	.LFB42
 10194 0154 B4000000 		.4byte	.LFE42
 10195 0158 00000000 		.4byte	.LFB43
 10196 015c C0000000 		.4byte	.LFE43
 10197 0160 00000000 		.4byte	.LFB44
 10198 0164 06010000 		.4byte	.LFE44
 10199 0168 00000000 		.4byte	.LFB45
 10200 016c D2000000 		.4byte	.LFE45
 10201 0170 00000000 		.4byte	.LFB46
 10202 0174 4E010000 		.4byte	.LFE46
 10203 0178 00000000 		.4byte	.LFB47
 10204 017c 5A020000 		.4byte	.LFE47
 10205 0180 00000000 		.4byte	.LFB48
 10206 0184 F2000000 		.4byte	.LFE48
 10207 0188 00000000 		.4byte	.LFB49
 10208 018c 16010000 		.4byte	.LFE49
 10209 0190 00000000 		.4byte	.LFB50
 10210 0194 34000000 		.4byte	.LFE50
 10211 0198 00000000 		.4byte	.LFB51
 10212 019c 0E000000 		.4byte	.LFE51
 10213 01a0 00000000 		.4byte	.LFB52
 10214 01a4 16000000 		.4byte	.LFE52
 10215 01a8 00000000 		.4byte	.LFB53
 10216 01ac 16000000 		.4byte	.LFE53
 10217 01b0 00000000 		.4byte	.LFB54
 10218 01b4 58010000 		.4byte	.LFE54
 10219 01b8 00000000 		.4byte	.LFB55
 10220 01bc 58000000 		.4byte	.LFE55
 10221 01c0 00000000 		.4byte	.LFB56
 10222 01c4 42000000 		.4byte	.LFE56
 10223 01c8 00000000 		.4byte	.LFB57
 10224 01cc 38000000 		.4byte	.LFE57
 10225 01d0 00000000 		.4byte	.LFB58
 10226 01d4 7E000000 		.4byte	.LFE58
 10227 01d8 00000000 		.4byte	.LFB59
 10228 01dc 78000000 		.4byte	.LFE59
 10229 01e0 00000000 		.4byte	.LFB60
 10230 01e4 1E000000 		.4byte	.LFE60
 10231 01e8 00000000 		.4byte	.LFB61
 10232 01ec 26000000 		.4byte	.LFE61
 10233 01f0 00000000 		.4byte	.LFB62
 10234 01f4 24000000 		.4byte	.LFE62
 10235 01f8 00000000 		.4byte	.LFB63
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 212


 10236 01fc 5A000000 		.4byte	.LFE63
 10237 0200 00000000 		.4byte	.LFB64
 10238 0204 B0000000 		.4byte	.LFE64
 10239 0208 00000000 		.4byte	.LFB65
 10240 020c 1E000000 		.4byte	.LFE65
 10241 0210 00000000 		.4byte	.LFB66
 10242 0214 1E000000 		.4byte	.LFE66
 10243 0218 00000000 		.4byte	.LFB67
 10244 021c B4000000 		.4byte	.LFE67
 10245 0220 00000000 		.4byte	.LFB68
 10246 0224 68000000 		.4byte	.LFE68
 10247 0228 00000000 		.4byte	.LFB69
 10248 022c 2A000000 		.4byte	.LFE69
 10249 0230 00000000 		.4byte	.LFB70
 10250 0234 26000000 		.4byte	.LFE70
 10251 0238 00000000 		.4byte	.LFB71
 10252 023c 8A000000 		.4byte	.LFE71
 10253 0240 00000000 		.4byte	.LFB72
 10254 0244 00010000 		.4byte	.LFE72
 10255 0248 00000000 		.4byte	0
 10256 024c 00000000 		.4byte	0
 10257              		.section	.debug_line,"",%progbits
 10258              	.Ldebug_line0:
 10259 0000 1A090000 		.section	.debug_str,"MS",%progbits,1
 10259      02004200 
 10259      00000201 
 10259      FB0E0D00 
 10259      01010101 
 10260              	.LASF70:
 10261 0000 4554485F 		.ascii	"ETH_SetSocketDestIP\000"
 10261      53657453 
 10261      6F636B65 
 10261      74446573 
 10261      74495000 
 10262              	.LASF47:
 10263 0014 4554485F 		.ascii	"ETH_GetSubnetMask\000"
 10263      47657453 
 10263      75626E65 
 10263      744D6173 
 10263      6B00
 10264              	.LASF145:
 10265 0026 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ETH.c\000"
 10265      6E657261 
 10265      7465645F 
 10265      536F7572 
 10265      63655C50 
 10266              	.LASF10:
 10267 0045 75696E74 		.ascii	"uint16\000"
 10267      313600
 10268              	.LASF30:
 10269 004c 63726974 		.ascii	"crit\000"
 10269      00
 10270              	.LASF42:
 10271 0051 4554485F 		.ascii	"ETH_GetSourceMAC\000"
 10271      47657453 
 10271      6F757263 
 10271      654D4143 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 213


 10271      00
 10272              	.LASF103:
 10273 0062 4554485F 		.ascii	"ETH_ParseMAC\000"
 10273      50617273 
 10273      654D4143 
 10273      00
 10274              	.LASF128:
 10275 006f 54785369 		.ascii	"TxSize\000"
 10275      7A6500
 10276              	.LASF55:
 10277 0076 736F636B 		.ascii	"socket\000"
 10277      657400
 10278              	.LASF54:
 10279 007d 4554485F 		.ascii	"ETH_SetSocketRxMemSize\000"
 10279      53657453 
 10279      6F636B65 
 10279      7452784D 
 10279      656D5369 
 10280              	.LASF135:
 10281 0094 4554485F 		.ascii	"ETH_UdpReceive\000"
 10281      55647052 
 10281      65636569 
 10281      766500
 10282              	.LASF122:
 10283 00a3 4554485F 		.ascii	"ETH_TcpStartServer\000"
 10283      54637053 
 10283      74617274 
 10283      53657276 
 10283      657200
 10284              	.LASF136:
 10285 00b6 5061636B 		.ascii	"PacketSize\000"
 10285      65745369 
 10285      7A6500
 10286              	.LASF23:
 10287 00c1 4554485F 		.ascii	"ETH_SOCKET\000"
 10287      534F434B 
 10287      455400
 10288              	.LASF48:
 10289 00cc 4554485F 		.ascii	"ETH_SetSourceIP\000"
 10289      53657453 
 10289      6F757263 
 10289      65495000 
 10290              	.LASF126:
 10291 00dc 4554485F 		.ascii	"ETH_TcpDisconnect\000"
 10291      54637044 
 10291      6973636F 
 10291      6E6E6563 
 10291      7400
 10292              	.LASF96:
 10293 00ee 696E6465 		.ascii	"index\000"
 10293      7800
 10294              	.LASF7:
 10295 00f4 6C6F6E67 		.ascii	"long long unsigned int\000"
 10295      206C6F6E 
 10295      6720756E 
 10295      7369676E 
 10295      65642069 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 214


 10296              	.LASF31:
 10297 010b 4554485F 		.ascii	"ETH_ChipWrite\000"
 10297      43686970 
 10297      57726974 
 10297      6500
 10298              	.LASF26:
 10299 0119 61646472 		.ascii	"addr\000"
 10299      00
 10300              	.LASF17:
 10301 011e 50726F74 		.ascii	"Protocol\000"
 10301      6F636F6C 
 10301      00
 10302              	.LASF97:
 10303 0127 4554485F 		.ascii	"ETH_Start\000"
 10303      53746172 
 10303      7400
 10304              	.LASF118:
 10305 0131 4554485F 		.ascii	"ETH_SocketSend\000"
 10305      536F636B 
 10305      65745365 
 10305      6E6400
 10306              	.LASF95:
 10307 0140 67617465 		.ascii	"gateway\000"
 10307      77617900 
 10308              	.LASF132:
 10309 0148 4554485F 		.ascii	"ETH_TcpPrint\000"
 10309      54637050 
 10309      72696E74 
 10309      00
 10310              	.LASF65:
 10311 0155 4554485F 		.ascii	"ETH_GetSocketStatus\000"
 10311      47657453 
 10311      6F636B65 
 10311      74537461 
 10311      74757300 
 10312              	.LASF143:
 10313 0169 4554485F 		.ascii	"ETH_MAC\000"
 10313      4D414300 
 10314              	.LASF6:
 10315 0171 6C6F6E67 		.ascii	"long long int\000"
 10315      206C6F6E 
 10315      6720696E 
 10315      7400
 10316              	.LASF0:
 10317 017f 7369676E 		.ascii	"signed char\000"
 10317      65642063 
 10317      68617200 
 10318              	.LASF86:
 10319 018b 4554485F 		.ascii	"ETH_ProcessTxData\000"
 10319      50726F63 
 10319      65737354 
 10319      78446174 
 10319      6100
 10320              	.LASF146:
 10321 019d 433A5C55 		.ascii	"C:\\Users\\chuck.erhardt\\Documents\\GitHub\\PSoC-W"
 10321      73657273 
 10321      5C636875 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 215


 10321      636B2E65 
 10321      72686172 
 10322 01cb 35313030 		.ascii	"5100-Driver\\W5200Test_CustomPlatform.cydsn\000"
 10322      2D447269 
 10322      7665725C 
 10322      57353230 
 10322      30546573 
 10323              	.LASF38:
 10324 01f6 7278436F 		.ascii	"rxCount\000"
 10324      756E7400 
 10325              	.LASF19:
 10326 01fe 536F7572 		.ascii	"SourcePort\000"
 10326      6365506F 
 10326      727400
 10327              	.LASF100:
 10328 0209 64696769 		.ascii	"digit\000"
 10328      7400
 10329              	.LASF78:
 10330 020f 4554485F 		.ascii	"ETH_SetSocketRxWritePtr\000"
 10330      53657453 
 10330      6F636B65 
 10330      74527857 
 10330      72697465 
 10331              	.LASF46:
 10332 0227 4554485F 		.ascii	"ETH_SetSubnetMask\000"
 10332      53657453 
 10332      75626E65 
 10332      744D6173 
 10332      6B00
 10333              	.LASF73:
 10334 0239 4554485F 		.ascii	"ETH_SetSocketTxWritePtr\000"
 10334      53657453 
 10334      6F636B65 
 10334      74547857 
 10334      72697465 
 10335              	.LASF29:
 10336 0251 7478436F 		.ascii	"txCount\000"
 10336      756E7400 
 10337              	.LASF130:
 10338 0259 4554485F 		.ascii	"ETH_TcpReceive\000"
 10338      54637052 
 10338      65636569 
 10338      766500
 10339              	.LASF4:
 10340 0268 6C6F6E67 		.ascii	"long int\000"
 10340      20696E74 
 10340      00
 10341              	.LASF102:
 10342 0271 64696E64 		.ascii	"dindex\000"
 10342      657800
 10343              	.LASF28:
 10344 0278 74784C65 		.ascii	"txLen\000"
 10344      6E00
 10345              	.LASF9:
 10346 027e 75696E74 		.ascii	"uint8\000"
 10346      3800
 10347              	.LASF77:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 216


 10348 0284 4554485F 		.ascii	"ETH_GetSocketRxReadPtr\000"
 10348      47657453 
 10348      6F636B65 
 10348      74527852 
 10348      65616450 
 10349              	.LASF87:
 10350 029b 6F666673 		.ascii	"offset\000"
 10350      657400
 10351              	.LASF13:
 10352 02a2 646F7562 		.ascii	"double\000"
 10352      6C6500
 10353              	.LASF127:
 10354 02a9 4554485F 		.ascii	"ETH_TcpSend\000"
 10354      54637053 
 10354      656E6400 
 10355              	.LASF79:
 10356 02b5 4554485F 		.ascii	"ETH_SetSocketTxReadPtr\000"
 10356      53657453 
 10356      6F636B65 
 10356      74547852 
 10356      65616450 
 10357              	.LASF61:
 10358 02cc 4554485F 		.ascii	"ETH_SetSocketCommand\000"
 10358      53657453 
 10358      6F636B65 
 10358      74436F6D 
 10358      6D616E64 
 10359              	.LASF104:
 10360 02e1 6D616353 		.ascii	"macString\000"
 10360      7472696E 
 10360      6700
 10361              	.LASF11:
 10362 02eb 75696E74 		.ascii	"uint32\000"
 10362      333200
 10363              	.LASF72:
 10364 02f2 4554485F 		.ascii	"ETH_GetSocketTxFree\000"
 10364      47657453 
 10364      6F636B65 
 10364      74547846 
 10364      72656500 
 10365              	.LASF69:
 10366 0306 4554485F 		.ascii	"ETH_SetSocketDestMAC\000"
 10366      53657453 
 10366      6F636B65 
 10366      74446573 
 10366      744D4143 
 10367              	.LASF137:
 10368 031b 5061636B 		.ascii	"PacketHeader\000"
 10368      65744865 
 10368      61646572 
 10368      00
 10369              	.LASF68:
 10370 0328 706F7274 		.ascii	"port\000"
 10370      00
 10371              	.LASF110:
 10372 032d 74656D70 		.ascii	"temp\000"
 10372      00
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 217


 10373              	.LASF57:
 10374 0332 4554485F 		.ascii	"ETH_GetSocketRxMemSize\000"
 10374      47657453 
 10374      6F636B65 
 10374      7452784D 
 10374      656D5369 
 10375              	.LASF147:
 10376 0349 4554485F 		.ascii	"ETH_GetIP\000"
 10376      47657449 
 10376      5000
 10377              	.LASF50:
 10378 0353 4554485F 		.ascii	"ETH_SetMode\000"
 10378      5365744D 
 10378      6F646500 
 10379              	.LASF8:
 10380 035f 756E7369 		.ascii	"unsigned int\000"
 10380      676E6564 
 10380      20696E74 
 10380      00
 10381              	.LASF91:
 10382 036c 4554485F 		.ascii	"ETH_ProcessRxData\000"
 10382      50726F63 
 10382      65737352 
 10382      78446174 
 10382      6100
 10383              	.LASF44:
 10384 037e 4554485F 		.ascii	"ETH_ChipRead16\000"
 10384      43686970 
 10384      52656164 
 10384      313600
 10385              	.LASF58:
 10386 038d 4554485F 		.ascii	"ETH_SetSocketTxMemSize\000"
 10386      53657453 
 10386      6F636B65 
 10386      7454784D 
 10386      656D5369 
 10387              	.LASF90:
 10388 03a4 506F696E 		.ascii	"PointerOffset\000"
 10388      7465724F 
 10388      66667365 
 10388      7400
 10389              	.LASF5:
 10390 03b2 6C6F6E67 		.ascii	"long unsigned int\000"
 10390      20756E73 
 10390      69676E65 
 10390      6420696E 
 10390      7400
 10391              	.LASF81:
 10392 03c4 74696D65 		.ascii	"timeout\000"
 10392      6F757400 
 10393              	.LASF94:
 10394 03cc 7375626E 		.ascii	"subnet\000"
 10394      657400
 10395              	.LASF56:
 10396 03d3 73697A65 		.ascii	"size\000"
 10396      00
 10397              	.LASF3:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 218


 10398 03d8 73686F72 		.ascii	"short unsigned int\000"
 10398      7420756E 
 10398      7369676E 
 10398      65642069 
 10398      6E7400
 10399              	.LASF125:
 10400 03eb 4554485F 		.ascii	"ETH_TcpConnected\000"
 10400      54637043 
 10400      6F6E6E65 
 10400      63746564 
 10400      00
 10401              	.LASF32:
 10402 03fc 4554485F 		.ascii	"ETH_ChipRead\000"
 10402      43686970 
 10402      52656164 
 10402      00
 10403              	.LASF129:
 10404 0409 46726565 		.ascii	"FreeSpace\000"
 10404      53706163 
 10404      6500
 10405              	.LASF114:
 10406 0413 4554485F 		.ascii	"ETH_SocketOpen\000"
 10406      536F636B 
 10406      65744F70 
 10406      656E00
 10407              	.LASF131:
 10408 0422 52785369 		.ascii	"RxSize\000"
 10408      7A6500
 10409              	.LASF117:
 10410 0429 4554485F 		.ascii	"ETH_SocketEstablished\000"
 10410      536F636B 
 10410      65744573 
 10410      7461626C 
 10410      69736865 
 10411              	.LASF133:
 10412 043f 4554485F 		.ascii	"ETH_UdpOpen\000"
 10412      5564704F 
 10412      70656E00 
 10413              	.LASF141:
 10414 044b 4554485F 		.ascii	"ETH_SocketConfig\000"
 10414      536F636B 
 10414      6574436F 
 10414      6E666967 
 10414      00
 10415              	.LASF120:
 10416 045c 4554485F 		.ascii	"ETH_SocketRxDataWaiting\000"
 10416      536F636B 
 10416      65745278 
 10416      44617461 
 10416      57616974 
 10417              	.LASF82:
 10418 0474 4554485F 		.ascii	"ETH_GetTxFreeSize\000"
 10418      47657454 
 10418      78467265 
 10418      6553697A 
 10418      6500
 10419              	.LASF36:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 219


 10420 0486 74784279 		.ascii	"txBytes\000"
 10420      74657300 
 10421              	.LASF98:
 10422 048e 4554485F 		.ascii	"ETH_ParseIP\000"
 10422      50617273 
 10422      65495000 
 10423              	.LASF124:
 10424 049a 4554485F 		.ascii	"ETH_TcpConnect\000"
 10424      54637043 
 10424      6F6E6E65 
 10424      637400
 10425              	.LASF74:
 10426 04a9 4554485F 		.ascii	"ETH_GetSocketTxWritePtr\000"
 10426      47657453 
 10426      6F636B65 
 10426      74547857 
 10426      72697465 
 10427              	.LASF49:
 10428 04c1 4554485F 		.ascii	"ETH_GetSourceIP\000"
 10428      47657453 
 10428      6F757263 
 10428      65495000 
 10429              	.LASF40:
 10430 04d1 62696756 		.ascii	"bigVal\000"
 10430      616C00
 10431              	.LASF16:
 10432 04d8 73697A65 		.ascii	"sizetype\000"
 10432      74797065 
 10432      00
 10433              	.LASF21:
 10434 04e1 54784275 		.ascii	"TxBufferSize\000"
 10434      66666572 
 10434      53697A65 
 10434      00
 10435              	.LASF138:
 10436 04ee 5350495F 		.ascii	"SPI_initVar\000"
 10436      696E6974 
 10436      56617200 
 10437              	.LASF34:
 10438 04fa 61646472 		.ascii	"address\000"
 10438      65737300 
 10439              	.LASF121:
 10440 0502 4554485F 		.ascii	"ETH_TcpOpen\000"
 10440      5463704F 
 10440      70656E00 
 10441              	.LASF18:
 10442 050e 536F636B 		.ascii	"SocketFlags\000"
 10442      6574466C 
 10442      61677300 
 10443              	.LASF115:
 10444 051a 4554485F 		.ascii	"ETH_SocketClose\000"
 10444      536F636B 
 10444      6574436C 
 10444      6F736500 
 10445              	.LASF112:
 10446 052a 4554485F 		.ascii	"ETH_SetMAC\000"
 10446      5365744D 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 220


 10446      414300
 10447              	.LASF106:
 10448 0535 4554485F 		.ascii	"ETH_StringMAC\000"
 10448      53747269 
 10448      6E674D41 
 10448      4300
 10449              	.LASF12:
 10450 0543 666C6F61 		.ascii	"float\000"
 10450      7400
 10451              	.LASF107:
 10452 0549 4554485F 		.ascii	"ETH_StringIP\000"
 10452      53747269 
 10452      6E674950 
 10452      00
 10453              	.LASF108:
 10454 0556 69704279 		.ascii	"ipBytes\000"
 10454      74657300 
 10455              	.LASF59:
 10456 055e 4554485F 		.ascii	"ETH_GetSocketTxMemSize\000"
 10456      47657453 
 10456      6F636B65 
 10456      7454784D 
 10456      656D5369 
 10457              	.LASF93:
 10458 0575 4554485F 		.ascii	"ETH_Init\000"
 10458      496E6974 
 10458      00
 10459              	.LASF144:
 10460 057e 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 10460      4320342E 
 10460      372E3320 
 10460      32303133 
 10460      30333132 
 10461 05b1 616E6368 		.ascii	"anch revision 196615]\000"
 10461      20726576 
 10461      6973696F 
 10461      6E203139 
 10461      36363135 
 10462              	.LASF89:
 10463 05c7 62617365 		.ascii	"base\000"
 10463      00
 10464              	.LASF1:
 10465 05cc 756E7369 		.ascii	"unsigned char\000"
 10465      676E6564 
 10465      20636861 
 10465      7200
 10466              	.LASF84:
 10467 05da 7365636F 		.ascii	"second\000"
 10467      6E6400
 10468              	.LASF67:
 10469 05e1 4554485F 		.ascii	"ETH_SetSocketSourcePort\000"
 10469      53657453 
 10469      6F636B65 
 10469      74536F75 
 10469      72636550 
 10470              	.LASF2:
 10471 05f9 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 221


 10471      7420696E 
 10471      7400
 10472              	.LASF80:
 10473 0603 4554485F 		.ascii	"ETH_ExecuteSocketCommand\000"
 10473      45786563 
 10473      75746553 
 10473      6F636B65 
 10473      74436F6D 
 10474              	.LASF101:
 10475 061c 636F756E 		.ascii	"counter\000"
 10475      74657200 
 10476              	.LASF75:
 10477 0624 4554485F 		.ascii	"ETH_GetSocketRxSize\000"
 10477      47657453 
 10477      6F636B65 
 10477      74527853 
 10477      697A6500 
 10478              	.LASF45:
 10479 0638 4554485F 		.ascii	"ETH_GetGatewayAddress\000"
 10479      47657447 
 10479      61746577 
 10479      61794164 
 10479      64726573 
 10480              	.LASF140:
 10481 064e 4554485F 		.ascii	"ETH_SOCKET_RX_BASE\000"
 10481      534F434B 
 10481      45545F52 
 10481      585F4241 
 10481      534500
 10482              	.LASF63:
 10483 0661 4554485F 		.ascii	"ETH_SetSocketIR\000"
 10483      53657453 
 10483      6F636B65 
 10483      74495200 
 10484              	.LASF99:
 10485 0671 69705374 		.ascii	"ipString\000"
 10485      72696E67 
 10485      00
 10486              	.LASF20:
 10487 067a 53657276 		.ascii	"ServerFlag\000"
 10487      6572466C 
 10487      616700
 10488              	.LASF116:
 10489 0685 4554485F 		.ascii	"ETH_SocketProcessConnections\000"
 10489      536F636B 
 10489      65745072 
 10489      6F636573 
 10489      73436F6E 
 10490              	.LASF139:
 10491 06a2 4554485F 		.ascii	"ETH_SOCKET_TX_BASE\000"
 10491      534F434B 
 10491      45545F54 
 10491      585F4241 
 10491      534500
 10492              	.LASF83:
 10493 06b5 66697273 		.ascii	"first\000"
 10493      7400
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 222


 10494              	.LASF27:
 10495 06bb 6C656E67 		.ascii	"length\000"
 10495      746800
 10496              	.LASF14:
 10497 06c2 63686172 		.ascii	"char\000"
 10497      00
 10498              	.LASF51:
 10499 06c7 6D6F6465 		.ascii	"mode\000"
 10499      00
 10500              	.LASF24:
 10501 06cc 4554485F 		.ascii	"ETH_ChipSelect\000"
 10501      43686970 
 10501      53656C65 
 10501      637400
 10502              	.LASF123:
 10503 06db 4554485F 		.ascii	"ETH_TcpStartServerWait\000"
 10503      54637053 
 10503      74617274 
 10503      53657276 
 10503      65725761 
 10504              	.LASF22:
 10505 06f2 52784275 		.ascii	"RxBufferSize\000"
 10505      66666572 
 10505      53697A65 
 10505      00
 10506              	.LASF62:
 10507 06ff 4554485F 		.ascii	"ETH_GetSocketCommand\000"
 10507      47657453 
 10507      6F636B65 
 10507      74436F6D 
 10507      6D616E64 
 10508              	.LASF119:
 10509 0714 4554485F 		.ascii	"ETH_SocketSendMac\000"
 10509      536F636B 
 10509      65745365 
 10509      6E644D61 
 10509      6300
 10510              	.LASF41:
 10511 0726 4554485F 		.ascii	"ETH_SetSourceMAC\000"
 10511      53657453 
 10511      6F757263 
 10511      654D4143 
 10511      00
 10512              	.LASF88:
 10513 0737 62756666 		.ascii	"buffer\000"
 10513      657200
 10514              	.LASF64:
 10515 073e 4554485F 		.ascii	"ETH_GetSocketIR\000"
 10515      47657453 
 10515      6F636B65 
 10515      74495200 
 10516              	.LASF109:
 10517 074e 776F726B 		.ascii	"work\000"
 10517      00
 10518              	.LASF39:
 10519 0753 4554485F 		.ascii	"ETH_ChipWrite16\000"
 10519      43686970 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 223


 10519      57726974 
 10519      65313600 
 10520              	.LASF85:
 10521 0763 4554485F 		.ascii	"ETH_GetRxSize\000"
 10521      47657452 
 10521      7853697A 
 10521      6500
 10522              	.LASF43:
 10523 0771 4554485F 		.ascii	"ETH_SetGatewayAddress\000"
 10523      53657447 
 10523      61746577 
 10523      61794164 
 10523      64726573 
 10524              	.LASF52:
 10525 0787 4554485F 		.ascii	"ETH_GetMode\000"
 10525      4765744D 
 10525      6F646500 
 10526              	.LASF111:
 10527 0793 4554485F 		.ascii	"ETH_SetIP\000"
 10527      53657449 
 10527      5000
 10528              	.LASF53:
 10529 079d 4554485F 		.ascii	"ETH_SetIR\000"
 10529      53657449 
 10529      5200
 10530              	.LASF134:
 10531 07a7 4554485F 		.ascii	"ETH_UdpSend\000"
 10531      55647053 
 10531      656E6400 
 10532              	.LASF37:
 10533 07b3 64756D70 		.ascii	"dump\000"
 10533      00
 10534              	.LASF66:
 10535 07b8 73746174 		.ascii	"status\000"
 10535      757300
 10536              	.LASF113:
 10537 07bf 4554485F 		.ascii	"ETH_GetMAC\000"
 10537      4765744D 
 10537      414300
 10538              	.LASF92:
 10539 07ca 666C6167 		.ascii	"flags\000"
 10539      7300
 10540              	.LASF142:
 10541 07d0 4554485F 		.ascii	"ETH_SubnetMask\000"
 10541      5375626E 
 10541      65744D61 
 10541      736B00
 10542              	.LASF60:
 10543 07df 4554485F 		.ascii	"ETH_SetSocketMode\000"
 10543      53657453 
 10543      6F636B65 
 10543      744D6F64 
 10543      6500
 10544              	.LASF15:
 10545 07f1 63797374 		.ascii	"cystatus\000"
 10545      61747573 
 10545      00
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\ccNGEOBX.s 			page 224


 10546              	.LASF33:
 10547 07fa 7278496E 		.ascii	"rxIndex\000"
 10547      64657800 
 10548              	.LASF76:
 10549 0802 4554485F 		.ascii	"ETH_SetSocketRxReadPtr\000"
 10549      53657453 
 10549      6F636B65 
 10549      74527852 
 10549      65616450 
 10550              	.LASF35:
 10551 0819 72784C65 		.ascii	"rxLen\000"
 10551      6E00
 10552              	.LASF25:
 10553 081f 4554485F 		.ascii	"ETH_ChipDeSelect\000"
 10553      43686970 
 10553      44655365 
 10553      6C656374 
 10553      00
 10554              	.LASF105:
 10555 0830 72657375 		.ascii	"result\000"
 10555      6C7400
 10556              	.LASF71:
 10557 0837 4554485F 		.ascii	"ETH_SetSocketDestPort\000"
 10557      53657453 
 10557      6F636B65 
 10557      74446573 
 10557      74506F72 
 10558              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
